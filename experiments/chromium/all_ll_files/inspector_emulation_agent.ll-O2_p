; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_emulation_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_emulation_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.258 = type { double }
%union.anon.263 = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1277", i32, [4 x i8], %"class.std::__1::unique_ptr.1415", %"class.std::__1::unique_ptr.1415", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1426", %"class.std::__1::unique_ptr.1432", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1444", %"class.std::__1::unique_ptr.1450", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.757", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1280", %"class.std::__1::unique_ptr.1286", %"class.std::__1::unique_ptr.1292", %"class.std::__1::unique_ptr.1298", %"class.std::__1::unique_ptr.1304", %"class.std::__1::unique_ptr.1310", %"class.std::__1::unique_ptr.1321", %"class.std::__1::unique_ptr.1328", %"class.std::__1::unique_ptr.1328", %"class.std::__1::unique_ptr.1335", %"class.std::__1::unique_ptr.1342", %"class.std::__1::unique_ptr.1349", %"class.std::__1::unique_ptr.1349", %"class.std::__1::unique_ptr.1356", %"class.std::__1::unique_ptr.1363", %"class.std::__1::unique_ptr.1370", %"class.std::__1::unique_ptr.1395", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1280" = type { %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1313" = type { %"struct.std::__1::__atomic_base.1314" }
%"struct.std::__1::__atomic_base.1314" = type { %"struct.std::__1::__atomic_base.1315" }
%"struct.std::__1::__atomic_base.1315" = type { %"struct.std::__1::__cxx_atomic_impl.1316" }
%"struct.std::__1::__cxx_atomic_impl.1316" = type { %"struct.std::__1::__cxx_atomic_base_impl.1317" }
%"struct.std::__1::__cxx_atomic_base_impl.1317" = type { i64 }
%"class.std::__1::unique_ptr.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.blink::Worklist.1324"* }
%"class.blink::Worklist.1324" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::Worklist.1331"* }
%"class.blink::Worklist.1331" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::Worklist.1338"* }
%"class.blink::Worklist.1338" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1342" = type { %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"class.blink::Worklist.1345"* }
%"class.blink::Worklist.1345" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1349" = type { %"class.std::__1::__compressed_pair.1350" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.blink::Worklist.1352"* }
%"class.blink::Worklist.1352" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::Worklist.1359"* }
%"class.blink::Worklist.1359" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1363" = type { %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.blink::Worklist.1366"* }
%"class.blink::Worklist.1366" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1313" }
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1373", %"class.std::__1::__compressed_pair.1381", %"class.std::__1::__compressed_pair.1386", %"class.std::__1::__compressed_pair.1388", [4 x i8] }>
%"class.std::__1::unique_ptr.1373" = type { %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375", %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { i64 }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { float }
%"class.std::__1::unique_ptr.1395" = type { %"class.std::__1::__compressed_pair.1396" }
%"class.std::__1::__compressed_pair.1396" = type { %"struct.std::__1::__compressed_pair_elem.1397" }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1398", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1407" }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409" }
%"class.WTF::VectorBufferBase.1409" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1415" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.std::__1::pair.1425"*, i32, i32 }
%"struct.std::__1::pair.1425" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1426" = type { %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1438" }
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1324"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1331"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1338"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1345"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1352"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1686", i64 }
%"class.std::__1::vector.1686" = type { %"class.std::__1::__vector_base.1687" }
%"class.std::__1::__vector_base.1687" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1688" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1688" = type { %"struct.std::__1::__compressed_pair_elem.1689" }
%"struct.std::__1::__compressed_pair_elem.1689" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1444" = type { %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1456 }
%class.scoped_refptr.1456 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.757" = type { %"struct.std::__1::__atomic_base.758" }
%"struct.std::__1::__atomic_base.758" = type { %"struct.std::__1::__cxx_atomic_impl.759" }
%"struct.std::__1::__cxx_atomic_impl.759" = type { %"struct.std::__1::__cxx_atomic_base_impl.760" }
%"struct.std::__1::__cxx_atomic_base_impl.760" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.581" }
%"struct.std::__1::atomic.581" = type { %"struct.std::__1::__atomic_base.582" }
%"struct.std::__1::__atomic_base.582" = type { %"struct.std::__1::__atomic_base.583" }
%"struct.std::__1::__atomic_base.583" = type { %"struct.std::__1::__cxx_atomic_impl.584" }
%"struct.std::__1::__cxx_atomic_impl.584" = type { %"struct.std::__1::__cxx_atomic_base_impl.585" }
%"struct.std::__1::__cxx_atomic_base_impl.585" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InspectorEmulationAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", %"class.base::TimeTicks", %"class.blink::HeapVector", %"class.std::__1::unique_ptr.243", %"class.absl::optional.249", i8, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField", %"class.absl::optional.275", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::MapField.294" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Emulation::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Emulation::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1066", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2267", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.2263", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.2263" = type { %"class.blink::MemberBase.2264" }
%"class.blink::MemberBase.2264" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.2259", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.2259" = type { %"class.blink::MemberBase.2260" }
%"class.blink::MemberBase.2260" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.2255", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.2255" = type { %"class.blink::MemberBase.2256" }
%"class.blink::MemberBase.2256" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.2251", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.2251" = type { %"class.blink::MemberBase.2252" }
%"class.blink::MemberBase.2252" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.2247", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.2247" = type { %"class.blink::MemberBase.2248" }
%"class.blink::MemberBase.2248" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.2243", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.2243" = type { %"class.blink::MemberBase.2244" }
%"class.blink::MemberBase.2244" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.2239", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.2235", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.2235" = type { %"class.blink::MemberBase.2236" }
%"class.blink::MemberBase.2236" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.1070", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.2229", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.2229" = type { %"class.blink::MemberBase.2230" }
%"class.blink::MemberBase.2230" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.2225", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.2221", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.2217", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.2213", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.2209", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.2209" = type { %"class.blink::MemberBase.2210" }
%"class.blink::MemberBase.2210" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.2205", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.2206" }
%"class.blink::MemberBase.2206" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.1072", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.1064", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Emulation::Frontend"* }
%"class.blink::protocol::Emulation::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::WebLocalFrameImpl"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.237" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.blink::Member.240"*, i32, i32 }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.302", %"class.blink::Member.313", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.531", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.659, %"class.WTF::AtomicString", i32, %"class.absl::optional.420", %class.scoped_refptr.660, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.385", i8, %"class.absl::optional.392", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.661", %"class.blink::Member.663", %"class.blink::Member.735", %"class.blink::Member.737", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote", %class.scoped_refptr.714, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.847", %"class.std::__1::unique_ptr.397", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.859", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.864, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.878, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.879", %"class.blink::Member.894", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.905", %"class.WTF::Vector.335", i8, i8, i8, %"class.blink::WebVector.520", %"class.blink::WebVector.520", %"class.mojo::Remote.910" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.302" = type { %"class.WTF::VectorBuffer.303" }
%"class.WTF::VectorBuffer.303" = type { %"class.WTF::VectorBufferBase.304" }
%"class.WTF::VectorBufferBase.304" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.385", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.392", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.397", %"class.base::UnguessableToken", %"class.blink::WebVector.403", %"class.base::TickClock"*, %"class.blink::WebVector.412", %"class.absl::optional.420", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.433", %"class.blink::WebVector.425", i8, %"class.blink::WebVector.459", i8, %"class.std::__1::unique_ptr.467", %"class.blink::WebVector.520", %"class.blink::WebVector.520" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.319" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.380" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.321", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.391", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.391" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.318" }
%"class.blink::WebPrivatePtr.318" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.403" = type { %"class.std::__1::vector.404" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.std::__1::unique_ptr.406"*, %"class.std::__1::unique_ptr.406"*, %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::unique_ptr.406" = type opaque
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::unique_ptr.406"* }
%"class.blink::WebVector.412" = type { %"class.std::__1::vector.413" }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { i32*, i32*, %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.433" = type { %"class.absl::optional_internal::optional_data.434" }
%"class.absl::optional_internal::optional_data.434" = type { %"class.absl::optional_internal::optional_data_base.435" }
%"class.absl::optional_internal::optional_data_base.435" = type { %"class.absl::optional_internal::optional_data_dtor_base.436" }
%"class.absl::optional_internal::optional_data_dtor_base.436" = type { i8, [7 x i8], %union.anon.437 }
%union.anon.437 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.425" = type { %"class.std::__1::vector.426" }
%"class.std::__1::vector.426" = type { %"class.std::__1::__vector_base.427" }
%"class.std::__1::__vector_base.427" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.459" = type { %"class.std::__1::vector.460" }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { i32*, i32*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { i32* }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.470" }
%"class.blink::WebVector.470" = type { %"class.std::__1::vector.471" }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.511" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.473", %"class.blink::WebVector.481", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.425", i32, [4 x i8], %"class.absl::optional.506", %"class.blink::WebVector.425" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.473" = type { %"class.std::__1::vector.474" }
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.476" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.481" = type { %"class.std::__1::vector.482" }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.501" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.484", %"class.blink::WebVector.425", %"class.blink::WebVector.492", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.484" = type { %"class.std::__1::vector.485" }
%"class.std::__1::vector.485" = type { %"class.std::__1::__vector_base.486" }
%"class.std::__1::__vector_base.486" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.492" = type { %"class.std::__1::vector.493" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.496" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.495" }
%"class.blink::WebVector.495" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i8* }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.506" = type { %"class.absl::optional_internal::optional_data.507" }
%"class.absl::optional_internal::optional_data.507" = type { %"class.absl::optional_internal::optional_data_base.508" }
%"class.absl::optional_internal::optional_data_base.508" = type { %"class.absl::optional_internal::optional_data_dtor_base.509" }
%"class.absl::optional_internal::optional_data_dtor_base.509" = type { i8, [7 x i8], %union.anon.510 }
%union.anon.510 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.425", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.534", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.534" = type { %"class.std::__1::unique_ptr.535" }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.538" }
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { %"class.mojo::StructPtr.541"*, i32, i32 }
%"class.mojo::StructPtr.541" = type { %"class.std::__1::unique_ptr.542" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.545", %"class.WTF::HashMap.552", %"class.WTF::HashMap.557", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.335", i32, %"class.mojo::StructPtr.562", %"class.WTF::Vector.335" }
%"class.mojo::StructPtr.545" = type { %"class.std::__1::unique_ptr.546" }
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.WTF::HashMap.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.562" = type { %"class.std::__1::unique_ptr.563" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.335", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.650" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.577", i32 }>
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.352", %"class.absl::optional.586", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.606", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.636", i64, %"class.base::OnceCallback.600", %"class.base::OnceCallback.645", i8, %class.scoped_refptr.591, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.646" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.580 }
%class.scoped_refptr.580 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.581" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.352" = type { %"class.absl::optional_internal::optional_data.353" }
%"class.absl::optional_internal::optional_data.353" = type { %"class.absl::optional_internal::optional_data_base.354" }
%"class.absl::optional_internal::optional_data_base.354" = type { %"class.absl::optional_internal::optional_data_dtor_base.355" }
%"class.absl::optional_internal::optional_data_dtor_base.355" = type { i8, %union.anon.356 }
%union.anon.356 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.586" = type { %"class.absl::optional_internal::optional_data.587" }
%"class.absl::optional_internal::optional_data.587" = type { %"class.absl::optional_internal::optional_data_base.588" }
%"class.absl::optional_internal::optional_data_base.588" = type { %"class.absl::optional_internal::optional_data_dtor_base.589" }
%"class.absl::optional_internal::optional_data_dtor_base.589" = type { i8, %union.anon.590 }
%union.anon.590 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.600" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.591, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.593 }
%class.scoped_refptr.593 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.594", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.594" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.595" }
%"struct.std::__1::atomic.595" = type { %"struct.std::__1::__atomic_base.596" }
%"struct.std::__1::__atomic_base.596" = type { %"struct.std::__1::__atomic_base.597" }
%"struct.std::__1::__atomic_base.597" = type { %"struct.std::__1::__cxx_atomic_impl.598" }
%"struct.std::__1::__cxx_atomic_impl.598" = type { %"struct.std::__1::__cxx_atomic_base_impl.599" }
%"struct.std::__1::__cxx_atomic_base_impl.599" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2183", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.591, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2183" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.609", %class.scoped_refptr.610 }
%"class.base::RepeatingCallback.609" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.610 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.611", [4 x i8] }>
%"class.base::RefCountedThreadSafe.611" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.621", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.627" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.627" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.std::__1::map.636" = type { %"class.std::__1::__tree.637" }
%"class.std::__1::__tree.637" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.638", %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.base::OnceCallback.600" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.645" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.591 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.592" }>
%"class.base::RefCountedThreadSafe.592" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.600" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.646" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.659 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.420" = type { %"class.absl::optional_internal::optional_data.421" }
%"class.absl::optional_internal::optional_data.421" = type { %"class.absl::optional_internal::optional_data_base.422" }
%"class.absl::optional_internal::optional_data_base.422" = type { %"class.absl::optional_internal::optional_data_dtor_base.423" }
%"class.absl::optional_internal::optional_data_dtor_base.423" = type { i8, %union.anon.424 }
%union.anon.424 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.425", %"class.blink::WebString", %"class.blink::WebVector.425", %"class.blink::WebVector.425" }
%class.scoped_refptr.660 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.372", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.660 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.372" = type { %"class.absl::optional_internal::optional_data.373" }
%"class.absl::optional_internal::optional_data.373" = type { %"class.absl::optional_internal::optional_data_base.374" }
%"class.absl::optional_internal::optional_data_base.374" = type { %"class.absl::optional_internal::optional_data_dtor_base.375" }
%"class.absl::optional_internal::optional_data_dtor_base.375" = type { i8, %union.anon.376 }
%union.anon.376 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.392" = type { %"class.absl::optional_internal::optional_data.393" }
%"class.absl::optional_internal::optional_data.393" = type { %"class.absl::optional_internal::optional_data_base.394" }
%"class.absl::optional_internal::optional_data_base.394" = type { %"class.absl::optional_internal::optional_data_dtor_base.395" }
%"class.absl::optional_internal::optional_data_dtor_base.395" = type { i8, %union.anon.396 }
%union.anon.396 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.438", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.447" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.440", i8, i8, [6 x i8] }>
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.442" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.372" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.284 }
%union.anon.284 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.452" }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.454" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.992", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1006", %"class.blink::FrameLoader", %"class.blink::Member.1025", %"class.blink::Member.1027", %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.blink::Member.1059", %"class.blink::Member.1061", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.1063, %"class.blink::Member.1064", %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.blink::Member.1072", %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1080", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1094", %"class.std::__1::unique_ptr.1095", %"class.absl::optional.362", i32, [4 x i8], %"class.std::__1::unique_ptr.1101", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1109", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1114", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1119", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.blink::Member.1128", %"class.mojo::StructPtr.1131", %"class.blink::Member.1140", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1142", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.922", %"class.blink::Member.924", %"class.blink::Member.926", i8, i32, i8, i32, %"class.blink::Member.970", %"class.blink::Member.951", %"class.blink::FrameLifecycle", %"class.blink::Member.920", %"class.blink::Member.920", %"class.blink::Member.920", %"class.blink::Member.920", %"class.blink::Member.920", %"class.blink::Member.920", %"class.blink::Member.661", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.972", i8, %"class.base::UnguessableToken", %"class.absl::optional.974", %"class.absl::optional.362", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.920", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2048", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.920", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2074", %"class.blink::Member.2078", %"class.blink::Member.2080", %"class.blink::Member.2084", %"class.blink::Member.2086", %"class.blink::Member.2088", %"class.blink::Member.2099", %"class.blink::Member.2101", %"class.blink::HeapObserverSet.2103", %"class.blink::Member.2111", %"class.blink::Member.2113", %"class.blink::Member.2115", %"class.blink::Member.2117", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.blink::Member.2125", %"class.blink::Member.2127", %"class.blink::Member.2129", %"class.blink::Member.2131", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2156", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2163", %"class.blink::Member.922", %"class.blink::Member.922", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2171", %"class.std::__1::unique_ptr.2177", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2048" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2049" }
%"class.blink::HeapHashMap.2049" = type { %"class.WTF::HashMap.2052" }
%"class.WTF::HashMap.2052" = type { %"class.WTF::HashTable.2053" }
%"class.WTF::HashTable.2053" = type <{ %"struct.WTF::KeyValuePair.2055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2055" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2056" }
%"class.std::__1::unique_ptr.2056" = type { %"class.std::__1::__compressed_pair.2057" }
%"class.std::__1::__compressed_pair.2057" = type { %"struct.std::__1::__compressed_pair_elem.2058" }
%"struct.std::__1::__compressed_pair_elem.2058" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.WTF::HashMap.2059", %"class.std::__1::unique_ptr.2064" }
%"class.WTF::HashMap.2059" = type { %"class.WTF::HashTable.2060" }
%"class.WTF::HashTable.2060" = type <{ %"struct.WTF::KeyValuePair.2063"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2063" = type opaque
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.WTF::Vector.2067"* }
%"class.WTF::Vector.2067" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.922", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1672", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1672" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1029", %"class.blink::Member.1031", %"class.blink::Member.1029", %"class.blink::Member.1029", %"class.blink::Member.1033" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1147", %"class.blink::Member.1149", %"class.blink::Member.1031", %"class.blink::Member.1151", %"class.blink::Member.1151", %"class.blink::Member.1173", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1182", %"class.blink::HeapVector.1184" }
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1029", %"class.blink::Member.1029" }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1227", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1235", %"class.WTF::Vector.1235", i8, i32, %"class.blink::Member.1240", %"class.blink::Member.1242", %"class.blink::Member.1244", %"class.blink::Member.735", %"class.blink::Member.1246", %"class.blink::Member.1248", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1250", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1256", %"class.blink::Member.1258", %"class.blink::Member.1190", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1260", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1166", %"class.blink::Member.1027", %"class.blink::Member.1462", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::UserActionElementSet", %"class.blink::Member.1471", double, double, i64, i64, %"class.blink::HeapHashSet.1473", %"class.blink::HeapHashSet.1480", i16, i8, %"class.blink::Member.1487", %"class.blink::Member.1489", %"class.blink::Member.1491", %"class.blink::Member.1493", %"class.blink::TextLinkColors", %"class.blink::Member.1495", i8, [7 x i8], %"class.blink::HeapHashMap.1497", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1027", %"class.WTF::Vector.1504", %"class.blink::Member.1509", %"class.blink::Member.1513", i8, %"class.blink::Member.1027", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1515", %"class.blink::HeapVector.1517", %"class.std::__1::unique_ptr.1525", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1531", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1544", %"class.WTF::Vector.1546", i8, i8, %"class.std::__1::unique_ptr.1551", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1557", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1565", i8, i32, %"class.blink::Member.1567", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1573", %"class.WTF::HashMap.1575", %"class.blink::Member.1580", %"class.blink::Member.1582", %"class.blink::Member.1584", %"class.blink::Member.1586", %"class.blink::Member.1149", %"class.blink::Member.1149", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1588", i8, i32, %"class.blink::Member.1595", %"class.blink::Member.1597", i32, %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.std::__1::unique_ptr.1605", i64, %"class.std::__1::unique_ptr.1611", i32, i32, %"class.blink::Member.1622", %"class.blink::Member.1624", %"class.blink::Member.1626", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1628", %"class.WTF::Vector.1630", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1635", %"class.blink::Member.1642", %"class.std::__1::unique_ptr.1644", %"class.blink::Member.1650", i8, i8, %"class.WTF::String", %"class.blink::Member.1652", i8, [7 x i8], %"class.blink::HeapHashMap.1654", %"class.blink::HeapObserverSet", %"class.blink::Member.1668", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1670", i32, i8, i8, %"class.blink::WeakMember.1672", %"class.blink::Member.1673" }
%"class.blink::Supplementable.1227" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1228" }
%"class.blink::HeapHashMap.1228" = type { %"class.WTF::HashMap.1231" }
%"class.WTF::HashMap.1231" = type { %"class.WTF::HashTable.1232" }
%"class.WTF::HashTable.1232" = type <{ %"struct.WTF::KeyValuePair.1234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1234" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1235" = type { %"class.WTF::VectorBuffer.1236" }
%"class.WTF::VectorBuffer.1236" = type { %"class.WTF::VectorBufferBase.1237" }
%"class.WTF::VectorBufferBase.1237" = type { %"class.base::OnceCallback.600"*, i32, i32 }
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1693", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1755", i32, i8, [3 x i8], %"class.blink::HeapVector.1757", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1765", %"class.blink::Member.1767", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.531", %"class.blink::Member.1776", %"class.blink::Member.1778", i8, [7 x i8] }>
%"class.blink::Supplementable.1693" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1694" }
%"class.blink::HeapHashMap.1694" = type { %"class.WTF::HashMap.1697" }
%"class.WTF::HashMap.1697" = type { %"class.WTF::HashTable.1698" }
%"class.WTF::HashTable.1698" = type <{ %"struct.WTF::KeyValuePair.1700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1700" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1709" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1701" }
%"class.blink::HeapObserverSet.1701" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1702" }
%"class.blink::HeapHashSet.1702" = type { %"class.WTF::HashSet.1705" }
%"class.WTF::HashSet.1705" = type { %"class.WTF::HashTable.1706" }
%"class.WTF::HashTable.1706" = type <{ %"class.blink::WeakMember.1708"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1708" = type opaque
%"class.blink::Supplementable.1709" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1710" }
%"class.blink::HeapHashMap.1710" = type { %"class.WTF::HashMap.1713" }
%"class.WTF::HashMap.1713" = type { %"class.WTF::HashTable.1714" }
%"class.WTF::HashTable.1714" = type <{ %"struct.WTF::KeyValuePair.1716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1716" = type { i8*, %"class.blink::Member.2719" }
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2721" }
%"class.blink::Member.2721" = type { %"class.blink::MemberBase.2722" }
%"class.blink::MemberBase.2722" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.714, %"class.std::__1::unique_ptr.1717", %"class.std::__1::unique_ptr.1717", %"class.std::__1::unique_ptr.1744", %"class.std::__1::unique_ptr.1744", %"class.blink::Member.1242", i32, [4 x i8], %"class.WTF::HashSet.1751", i32, i32 }
%"class.std::__1::unique_ptr.1717" = type { %"class.std::__1::__compressed_pair.1718" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.1719" }
%"struct.std::__1::__compressed_pair_elem.1719" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1720", %"class.std::__1::map.1731", %"class.std::__1::map.1740"* }
%"class.std::__1::map.1720" = type { %"class.std::__1::__tree.1721" }
%"class.std::__1::__tree.1721" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1722", %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1722" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.std::__1::map.1731" = type { %"class.std::__1::__tree.1732" }
%"class.std::__1::__tree.1732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1733", %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.std::__1::map.1740" = type opaque
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.1747", %"class.base::flat_map.849" }
%"struct.std::__1::array.1747" = type { [14 x %"class.blink::PolicyValue"] }
%"class.base::flat_map.849" = type { %"class.base::internal::flat_tree.850" }
%"class.base::internal::flat_tree.850" = type { %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"struct.std::__1::pair.853"*, %"struct.std::__1::pair.853"*, %"class.std::__1::__compressed_pair.854" }
%"struct.std::__1::pair.853" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::pair.853"* }
%"class.WTF::HashSet.1751" = type { %"class.WTF::HashTable.1752" }
%"class.WTF::HashTable.1752" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1757" = type { %"class.WTF::Vector.1760" }
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1762" }
%"class.WTF::VectorBufferBase.1762" = type { %"class.blink::Member.1763"*, i32, i32 }
%"class.blink::Member.1763" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1769", i32, i32 }
%"class.blink::HeapHashMap.1769" = type { %"class.WTF::HashMap.1772" }
%"class.WTF::HashMap.1772" = type { %"class.WTF::HashTable.1773" }
%"class.WTF::HashTable.1773" = type <{ %"struct.WTF::KeyValuePair.1775"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1775" = type opaque
%"class.blink::Member.1776" = type { %"class.blink::MemberBase.1777" }
%"class.blink::MemberBase.1777" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1778" = type { %"class.blink::MemberBase.1779" }
%"class.blink::MemberBase.1779" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1192", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1194, %"class.WTF::Vector.1195", %"class.WTF::Vector.1195", %"class.blink::Member.1029", %"class.blink::Member.1200", %"class.blink::HeapHashSet.1204", %"class.blink::Member.1149", %"class.WTF::HashSet.1211", %"class.WTF::TextPosition", %"class.blink::Member.1215", %"class.blink::HeapVector.1217", %"class.blink::Member.1224" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1194 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1195" = type { %"class.WTF::VectorBuffer.1196" }
%"class.WTF::VectorBuffer.1196" = type { %"class.WTF::VectorBufferBase.1197" }
%"class.WTF::VectorBufferBase.1197" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1202" }
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1204" = type { %"class.WTF::HashSet.1207" }
%"class.WTF::HashSet.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"class.blink::WeakMember.1210"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1210" = type { %"class.blink::MemberBase.1032" }
%"class.WTF::HashSet.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1217" = type { %"class.WTF::Vector.1220" }
%"class.WTF::Vector.1220" = type { %"class.WTF::VectorBuffer.1221" }
%"class.WTF::VectorBuffer.1221" = type { %"class.WTF::VectorBufferBase.1222" }
%"class.WTF::VectorBufferBase.1222" = type { %"class.blink::Member.1200"*, i32, i32 }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1263 }
%class.scoped_refptr.1263 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1264", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1264" = type { %"class.base::RefCounted.1265" }
%"class.base::RefCounted.1265" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1268" }
%"class.blink::HeapHashMap.1268" = type { %"class.WTF::HashMap.1271" }
%"class.WTF::HashMap.1271" = type { %"class.WTF::HashTable.1272" }
%"class.WTF::HashTable.1272" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type { %"class.blink::WeakMember.1275", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1149", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1029", %"class.blink::Member.1029", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1464" }
%"class.blink::HeapHashMap.1464" = type { %"class.WTF::HashMap.1467" }
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1470" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1473" = type { %"class.WTF::HashSet.1476" }
%"class.WTF::HashSet.1476" = type { %"class.WTF::HashTable.1477" }
%"class.WTF::HashTable.1477" = type <{ %"class.blink::WeakMember.1479"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1479" = type opaque
%"class.blink::HeapHashSet.1480" = type { %"class.WTF::HashSet.1483" }
%"class.WTF::HashSet.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"class.blink::WeakMember.1486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1486" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1031", %"class.blink::HeapVector.1184" }
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1497" = type { %"class.WTF::HashMap.1500" }
%"class.WTF::HashMap.1500" = type { %"class.WTF::HashTable.1501" }
%"class.WTF::HashTable.1501" = type <{ %"struct.WTF::KeyValuePair.1503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1503" = type opaque
%"class.WTF::Vector.1504" = type { %"class.WTF::VectorBuffer.1505" }
%"class.WTF::VectorBuffer.1505" = type { %"class.WTF::VectorBufferBase.1506" }
%"class.WTF::VectorBufferBase.1506" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1517" = type { %"class.WTF::Vector.1520" }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"class.blink::Member.1523"*, i32, i32 }
%"class.blink::Member.1523" = type opaque
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1538", i32, [4 x i8] }>
%"class.WTF::Vector.1538" = type { %"class.WTF::VectorBuffer.1539" }
%"class.WTF::VectorBuffer.1539" = type { %"class.WTF::VectorBufferBase.1540" }
%"class.WTF::VectorBufferBase.1540" = type { %"struct.std::__1::pair.1541"*, i32, i32 }
%"struct.std::__1::pair.1541" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1546" = type { %"class.WTF::VectorBuffer.1547" }
%"class.WTF::VectorBuffer.1547" = type { %"class.WTF::VectorBufferBase.1548" }
%"class.WTF::VectorBufferBase.1548" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1551" = type { %"class.std::__1::__compressed_pair.1552" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.1553" }
%"struct.std::__1::__compressed_pair_elem.1553" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1027"*, i32, i32 }
%"class.blink::HeapVector.1557" = type { %"class.WTF::Vector.1560" }
%"class.WTF::Vector.1560" = type { %"class.WTF::VectorBuffer.1561" }
%"class.WTF::VectorBuffer.1561" = type { %"class.WTF::VectorBufferBase.1562" }
%"class.WTF::VectorBufferBase.1562" = type { %"class.blink::Member.1563"*, i32, i32 }
%"class.blink::Member.1563" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1149" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1575" = type { %"class.WTF::HashTable.1576" }
%"class.WTF::HashTable.1576" = type <{ %"struct.WTF::KeyValuePair.1579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1579" = type opaque
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1461", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1459, %"class.base::WeakPtrFactory.1460" }
%class.scoped_refptr.1459 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1461" = type { %"class.blink::MemberBase.1150" }
%"class.blink::HeapHashSet.1588" = type { %"class.WTF::HashSet.1591" }
%"class.WTF::HashSet.1591" = type { %"class.WTF::HashTable.1592" }
%"class.WTF::HashTable.1592" = type <{ %"class.blink::Member.1594"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1594" = type opaque
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1211", %"class.WTF::HashSet.1211", %"class.WTF::HashSet.1211", %"class.WTF::HashSet.1211", %"class.WTF::HashSet.1211", %"class.WTF::HashSet.1211", i32, [4 x i8], %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", %"class.WTF::HashMap.1614", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1614" = type { %"class.WTF::HashTable.1615" }
%"class.WTF::HashTable.1615" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1630" = type { %"class.WTF::VectorBuffer.1631" }
%"class.WTF::VectorBuffer.1631" = type { %"class.WTF::VectorBufferBase.1632" }
%"class.WTF::VectorBufferBase.1632" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1635" = type { %"class.WTF::HashMap.1638" }
%"class.WTF::HashMap.1638" = type { %"class.WTF::HashTable.1639" }
%"class.WTF::HashTable.1639" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type opaque
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1654" = type { %"class.WTF::HashMap.1657" }
%"class.WTF::HashMap.1657" = type { %"class.WTF::HashTable.1658" }
%"class.WTF::HashTable.1658" = type <{ %"struct.WTF::KeyValuePair.1660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1660" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1661" }
%"class.blink::HeapHashSet.1661" = type { %"class.WTF::HashSet.1664" }
%"class.WTF::HashSet.1664" = type { %"class.WTF::HashTable.1665" }
%"class.WTF::HashTable.1665" = type <{ %"class.blink::WeakMember.1667"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1667" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1149", %"class.blink::HeapHashSet.1677", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1684", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1677" = type { %"class.WTF::HashSet.1680" }
%"class.WTF::HashSet.1680" = type { %"class.WTF::HashTable.1681" }
%"class.WTF::HashTable.1681" = type <{ %"class.blink::Member.1683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1683" = type opaque
%"class.blink::HeapTaskRunnerTimer.1684" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1685", { i64, i64 } }
%"class.blink::WeakMember.1685" = type { %"class.blink::MemberBase.1671" }
%"class.blink::Member.1673" = type { %"class.blink::MemberBase.1674" }
%"class.blink::MemberBase.1674" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1155" }
%"class.blink::HeapHashMap.1155" = type { %"class.WTF::HashMap.1158" }
%"class.WTF::HashMap.1158" = type { %"class.WTF::HashTable.1159" }
%"class.WTF::HashTable.1159" = type <{ %"struct.WTF::KeyValuePair.1161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1161" = type { %"class.WTF::AtomicString", %"class.blink::Member.1162" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1027", i32, %"class.blink::HeapVector.1166" }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1179" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::HeapHashMap.1181"* }
%"class.blink::HeapHashMap.1181" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1184" = type { %"class.WTF::Vector.1187" }
%"class.WTF::Vector.1187" = type { %"class.WTF::VectorBuffer.1188" }
%"class.WTF::VectorBuffer.1188" = type { %"class.WTF::VectorBufferBase.1189" }
%"class.WTF::VectorBufferBase.1189" = type { %"class.blink::Member.1190"*, i32, i32 }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.922", %"class.blink::Member.920", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2092" }
%"class.blink::HeapHashSet.2092" = type { %"class.WTF::HashSet.2095" }
%"class.WTF::HashSet.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"class.blink::WeakMember.2098"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2098" = type opaque
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2103" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2104" }
%"class.blink::HeapHashSet.2104" = type { %"class.WTF::HashSet.2107" }
%"class.WTF::HashSet.2107" = type { %"class.WTF::HashTable.2108" }
%"class.WTF::HashTable.2108" = type <{ %"class.blink::WeakMember.2110"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2110" = type opaque
%"class.blink::Member.2111" = type { %"class.blink::MemberBase.2112" }
%"class.blink::MemberBase.2112" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2133" }
%"class.WTF::Deque.2133" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2136" }
%"class.WTF::VectorBuffer.2136" = type { %"class.WTF::VectorBufferBase.2137" }
%"class.WTF::VectorBufferBase.2137" = type { %"class.std::__1::unique_ptr.2138"*, i32, i32 }
%"class.std::__1::unique_ptr.2138" = type { %"class.std::__1::__compressed_pair.2139" }
%"class.std::__1::__compressed_pair.2139" = type { %"struct.std::__1::__compressed_pair_elem.2140" }
%"struct.std::__1::__compressed_pair_elem.2140" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2144", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2144" = type { %"class.std::__1::__bitset.2145" }
%"class.std::__1::__bitset.2145" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2146" }
%"class.absl::optional.2146" = type { %"class.absl::optional_internal::optional_data.2147" }
%"class.absl::optional_internal::optional_data.2147" = type { %"class.absl::optional_internal::optional_data_base.2148" }
%"class.absl::optional_internal::optional_data_base.2148" = type { %"class.absl::optional_internal::optional_data_dtor_base.2149" }
%"class.absl::optional_internal::optional_data_dtor_base.2149" = type { i8, %union.anon.2150 }
%union.anon.2150 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2151", i64, %"class.absl::optional.352", i64 }
%"class.absl::optional.2151" = type { %"class.absl::optional_internal::optional_data.2152" }
%"class.absl::optional_internal::optional_data.2152" = type { %"class.absl::optional_internal::optional_data_base.2153" }
%"class.absl::optional_internal::optional_data_base.2153" = type { %"class.absl::optional_internal::optional_data_dtor_base.2154" }
%"class.absl::optional_internal::optional_data_dtor_base.2154" = type { i8, %union.anon.2155 }
%union.anon.2155 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2156" = type { %"class.std::__1::unique_ptr.2157" }
%"class.std::__1::unique_ptr.2157" = type { %"class.std::__1::__compressed_pair.2158" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.2159" }
%"struct.std::__1::__compressed_pair_elem.2159" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2163" = type { %"class.WTF::HashSet.2166" }
%"class.WTF::HashSet.2166" = type { %"class.WTF::HashTable.2167" }
%"class.WTF::HashTable.2167" = type <{ %"class.blink::WeakMember.2169"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2169" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2170" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2170" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.800 }
%class.scoped_refptr.800 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.2171" = type { %"class.std::__1::__compressed_pair.2172" }
%"class.std::__1::__compressed_pair.2172" = type { %"struct.std::__1::__compressed_pair_elem.2173" }
%"struct.std::__1::__compressed_pair_elem.2173" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.920", %"class.blink::Member.951", %"class.blink::Member.953", %"class.blink::Member.955", i8, %"class.WTF::Vector.957" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.944" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.932" }
%"class.blink::HeapVector.932" = type { %"class.WTF::Vector.935" }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937", [32 x i8] }
%"class.WTF::VectorBufferBase.937" = type { %"struct.std::__1::pair.938"*, i32, i32 }
%"struct.std::__1::pair.938" = type { %"class.WTF::AtomicString", %"class.blink::Member.939" }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::HeapVector.941"* }
%"class.blink::HeapVector.941" = type opaque
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.WTF::Vector.947"* }
%"class.WTF::Vector.947" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.957" = type { %"class.WTF::VectorBuffer.958" }
%"class.WTF::VectorBuffer.958" = type { %"class.WTF::VectorBufferBase.959" }
%"class.WTF::VectorBufferBase.959" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote.960", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote.960" = type { %"class.mojo::internal::InterfacePtrState.961" }
%"class.mojo::internal::InterfacePtrState.961" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.962" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.739, %"class.std::__1::unique_ptr.577", %"class.mojo::ScopedHandleBase.740", [4 x i8], %class.scoped_refptr.591, i32 }>
%class.scoped_refptr.739 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.591, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.740", [4 x i8], %"class.absl::optional.802", %"class.absl::optional.807", %"class.absl::optional.761", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.827", i8, [7 x i8], %class.scoped_refptr.591, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.611" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.600", %"class.mojo::ScopedHandleBase.740", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.591, %"class.std::__1::unique_ptr.741", %"class.absl::optional.751", %"struct.std::__1::atomic.757", i8, i8, i8, i8, i32, i32, %"class.absl::optional.761", %"class.std::__1::unique_ptr.766", i8, i64, %class.scoped_refptr.799, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.801" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.591, i8, %"class.mojo::ScopedHandleBase.744", %class.scoped_refptr.745, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.746", i8*, %"class.base::WeakPtrFactory.747" }
%"class.mojo::ScopedHandleBase.744" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.745 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.746" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.747" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.751" = type { %"class.absl::optional_internal::optional_data.752" }
%"class.absl::optional_internal::optional_data.752" = type { %"class.absl::optional_internal::optional_data_base.753" }
%"class.absl::optional_internal::optional_data_base.753" = type { %"class.absl::optional_internal::optional_data_dtor_base.754" }
%"class.absl::optional_internal::optional_data_dtor_base.754" = type { i8, %union.anon.755 }
%union.anon.755 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.756", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.756" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.769", i8, i64, %class.scoped_refptr.770, %class.scoped_refptr.795 }
%"class.base::RepeatingCallback.769" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.770 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.771", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.773", %"class.std::__1::map.784", i8, [7 x i8] }>
%"class.base::RefCounted.771" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.772 }
%class.scoped_refptr.772 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.773" = type { %"class.std::__1::__tree.774" }
%"class.std::__1::__tree.774" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%class.scoped_refptr.795 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.799 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.801" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.802" = type { %"class.absl::optional_internal::optional_data.803" }
%"class.absl::optional_internal::optional_data.803" = type { %"class.absl::optional_internal::optional_data_base.804" }
%"class.absl::optional_internal::optional_data_base.804" = type { %"class.absl::optional_internal::optional_data_dtor_base.805" }
%"class.absl::optional_internal::optional_data_dtor_base.805" = type { i8, %union.anon.806 }
%union.anon.806 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.807" = type { %"class.absl::optional_internal::optional_data.808" }
%"class.absl::optional_internal::optional_data.808" = type { %"class.absl::optional_internal::optional_data_base.809" }
%"class.absl::optional_internal::optional_data_base.809" = type { %"class.absl::optional_internal::optional_data_dtor_base.810" }
%"class.absl::optional_internal::optional_data_dtor_base.810" = type { i8, [7 x i8], %union.anon.811 }
%union.anon.811 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.812 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.812 = type { %"class.std::__1::map.815" }
%"class.std::__1::map.815" = type { %"class.std::__1::__tree.816" }
%"class.std::__1::__tree.816" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.817", %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.826"*, i64 }
%"class.std::__1::unique_ptr.826" = type opaque
%"class.std::__1::map.827" = type { %"class.std::__1::__tree.828" }
%"class.std::__1::__tree.828" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.829", %"class.std::__1::__compressed_pair.833" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.mojo::ScopedHandleBase.740" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.920", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.974" = type { %"class.absl::optional_internal::optional_data.975" }
%"class.absl::optional_internal::optional_data.975" = type { %"class.absl::optional_internal::optional_data_base.976" }
%"class.absl::optional_internal::optional_data_base.976" = type { %"class.absl::optional_internal::optional_data_dtor_base.977" }
%"class.absl::optional_internal::optional_data_dtor_base.977" = type { i8, %union.anon.978 }
%union.anon.978 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.980" }
%"class.blink::HeapHashSet.980" = type { %"class.WTF::HashSet.983" }
%"class.WTF::HashSet.983" = type { %"class.WTF::HashTable.984" }
%"class.WTF::HashTable.984" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.988" }
%"class.WTF::HashMap.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"struct.WTF::KeyValuePair.991"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.991" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.995", %"class.base::WeakPtrFactory.1000" }
%"class.WTF::HashMap.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"struct.WTF::KeyValuePair.999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.999" = type opaque
%"class.base::WeakPtrFactory.1000" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1004" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2725" }
%"class.blink::WeakMember.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2727", i64, %"class.std::__1::map.2728", i8*, i64, %"class.base::WeakPtrFactory.2737" }
%"class.base::RepeatingCallback.2727" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2728" = type { %"class.std::__1::__tree.2729" }
%"class.std::__1::__tree.2729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2730", %"class.std::__1::__compressed_pair.2734" }
%"class.std::__1::__compressed_pair.2730" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.2734" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.base::WeakPtrFactory.2737" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1006" = type { %"class.WTF::HashSet.1009" }
%"class.WTF::HashSet.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"class.blink::WeakMember.1012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1012" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.661", %"class.blink::Member.1013", %"class.blink::Member.240", %"class.std::__1::unique_ptr.1015", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1021" }
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1021" = type { %"class.WTF::HashTable.1022" }
%"class.WTF::HashTable.1022" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1782", %"class.blink::Member.661", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1787", i8, i32, %"class.blink::Color", %"class.absl::optional.1789", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1794", %"class.blink::Member.1796", %"class.blink::Member.1796", %"class.std::__1::unique_ptr.1799", i32, [4 x i8], %"class.WTF::HashSet.1802", %"class.blink::Member.1809", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1811", %"class.blink::HeapHashSet.1818", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1826", i8, %"class.blink::Member.1832", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1844", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1858", i8, %"class.std::__1::unique_ptr.1864", %"class.std::__1::unique_ptr.1981", %"class.WTF::Vector.1987", i32, %class.scoped_refptr.1992, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1993", %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.blink::HeapHashSet.1999", %"class.blink::HeapHashSet.2006", %"class.std::__1::unique_ptr.2013", %"class.std::__1::unique_ptr.2019", %"class.WTF::Vector.1235" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1782" = type { %"class.WTF::HashTable.1783" }
%"class.WTF::HashTable.1783" = type <{ %class.scoped_refptr.1786*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1786 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1787" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1788", { i64, i64 } }
%"class.blink::WeakMember.1788" = type { %"class.blink::MemberBase.1026" }
%"class.absl::optional.1789" = type { %"class.absl::optional_internal::optional_data.1790" }
%"class.absl::optional_internal::optional_data.1790" = type { %"class.absl::optional_internal::optional_data_base.1791" }
%"class.absl::optional_internal::optional_data_base.1791" = type { %"class.absl::optional_internal::optional_data_dtor_base.1792" }
%"class.absl::optional_internal::optional_data_dtor_base.1792" = type { i8, %union.anon.1793 }
%union.anon.1793 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::HeapHashSet.1798"* }
%"class.blink::HeapHashSet.1798" = type opaque
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"class.WTF::HashSet.1802"* }
%"class.WTF::HashSet.1802" = type { %"class.WTF::HashTable.1803" }
%"class.WTF::HashTable.1803" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1811" = type { %"class.WTF::HashSet.1814" }
%"class.WTF::HashSet.1814" = type { %"class.WTF::HashTable.1815" }
%"class.WTF::HashTable.1815" = type <{ %"class.blink::Member.1817"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1817" = type opaque
%"class.blink::HeapHashSet.1818" = type { %"class.WTF::HashSet.1821" }
%"class.WTF::HashSet.1821" = type { %"class.WTF::HashTable.1822" }
%"class.WTF::HashTable.1822" = type <{ %"class.blink::Member.1824"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1836", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1836" = type { %"class.WTF::HashTable.1837" }
%"class.WTF::HashTable.1837" = type <{ %"struct.WTF::KeyValuePair.1839"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1839" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1840", i32, i32 }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1844" = type { %"class.WTF::LinkedHashSet.1847" }
%"class.WTF::LinkedHashSet.1847" = type { %"class.WTF::HashMap.1848", %"class.WTF::VectorBackedLinkedList.1852" }
%"class.WTF::HashMap.1848" = type { %"class.WTF::HashTable.1849" }
%"class.WTF::HashTable.1849" = type <{ %"struct.WTF::KeyValuePair.1851"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1851" = type opaque
%"class.WTF::VectorBackedLinkedList.1852" = type { %"class.WTF::Vector.1853", i32, i32 }
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855" }
%"class.WTF::VectorBufferBase.1855" = type { %"class.WTF::VectorBackedLinkedListNode.1856"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1856" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1867, %class.scoped_refptr.1867, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1958", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1963", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1867 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1868", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1875" }
%"class.WTF::RefCounted.1868" = type { %"class.base::RefCounted.1869" }
%"class.base::RefCounted.1869" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1870", i32, [4 x i8] }>
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1877" }
%"class.WTF::VectorBufferBase.1877" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1881", %"class.std::__1::unique_ptr.1930", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1878, %class.scoped_refptr.1879, %class.scoped_refptr.1880 }
%class.scoped_refptr.1878 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1894", i8, i8, %class.scoped_refptr.1878, i32, i32 }
%"class.WTF::RefCounted.1894" = type { %"class.base::RefCounted.1895" }
%"class.base::RefCounted.1895" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1879 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2043" }
%"class.blink::PaintPropertyNode.2043" = type { %"class.WTF::RefCounted.2044", i8, i8, %class.scoped_refptr.1879, i32, i32 }
%"class.WTF::RefCounted.2044" = type { %"class.base::RefCounted.2045" }
%"class.base::RefCounted.2045" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1880 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2040" }
%"class.blink::PaintPropertyNode.2040" = type { %"class.WTF::RefCounted.2041", i8, i8, %class.scoped_refptr.1880, i32, i32 }
%"class.WTF::RefCounted.2041" = type { %"class.base::RefCounted.2042" }
%"class.base::RefCounted.2042" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1881" = type { %"class.std::__1::__compressed_pair.1882" }
%"class.std::__1::__compressed_pair.1882" = type { %"struct.std::__1::__compressed_pair_elem.1883" }
%"struct.std::__1::__compressed_pair_elem.1883" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1884", %"class.WTF::Vector.1889", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1891" }
%"class.WTF::VectorBufferBase.1891" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1909" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1902, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1903", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1896" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1902 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2025", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2025" = type { %"class.WTF::RefCounted.2026", i8, i8, %class.scoped_refptr.1902, i32, i32 }
%"class.WTF::RefCounted.2026" = type { %"class.base::RefCounted.2027" }
%"class.base::RefCounted.2027" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2028" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2028" = type { %"class.absl::optional_internal::optional_data.2029" }
%"class.absl::optional_internal::optional_data.2029" = type { %"class.absl::optional_internal::optional_data_base.2030" }
%"class.absl::optional_internal::optional_data_base.2030" = type { %"class.absl::optional_internal::optional_data_dtor_base.2031" }
%"class.absl::optional_internal::optional_data_dtor_base.2031" = type { i8, %union.anon.2032 }
%union.anon.2032 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2033", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2033" = type { %"class.std::__1::__vector_base.2034" }
%"class.std::__1::__vector_base.2034" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2035" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2035" = type { %"struct.std::__1::__compressed_pair_elem.2036" }
%"struct.std::__1::__compressed_pair_elem.2036" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1912", %"class.std::__1::unique_ptr.1918", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1933", %"class.absl::optional.1933" }
%"class.absl::optional.1933" = type { %"class.absl::optional_internal::optional_data.1934" }
%"class.absl::optional_internal::optional_data.1934" = type { %"class.absl::optional_internal::optional_data_base.1935" }
%"class.absl::optional_internal::optional_data_base.1935" = type { %"class.absl::optional_internal::optional_data_dtor_base.1936" }
%"class.absl::optional_internal::optional_data_dtor_base.1936" = type { i8, [3 x i8], %union.anon.1937 }
%union.anon.1937 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1875"*, %"class.absl::optional.1943", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1943" = type { %"class.absl::optional_internal::optional_data.1944" }
%"class.absl::optional_internal::optional_data.1944" = type { %"class.absl::optional_internal::optional_data_base.1945" }
%"class.absl::optional_internal::optional_data_base.1945" = type { %"class.absl::optional_internal::optional_data_dtor_base.1946" }
%"class.absl::optional_internal::optional_data_dtor_base.1946" = type { i8, %union.anon.1947 }
%union.anon.1947 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1948", %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950", [128 x i8] }
%"class.WTF::VectorBufferBase.1950" = type { i32*, i32, i32 }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [128 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1958" = type { %"class.WTF::VectorBuffer.1959" }
%"class.WTF::VectorBuffer.1959" = type { %"class.WTF::VectorBufferBase.1960" }
%"class.WTF::VectorBufferBase.1960" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1963" = type { %"class.WTF::HashTable.1964" }
%"class.WTF::HashTable.1964" = type <{ %"struct.WTF::KeyValuePair.1967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1967" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1968", %"class.WTF::Vector.1973" }
%"class.WTF::HashMap.1968" = type { %"class.WTF::HashTable.1969" }
%"class.WTF::HashTable.1969" = type <{ %"struct.WTF::KeyValuePair.1972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1972" = type opaque
%"class.WTF::Vector.1973" = type { %"class.WTF::VectorBuffer.1974" }
%"class.WTF::VectorBuffer.1974" = type { %"class.WTF::VectorBufferBase.1975" }
%"class.WTF::VectorBufferBase.1975" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1981" = type { %"class.std::__1::__compressed_pair.1982" }
%"class.std::__1::__compressed_pair.1982" = type { %"struct.std::__1::__compressed_pair_elem.1983" }
%"struct.std::__1::__compressed_pair_elem.1983" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1987" = type { %"class.WTF::VectorBuffer.1988" }
%"class.WTF::VectorBuffer.1988" = type { %"class.WTF::VectorBufferBase.1989" }
%"class.WTF::VectorBufferBase.1989" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1992 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1999" = type { %"class.WTF::HashSet.2002" }
%"class.WTF::HashSet.2002" = type { %"class.WTF::HashTable.2003" }
%"class.WTF::HashTable.2003" = type <{ %"class.blink::WeakMember.2005"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2005" = type opaque
%"class.blink::HeapHashSet.2006" = type { %"class.WTF::HashSet.2009" }
%"class.WTF::HashSet.2009" = type { %"class.WTF::HashTable.2010" }
%"class.WTF::HashTable.2010" = type <{ %"class.blink::WeakMember.2012"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2012" = type opaque
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.329" }
%"class.base::time_internal::TimeBase.329" = type { i64 }
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.357", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { %"class.base::Time" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1040" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1037 }
%class.scoped_refptr.1037 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1038", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1038" = type { %"class.base::RefCounted.1039" }
%"class.base::RefCounted.1039" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1044", %"class.blink::Member.1046", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1044" = type { %"class.WTF::SingleThreadedBitField.1045" }
%"class.WTF::SingleThreadedBitField.1045" = type { i32 }
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1048 }
%class.scoped_refptr.1048 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1049", %"class.WTF::AtomicString", %"class.WTF::Vector.1051" }
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.342", [32 x i8] }
%"class.WTF::VectorBufferBase.342" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.1063 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1078" }
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2740" }
%"class.mojo::Remote.2740" = type { %"class.mojo::internal::InterfacePtrState.2741" }
%"class.mojo::internal::InterfacePtrState.2741" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2742" }
%"class.std::__1::unique_ptr.2742" = type { %"class.std::__1::__compressed_pair.2743" }
%"class.std::__1::__compressed_pair.2743" = type { %"struct.std::__1::__compressed_pair_elem.2744" }
%"struct.std::__1::__compressed_pair_elem.2744" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1083, %"class.blink::WebVector.425", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1083 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1084", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1084" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1085, i8, [7 x i8] }>
%class.scoped_refptr.1085 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1086", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1086" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1087" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.base::RepeatingCallback.1094" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.362" = type { %"class.absl::optional_internal::optional_data.363" }
%"class.absl::optional_internal::optional_data.363" = type { %"class.absl::optional_internal::optional_data_base.364" }
%"class.absl::optional_internal::optional_data_base.364" = type { %"class.absl::optional_internal::optional_data_dtor_base.365" }
%"class.absl::optional_internal::optional_data_dtor_base.365" = type { i8, %union.anon.366 }
%union.anon.366 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1107" }
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2750" }
%"class.mojo::AssociatedRemote.2750" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2751" }
%"class.mojo::internal::AssociatedInterfacePtrState.2751" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2752" }
%"class.std::__1::unique_ptr.2752" = type { %"class.std::__1::__compressed_pair.2753" }
%"class.std::__1::__compressed_pair.2753" = type { %"struct.std::__1::__compressed_pair_elem.2754" }
%"struct.std::__1::__compressed_pair_elem.2754" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1109" = type { %"class.blink::Member.1110" }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2760" }
%"class.mojo::AssociatedRemote.2760" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2761" }
%"class.mojo::internal::AssociatedInterfacePtrState.2761" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2762" }
%"class.std::__1::unique_ptr.2762" = type { %"class.std::__1::__compressed_pair.2763" }
%"class.std::__1::__compressed_pair.2763" = type { %"struct.std::__1::__compressed_pair_elem.2764" }
%"struct.std::__1::__compressed_pair_elem.2764" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1112" }
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.661", %"class.mojo::AssociatedReceiver.2770" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver.2770" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2771" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.577" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2771" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1114" = type { %"class.blink::Member.1115" }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2774", %"class.blink::Member.661", %"class.mojo::AssociatedReceiver.2775" }
%"class.blink::ThreadState::PrefinalizerRegistration.2774" = type { i8 }
%"class.mojo::AssociatedReceiver.2775" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2776" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2776" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1117" }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2779", %"class.blink::Member.661", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2779" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.739, %"class.std::__1::unique_ptr.577", %"class.base::WeakPtrFactory.2780" }
%"class.base::WeakPtrFactory.2780" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1119" = type { %"class.blink::Member.1120" }
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2783", %"class.blink::Member.661", %"class.mojo::AssociatedReceiver.2784" }
%"class.blink::ThreadState::PrefinalizerRegistration.2783" = type { i8 }
%"class.mojo::AssociatedReceiver.2784" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2785" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2785" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::HeapHashMap.1130"* }
%"class.blink::HeapHashMap.1130" = type opaque
%"class.mojo::StructPtr.1131" = type { %"class.std::__1::unique_ptr.1132" }
%"class.std::__1::unique_ptr.1132" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1135", %"class.mojo::InlinedStructPtr.1136" }
%"class.mojo::InlinedStructPtr.1135" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1136" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1142" = type { %"class.absl::optional_internal::optional_data.1143" }
%"class.absl::optional_internal::optional_data.1143" = type { %"class.absl::optional_internal::optional_data_base.1144" }
%"class.absl::optional_internal::optional_data_base.1144" = type { %"class.absl::optional_internal::optional_data_dtor_base.1145" }
%"class.absl::optional_internal::optional_data_dtor_base.1145" = type { i8, %union.anon.1146 }
%union.anon.1146 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.335", %"class.blink::Member.667", %"class.absl::optional.669", i64, i64, i32, %class.scoped_refptr.674, %class.scoped_refptr.659, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.674 }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.669" = type { %"class.absl::optional_internal::optional_data.670" }
%"class.absl::optional_internal::optional_data.670" = type { %"class.absl::optional_internal::optional_data_base.671" }
%"class.absl::optional_internal::optional_data_base.671" = type { %"class.absl::optional_internal::optional_data_dtor_base.672" }
%"class.absl::optional_internal::optional_data_dtor_base.672" = type { i8, %union.anon.673 }
%union.anon.673 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%class.scoped_refptr.674 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.676", i64, %"class.WTF::Vector.679", %"class.WTF::Vector.684", %"class.WTF::Vector.690", %"class.WTF::Vector.708", %class.scoped_refptr.714, %"class.WTF::HashMap.715", %"class.WTF::Vector.720", %"class.WTF::Vector.679", %"class.WTF::Vector.725", %"class.WTF::HashMap.730", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.675" }
%"class.base::RefCountedThreadSafe.675" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.WTF::Vector.684" = type { %"class.WTF::VectorBuffer.685" }
%"class.WTF::VectorBuffer.685" = type { %"class.WTF::VectorBufferBase.686", [8 x i8] }
%"class.WTF::VectorBufferBase.686" = type { %class.scoped_refptr.687*, i32, i32 }
%class.scoped_refptr.687 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.691" }
%"class.WTF::VectorBuffer.691" = type { %"class.WTF::VectorBufferBase.692" }
%"class.WTF::VectorBufferBase.692" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.700" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.693 }
%class.scoped_refptr.693 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.709" }
%"class.WTF::VectorBuffer.709" = type { %"class.WTF::VectorBufferBase.710" }
%"class.WTF::VectorBufferBase.710" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.711", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.711" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.679" = type { %"class.WTF::VectorBuffer.680" }
%"class.WTF::VectorBuffer.680" = type { %"class.WTF::VectorBufferBase.681", [16 x i8] }
%"class.WTF::VectorBufferBase.681" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.725" = type { %"class.WTF::VectorBuffer.726" }
%"class.WTF::VectorBuffer.726" = type { %"class.WTF::VectorBufferBase.727" }
%"class.WTF::VectorBufferBase.727" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.740", i32 }
%"class.WTF::HashMap.730" = type { %"class.WTF::HashTable.731" }
%"class.WTF::HashTable.731" = type <{ %"struct.WTF::KeyValuePair.734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.734" = type { i8**, %"class.std::__1::unique_ptr.2713" }
%"class.std::__1::unique_ptr.2713" = type { %"class.std::__1::__compressed_pair.2714" }
%"class.std::__1::__compressed_pair.2714" = type { %"struct.std::__1::__compressed_pair_elem.2715" }
%"struct.std::__1::__compressed_pair_elem.2715" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.330", %class.scoped_refptr.350, %class.scoped_refptr.351, %"struct.blink::CacheControlHeader", %"class.absl::optional.352", %"class.absl::optional.357", %"class.absl::optional.357", %"class.absl::optional.357", i64, %"class.blink::KURL", %"class.WTF::Vector.302", %"class.WTF::String", %"class.WTF::Vector.335", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.362", %"class.WTF::Vector.335", %"class.blink::KURL", %"class.absl::optional.367" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.328" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.330" = type { %"class.absl::optional_internal::optional_data.331" }
%"class.absl::optional_internal::optional_data.331" = type { %"class.absl::optional_internal::optional_data_base.332" }
%"class.absl::optional_internal::optional_data_base.332" = type { %"class.absl::optional_internal::optional_data_dtor_base.333" }
%"class.absl::optional_internal::optional_data_dtor_base.333" = type { i8, %union.anon.334 }
%union.anon.334 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.335", %"class.WTF::String", i64, i64, %"class.WTF::Vector.340", %"class.WTF::Vector.345" }
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.350 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.351 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.352", %"class.absl::optional.352" }
%"class.absl::optional.367" = type { %"class.absl::optional_internal::optional_data.368" }
%"class.absl::optional_internal::optional_data.368" = type { %"class.absl::optional_internal::optional_data_base.369" }
%"class.absl::optional_internal::optional_data_base.369" = type { %"class.absl::optional_internal::optional_data_dtor_base.370" }
%"class.absl::optional_internal::optional_data_dtor_base.370" = type { i8, %union.anon.371 }
%union.anon.371 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.836" }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.714 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.352", %"class.absl::optional.352", %"class.absl::optional.352", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.842", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.240" }
%"class.WTF::Vector.842" = type { %"class.WTF::VectorBuffer.843" }
%"class.WTF::VectorBuffer.843" = type { %"class.WTF::VectorBufferBase.844" }
%"class.WTF::VectorBufferBase.844" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.849" }
%"class.WTF::Vector.859" = type { %"class.WTF::VectorBuffer.860" }
%"class.WTF::VectorBuffer.860" = type { %"class.WTF::VectorBufferBase.861" }
%"class.WTF::VectorBufferBase.861" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.864 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.865", i64, %"class.WTF::Vector.867", %"class.WTF::Vector.872" }
%"class.WTF::RefCounted.865" = type { %"class.base::RefCounted.866" }
%"class.base::RefCounted.866" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869" }
%"class.WTF::VectorBufferBase.869" = type { i8*, i32, i32 }
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { %"class.std::__1::unique_ptr.875"*, i32, i32 }
%"class.std::__1::unique_ptr.875" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.878 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.883", %"class.std::__1::unique_ptr.888", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.887"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.887" = type { %"class.WTF::Vector.2800", %class.scoped_refptr.2804 }
%"class.WTF::Vector.2800" = type { %"class.WTF::VectorBuffer.2801" }
%"class.WTF::VectorBuffer.2801" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%class.scoped_refptr.2804 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2805", %"class.WTF::Vector.219", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2805" = type { %"class.base::RefCounted.2806" }
%"class.base::RefCounted.2806" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2807", i64, %"class.absl::optional.2812" }
%"class.std::__1::unique_ptr.2807" = type { %"class.std::__1::__compressed_pair.2808" }
%"class.std::__1::__compressed_pair.2808" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.absl::optional.2812" = type { %"class.absl::optional_internal::optional_data.2813" }
%"class.absl::optional_internal::optional_data.2813" = type { %"class.absl::optional_internal::optional_data_base.2814" }
%"class.absl::optional_internal::optional_data_base.2814" = type { %"class.absl::optional_internal::optional_data_dtor_base.2815" }
%"class.absl::optional_internal::optional_data_dtor_base.2815" = type { i8, %union.anon.2816 }
%union.anon.2816 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2817", %"class.std::__1::unique_ptr.2818" }
%"class.mojo::ScopedHandleBase.2817" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2818" = type { %"class.std::__1::__compressed_pair.2819" }
%"class.std::__1::__compressed_pair.2819" = type { %"struct.std::__1::__compressed_pair_elem.2820" }
%"struct.std::__1::__compressed_pair_elem.2820" = type { i8* }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.305" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.896", %"class.std::__1::bitset.896", %"class.std::__1::bitset.898" }
%"class.std::__1::bitset.896" = type { %"class.std::__1::__bitset.897" }
%"class.std::__1::__bitset.897" = type { [11 x i64] }
%"class.std::__1::bitset.898" = type { %"class.std::__1::__bitset.899" }
%"class.std::__1::__bitset.899" = type { [2 x i64] }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ %"class.blink::Member.904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.904" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::Vector.905" = type { %"class.WTF::VectorBuffer.906" }
%"class.WTF::VectorBuffer.906" = type { %"class.WTF::VectorBufferBase.907" }
%"class.WTF::VectorBufferBase.907" = type { i32*, i32, i32 }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.520" = type { %"class.std::__1::vector.521" }
%"class.std::__1::vector.521" = type { %"class.std::__1::__vector_base.522" }
%"class.std::__1::__vector_base.522" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.910" = type { %"class.mojo::internal::InterfacePtrState.911" }
%"class.mojo::internal::InterfacePtrState.911" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.912" }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::TimeZoneController::TimeZoneOverride"* }
%"class.blink::TimeZoneController::TimeZoneOverride" = type { i8 }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy" }
%"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy" = type { i32, %"class.absl::optional.254", %"class.absl::optional.259" }
%"class.absl::optional.254" = type { %"class.absl::optional_internal::optional_data.255" }
%"class.absl::optional_internal::optional_data.255" = type { %"class.absl::optional_internal::optional_data_base.256" }
%"class.absl::optional_internal::optional_data_base.256" = type { %"class.absl::optional_internal::optional_data_dtor_base.257" }
%"class.absl::optional_internal::optional_data_dtor_base.257" = type { i8, %union.anon.258 }
%"class.absl::optional.259" = type { %"class.absl::optional_internal::optional_data.260" }
%"class.absl::optional_internal::optional_data.260" = type { %"class.absl::optional_internal::optional_data_base.261" }
%"class.absl::optional_internal::optional_data_base.261" = type { %"class.absl::optional_internal::optional_data_dtor_base.262" }
%"class.absl::optional_internal::optional_data_dtor_base.262" = type { i8, %union.anon.263 }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.270" }
%"class.WTF::HashMap.270" = type { %"class.WTF::HashTable.271" }
%"class.WTF::HashTable.271" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField" = type { %"class.blink::InspectorAgentState::Field", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, [7 x i8], %union.anon.279 }
%union.anon.279 = type { %"struct.blink::UserAgentMetadata" }
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.280", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.288" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.blink::InspectorAgentState::SimpleField.293" = type { %"class.blink::InspectorAgentState::Field", double, double }
%"class.blink::InspectorAgentState::SimpleField.268" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::InspectorAgentState::SimpleField.267" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::SimpleField.269" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::MapField.294" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.295" }
%"class.WTF::HashMap.295" = type { %"class.WTF::HashTable.296" }
%"class.WTF::HashTable.296" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::WebLocalFrameImpl" = type { %"class.blink::WebNavigationControl", %"class.blink::WebLocalFrameClient"*, %"class.blink::Member.2186", %"class.blink::Member.661", %"class.blink::Member.2188", %"class.blink::Member.2190", %"class.blink::WebAutofillClient"*, %"class.blink::WebContentCaptureClient"*, %"class.blink::WebContentSettingsClient"*, %"class.blink::Member.2192", %"class.base::WeakPtr.2194", %"class.blink::Member.2195", %"class.blink::InterfaceRegistry"*, %"class.blink::WebInputMethodControllerImpl", %"class.blink::WebTextCheckClient"*, %"class.blink::WebSpellCheckPanelHostClient"*, %"class.blink::SelfKeepAlive", i8, %"class.gfx::Rect", %"class.blink::WebHistoryItem" }
%"class.blink::WebNavigationControl" = type { %"class.blink::WebLocalFrame" }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::WebLocalFrameClient" = type opaque
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::LocalFrameClientImpl"* }
%"class.blink::LocalFrameClientImpl" = type opaque
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::WebFrameWidgetImpl"* }
%"class.blink::WebFrameWidgetImpl" = type opaque
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::WebDevToolsAgentImpl"* }
%"class.blink::WebDevToolsAgentImpl" = type opaque
%"class.blink::WebAutofillClient" = type opaque
%"class.blink::WebContentCaptureClient" = type opaque
%"class.blink::WebContentSettingsClient" = type opaque
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::FindInPage"* }
%"class.blink::FindInPage" = type opaque
%"class.base::WeakPtr.2194" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::ChromePrintContext"* }
%"class.blink::ChromePrintContext" = type opaque
%"class.blink::WebInputMethodControllerImpl" = type { %"class.blink::WebInputMethodController", %"class.blink::Member.233" }
%"class.blink::WebInputMethodController" = type { i32 (...)** }
%"class.blink::WebTextCheckClient" = type opaque
%"class.blink::WebSpellCheckPanelHostClient" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2197" }
%"class.blink::Persistent.2197" = type { %"class.blink::PersistentBase.2198" }
%"class.blink::PersistentBase.2198" = type { %"class.blink::WebLocalFrameImpl"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::WebViewImpl" = type { %"class.blink::WebView", %"class.WTF::RefCounted.2271", %"class.blink::mojom::blink::PageBroadcast", i8, %"class.blink::WebViewClient"*, %"class.blink::Persistent.2273", %"class.blink::Persistent.2275", %"class.gfx::Size", i8, %"class.blink::IntSize", %"class.blink::IntSize", %"class.std::__1::unique_ptr.2277", i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", double, double, double, double, float, float, i8, i8, %"class.blink::IntPoint", float, i8, float, %"class.blink::TransformationMatrix", i32, i32, %class.scoped_refptr.2283, %"class.blink::Persistent.2385", i8, i8, i8, %"class.std::__1::unique_ptr.2399", %"class.absl::optional.2405", i8, %"class.absl::optional.2405", i32, float, %"class.blink::FloatSize", i8, i8, %"class.gfx::Size", %"class.blink::Persistent.2410", %"struct.blink::web_pref::WebPreferences", %"struct.blink::RendererPreferences", %"class.blink::WeakPersistent.2461", %"class.blink::WeakPersistent.2464", %"class.std::__1::unique_ptr.2466", %"class.blink::Persistent.2472", %"class.mojo::AssociatedRemote.2476", %"class.mojo::AssociatedRemote.2484", %"class.absl::optional.2492", %"class.mojo::AssociatedReceiver", %"class.mojo::RemoteSetImpl", %"class.std::__1::basic_string", %"class.base::ObserverList", %"class.base::WeakPtrFactory.2518" }
%"class.blink::WebView" = type { i32 (...)** }
%"class.WTF::RefCounted.2271" = type { %"class.base::RefCounted.2272" }
%"class.base::RefCounted.2272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::mojom::blink::PageBroadcast" = type { i32 (...)** }
%"class.blink::WebViewClient" = type opaque
%"class.blink::Persistent.2273" = type { %"class.blink::PersistentBase.2274" }
%"class.blink::PersistentBase.2274" = type { %"class.blink::ChromeClient"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.2275" = type { %"class.blink::PersistentBase.2276" }
%"class.blink::PersistentBase.2276" = type { %"class.blink::Page"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.2277" = type { %"class.std::__1::__compressed_pair.2278" }
%"class.std::__1::__compressed_pair.2278" = type { %"struct.std::__1::__compressed_pair_elem.2279" }
%"struct.std::__1::__compressed_pair_elem.2279" = type { %"class.blink::WebSettingsImpl"* }
%"class.blink::WebSettingsImpl" = type opaque
%class.scoped_refptr.2283 = type { %"class.blink::WebPagePopupImpl"* }
%"class.blink::WebPagePopupImpl" = type { %"class.blink::WebPagePopup", %"class.blink::PageWidgetEventHandler", %"class.blink::PagePopup", %"class.WTF::RefCounted.2284", %"class.blink::WidgetBaseClient", %"class.blink::WebViewImpl"*, %"class.blink::Persistent.2275", %"class.blink::Persistent.2286", %"class.blink::PagePopupClient"*, i8, %class.scoped_refptr.2288, %"class.base::TimeTicks", i8, %"class.blink::Persistent.2367", %"class.gfx::Point", %"class.gfx::Point", float, %"class.mojo::AssociatedRemote.2369", %"class.gfx::Rect", i8, %"class.std::__1::unique_ptr.2377", %"class.blink::WeakPersistent" }
%"class.blink::WebPagePopup" = type { %"class.blink::WebWidget" }
%"class.blink::WebWidget" = type { i32 (...)** }
%"class.blink::PageWidgetEventHandler" = type { i32 (...)** }
%"class.blink::PagePopup" = type { i32 (...)** }
%"class.WTF::RefCounted.2284" = type { %"class.base::RefCounted.2285" }
%"class.base::RefCounted.2285" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WidgetBaseClient" = type { i32 (...)** }
%"class.blink::Persistent.2286" = type { %"class.blink::PersistentBase.2287" }
%"class.blink::PersistentBase.2287" = type { %"class.blink::PagePopupChromeClient"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PagePopupChromeClient" = type opaque
%"class.blink::PagePopupClient" = type opaque
%class.scoped_refptr.2288 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.2289", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.2307", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.2347" }>
%"class.base::RefCounted.2289" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.2290", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.2290" = type { %"class.std::__1::__vector_base.2291" }
%"class.std::__1::__vector_base.2291" = type { %class.scoped_refptr.2288*, %class.scoped_refptr.2288*, %"class.std::__1::__compressed_pair.2292" }
%"class.std::__1::__compressed_pair.2292" = type { %"struct.std::__1::__compressed_pair_elem.2293" }
%"struct.std::__1::__compressed_pair_elem.2293" = type { %class.scoped_refptr.2288* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.2297" }
%"class.base::flat_map.2297" = type { %"class.base::internal::flat_tree.2298" }
%"class.base::internal::flat_tree.2298" = type { %"class.std::__1::vector.2299" }
%"class.std::__1::vector.2299" = type { %"class.std::__1::__vector_base.2300" }
%"class.std::__1::__vector_base.2300" = type { %"struct.std::__1::pair.2301"*, %"struct.std::__1::pair.2301"*, %"class.std::__1::__compressed_pair.2302" }
%"struct.std::__1::pair.2301" = type opaque
%"class.std::__1::__compressed_pair.2302" = type { %"struct.std::__1::__compressed_pair_elem.2303" }
%"struct.std::__1::__compressed_pair_elem.2303" = type { %"struct.std::__1::pair.2301"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.2307" = type { %"class.std::__1::__compressed_pair.2308" }
%"class.std::__1::__compressed_pair.2308" = type { %"struct.std::__1::__compressed_pair_elem.2309" }
%"struct.std::__1::__compressed_pair_elem.2309" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.2330", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.2335", %"class.std::__1::vector.2336" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.2310" }
%"class.std::__1::vector.2310" = type { %"class.std::__1::__vector_base.2311" }
%"class.std::__1::__vector_base.2311" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.2325" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.2318", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.2312, i32, %"class.absl::optional.2313", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.581" }>
%class.sk_sp.2312 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.2313" = type { %"class.absl::optional_internal::optional_data.2314" }
%"class.absl::optional_internal::optional_data.2314" = type { %"class.absl::optional_internal::optional_data_base.2315" }
%"class.absl::optional_internal::optional_data_base.2315" = type { %"class.absl::optional_internal::optional_data_dtor_base.2316" }
%"class.absl::optional_internal::optional_data_dtor_base.2316" = type { i8, %union.anon.2317 }
%union.anon.2317 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.2318" = type { %"class.std::__1::__vector_base.2319" }
%"class.std::__1::__vector_base.2319" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.2326" }
%"struct.std::__1::__compressed_pair_elem.2326" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.2330" = type { %"class.absl::optional_internal::optional_data.2331" }
%"class.absl::optional_internal::optional_data.2331" = type { %"class.absl::optional_internal::optional_data_base.2332" }
%"class.absl::optional_internal::optional_data_base.2332" = type { %"class.absl::optional_internal::optional_data_dtor_base.2333" }
%"class.absl::optional_internal::optional_data_dtor_base.2333" = type { i8, %union.anon.2334 }
%union.anon.2334 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.2335" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.2336" = type { %"class.std::__1::__vector_base.2337" }
%"class.std::__1::__vector_base.2337" = type { %"class.std::__1::unique_ptr.2338"*, %"class.std::__1::unique_ptr.2338"*, %"class.std::__1::__compressed_pair.2339" }
%"class.std::__1::unique_ptr.2338" = type opaque
%"class.std::__1::__compressed_pair.2339" = type { %"struct.std::__1::__compressed_pair_elem.2340" }
%"struct.std::__1::__compressed_pair_elem.2340" = type { %"class.std::__1::unique_ptr.2338"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2349" }
%"struct.std::__1::__compressed_pair_elem.2349" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.2350", %"class.std::__1::vector.2350", %"class.std::__1::vector.2357" }
%"class.std::__1::vector.2350" = type { %"class.std::__1::__vector_base.2351" }
%"class.std::__1::__vector_base.2351" = type { i8**, i8**, %"class.std::__1::__compressed_pair.2352" }
%"class.std::__1::__compressed_pair.2352" = type { %"struct.std::__1::__compressed_pair_elem.2353" }
%"struct.std::__1::__compressed_pair_elem.2353" = type { i8** }
%"class.std::__1::vector.2357" = type { %"class.std::__1::__vector_base.2358" }
%"class.std::__1::__vector_base.2358" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.2359" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.2360" }
%"struct.std::__1::__compressed_pair_elem.2360" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.blink::Persistent.2367" = type { %"class.blink::PersistentBase.2368" }
%"class.blink::PersistentBase.2368" = type { %"class.blink::DOMRect"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMRect" = type opaque
%"class.mojo::AssociatedRemote.2369" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2370" }
%"class.mojo::internal::AssociatedInterfacePtrState.2370" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2371" }
%"class.std::__1::unique_ptr.2371" = type { %"class.std::__1::__compressed_pair.2372" }
%"class.std::__1::__compressed_pair.2372" = type { %"struct.std::__1::__compressed_pair_elem.2373" }
%"struct.std::__1::__compressed_pair_elem.2373" = type { %"class.blink::mojom::blink::PopupWidgetHostProxy"* }
%"class.blink::mojom::blink::PopupWidgetHostProxy" = type { %"class.blink::mojom::blink::PopupWidgetHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PopupWidgetHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2377" = type { %"class.std::__1::__compressed_pair.2378" }
%"class.std::__1::__compressed_pair.2378" = type { %"struct.std::__1::__compressed_pair_elem.2379" }
%"struct.std::__1::__compressed_pair_elem.2379" = type { %"class.blink::WidgetBase"* }
%"class.blink::WidgetBase" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.2383" }
%"class.blink::PersistentBase.2383" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.2384" }
%"class.blink::PersistentNodePtr.2384" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.2385" = type { %"class.blink::PersistentBase.2386" }
%"class.blink::PersistentBase.2386" = type { %"class.blink::DevToolsEmulator"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DevToolsEmulator" = type <{ %"class.blink::WebViewImpl"*, i8, i8, [6 x i8], %"struct.blink::DeviceEmulationParams", %"class.absl::optional.2394", i8, i8, i8, i8, float, i8, [3 x i8], i32, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8], float, float, i8, i8, i8, i8, i8, [3 x i8], i32, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"struct.blink::DeviceEmulationParams" = type { i32, %"class.gfx::Size", %"class.absl::optional.2389", %"class.gfx::Size", float, float, %"class.gfx::PointF", float, i32, i32, %"class.std::__1::vector.2318" }
%"class.absl::optional.2389" = type { %"class.absl::optional_internal::optional_data.2390" }
%"class.absl::optional_internal::optional_data.2390" = type { %"class.absl::optional_internal::optional_data_base.2391" }
%"class.absl::optional_internal::optional_data_base.2391" = type { %"class.absl::optional_internal::optional_data_dtor_base.2392" }
%"class.absl::optional_internal::optional_data_dtor_base.2392" = type { i8, %union.anon.2393 }
%union.anon.2393 = type { %"class.gfx::Point" }
%"class.absl::optional.2394" = type { %"class.absl::optional_internal::optional_data.2395" }
%"class.absl::optional_internal::optional_data.2395" = type { %"class.absl::optional_internal::optional_data_base.2396" }
%"class.absl::optional_internal::optional_data_base.2396" = type { %"class.absl::optional_internal::optional_data_dtor_base.2397" }
%"class.absl::optional_internal::optional_data_dtor_base.2397" = type { i8, %union.anon.2398 }
%union.anon.2398 = type { %"struct.blink::DevToolsEmulator::ViewportOverride" }
%"struct.blink::DevToolsEmulator::ViewportOverride" = type { %"class.blink::FloatPoint", double }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.2399" = type { %"class.std::__1::__compressed_pair.2400" }
%"class.std::__1::__compressed_pair.2400" = type { %"struct.std::__1::__compressed_pair_elem.2401" }
%"struct.std::__1::__compressed_pair_elem.2401" = type { %"class.blink::FullscreenController"* }
%"class.blink::FullscreenController" = type opaque
%"class.absl::optional.2405" = type { %"class.absl::optional_internal::optional_data.2406" }
%"class.absl::optional_internal::optional_data.2406" = type { %"class.absl::optional_internal::optional_data_base.2407" }
%"class.absl::optional_internal::optional_data_base.2407" = type { %"class.absl::optional_internal::optional_data_dtor_base.2408" }
%"class.absl::optional_internal::optional_data_dtor_base.2408" = type { i8, %union.anon.2409 }
%union.anon.2409 = type { i32 }
%"class.blink::Persistent.2410" = type { %"class.blink::PersistentBase.2411" }
%"class.blink::PersistentBase.2411" = type { %"class.blink::EventListener"*, %"class.blink::PersistentNodePtr" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2414" }
%"class.absl::optional.2414" = type { %"class.absl::optional_internal::optional_data.2415" }
%"class.absl::optional_internal::optional_data.2415" = type { %"class.absl::optional_internal::optional_data_base.2416" }
%"class.absl::optional_internal::optional_data_base.2416" = type { %"class.absl::optional_internal::optional_data_dtor_base.2417" }
%"class.absl::optional_internal::optional_data_dtor_base.2417" = type { i8, %union.anon.2418 }
%union.anon.2418 = type { i64 }
%"struct.blink::web_pref::WebPreferences" = type <{ %"class.std::__1::map.2419", %"class.std::__1::map.2419", %"class.std::__1::map.2419", %"class.std::__1::map.2419", %"class.std::__1::map.2419", %"class.std::__1::map.2419", %"class.std::__1::map.2419", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", float, i8, i8, i8, i8, %class.GURL, i8, [3 x i8], float, float, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.std::__1::map.2436", %"class.std::__1::map.2436", %"class.std::__1::map.2436", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::map.2419" = type { %"class.std::__1::__tree.2420" }
%"class.std::__1::__tree.2420" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2421", %"class.std::__1::__compressed_pair.2425" }
%"class.std::__1::__compressed_pair.2421" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.2425" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2430" }
%"class.std::__1::unique_ptr.2430" = type { %"class.std::__1::__compressed_pair.2431" }
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.2432" }
%"struct.std::__1::__compressed_pair_elem.2432" = type { %class.GURL* }
%"class.std::__1::map.2436" = type { %"class.std::__1::__tree.2437" }
%"class.std::__1::__tree.2437" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2438", %"class.std::__1::__compressed_pair.2442" }
%"class.std::__1::__compressed_pair.2438" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.2442" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.blink::RendererPreferences" = type { i8, i8, i32, i8, i8, i32, i8, i32, i32, i32, i32, i32, i8, %"class.absl::optional.352", i8, i8, i8, i8, i8, %"class.std::__1::basic_string", i16, i16, %"class.std::__1::vector.2447", i8, %"struct.blink::UserAgentOverride", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, %"class.std::__1::vector.2454" }
%"class.std::__1::vector.2447" = type { %"class.std::__1::__vector_base.2448" }
%"class.std::__1::__vector_base.2448" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2449" }
%"class.std::__1::__compressed_pair.2449" = type { %"struct.std::__1::__compressed_pair_elem.2450" }
%"struct.std::__1::__compressed_pair_elem.2450" = type { %"class.std::__1::basic_string"* }
%"struct.blink::UserAgentOverride" = type { %"class.std::__1::basic_string", %"class.absl::optional.275" }
%"class.std::__1::vector.2454" = type { %"class.std::__1::__vector_base.2455" }
%"class.std::__1::__vector_base.2455" = type { i16*, i16*, %"class.std::__1::__compressed_pair.2456" }
%"class.std::__1::__compressed_pair.2456" = type { %"struct.std::__1::__compressed_pair_elem.2457" }
%"struct.std::__1::__compressed_pair_elem.2457" = type { i16* }
%"class.blink::WeakPersistent.2461" = type { %"class.blink::PersistentBase.2462" }
%"class.blink::PersistentBase.2462" = type { %"class.blink::WebLocalFrameImpl"*, %"class.blink::PersistentNodePtr.2463" }
%"class.blink::PersistentNodePtr.2463" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.2464" = type { %"class.blink::PersistentBase.2465" }
%"class.blink::PersistentBase.2465" = type { %"class.blink::WebFrameWidgetImpl"*, %"class.blink::PersistentNodePtr.2463" }
%"class.std::__1::unique_ptr.2466" = type { %"class.std::__1::__compressed_pair.2467" }
%"class.std::__1::__compressed_pair.2467" = type { %"struct.std::__1::__compressed_pair_elem.2468" }
%"struct.std::__1::__compressed_pair_elem.2468" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type opaque
%"class.blink::Persistent.2472" = type { %"class.blink::PersistentBase.2473" }
%"class.blink::PersistentBase.2473" = type { %"class.blink::ResizeViewportAnchor"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ResizeViewportAnchor" = type <{ %"class.blink::FloatSize", %"class.blink::Member.922", i32, [4 x i8] }>
%"class.mojo::AssociatedRemote.2476" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2477" }
%"class.mojo::internal::AssociatedInterfacePtrState.2477" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2478" }
%"class.std::__1::unique_ptr.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.2480" }
%"struct.std::__1::__compressed_pair_elem.2480" = type { %"class.blink::mojom::blink::LocalMainFrameHostProxy"* }
%"class.blink::mojom::blink::LocalMainFrameHostProxy" = type { %"class.blink::mojom::blink::LocalMainFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalMainFrameHost" = type { i32 (...)** }
%"class.mojo::AssociatedRemote.2484" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2485" }
%"class.mojo::internal::AssociatedInterfacePtrState.2485" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2486" }
%"class.std::__1::unique_ptr.2486" = type { %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"class.blink::mojom::blink::RemoteMainFrameHostProxy"* }
%"class.blink::mojom::blink::RemoteMainFrameHostProxy" = type { %"class.blink::mojom::blink::RemoteMainFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::RemoteMainFrameHost" = type { i32 (...)** }
%"class.absl::optional.2492" = type { %"class.absl::optional_internal::optional_data.2493" }
%"class.absl::optional_internal::optional_data.2493" = type { %"class.absl::optional_internal::optional_data_base.2494" }
%"class.absl::optional_internal::optional_data_base.2494" = type { %"class.absl::optional_internal::optional_data_dtor_base.2495" }
%"class.absl::optional_internal::optional_data_dtor_base.2495" = type { i8, %union.anon.2496 }
%union.anon.2496 = type { i32 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::PageBroadcastStub", %"class.base::WeakPtrFactory.2497" }
%"class.blink::mojom::blink::PageBroadcastStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::PageBroadcast"* }
%"class.base::WeakPtrFactory.2497" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::RemoteSetImpl" = type { %"class.util::IdType<mojo::internal::RemoteSetElementIdTypeTag, unsigned int, 0, 1>::Generator", %"class.std::__1::map.2498", %"class.base::RepeatingCallback.2509" }
%"class.util::IdType<mojo::internal::RemoteSetElementIdTypeTag, unsigned int, 0, 1>::Generator" = type { i32 }
%"class.std::__1::map.2498" = type { %"class.std::__1::__tree.2499" }
%"class.std::__1::__tree.2499" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2500", %"class.std::__1::__compressed_pair.2504" }
%"class.std::__1::__compressed_pair.2500" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"class.std::__1::__compressed_pair.2504" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.base::RepeatingCallback.2509" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.2510", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.2510" = type { %"class.std::__1::__vector_base.2511" }
%"class.std::__1::__vector_base.2511" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.2513" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.2512" }
%"class.base::WeakPtr.2512" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.2513" = type { %"struct.std::__1::__compressed_pair_elem.2514" }
%"struct.std::__1::__compressed_pair_elem.2514" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.2518" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2519" }
%"class.std::__1::unique_ptr.2519" = type { %"class.std::__1::__compressed_pair.2520" }
%"class.std::__1::__compressed_pair.2520" = type { %"struct.std::__1::__compressed_pair_elem.2521" }
%"struct.std::__1::__compressed_pair_elem.2521" = type { %"class.blink::protocol::Emulation::UserAgentMetadata"* }
%"class.blink::protocol::Emulation::UserAgentMetadata" = type <{ %"class.crdtp::ProtocolObject", %"class.crdtp::detail::PtrMaybe.2522", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, [7 x i8] }>
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::PtrMaybe.2522" = type { %"class.std::__1::unique_ptr.2523" }
%"class.std::__1::unique_ptr.2523" = type { %"class.std::__1::__compressed_pair.2524" }
%"class.std::__1::__compressed_pair.2524" = type { %"struct.std::__1::__compressed_pair_elem.2525" }
%"struct.std::__1::__compressed_pair_elem.2525" = type { %"class.std::__1::vector.2526"* }
%"class.std::__1::vector.2526" = type { %"class.std::__1::__vector_base.2527" }
%"class.std::__1::__vector_base.2527" = type { %"class.std::__1::unique_ptr.2528"*, %"class.std::__1::unique_ptr.2528"*, %"class.std::__1::__compressed_pair.2537" }
%"class.std::__1::unique_ptr.2528" = type { %"class.std::__1::__compressed_pair.2529" }
%"class.std::__1::__compressed_pair.2529" = type { %"struct.std::__1::__compressed_pair_elem.2530" }
%"struct.std::__1::__compressed_pair_elem.2530" = type { %"class.blink::protocol::Emulation::UserAgentBrandVersion"* }
%"class.blink::protocol::Emulation::UserAgentBrandVersion" = type { %"class.crdtp::ProtocolObject.2531", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2531" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.2537" = type { %"struct.std::__1::__compressed_pair_elem.2538" }
%"struct.std::__1::__compressed_pair_elem.2538" = type { %"class.std::__1::unique_ptr.2528"* }
%"class.crdtp::detail::ValueMaybe.2548" = type { i8, i32 }
%"class.std::__1::unique_ptr.2554" = type { %"class.std::__1::__compressed_pair.2555" }
%"class.std::__1::__compressed_pair.2555" = type { %"struct.std::__1::__compressed_pair_elem.2556" }
%"struct.std::__1::__compressed_pair_elem.2556" = type { %"class.blink::protocol::Emulation::MediaFeature"* }
%"class.blink::protocol::Emulation::MediaFeature" = type { %"class.crdtp::ProtocolObject.2557", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2557" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2573" = type { %"class.std::__1::unique_ptr.2549" }
%"class.std::__1::unique_ptr.2549" = type { %"class.std::__1::__compressed_pair.2550" }
%"class.std::__1::__compressed_pair.2550" = type { %"struct.std::__1::__compressed_pair_elem.2551" }
%"struct.std::__1::__compressed_pair_elem.2551" = type { %"class.std::__1::vector.2552"* }
%"class.std::__1::vector.2552" = type { %"class.std::__1::__vector_base.2553" }
%"class.std::__1::__vector_base.2553" = type { %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::__compressed_pair.2563" }
%"class.std::__1::__compressed_pair.2563" = type { %"struct.std::__1::__compressed_pair_elem.2564" }
%"struct.std::__1::__compressed_pair_elem.2564" = type { %"class.std::__1::unique_ptr.2554"* }
%"class.crdtp::StatusOr" = type { %"struct.crdtp::Status", %"class.std::__1::unique_ptr.2574" }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.std::__1::unique_ptr.2574" = type { %"class.std::__1::__compressed_pair.2575" }
%"class.std::__1::__compressed_pair.2575" = type { %"struct.std::__1::__compressed_pair_elem.2576" }
%"struct.std::__1::__compressed_pair_elem.2576" = type { %"class.blink::protocol::DOM::RGBA"* }
%"class.blink::protocol::DOM::RGBA" = type { %"class.crdtp::ProtocolObject.2577", i32, i32, i32, %"class.crdtp::detail::ValueMaybe.2580" }
%"class.crdtp::ProtocolObject.2577" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2580" = type { i8, double }
%"class.crdtp::detail::PtrMaybe.2584" = type { %"class.std::__1::unique_ptr.2574" }
%"class.crdtp::detail::ValueMaybe.2585" = type { i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::LocaleController" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [6 x i8], [2 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr.2872", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.2873" }
%"class.std::__1::shared_ptr.2872" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"class.std::__1::vector.2873" = type { %"class.std::__1::__vector_base.2874" }
%"class.std::__1::__vector_base.2874" = type { %"class.crdtp::span.2875"*, %"class.crdtp::span.2875"*, %"class.std::__1::__compressed_pair.2876" }
%"class.crdtp::span.2875" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.2876" = type { %"struct.std::__1::__compressed_pair_elem.2877" }
%"struct.std::__1::__compressed_pair_elem.2877" = type { %"class.crdtp::span.2875"* }
%"class.crdtp::DeserializerDescriptor" = type <{ %"struct.crdtp::DeserializerDescriptor::Field"*, i64, i32, [4 x i8] }>
%"struct.crdtp::DeserializerDescriptor::Field" = type { %"class.crdtp::span.2875", i8, i1 (%"class.crdtp::DeserializerState"*, i8*)* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::scheduler::ThreadCPUThrottler" = type { %"class.std::__1::unique_ptr.2586" }
%"class.std::__1::unique_ptr.2586" = type { %"class.std::__1::__compressed_pair.2587" }
%"class.std::__1::__compressed_pair.2587" = type { %"struct.std::__1::__compressed_pair_elem.2588" }
%"struct.std::__1::__compressed_pair_elem.2588" = type { %"class.blink::scheduler::ThreadCPUThrottler::ThrottlingThread"* }
%"class.blink::scheduler::ThreadCPUThrottler::ThrottlingThread" = type opaque
%"class.WTF::StringAppend.2696" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2882" = type { %"class.WTF::StringTypeAdapter.2883" }
%"class.WTF::StringTypeAdapter.2883" = type { %"class.WTF::StringView" }
%"class.blink::WeakPersistent.2592" = type { %"class.blink::PersistentBase.2593" }
%"class.blink::PersistentBase.2593" = type { %"class.blink::InspectorEmulationAgent"*, %"class.blink::PersistentNodePtr.2463" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent.2592" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2848", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.2848" = type { %"class.std::__1::__vector_base.2849" }
%"class.std::__1::__vector_base.2849" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2850" }
%"class.std::__1::__compressed_pair.2850" = type { %"struct.std::__1::__compressed_pair_elem.2851" }
%"struct.std::__1::__compressed_pair_elem.2851" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2807", i64, i64 }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.2855" }
%"class.std::__1::list.2855" = type { %"class.std::__1::__list_imp.2856" }
%"class.std::__1::__list_imp.2856" = type { %"struct.std::__1::__list_node_base.2857", %"class.std::__1::__compressed_pair.2858" }
%"struct.std::__1::__list_node_base.2857" = type { %"struct.std::__1::__list_node_base.2857"*, %"struct.std::__1::__list_node_base.2857"* }
%"class.std::__1::__compressed_pair.2858" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"class.WTF::StringAppend.2594" = type { %"class.WTF::String", i8* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.660, %class.scoped_refptr.660, %class.scoped_refptr.660, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2595, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2608", %"class.absl::optional.2613", %"class.absl::optional.2623", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.362", %"class.absl::optional.2623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2623", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.362", %"class.absl::optional.2628", i8, %class.scoped_refptr.2634 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.2595 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2596", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.2597", %class.scoped_refptr.2606, i8, %"class.url::Origin" }
%"class.base::RefCounted.2596" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.2597" = type { %"class.std::__1::vector.2598" }
%"class.std::__1::vector.2598" = type { %"class.std::__1::__vector_base.2599" }
%"class.std::__1::__vector_base.2599" = type { %"class.std::__1::unique_ptr.2600"*, %"class.std::__1::unique_ptr.2600"*, %"class.std::__1::__compressed_pair.2601" }
%"class.std::__1::unique_ptr.2600" = type { %"class.std::__1::__compressed_pair.2786" }
%"class.std::__1::__compressed_pair.2786" = type { %"struct.std::__1::__compressed_pair_elem.2787" }
%"struct.std::__1::__compressed_pair_elem.2787" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2601" = type { %"struct.std::__1::__compressed_pair_elem.2602" }
%"struct.std::__1::__compressed_pair_elem.2602" = type { %"class.std::__1::unique_ptr.2600"* }
%class.scoped_refptr.2606 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2607", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2607" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2608" = type { %"class.absl::optional_internal::optional_data.2609" }
%"class.absl::optional_internal::optional_data.2609" = type { %"class.absl::optional_internal::optional_data_base.2610" }
%"class.absl::optional_internal::optional_data_base.2610" = type { %"class.absl::optional_internal::optional_data_dtor_base.2611" }
%"class.absl::optional_internal::optional_data_dtor_base.2611" = type { i8, %union.anon.2612 }
%union.anon.2612 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2613" = type { %"class.absl::optional_internal::optional_data.2614" }
%"class.absl::optional_internal::optional_data.2614" = type { %"class.absl::optional_internal::optional_data_base.2615" }
%"class.absl::optional_internal::optional_data_base.2615" = type { %"class.absl::optional_internal::optional_data_dtor_base.2616" }
%"class.absl::optional_internal::optional_data_dtor_base.2616" = type { i8, %union.anon.2617 }
%union.anon.2617 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2618", %"class.WTF::Vector.335", %"class.WTF::String" }
%"class.WTF::Vector.2618" = type { %"class.WTF::VectorBuffer.2619" }
%"class.WTF::VectorBuffer.2619" = type { %"class.WTF::VectorBufferBase.2620" }
%"class.WTF::VectorBufferBase.2620" = type { %class.scoped_refptr.660*, i32, i32 }
%"class.absl::optional.2623" = type { %"class.absl::optional_internal::optional_data.2624" }
%"class.absl::optional_internal::optional_data.2624" = type { %"class.absl::optional_internal::optional_data_base.2625" }
%"class.absl::optional_internal::optional_data_base.2625" = type { %"class.absl::optional_internal::optional_data_dtor_base.2626" }
%"class.absl::optional_internal::optional_data_dtor_base.2626" = type { i8, %union.anon.2627 }
%union.anon.2627 = type { %"class.WTF::String" }
%"class.absl::optional.2628" = type { %"class.absl::optional_internal::optional_data.2629" }
%"class.absl::optional_internal::optional_data.2629" = type { %"class.absl::optional_internal::optional_data_base.2630" }
%"class.absl::optional_internal::optional_data_base.2630" = type { %"class.absl::optional_internal::optional_data_dtor_base.2631" }
%"class.absl::optional_internal::optional_data_dtor_base.2631" = type { i8, %union.anon.2632 }
%union.anon.2632 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2633" }
%"class.mojo::PendingRemote.2633" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2634 = type { %"class.base::RefCountedData.2635"* }
%"class.base::RefCountedData.2635" = type { %"class.base::RefCountedThreadSafe.2791", %"class.base::internal::flat_tree.2792" }
%"class.base::RefCountedThreadSafe.2791" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2792" = type { %"class.std::__1::vector.2793" }
%"class.std::__1::vector.2793" = type { %"class.std::__1::__vector_base.2794" }
%"class.std::__1::__vector_base.2794" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2795" }
%"class.std::__1::__compressed_pair.2795" = type { %"struct.std::__1::__compressed_pair_elem.2796" }
%"struct.std::__1::__compressed_pair_elem.2796" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.659, %"class.mojo::PendingRemote.2636" }
%"class.mojo::PendingRemote.2636" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2637", %"class.WTF::String", %"class.WTF::HashSet.2638", i8, i8, %class.scoped_refptr.1263, %class.scoped_refptr.2643, %class.scoped_refptr.2645 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.2637" = type { i8 }
%"class.WTF::HashSet.2638" = type { %"class.WTF::HashTable.2639" }
%"class.WTF::HashTable.2639" = type <{ %"struct.std::__1::pair.2642"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2642" = type opaque
%class.scoped_refptr.2643 = type { %"class.base::RefCountedData.2644"* }
%"class.base::RefCountedData.2644" = type opaque
%class.scoped_refptr.2645 = type { %"class.base::RefCountedData.2646"* }
%"class.base::RefCountedData.2646" = type { %"class.base::RefCountedThreadSafe.2647", [4 x i8], %"class.WTF::HashSet.1021" }
%"class.base::RefCountedThreadSafe.2647" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.crdtp::detail::PtrMaybe.2648" = type { %"class.std::__1::unique_ptr.2649" }
%"class.std::__1::unique_ptr.2649" = type { %"class.std::__1::__compressed_pair.2650" }
%"class.std::__1::__compressed_pair.2650" = type { %"struct.std::__1::__compressed_pair_elem.2651" }
%"struct.std::__1::__compressed_pair_elem.2651" = type { %"class.blink::protocol::Emulation::ScreenOrientation"* }
%"class.blink::protocol::Emulation::ScreenOrientation" = type <{ %"class.crdtp::ProtocolObject.2652", %"class.WTF::String", i32, [4 x i8] }>
%"class.crdtp::ProtocolObject.2652" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2658" = type { %"class.std::__1::unique_ptr.2659" }
%"class.std::__1::unique_ptr.2659" = type { %"class.std::__1::__compressed_pair.2660" }
%"class.std::__1::__compressed_pair.2660" = type { %"struct.std::__1::__compressed_pair_elem.2661" }
%"struct.std::__1::__compressed_pair_elem.2661" = type { %"class.blink::protocol::Page::Viewport"* }
%"class.blink::protocol::Page::Viewport" = type { %"class.crdtp::ProtocolObject.2662", double, double, double, double, double }
%"class.crdtp::ProtocolObject.2662" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2668" = type { %"class.std::__1::unique_ptr.2669" }
%"class.std::__1::unique_ptr.2669" = type { %"class.std::__1::__compressed_pair.2670" }
%"class.std::__1::__compressed_pair.2670" = type { %"struct.std::__1::__compressed_pair_elem.2671" }
%"struct.std::__1::__compressed_pair_elem.2671" = type { %"class.blink::protocol::Emulation::DisplayFeature"* }
%"class.blink::protocol::Emulation::DisplayFeature" = type { %"class.crdtp::ProtocolObject.2672", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.2672" = type { %"class.crdtp::Serializable" }
%"class.std::__1::vector.2685" = type { %"class.std::__1::__vector_base.2686" }
%"class.std::__1::__vector_base.2686" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2687" }
%"class.std::__1::__compressed_pair.2687" = type { %"struct.std::__1::__compressed_pair_elem.2688" }
%"struct.std::__1::__compressed_pair_elem.2688" = type { %"class.WTF::String"* }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2697", %"class.std::__1::vector.2705" }
%"class.std::__1::vector.2697" = type { %"class.std::__1::__vector_base.2698" }
%"class.std::__1::__vector_base.2698" = type { %"struct.std::__1::pair.2699"*, %"struct.std::__1::pair.2699"*, %"class.std::__1::__compressed_pair.2700" }
%"struct.std::__1::pair.2699" = type opaque
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"struct.std::__1::pair.2699"* }
%"class.std::__1::vector.2705" = type { %"class.std::__1::__vector_base.2706" }
%"class.std::__1::__vector_base.2706" = type { %"struct.std::__1::pair.2707"*, %"struct.std::__1::pair.2707"*, %"class.std::__1::__compressed_pair.2708" }
%"struct.std::__1::pair.2707" = type opaque
%"class.std::__1::__compressed_pair.2708" = type { %"struct.std::__1::__compressed_pair_elem.2709" }
%"struct.std::__1::__compressed_pair_elem.2709" = type { %"struct.std::__1::pair.2707"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEC2EPS0_RKS6_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED2Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_ = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv = comdat any

$_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol3DOM4RGBAEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv = comdat any

$_ZN20trace_event_internal13AddTraceEventIRKdEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE5ClearEv = comdat any

$_ZN5blink17UserAgentMetadataD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEES9_S9_ = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv = comdat any

$_ZN5blink17UserAgentMetadataaSEOS0_ = comdat any

$_ZN5blink17UserAgentMetadataaSERKS0_ = comdat any

$_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN5blink17UserAgentMetadataC2ERKS0_ = comdat any

$_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Emulation12MediaFeatureENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DocumentLoaderEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DocumentLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN5blink10TraceTraitINS_17WebLocalFrameImplEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink23InspectorEmulationAgentE = hidden unnamed_addr constant { [30 x i8*], [24 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink23InspectorEmulationAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgent20resetPageScaleFactorEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, double)* @_ZN5blink23InspectorEmulationAgent18setPageScaleFactorEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZN5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZN5blink23InspectorEmulationAgent19setScrollbarsHiddenEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZN5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1, %"class.crdtp::detail::ValueMaybe.2548"*)* @_ZN5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe.2573"*)* @_ZN5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZN5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, double)* @_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZN5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2580"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2585"*, %"class.crdtp::detail::ValueMaybe.2580"*, double*)* @_ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZN5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZN5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::PtrMaybe.2584"*)* @_ZN5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i32, i32, double, i1, %"class.crdtp::detail::ValueMaybe.2580"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2585"*, %"class.crdtp::detail::PtrMaybe.2648"*, %"class.crdtp::detail::PtrMaybe.2658"*, %"class.crdtp::detail::PtrMaybe.2668"*)* @_ZN5blink23InspectorEmulationAgent24setDeviceMetricsOverrideEiidbN5crdtp6detail10ValueMaybeIdEENS3_IiEES5_S5_S5_NS3_IbEENS2_8PtrMaybeINS_8protocol9Emulation17ScreenOrientationEEENS7_INS8_4Page8ViewportEEENS7_INS9_14DisplayFeatureEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgent26clearDeviceMetricsOverrideEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe"*)* @_ZN5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.std::__1::vector.2685"*)* @_ZN5blink23InspectorEmulationAgent21setDisabledImageTypesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*)], [24 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*)* @_ZThn8_N5blink23InspectorEmulationAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorEmulationAgent"*)* @_ZThn8_N5blink23InspectorEmulationAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZThn8_N5blink23InspectorEmulationAgent26clearDeviceMetricsOverrideEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZThn8_N5blink23InspectorEmulationAgent20resetPageScaleFactorEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZThn8_N5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, double)* @_ZThn8_N5blink23InspectorEmulationAgent20setCPUThrottlingRateEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::PtrMaybe.2584"*)* @_ZThn8_N5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i32, i32, double, i1, %"class.crdtp::detail::ValueMaybe.2580"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2585"*, %"class.crdtp::detail::PtrMaybe.2648"*, %"class.crdtp::detail::PtrMaybe.2658"*, %"class.crdtp::detail::PtrMaybe.2668"*)* @_ZThn8_N5blink23InspectorEmulationAgent24setDeviceMetricsOverrideEiidbN5crdtp6detail10ValueMaybeIdEENS3_IiEES5_S5_S5_NS3_IbEENS2_8PtrMaybeINS_8protocol9Emulation17ScreenOrientationEEENS7_INS8_4Page8ViewportEEENS7_INS9_14DisplayFeatureEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZThn8_N5blink23InspectorEmulationAgent19setScrollbarsHiddenEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZThn8_N5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe.2573"*)* @_ZThn8_N5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, double)* @_ZThn8_N5blink23InspectorEmulationAgent18setPageScaleFactorEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1)* @_ZThn8_N5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, i1, %"class.crdtp::detail::ValueMaybe.2548"*)* @_ZThn8_N5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2580"*, %"class.crdtp::detail::ValueMaybe.2548"*, %"class.crdtp::detail::ValueMaybe.2585"*, %"class.crdtp::detail::ValueMaybe.2580"*, double*)* @_ZThn8_N5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.std::__1::vector.2685"*)* @_ZThn8_N5blink23InspectorEmulationAgent21setDisabledImageTypesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe"*)* @_ZThn8_N5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorEmulationAgent"*)* @_ZThn8_N5blink23InspectorEmulationAgent7disableEv to i8*)] }, align 8
@_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"Touch points must be between 1 and \00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum4NoneE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum13AchromatopsiaE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum13BlurredVisionE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum12DeuteranopiaE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum10ProtanopiaE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum10TritanopiaE = external local_unnamed_addr global i8*, align 8
@.str.3 = private unnamed_addr constant [31 x i8] c"Unknown vision deficiency type\00", align 1
@__const._ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd.new_policy = private unnamed_addr constant { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon.258 } } } }, { { { { i8, [3 x i8], %union.anon.263 } } } } } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.258 } } } } { { { { i8, [7 x i8], %union.anon.258 } } } { { { i8, [7 x i8], %union.anon.258 } } { { i8, [7 x i8], %union.anon.258 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.258 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [3 x i8], %union.anon.263 } } } } { { { { i8, [3 x i8], %union.anon.263 } } } { { { i8, [3 x i8], %union.anon.263 } } { { i8, [3 x i8], %union.anon.263 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.263 { i32 -1431655766 } } } } } }, align 8
@_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum7AdvanceE = external constant [0 x i8], align 1
@_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum28PauseIfNetworkFetchesPendingE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [77 x i8] c"../../third_party/blink/renderer/core/inspector/inspector_emulation_agent.cc\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"Can only specify virtual time budget for non-Pause policy\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"Can only specify budget for non-Pause policy\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c"Can only specify virtual time starvation for non-Pause policy\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"Can only specify starvation count for non-Pause policy\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.9 = private unnamed_addr constant [18 x i8] c"VirtualTimeBudget\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"budget\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"Accept-Language\00", align 1
@.str.13 = private unnamed_addr constant [49 x i8] c"Can't specify UserAgentMetadata but no UA string\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"Another locale override is already in effect\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Timezone override is already in effect\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"Invalid timezone id\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"Can only enable virtual time for pages, not workers\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"image/\00", align 1
@_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4AvifE = external constant [0 x i8], align 1
@_ZN5blink8protocol9Emulation21DisabledImageTypeEnum3JxlE = external constant [0 x i8], align 1
@_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4WebpE = external constant [0 x i8], align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"Invalid image type\00", align 1
@_ZTVN5blink19InspectorAgentState8MapFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.294"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.294"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.294"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.294"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, bool>]\00", align 1
@_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.269"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.269"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.269"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.269"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [24 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv to i8*)], [24 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv to i8*)] }, comdat, align 8
@_ZTVN5blink8protocol9Emulation12MediaFeatureE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10http_names7kAcceptE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.267"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.267"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.267"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.268"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.268"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.268"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.293"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.293"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.293"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol9Emulation8Metainfo10domainNameE = external constant [0 x i8], align 1
@.str.23 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.26 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZTVN5blink8protocol3DOM4RGBAE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.30 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.31 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.32 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.35 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink23InspectorEmulationAgentC1EPNS_17WebLocalFrameImplE = hidden unnamed_addr alias void (%"class.blink::InspectorEmulationAgent"*, %"class.blink::WebLocalFrameImpl"*), void (%"class.blink::InspectorEmulationAgent"*, %"class.blink::WebLocalFrameImpl"*)* @_ZN5blink23InspectorEmulationAgentC2EPNS_17WebLocalFrameImplE
@_ZN5blink23InspectorEmulationAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorEmulationAgent"*), void (%"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgentC2EPNS_17WebLocalFrameImplE(%"class.blink::InspectorEmulationAgent"*, %"class.blink::WebLocalFrameImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.blink::InspectorEmulationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation8Metainfo10domainNameE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #13
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %2, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %28 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.227"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorEmulationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [24 x i8*] }, { [30 x i8*], [24 x i8*] }* @_ZTVN5blink23InspectorEmulationAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [24 x i8*] }, { [30 x i8*], [24 x i8*] }* @_ZTVN5blink23InspectorEmulationAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::WebLocalFrameImpl"* %1, %"class.blink::WebLocalFrameImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7
  %35 = bitcast %"class.std::__1::vector"* %4 to i8*
  %36 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 33, i1 false)
  %37 = bitcast %union.anon.253* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 33, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEC2EPS0_RKS6_(%"class.blink::InspectorAgentState::SimpleField"* %34, %"class.blink::InspectorAgentState"* %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %4)
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %27
  %42 = ptrtoint i8* %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %44 = bitcast i8** %43 to i64*
  store i64 %42, i64* %44, align 8
  call void @_ZdlPv(i8* nonnull %39) #15
  br label %45

45:                                               ; preds = %27, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  %46 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8
  %47 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %46, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %47) #13
  %50 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %51 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 1
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 2
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9
  %54 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %53, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %54) #13
  %57 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 1
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 2
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10
  %61 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %60, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %61) #13
  %64 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %65 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 1
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 2
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11
  %68 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %67, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %68) #13
  %71 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 1
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 2
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12
  %75 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %74, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %75) #13
  %78 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %79 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 1
  store i32 1, i32* %79, align 8
  %80 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 2
  store i32 1, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13
  %82 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %81, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %81, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %82) #13
  %85 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %86 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14
  %88 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %87, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %87, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::StringImpl"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %91 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %88) #13
  %92 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %93 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15
  %95 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %94, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %94, i64 0, i32 0, i32 0
  %97 = bitcast %"class.WTF::StringImpl"** %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 28, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %98 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %95) #13
  %99 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %99, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %100 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16
  %102 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %101, i64 0, i32 0
  %103 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %101, i64 0, i32 0, i32 0
  %104 = bitcast %"class.WTF::StringImpl"** %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %105 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %102) #13
  %106 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %107 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 1, i32 0, i32 0
  %108 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17
  %109 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %108, i64 0, i32 0
  %110 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %108, i64 0, i32 0, i32 0
  %111 = bitcast %"class.WTF::StringImpl"** %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %112 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %109) #13
  %113 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %113, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %114 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 1, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18
  %116 = bitcast %"class.std::__1::vector"* %5 to i8*
  %117 = bitcast %"class.WTF::StringImpl"** %114 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEC2EPS0_RKS6_(%"class.blink::InspectorAgentState::SimpleField"* %115, %"class.blink::InspectorAgentState"* %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %5)
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %45
  %122 = ptrtoint i8* %119 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %124 = bitcast i8** %123 to i64*
  store i64 %122, i64* %124, align 8
  call void @_ZdlPv(i8* nonnull %119) #15
  br label %125

125:                                              ; preds = %45, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #13
  %126 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %126, align 8
  %127 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %128 = bitcast %union.anon.279* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 152, i1 false) #13
  %129 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20
  %130 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %129, i64 0, i32 0
  %131 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %129, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %132 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %130) #13
  %133 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  %134 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 1, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21
  %136 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %135, i64 0, i32 0
  %137 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %135, i64 0, i32 0, i32 0
  %138 = bitcast %"class.WTF::StringImpl"** %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %139 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %136) #13
  %140 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %140, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %137, align 8
  %141 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 1, i32 0, i32 0
  %142 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22
  %143 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %142, i64 0, i32 0
  %144 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %142, i64 0, i32 0, i32 0
  %145 = bitcast %"class.WTF::StringImpl"** %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  %146 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %143) #13
  %147 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %147, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  %148 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22, i32 1
  %149 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23
  %150 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %149, i64 0, i32 0
  %151 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %149, i64 0, i32 0, i32 0
  %152 = bitcast double* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %153 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %150) #13
  %154 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %154, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %155 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23, i32 1
  %156 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24
  %157 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %156, i64 0, i32 0
  %158 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %156, i64 0, i32 0, i32 0
  %159 = bitcast double* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %160 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %157) #13
  %161 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %161, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %162 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 1
  %163 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25
  %164 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %163, i64 0, i32 0
  %165 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %163, i64 0, i32 0, i32 0
  %166 = bitcast double* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %167 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %164) #13
  %168 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %168, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %169 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25, i32 1
  %170 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26
  %171 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %170, i64 0, i32 0
  %172 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %170, i64 0, i32 0, i32 0
  %173 = bitcast double* %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %174 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %171) #13
  %175 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %175, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %176 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 1, i32 0, i32 0
  %177 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27
  %178 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %177, i64 0, i32 0
  %179 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %177, i64 0, i32 0, i32 0
  %180 = bitcast %"class.WTF::StringImpl"** %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  %181 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %178) #13
  %182 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"** %182, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  %183 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 1
  store i32 0, i32* %183, align 8
  %184 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 2
  store i32 0, i32* %184, align 4
  %185 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28
  %186 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %185, i64 0, i32 0
  %187 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %185, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %186) #13
  %189 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %189, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %190 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 1
  store i8 0, i8* %190, align 8
  %191 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 2
  store i8 0, i8* %191, align 1
  %192 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29
  %193 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %192, i64 0, i32 0
  %194 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %192, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %193) #13
  %196 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %196, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %197 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 1
  store i8 0, i8* %197, align 8
  %198 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 2
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30
  %200 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %199, i64 0, i32 0
  %201 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %199, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %202 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %200) #13
  %203 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %203, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %201, align 8
  %204 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 1, i32 0, i32 0
  %205 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31
  %206 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %205, i64 0, i32 0
  %207 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %205, i64 0, i32 0, i32 0
  %208 = bitcast %"class.WTF::StringImpl"** %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %209 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %206) #13
  %210 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %210, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %211 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 1
  store i8 0, i8* %211, align 8
  %212 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 3
  %213 = bitcast %"class.WTF::HashMap.295"* %212 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 20, i1 false) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEC2EPS0_RKS6_(%"class.blink::InspectorAgentState::SimpleField"*, %"class.blink::InspectorAgentState"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %1, %"class.blink::InspectorAgentState::Field"* %4) #13
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #13
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %3
  %18 = icmp slt i64 %15, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #16
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %15) #15
  %23 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 1
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 %15
  %26 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = load i64, i64* %11, align 8
  %30 = bitcast i8** %23 to i64*
  %31 = ptrtoint i8* %28 to i64
  %32 = sub i64 %29, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %28, i64 %32, i1 false) #13
  %35 = getelementptr inbounds i8, i8* %22, i64 %32
  br label %36

36:                                               ; preds = %34, %21
  %37 = phi i8* [ %35, %34 ], [ %22, %21 ]
  %38 = ptrtoint i8* %37 to i64
  store i64 %38, i64* %30, align 8
  br label %39

39:                                               ; preds = %3, %36
  %40 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %41 = bitcast %"class.std::__1::vector"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #13
  %42 = load i64, i64* %11, align 8
  %43 = load i64, i64* %13, align 8
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %68, label %46

46:                                               ; preds = %39
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector"* %40 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #16
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %44) #15
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 1
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 %44
  %55 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i64, i64* %11, align 8
  %59 = bitcast i8** %52 to i64*
  %60 = ptrtoint i8* %57 to i64
  %61 = sub i64 %58, %60
  %62 = icmp sgt i64 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %57, i64 %61, i1 false) #13
  %64 = getelementptr inbounds i8, i8* %51, i64 %61
  br label %65

65:                                               ; preds = %63, %50
  %66 = phi i8* [ %64, %63 ], [ %51, %50 ]
  %67 = ptrtoint i8* %66 to i64
  store i64 %67, i64* %59, align 8
  br label %68

68:                                               ; preds = %39, %65
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgentD2Ev(%"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorEmulationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [24 x i8*] }, { [30 x i8*], [24 x i8*] }* @_ZTVN5blink23InspectorEmulationAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [24 x i8*] }, { [30 x i8*], [24 x i8*] }* @_ZTVN5blink23InspectorEmulationAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 3, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.299"* %5, null
  br i1 %6, label %39, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %7
  %12 = zext i32 %9 to i64
  br label %13

13:                                               ; preds = %34, %11
  %14 = phi i64 [ 0, %11 ], [ %35, %34 ]
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %5, i64 %14
  %16 = bitcast %"struct.WTF::KeyValuePair.299"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %"class.WTF::StringImpl"*
  %19 = ptrtoint i8* %17 to i64
  switch i64 %19, label %20 [
    i64 -1, label %34
    i64 0, label %34
  ]

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %17 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %20
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %27, %20 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %34

34:                                               ; preds = %33, %30, %13, %13
  %35 = add nuw nsw i64 %14, 1
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %13

37:                                               ; preds = %34, %7
  %38 = bitcast %"struct.WTF::KeyValuePair.299"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store %"struct.WTF::KeyValuePair.299"* null, %"struct.WTF::KeyValuePair.299"** %4, align 8
  br label %39

39:                                               ; preds = %37, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %74

74:                                               ; preds = %73, %70, %56
  %75 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #13
  br label %91

91:                                               ; preds = %90, %87, %74
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %92 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 0, i32 1, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #13
  br label %108

108:                                              ; preds = %91, %104, %107
  %109 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #13
  br label %126

126:                                              ; preds = %108, %122, %125
  %127 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %127, align 8
  %128 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 0, i32 1, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #13
  br label %144

144:                                              ; preds = %126, %140, %143
  %145 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 0, i32 1, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #13
  br label %162

162:                                              ; preds = %144, %158, %161
  %163 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 2, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #13
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 1, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #13
  br label %197

197:                                              ; preds = %196, %193, %180
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %198 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 0, i32 1, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #13
  br label %214

214:                                              ; preds = %197, %210, %213
  %215 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %215, align 8
  %216 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #13
  br label %232

232:                                              ; preds = %214, %228, %231
  %233 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #13
  br label %250

250:                                              ; preds = %232, %246, %249
  %251 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %251, align 8
  %252 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %253) #13
  br label %268

268:                                              ; preds = %250, %264, %267
  %269 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %269, align 8
  %270 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22, i32 0, i32 1, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #13
  br label %286

286:                                              ; preds = %268, %282, %285
  %287 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %287, align 8
  %288 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 2, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #13
  br label %304

304:                                              ; preds = %303, %300, %286
  %305 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 1, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %321, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #13
  br label %321

321:                                              ; preds = %320, %317, %304
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %287, align 8
  %322 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 0, i32 1, i32 0, i32 0
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #13
  br label %338

338:                                              ; preds = %321, %334, %337
  %339 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %339, align 8
  %340 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 2, i32 0, i32 0
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #13
  br label %356

356:                                              ; preds = %355, %352, %338
  %357 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 1, i32 0, i32 0
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #13
  br label %373

373:                                              ; preds = %372, %369, %356
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %339, align 8
  %374 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #13
  br label %390

390:                                              ; preds = %373, %386, %389
  %391 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %392 = load i8, i8* %391, align 8, !range !3
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %396, label %394

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %395) #13
  store i8 0, i8* %391, align 8
  br label %396

396:                                              ; preds = %390, %394
  %397 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %397, align 8
  %398 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 2, i32 0, i32 0
  %399 = load i8*, i8** %398, align 8
  %400 = icmp eq i8* %399, null
  br i1 %400, label %405, label %401

401:                                              ; preds = %396
  %402 = ptrtoint i8* %399 to i64
  %403 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 2, i32 0, i32 1
  %404 = bitcast i8** %403 to i64*
  store i64 %402, i64* %404, align 8
  tail call void @_ZdlPv(i8* nonnull %399) #15
  br label %405

405:                                              ; preds = %401, %396
  %406 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %407 = load i8*, i8** %406, align 8
  %408 = icmp eq i8* %407, null
  br i1 %408, label %413, label %409

409:                                              ; preds = %405
  %410 = ptrtoint i8* %407 to i64
  %411 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %412 = bitcast i8** %411 to i64*
  store i64 %410, i64* %412, align 8
  tail call void @_ZdlPv(i8* nonnull %407) #15
  br label %413

413:                                              ; preds = %409, %405
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %397, align 8
  %414 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %414, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %430, label %417

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #13
  br label %430

430:                                              ; preds = %413, %426, %429
  %431 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8
  %432 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #13
  br label %448

448:                                              ; preds = %447, %444, %430
  %449 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 1, i32 0, i32 0
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %449, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %465, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %461

459:                                              ; preds = %452
  %460 = add i32 %458, -1
  store i32 %460, i32* %457, align 4
  br label %461

461:                                              ; preds = %459, %452
  %462 = phi i32 [ %460, %459 ], [ %458, %452 ]
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #13
  br label %465

465:                                              ; preds = %464, %461, %448
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %431, align 8
  %466 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #13
  br label %482

482:                                              ; preds = %465, %478, %481
  %483 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %483, align 8
  %484 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %484, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %485, null
  br i1 %486, label %500, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = load atomic i32, i32* %488 monotonic, align 4
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  br i1 %491, label %494, label %496

494:                                              ; preds = %487
  %495 = add i32 %493, -1
  store i32 %495, i32* %492, align 4
  br label %496

496:                                              ; preds = %494, %487
  %497 = phi i32 [ %495, %494 ], [ %493, %487 ]
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %500

499:                                              ; preds = %496
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %485) #13
  br label %500

500:                                              ; preds = %499, %496, %482
  %501 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 1, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %503 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %503, label %517, label %504

504:                                              ; preds = %500
  %505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %510 = load i32, i32* %509, align 4
  br i1 %508, label %511, label %513

511:                                              ; preds = %504
  %512 = add i32 %510, -1
  store i32 %512, i32* %509, align 4
  br label %513

513:                                              ; preds = %511, %504
  %514 = phi i32 [ %512, %511 ], [ %510, %504 ]
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %513
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %502) #13
  br label %517

517:                                              ; preds = %516, %513, %500
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %483, align 8
  %518 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %520, label %534, label %521

521:                                              ; preds = %517
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  br i1 %525, label %528, label %530

528:                                              ; preds = %521
  %529 = add i32 %527, -1
  store i32 %529, i32* %526, align 4
  br label %530

530:                                              ; preds = %528, %521
  %531 = phi i32 [ %529, %528 ], [ %527, %521 ]
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %534

533:                                              ; preds = %530
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %519) #13
  br label %534

534:                                              ; preds = %517, %530, %533
  %535 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %535, align 8
  %536 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 2, i32 0, i32 0
  %537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %536, align 8
  %538 = icmp eq %"class.WTF::StringImpl"* %537, null
  br i1 %538, label %552, label %539

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %545 = load i32, i32* %544, align 4
  br i1 %543, label %546, label %548

546:                                              ; preds = %539
  %547 = add i32 %545, -1
  store i32 %547, i32* %544, align 4
  br label %548

548:                                              ; preds = %546, %539
  %549 = phi i32 [ %547, %546 ], [ %545, %539 ]
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %552

551:                                              ; preds = %548
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #13
  br label %552

552:                                              ; preds = %551, %548, %534
  %553 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 1, i32 0, i32 0
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %553, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #13
  br label %569

569:                                              ; preds = %568, %565, %552
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %535, align 8
  %570 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %570, align 8
  %572 = icmp eq %"class.WTF::StringImpl"* %571, null
  br i1 %572, label %586, label %573

573:                                              ; preds = %569
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load atomic i32, i32* %574 monotonic, align 4
  %576 = and i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 0
  %579 = load i32, i32* %578, align 4
  br i1 %577, label %580, label %582

580:                                              ; preds = %573
  %581 = add i32 %579, -1
  store i32 %581, i32* %578, align 4
  br label %582

582:                                              ; preds = %580, %573
  %583 = phi i32 [ %581, %580 ], [ %579, %573 ]
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %586

585:                                              ; preds = %582
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %571) #13
  br label %586

586:                                              ; preds = %569, %582, %585
  %587 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %587, align 8
  %588 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 0
  %589 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %588, align 8
  %590 = icmp eq %"struct.WTF::KeyValuePair.274"* %589, null
  br i1 %590, label %594, label %591, !prof !2

591:                                              ; preds = %586
  %592 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 1
  %593 = load i32, i32* %592, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"* nonnull %589, i32 %593) #13
  store %"struct.WTF::KeyValuePair.274"* null, %"struct.WTF::KeyValuePair.274"** %588, align 8
  br label %594

594:                                              ; preds = %591, %586
  %595 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %595, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %611, label %598

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %596) #13
  br label %611

611:                                              ; preds = %610, %607, %594
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %587, align 8
  %612 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %612, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %611
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #13
  br label %628

628:                                              ; preds = %611, %624, %627
  %629 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %629, align 8
  %630 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 2, i32 0, i32 0
  %631 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %630, align 8
  %632 = icmp eq %"class.WTF::StringImpl"* %631, null
  br i1 %632, label %646, label %633

633:                                              ; preds = %628
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %631) #13
  br label %646

646:                                              ; preds = %645, %642, %628
  %647 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %648 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %647, align 8
  %649 = icmp eq %"class.WTF::StringImpl"* %648, null
  br i1 %649, label %663, label %650

650:                                              ; preds = %646
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load atomic i32, i32* %651 monotonic, align 4
  %653 = and i32 %652, 2
  %654 = icmp eq i32 %653, 0
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %648, i64 0, i32 0
  %656 = load i32, i32* %655, align 4
  br i1 %654, label %657, label %659

657:                                              ; preds = %650
  %658 = add i32 %656, -1
  store i32 %658, i32* %655, align 4
  br label %659

659:                                              ; preds = %657, %650
  %660 = phi i32 [ %658, %657 ], [ %656, %650 ]
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %663

662:                                              ; preds = %659
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %648) #13
  br label %663

663:                                              ; preds = %662, %659, %646
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %629, align 8
  %664 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %665 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %664, align 8
  %666 = icmp eq %"class.WTF::StringImpl"* %665, null
  br i1 %666, label %680, label %667

667:                                              ; preds = %663
  %668 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %669 = load atomic i32, i32* %668 monotonic, align 4
  %670 = and i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %665, i64 0, i32 0
  %673 = load i32, i32* %672, align 4
  br i1 %671, label %674, label %676

674:                                              ; preds = %667
  %675 = add i32 %673, -1
  store i32 %675, i32* %672, align 4
  br label %676

676:                                              ; preds = %674, %667
  %677 = phi i32 [ %675, %674 ], [ %673, %667 ]
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %680

679:                                              ; preds = %676
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %665) #13
  br label %680

680:                                              ; preds = %663, %676, %679
  %681 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %681, align 8
  %682 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %683 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %682, align 8
  %684 = icmp eq %"class.WTF::StringImpl"* %683, null
  br i1 %684, label %698, label %685

685:                                              ; preds = %680
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load atomic i32, i32* %686 monotonic, align 4
  %688 = and i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 0
  %691 = load i32, i32* %690, align 4
  br i1 %689, label %692, label %694

692:                                              ; preds = %685
  %693 = add i32 %691, -1
  store i32 %693, i32* %690, align 4
  br label %694

694:                                              ; preds = %692, %685
  %695 = phi i32 [ %693, %692 ], [ %691, %685 ]
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %698

697:                                              ; preds = %694
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %683) #13
  br label %698

698:                                              ; preds = %680, %694, %697
  %699 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %699, align 8
  %700 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %701 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %700, align 8
  %702 = icmp eq %"class.WTF::StringImpl"* %701, null
  br i1 %702, label %716, label %703

703:                                              ; preds = %698
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %701, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %705 = load atomic i32, i32* %704 monotonic, align 4
  %706 = and i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %701, i64 0, i32 0
  %709 = load i32, i32* %708, align 4
  br i1 %707, label %710, label %712

710:                                              ; preds = %703
  %711 = add i32 %709, -1
  store i32 %711, i32* %708, align 4
  br label %712

712:                                              ; preds = %710, %703
  %713 = phi i32 [ %711, %710 ], [ %709, %703 ]
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %716

715:                                              ; preds = %712
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %701) #13
  br label %716

716:                                              ; preds = %698, %712, %715
  %717 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %717, align 8
  %718 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %734, label %721

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %727 = load i32, i32* %726, align 4
  br i1 %725, label %728, label %730

728:                                              ; preds = %721
  %729 = add i32 %727, -1
  store i32 %729, i32* %726, align 4
  br label %730

730:                                              ; preds = %728, %721
  %731 = phi i32 [ %729, %728 ], [ %727, %721 ]
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %734

733:                                              ; preds = %730
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %719) #13
  br label %734

734:                                              ; preds = %716, %730, %733
  %735 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %735, align 8
  %736 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %736, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %734
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #13
  br label %752

752:                                              ; preds = %734, %748, %751
  %753 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %753, align 8
  %754 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %755 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %754, align 8
  %756 = icmp eq %"class.WTF::StringImpl"* %755, null
  br i1 %756, label %770, label %757

757:                                              ; preds = %752
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  %762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 0
  %763 = load i32, i32* %762, align 4
  br i1 %761, label %764, label %766

764:                                              ; preds = %757
  %765 = add i32 %763, -1
  store i32 %765, i32* %762, align 4
  br label %766

766:                                              ; preds = %764, %757
  %767 = phi i32 [ %765, %764 ], [ %763, %757 ]
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %770

769:                                              ; preds = %766
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %755) #13
  br label %770

770:                                              ; preds = %752, %766, %769
  %771 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %771, align 8
  %772 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 2, i32 0, i32 0
  %773 = load i8*, i8** %772, align 8
  %774 = icmp eq i8* %773, null
  br i1 %774, label %779, label %775

775:                                              ; preds = %770
  %776 = ptrtoint i8* %773 to i64
  %777 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 2, i32 0, i32 1
  %778 = bitcast i8** %777 to i64*
  store i64 %776, i64* %778, align 8
  tail call void @_ZdlPv(i8* nonnull %773) #15
  br label %779

779:                                              ; preds = %775, %770
  %780 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %781 = load i8*, i8** %780, align 8
  %782 = icmp eq i8* %781, null
  br i1 %782, label %787, label %783

783:                                              ; preds = %779
  %784 = ptrtoint i8* %781 to i64
  %785 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 1, i32 0, i32 1
  %786 = bitcast i8** %785 to i64*
  store i64 %784, i64* %786, align 8
  tail call void @_ZdlPv(i8* nonnull %781) #15
  br label %787

787:                                              ; preds = %783, %779
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %771, align 8
  %788 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %788, align 8
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %804, label %791

791:                                              ; preds = %787
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %800
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #13
  br label %804

804:                                              ; preds = %787, %800, %803
  %805 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %806 = load %"class.blink::TimeZoneController::TimeZoneOverride"*, %"class.blink::TimeZoneController::TimeZoneOverride"** %805, align 8
  store %"class.blink::TimeZoneController::TimeZoneOverride"* null, %"class.blink::TimeZoneController::TimeZoneOverride"** %805, align 8
  %807 = icmp eq %"class.blink::TimeZoneController::TimeZoneOverride"* %806, null
  br i1 %807, label %810, label %808

808:                                              ; preds = %804
  tail call void @_ZN5blink18TimeZoneController21ClearTimeZoneOverrideEv() #13
  %809 = getelementptr inbounds %"class.blink::TimeZoneController::TimeZoneOverride", %"class.blink::TimeZoneController::TimeZoneOverride"* %806, i64 0, i32 0
  tail call void @_ZdlPv(i8* %809) #15
  br label %810

810:                                              ; preds = %804, %808
  %811 = bitcast %"class.blink::InspectorEmulationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %811, align 8
  %812 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %813 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %812, align 8
  store %"class.blink::protocol::Emulation::Frontend"* null, %"class.blink::protocol::Emulation::Frontend"** %812, align 8
  %814 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %813, null
  br i1 %814, label %817, label %815

815:                                              ; preds = %810
  %816 = bitcast %"class.blink::protocol::Emulation::Frontend"* %813 to i8*
  tail call void @_ZdlPv(i8* %816) #15
  br label %817

817:                                              ; preds = %815, %810
  %818 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %819 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %818, align 8
  %820 = icmp eq %"class.blink::InspectorAgentState::Field"** %819, null
  %821 = bitcast %"class.blink::InspectorAgentState::Field"** %819 to i8*
  br i1 %820, label %828, label %822, !prof !2

822:                                              ; preds = %817
  %823 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %824 = load i32, i32* %823, align 4
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %827, label %826, !prof !4

826:                                              ; preds = %822
  store i32 0, i32* %823, align 4
  br label %827

827:                                              ; preds = %826, %822
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %821) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %818, align 8
  br label %828

828:                                              ; preds = %827, %817
  %829 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %829, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %845, label %832

832:                                              ; preds = %828
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #13
  br label %845

845:                                              ; preds = %828, %841, %844
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev(%"class.blink::InspectorAgentState::MapField.294"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.299"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.299"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.299"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.299"* null, %"struct.WTF::KeyValuePair.299"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED2Ev(%"class.blink::InspectorAgentState::SimpleField.269"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %53

53:                                               ; preds = %36, %49, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED2Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #15
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #15
  br label %18

18:                                               ; preds = %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.274"* %4, null
  br i1 %5, label %9, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"* nonnull %4, i32 %8) #13
  store %"struct.WTF::KeyValuePair.274"* null, %"struct.WTF::KeyValuePair.274"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #13
  br label %26

26:                                               ; preds = %9, %22, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %26, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgentD1Ev(%"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 -1, i32 31, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgentD2Ev(%"class.blink::InspectorEmulationAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgentD0Ev(%"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink23InspectorEmulationAgentD2Ev(%"class.blink::InspectorEmulationAgent"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgentD0Ev(%"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 -1, i32 31, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgentD2Ev(%"class.blink::InspectorEmulationAgent"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebViewImpl"* @_ZN5blink23InspectorEmulationAgent14GetWebViewImplEv(%"class.blink::InspectorEmulationAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %2, align 8
  %4 = icmp eq %"class.blink::WebLocalFrameImpl"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.blink::WebViewImpl"* [ %6, %5 ], [ null, %1 ]
  ret %"class.blink::WebViewImpl"* %8
}

declare %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent7RestoreEv(%"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %7 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %8 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  %9 = alloca %"class.absl::optional.275", align 8
  %10 = alloca %"class.absl::optional.974", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %14 = alloca %"class.crdtp::DispatchResponse", align 8
  %15 = alloca %"class.crdtp::detail::ValueMaybe.2548", align 4
  %16 = alloca %"class.WTF::Vector.335", align 8
  %17 = alloca %"class.std::__1::unique_ptr.2554", align 8
  %18 = alloca %"class.crdtp::DispatchResponse", align 8
  %19 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %20 = alloca %"class.crdtp::detail::PtrMaybe.2573", align 8
  %21 = alloca %"class.crdtp::DispatchResponse", align 8
  %22 = alloca %"class.crdtp::StatusOr", align 8
  %23 = alloca %"class.std::__1::vector", align 8
  %24 = alloca %"class.crdtp::DispatchResponse", align 8
  %25 = alloca %"class.crdtp::detail::PtrMaybe.2584", align 8
  %26 = alloca %"class.crdtp::DispatchResponse", align 8
  %27 = alloca %"class.crdtp::DispatchResponse", align 8
  %28 = alloca double, align 8
  %29 = alloca %"class.crdtp::DispatchResponse", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.crdtp::detail::ValueMaybe.2580", align 8
  %32 = alloca %"class.crdtp::detail::ValueMaybe.2548", align 4
  %33 = alloca %"class.crdtp::detail::ValueMaybe.2585", align 1
  %34 = alloca %"class.crdtp::detail::ValueMaybe.2580", align 8
  %35 = alloca %"class.crdtp::DispatchResponse", align 8
  %36 = alloca %"class.crdtp::detail::ValueMaybe.2580", align 8
  %37 = alloca %"class.crdtp::detail::ValueMaybe.2548", align 4
  %38 = alloca %"class.crdtp::detail::ValueMaybe.2585", align 1
  %39 = alloca %"class.crdtp::detail::ValueMaybe.2580", align 8
  %40 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18
  %45 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #13
  %46 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 18, i32 2, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = icmp eq i64 %51, 0
  %53 = inttoptr i64 %50 to i8*
  br i1 %52, label %63, label %54

54:                                               ; preds = %1
  %55 = icmp slt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #16
  unreachable

58:                                               ; preds = %54
  %59 = tail call i8* @_Znwm(i64 %51) #15
  store i8* %59, i8** %41, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %51
  store i8* %60, i8** %43, align 8
  %61 = bitcast i8** %42 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %53, i64 %51, i1 false) #13
  %62 = ptrtoint i8* %60 to i64
  store i64 %62, i64* %61, align 8
  br label %63

63:                                               ; preds = %1, %58
  %64 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 2
  %65 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 2, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #13
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %73
  tail call void @llvm.trap() #13
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %63, %68, %83
  %86 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %87 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 1
  %89 = bitcast %"class.WTF::String"* %88 to i64*
  store i64 %86, i64* %89, align 8
  %90 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %110, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #13
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !4

107:                                              ; preds = %98
  tail call void @llvm.trap() #13
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %110

110:                                              ; preds = %85, %93, %108
  %111 = ptrtoint %"class.WTF::StringImpl"* %91 to i64
  %112 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %7, i64 0, i32 0
  store i8 1, i8* %112, align 8
  %113 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %7, i64 0, i32 1
  %114 = bitcast %"class.WTF::String"* %113 to i64*
  store i64 %111, i64* %114, align 8
  %115 = bitcast %"class.crdtp::detail::PtrMaybe"* %8 to i64*
  store i64 0, i64* %115, align 8
  call void @_ZN5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.blink::InspectorEmulationAgent"* %0, %"class.WTF::String"* dereferenceable(8) %64, %"class.crdtp::detail::ValueMaybe"* nonnull %6, %"class.crdtp::detail::ValueMaybe"* nonnull %7, %"class.crdtp::detail::PtrMaybe"* nonnull %8)
  %116 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %110
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #15
  br label %124

124:                                              ; preds = %110, %121
  %125 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::protocol::Emulation::UserAgentMetadata"*, %"class.blink::protocol::Emulation::UserAgentMetadata"** %125, align 8
  store %"class.blink::protocol::Emulation::UserAgentMetadata"* null, %"class.blink::protocol::Emulation::UserAgentMetadata"** %125, align 8
  %127 = icmp eq %"class.blink::protocol::Emulation::UserAgentMetadata"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.blink::protocol::Emulation::UserAgentMetadata"* %126 to void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)***
  %130 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)**, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %130, i64 2
  %132 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %131, align 8
  call void %132(%"class.blink::protocol::Emulation::UserAgentMetadata"* nonnull %126) #13
  br label %133

133:                                              ; preds = %124, %128
  %134 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %7, i64 0, i32 1, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #13
  br label %150

150:                                              ; preds = %133, %146, %149
  %151 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #13
  br label %167

167:                                              ; preds = %150, %163, %166
  %168 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %168) #13
  %169 = getelementptr inbounds %"class.absl::optional.974", %"class.absl::optional.974"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #13
  %170 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #13
  %171 = load i8*, i8** %41, align 8
  %172 = bitcast i8** %42 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = ptrtoint i8* %171 to i64
  %175 = sub i64 %173, %174
  %176 = icmp ugt i64 %175, -17
  br i1 %176, label %177, label %179

177:                                              ; preds = %167
  %178 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %178) #16
  unreachable

179:                                              ; preds = %167
  %180 = icmp ult i64 %175, 23
  br i1 %180, label %189, label %181

181:                                              ; preds = %179
  %182 = add nuw i64 %175, 16
  %183 = and i64 %182, -16
  %184 = call i8* @_Znwm(i64 %183) #15
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = or i64 %183, -9223372036854775808
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %175, i64* %188, align 8
  br label %194

189:                                              ; preds = %179
  %190 = trunc i64 %175 to i8
  %191 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  store i8 %190, i8* %192, align 1
  %193 = icmp eq i64 %175, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %189, %181
  %195 = phi i8* [ %184, %181 ], [ %170, %189 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %195, i8* align 1 %171, i64 %175, i1 false) #13
  br label %196

196:                                              ; preds = %189, %194
  %197 = phi i8* [ %170, %189 ], [ %195, %194 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %175
  store i8 0, i8* %198, align 1
  store i8 1, i8* %169, align 8
  %199 = getelementptr inbounds %"class.absl::optional.974", %"class.absl::optional.974"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %200 = bitcast %"class.std::__1::basic_string"* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* nonnull align 8 %170, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink17UserAgentMetadata9DemarshalERKN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE(%"class.absl::optional.275"* nonnull sret %9, %"class.absl::optional.974"* nonnull dereferenceable(32) %10) #13
  %201 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19
  %202 = load i8, i8* %168, align 8, !range !3
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %206 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 8, !range !3
  %208 = icmp eq i8 %207, 0
  %209 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %208, label %212, label %210

210:                                              ; preds = %204
  %211 = call dereferenceable(152) %"struct.blink::UserAgentMetadata"* @_ZN5blink17UserAgentMetadataaSEOS0_(%"struct.blink::UserAgentMetadata"* %209, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %205) #13
  br label %251

212:                                              ; preds = %204
  %213 = bitcast %"struct.blink::UserAgentMetadata"* %205 to <2 x i64>*
  %214 = load <2 x i64>, <2 x i64>* %213, align 8
  %215 = bitcast %"struct.blink::UserAgentMetadata"* %209 to <2 x i64>*
  store <2 x i64> %214, <2 x i64>* %215, align 8
  %216 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"struct.blink::UserAgentBrandVersion"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %220 = bitcast %"struct.blink::UserAgentBrandVersion"** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast %"struct.blink::UserAgentMetadata"* %205 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 24, i1 false) #13
  %222 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %223 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %224 = bitcast %"class.std::__1::basic_string"* %222 to i8*
  %225 = bitcast %"class.std::__1::basic_string"* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %225, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 24, i1 false) #13
  %226 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %227 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %228 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  %229 = bitcast %"class.std::__1::basic_string"* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %229, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 24, i1 false) #13
  %230 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %231 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %232 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 24, i1 false) #13
  %234 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %235 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %236 = bitcast %"class.std::__1::basic_string"* %234 to i8*
  %237 = bitcast %"class.std::__1::basic_string"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 24, i1 false) #13
  %238 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %239 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %240 = bitcast %"class.std::__1::basic_string"* %238 to i8*
  %241 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 24, i1 false) #13
  %242 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %243 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  %244 = load i8, i8* %243, align 8, !range !3
  store i8 %244, i8* %242, align 8
  store i8 1, i8* %206, align 8
  br label %251

245:                                              ; preds = %196
  %246 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8, i8* %246, align 8, !range !3
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %250) #13
  store i8 0, i8* %246, align 8
  br label %251

251:                                              ; preds = %210, %212, %245, %249
  %252 = load i8, i8* %168, align 8, !range !3
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %255) #13
  store i8 0, i8* %168, align 8
  br label %256

256:                                              ; preds = %251, %254
  %257 = load i8, i8* %169, align 8, !range !3
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %268, label %259

259:                                              ; preds = %256
  %260 = bitcast %"class.std::__1::basic_string"* %199 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  call void @_ZdlPv(i8* %266) #15
  br label %267

267:                                              ; preds = %264, %259
  store i8 0, i8* %169, align 8
  br label %268

268:                                              ; preds = %256, %267
  %269 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %275) #15
  br label %276

276:                                              ; preds = %268, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #13
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %168) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_(%"class.blink::InspectorAgentState::SimpleField"* %44, %"class.std::__1::vector"* nonnull dereferenceable(24) %4)
  %277 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 21, i32 2, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %326, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %326, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i33
  %293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #13
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !4

298:                                              ; preds = %289
  call void @llvm.trap() #13
  unreachable

299:                                              ; preds = %289
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %290, align 4
  br label %301

301:                                              ; preds = %284, %299
  %302 = ptrtoint %"class.WTF::StringImpl"* %278 to i64
  %303 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %13, i64 0, i32 0
  store i8 1, i8* %303, align 8
  %304 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %13, i64 0, i32 1
  %305 = bitcast %"class.WTF::String"* %304 to i64*
  store i64 %302, i64* %305, align 8
  call void @_ZN5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::InspectorEmulationAgent"* %0, %"class.crdtp::detail::ValueMaybe"* nonnull %13)
  %306 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %307 = bitcast %"class.std::__1::basic_string"* %306 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %301
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  call void @_ZdlPv(i8* %313) #15
  br label %314

314:                                              ; preds = %311, %301
  %315 = load atomic i32, i32* %285 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  br i1 %317, label %320, label %322

320:                                              ; preds = %314
  %321 = add i32 %319, -1
  store i32 %321, i32* %318, align 4
  br label %322

322:                                              ; preds = %320, %314
  %323 = phi i32 [ %321, %320 ], [ %319, %314 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #13
  br label %326

326:                                              ; preds = %276, %325, %322, %280
  %327 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %328 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %327, align 8
  %329 = icmp eq %"class.blink::WebLocalFrameImpl"* %328, null
  br i1 %329, label %886, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 8, i32 2
  %332 = load i8, i8* %331, align 1, !range !3
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %338, label %334

334:                                              ; preds = %330
  %335 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %328) #13
  %336 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %335, i64 0, i32 33, i32 0, i32 0
  %337 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %336, align 8
  call void @_ZN5blink16DevToolsEmulator26SetScriptExecutionDisabledEb(%"class.blink::DevToolsEmulator"* %337, i1 zeroext true) #13
  br label %338

338:                                              ; preds = %330, %334
  %339 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 9, i32 2
  %340 = load i8, i8* %339, align 1, !range !3
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %351, label %342

342:                                              ; preds = %338
  %343 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %327, align 8
  %344 = icmp eq %"class.blink::WebLocalFrameImpl"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %342
  %346 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %343) #13
  br label %347

347:                                              ; preds = %342, %345
  %348 = phi %"class.blink::WebViewImpl"* [ %346, %345 ], [ null, %342 ]
  %349 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %348, i64 0, i32 33, i32 0, i32 0
  %350 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %349, align 8
  call void @_ZN5blink16DevToolsEmulator19SetScrollbarsHiddenEb(%"class.blink::DevToolsEmulator"* %350, i1 zeroext true) #13
  br label %351

351:                                              ; preds = %338, %347
  %352 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 10, i32 2
  %353 = load i8, i8* %352, align 1, !range !3
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %364, label %355

355:                                              ; preds = %351
  %356 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %327, align 8
  %357 = icmp eq %"class.blink::WebLocalFrameImpl"* %356, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %355
  %359 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %356) #13
  br label %360

360:                                              ; preds = %355, %358
  %361 = phi %"class.blink::WebViewImpl"* [ %359, %358 ], [ null, %355 ]
  %362 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %361, i64 0, i32 33, i32 0, i32 0
  %363 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %362, align 8
  call void @_ZN5blink16DevToolsEmulator25SetDocumentCookieDisabledEb(%"class.blink::DevToolsEmulator"* %363, i1 zeroext true) #13
  br label %364

364:                                              ; preds = %351, %360
  %365 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 11, i32 2
  %366 = load i8, i8* %365, align 1, !range !3
  %367 = icmp ne i8 %366, 0
  %368 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 12, i32 2
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %15, i64 0, i32 0
  store i8 1, i8* %370, align 4
  %371 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %15, i64 0, i32 1
  store i32 %369, i32* %371, align 4
  call void @_ZN5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* nonnull sret %14, %"class.blink::InspectorEmulationAgent"* %0, i1 zeroext %367, %"class.crdtp::detail::ValueMaybe.2548"* nonnull %15)
  %372 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %14, i64 0, i32 1
  %373 = bitcast %"class.std::__1::basic_string"* %372 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %373, i64 0, i32 1, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %380

377:                                              ; preds = %364
  %378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load i8*, i8** %378, align 8
  call void @_ZdlPv(i8* %379) #15
  br label %380

380:                                              ; preds = %364, %377
  %381 = call i8* @_Znwm(i64 24) #15
  %382 = bitcast i8* %381 to %"class.std::__1::vector.2552"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %381, i8 0, i64 24, i1 false) #13
  %383 = ptrtoint i8* %381 to i64
  %384 = bitcast %"class.WTF::Vector.335"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %384) #13
  %385 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14
  call void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.335"* nonnull sret %16, %"class.blink::InspectorAgentState::MapField"* %385)
  %386 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %16, i64 0, i32 0, i32 0, i32 0
  %387 = load %"class.WTF::String"*, %"class.WTF::String"** %386, align 8
  %388 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %16, i64 0, i32 0, i32 0, i32 2
  %389 = load i32, i32* %388, align 4
  %390 = zext i32 %389 to i64
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %387, i64 %390
  %392 = icmp eq i32 %389, 0
  br i1 %392, label %409, label %393

393:                                              ; preds = %380
  %394 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 2
  %395 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %394, i64 0, i32 0
  %396 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %394, i64 0, i32 0, i32 0
  %397 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 1
  %398 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 14, i32 1
  %399 = bitcast %"class.std::__1::unique_ptr.2554"* %17 to i8*
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %17, i64 0, i32 0, i32 0, i32 0
  %401 = bitcast %"class.std::__1::unique_ptr.2554"* %17 to i8**
  %402 = getelementptr inbounds i8, i8* %381, i64 8
  %403 = bitcast i8* %402 to %"class.std::__1::unique_ptr.2554"**
  %404 = getelementptr inbounds i8, i8* %381, i64 16
  %405 = bitcast i8* %404 to %"class.std::__1::unique_ptr.2554"**
  %406 = bitcast i8* %402 to i64*
  br label %535

407:                                              ; preds = %649
  %408 = load %"class.WTF::String"*, %"class.WTF::String"** %386, align 8
  br label %409

409:                                              ; preds = %407, %380
  %410 = phi %"class.WTF::String"* [ %408, %407 ], [ %387, %380 ]
  %411 = icmp eq %"class.WTF::String"* %410, null
  br i1 %411, label %445, label %412, !prof !2

412:                                              ; preds = %409
  %413 = bitcast %"class.WTF::String"* %410 to i8*
  %414 = load i32, i32* %388, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %443, label %416, !prof !4

416:                                              ; preds = %412
  %417 = zext i32 %414 to i64
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %410, i64 %417
  br label %419

419:                                              ; preds = %437, %416
  %420 = phi %"class.WTF::String"* [ %438, %437 ], [ %410, %416 ]
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %420, i64 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #13
  br label %437

437:                                              ; preds = %436, %433, %419
  %438 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %420, i64 1
  %439 = icmp eq %"class.WTF::String"* %438, %418
  br i1 %439, label %440, label %419

440:                                              ; preds = %437
  store i32 0, i32* %388, align 4
  %441 = bitcast %"class.WTF::Vector.335"* %16 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %412
  %444 = phi i8* [ %442, %440 ], [ %413, %412 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %386, align 8
  br label %445

445:                                              ; preds = %409, %443
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %384) #13
  %446 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 13, i32 2, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %466, label %449

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %466

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = zext i32 %456 to i33
  %458 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %457, i33 1) #13
  %459 = extractvalue { i33, i1 } %458, 1
  %460 = extractvalue { i33, i1 } %458, 0
  %461 = icmp slt i33 %460, 0
  %462 = or i1 %459, %461
  br i1 %462, label %463, label %464, !prof !4

463:                                              ; preds = %454
  call void @llvm.trap() #13
  unreachable

464:                                              ; preds = %454
  %465 = trunc i33 %460 to i32
  store i32 %465, i32* %455, align 4
  br label %466

466:                                              ; preds = %445, %449, %464
  %467 = ptrtoint %"class.WTF::StringImpl"* %447 to i64
  %468 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %19, i64 0, i32 0
  store i8 1, i8* %468, align 8
  %469 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %19, i64 0, i32 1
  %470 = bitcast %"class.WTF::String"* %469 to i64*
  store i64 %467, i64* %470, align 8
  %471 = bitcast %"class.crdtp::detail::PtrMaybe.2573"* %20 to i64*
  store i64 %383, i64* %471, align 8
  call void @_ZN5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %18, %"class.blink::InspectorEmulationAgent"* %0, %"class.crdtp::detail::ValueMaybe"* nonnull %19, %"class.crdtp::detail::PtrMaybe.2573"* nonnull %20)
  %472 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1
  %473 = bitcast %"class.std::__1::basic_string"* %472 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %474 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %473, i64 0, i32 1, i32 0
  %475 = load i8, i8* %474, align 1
  %476 = icmp slt i8 %475, 0
  br i1 %476, label %477, label %480

477:                                              ; preds = %466
  %478 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %472, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load i8*, i8** %478, align 8
  call void @_ZdlPv(i8* %479) #15
  br label %480

480:                                              ; preds = %466, %477
  %481 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2573", %"class.crdtp::detail::PtrMaybe.2573"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %482 = load %"class.std::__1::vector.2552"*, %"class.std::__1::vector.2552"** %481, align 8
  store %"class.std::__1::vector.2552"* null, %"class.std::__1::vector.2552"** %481, align 8
  %483 = icmp eq %"class.std::__1::vector.2552"* %482, null
  br i1 %483, label %513, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %482, i64 0, i32 0, i32 0
  %486 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %485, align 8
  %487 = icmp eq %"class.std::__1::unique_ptr.2554"* %486, null
  br i1 %487, label %511, label %488

488:                                              ; preds = %484
  %489 = bitcast %"class.std::__1::unique_ptr.2554"* %486 to i8*
  %490 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %482, i64 0, i32 0, i32 1
  %491 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %490, align 8
  %492 = icmp eq %"class.std::__1::unique_ptr.2554"* %491, %486
  br i1 %492, label %509, label %493

493:                                              ; preds = %488, %504
  %494 = phi %"class.std::__1::unique_ptr.2554"* [ %495, %504 ], [ %491, %488 ]
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %494, i64 -1
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %495, i64 0, i32 0, i32 0, i32 0
  %497 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %496, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %496, align 8
  %498 = icmp eq %"class.blink::protocol::Emulation::MediaFeature"* %497, null
  br i1 %498, label %504, label %499

499:                                              ; preds = %493
  %500 = bitcast %"class.blink::protocol::Emulation::MediaFeature"* %497 to void (%"class.blink::protocol::Emulation::MediaFeature"*)***
  %501 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)**, void (%"class.blink::protocol::Emulation::MediaFeature"*)*** %500, align 8
  %502 = getelementptr inbounds void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %501, i64 2
  %503 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %502, align 8
  call void %503(%"class.blink::protocol::Emulation::MediaFeature"* nonnull %497) #13
  br label %504

504:                                              ; preds = %499, %493
  %505 = icmp eq %"class.std::__1::unique_ptr.2554"* %495, %486
  br i1 %505, label %506, label %493

506:                                              ; preds = %504
  %507 = bitcast %"class.std::__1::vector.2552"* %482 to i8**
  %508 = load i8*, i8** %507, align 8
  br label %509

509:                                              ; preds = %506, %488
  %510 = phi i8* [ %508, %506 ], [ %489, %488 ]
  store %"class.std::__1::unique_ptr.2554"* %486, %"class.std::__1::unique_ptr.2554"** %490, align 8
  call void @_ZdlPv(i8* %510) #15
  br label %511

511:                                              ; preds = %509, %484
  %512 = bitcast %"class.std::__1::vector.2552"* %482 to i8*
  call void @_ZdlPv(i8* %512) #15
  br label %513

513:                                              ; preds = %480, %511
  %514 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %19, i64 0, i32 1, i32 0, i32 0
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %514, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %515, null
  br i1 %516, label %530, label %517

517:                                              ; preds = %513
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = load atomic i32, i32* %518 monotonic, align 4
  %520 = and i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 0
  %523 = load i32, i32* %522, align 4
  br i1 %521, label %524, label %526

524:                                              ; preds = %517
  %525 = add i32 %523, -1
  store i32 %525, i32* %522, align 4
  br label %526

526:                                              ; preds = %524, %517
  %527 = phi i32 [ %525, %524 ], [ %523, %517 ]
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %526
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %515) #13
  br label %530

530:                                              ; preds = %513, %526, %529
  %531 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 15, i32 2
  %532 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %531, i64 0, i32 0, i32 0
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %661, label %652

535:                                              ; preds = %393, %649
  %536 = phi %"class.WTF::String"* [ %387, %393 ], [ %650, %649 ]
  %537 = call { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.271"* %395, %"class.WTF::String"* dereferenceable(8) %536) #13
  %538 = extractvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %537, 0
  %539 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %396, align 8
  %540 = load i32, i32* %397, align 8
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %539, i64 %541
  %543 = icmp eq %"struct.WTF::KeyValuePair.274"* %538, %542
  %544 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %538, i64 0, i32 1
  %545 = select i1 %543, %"class.WTF::String"* %398, %"class.WTF::String"* %544
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399) #13
  %546 = call i8* @_Znwm(i64 24) #15
  %547 = bitcast i8* %546 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol9Emulation12MediaFeatureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %547, align 8
  %548 = getelementptr inbounds i8, i8* %546, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %548, i8 0, i64 16, i1 false) #13
  %549 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %536, i64 0, i32 0, i32 0
  %550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %551 = icmp eq %"class.WTF::StringImpl"* %550, null
  br i1 %551, label %567, label %552

552:                                              ; preds = %535
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %567

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i33
  %561 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %560, i33 1) #13
  %562 = extractvalue { i33, i1 } %561, 1
  %563 = extractvalue { i33, i1 } %561, 0
  %564 = icmp slt i33 %563, 0
  %565 = or i1 %562, %564
  br i1 %565, label %566, label %570, !prof !4

566:                                              ; preds = %557
  call void @llvm.trap() #13
  unreachable

567:                                              ; preds = %552, %535
  %568 = ptrtoint %"class.WTF::StringImpl"* %550 to i64
  %569 = bitcast i8* %548 to i64*
  store i64 %568, i64* %569, align 8
  br label %590

570:                                              ; preds = %557
  %571 = trunc i33 %563 to i32
  store i32 %571, i32* %558, align 4
  %572 = bitcast i8* %548 to %"class.WTF::StringImpl"**
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = ptrtoint %"class.WTF::StringImpl"* %550 to i64
  %575 = bitcast i8* %548 to i64*
  store i64 %574, i64* %575, align 8
  %576 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %576, label %590, label %577

577:                                              ; preds = %570
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load atomic i32, i32* %578 monotonic, align 4
  %580 = and i32 %579, 2
  %581 = icmp eq i32 %580, 0
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  br i1 %581, label %584, label %586

584:                                              ; preds = %577
  %585 = add i32 %583, -1
  store i32 %585, i32* %582, align 4
  br label %586

586:                                              ; preds = %584, %577
  %587 = phi i32 [ %585, %584 ], [ %583, %577 ]
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %586
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %573) #13
  br label %590

590:                                              ; preds = %567, %570, %586, %589
  %591 = getelementptr inbounds i8, i8* %546, i64 16
  %592 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %545, i64 0, i32 0, i32 0
  %593 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %592, align 8
  %594 = icmp eq %"class.WTF::StringImpl"* %593, null
  br i1 %594, label %612, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %597 = load atomic i32, i32* %596 monotonic, align 4
  %598 = and i32 %597, 2
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %612

600:                                              ; preds = %595
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %593, i64 0, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = zext i32 %602 to i33
  %604 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %603, i33 1) #13
  %605 = extractvalue { i33, i1 } %604, 1
  %606 = extractvalue { i33, i1 } %604, 0
  %607 = icmp slt i33 %606, 0
  %608 = or i1 %605, %607
  br i1 %608, label %609, label %610, !prof !4

609:                                              ; preds = %600
  call void @llvm.trap() #13
  unreachable

610:                                              ; preds = %600
  %611 = trunc i33 %606 to i32
  store i32 %611, i32* %601, align 4
  br label %612

612:                                              ; preds = %610, %595, %590
  %613 = ptrtoint %"class.WTF::StringImpl"* %593 to i64
  %614 = bitcast i8* %591 to i64*
  %615 = bitcast i8* %591 to %"class.WTF::StringImpl"**
  %616 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  store i64 %613, i64* %614, align 8
  %617 = icmp eq %"class.WTF::StringImpl"* %616, null
  br i1 %617, label %631, label %618

618:                                              ; preds = %612
  %619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %620 = load atomic i32, i32* %619 monotonic, align 4
  %621 = and i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %616, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  br i1 %622, label %625, label %627

625:                                              ; preds = %618
  %626 = add i32 %624, -1
  store i32 %626, i32* %623, align 4
  br label %627

627:                                              ; preds = %625, %618
  %628 = phi i32 [ %626, %625 ], [ %624, %618 ]
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %627
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %616) #13
  br label %631

631:                                              ; preds = %612, %627, %630
  store i8* %546, i8** %401, align 8
  %632 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %403, align 8
  %633 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %405, align 8
  %634 = icmp ult %"class.std::__1::unique_ptr.2554"* %632, %633
  br i1 %634, label %635, label %640

635:                                              ; preds = %631
  %636 = ptrtoint i8* %546 to i64
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %400, align 8
  %637 = bitcast %"class.std::__1::unique_ptr.2554"* %632 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %632, i64 1
  %639 = ptrtoint %"class.std::__1::unique_ptr.2554"* %638 to i64
  store i64 %639, i64* %406, align 8
  br label %641

640:                                              ; preds = %631
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Emulation12MediaFeatureENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.2552"* nonnull %382, %"class.std::__1::unique_ptr.2554"* nonnull dereferenceable(8) %17) #13
  br label %641

641:                                              ; preds = %635, %640
  %642 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %400, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %400, align 8
  %643 = icmp eq %"class.blink::protocol::Emulation::MediaFeature"* %642, null
  br i1 %643, label %649, label %644

644:                                              ; preds = %641
  %645 = bitcast %"class.blink::protocol::Emulation::MediaFeature"* %642 to void (%"class.blink::protocol::Emulation::MediaFeature"*)***
  %646 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)**, void (%"class.blink::protocol::Emulation::MediaFeature"*)*** %645, align 8
  %647 = getelementptr inbounds void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %646, i64 2
  %648 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %647, align 8
  call void %648(%"class.blink::protocol::Emulation::MediaFeature"* nonnull %642) #13
  br label %649

649:                                              ; preds = %644, %641
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399) #13
  %650 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %536, i64 1
  %651 = icmp eq %"class.WTF::String"* %650, %391
  br i1 %651, label %407, label %535

652:                                              ; preds = %530
  call void @_ZN5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* nonnull sret %21, %"class.blink::InspectorEmulationAgent"* %0, %"class.WTF::String"* dereferenceable(8) %531)
  %653 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %21, i64 0, i32 1
  %654 = bitcast %"class.std::__1::basic_string"* %653 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %655 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %654, i64 0, i32 1, i32 0
  %656 = load i8, i8* %655, align 1
  %657 = icmp slt i8 %656, 0
  br i1 %657, label %658, label %661

658:                                              ; preds = %652
  %659 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %653, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = load i8*, i8** %659, align 8
  call void @_ZdlPv(i8* %660) #15
  br label %661

661:                                              ; preds = %658, %652, %530
  %662 = bitcast %"class.crdtp::StatusOr"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %662) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %662, i8 -86, i64 24, i1 false)
  %663 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 2
  %664 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %664, i8 0, i64 24, i1 false) #13
  %665 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 7, i32 2, i32 0, i32 1
  %666 = bitcast i8** %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = bitcast %"class.std::__1::vector"* %663 to i64*
  %669 = load i64, i64* %668, align 8
  %670 = sub i64 %667, %669
  %671 = icmp eq i64 %670, 0
  %672 = inttoptr i64 %669 to i8*
  br i1 %671, label %685, label %673

673:                                              ; preds = %661
  %674 = icmp slt i64 %670, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %673
  %676 = bitcast %"class.std::__1::vector"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %676) #16
  unreachable

677:                                              ; preds = %673
  %678 = call i8* @_Znwm(i64 %670) #15
  %679 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 1
  store i8* %678, i8** %679, align 8
  %680 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  store i8* %678, i8** %680, align 8
  %681 = getelementptr inbounds i8, i8* %678, i64 %670
  %682 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %681, i8** %682, align 8
  %683 = bitcast i8** %679 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %678, i8* align 1 %672, i64 %670, i1 false) #13
  %684 = ptrtoint i8* %681 to i64
  store i64 %684, i64* %683, align 8
  br label %685

685:                                              ; preds = %661, %677
  call void @_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol3DOM4RGBAEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* nonnull sret %22, %"class.std::__1::vector"* nonnull %23)
  %686 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  %687 = load i8*, i8** %686, align 8
  %688 = icmp eq i8* %687, null
  br i1 %688, label %693, label %689

689:                                              ; preds = %685
  %690 = ptrtoint i8* %687 to i64
  %691 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 1
  %692 = bitcast i8** %691 to i64*
  store i64 %690, i64* %692, align 8
  call void @_ZdlPv(i8* nonnull %687) #15
  br label %693

693:                                              ; preds = %685, %689
  %694 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %22, i64 0, i32 0, i32 0
  %695 = load i32, i32* %694, align 8
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %720

697:                                              ; preds = %693
  %698 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %22, i64 0, i32 1
  %699 = getelementptr inbounds %"class.std::__1::unique_ptr.2574", %"class.std::__1::unique_ptr.2574"* %698, i64 0, i32 0, i32 0, i32 0
  %700 = bitcast %"class.std::__1::unique_ptr.2574"* %698 to i64*
  %701 = load i64, i64* %700, align 8
  store %"class.blink::protocol::DOM::RGBA"* null, %"class.blink::protocol::DOM::RGBA"** %699, align 8
  %702 = bitcast %"class.crdtp::detail::PtrMaybe.2584"* %25 to i64*
  store i64 %701, i64* %702, align 8
  call void @_ZN5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE(%"class.crdtp::DispatchResponse"* nonnull sret %24, %"class.blink::InspectorEmulationAgent"* %0, %"class.crdtp::detail::PtrMaybe.2584"* nonnull %25)
  %703 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %24, i64 0, i32 1
  %704 = bitcast %"class.std::__1::basic_string"* %703 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %705 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %704, i64 0, i32 1, i32 0
  %706 = load i8, i8* %705, align 1
  %707 = icmp slt i8 %706, 0
  %708 = inttoptr i64 %701 to %"class.blink::protocol::DOM::RGBA"*
  br i1 %707, label %709, label %712

709:                                              ; preds = %697
  %710 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %703, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #15
  br label %712

712:                                              ; preds = %697, %709
  %713 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2584", %"class.crdtp::detail::PtrMaybe.2584"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOM::RGBA"* null, %"class.blink::protocol::DOM::RGBA"** %713, align 8
  %714 = icmp eq i64 %701, 0
  br i1 %714, label %720, label %715

715:                                              ; preds = %712
  %716 = inttoptr i64 %701 to void (%"class.blink::protocol::DOM::RGBA"*)***
  %717 = load void (%"class.blink::protocol::DOM::RGBA"*)**, void (%"class.blink::protocol::DOM::RGBA"*)*** %716, align 8
  %718 = getelementptr inbounds void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %717, i64 2
  %719 = load void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %718, align 8
  call void %719(%"class.blink::protocol::DOM::RGBA"* nonnull %708) #13
  br label %720

720:                                              ; preds = %715, %712, %693
  %721 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 29, i32 2
  %722 = load i8, i8* %721, align 1, !range !3
  %723 = icmp ne i8 %722, 0
  call void @_ZN5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb(%"class.crdtp::DispatchResponse"* nonnull sret %26, %"class.blink::InspectorEmulationAgent"* %0, i1 zeroext %723)
  %724 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %26, i64 0, i32 1
  %725 = bitcast %"class.std::__1::basic_string"* %724 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %726 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %725, i64 0, i32 1, i32 0
  %727 = load i8, i8* %726, align 1
  %728 = icmp slt i8 %727, 0
  br i1 %728, label %729, label %732

729:                                              ; preds = %720
  %730 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %731 = load i8*, i8** %730, align 8
  call void @_ZdlPv(i8* %731) #15
  br label %732

732:                                              ; preds = %720, %729
  %733 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 30, i32 2
  %734 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %733, i64 0, i32 0, i32 0
  %735 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %734, align 8
  %736 = icmp eq %"class.WTF::StringImpl"* %735, null
  br i1 %736, label %746, label %737

737:                                              ; preds = %732
  call void @_ZN5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* nonnull sret %27, %"class.blink::InspectorEmulationAgent"* %0, %"class.WTF::String"* dereferenceable(8) %733)
  %738 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %27, i64 0, i32 1
  %739 = bitcast %"class.std::__1::basic_string"* %738 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %740 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %739, i64 0, i32 1, i32 0
  %741 = load i8, i8* %740, align 1
  %742 = icmp slt i8 %741, 0
  br i1 %742, label %743, label %746

743:                                              ; preds = %737
  %744 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %738, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load i8*, i8** %744, align 8
  call void @_ZdlPv(i8* %745) #15
  br label %746

746:                                              ; preds = %743, %737, %732
  %747 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 2
  %748 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %747, i64 0, i32 0, i32 0
  %749 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %748, align 8
  %750 = icmp eq %"class.WTF::StringImpl"* %749, null
  br i1 %750, label %876, label %751

751:                                              ; preds = %746
  %752 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %327, align 8
  %753 = call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %752) #13
  %754 = bitcast %"class.blink::WebView"* %753 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %755 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %754, align 8
  %756 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %755, i64 53
  %757 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %756, align 8
  %758 = call %"class.blink::PageScheduler"* %757(%"class.blink::WebView"* %753) #13
  %759 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 25, i32 2
  %760 = load double, double* %759, align 8
  %761 = fmul double %760, 1.000000e+03
  %762 = fcmp ult double %761, 0xC3E0000000000000
  %763 = fcmp ugt double %761, 0x43DFFFFFFFFFFFFF
  %764 = fcmp ogt double %761, 0xC3E0000000000000
  %765 = select i1 %764, double %761, double 0xC3E0000000000000
  %766 = fptosi double %765 to i64
  %767 = select i1 %762, i64 0, i64 9223372036854775807
  %768 = select i1 %763, i64 %767, i64 %766
  %769 = bitcast %"class.blink::PageScheduler"* %758 to void (%"class.blink::PageScheduler"*, i64)***
  %770 = load void (%"class.blink::PageScheduler"*, i64)**, void (%"class.blink::PageScheduler"*, i64)*** %769, align 8
  %771 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i64)*, void (%"class.blink::PageScheduler"*, i64)** %770, i64 17
  %772 = load void (%"class.blink::PageScheduler"*, i64)*, void (%"class.blink::PageScheduler"*, i64)** %771, align 8
  call void %772(%"class.blink::PageScheduler"* %758, i64 %768) #13
  %773 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 2
  %774 = load i8, i8* %773, align 1, !range !3
  %775 = bitcast double* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %775) #13
  store double 0xFFFFFFFFFFFFFFFF, double* %28, align 8
  %776 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %776) #13
  %777 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %748, align 8
  %778 = icmp eq %"class.WTF::StringImpl"* %777, null
  br i1 %778, label %779, label %783

779:                                              ; preds = %751
  %780 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %780, align 8
  %781 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %782 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %781, i64* %782, align 8
  br label %790

783:                                              ; preds = %751
  %784 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %777, %"class.WTF::StringImpl"** %784, align 8
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %777, i64 0, i32 1
  %786 = load i32, i32* %785, align 4
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %777, i64 1
  %788 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %789 = bitcast i8** %788 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %787, %"class.WTF::StringImpl"** %789, align 8
  br label %790

790:                                              ; preds = %783, %779
  %791 = phi i32 [ %786, %783 ], [ 0, %779 ]
  %792 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %791, i32* %792, align 8
  %793 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %793) #13
  %794 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0)) #14
  %795 = icmp ult i64 %794, 4294967296
  br i1 %795, label %797, label %796, !prof !2

796:                                              ; preds = %790
  call void @llvm.trap() #13
  unreachable

797:                                              ; preds = %790
  %798 = trunc i64 %794 to i32
  %799 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %800 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %799, i64* %800, align 8
  %801 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0), i8** %801, align 8
  %802 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %798, i32* %802, align 8
  %803 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %793) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %776) #13
  br i1 %803, label %804, label %845

804:                                              ; preds = %797
  %805 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %805) #13
  %806 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0), i64 %806) #13
  %807 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %31, i64 0, i32 0
  store i8 0, i8* %807, align 8
  %808 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %31, i64 0, i32 1
  store double 0.000000e+00, double* %808, align 8
  %809 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %32, i64 0, i32 0
  store i8 0, i8* %809, align 4
  %810 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %32, i64 0, i32 1
  store i32 0, i32* %810, align 4
  %811 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %33, i64 0, i32 0
  store i8 1, i8* %811, align 1
  %812 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %33, i64 0, i32 1
  store i8 %774, i8* %812, align 1
  %813 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 2
  %814 = bitcast double* %813 to i64*
  %815 = load i64, i64* %814, align 8
  %816 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %34, i64 0, i32 0
  store i8 1, i8* %816, align 8
  %817 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %34, i64 0, i32 1
  %818 = bitcast double* %817 to i64*
  store i64 %815, i64* %818, align 8
  call void @_ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd(%"class.crdtp::DispatchResponse"* nonnull sret %29, %"class.blink::InspectorEmulationAgent"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %30, %"class.crdtp::detail::ValueMaybe.2580"* nonnull %31, %"class.crdtp::detail::ValueMaybe.2548"* nonnull %32, %"class.crdtp::detail::ValueMaybe.2585"* nonnull %33, %"class.crdtp::detail::ValueMaybe.2580"* nonnull %34, double* nonnull %28)
  %819 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %29, i64 0, i32 1
  %820 = bitcast %"class.std::__1::basic_string"* %819 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %821 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %820, i64 0, i32 1, i32 0
  %822 = load i8, i8* %821, align 1
  %823 = icmp slt i8 %822, 0
  br i1 %823, label %824, label %827

824:                                              ; preds = %804
  %825 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %819, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %826 = load i8*, i8** %825, align 8
  call void @_ZdlPv(i8* %826) #15
  br label %827

827:                                              ; preds = %804, %824
  %828 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %829 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  %830 = icmp eq %"class.WTF::StringImpl"* %829, null
  br i1 %830, label %844, label %831

831:                                              ; preds = %827
  %832 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %833 = load atomic i32, i32* %832 monotonic, align 4
  %834 = and i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 0
  %837 = load i32, i32* %836, align 4
  br i1 %835, label %838, label %840

838:                                              ; preds = %831
  %839 = add i32 %837, -1
  store i32 %839, i32* %836, align 4
  br label %840

840:                                              ; preds = %838, %831
  %841 = phi i32 [ %839, %838 ], [ %837, %831 ]
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %844

843:                                              ; preds = %840
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %829) #13
  br label %844

844:                                              ; preds = %827, %840, %843
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %805) #13
  br label %875

845:                                              ; preds = %797
  %846 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 22, i32 2
  %847 = load double, double* %846, align 8
  %848 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 23, i32 2
  %849 = load double, double* %848, align 8
  %850 = fadd double %847, %849
  %851 = load double, double* %759, align 8
  %852 = fsub double %850, %851
  %853 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %36, i64 0, i32 0
  store i8 1, i8* %853, align 8
  %854 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %36, i64 0, i32 1
  store double %852, double* %854, align 8
  %855 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 27, i32 2
  %856 = load i32, i32* %855, align 4
  %857 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %37, i64 0, i32 0
  store i8 1, i8* %857, align 4
  %858 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %37, i64 0, i32 1
  store i32 %856, i32* %858, align 4
  %859 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %38, i64 0, i32 0
  store i8 1, i8* %859, align 1
  %860 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %38, i64 0, i32 1
  store i8 %774, i8* %860, align 1
  %861 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 24, i32 2
  %862 = bitcast double* %861 to i64*
  %863 = load i64, i64* %862, align 8
  %864 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %39, i64 0, i32 0
  store i8 1, i8* %864, align 8
  %865 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %39, i64 0, i32 1
  %866 = bitcast double* %865 to i64*
  store i64 %863, i64* %866, align 8
  call void @_ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd(%"class.crdtp::DispatchResponse"* nonnull sret %35, %"class.blink::InspectorEmulationAgent"* %0, %"class.WTF::String"* dereferenceable(8) %747, %"class.crdtp::detail::ValueMaybe.2580"* nonnull %36, %"class.crdtp::detail::ValueMaybe.2548"* nonnull %37, %"class.crdtp::detail::ValueMaybe.2585"* nonnull %38, %"class.crdtp::detail::ValueMaybe.2580"* nonnull %39, double* nonnull %28)
  %867 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %35, i64 0, i32 1
  %868 = bitcast %"class.std::__1::basic_string"* %867 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %869 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %868, i64 0, i32 1, i32 0
  %870 = load i8, i8* %869, align 1
  %871 = icmp slt i8 %870, 0
  br i1 %871, label %872, label %875

872:                                              ; preds = %845
  %873 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %867, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %874 = load i8*, i8** %873, align 8
  call void @_ZdlPv(i8* %874) #15
  br label %875

875:                                              ; preds = %872, %845, %844
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %775) #13
  br label %876

876:                                              ; preds = %746, %875
  %877 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %878 = load %"class.blink::protocol::DOM::RGBA"*, %"class.blink::protocol::DOM::RGBA"** %877, align 8
  store %"class.blink::protocol::DOM::RGBA"* null, %"class.blink::protocol::DOM::RGBA"** %877, align 8
  %879 = icmp eq %"class.blink::protocol::DOM::RGBA"* %878, null
  br i1 %879, label %885, label %880

880:                                              ; preds = %876
  %881 = bitcast %"class.blink::protocol::DOM::RGBA"* %878 to void (%"class.blink::protocol::DOM::RGBA"*)***
  %882 = load void (%"class.blink::protocol::DOM::RGBA"*)**, void (%"class.blink::protocol::DOM::RGBA"*)*** %881, align 8
  %883 = getelementptr inbounds void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %882, i64 2
  %884 = load void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %883, align 8
  call void %884(%"class.blink::protocol::DOM::RGBA"* nonnull %878) #13
  br label %885

885:                                              ; preds = %876, %880
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %662) #13
  br label %886

886:                                              ; preds = %326, %885
  %887 = load i8*, i8** %41, align 8
  %888 = icmp eq i8* %887, null
  br i1 %888, label %891, label %889

889:                                              ; preds = %886
  %890 = ptrtoint i8* %887 to i64
  store i64 %890, i64* %172, align 8
  call void @_ZdlPv(i8* nonnull %887) #15
  br label %891

891:                                              ; preds = %886, %889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"struct.blink::UserAgentMetadata", align 16
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"struct.blink::UserAgentBrandVersion", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.absl::optional.974", align 8
  %30 = alloca [15 x i8], align 8
  %31 = alloca %"class.std::__1::vector", align 8
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %6
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %6, %35
  %40 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %41 = load i8, i8* %40, align 8, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %4, i64 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %43, %39, %35
  %48 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 6
  %49 = load i8, i8* %48, align 8, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  store i8 1, i8* %48, align 8
  %52 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %52, align 8
  tail call void @_ZN5blink13CoreProbeSink26AddInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"* %53, %"class.blink::InspectorEmulationAgent"* %1) #13
  br label %54

54:                                               ; preds = %43, %51, %47
  %55 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 17
  tail call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %55, %"class.WTF::String"* dereferenceable(8) %2)
  %56 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 20
  %57 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !3
  %61 = icmp eq i8 %60, 0
  %62 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %3, i64 0, i32 1
  %63 = select i1 %61, %"class.WTF::String"* %7, %"class.WTF::String"* %62
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %56, %"class.WTF::String"* dereferenceable(8) %63)
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #13
  br label %79

79:                                               ; preds = %54, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %80 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 16
  %81 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %83 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %4, i64 0, i32 0
  %84 = load i8, i8* %83, align 8, !range !3
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %4, i64 0, i32 1
  %87 = select i1 %85, %"class.WTF::String"* %8, %"class.WTF::String"* %86
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %80, %"class.WTF::String"* dereferenceable(8) %87)
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #13
  br label %103

103:                                              ; preds = %79, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  %104 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %105 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %104, align 8
  %106 = icmp eq %"class.blink::WebLocalFrameImpl"* %105, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %103
  %108 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %105) #13
  %109 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %108, i64 0, i32 6, i32 0, i32 0
  %110 = load %"class.blink::Page"*, %"class.blink::Page"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %110, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Settings"*, %"class.blink::Settings"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 16, i32 2
  call void @_ZN5blink8Settings28SetNavigatorPlatformOverrideERKN3WTF6StringE(%"class.blink::Settings"* %112, %"class.WTF::String"* dereferenceable(8) %113) #13
  br label %114

114:                                              ; preds = %103, %107
  %115 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::protocol::Emulation::UserAgentMetadata"*, %"class.blink::protocol::Emulation::UserAgentMetadata"** %115, align 8
  %117 = icmp eq %"class.blink::protocol::Emulation::UserAgentMetadata"* %116, null
  br i1 %117, label %669, label %118

118:                                              ; preds = %114
  %119 = bitcast %"struct.blink::UserAgentMetadata"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %119) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %119, i8 -86, i64 152, i1 false)
  %120 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #13
  %121 = bitcast %"class.blink::Platform"* %120 to void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)***
  %122 = load void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)**, void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)*, void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)** %122, i64 23
  %124 = load void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)*, void (%"struct.blink::UserAgentMetadata"*, %"class.blink::Platform"*)** %123, align 8
  call void %124(%"struct.blink::UserAgentMetadata"* nonnull sret %9, %"class.blink::Platform"* %120) #13
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %160

131:                                              ; preds = %118, %127
  %132 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !3
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %136) #13
  store i8 0, i8* %132, align 8
  br label %137

137:                                              ; preds = %131, %135
  %138 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 18
  %139 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_(%"class.blink::InspectorAgentState::SimpleField"* %138, %"class.std::__1::vector"* nonnull dereferenceable(24) %10)
  %140 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %137
  %144 = ptrtoint i8* %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %146 = bitcast i8** %145 to i64*
  store i64 %144, i64* %146, align 8
  call void @_ZdlPv(i8* nonnull %141) #15
  br label %147

147:                                              ; preds = %137, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #13
  %148 = call i8* @_Znwm(i64 64) #15
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %148, i8** %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = bitcast i64* %150 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %151, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %148, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13, i64 0, i64 0), i64 48, i1 false) #13
  %152 = getelementptr inbounds i8, i8* %148, i64 48
  store i8 0, i8* %152, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #13
  %153 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %147
  %158 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %158) #15
  br label %159

159:                                              ; preds = %147, %157
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %119) #13
  br label %727

160:                                              ; preds = %127
  %161 = load %"class.blink::protocol::Emulation::UserAgentMetadata"*, %"class.blink::protocol::Emulation::UserAgentMetadata"** %115, align 8
  store %"class.blink::protocol::Emulation::UserAgentMetadata"* null, %"class.blink::protocol::Emulation::UserAgentMetadata"** %115, align 8
  %162 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %163 = load i8, i8* %162, align 8, !range !3
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %166) #13
  store i8 0, i8* %162, align 8
  br label %167

167:                                              ; preds = %160, %165
  %168 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %169 = bitcast %union.anon.279* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 152, i1 false) #13
  store i8 1, i8* %162, align 8
  %170 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.2526"*, %"class.std::__1::vector.2526"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.2526"* %171, null
  br i1 %172, label %318, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.std::__1::vector.2526", %"class.std::__1::vector.2526"* %171, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::unique_ptr.2528"*, %"class.std::__1::unique_ptr.2528"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::vector.2526", %"class.std::__1::vector.2526"* %171, i64 0, i32 0, i32 1
  %177 = load %"class.std::__1::unique_ptr.2528"*, %"class.std::__1::unique_ptr.2528"** %176, align 8
  %178 = icmp eq %"class.std::__1::unique_ptr.2528"* %175, %177
  br i1 %178, label %328, label %179

179:                                              ; preds = %173
  %180 = bitcast %"struct.blink::UserAgentBrandVersion"* %12 to i8*
  %181 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %12, i64 0, i32 1
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %185 = bitcast %"class.WTF::String"* %14 to i8*
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %187 = bitcast %"struct.blink::UserAgentBrandVersion"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %192 = bitcast %"class.WTF::String"* %16 to i8*
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %194 = bitcast %"class.std::__1::basic_string"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = bitcast %"class.std::__1::basic_string"* %182 to i8*
  %197 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %200 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %201 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %202 = bitcast %"struct.blink::UserAgentBrandVersion"** %199 to i64*
  br label %203

203:                                              ; preds = %179, %315
  %204 = phi %"class.std::__1::unique_ptr.2528"* [ %175, %179 ], [ %316, %315 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %180) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 0, i64 48, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.2528", %"class.std::__1::unique_ptr.2528"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.blink::protocol::Emulation::UserAgentBrandVersion"*, %"class.blink::protocol::Emulation::UserAgentBrandVersion"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentBrandVersion", %"class.blink::protocol::Emulation::UserAgentBrandVersion"* %206, i64 0, i32 1, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #13
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !4

224:                                              ; preds = %215
  call void @llvm.trap() #13
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %203, %210, %225
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %186, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.WTF::String"* nonnull %14) #13
  %228 = load i8, i8* %188, align 1
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %227
  %231 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %231) #15
  br label %232

232:                                              ; preds = %230, %227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %180, i8* nonnull align 8 %184, i64 24, i1 false) #13
  store i8 0, i8* %190, align 1
  store i8 0, i8* %184, align 8
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #13
  br label %248

248:                                              ; preds = %232, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #13
  %249 = load %"class.blink::protocol::Emulation::UserAgentBrandVersion"*, %"class.blink::protocol::Emulation::UserAgentBrandVersion"** %205, align 8
  %250 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentBrandVersion", %"class.blink::protocol::Emulation::UserAgentBrandVersion"* %249, i64 0, i32 2, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %270, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %270

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i33
  %262 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #13
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %268, !prof !4

267:                                              ; preds = %258
  call void @llvm.trap() #13
  unreachable

268:                                              ; preds = %258
  %269 = trunc i33 %264 to i32
  store i32 %269, i32* %259, align 4
  br label %270

270:                                              ; preds = %248, %253, %268
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %193, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.WTF::String"* nonnull %16) #13
  %271 = load i8, i8* %195, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %270
  %274 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %274) #15
  br label %275

275:                                              ; preds = %273, %270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %191, i64 24, i1 false) #13
  store i8 0, i8* %198, align 1
  store i8 0, i8* %191, align 8
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #13
  br label %291

291:                                              ; preds = %275, %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #13
  %292 = load i8, i8* %162, align 8, !range !3
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %295, !prof !4

294:                                              ; preds = %291
  call void @llvm.trap() #13
  unreachable

295:                                              ; preds = %291
  %296 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %199, align 8
  %297 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %200, align 8
  %298 = icmp ult %"struct.blink::UserAgentBrandVersion"* %296, %297
  br i1 %298, label %299, label %305

299:                                              ; preds = %295
  %300 = bitcast %"struct.blink::UserAgentBrandVersion"* %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* nonnull align 8 %180, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 0, i64 24, i1 false) #13
  %301 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %296, i64 0, i32 1
  %302 = bitcast %"class.std::__1::basic_string"* %301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %196, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #13
  %303 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %296, i64 1
  %304 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %303 to i64
  store i64 %304, i64* %202, align 8
  br label %310

305:                                              ; preds = %295
  call void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.280"* %201, %"struct.blink::UserAgentBrandVersion"* nonnull dereferenceable(48) %12) #13
  %306 = load i8, i8* %195, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %305
  %309 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %309) #15
  br label %310

310:                                              ; preds = %299, %308, %305
  %311 = load i8, i8* %188, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %310
  %314 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %314) #15
  br label %315

315:                                              ; preds = %310, %313
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %180) #13
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.2528", %"class.std::__1::unique_ptr.2528"* %204, i64 1
  %317 = icmp eq %"class.std::__1::unique_ptr.2528"* %316, %177
  br i1 %317, label %328, label %203

318:                                              ; preds = %167
  %319 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %320 = bitcast %"struct.blink::UserAgentMetadata"* %9 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 16
  %322 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %323 = bitcast %"struct.blink::UserAgentBrandVersion"** %322 to i64*
  %324 = load i64, i64* %323, align 16
  %325 = bitcast %"class.std::__1::vector.280"* %319 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8
  %326 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %327 = bitcast %"struct.blink::UserAgentBrandVersion"** %326 to i64*
  store i64 %324, i64* %327, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %119, i8 0, i64 24, i1 false) #13
  br label %328

328:                                              ; preds = %315, %173, %318
  %329 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 2, i32 0
  %330 = load i8, i8* %329, align 8, !range !3
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %411, label %332

332:                                              ; preds = %328
  %333 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %333) #13
  %334 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #13
  %335 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #13
  %336 = load i8, i8* %329, align 8, !range !3
  %337 = icmp eq i8 %336, 0
  %338 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 2, i32 1
  %339 = select i1 %337, %"class.WTF::String"* %19, %"class.WTF::String"* %338
  %340 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %339, i64 0, i32 0, i32 0
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %360, label %343

343:                                              ; preds = %332
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %360

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i33
  %352 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %351, i33 1) #13
  %353 = extractvalue { i33, i1 } %352, 1
  %354 = extractvalue { i33, i1 } %352, 0
  %355 = icmp slt i33 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %357, label %358, !prof !4

357:                                              ; preds = %348
  call void @llvm.trap() #13
  unreachable

358:                                              ; preds = %348
  %359 = trunc i33 %354 to i32
  store i32 %359, i32* %349, align 4
  br label %360

360:                                              ; preds = %332, %343, %358
  %361 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %341, %"class.WTF::StringImpl"** %361, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %17, %"class.WTF::String"* nonnull %18) #13
  %362 = load i8, i8* %162, align 8, !range !3
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %365, !prof !4

364:                                              ; preds = %360
  call void @llvm.trap() #13
  unreachable

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %367 = bitcast %"class.std::__1::basic_string"* %366 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %367, i64 0, i32 1, i32 0
  %369 = load i8, i8* %368, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %366, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #15
  br label %374

374:                                              ; preds = %371, %365
  %375 = bitcast %"class.std::__1::basic_string"* %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* nonnull align 8 %333, i64 24, i1 false) #13
  %376 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %376, i64 0, i32 1, i32 0
  store i8 0, i8* %377, align 1
  store i8 0, i8* %333, align 8
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %393, label %380

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %378) #13
  br label %393

393:                                              ; preds = %374, %389, %392
  %394 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #13
  br label %410

410:                                              ; preds = %393, %406, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %333) #13
  br label %430

411:                                              ; preds = %328
  %412 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %9, i64 0, i32 1
  %413 = load i8, i8* %162, align 8, !range !3
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %415, label %416, !prof !4

415:                                              ; preds = %411
  call void @llvm.trap() #13
  unreachable

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %418 = bitcast %"class.std::__1::basic_string"* %417 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %417, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  call void @_ZdlPv(i8* %424) #15
  br label %425

425:                                              ; preds = %416, %422
  %426 = bitcast %"class.std::__1::basic_string"* %417 to i8*
  %427 = bitcast %"class.std::__1::basic_string"* %412 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* align 8 %427, i64 24, i1 false) #13
  %428 = bitcast %"class.std::__1::basic_string"* %412 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %429 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %428, i64 0, i32 1, i32 0
  store i8 0, i8* %429, align 1
  store i8 0, i8* %427, align 8
  br label %430

430:                                              ; preds = %425, %410
  %431 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %431) #13
  %432 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %432) #13
  %433 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 3, i32 0, i32 0
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  %435 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %435, label %453, label %436

436:                                              ; preds = %430
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %453

441:                                              ; preds = %436
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  %444 = zext i32 %443 to i33
  %445 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %444, i33 1) #13
  %446 = extractvalue { i33, i1 } %445, 1
  %447 = extractvalue { i33, i1 } %445, 0
  %448 = icmp slt i33 %447, 0
  %449 = or i1 %446, %448
  br i1 %449, label %450, label %451, !prof !4

450:                                              ; preds = %441
  call void @llvm.trap() #13
  unreachable

451:                                              ; preds = %441
  %452 = trunc i33 %447 to i32
  store i32 %452, i32* %442, align 4
  br label %453

453:                                              ; preds = %430, %436, %451
  %454 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %434, %"class.WTF::StringImpl"** %454, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %20, %"class.WTF::String"* nonnull %21) #13
  %455 = load i8, i8* %162, align 8, !range !3
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %457, label %458, !prof !4

457:                                              ; preds = %453
  call void @llvm.trap() #13
  unreachable

458:                                              ; preds = %453
  %459 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %460 = bitcast %"class.std::__1::basic_string"* %459 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %461 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %460, i64 0, i32 1, i32 0
  %462 = load i8, i8* %461, align 1
  %463 = icmp slt i8 %462, 0
  br i1 %463, label %464, label %467

464:                                              ; preds = %458
  %465 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %459, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = load i8*, i8** %465, align 8
  call void @_ZdlPv(i8* %466) #15
  br label %467

467:                                              ; preds = %464, %458
  %468 = bitcast %"class.std::__1::basic_string"* %459 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %468, i8* nonnull align 8 %431, i64 24, i1 false) #13
  %469 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %470 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %469, i64 0, i32 1, i32 0
  store i8 0, i8* %470, align 1
  store i8 0, i8* %431, align 8
  %471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %472 = icmp eq %"class.WTF::StringImpl"* %471, null
  br i1 %472, label %486, label %473

473:                                              ; preds = %467
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load atomic i32, i32* %474 monotonic, align 4
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  br i1 %477, label %480, label %482

480:                                              ; preds = %473
  %481 = add i32 %479, -1
  store i32 %481, i32* %478, align 4
  br label %482

482:                                              ; preds = %480, %473
  %483 = phi i32 [ %481, %480 ], [ %479, %473 ]
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %482
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %471) #13
  br label %486

486:                                              ; preds = %467, %482, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %432) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #13
  %487 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %487) #13
  %488 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488) #13
  %489 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 4, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %491, label %509, label %492

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = and i32 %494, 2
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %509

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = zext i32 %499 to i33
  %501 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %500, i33 1) #13
  %502 = extractvalue { i33, i1 } %501, 1
  %503 = extractvalue { i33, i1 } %501, 0
  %504 = icmp slt i33 %503, 0
  %505 = or i1 %502, %504
  br i1 %505, label %506, label %507, !prof !4

506:                                              ; preds = %497
  call void @llvm.trap() #13
  unreachable

507:                                              ; preds = %497
  %508 = trunc i33 %503 to i32
  store i32 %508, i32* %498, align 4
  br label %509

509:                                              ; preds = %486, %492, %507
  %510 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %490, %"class.WTF::StringImpl"** %510, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %22, %"class.WTF::String"* nonnull %23) #13
  %511 = load i8, i8* %162, align 8, !range !3
  %512 = icmp eq i8 %511, 0
  br i1 %512, label %513, label %514, !prof !4

513:                                              ; preds = %509
  call void @llvm.trap() #13
  unreachable

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %516 = bitcast %"class.std::__1::basic_string"* %515 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %517 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %516, i64 0, i32 1, i32 0
  %518 = load i8, i8* %517, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %523

520:                                              ; preds = %514
  %521 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %515, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load i8*, i8** %521, align 8
  call void @_ZdlPv(i8* %522) #15
  br label %523

523:                                              ; preds = %520, %514
  %524 = bitcast %"class.std::__1::basic_string"* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %524, i8* nonnull align 8 %487, i64 24, i1 false) #13
  %525 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  store i8 0, i8* %526, align 1
  store i8 0, i8* %487, align 8
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %527, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %527) #13
  br label %542

542:                                              ; preds = %523, %538, %541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %487) #13
  %543 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %543) #13
  %544 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %544) #13
  %545 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 5, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %546, null
  br i1 %547, label %565, label %548

548:                                              ; preds = %542
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %565

553:                                              ; preds = %548
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 0
  %555 = load i32, i32* %554, align 4
  %556 = zext i32 %555 to i33
  %557 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %556, i33 1) #13
  %558 = extractvalue { i33, i1 } %557, 1
  %559 = extractvalue { i33, i1 } %557, 0
  %560 = icmp slt i33 %559, 0
  %561 = or i1 %558, %560
  br i1 %561, label %562, label %563, !prof !4

562:                                              ; preds = %553
  call void @llvm.trap() #13
  unreachable

563:                                              ; preds = %553
  %564 = trunc i33 %559 to i32
  store i32 %564, i32* %554, align 4
  br label %565

565:                                              ; preds = %542, %548, %563
  %566 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %546, %"class.WTF::StringImpl"** %566, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %24, %"class.WTF::String"* nonnull %25) #13
  %567 = load i8, i8* %162, align 8, !range !3
  %568 = icmp eq i8 %567, 0
  br i1 %568, label %569, label %570, !prof !4

569:                                              ; preds = %565
  call void @llvm.trap() #13
  unreachable

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 4
  %572 = bitcast %"class.std::__1::basic_string"* %571 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  %574 = load i8, i8* %573, align 1
  %575 = icmp slt i8 %574, 0
  br i1 %575, label %576, label %579

576:                                              ; preds = %570
  %577 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %571, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load i8*, i8** %577, align 8
  call void @_ZdlPv(i8* %578) #15
  br label %579

579:                                              ; preds = %576, %570
  %580 = bitcast %"class.std::__1::basic_string"* %571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %580, i8* nonnull align 8 %543, i64 24, i1 false) #13
  %581 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %582 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %581, i64 0, i32 1, i32 0
  store i8 0, i8* %582, align 1
  store i8 0, i8* %543, align 8
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %566, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %598, label %585

585:                                              ; preds = %579
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  br i1 %589, label %592, label %594

592:                                              ; preds = %585
  %593 = add i32 %591, -1
  store i32 %593, i32* %590, align 4
  br label %594

594:                                              ; preds = %592, %585
  %595 = phi i32 [ %593, %592 ], [ %591, %585 ]
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %598

597:                                              ; preds = %594
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %583) #13
  br label %598

598:                                              ; preds = %579, %594, %597
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %544) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %543) #13
  %599 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %599) #13
  %600 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %600) #13
  %601 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 6, i32 0, i32 0
  %602 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %601, align 8
  %603 = icmp eq %"class.WTF::StringImpl"* %602, null
  br i1 %603, label %621, label %604

604:                                              ; preds = %598
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load atomic i32, i32* %605 monotonic, align 4
  %607 = and i32 %606, 2
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %621

609:                                              ; preds = %604
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %602, i64 0, i32 0
  %611 = load i32, i32* %610, align 4
  %612 = zext i32 %611 to i33
  %613 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %612, i33 1) #13
  %614 = extractvalue { i33, i1 } %613, 1
  %615 = extractvalue { i33, i1 } %613, 0
  %616 = icmp slt i33 %615, 0
  %617 = or i1 %614, %616
  br i1 %617, label %618, label %619, !prof !4

618:                                              ; preds = %609
  call void @llvm.trap() #13
  unreachable

619:                                              ; preds = %609
  %620 = trunc i33 %615 to i32
  store i32 %620, i32* %610, align 4
  br label %621

621:                                              ; preds = %598, %604, %619
  %622 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %602, %"class.WTF::StringImpl"** %622, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %26, %"class.WTF::String"* nonnull %27) #13
  %623 = load i8, i8* %162, align 8, !range !3
  %624 = icmp eq i8 %623, 0
  br i1 %624, label %625, label %626, !prof !4

625:                                              ; preds = %621
  call void @llvm.trap() #13
  unreachable

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 5
  %628 = bitcast %"class.std::__1::basic_string"* %627 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %629 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %628, i64 0, i32 1, i32 0
  %630 = load i8, i8* %629, align 1
  %631 = icmp slt i8 %630, 0
  br i1 %631, label %632, label %635

632:                                              ; preds = %626
  %633 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %627, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %634 = load i8*, i8** %633, align 8
  call void @_ZdlPv(i8* %634) #15
  br label %635

635:                                              ; preds = %632, %626
  %636 = bitcast %"class.std::__1::basic_string"* %627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %636, i8* nonnull align 8 %599, i64 24, i1 false) #13
  %637 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %638 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %637, i64 0, i32 1, i32 0
  store i8 0, i8* %638, align 1
  store i8 0, i8* %599, align 8
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %654, label %641

641:                                              ; preds = %635
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  br i1 %645, label %648, label %650

648:                                              ; preds = %641
  %649 = add i32 %647, -1
  store i32 %649, i32* %646, align 4
  br label %650

650:                                              ; preds = %648, %641
  %651 = phi i32 [ %649, %648 ], [ %647, %641 ]
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %654

653:                                              ; preds = %650
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #13
  br label %654

654:                                              ; preds = %635, %650, %653
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %600) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %599) #13
  %655 = load i8, i8* %162, align 8, !range !3
  %656 = icmp eq i8 %655, 0
  br i1 %656, label %657, label %658, !prof !4

657:                                              ; preds = %654
  call void @llvm.trap() #13
  unreachable

658:                                              ; preds = %654
  %659 = getelementptr inbounds %"class.blink::protocol::Emulation::UserAgentMetadata", %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, i64 0, i32 7
  %660 = load i8, i8* %659, align 8, !range !3
  %661 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 6
  store i8 %660, i8* %661, align 8
  %662 = icmp eq %"class.blink::protocol::Emulation::UserAgentMetadata"* %161, null
  br i1 %662, label %668, label %663

663:                                              ; preds = %658
  %664 = bitcast %"class.blink::protocol::Emulation::UserAgentMetadata"* %161 to void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)***
  %665 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)**, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*** %664, align 8
  %666 = getelementptr inbounds void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %665, i64 2
  %667 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %666, align 8
  call void %667(%"class.blink::protocol::Emulation::UserAgentMetadata"* nonnull %161) #13
  br label %668

668:                                              ; preds = %658, %663
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %119) #13
  br label %675

669:                                              ; preds = %114
  %670 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %671 = load i8, i8* %670, align 8, !range !3
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %675, label %673

673:                                              ; preds = %669
  %674 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %674) #13
  store i8 0, i8* %670, align 8
  br label %675

675:                                              ; preds = %673, %669, %668
  %676 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %676) #13
  %677 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %679 = getelementptr inbounds %"class.absl::optional.974", %"class.absl::optional.974"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %680 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %680, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %679) #13
  %681 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 19
  call void @_ZN5blink17UserAgentMetadata7MarshalERKN4absl8optionalIS0_EE(%"class.absl::optional.974"* nonnull sret %29, %"class.absl::optional.275"* dereferenceable(160) %681) #13
  %682 = getelementptr inbounds [15 x i8], [15 x i8]* %30, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %682)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %682, i8 0, i64 15, i1 false)
  %683 = load i8, i8* %679, align 8, !range !3, !noalias !5
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %685, label %688

685:                                              ; preds = %675
  store i8* null, i8** %677, align 8
  %686 = bitcast i64* %678 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %686, i8* nonnull align 8 %682, i64 15, i1 false)
  %687 = getelementptr inbounds i8, i8* %676, i64 23
  store i8 0, i8* %687, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %682)
  br label %700

688:                                              ; preds = %675
  %689 = getelementptr inbounds %"class.absl::optional.974", %"class.absl::optional.974"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %690 = bitcast %"class.std::__1::basic_string"* %689 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %676, i8* align 8 %690, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %690, i8 0, i64 24, i1 false) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %682)
  %691 = getelementptr inbounds %"class.absl::optional.974", %"class.absl::optional.974"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %692 = bitcast %"class.std::__1::basic_string"* %691 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %693 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %692, i64 0, i32 1, i32 0
  %694 = load i8, i8* %693, align 1
  %695 = icmp slt i8 %694, 0
  br i1 %695, label %696, label %699

696:                                              ; preds = %688
  %697 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %691, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %698 = load i8*, i8** %697, align 8
  call void @_ZdlPv(i8* %698) #15
  br label %699

699:                                              ; preds = %696, %688
  store i8 0, i8* %679, align 8
  br label %700

700:                                              ; preds = %685, %699
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %679) #13
  %701 = bitcast %"class.std::__1::vector"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %701) #13
  %702 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %701, i8 0, i64 24, i1 false) #13
  %703 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %704 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %703, i64 0, i32 1, i32 0
  %705 = load i8, i8* %704, align 1
  %706 = icmp slt i8 %705, 0
  %707 = load i8*, i8** %677, align 8
  %708 = load i64, i64* %678, align 8
  %709 = zext i8 %705 to i64
  %710 = select i1 %706, i8* %707, i8* %676
  %711 = select i1 %706, i64 %708, i64 %709
  %712 = getelementptr inbounds i8, i8* %710, i64 %711
  %713 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEES9_S9_(%"class.std::__1::vector"* nonnull %31, i8* null, i8* %710, i8* %712)
  %714 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 18
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_(%"class.blink::InspectorAgentState::SimpleField"* %714, %"class.std::__1::vector"* nonnull dereferenceable(24) %31)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  %715 = load i8*, i8** %702, align 8
  %716 = icmp eq i8* %715, null
  br i1 %716, label %721, label %717

717:                                              ; preds = %700
  %718 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 1
  %719 = ptrtoint i8* %715 to i64
  %720 = bitcast i8** %718 to i64*
  store i64 %719, i64* %720, align 8
  call void @_ZdlPv(i8* nonnull %715) #15
  br label %721

721:                                              ; preds = %700, %717
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %701) #13
  %722 = load i8, i8* %704, align 1
  %723 = icmp slt i8 %722, 0
  br i1 %723, label %724, label %726

724:                                              ; preds = %721
  %725 = load i8*, i8** %677, align 8
  call void @_ZdlPv(i8* %725) #15
  br label %726

726:                                              ; preds = %721, %724
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %676) #13
  br label %727

727:                                              ; preds = %159, %726
  ret void
}

declare void @_ZN5blink17UserAgentMetadata9DemarshalERKN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEE(%"class.absl::optional.275"* sret, %"class.absl::optional.974"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_(%"class.blink::InspectorAgentState::SimpleField"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::WebVector.495", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %10, %16
  %18 = inttoptr i64 %9 to i8*
  %19 = inttoptr i64 %7 to i8*
  br i1 %17, label %20, label %34

20:                                               ; preds = %2
  %21 = icmp eq i8* %18, %19
  br i1 %21, label %78, label %22

22:                                               ; preds = %20
  %23 = inttoptr i64 %15 to i8*
  br label %24

24:                                               ; preds = %22, %30
  %25 = phi i8* [ %32, %30 ], [ %23, %22 ]
  %26 = phi i8* [ %31, %30 ], [ %18, %22 ]
  %27 = load i8, i8* %26, align 1
  %28 = load i8, i8* %25, align 1
  %29 = icmp eq i8 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %26, i64 1
  %32 = getelementptr inbounds i8, i8* %25, i64 1
  %33 = icmp eq i8* %31, %19
  br i1 %33, label %78, label %24

34:                                               ; preds = %24, %2
  %35 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %10, %41
  br i1 %42, label %43, label %62

43:                                               ; preds = %34
  %44 = icmp eq i8* %18, %19
  br i1 %44, label %57, label %45

45:                                               ; preds = %43
  %46 = inttoptr i64 %40 to i8*
  br label %47

47:                                               ; preds = %45, %53
  %48 = phi i8* [ %55, %53 ], [ %46, %45 ]
  %49 = phi i8* [ %54, %53 ], [ %18, %45 ]
  %50 = load i8, i8* %49, align 1
  %51 = load i8, i8* %48, align 1
  %52 = icmp eq i8 %50, %51
  br i1 %52, label %53, label %62

53:                                               ; preds = %47
  %54 = getelementptr inbounds i8, i8* %49, i64 1
  %55 = getelementptr inbounds i8, i8* %48, i64 1
  %56 = icmp eq i8* %54, %19
  br i1 %56, label %57, label %47

57:                                               ; preds = %53, %43
  %58 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %59 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %59, i64 2
  %61 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %60, align 8
  tail call void %61(%"class.blink::InspectorAgentState::SimpleField"* %0) #13
  br label %78

62:                                               ; preds = %47, %34
  %63 = icmp eq %"class.std::__1::vector"* %4, %1
  br i1 %63, label %65, label %64

64:                                               ; preds = %62
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %4, i8* %18, i8* %19) #13
  br label %65

65:                                               ; preds = %62, %64
  %66 = bitcast %"class.blink::WebVector.495"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS_9WebVectorIhEE(%"class.std::__1::vector"* dereferenceable(24) %1, %"class.blink::WebVector.495"* nonnull %3) #13
  %68 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %69 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %69, %"class.WTF::String"* dereferenceable(8) %70, %"class.blink::WebVector.495"* nonnull %3) #13
  %71 = load i8*, i8** %67, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 1
  %75 = ptrtoint i8* %71 to i64
  %76 = bitcast i8** %74 to i64*
  store i64 %75, i64* %76, align 8
  call void @_ZdlPv(i8* nonnull %71) #15
  br label %77

77:                                               ; preds = %65, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  br label %78

78:                                               ; preds = %30, %20, %77, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 21
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 21, i32 2, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %3, %13
  %18 = tail call dereferenceable(16) %"class.blink::LocaleController"* @_ZN5blink16LocaleController8instanceEv() #13
  %19 = tail call zeroext i1 @_ZNK5blink16LocaleController19has_locale_overrideEv(%"class.blink::LocaleController"* %18) #13
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = tail call i8* @_Znwm(i64 48) #15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i64 44, i1 false) #13
  %25 = getelementptr inbounds i8, i8* %21, i64 44
  store i8 0, i8* %25, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #13
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %114

30:                                               ; preds = %20
  %31 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %31) #15
  br label %114

32:                                               ; preds = %17, %13
  %33 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store i64 0, i64* %6, align 8
  %36 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1
  %40 = bitcast i64* %6 to %"class.WTF::String"*
  %41 = select i1 %38, %"class.WTF::String"* %40, %"class.WTF::String"* %39
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %34, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #13
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !4

59:                                               ; preds = %50
  tail call void @llvm.trap() #13
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %62

62:                                               ; preds = %60, %45, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %63 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %65 = tail call dereferenceable(16) %"class.blink::LocaleController"* @_ZN5blink16LocaleController8instanceEv() #13
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink16LocaleController17SetLocaleOverrideERKN3WTF6StringE(%"class.blink::LocaleController"* %65, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* nonnull %7, i32 0) #13
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #13
  %73 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %81

80:                                               ; preds = %62, %68
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %81

81:                                               ; preds = %77, %72, %80
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %114

114:                                              ; preds = %30, %20, %113
  ret void
}

declare void @_ZN5blink16DevToolsEmulator26SetScriptExecutionDisabledEb(%"class.blink::DevToolsEmulator"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink16DevToolsEmulator19SetScrollbarsHiddenEb(%"class.blink::DevToolsEmulator"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink16DevToolsEmulator25SetDocumentCookieDisabledEb(%"class.blink::DevToolsEmulator"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebVector.495", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.blink::WebVector.495", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorEmulationAgent"* %1)
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  br label %227

23:                                               ; preds = %4
  %24 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  store i32 1, i32* %9, align 4
  %25 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %3, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !3
  %27 = icmp eq i8 %26, 0
  %28 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %3, i64 0, i32 1
  %29 = select i1 %27, i32* %9, i32* %28
  %30 = load i32, i32* %29, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  %31 = add i32 %30, -1
  %32 = icmp ugt i32 %31, 15
  br i1 %32, label %33, label %144

33:                                               ; preds = %23
  %34 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %35, align 8
  %36 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #13
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 5
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false) #13
  store i8 54, i8* %38, align 1
  %41 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 4
  store i8* %41, i8** %39, align 8
  store i8 49, i8* %41, align 4
  store i32 2, i32* %40, align 8
  %42 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %41, i32 2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %87, label %44

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %61

51:                                               ; preds = %44
  %52 = zext i32 %50 to i33
  %53 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #13
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !4

58:                                               ; preds = %51
  call void @llvm.trap() #13
  unreachable

59:                                               ; preds = %51
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %49, align 4
  br label %61

61:                                               ; preds = %59, %44
  %62 = phi i32 [ %60, %59 ], [ %50, %44 ]
  %63 = load atomic i32, i32* %45 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %76

66:                                               ; preds = %61
  %67 = zext i32 %62 to i33
  %68 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #13
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !4

73:                                               ; preds = %66
  call void @llvm.trap() #13
  unreachable

74:                                               ; preds = %66
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %49, align 4
  br label %76

76:                                               ; preds = %74, %61
  %77 = phi i32 [ %75, %74 ], [ %62, %61 ]
  %78 = load atomic i32, i32* %45 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = add i32 %77, -1
  store i32 %82, i32* %49, align 4
  br label %83

83:                                               ; preds = %81, %76
  %84 = phi i32 [ %82, %81 ], [ %77, %76 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %87

87:                                               ; preds = %33, %83, %86
  %88 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %89, align 8
  %90 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %11)
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %35, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #13
  br label %106

106:                                              ; preds = %87, %102, %105
  br i1 %43, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %120

120:                                              ; preds = %106, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #13
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.WTF::String"* nonnull %10, i32 0) #13
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %12) #13
  %121 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #15
  br label %128

128:                                              ; preds = %120, %125
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %218, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %218

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #13
  br label %218

144:                                              ; preds = %23
  %145 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 11
  %146 = zext i1 %2 to i8
  %147 = zext i1 %2 to i32
  %148 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 11, i32 2
  %149 = load i8, i8* %148, align 1, !range !3
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %147, %150
  br i1 %151, label %175, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 11, i32 1
  %154 = load i8, i8* %153, align 8, !range !3
  %155 = zext i8 %154 to i32
  %156 = icmp eq i32 %147, %155
  br i1 %156, label %157, label %162

157:                                              ; preds = %152
  %158 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %145 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %159 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %159, i64 2
  %161 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %160, align 8
  call void %161(%"class.blink::InspectorAgentState::SimpleField.267"* %145) #13
  br label %175

162:                                              ; preds = %152
  store i8 %146, i8* %148, align 1
  %163 = bitcast %"class.blink::WebVector.495"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #13
  %164 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.495"* nonnull %5) #13
  %165 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 11, i32 0, i32 2
  %166 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 11, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %166, %"class.WTF::String"* dereferenceable(8) %167, %"class.blink::WebVector.495"* nonnull %5) #13
  %168 = load i8*, i8** %164, align 8
  %169 = icmp eq i8* %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %5, i64 0, i32 0, i32 0, i32 1
  %172 = ptrtoint i8* %168 to i64
  %173 = bitcast i8** %171 to i64*
  store i64 %172, i64* %173, align 8
  call void @_ZdlPv(i8* nonnull %168) #15
  br label %174

174:                                              ; preds = %170, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #13
  br label %175

175:                                              ; preds = %144, %157, %174
  %176 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 12
  %177 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 12, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, %30
  br i1 %179, label %202, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 12, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, %30
  br i1 %183, label %184, label %189

184:                                              ; preds = %180
  %185 = bitcast %"class.blink::InspectorAgentState::SimpleField.268"* %176 to void (%"class.blink::InspectorAgentState::SimpleField.268"*)***
  %186 = load void (%"class.blink::InspectorAgentState::SimpleField.268"*)**, void (%"class.blink::InspectorAgentState::SimpleField.268"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.268"*)*, void (%"class.blink::InspectorAgentState::SimpleField.268"*)** %186, i64 2
  %188 = load void (%"class.blink::InspectorAgentState::SimpleField.268"*)*, void (%"class.blink::InspectorAgentState::SimpleField.268"*)** %187, align 8
  call void %188(%"class.blink::InspectorAgentState::SimpleField.268"* %176) #13
  br label %202

189:                                              ; preds = %180
  store i32 %30, i32* %177, align 4
  %190 = bitcast %"class.blink::WebVector.495"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #13
  %191 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %30, %"class.blink::WebVector.495"* nonnull %7) #13
  %192 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 12, i32 0, i32 2
  %193 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 12, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %193, %"class.WTF::String"* dereferenceable(8) %194, %"class.blink::WebVector.495"* nonnull %7) #13
  %195 = load i8*, i8** %191, align 8
  %196 = icmp eq i8* %195, null
  br i1 %196, label %201, label %197

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %7, i64 0, i32 0, i32 0, i32 1
  %199 = ptrtoint i8* %195 to i64
  %200 = bitcast i8** %198 to i64*
  store i64 %199, i64* %200, align 8
  call void @_ZdlPv(i8* nonnull %195) #15
  br label %201

201:                                              ; preds = %197, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #13
  br label %202

202:                                              ; preds = %175, %184, %201
  %203 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %204 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %203, align 8
  %205 = icmp eq %"class.blink::WebLocalFrameImpl"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  %207 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %204) #13
  br label %208

208:                                              ; preds = %202, %206
  %209 = phi %"class.blink::WebViewImpl"* [ %207, %206 ], [ null, %202 ]
  %210 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %209, i64 0, i32 33, i32 0, i32 0
  %211 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %210, align 8
  call void @_ZN5blink16DevToolsEmulator29SetTouchEventEmulationEnabledEbi(%"class.blink::DevToolsEmulator"* %211, i1 zeroext %2, i32 %30) #13
  %212 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %213 = load i32, i32* %14, align 8
  store i32 %213, i32* %212, align 8
  %214 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %215 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %216 = bitcast %"class.std::__1::basic_string"* %214 to i8*
  %217 = bitcast %"class.std::__1::basic_string"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #13
  br label %227

218:                                              ; preds = %143, %140, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  %219 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #15
  br label %227

227:                                              ; preds = %17, %208, %218, %224
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.335"* noalias sret, %"class.blink::InspectorAgentState::MapField"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.335"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.274"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.274"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.274"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.274"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.274"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.274"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !4

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #13
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !4

55:                                               ; preds = %46
  tail call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.335"* %0, %"class.WTF::String"* dereferenceable(8) %62) #13
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.274"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.274"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.274"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.274"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.274"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture, %"class.crdtp::detail::PtrMaybe.2573"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::Vector.335", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %414

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %56, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %25 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.WTF::StringImpl"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %28 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %29, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %30 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::WebLocalFrameImpl"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %31) #13
  br label %35

35:                                               ; preds = %22, %33
  %36 = phi %"class.blink::WebViewImpl"* [ %34, %33 ], [ null, %22 ]
  %37 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Page"*, %"class.blink::Page"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %38, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Settings"*, %"class.blink::Settings"** %39, align 8
  call void @_ZN5blink8Settings20SetMediaTypeOverrideERKN3WTF6StringE(%"class.blink::Settings"* %40, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %104, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %104

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %104

56:                                               ; preds = %18
  %57 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 13
  %58 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %57, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %56, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  %76 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::WebLocalFrameImpl"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %77) #13
  br label %81

81:                                               ; preds = %75, %79
  %82 = phi %"class.blink::WebViewImpl"* [ %80, %79 ], [ null, %75 ]
  %83 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %82, i64 0, i32 6, i32 0, i32 0
  %84 = load %"class.blink::Page"*, %"class.blink::Page"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %84, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.blink::Settings"*, %"class.blink::Settings"** %85, align 8
  %87 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #13
  call void @_ZN5blink8Settings20SetMediaTypeOverrideERKN3WTF6StringE(%"class.blink::Settings"* %86, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #13
  br label %104

104:                                              ; preds = %103, %100, %81, %55, %52, %35
  %105 = phi i8* [ %23, %35 ], [ %23, %52 ], [ %23, %55 ], [ %87, %81 ], [ %87, %100 ], [ %87, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  %106 = bitcast %"class.WTF::Vector.335"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 14
  call void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.335"* nonnull sret %8, %"class.blink::InspectorAgentState::MapField"* %107)
  %108 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %8, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %108, align 8
  %110 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %8, i64 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %112
  %114 = icmp eq i32 %111, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %117 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %118 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %119 = bitcast %"class.WTF::String"* %10 to i8*
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %164

122:                                              ; preds = %234
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %108, align 8
  br label %124

124:                                              ; preds = %122, %104
  %125 = phi %"class.WTF::String"* [ %123, %122 ], [ %109, %104 ]
  %126 = icmp eq %"class.WTF::String"* %125, null
  br i1 %126, label %160, label %127, !prof !2

127:                                              ; preds = %124
  %128 = bitcast %"class.WTF::String"* %125 to i8*
  %129 = load i32, i32* %110, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %158, label %131, !prof !4

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 %132
  br label %134

134:                                              ; preds = %152, %131
  %135 = phi %"class.WTF::String"* [ %153, %152 ], [ %125, %131 ]
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #13
  br label %152

152:                                              ; preds = %151, %148, %134
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %135, i64 1
  %154 = icmp eq %"class.WTF::String"* %153, %133
  br i1 %154, label %155, label %134

155:                                              ; preds = %152
  store i32 0, i32* %110, align 4
  %156 = bitcast %"class.WTF::Vector.335"* %8 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %155, %127
  %159 = phi i8* [ %157, %155 ], [ %128, %127 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %159) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %108, align 8
  br label %160

160:                                              ; preds = %124, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #13
  call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %107)
  %161 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2573", %"class.crdtp::detail::PtrMaybe.2573"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.2552"*, %"class.std::__1::vector.2552"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.2552"* %162, null
  br i1 %163, label %414, label %237

164:                                              ; preds = %115, %234
  %165 = phi %"class.WTF::String"* [ %109, %115 ], [ %235, %234 ]
  %166 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %116, align 8
  %167 = icmp eq %"class.blink::WebLocalFrameImpl"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %164
  %169 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %166) #13
  br label %170

170:                                              ; preds = %164, %168
  %171 = phi %"class.blink::WebViewImpl"* [ %169, %168 ], [ null, %164 ]
  %172 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %171, i64 0, i32 6, i32 0, i32 0
  %173 = load %"class.blink::Page"*, %"class.blink::Page"** %172, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #13
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %200, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 acquire, align 4
  %180 = and i32 %179, 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %198, label %182

182:                                              ; preds = %177
  %183 = load atomic i32, i32* %178 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %200

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #13
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !4

195:                                              ; preds = %186
  call void @llvm.trap() #13
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %200

198:                                              ; preds = %177
  %199 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %175) #13
  br label %200

200:                                              ; preds = %170, %182, %196, %198
  %201 = phi %"class.WTF::StringImpl"* [ %199, %198 ], [ %175, %182 ], [ %175, %196 ], [ null, %170 ]
  %202 = ptrtoint %"class.WTF::StringImpl"* %201 to i64
  store i64 %202, i64* %118, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #13
  call void @_ZN5blink4Page23SetMediaFeatureOverrideERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::Page"* %173, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #13
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #13
  br label %218

218:                                              ; preds = %200, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #13
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #13
  br label %234

234:                                              ; preds = %218, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #13
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %236 = icmp eq %"class.WTF::String"* %235, %113
  br i1 %236, label %122, label %164

237:                                              ; preds = %160
  store %"class.std::__1::vector.2552"* null, %"class.std::__1::vector.2552"** %161, align 8
  %238 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %162, i64 0, i32 0, i32 0
  %239 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %162, i64 0, i32 0, i32 1
  %241 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %240, align 8
  %242 = icmp eq %"class.std::__1::unique_ptr.2554"* %239, %241
  br i1 %242, label %254, label %243

243:                                              ; preds = %237
  %244 = bitcast %"class.WTF::String"* %11 to i8*
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::String"* %12 to i8*
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %248 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %249 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %250 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %251 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  br label %281

252:                                              ; preds = %411
  %253 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %238, align 8
  br label %254

254:                                              ; preds = %252, %237
  %255 = phi %"class.std::__1::unique_ptr.2554"* [ %253, %252 ], [ %239, %237 ]
  %256 = icmp eq %"class.std::__1::unique_ptr.2554"* %255, null
  br i1 %256, label %279, label %257

257:                                              ; preds = %254
  %258 = bitcast %"class.std::__1::unique_ptr.2554"* %255 to i8*
  %259 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %240, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.2554"* %259, %255
  br i1 %260, label %277, label %261

261:                                              ; preds = %257, %272
  %262 = phi %"class.std::__1::unique_ptr.2554"* [ %263, %272 ], [ %259, %257 ]
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %262, i64 -1
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %263, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %264, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %264, align 8
  %266 = icmp eq %"class.blink::protocol::Emulation::MediaFeature"* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %261
  %268 = bitcast %"class.blink::protocol::Emulation::MediaFeature"* %265 to void (%"class.blink::protocol::Emulation::MediaFeature"*)***
  %269 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)**, void (%"class.blink::protocol::Emulation::MediaFeature"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %269, i64 2
  %271 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %270, align 8
  call void %271(%"class.blink::protocol::Emulation::MediaFeature"* nonnull %265) #13
  br label %272

272:                                              ; preds = %267, %261
  %273 = icmp eq %"class.std::__1::unique_ptr.2554"* %263, %255
  br i1 %273, label %274, label %261

274:                                              ; preds = %272
  %275 = bitcast %"class.std::__1::vector.2552"* %162 to i8**
  %276 = load i8*, i8** %275, align 8
  br label %277

277:                                              ; preds = %274, %257
  %278 = phi i8* [ %276, %274 ], [ %258, %257 ]
  store %"class.std::__1::unique_ptr.2554"* %255, %"class.std::__1::unique_ptr.2554"** %240, align 8
  call void @_ZdlPv(i8* %278) #15
  br label %279

279:                                              ; preds = %254, %277
  %280 = bitcast %"class.std::__1::vector.2552"* %162 to i8*
  call void @_ZdlPv(i8* %280) #15
  br label %414

281:                                              ; preds = %243, %411
  %282 = phi %"class.std::__1::unique_ptr.2554"* [ %239, %243 ], [ %412, %411 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #13
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %282, i64 0, i32 0, i32 0, i32 0
  %284 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::protocol::Emulation::MediaFeature", %"class.blink::protocol::Emulation::MediaFeature"* %284, i64 0, i32 1, i32 0, i32 0
  %286 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %285, align 8
  %287 = icmp eq %"class.WTF::StringImpl"* %286, null
  br i1 %287, label %305, label %288

288:                                              ; preds = %281
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %305

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %286, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i33
  %297 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %296, i33 1) #13
  %298 = extractvalue { i33, i1 } %297, 1
  %299 = extractvalue { i33, i1 } %297, 0
  %300 = icmp slt i33 %299, 0
  %301 = or i1 %298, %300
  br i1 %301, label %302, label %303, !prof !4

302:                                              ; preds = %293
  call void @llvm.trap() #13
  unreachable

303:                                              ; preds = %293
  %304 = trunc i33 %299 to i32
  store i32 %304, i32* %294, align 4
  br label %305

305:                                              ; preds = %281, %288, %303
  store %"class.WTF::StringImpl"* %286, %"class.WTF::StringImpl"** %245, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #13
  %306 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %283, align 8
  %307 = getelementptr inbounds %"class.blink::protocol::Emulation::MediaFeature", %"class.blink::protocol::Emulation::MediaFeature"* %306, i64 0, i32 2, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %305
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #13
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !4

324:                                              ; preds = %315
  call void @llvm.trap() #13
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %327

327:                                              ; preds = %305, %310, %325
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %247, align 8
  call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField"* %107, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12)
  %328 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %248, align 8
  %329 = icmp eq %"class.blink::WebLocalFrameImpl"* %328, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %327
  %331 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %328) #13
  br label %332

332:                                              ; preds = %327, %330
  %333 = phi %"class.blink::WebViewImpl"* [ %331, %330 ], [ null, %327 ]
  %334 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %333, i64 0, i32 6, i32 0, i32 0
  %335 = load %"class.blink::Page"*, %"class.blink::Page"** %334, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #13
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %361, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 acquire, align 4
  %341 = and i32 %340, 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %359, label %343

343:                                              ; preds = %338
  %344 = load atomic i32, i32* %339 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %361

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = zext i32 %349 to i33
  %351 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %350, i33 1) #13
  %352 = extractvalue { i33, i1 } %351, 1
  %353 = extractvalue { i33, i1 } %351, 0
  %354 = icmp slt i33 %353, 0
  %355 = or i1 %352, %354
  br i1 %355, label %356, label %357, !prof !4

356:                                              ; preds = %347
  call void @llvm.trap() #13
  unreachable

357:                                              ; preds = %347
  %358 = trunc i33 %353 to i32
  store i32 %358, i32* %348, align 4
  br label %361

359:                                              ; preds = %338
  %360 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %361

361:                                              ; preds = %332, %343, %357, %359
  %362 = phi %"class.WTF::StringImpl"* [ %360, %359 ], [ %336, %343 ], [ %336, %357 ], [ null, %332 ]
  %363 = ptrtoint %"class.WTF::StringImpl"* %362 to i64
  store i64 %363, i64* %250, align 8
  call void @_ZN5blink4Page23SetMediaFeatureOverrideERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::Page"* %335, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %12) #13
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %379, label %366

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %375

373:                                              ; preds = %366
  %374 = add i32 %372, -1
  store i32 %374, i32* %371, align 4
  br label %375

375:                                              ; preds = %373, %366
  %376 = phi i32 [ %374, %373 ], [ %372, %366 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #13
  br label %379

379:                                              ; preds = %361, %375, %378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #13
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #13
  br label %395

395:                                              ; preds = %379, %391, %394
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #13
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %411, label %398

398:                                              ; preds = %395
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %396) #13
  br label %411

411:                                              ; preds = %395, %407, %410
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #13
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %282, i64 1
  %413 = icmp eq %"class.std::__1::unique_ptr.2554"* %412, %241
  br i1 %413, label %252, label %281

414:                                              ; preds = %160, %4, %279
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.crdtp::DispatchResponse", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = bitcast %"class.crdtp::DispatchResponse"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* nonnull sret %16, %"class.blink::InspectorEmulationAgent"* %1)
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %16, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %28, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %20, i32* %23, align 8
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %16, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %263

28:                                               ; preds = %3
  %29 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum4NoneE, align 8
  %30 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %36, i64* %37, align 8
  br label %45

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  br label %45

45:                                               ; preds = %38, %34
  %46 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #13
  %49 = icmp eq i8* %29, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = call i64 @strlen(i8* nonnull %29) #14
  %52 = icmp ult i64 %51, 4294967296
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %50
  call void @llvm.trap() #13
  unreachable

54:                                               ; preds = %50
  %55 = trunc i64 %51 to i32
  br label %56

56:                                               ; preds = %45, %54
  %57 = phi i32 [ %55, %54 ], [ 0, %45 ]
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* %29, i8** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %57, i32* %61, align 8
  %62 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  br i1 %62, label %245, label %63

63:                                               ; preds = %56
  %64 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum13AchromatopsiaE, align 8
  %65 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #13
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %70, i64* %71, align 8
  br label %79

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  br label %79

79:                                               ; preds = %72, %68
  %80 = phi i32 [ %75, %72 ], [ 0, %68 ]
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %80, i32* %81, align 8
  %82 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #13
  %83 = icmp eq i8* %64, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %79
  %85 = call i64 @strlen(i8* nonnull %64) #14
  %86 = icmp ult i64 %85, 4294967296
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %84
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %84
  %89 = trunc i64 %85 to i32
  br label %90

90:                                               ; preds = %79, %88
  %91 = phi i32 [ %89, %88 ], [ 0, %79 ]
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* %64, i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %91, i32* %95, align 8
  %96 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #13
  br i1 %96, label %245, label %97

97:                                               ; preds = %90
  %98 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum13BlurredVisionE, align 8
  %99 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #13
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %103, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %105 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %104, i64* %105, align 8
  br label %113

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %112, align 8
  br label %113

113:                                              ; preds = %106, %102
  %114 = phi i32 [ %109, %106 ], [ 0, %102 ]
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %114, i32* %115, align 8
  %116 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #13
  %117 = icmp eq i8* %98, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = call i64 @strlen(i8* nonnull %98) #14
  %120 = icmp ult i64 %119, 4294967296
  br i1 %120, label %122, label %121, !prof !2

121:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

122:                                              ; preds = %118
  %123 = trunc i64 %119 to i32
  br label %124

124:                                              ; preds = %113, %122
  %125 = phi i32 [ %123, %122 ], [ 0, %113 ]
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %127 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* %98, i8** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %125, i32* %129, align 8
  %130 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #13
  br i1 %130, label %245, label %131

131:                                              ; preds = %124
  %132 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum12DeuteranopiaE, align 8
  %133 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %137, align 8
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %139 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %138, i64* %139, align 8
  br label %147

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 1
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %146 = bitcast i8** %145 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %146, align 8
  br label %147

147:                                              ; preds = %140, %136
  %148 = phi i32 [ %143, %140 ], [ 0, %136 ]
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %148, i32* %149, align 8
  %150 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #13
  %151 = icmp eq i8* %132, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %147
  %153 = call i64 @strlen(i8* nonnull %132) #14
  %154 = icmp ult i64 %153, 4294967296
  br i1 %154, label %156, label %155, !prof !2

155:                                              ; preds = %152
  call void @llvm.trap() #13
  unreachable

156:                                              ; preds = %152
  %157 = trunc i64 %153 to i32
  br label %158

158:                                              ; preds = %147, %156
  %159 = phi i32 [ %157, %156 ], [ 0, %147 ]
  %160 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %161 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* %132, i8** %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %159, i32* %163, align 8
  %164 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br i1 %164, label %245, label %165

165:                                              ; preds = %158
  %166 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum10ProtanopiaE, align 8
  %167 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #13
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %171, align 8
  %172 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %173 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %172, i64* %173, align 8
  br label %181

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %175, align 8
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 1
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %180 = bitcast i8** %179 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %180, align 8
  br label %181

181:                                              ; preds = %174, %170
  %182 = phi i32 [ %177, %174 ], [ 0, %170 ]
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %182, i32* %183, align 8
  %184 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #13
  %185 = icmp eq i8* %166, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %181
  %187 = call i64 @strlen(i8* nonnull %166) #14
  %188 = icmp ult i64 %187, 4294967296
  br i1 %188, label %190, label %189, !prof !2

189:                                              ; preds = %186
  call void @llvm.trap() #13
  unreachable

190:                                              ; preds = %186
  %191 = trunc i64 %187 to i32
  br label %192

192:                                              ; preds = %181, %190
  %193 = phi i32 [ %191, %190 ], [ 0, %181 ]
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %195 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* %166, i8** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %193, i32* %197, align 8
  %198 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #13
  br i1 %198, label %245, label %199

199:                                              ; preds = %192
  %200 = load i8*, i8** @_ZN5blink8protocol9Emulation27SetEmulatedVisionDeficiency8TypeEnum10TritanopiaE, align 8
  %201 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #13
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %204, label %208

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %205, align 8
  %206 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %207 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %206, i64* %207, align 8
  br label %215

208:                                              ; preds = %199
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 1
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %214 = bitcast i8** %213 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %214, align 8
  br label %215

215:                                              ; preds = %208, %204
  %216 = phi i32 [ %211, %208 ], [ 0, %204 ]
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %216, i32* %217, align 8
  %218 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #13
  %219 = icmp eq i8* %200, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %215
  %221 = call i64 @strlen(i8* nonnull %200) #14
  %222 = icmp ult i64 %221, 4294967296
  br i1 %222, label %224, label %223, !prof !2

223:                                              ; preds = %220
  call void @llvm.trap() #13
  unreachable

224:                                              ; preds = %220
  %225 = trunc i64 %221 to i32
  br label %226

226:                                              ; preds = %215, %224
  %227 = phi i32 [ %225, %224 ], [ 0, %215 ]
  %228 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %229 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %200, i8** %230, align 8
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %227, i32* %231, align 8
  %232 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #13
  br i1 %232, label %245, label %233

233:                                              ; preds = %226
  %234 = call i8* @_Znwm(i64 32) #15
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %234, i8** %235, align 8
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast i64* %236 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %237, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 30, i1 false) #13
  %238 = getelementptr inbounds i8, i8* %234, i64 30
  store i8 0, i8* %238, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %17) #13
  %239 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %263

243:                                              ; preds = %233
  %244 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %244) #15
  br label %263

245:                                              ; preds = %226, %192, %158, %124, %90, %56
  %246 = phi i32 [ 0, %56 ], [ 1, %90 ], [ 2, %124 ], [ 3, %158 ], [ 4, %192 ], [ 5, %226 ]
  %247 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 15
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %247, %"class.WTF::String"* dereferenceable(8) %2)
  %248 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %249 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %248, align 8
  %250 = icmp eq %"class.blink::WebLocalFrameImpl"* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %245
  %252 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %249) #13
  br label %253

253:                                              ; preds = %245, %251
  %254 = phi %"class.blink::WebViewImpl"* [ %252, %251 ], [ null, %245 ]
  %255 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %254, i64 0, i32 6, i32 0, i32 0
  %256 = load %"class.blink::Page"*, %"class.blink::Page"** %255, align 8
  call void @_ZN5blink4Page19SetVisionDeficiencyENS_16VisionDeficiencyE(%"class.blink::Page"* %256, i32 %246) #13
  %257 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %258 = load i32, i32* %19, align 8
  store i32 %258, i32* %257, align 8
  %259 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %260 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %16, i64 0, i32 1
  %261 = bitcast %"class.std::__1::basic_string"* %259 to i8*
  %262 = bitcast %"class.std::__1::basic_string"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* align 8 %262, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 24, i1 false) #13
  br label %263

263:                                              ; preds = %243, %233, %253, %22
  %264 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %16, i64 0, i32 1
  %265 = bitcast %"class.std::__1::basic_string"* %264 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %264, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  call void @_ZdlPv(i8* %271) #15
  br label %272

272:                                              ; preds = %263, %269
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol3DOM4RGBAEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* noalias sret, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.crdtp::DeserializerState", align 8
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = bitcast %"class.crdtp::DeserializerState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 16
  %14 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #13
  call void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"* nonnull %3, %"class.std::__1::vector"* nonnull %4) #13
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 16
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = ptrtoint i8* %16 to i64
  store i64 %21, i64* %20, align 8
  call void @_ZdlPv(i8* nonnull %16) #15
  br label %22

22:                                               ; preds = %2, %18
  %23 = call i8* @_Znwm(i64 40) #15
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3DOM4RGBAE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 24
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 32
  %27 = bitcast i8* %26 to double*
  store double 0.000000e+00, double* %27, align 8
  %28 = getelementptr inbounds i8, i8* %23, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %23, i64 16
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = call dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN5blink8protocol3DOM4RGBA23deserializer_descriptorEv() #13
  %35 = call zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"* %34, %"class.crdtp::DeserializerState"* nonnull %3, i8* nonnull %23) #13
  br i1 %35, label %45, label %36

36:                                               ; preds = %22
  %37 = bitcast i8* %23 to %"class.blink::protocol::DOM::RGBA"*
  %38 = bitcast i8* %23 to void (%"class.blink::protocol::DOM::RGBA"*)***
  %39 = load void (%"class.blink::protocol::DOM::RGBA"*)**, void (%"class.blink::protocol::DOM::RGBA"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %39, i64 2
  %41 = load void (%"class.blink::protocol::DOM::RGBA"*)*, void (%"class.blink::protocol::DOM::RGBA"*)** %40, align 8
  call void %41(%"class.blink::protocol::DOM::RGBA"* nonnull %37) #13
  %42 = call { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"* nonnull %3) #13
  %43 = extractvalue { i32, i64 } %42, 0
  %44 = extractvalue { i32, i64 } %42, 1
  br label %47

45:                                               ; preds = %22
  %46 = ptrtoint i8* %23 to i64
  br label %47

47:                                               ; preds = %45, %36
  %48 = phi i32 [ 0, %45 ], [ %43, %36 ]
  %49 = phi i64 [ -1, %45 ], [ %44, %36 ]
  %50 = phi i64 [ %46, %45 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 0
  store i32 %48, i32* %51, align 8
  %52 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 1
  store i64 %49, i64* %52, align 8
  %53 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.2574"* %53 to i64*
  store i64 %50, i64* %54, align 8
  %55 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.crdtp::span.2875"*, %"class.crdtp::span.2875"** %55, align 8
  %57 = icmp eq %"class.crdtp::span.2875"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %47
  %59 = ptrtoint %"class.crdtp::span.2875"* %56 to i64
  %60 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 1
  %61 = bitcast %"class.crdtp::span.2875"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.crdtp::span.2875"* %56 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %58, %47
  %64 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 1
  call void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"* %64) #13
  %65 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %65, align 8
  %67 = icmp eq %"class.std::__1::__shared_weak_count"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %66, i64 0, i32 0, i32 1
  %70 = atomicrmw add i64* %69, i64 -1 acq_rel
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %66, i64 0, i32 0
  %74 = bitcast %"class.std::__1::__shared_weak_count"* %66 to void (%"class.std::__1::__shared_count"*)***
  %75 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, i64 2
  %77 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, align 8
  call void %77(%"class.std::__1::__shared_count"* %73) #13
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %66) #13
  br label %78

78:                                               ; preds = %63, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::PtrMaybe.2584"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = bitcast %"class.crdtp::DispatchResponse"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* nonnull sret %4, %"class.blink::InspectorEmulationAgent"* %1)
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %8, i32* %11, align 8
  %12 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  br label %105

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2584", %"class.crdtp::detail::PtrMaybe.2584"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::protocol::DOM::RGBA"*, %"class.blink::protocol::DOM::RGBA"** %17, align 8
  %19 = icmp eq %"class.blink::protocol::DOM::RGBA"* %18, null
  br i1 %19, label %20, label %64

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %21, align 8
  %23 = icmp eq %"class.blink::WebLocalFrameImpl"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %22) #13
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.blink::WebViewImpl"* [ %25, %24 ], [ null, %20 ]
  call void @_ZN5blink11WebViewImpl42SetBaseBackgroundColorOverrideForInspectorEN4absl8optionalIjEE(%"class.blink::WebViewImpl"* %27, i64 0) #13
  %28 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 1
  %29 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 2
  %30 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 1, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %28 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 2, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %29 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %35, %41
  %43 = inttoptr i64 %34 to i8*
  %44 = inttoptr i64 %32 to i8*
  br i1 %42, label %45, label %59

45:                                               ; preds = %26
  %46 = icmp eq i8* %43, %44
  br i1 %46, label %63, label %47

47:                                               ; preds = %45
  %48 = inttoptr i64 %40 to i8*
  br label %49

49:                                               ; preds = %55, %47
  %50 = phi i8* [ %57, %55 ], [ %48, %47 ]
  %51 = phi i8* [ %56, %55 ], [ %43, %47 ]
  %52 = load i8, i8* %51, align 1
  %53 = load i8, i8* %50, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = getelementptr inbounds i8, i8* %50, i64 1
  %58 = icmp eq i8* %56, %44
  br i1 %58, label %63, label %49

59:                                               ; preds = %49, %26
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %29, i8* %43, i8* %44) #13
  %60 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 0, i32 2
  %61 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %61, %"class.WTF::String"* dereferenceable(8) %62, %"class.blink::WebVector.495"* null) #13
  br label %63

63:                                               ; preds = %55, %45, %59
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %105

64:                                               ; preds = %16
  %65 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 7
  %66 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 0, i32 0
  call void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* nonnull sret %5, %"class.crdtp::Serializable"* %67) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE3SetERKS6_(%"class.blink::InspectorAgentState::SimpleField"* %65, %"class.std::__1::vector"* nonnull dereferenceable(24) %5)
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %64
  %72 = ptrtoint i8* %69 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %74 = bitcast i8** %73 to i64*
  store i64 %72, i64* %74, align 8
  call void @_ZdlPv(i8* nonnull %69) #15
  br label %75

75:                                               ; preds = %64, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #13
  %76 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 4, i32 0
  %77 = load i8, i8* %76, align 8, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 4, i32 1
  %81 = load double, double* %80, align 8
  %82 = fmul double %81, 2.550000e+02
  %83 = fptrunc double %82 to float
  br label %84

84:                                               ; preds = %75, %79
  %85 = phi float [ %83, %79 ], [ 2.550000e+02, %75 ]
  %86 = call i64 @lroundf(float %85) #13
  %87 = trunc i64 %86 to i32
  %88 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %88, align 8
  %90 = icmp eq %"class.blink::WebLocalFrameImpl"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %84
  %92 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %89) #13
  br label %93

93:                                               ; preds = %84, %91
  %94 = phi %"class.blink::WebViewImpl"* [ %92, %91 ], [ null, %84 ]
  %95 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::protocol::DOM::RGBA", %"class.blink::protocol::DOM::RGBA"* %18, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = call i32 @_ZN5blink8MakeRGBAEiiii(i32 %96, i32 %98, i32 %100, i32 %87) #13
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 %102, 32
  %104 = or i64 %103, 1
  call void @_ZN5blink11WebViewImpl42SetBaseBackgroundColorOverrideForInspectorEN4absl8optionalIjEE(%"class.blink::WebViewImpl"* %94, i64 %104) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %105

105:                                              ; preds = %93, %63, %10
  %106 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %105, %111
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.495", align 8
  %5 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %6 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %52

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 29
  %11 = zext i1 %2 to i8
  %12 = zext i1 %2 to i32
  %13 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 29, i32 2
  %14 = load i8, i8* %13, align 1, !range !3
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %12, %15
  br i1 %16, label %40, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 29, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %12, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %10 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %24 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %24, i64 2
  %26 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %25, align 8
  tail call void %26(%"class.blink::InspectorAgentState::SimpleField.267"* %10) #13
  br label %40

27:                                               ; preds = %17
  store i8 %11, i8* %13, align 1
  %28 = bitcast %"class.blink::WebVector.495"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.495"* nonnull %4) #13
  %30 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 29, i32 0, i32 2
  %31 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 29, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %31, %"class.WTF::String"* dereferenceable(8) %32, %"class.blink::WebVector.495"* nonnull %4) #13
  %33 = load i8*, i8** %29, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 1
  %37 = ptrtoint i8* %33 to i64
  %38 = bitcast i8** %36 to i64*
  store i64 %37, i64* %38, align 8
  call void @_ZdlPv(i8* nonnull %33) #15
  br label %39

39:                                               ; preds = %35, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  br label %40

40:                                               ; preds = %9, %22, %39
  %41 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::WebLocalFrameImpl"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %42) #13
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi %"class.blink::WebViewImpl"* [ %45, %44 ], [ null, %40 ]
  %48 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Page"*, %"class.blink::Page"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %49, i64 0, i32 10, i32 0, i32 0
  %51 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %50, align 8
  call void @_ZN5blink15FocusController24SetFocusEmulationEnabledEb(%"class.blink::FocusController"* %51, i1 zeroext %2) #13
  br label %52

52:                                               ; preds = %46, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 4
  br i1 %12, label %14, label %20

14:                                               ; preds = %3, %9
  %15 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TimeZoneController::TimeZoneOverride"*, %"class.blink::TimeZoneController::TimeZoneOverride"** %15, align 8
  store %"class.blink::TimeZoneController::TimeZoneOverride"* null, %"class.blink::TimeZoneController::TimeZoneOverride"** %15, align 8
  %17 = icmp eq %"class.blink::TimeZoneController::TimeZoneOverride"* %16, null
  br i1 %17, label %62, label %18

18:                                               ; preds = %14
  tail call void @_ZN5blink18TimeZoneController21ClearTimeZoneOverrideEv() #13
  %19 = getelementptr inbounds %"class.blink::TimeZoneController::TimeZoneOverride", %"class.blink::TimeZoneController::TimeZoneOverride"* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #15
  br label %62

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.243"* %13, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::TimeZoneController::TimeZoneOverride"*, %"class.blink::TimeZoneController::TimeZoneOverride"** %21, align 8
  %23 = icmp eq %"class.blink::TimeZoneController::TimeZoneOverride"* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN5blink18TimeZoneController22ChangeTimeZoneOverrideERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #13
  br label %33

25:                                               ; preds = %20
  %26 = tail call %"class.blink::TimeZoneController::TimeZoneOverride"* @_ZN5blink18TimeZoneController19SetTimeZoneOverrideERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #13
  %27 = ptrtoint %"class.blink::TimeZoneController::TimeZoneOverride"* %26 to i64
  %28 = load %"class.blink::TimeZoneController::TimeZoneOverride"*, %"class.blink::TimeZoneController::TimeZoneOverride"** %21, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.243"* %13 to i64*
  store i64 %27, i64* %29, align 8
  %30 = icmp eq %"class.blink::TimeZoneController::TimeZoneOverride"* %28, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  tail call void @_ZN5blink18TimeZoneController21ClearTimeZoneOverrideEv() #13
  %32 = getelementptr inbounds %"class.blink::TimeZoneController::TimeZoneOverride", %"class.blink::TimeZoneController::TimeZoneOverride"* %28, i64 0, i32 0
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %24, %31
  %34 = load %"class.blink::TimeZoneController::TimeZoneOverride"*, %"class.blink::TimeZoneController::TimeZoneOverride"** %21, align 8
  br label %35

35:                                               ; preds = %33, %25
  %36 = phi %"class.blink::TimeZoneController::TimeZoneOverride"* [ %34, %33 ], [ %26, %25 ]
  %37 = icmp eq %"class.blink::TimeZoneController::TimeZoneOverride"* %36, null
  br i1 %37, label %38, label %62

38:                                               ; preds = %35
  %39 = tail call zeroext i1 @_ZN5blink18TimeZoneController19HasTimeZoneOverrideEv() #13
  br i1 %39, label %40, label %50

40:                                               ; preds = %38
  %41 = tail call i8* @_Znwm(i64 48) #15
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %44, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i64 38, i1 false) #13
  %45 = getelementptr inbounds i8, i8* %41, i64 38
  store i8 0, i8* %45, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #13
  %46 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %60, label %64

50:                                               ; preds = %38
  %51 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 19, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19, i1 false) #13
  %54 = getelementptr inbounds i8, i8* %53, i64 19
  store i8 0, i8* %54, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #13
  %55 = load i8, i8* %52, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #15
  br label %64

60:                                               ; preds = %40
  %61 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %61) #15
  br label %64

62:                                               ; preds = %35, %18, %14
  %63 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 30
  tail call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %63, %"class.WTF::String"* dereferenceable(8) %2)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %64

64:                                               ; preds = %57, %50, %60, %40, %62
  ret void
}

declare %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2580"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2585"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2580"* nocapture readonly, double* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::WebVector.495", align 8
  %10 = alloca %"class.blink::WebVector.495", align 8
  %11 = alloca %"class.blink::WebVector.495", align 8
  %12 = alloca %"class.blink::WebVector.495", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.blink::WebVector.495", align 8
  %18 = alloca %"class.crdtp::DispatchResponse", align 8
  %19 = alloca %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", align 8
  %20 = alloca %"class.logging::LogMessage", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.logging::LogMessage", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca i8, align 1
  %25 = alloca %"class.base::TimeDelta", align 8
  %26 = bitcast %"class.crdtp::DispatchResponse"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* nonnull sret %18, %"class.blink::InspectorEmulationAgent"* %1)
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %36, label %30

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %28, i32* %31, align 8
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #13
  br label %402

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 26
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %37, %"class.WTF::String"* dereferenceable(8) %2)
  %38 = bitcast %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 bitcast ({ i32, [4 x i8], { { { { i8, [7 x i8], %union.anon.258 } } } }, { { { { i8, [3 x i8], %union.anon.263 } } } } }* @__const._ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd.new_policy to i8*), i64 32, i1 false)
  %39 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19, i64 0, i32 0
  store i32 1, i32* %41, align 8
  %42 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %49 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %48, i64* %49, align 8
  br label %57

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %56 = bitcast i8** %55 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %56, align 8
  br label %57

57:                                               ; preds = %50, %46
  %58 = phi i32 [ %53, %50 ], [ 0, %46 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #13
  %61 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum7AdvanceE, i64 0, i64 0)) #14
  %62 = icmp ult i64 %61, 4294967296
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %57
  call void @llvm.trap() #13
  unreachable

64:                                               ; preds = %57
  %65 = trunc i64 %61 to i32
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum7AdvanceE, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %65, i32* %69, align 8
  %70 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  br i1 %70, label %71, label %72

71:                                               ; preds = %64
  store i32 0, i32* %41, align 8
  br label %151

72:                                               ; preds = %64
  %73 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %77, align 8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %78, i64* %79, align 8
  br label %87

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %86, align 8
  br label %87

87:                                               ; preds = %80, %76
  %88 = phi i32 [ %83, %80 ], [ 0, %76 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %88, i32* %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum28PauseIfNetworkFetchesPendingE, i64 0, i64 0)) #14
  %92 = icmp ult i64 %91, 4294967296
  br i1 %92, label %94, label %93, !prof !2

93:                                               ; preds = %87
  call void @llvm.trap() #13
  unreachable

94:                                               ; preds = %87
  %95 = trunc i64 %91 to i32
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum28PauseIfNetworkFetchesPendingE, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %95, i32* %99, align 8
  %100 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  store i32 2, i32* %41, align 8
  br label %151

102:                                              ; preds = %94
  %103 = load i32, i32* %41, align 8
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %151

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %3, i64 0, i32 0
  %107 = load i8, i8* %106, align 8, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %105
  %110 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %110, label %111, label %116

111:                                              ; preds = %109
  %112 = bitcast %"class.logging::LogMessage"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %20, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4, i64 0, i64 0), i32 364, i32 2) #13
  %113 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %20, i64 0, i32 2
  %114 = bitcast %"class.std::__1::basic_ostringstream"* %113 to %"class.std::__1::basic_ostream"*
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i64 57) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #13
  br label %116

116:                                              ; preds = %109, %111
  %117 = call i8* @_Znwm(i64 48) #15
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %117, i8** %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = bitcast i64* %119 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %120, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %117, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0), i64 44, i1 false) #13
  %121 = getelementptr inbounds i8, i8* %117, i64 44
  store i8 0, i8* %121, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %21) #13
  %122 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %393

126:                                              ; preds = %116
  %127 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %127) #15
  br label %393

128:                                              ; preds = %105
  %129 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %4, i64 0, i32 0
  %130 = load i8, i8* %129, align 4, !range !3
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %151, label %132

132:                                              ; preds = %128
  %133 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %133, label %134, label %139

134:                                              ; preds = %132
  %135 = bitcast %"class.logging::LogMessage"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %135) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %22, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4, i64 0, i64 0), i32 370, i32 2) #13
  %136 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %22, i64 0, i32 2
  %137 = bitcast %"class.std::__1::basic_ostringstream"* %136 to %"class.std::__1::basic_ostream"*
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i64 61) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %135) #13
  br label %139

139:                                              ; preds = %132, %134
  %140 = call i8* @_Znwm(i64 64) #15
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %140, i8** %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = bitcast i64* %142 to <2 x i64>*
  store <2 x i64> <i64 54, i64 -9223372036854775744>, <2 x i64>* %143, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %140, i8* align 1 getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i64 54, i1 false) #13
  %144 = getelementptr inbounds i8, i8* %140, i64 54
  store i8 0, i8* %144, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %23) #13
  %145 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %393

149:                                              ; preds = %139
  %150 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %150) #15
  br label %393

151:                                              ; preds = %128, %71, %101, %102
  %152 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %3, i64 0, i32 0
  %153 = load i8, i8* %152, align 8, !range !3
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %218, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %3, i64 0, i32 1
  %157 = bitcast double* %156 to i64*
  %158 = load i64, i64* %157, align 8
  store i8 1, i8* %39, align 8
  %159 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %160 = bitcast %union.anon.258* %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22
  %162 = bitcast i64 %158 to double
  %163 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 2
  %164 = load double, double* %163, align 8
  %165 = fcmp oeq double %164, %162
  br i1 %165, label %189, label %166

166:                                              ; preds = %155
  %167 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 1
  %168 = load double, double* %167, align 8
  %169 = fcmp oeq double %168, %162
  br i1 %169, label %170, label %175

170:                                              ; preds = %166
  %171 = bitcast %"class.blink::InspectorAgentState::SimpleField.293"* %161 to void (%"class.blink::InspectorAgentState::SimpleField.293"*)***
  %172 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)**, void (%"class.blink::InspectorAgentState::SimpleField.293"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %172, i64 2
  %174 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %173, align 8
  call void %174(%"class.blink::InspectorAgentState::SimpleField.293"* %161) #13
  br label %189

175:                                              ; preds = %166
  %176 = bitcast double* %163 to i64*
  store i64 %158, i64* %176, align 8
  %177 = bitcast %"class.blink::WebVector.495"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #13
  %178 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %12, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double %162, %"class.blink::WebVector.495"* nonnull %12) #13
  %179 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 0, i32 2
  %180 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %180, %"class.WTF::String"* dereferenceable(8) %181, %"class.blink::WebVector.495"* nonnull %12) #13
  %182 = load i8*, i8** %178, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %12, i64 0, i32 0, i32 0, i32 1
  %186 = ptrtoint i8* %182 to i64
  %187 = bitcast i8** %185 to i64*
  store i64 %186, i64* %187, align 8
  call void @_ZdlPv(i8* nonnull %182) #15
  br label %188

188:                                              ; preds = %184, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #13
  br label %189

189:                                              ; preds = %155, %170, %188
  %190 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 23
  %191 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 25, i32 2
  %192 = load double, double* %191, align 8
  %193 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 23, i32 2
  %194 = load double, double* %193, align 8
  %195 = fcmp oeq double %194, %192
  br i1 %195, label %228, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 23, i32 1
  %198 = load double, double* %197, align 8
  %199 = fcmp oeq double %198, %192
  br i1 %199, label %200, label %205

200:                                              ; preds = %196
  %201 = bitcast %"class.blink::InspectorAgentState::SimpleField.293"* %190 to void (%"class.blink::InspectorAgentState::SimpleField.293"*)***
  %202 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)**, void (%"class.blink::InspectorAgentState::SimpleField.293"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %202, i64 2
  %204 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %203, align 8
  call void %204(%"class.blink::InspectorAgentState::SimpleField.293"* %190) #13
  br label %228

205:                                              ; preds = %196
  store double %192, double* %193, align 8
  %206 = bitcast %"class.blink::WebVector.495"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #13
  %207 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %11, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double %192, %"class.blink::WebVector.495"* nonnull %11) #13
  %208 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 23, i32 0, i32 2
  %209 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 23, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %209, %"class.WTF::String"* dereferenceable(8) %210, %"class.blink::WebVector.495"* nonnull %11) #13
  %211 = load i8*, i8** %207, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %217, label %213

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %11, i64 0, i32 0, i32 0, i32 1
  %215 = ptrtoint i8* %211 to i64
  %216 = bitcast i8** %214 to i64*
  store i64 %215, i64* %216, align 8
  call void @_ZdlPv(i8* nonnull %211) #15
  br label %217

217:                                              ; preds = %213, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #13
  br label %228

218:                                              ; preds = %151
  %219 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 1
  %220 = load double, double* %219, align 8
  %221 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 2
  %222 = load double, double* %221, align 8
  %223 = fcmp oeq double %220, %222
  br i1 %223, label %228, label %224

224:                                              ; preds = %218
  store double %220, double* %221, align 8
  %225 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 0, i32 2
  %226 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 22, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %226, %"class.WTF::String"* dereferenceable(8) %227, %"class.blink::WebVector.495"* null) #13
  br label %228

228:                                              ; preds = %224, %218, %217, %200, %189
  %229 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %4, i64 0, i32 0
  %230 = load i8, i8* %229, align 4, !range !3
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %266, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %4, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %19, i64 0, i32 2
  %236 = bitcast %"class.absl::optional.259"* %235 to i64*
  %237 = zext i32 %234 to i64
  %238 = shl nuw i64 %237, 32
  %239 = or i64 %238, 1
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27
  %241 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 2
  %242 = load i32, i32* %241, align 4
  %243 = icmp eq i32 %242, %234
  br i1 %243, label %276, label %244

244:                                              ; preds = %232
  %245 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, %234
  br i1 %247, label %248, label %253

248:                                              ; preds = %244
  %249 = bitcast %"class.blink::InspectorAgentState::SimpleField.268"* %240 to void (%"class.blink::InspectorAgentState::SimpleField.268"*)***
  %250 = load void (%"class.blink::InspectorAgentState::SimpleField.268"*)**, void (%"class.blink::InspectorAgentState::SimpleField.268"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.268"*)*, void (%"class.blink::InspectorAgentState::SimpleField.268"*)** %250, i64 2
  %252 = load void (%"class.blink::InspectorAgentState::SimpleField.268"*)*, void (%"class.blink::InspectorAgentState::SimpleField.268"*)** %251, align 8
  call void %252(%"class.blink::InspectorAgentState::SimpleField.268"* %240) #13
  br label %276

253:                                              ; preds = %244
  store i32 %234, i32* %241, align 4
  %254 = bitcast %"class.blink::WebVector.495"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #13
  %255 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %10, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %234, %"class.blink::WebVector.495"* nonnull %10) #13
  %256 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 0, i32 2
  %257 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %257, %"class.WTF::String"* dereferenceable(8) %258, %"class.blink::WebVector.495"* nonnull %10) #13
  %259 = load i8*, i8** %255, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %265, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %10, i64 0, i32 0, i32 0, i32 1
  %263 = ptrtoint i8* %259 to i64
  %264 = bitcast i8** %262 to i64*
  store i64 %263, i64* %264, align 8
  call void @_ZdlPv(i8* nonnull %259) #15
  br label %265

265:                                              ; preds = %261, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #13
  br label %276

266:                                              ; preds = %228
  %267 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 1
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 2
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %268, %270
  br i1 %271, label %276, label %272

272:                                              ; preds = %266
  store i32 %268, i32* %269, align 4
  %273 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 0, i32 2
  %274 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 27, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %274, %"class.WTF::String"* dereferenceable(8) %275, %"class.blink::WebVector.495"* null) #13
  br label %276

276:                                              ; preds = %272, %266, %265, %248, %232
  %277 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 6
  %278 = load i8, i8* %277, align 8, !range !3
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %283

280:                                              ; preds = %276
  store i8 1, i8* %277, align 8
  %281 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %282 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %281, align 8
  call void @_ZN5blink13CoreProbeSink26AddInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"* %282, %"class.blink::InspectorEmulationAgent"* %1) #13
  br label %283

283:                                              ; preds = %276, %280
  %284 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %6, i64 0, i32 0
  %285 = load i8, i8* %284, align 8, !range !3
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %331, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 24
  %289 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2580", %"class.crdtp::detail::ValueMaybe.2580"* %6, i64 0, i32 1
  %290 = load double, double* %289, align 8
  %291 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 24, i32 2
  %292 = load double, double* %291, align 8
  %293 = fcmp oeq double %292, %290
  br i1 %293, label %316, label %294

294:                                              ; preds = %287
  %295 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 24, i32 1
  %296 = load double, double* %295, align 8
  %297 = fcmp oeq double %296, %290
  br i1 %297, label %298, label %303

298:                                              ; preds = %294
  %299 = bitcast %"class.blink::InspectorAgentState::SimpleField.293"* %288 to void (%"class.blink::InspectorAgentState::SimpleField.293"*)***
  %300 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)**, void (%"class.blink::InspectorAgentState::SimpleField.293"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %300, i64 2
  %302 = load void (%"class.blink::InspectorAgentState::SimpleField.293"*)*, void (%"class.blink::InspectorAgentState::SimpleField.293"*)** %301, align 8
  call void %302(%"class.blink::InspectorAgentState::SimpleField.293"* %288) #13
  br label %316

303:                                              ; preds = %294
  store double %290, double* %291, align 8
  %304 = bitcast %"class.blink::WebVector.495"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #13
  %305 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %9, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double %290, %"class.blink::WebVector.495"* nonnull %9) #13
  %306 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 24, i32 0, i32 2
  %307 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 24, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %307, %"class.WTF::String"* dereferenceable(8) %308, %"class.blink::WebVector.495"* nonnull %9) #13
  %309 = load i8*, i8** %305, align 8
  %310 = icmp eq i8* %309, null
  br i1 %310, label %315, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %9, i64 0, i32 0, i32 0, i32 1
  %313 = ptrtoint i8* %309 to i64
  %314 = bitcast i8** %312 to i64*
  store i64 %313, i64* %314, align 8
  call void @_ZdlPv(i8* nonnull %309) #15
  br label %315

315:                                              ; preds = %311, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %304) #13
  br label %316

316:                                              ; preds = %287, %298, %315
  %317 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %318 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %317, align 8
  %319 = call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %318) #13
  %320 = bitcast %"class.blink::WebView"* %319 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %321 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %320, align 8
  %322 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %321, i64 53
  %323 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %322, align 8
  %324 = call %"class.blink::PageScheduler"* %323(%"class.blink::WebView"* %319) #13
  %325 = load double, double* %289, align 8
  %326 = call i64 @_ZN4base4Time11FromDoubleTEd(double %325) #13
  %327 = bitcast %"class.blink::PageScheduler"* %324 to void (%"class.blink::PageScheduler"*, i64)***
  %328 = load void (%"class.blink::PageScheduler"*, i64)**, void (%"class.blink::PageScheduler"*, i64)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i64)*, void (%"class.blink::PageScheduler"*, i64)** %328, i64 16
  %330 = load void (%"class.blink::PageScheduler"*, i64)*, void (%"class.blink::PageScheduler"*, i64)** %329, align 8
  call void %330(%"class.blink::PageScheduler"* %324, i64 %326) #13
  br label %331

331:                                              ; preds = %283, %316
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24)
  store i8 0, i8* %24, align 1
  %332 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %5, i64 0, i32 0
  %333 = load i8, i8* %332, align 1, !range !3
  %334 = icmp eq i8 %333, 0
  %335 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2585", %"class.crdtp::detail::ValueMaybe.2585"* %5, i64 0, i32 1
  %336 = select i1 %334, i8* %24, i8* %335
  %337 = load i8, i8* %336, align 1, !range !3
  %338 = icmp eq i8 %337, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24)
  br i1 %338, label %376, label %339

339:                                              ; preds = %331
  %340 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 28
  %341 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 28, i32 2
  %342 = load i8, i8* %341, align 1, !range !3
  %343 = icmp eq i8 %342, 1
  br i1 %343, label %366, label %344

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 28, i32 1
  %346 = load i8, i8* %345, align 8, !range !3
  %347 = icmp eq i8 %346, 1
  br i1 %347, label %348, label %353

348:                                              ; preds = %344
  %349 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %340 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %350 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %349, align 8
  %351 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %350, i64 2
  %352 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %351, align 8
  call void %352(%"class.blink::InspectorAgentState::SimpleField.267"* %340) #13
  br label %366

353:                                              ; preds = %344
  store i8 1, i8* %341, align 1
  %354 = bitcast %"class.blink::WebVector.495"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #13
  %355 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %17, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %354, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.495"* nonnull %17) #13
  %356 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 28, i32 0, i32 2
  %357 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 28, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %357, %"class.WTF::String"* dereferenceable(8) %358, %"class.blink::WebVector.495"* nonnull %17) #13
  %359 = load i8*, i8** %355, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %17, i64 0, i32 0, i32 0, i32 1
  %363 = ptrtoint i8* %359 to i64
  %364 = bitcast i8** %362 to i64*
  store i64 %363, i64* %364, align 8
  call void @_ZdlPv(i8* nonnull %359) #15
  br label %365

365:                                              ; preds = %361, %353
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #13
  br label %366

366:                                              ; preds = %339, %348, %365
  %367 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %368 = load i8, i8* %367, align 8, !range !3
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %373, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %372 = bitcast %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* nonnull align 8 %38, i64 32, i1 false) #13
  br label %377

373:                                              ; preds = %366
  %374 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %375 = bitcast %union.anon.253* %374 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* nonnull align 8 %38, i64 32, i1 false) #13
  store i8 1, i8* %367, align 8
  br label %377

376:                                              ; preds = %331
  call void @_ZN5blink23InspectorEmulationAgent22ApplyVirtualTimePolicyERKNS0_24PendingVirtualTimePolicyE(%"class.blink::InspectorEmulationAgent"* %1, %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* nonnull dereferenceable(32) %19)
  br label %377

377:                                              ; preds = %373, %370, %376
  %378 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %379 = load i64, i64* %378, align 8
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %377
  store double 0.000000e+00, double* %7, align 8
  br label %386

382:                                              ; preds = %377
  %383 = bitcast %"class.base::TimeDelta"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #13
  %384 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %25, i64 0, i32 0
  store i64 %379, i64* %384, align 8
  %385 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %25) #13
  store double %385, double* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #13
  br label %386

386:                                              ; preds = %382, %381
  %387 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %388 = load i32, i32* %27, align 8
  store i32 %388, i32* %387, align 8
  %389 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %390 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1
  %391 = bitcast %"class.std::__1::basic_string"* %389 to i8*
  %392 = bitcast %"class.std::__1::basic_string"* %390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %391, i8* align 8 %392, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 0, i64 24, i1 false) #13
  br label %393

393:                                              ; preds = %386, %116, %126, %139, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #13
  %394 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1
  %395 = bitcast %"class.std::__1::basic_string"* %394 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %396 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %395, i64 0, i32 1, i32 0
  %397 = load i8, i8* %396, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %402

399:                                              ; preds = %393
  %400 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  call void @_ZdlPv(i8* %401) #15
  br label %402

402:                                              ; preds = %30, %393, %399
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %6 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %7 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.crdtp::DispatchResponse", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.crdtp::DispatchResponse", align 8
  %14 = alloca %"class.crdtp::detail::ValueMaybe.2548", align 4
  %15 = alloca %"class.crdtp::DispatchResponse", align 8
  %16 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %17 = alloca %"class.crdtp::detail::PtrMaybe.2573", align 8
  %18 = alloca %"class.crdtp::DispatchResponse", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.crdtp::DispatchResponse", align 8
  %21 = alloca %"class.crdtp::DispatchResponse", align 8
  %22 = alloca %"class.crdtp::DispatchResponse", align 8
  %23 = alloca %"class.crdtp::detail::PtrMaybe.2584", align 8
  %24 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %28, align 8
  tail call void @_ZN5blink13CoreProbeSink29RemoveInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"* %29, %"class.blink::InspectorEmulationAgent"* %1) #13
  store i8 0, i8* %24, align 8
  br label %30

30:                                               ; preds = %2, %27
  %31 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 0
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %37 = bitcast %"class.crdtp::detail::PtrMaybe"* %7 to i64*
  store i64 0, i64* %37, align 8
  call void @_ZN5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.blink::InspectorEmulationAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.crdtp::detail::ValueMaybe"* nonnull %5, %"class.crdtp::detail::ValueMaybe"* nonnull %6, %"class.crdtp::detail::PtrMaybe"* nonnull %7)
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %30, %43
  %47 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::protocol::Emulation::UserAgentMetadata"*, %"class.blink::protocol::Emulation::UserAgentMetadata"** %47, align 8
  store %"class.blink::protocol::Emulation::UserAgentMetadata"* null, %"class.blink::protocol::Emulation::UserAgentMetadata"** %47, align 8
  %49 = icmp eq %"class.blink::protocol::Emulation::UserAgentMetadata"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::protocol::Emulation::UserAgentMetadata"* %48 to void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)***
  %52 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)**, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %52, i64 2
  %54 = load void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)*, void (%"class.blink::protocol::Emulation::UserAgentMetadata"*)** %53, align 8
  call void %54(%"class.blink::protocol::Emulation::UserAgentMetadata"* nonnull %48) #13
  br label %55

55:                                               ; preds = %46, %50
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #13
  br label %71

71:                                               ; preds = %55, %67, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #13
  br label %87

87:                                               ; preds = %71, %83, %86
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #13
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %104 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 21, i32 2, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %123, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %123, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %9, i64 0, i32 0
  store i8 1, i8* %112, align 8
  %113 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %9, i64 0, i32 1
  %114 = bitcast %"class.WTF::String"* %113 to i64*
  store i64 0, i64* %114, align 8
  call void @_ZN5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorEmulationAgent"* %1, %"class.crdtp::detail::ValueMaybe"* nonnull %9)
  %115 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %120, %111, %103, %107
  %124 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %125 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %124, align 8
  %126 = icmp eq %"class.blink::WebLocalFrameImpl"* %125, null
  br i1 %126, label %298, label %127

127:                                              ; preds = %123
  call void @_ZN5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorEmulationAgent"* %1, i1 zeroext false)
  %128 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #15
  br label %136

136:                                              ; preds = %127, %133
  call void @_ZN5blink23InspectorEmulationAgent19setScrollbarsHiddenEb(%"class.crdtp::DispatchResponse"* nonnull sret %11, %"class.blink::InspectorEmulationAgent"* %1, i1 zeroext false)
  %137 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 1
  %138 = bitcast %"class.std::__1::basic_string"* %137 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #15
  br label %145

145:                                              ; preds = %136, %142
  call void @_ZN5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::InspectorEmulationAgent"* %1, i1 zeroext false)
  %146 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %147 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %145, %151
  %155 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %14, i64 0, i32 0
  store i8 0, i8* %155, align 4
  %156 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2548", %"class.crdtp::detail::ValueMaybe.2548"* %14, i64 0, i32 1
  store i32 0, i32* %156, align 4
  call void @_ZN5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* nonnull sret %13, %"class.blink::InspectorEmulationAgent"* %1, i1 zeroext false, %"class.crdtp::detail::ValueMaybe.2548"* nonnull %14)
  %157 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 1
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %154, %162
  %166 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %16, i64 0, i32 0
  store i8 1, i8* %166, align 8
  %167 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %16, i64 0, i32 1
  %168 = bitcast %"class.WTF::String"* %167 to i64*
  store i64 0, i64* %168, align 8
  %169 = bitcast %"class.crdtp::detail::PtrMaybe.2573"* %17 to i64*
  store i64 0, i64* %169, align 8
  call void @_ZN5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %15, %"class.blink::InspectorEmulationAgent"* %1, %"class.crdtp::detail::ValueMaybe"* nonnull %16, %"class.crdtp::detail::PtrMaybe.2573"* nonnull %17)
  %170 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %15, i64 0, i32 1
  %171 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %165
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load i8*, i8** %176, align 8
  call void @_ZdlPv(i8* %177) #15
  br label %178

178:                                              ; preds = %165, %175
  %179 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2573", %"class.crdtp::detail::PtrMaybe.2573"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"class.std::__1::vector.2552"*, %"class.std::__1::vector.2552"** %179, align 8
  store %"class.std::__1::vector.2552"* null, %"class.std::__1::vector.2552"** %179, align 8
  %181 = icmp eq %"class.std::__1::vector.2552"* %180, null
  br i1 %181, label %211, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %180, i64 0, i32 0, i32 0
  %184 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %183, align 8
  %185 = icmp eq %"class.std::__1::unique_ptr.2554"* %184, null
  br i1 %185, label %209, label %186

186:                                              ; preds = %182
  %187 = bitcast %"class.std::__1::unique_ptr.2554"* %184 to i8*
  %188 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %180, i64 0, i32 0, i32 1
  %189 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %188, align 8
  %190 = icmp eq %"class.std::__1::unique_ptr.2554"* %189, %184
  br i1 %190, label %207, label %191

191:                                              ; preds = %186, %202
  %192 = phi %"class.std::__1::unique_ptr.2554"* [ %193, %202 ], [ %189, %186 ]
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %192, i64 -1
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %194, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %194, align 8
  %196 = icmp eq %"class.blink::protocol::Emulation::MediaFeature"* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = bitcast %"class.blink::protocol::Emulation::MediaFeature"* %195 to void (%"class.blink::protocol::Emulation::MediaFeature"*)***
  %199 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)**, void (%"class.blink::protocol::Emulation::MediaFeature"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %199, i64 2
  %201 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %200, align 8
  call void %201(%"class.blink::protocol::Emulation::MediaFeature"* nonnull %195) #13
  br label %202

202:                                              ; preds = %197, %191
  %203 = icmp eq %"class.std::__1::unique_ptr.2554"* %193, %184
  br i1 %203, label %204, label %191

204:                                              ; preds = %202
  %205 = bitcast %"class.std::__1::vector.2552"* %180 to i8**
  %206 = load i8*, i8** %205, align 8
  br label %207

207:                                              ; preds = %204, %186
  %208 = phi i8* [ %206, %204 ], [ %187, %186 ]
  store %"class.std::__1::unique_ptr.2554"* %184, %"class.std::__1::unique_ptr.2554"** %188, align 8
  call void @_ZdlPv(i8* %208) #15
  br label %209

209:                                              ; preds = %207, %182
  %210 = bitcast %"class.std::__1::vector.2552"* %180 to i8*
  call void @_ZdlPv(i8* %210) #15
  br label %211

211:                                              ; preds = %178, %209
  %212 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %16, i64 0, i32 1, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #13
  br label %228

228:                                              ; preds = %211, %224, %227
  %229 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 15, i32 2, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %260, label %232

232:                                              ; preds = %228
  %233 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #13
  call void @_ZN5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* nonnull sret %18, %"class.blink::InspectorEmulationAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %19)
  %234 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %18, i64 0, i32 1
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  call void @_ZdlPv(i8* %241) #15
  br label %242

242:                                              ; preds = %232, %239
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %259, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %244) #13
  br label %259

259:                                              ; preds = %242, %255, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #13
  br label %260

260:                                              ; preds = %259, %228
  %261 = bitcast %"class.crdtp::DispatchResponse"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 32, i1 false) #13, !alias.scope !8
  call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* nonnull sret %20, %"class.blink::InspectorEmulationAgent"* %1) #13
  %262 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %20, i64 0, i32 0
  %263 = load i32, i32* %262, align 8, !alias.scope !8
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %267

265:                                              ; preds = %260
  %266 = call %"class.blink::scheduler::ThreadCPUThrottler"* @_ZN5blink9scheduler18ThreadCPUThrottler11GetInstanceEv() #13
  call void @_ZN5blink9scheduler18ThreadCPUThrottler17SetThrottlingRateEd(%"class.blink::scheduler::ThreadCPUThrottler"* %266, double 1.000000e+00) #13
  br label %267

267:                                              ; preds = %260, %265
  %268 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %20, i64 0, i32 1
  %269 = bitcast %"class.std::__1::basic_string"* %268 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %268, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %275) #15
  br label %276

276:                                              ; preds = %267, %273
  call void @_ZN5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb(%"class.crdtp::DispatchResponse"* nonnull sret %21, %"class.blink::InspectorEmulationAgent"* %1, i1 zeroext false)
  %277 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %21, i64 0, i32 1
  %278 = bitcast %"class.std::__1::basic_string"* %277 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %278, i64 0, i32 1, i32 0
  %280 = load i8, i8* %279, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %285

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load i8*, i8** %283, align 8
  call void @_ZdlPv(i8* %284) #15
  br label %285

285:                                              ; preds = %276, %282
  %286 = bitcast %"class.crdtp::detail::PtrMaybe.2584"* %23 to i64*
  store i64 0, i64* %286, align 8
  call void @_ZN5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE(%"class.crdtp::DispatchResponse"* nonnull sret %22, %"class.blink::InspectorEmulationAgent"* %1, %"class.crdtp::detail::PtrMaybe.2584"* nonnull %23)
  %287 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %22, i64 0, i32 1
  %288 = bitcast %"class.std::__1::basic_string"* %287 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %285
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %294) #15
  br label %295

295:                                              ; preds = %292, %285
  %296 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.2584", %"class.crdtp::detail::PtrMaybe.2584"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::DOM::RGBA"* null, %"class.blink::protocol::DOM::RGBA"** %296, align 8
  %297 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 31
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField.294"* %297)
  br label %298

298:                                              ; preds = %123, %295
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

declare void @_ZN5blink13CoreProbeSink29RemoveInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorEmulationAgent"*) local_unnamed_addr #3

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.495", align 8
  %5 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %6 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 8
  %11 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 8, i32 2
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %13, %2
  br i1 %14, label %15, label %53

15:                                               ; preds = %9
  %16 = zext i1 %2 to i8
  %17 = zext i1 %2 to i32
  %18 = zext i8 %12 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 8, i32 1
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %10 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %27 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %27, i64 2
  %29 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %28, align 8
  tail call void %29(%"class.blink::InspectorAgentState::SimpleField.267"* %10) #13
  br label %43

30:                                               ; preds = %20
  store i8 %16, i8* %11, align 1
  %31 = bitcast %"class.blink::WebVector.495"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.495"* nonnull %4) #13
  %33 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 8, i32 0, i32 2
  %34 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 8, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %34, %"class.WTF::String"* dereferenceable(8) %35, %"class.blink::WebVector.495"* nonnull %4) #13
  %36 = load i8*, i8** %32, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 1
  %40 = ptrtoint i8* %36 to i64
  %41 = bitcast i8** %39 to i64*
  store i64 %40, i64* %41, align 8
  call void @_ZdlPv(i8* nonnull %36) #15
  br label %42

42:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br label %43

43:                                               ; preds = %15, %25, %42
  %44 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::WebLocalFrameImpl"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %45) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi %"class.blink::WebViewImpl"* [ %48, %47 ], [ null, %43 ]
  %51 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %50, i64 0, i32 33, i32 0, i32 0
  %52 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %51, align 8
  call void @_ZN5blink16DevToolsEmulator26SetScriptExecutionDisabledEb(%"class.blink::DevToolsEmulator"* %52, i1 zeroext %2) #13
  br label %53

53:                                               ; preds = %49, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent19setScrollbarsHiddenEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.495", align 8
  %5 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %6 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 9
  %11 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 9, i32 2
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %13, %2
  br i1 %14, label %15, label %53

15:                                               ; preds = %9
  %16 = zext i1 %2 to i8
  %17 = zext i1 %2 to i32
  %18 = zext i8 %12 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 9, i32 1
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %10 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %27 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %27, i64 2
  %29 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %28, align 8
  tail call void %29(%"class.blink::InspectorAgentState::SimpleField.267"* %10) #13
  br label %43

30:                                               ; preds = %20
  store i8 %16, i8* %11, align 1
  %31 = bitcast %"class.blink::WebVector.495"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.495"* nonnull %4) #13
  %33 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 9, i32 0, i32 2
  %34 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 9, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %34, %"class.WTF::String"* dereferenceable(8) %35, %"class.blink::WebVector.495"* nonnull %4) #13
  %36 = load i8*, i8** %32, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 1
  %40 = ptrtoint i8* %36 to i64
  %41 = bitcast i8** %39 to i64*
  store i64 %40, i64* %41, align 8
  call void @_ZdlPv(i8* nonnull %36) #15
  br label %42

42:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br label %43

43:                                               ; preds = %15, %25, %42
  %44 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::WebLocalFrameImpl"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %45) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi %"class.blink::WebViewImpl"* [ %48, %47 ], [ null, %43 ]
  %51 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %50, i64 0, i32 33, i32 0, i32 0
  %52 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %51, align 8
  call void @_ZN5blink16DevToolsEmulator19SetScrollbarsHiddenEb(%"class.blink::DevToolsEmulator"* %52, i1 zeroext %2) #13
  br label %53

53:                                               ; preds = %49, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.495", align 8
  %5 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %6 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %53

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 10
  %11 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 10, i32 2
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %13, %2
  br i1 %14, label %15, label %53

15:                                               ; preds = %9
  %16 = zext i1 %2 to i8
  %17 = zext i1 %2 to i32
  %18 = zext i8 %12 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %43, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 10, i32 1
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %10 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %27 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %27, i64 2
  %29 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %28, align 8
  tail call void %29(%"class.blink::InspectorAgentState::SimpleField.267"* %10) #13
  br label %43

30:                                               ; preds = %20
  store i8 %16, i8* %11, align 1
  %31 = bitcast %"class.blink::WebVector.495"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.495"* nonnull %4) #13
  %33 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 10, i32 0, i32 2
  %34 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 10, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %34, %"class.WTF::String"* dereferenceable(8) %35, %"class.blink::WebVector.495"* nonnull %4) #13
  %36 = load i8*, i8** %32, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 1
  %40 = ptrtoint i8* %36 to i64
  %41 = bitcast i8** %39 to i64*
  store i64 %40, i64* %41, align 8
  call void @_ZdlPv(i8* nonnull %36) #15
  br label %42

42:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br label %43

43:                                               ; preds = %15, %25, %42
  %44 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::WebLocalFrameImpl"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %45) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi %"class.blink::WebViewImpl"* [ %48, %47 ], [ null, %43 ]
  %51 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %50, i64 0, i32 33, i32 0, i32 0
  %52 = load %"class.blink::DevToolsEmulator"*, %"class.blink::DevToolsEmulator"** %51, align 8
  call void @_ZN5blink16DevToolsEmulator25SetDocumentCookieDisabledEb(%"class.blink::DevToolsEmulator"* %52, i1 zeroext %2) #13
  br label %53

53:                                               ; preds = %49, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %5 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call %"class.blink::scheduler::ThreadCPUThrottler"* @_ZN5blink9scheduler18ThreadCPUThrottler11GetInstanceEv() #13
  tail call void @_ZN5blink9scheduler18ThreadCPUThrottler17SetThrottlingRateEd(%"class.blink::scheduler::ThreadCPUThrottler"* %9, double %2) #13
  br label %10

10:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField.294"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend.2696", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.295", %"class.WTF::HashMap.295"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.299"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.299"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.299"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.299"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.299"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend.2696"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %72

34:                                               ; preds = %147, %157, %154
  %35 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.299"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.299"* %37, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %65 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.299"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %50 = ptrtoint i8* %48 to i64
  switch i64 %50, label %51 [
    i64 -1, label %65
    i64 0, label %65
  ]

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = bitcast i8* %48 to i32*
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %65

65:                                               ; preds = %64, %61, %44, %44
  %66 = add nuw nsw i64 %45, 1
  %67 = icmp eq i64 %66, %43
  br i1 %67, label %68, label %44

68:                                               ; preds = %65, %39
  %69 = bitcast %"struct.WTF::KeyValuePair.299"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #13
  %70 = bitcast %"class.WTF::HashMap.295"* %4 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %71

71:                                               ; preds = %36, %68
  ret void

72:                                               ; preds = %26, %157
  %73 = phi %"struct.WTF::KeyValuePair.299"* [ %24, %26 ], [ %151, %157 ]
  %74 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #13
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %78, %93
  %96 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %76)
  %97 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %31, align 8
  %98 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 1
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %32, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %3)
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.495"* null) #13
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %95, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %115
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #13
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %73, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.299"* %148, %13
  br i1 %149, label %34, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"struct.WTF::KeyValuePair.299"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"struct.WTF::KeyValuePair.299"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %151, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.299"* %155, %13
  br i1 %156, label %34, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"struct.WTF::KeyValuePair.299"* %151, %13
  br i1 %158, label %34, label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent20resetPageScaleFactorEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %4 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::WebLocalFrameImpl"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %9) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::WebViewImpl"* [ %12, %11 ], [ null, %7 ]
  tail call void @_ZN5blink11WebViewImpl26ResetScaleStateImmediatelyEv(%"class.blink::WebViewImpl"* %14) #13
  br label %15

15:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %5, align 8
  %7 = icmp eq %"class.blink::WebLocalFrameImpl"* %6, null
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4, i64 0, i64 0), i32 730, i32 2) #13
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i64 51) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #13
  br label %15

15:                                               ; preds = %8, %10
  %16 = call i8* @_Znwm(i64 64) #15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i64 51, i1 false) #13
  %20 = getelementptr inbounds i8, i8* %16, i64 51
  store i8 0, i8* %20, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #13
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #15
  br label %28

27:                                               ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %28

28:                                               ; preds = %25, %15, %27
  ret void
}

declare void @_ZN5blink11WebViewImpl26ResetScaleStateImmediatelyEv(%"class.blink::WebViewImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent20resetPageScaleFactorEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorEmulationAgent"*
  %5 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false) #13, !alias.scope !11
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %4) #13
  %6 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8, !alias.scope !11
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds i32, i32* %3, i64 14
  %11 = bitcast i32* %10 to %"class.blink::WebLocalFrameImpl"**
  %12 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %11, align 8, !noalias !11
  %13 = icmp eq %"class.blink::WebLocalFrameImpl"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %12) #13
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi %"class.blink::WebViewImpl"* [ %15, %14 ], [ null, %9 ]
  tail call void @_ZN5blink11WebViewImpl26ResetScaleStateImmediatelyEv(%"class.blink::WebViewImpl"* %17) #13
  br label %18

18:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent18setPageScaleFactorEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %5 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::WebLocalFrameImpl"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %10) #13
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::WebViewImpl"* [ %13, %12 ], [ null, %8 ]
  %16 = fptrunc double %2 to float
  tail call void @_ZN5blink11WebViewImpl18SetPageScaleFactorEf(%"class.blink::WebViewImpl"* %15, float %16) #13
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

declare void @_ZN5blink11WebViewImpl18SetPageScaleFactorEf(%"class.blink::WebViewImpl"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent18setPageScaleFactorEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  %6 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false) #13, !alias.scope !14
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !alias.scope !14
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %20

10:                                               ; preds = %3
  %11 = getelementptr inbounds i32, i32* %4, i64 14
  %12 = bitcast i32* %11 to %"class.blink::WebLocalFrameImpl"**
  %13 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %12, align 8, !noalias !14
  %14 = icmp eq %"class.blink::WebLocalFrameImpl"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %13) #13
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi %"class.blink::WebViewImpl"* [ %16, %15 ], [ null, %10 ]
  %19 = fptrunc double %2 to float
  tail call void @_ZN5blink11WebViewImpl18SetPageScaleFactorEf(%"class.blink::WebViewImpl"* %18, float %19) #13
  br label %20

20:                                               ; preds = %3, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent26setScriptExecutionDisabledEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent19setScrollbarsHiddenEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent19setScrollbarsHiddenEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent25setDocumentCookieDisabledEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #13
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #13
  %29 = bitcast %"class.WTF::StringTypeAdapter.2882"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2882"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #13
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %47, i8* %50) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %59
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #13
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #13
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #13
  %90 = bitcast %"class.WTF::StringTypeAdapter.2882"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #13
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2882"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #13
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %108, i16* %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #13
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !4

127:                                              ; preds = %120
  call void @llvm.trap() #13
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #3

declare void @_ZN5blink16DevToolsEmulator29SetTouchEventEmulationEnabledEbi(%"class.blink::DevToolsEmulator"*, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent24setTouchEmulationEnabledEbN5crdtp6detail10ValueMaybeIiEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %6, i1 zeroext %2, %"class.crdtp::detail::ValueMaybe.2548"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::WebVector.495", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %8) #13
  br i1 %9, label %71, label %10

10:                                               ; preds = %2
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %13) #13
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::InspectorAgentState::SimpleField.269"* %0 to void (%"class.blink::InspectorAgentState::SimpleField.269"*)***
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField.269"*)**, void (%"class.blink::InspectorAgentState::SimpleField.269"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.269"*)*, void (%"class.blink::InspectorAgentState::SimpleField.269"*)** %17, i64 2
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField.269"*)*, void (%"class.blink::InspectorAgentState::SimpleField.269"*)** %18, align 8
  tail call void %19(%"class.blink::InspectorAgentState::SimpleField.269"* %0) #13
  br label %71

20:                                               ; preds = %10
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #13
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %28
  tail call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %38, %23, %20
  %41 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %42 = bitcast %"class.WTF::String"* %4 to i64*
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %41, i64* %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #13
  br label %58

58:                                               ; preds = %40, %54, %57
  %59 = bitcast %"class.blink::WebVector.495"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #13
  %60 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::WebVector.495"* nonnull %3) #13
  %61 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 2
  %62 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %62, %"class.WTF::String"* dereferenceable(8) %63, %"class.blink::WebVector.495"* nonnull %3) #13
  %64 = load i8*, i8** %60, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 1
  %68 = ptrtoint i8* %64 to i64
  %69 = bitcast i8** %67 to i64*
  store i64 %68, i64* %69, align 8
  call void @_ZdlPv(i8* nonnull %64) #15
  br label %70

70:                                               ; preds = %58, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #13
  br label %71

71:                                               ; preds = %2, %70, %15
  ret void
}

declare void @_ZN5blink8Settings20SetMediaTypeOverrideERKN3WTF6StringE(%"class.blink::Settings"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink4Page23SetMediaFeatureOverrideERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::Page"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend.2696", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.274"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.274"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.274"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.274"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.274"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend.2696"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %43

34:                                               ; preds = %118, %128, %125
  %35 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.274"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.274"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"* nonnull %37, i32 %40) #13
  %41 = bitcast %"class.WTF::HashMap.270"* %4 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %42

42:                                               ; preds = %36, %39
  ret void

43:                                               ; preds = %26, %128
  %44 = phi %"struct.WTF::KeyValuePair.274"* [ %24, %26 ], [ %122, %128 ]
  %45 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #13
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !4

63:                                               ; preds = %54
  call void @llvm.trap() #13
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %43, %49, %64
  %67 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %47)
  %68 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %31, align 8
  %69 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 1
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %32, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %3)
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %45, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.495"* null) #13
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #13
  br label %86

86:                                               ; preds = %66, %82, %85
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #13
  br label %102

102:                                              ; preds = %101, %98, %86
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %44, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair.274"* %119, %13
  br i1 %120, label %34, label %121

121:                                              ; preds = %118, %125
  %122 = phi %"struct.WTF::KeyValuePair.274"* [ %126, %125 ], [ %119, %118 ]
  %123 = bitcast %"struct.WTF::KeyValuePair.274"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  switch i64 %124, label %128 [
    i64 -1, label %125
    i64 0, label %125
  ]

125:                                              ; preds = %121, %121
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %122, i64 1
  %127 = icmp eq %"struct.WTF::KeyValuePair.274"* %126, %13
  br i1 %127, label %34, label %121

128:                                              ; preds = %121
  %129 = icmp eq %"struct.WTF::KeyValuePair.274"* %122, %13
  br i1 %129, label %34, label %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WebVector.495", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.2696", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %10) #13
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %167

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %14, i64 0, i32 0
  %16 = tail call { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.271"* %15, %"class.WTF::String"* dereferenceable(8) %1) #13
  %17 = extractvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.274"* %17, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %17, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %29 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %28) #13
  br i1 %29, label %167, label %30

30:                                               ; preds = %13, %25
  %31 = tail call { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.271"* %15, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #13
  %32 = extractvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %31, 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %76

35:                                               ; preds = %30
  %36 = extractvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %31, 0
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %36, i64 0, i32 1
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #13
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %45
  tail call void @llvm.trap() #13
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %40, %35
  %58 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %59 = bitcast %"class.WTF::String"* %37 to i64*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %30, %57, %72, %75
  %77 = bitcast %"class.blink::WebVector.495"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %4, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WebVector.495"* nonnull %4) #13
  %80 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %81 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %80, align 8
  %82 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  %83 = bitcast %"class.WTF::StringAppend.2696"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #13
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !4

102:                                              ; preds = %93
  call void @llvm.trap() #13
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %76, %88, %103
  %106 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %84, %"class.WTF::StringImpl"* %86)
  %107 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %6, i64 0, i32 0, i32 0, i32 0
  %108 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %6, i64 0, i32 1, i32 0, i32 0
  %110 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 1
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %109, align 8
  %111 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %6)
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %112, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %81, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::WebVector.495"* nonnull %4) #13
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #13
  br label %128

128:                                              ; preds = %105, %124, %127
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #13
  br label %144

144:                                              ; preds = %143, %140, %128
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #13
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  %161 = load i8*, i8** %78, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = ptrtoint i8* %161 to i64
  %165 = bitcast i8** %79 to i64*
  store i64 %164, i64* %165, align 8
  call void @_ZdlPv(i8* nonnull %161) #15
  br label %166

166:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  br label %167

167:                                              ; preds = %166, %25, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture, %"class.crdtp::detail::PtrMaybe.2573"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent16setEmulatedMediaEN5crdtp6detail10ValueMaybeIN3WTF6StringEEENS2_8PtrMaybeINSt3__16vectorINS8_10unique_ptrINS_8protocol9Emulation12MediaFeatureENS8_14default_deleteISD_EEEENS8_9allocatorISG_EEEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %6, %"class.crdtp::detail::ValueMaybe"* %2, %"class.crdtp::detail::PtrMaybe.2573"* %3)
  ret void
}

declare void @_ZN5blink4Page19SetVisionDeficiencyENS_16VisionDeficiencyE(%"class.blink::Page"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent27setEmulatedVisionDeficiencyERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

declare %"class.blink::scheduler::ThreadCPUThrottler"* @_ZN5blink9scheduler18ThreadCPUThrottler11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN5blink9scheduler18ThreadCPUThrottler17SetThrottlingRateEd(%"class.blink::scheduler::ThreadCPUThrottler"*, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent20setCPUThrottlingRateEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  %6 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false) #13, !alias.scope !17
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !alias.scope !17
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = tail call %"class.blink::scheduler::ThreadCPUThrottler"* @_ZN5blink9scheduler18ThreadCPUThrottler11GetInstanceEv() #13
  tail call void @_ZN5blink9scheduler18ThreadCPUThrottler17SetThrottlingRateEd(%"class.blink::scheduler::ThreadCPUThrottler"* %11, double %2) #13
  br label %12

12:                                               ; preds = %3, %10
  ret void
}

declare void @_ZN5blink15FocusController24SetFocusEmulationEnabledEb(%"class.blink::FocusController"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent24setFocusEmulationEnabledEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, i1 zeroext %2)
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.293"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 1
  %3 = load double, double* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 2
  %5 = load double, double* %4, align 8
  %6 = fcmp oeq double %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store double %3, double* %4, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.495"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.268"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i32 %3, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.495"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent11InnerEnableEv(%"class.blink::InspectorEmulationAgent"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %6, align 8
  tail call void @_ZN5blink13CoreProbeSink26AddInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"* %7, %"class.blink::InspectorEmulationAgent"* %0) #13
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare i64 @_ZN4base4Time11FromDoubleTEd(double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent22ApplyVirtualTimePolicyERKNS0_24PendingVirtualTimePolicyE(%"class.blink::InspectorEmulationAgent"*, %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.600", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.blink::WeakPersistent.2592", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %7, align 8
  %9 = tail call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %8) #13
  %10 = bitcast %"class.blink::WebView"* %9 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %11 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %11, i64 53
  %13 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %12, align 8
  %14 = tail call %"class.blink::PageScheduler"* %13(%"class.blink::WebView"* %9) #13
  %15 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %"class.blink::PageScheduler"* %14 to void (%"class.blink::PageScheduler"*, i32)***
  %18 = load void (%"class.blink::PageScheduler"*, i32)**, void (%"class.blink::PageScheduler"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %18, i64 18
  %20 = load void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %19, align 8
  tail call void %20(%"class.blink::PageScheduler"* %14, i32 %16) #13
  %21 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %7, align 8
  %22 = tail call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %21) #13
  %23 = bitcast %"class.blink::WebView"* %22 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %24 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %24, i64 53
  %26 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %25, align 8
  %27 = tail call %"class.blink::PageScheduler"* %26(%"class.blink::WebView"* %22) #13
  %28 = bitcast %"class.blink::PageScheduler"* %27 to i64 (%"class.blink::PageScheduler"*)***
  %29 = load i64 (%"class.blink::PageScheduler"*)**, i64 (%"class.blink::PageScheduler"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.blink::PageScheduler"*)*, i64 (%"class.blink::PageScheduler"*)** %29, i64 13
  %31 = load i64 (%"class.blink::PageScheduler"*)*, i64 (%"class.blink::PageScheduler"*)** %30, align 8
  %32 = tail call i64 %31(%"class.blink::PageScheduler"* %27) #13
  %33 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %158, label %37

37:                                               ; preds = %2
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %48, label %41, !prof !2

41:                                               ; preds = %37
  %42 = ptrtoint %"class.blink::InspectorEmulationAgent"* %0 to i64
  %43 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRKdEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 %42, i32 2048, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), double* dereferenceable(8) %43)
  %45 = load i8, i8* %34, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %48, !prof !4

47:                                               ; preds = %41
  tail call void @llvm.trap() #13
  unreachable

48:                                               ; preds = %37, %41
  %49 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = load double, double* %49, align 8
  %51 = fmul double %50, 1.000000e+03
  %52 = fcmp ult double %51, 0xC3E0000000000000
  %53 = fcmp ugt double %51, 0x43DFFFFFFFFFFFFF
  %54 = fcmp ogt double %51, 0xC3E0000000000000
  %55 = select i1 %54, double %51, double 0xC3E0000000000000
  %56 = fptosi double %55 to i64
  %57 = select i1 %52, i64 0, i64 9223372036854775807
  %58 = select i1 %53, i64 %57, i64 %56
  %59 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %7, align 8
  %60 = tail call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %59) #13
  %61 = bitcast %"class.blink::WebView"* %60 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %62 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %62, i64 53
  %64 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %63, align 8
  %65 = tail call %"class.blink::PageScheduler"* %64(%"class.blink::WebView"* %60) #13
  %66 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #13
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::InspectorEmulationAgent"*)* @_ZN5blink23InspectorEmulationAgent24VirtualTimeBudgetExpiredEv to i64), i64 0>, <2 x i64>* %4, align 16
  %67 = bitcast %"class.blink::WeakPersistent.2592"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #13
  %68 = getelementptr inbounds %"class.blink::WeakPersistent.2592", %"class.blink::WeakPersistent.2592"* %6, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::WeakPersistent.2592", %"class.blink::WeakPersistent.2592"* %6, i64 0, i32 0, i32 0
  store %"class.blink::InspectorEmulationAgent"* %0, %"class.blink::InspectorEmulationAgent"** %69, align 8, !alias.scope !20
  %70 = getelementptr inbounds %"class.blink::WeakPersistent.2592", %"class.blink::WeakPersistent.2592"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %70, align 8, !alias.scope !20
  %71 = ptrtoint %"class.blink::InspectorEmulationAgent"* %0 to i64
  switch i64 %71, label %72 [
    i64 0, label %98
    i64 -1, label %98
  ]

72:                                               ; preds = %48
  %73 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !20
  %74 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %73, i64 0, i32 1
  %75 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %74) #13, !noalias !20
  %76 = icmp eq i8* %75, null
  br i1 %76, label %77, label %79, !prof !4

77:                                               ; preds = %72
  %78 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %74, i8* %78) #13
  br label %79

79:                                               ; preds = %77, %72
  %80 = phi i8* [ %78, %77 ], [ %75, %72 ]
  %81 = bitcast i8* %80 to %"class.blink::ThreadState"**
  %82 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %81, align 8, !noalias !20
  %83 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %83, align 8, !noalias !20
  %85 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %85, align 8, !noalias !20
  %87 = icmp eq %"class.blink::PersistentNode"* %86, null
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %84, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %89) #13
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %85, align 8
  br label %91

91:                                               ; preds = %88, %79
  %92 = phi %"class.blink::PersistentNode"* [ %90, %88 ], [ %86, %79 ]
  %93 = bitcast %"class.blink::PersistentNode"* %92 to i64*
  %94 = load i64, i64* %93, align 8, !noalias !20
  %95 = bitcast %"class.blink::PersistentRegion"* %84 to i64*
  store i64 %94, i64* %95, align 8, !noalias !20
  %96 = bitcast %"class.blink::PersistentNode"* %92 to %"class.blink::PersistentBase.2593"**
  store %"class.blink::PersistentBase.2593"* %68, %"class.blink::PersistentBase.2593"** %96, align 8, !noalias !20
  %97 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %92, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %97, align 8
  store %"class.blink::PersistentNode"* %92, %"class.blink::PersistentNode"** %70, align 8, !alias.scope !20
  br label %98

98:                                               ; preds = %48, %48, %91
  %99 = call i8* @_Znwm(i64 64) #15, !noalias !23
  %100 = bitcast i8* %99 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %100, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %5, %"class.blink::WeakPersistent.2592"* nonnull dereferenceable(16) %6) #13, !noalias !23
  %101 = bitcast %"class.base::OnceCallback.600"* %3 to i8**
  store i8* %99, i8** %101, align 8, !alias.scope !23
  %102 = bitcast %"class.blink::PageScheduler"* %65 to void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)***
  %103 = load void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)**, void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)*, void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)** %103, i64 19
  %105 = load void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)*, void (%"class.blink::PageScheduler"*, i64, %"class.base::OnceCallback.600"*)** %104, align 8
  call void %105(%"class.blink::PageScheduler"* %65, i64 %58, %"class.base::OnceCallback.600"* nonnull %3) #13
  %106 = getelementptr inbounds %"class.base::OnceCallback.600", %"class.base::OnceCallback.600"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #13
  %107 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8
  %108 = icmp eq %"class.blink::PersistentNode"* %107, null
  br i1 %108, label %128, label %109

109:                                              ; preds = %98
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #13
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !4

114:                                              ; preds = %109
  %115 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #13
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %120, align 8
  %122 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0, i32 0
  %124 = bitcast %"class.blink::PersistentRegion"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.blink::PersistentNode"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %122, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %127, align 8
  store %"class.blink::PersistentNode"* %122, %"class.blink::PersistentNode"** %123, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %70, align 8
  br label %128

128:                                              ; preds = %98, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #13
  %129 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0
  %130 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %131, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %137, label %152

137:                                              ; preds = %152, %128
  %138 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %158, label %141

141:                                              ; preds = %137
  %142 = load i32, i32* %132, align 4
  %143 = icmp eq i32 %142, 0
  %144 = bitcast %"class.WTF::Vector.237"* %129 to i8**
  br i1 %143, label %149, label %145

145:                                              ; preds = %141
  %146 = load i8*, i8** %144, align 8
  %147 = zext i32 %142 to i64
  %148 = shl nuw nsw i64 %147, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %146, i64 %148) #13
  store i32 0, i32* %132, align 4
  br label %149

149:                                              ; preds = %145, %141
  %150 = load i8*, i8** %144, align 8
  %151 = bitcast %"class.WTF::Vector.237"* %129 to i64*
  store atomic i64 0, i64* %151 monotonic, align 8
  store i32 0, i32* %138, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %150) #13
  br label %158

152:                                              ; preds = %128, %152
  %153 = phi %"class.blink::Member.240"* [ %156, %152 ], [ %131, %128 ]
  %154 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.blink::DocumentLoader"*, %"class.blink::DocumentLoader"** %154, align 8
  call void @_ZN5blink14DocumentLoader16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::DocumentLoader"* %155, i8 zeroext 2) #13
  %156 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %153, i64 1
  %157 = icmp eq %"class.blink::Member.240"* %156, %135
  br i1 %157, label %137, label %152

158:                                              ; preds = %2, %149, %137
  %159 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %160 = load i8, i8* %159, align 4, !range !3
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %158
  %163 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %7, align 8
  %164 = call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %163) #13
  %165 = bitcast %"class.blink::WebView"* %164 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %166 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %166, i64 53
  %168 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %167, align 8
  %169 = call %"class.blink::PageScheduler"* %168(%"class.blink::WebView"* %164) #13
  %170 = load i8, i8* %159, align 4, !range !3
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %173, !prof !4

172:                                              ; preds = %162
  call void @llvm.trap() #13
  unreachable

173:                                              ; preds = %162
  %174 = getelementptr inbounds %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy", %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = bitcast %"class.blink::PageScheduler"* %169 to void (%"class.blink::PageScheduler"*, i32)***
  %177 = load void (%"class.blink::PageScheduler"*, i32)**, void (%"class.blink::PageScheduler"*, i32)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %177, i64 20
  %179 = load void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %178, align 8
  call void %179(%"class.blink::PageScheduler"* %169, i32 %175) #13
  br label %180

180:                                              ; preds = %158, %173
  ret void
}

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2580"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2585"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2580"* nocapture readonly, double* nocapture) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %10 = bitcast i32* %9 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent20setVirtualTimePolicyERKN3WTF6StringEN5crdtp6detail10ValueMaybeIdEENS7_IiEENS7_IbEES8_Pd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %10, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe.2580"* %3, %"class.crdtp::detail::ValueMaybe.2548"* %4, %"class.crdtp::detail::ValueMaybe.2585"* %5, %"class.crdtp::detail::ValueMaybe.2580"* %6, double* %7)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRKdEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #2 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #13
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast double* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #13
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #13
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #13
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #13
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #13
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent24VirtualTimeBudgetExpiredEv(%"class.blink::InspectorEmulationAgent"*) #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7, !prof !2

7:                                                ; preds = %1
  %8 = ptrtoint %"class.blink::InspectorEmulationAgent"* %0 to i64
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 107, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 %8, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2048) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %1, %7
  %15 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %15, align 8
  %17 = call %"class.blink::WebView"* @_ZNK5blink17WebLocalFrameImpl4ViewEv(%"class.blink::WebLocalFrameImpl"* %16) #13
  %18 = icmp eq %"class.blink::WebView"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::WebView"* %17 to %"class.blink::PageScheduler"* (%"class.blink::WebView"*)***
  %21 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)**, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %21, i64 53
  %23 = load %"class.blink::PageScheduler"* (%"class.blink::WebView"*)*, %"class.blink::PageScheduler"* (%"class.blink::WebView"*)** %22, align 8
  %24 = call %"class.blink::PageScheduler"* %23(%"class.blink::WebView"* nonnull %17) #13
  %25 = bitcast %"class.blink::PageScheduler"* %24 to void (%"class.blink::PageScheduler"*, i32)***
  %26 = load void (%"class.blink::PageScheduler"*, i32)**, void (%"class.blink::PageScheduler"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %26, i64 18
  %28 = load void (%"class.blink::PageScheduler"*, i32)*, void (%"class.blink::PageScheduler"*, i32)** %27, align 8
  call void %28(%"class.blink::PageScheduler"* %24, i32 1) #13
  %29 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26
  %30 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0), i64 %31) #13
  call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %29, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %19, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %49 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %49, align 8
  %51 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  call void @_ZN5blink8protocol9Emulation8Frontend24virtualTimeBudgetExpiredEv(%"class.blink::protocol::Emulation::Frontend"* nonnull %50) #13
  br label %53

53:                                               ; preds = %52, %48, %14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN5blink14DocumentLoader16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::DocumentLoader"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent19FrameStartedLoadingEPNS_10LocalFrameE(%"class.blink::InspectorEmulationAgent"*, %"class.blink::LocalFrame"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.495", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 2
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 1
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %8 to void (%"class.blink::InspectorAgentState::SimpleField.267"*)***
  %18 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)**, void (%"class.blink::InspectorAgentState::SimpleField.267"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %18, i64 2
  %20 = load void (%"class.blink::InspectorAgentState::SimpleField.267"*)*, void (%"class.blink::InspectorAgentState::SimpleField.267"*)** %19, align 8
  tail call void %20(%"class.blink::InspectorAgentState::SimpleField.267"* %8) #13
  br label %34

21:                                               ; preds = %12
  store i8 0, i8* %9, align 1
  %22 = bitcast %"class.blink::WebVector.495"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.495"* nonnull %3) #13
  %24 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 0, i32 2
  %25 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 28, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %25, %"class.WTF::String"* dereferenceable(8) %26, %"class.blink::WebVector.495"* nonnull %3) #13
  %27 = load i8*, i8** %23, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %3, i64 0, i32 0, i32 0, i32 1
  %31 = ptrtoint i8* %27 to i64
  %32 = bitcast i8** %30 to i64*
  store i64 %31, i64* %32, align 8
  call void @_ZdlPv(i8* nonnull %27) #15
  br label %33

33:                                               ; preds = %29, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  br label %34

34:                                               ; preds = %7, %16, %33
  %35 = load i8, i8* %4, align 8, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %34
  call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink23InspectorEmulationAgent22ApplyVirtualTimePolicyERKNS0_24PendingVirtualTimePolicyE(%"class.blink::InspectorEmulationAgent"* %0, %"struct.blink::InspectorEmulationAgent::PendingVirtualTimePolicy"* dereferenceable(32) %39)
  store i8 0, i8* %4, align 8
  br label %40

40:                                               ; preds = %2, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23InspectorEmulationAgent25OverrideAcceptImageHeaderEPKN3WTF7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.WTF::HashSet.1021"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringAppend.2594", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = tail call i8* @_ZN5blink17ImageAcceptHeaderEv() #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call i64 @strlen(i8* nonnull %8) #14
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %8, i64 %13) #13
  %14 = getelementptr inbounds %"class.WTF::HashSet.1021", %"class.WTF::HashSet.1021"* %0, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::HashSet.1021", %"class.WTF::HashSet.1021"* %0, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::String"*, %"class.WTF::String"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::HashSet.1021", %"class.WTF::HashSet.1021"* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %21
  br i1 %16, label %50, label %23

23:                                               ; preds = %12
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %29
  %26 = phi %"class.WTF::String"* [ %30, %29 ], [ %18, %23 ]
  %27 = bitcast %"class.WTF::String"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  switch i64 %28, label %32 [
    i64 -1, label %29
    i64 0, label %29
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 1
  %31 = icmp eq %"class.WTF::String"* %30, %22
  br i1 %31, label %50, label %25

32:                                               ; preds = %25, %23
  %33 = phi %"class.WTF::String"* [ %18, %23 ], [ %26, %25 ]
  %34 = icmp eq %"class.WTF::String"* %33, %22
  br i1 %34, label %50, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.WTF::StringView"* %3 to i8*
  %37 = bitcast %"class.WTF::StringAppend.2594"* %4 to i8*
  %38 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %4, i64 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  %43 = bitcast %"class.WTF::StringView"* %3 to i64*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %45 = bitcast %"class.WTF::StringView"* %5 to i8*
  %46 = bitcast %"class.WTF::StringView"* %5 to i64*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %49 = bitcast %"class.WTF::String"* %2 to i64*
  br label %95

50:                                               ; preds = %29, %238, %248, %245, %12, %32
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %93, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 acquire, align 4
  %56 = and i32 %55, 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %53
  %59 = load atomic i32, i32* %54 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %76

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #13
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !4

71:                                               ; preds = %62
  call void @llvm.trap() #13
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %76

74:                                               ; preds = %53
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %51) #13
  br label %76

76:                                               ; preds = %58, %72, %74
  %77 = phi %"class.WTF::StringImpl"* [ %51, %72 ], [ %51, %58 ], [ %75, %74 ]
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #13
  br label %93

93:                                               ; preds = %50, %76, %89, %92
  %94 = phi %"class.WTF::StringImpl"* [ %77, %76 ], [ %77, %89 ], [ %77, %92 ], [ null, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret %"class.WTF::StringImpl"* %94

95:                                               ; preds = %35, %248
  %96 = phi %"class.WTF::String"* [ %33, %35 ], [ %242, %248 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %117, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %118

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #13
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !4

114:                                              ; preds = %105
  call void @llvm.trap() #13
  unreachable

115:                                              ; preds = %105
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %118

117:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  br label %161

118:                                              ; preds = %100, %115
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %134

124:                                              ; preds = %118
  %125 = zext i32 %123 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #13
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !4

131:                                              ; preds = %124
  call void @llvm.trap() #13
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %122, align 4
  br label %134

134:                                              ; preds = %118, %132
  %135 = phi i32 [ %133, %132 ], [ %123, %118 ]
  %136 = load atomic i32, i32* %101 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  br i1 %138, label %140, label %150

140:                                              ; preds = %134
  %141 = zext i32 %135 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #13
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !4

147:                                              ; preds = %140
  call void @llvm.trap() #13
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %150

150:                                              ; preds = %148, %134
  %151 = phi i32 [ %149, %148 ], [ %135, %134 ]
  %152 = load atomic i32, i32* %101 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = add i32 %151, -1
  store i32 %156, i32* %139, align 4
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i32 [ %156, %155 ], [ %151, %150 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %161

161:                                              ; preds = %117, %157, %160
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %38, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %39, align 8
  %162 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2594"* nonnull %4)
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  store i8* null, i8** %41, align 8
  %165 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %165, i64* %43, align 8
  br label %171

166:                                              ; preds = %161
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %40, align 8
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 1
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %42, align 8
  %170 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %171

171:                                              ; preds = %164, %166
  %172 = phi i64 [ %170, %166 ], [ %165, %164 ]
  %173 = phi i32 [ %168, %166 ], [ 0, %164 ]
  store i32 %173, i32* %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  store i64 %172, i64* %46, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %47, align 8
  store i32 0, i32* %48, align 8
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %194, label %176

176:                                              ; preds = %171
  %177 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"* nonnull %174, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  %178 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %178, i64* %49, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #13
  br label %194

194:                                              ; preds = %171, %176, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  br i1 %163, label %208, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #13
  br label %208

208:                                              ; preds = %194, %204, %207
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #13
  br label %224

224:                                              ; preds = %208, %220, %223
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br i1 %99, label %238, label %225

225:                                              ; preds = %224
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %238

238:                                              ; preds = %224, %234, %237
  %239 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %240 = icmp eq %"class.WTF::String"* %239, %22
  br i1 %240, label %50, label %241

241:                                              ; preds = %238, %245
  %242 = phi %"class.WTF::String"* [ %246, %245 ], [ %239, %238 ]
  %243 = bitcast %"class.WTF::String"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  switch i64 %244, label %248 [
    i64 -1, label %245
    i64 0, label %245
  ]

245:                                              ; preds = %241, %241
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %242, i64 1
  %247 = icmp eq %"class.WTF::String"* %246, %22
  br i1 %247, label %50, label %241

248:                                              ; preds = %241
  %249 = icmp eq %"class.WTF::String"* %242, %22
  br i1 %249, label %50, label %95
}

declare i8* @_ZN5blink17ImageAcceptHeaderEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.2594"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2594"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.2882"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter.2882"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !4

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2594"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter.2882"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter.2882"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !4

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent14PrepareRequestEPNS_14DocumentLoaderERNS_15ResourceRequestERNS_21ResourceLoaderOptionsENS_12ResourceTypeE(%"class.blink::InspectorEmulationAgent"*, %"class.blink::DocumentLoader"* nocapture readnone, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* nocapture dereferenceable(112), i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::Vector.335", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 2
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %130, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %130, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %22 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15) #13
  %23 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19ResourceRequestHead15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* %21, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #13
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi i1 [ %30, %27 ], [ true, %20 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %48, %45, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br i1 %32, label %50, label %130

50:                                               ; preds = %49
  %51 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15) #13
  %52 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink13network_utils28GenerateAcceptLanguageHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %12) #13
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %78, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 acquire, align 4
  %58 = and i32 %57, 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %76, label %60

60:                                               ; preds = %55
  %61 = load atomic i32, i32* %56 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i33
  %68 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #13
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !4

73:                                               ; preds = %64
  call void @llvm.trap() #13
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4
  br label %78

76:                                               ; preds = %55
  %77 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %78

78:                                               ; preds = %50, %60, %74, %76
  %79 = phi %"class.WTF::StringImpl"* [ %77, %76 ], [ %53, %60 ], [ %53, %74 ], [ null, %50 ]
  %80 = ptrtoint %"class.WTF::StringImpl"* %79 to i64
  %81 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %80, i64* %81, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %21, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #13
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #13
  br label %98

98:                                               ; preds = %78, %94, %97
  br i1 %54, label %112, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %112

112:                                              ; preds = %98, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  %113 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #13
  br label %129

129:                                              ; preds = %112, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %130

130:                                              ; preds = %5, %16, %129, %49
  %131 = icmp eq i8 %4, 1
  br i1 %131, label %132, label %267

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31
  %134 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 3, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %267, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %3, i64 0, i32 12
  %139 = getelementptr inbounds %class.scoped_refptr.2645, %class.scoped_refptr.2645* %138, i64 0, i32 0
  %140 = load %"class.base::RefCountedData.2646"*, %"class.base::RefCountedData.2646"** %139, align 8
  %141 = icmp eq %"class.base::RefCountedData.2646"* %140, null
  br i1 %141, label %142, label %149

142:                                              ; preds = %137
  %143 = call i8* @_Znwm(i64 32) #15
  %144 = bitcast i8* %143 to i32*
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds i8, i8* %143, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 20, i1 false) #13
  %146 = atomicrmw add i32* %144, i32 1 monotonic
  %147 = ptrtoint i8* %143 to i64
  %148 = bitcast %class.scoped_refptr.2645* %138 to i64*
  store i64 %147, i64* %148, align 8
  br label %149

149:                                              ; preds = %137, %142
  %150 = bitcast %"class.WTF::Vector.335"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #13
  call void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.335"* nonnull sret %9, %"class.blink::InspectorAgentState::MapField.294"* %133)
  %151 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %9, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  %153 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %9, i64 0, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 %155
  %157 = icmp eq i32 %154, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %149
  %159 = bitcast %"class.WTF::String"* %10 to i8*
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  br label %223

161:                                              ; preds = %264
  %162 = load %"class.WTF::String"*, %"class.WTF::String"** %151, align 8
  br label %163

163:                                              ; preds = %161, %149
  %164 = phi %"class.WTF::String"* [ %162, %161 ], [ %152, %149 ]
  %165 = icmp eq %"class.WTF::String"* %164, null
  br i1 %165, label %199, label %166, !prof !2

166:                                              ; preds = %163
  %167 = bitcast %"class.WTF::String"* %164 to i8*
  %168 = load i32, i32* %153, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %197, label %170, !prof !4

170:                                              ; preds = %166
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 %171
  br label %173

173:                                              ; preds = %191, %170
  %174 = phi %"class.WTF::String"* [ %192, %191 ], [ %164, %170 ]
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %191

191:                                              ; preds = %190, %187, %173
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %174, i64 1
  %193 = icmp eq %"class.WTF::String"* %192, %172
  br i1 %193, label %194, label %173

194:                                              ; preds = %191
  store i32 0, i32* %153, align 4
  %195 = bitcast %"class.WTF::Vector.335"* %9 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %194, %166
  %198 = phi i8* [ %196, %194 ], [ %167, %166 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %198) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %151, align 8
  br label %199

199:                                              ; preds = %163, %197
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #13
  %200 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %201 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #13
  %202 = load %"class.base::RefCountedData.2646"*, %"class.base::RefCountedData.2646"** %139, align 8
  %203 = getelementptr inbounds %"class.base::RefCountedData.2646", %"class.base::RefCountedData.2646"* %202, i64 0, i32 2
  %204 = call %"class.WTF::StringImpl"* @_ZN5blink23InspectorEmulationAgent25OverrideAcceptImageHeaderEPKN3WTF7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.WTF::HashSet.1021"* %203)
  %205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %205, align 8
  %206 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names7kAcceptE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %200, %"class.WTF::AtomicString"* dereferenceable(8) %206, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #13
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %199
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #13
  br label %222

222:                                              ; preds = %199, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #13
  call void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"* %200, i32 2) #13
  br label %267

223:                                              ; preds = %158, %264
  %224 = phi %"class.WTF::String"* [ %152, %158 ], [ %265, %264 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %160, align 8
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %160, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %245, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #13
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !4

242:                                              ; preds = %233
  call void @llvm.trap() #13
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4
  br label %245

245:                                              ; preds = %223, %228, %243
  %246 = load %"class.base::RefCountedData.2646"*, %"class.base::RefCountedData.2646"** %139, align 8
  %247 = getelementptr inbounds %"class.base::RefCountedData.2646", %"class.base::RefCountedData.2646"* %246, i64 0, i32 2, i32 0
  %248 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1022"* %247, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %10) #13
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #13
  br label %264

264:                                              ; preds = %245, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #13
  %265 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %224, i64 1
  %266 = icmp eq %"class.WTF::String"* %265, %156
  br i1 %266, label %161, label %223

267:                                              ; preds = %130, %132, %222
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19ResourceRequestHead15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13network_utils28GenerateAcceptLanguageHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.335"* noalias sret, %"class.blink::InspectorAgentState::MapField.294"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.335"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %1, i64 0, i32 3, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %1, i64 0, i32 3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.299"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.299"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.299"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.299"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.299"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.299"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !4

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #13
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !4

55:                                               ; preds = %46
  tail call void @llvm.trap() #13
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.335"* %0, %"class.WTF::String"* dereferenceable(8) %62) #13
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.299"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.299"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.299"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.299"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.299"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

declare void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 32, i1 false)
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  %5 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 16
  tail call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %9, %"class.WTF::String"* dereferenceable(8) %2)
  %10 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %10, align 8
  %12 = icmp eq %"class.blink::WebLocalFrameImpl"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %11) #13
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi %"class.blink::WebViewImpl"* [ %14, %13 ], [ null, %8 ]
  %17 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Page"*, %"class.blink::Page"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %18, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Settings"*, %"class.blink::Settings"** %19, align 8
  tail call void @_ZN5blink8Settings28SetNavigatorPlatformOverrideERKN3WTF6StringE(%"class.blink::Settings"* %20, %"class.WTF::String"* dereferenceable(8) %2) #13
  br label %21

21:                                               ; preds = %15, %3
  ret void
}

declare void @_ZN5blink8Settings28SetNavigatorPlatformOverrideERKN3WTF6StringE(%"class.blink::Settings"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  %6 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false) #13, !alias.scope !30
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !alias.scope !30
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %25

10:                                               ; preds = %3
  %11 = getelementptr inbounds i32, i32* %4, i64 128
  %12 = bitcast i32* %11 to %"class.blink::InspectorAgentState::SimpleField.269"*
  tail call void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE3SetERKS3_(%"class.blink::InspectorAgentState::SimpleField.269"* %12, %"class.WTF::String"* dereferenceable(8) %2) #13
  %13 = getelementptr inbounds i32, i32* %4, i64 14
  %14 = bitcast i32* %13 to %"class.blink::WebLocalFrameImpl"**
  %15 = load %"class.blink::WebLocalFrameImpl"*, %"class.blink::WebLocalFrameImpl"** %14, align 8, !noalias !30
  %16 = icmp eq %"class.blink::WebLocalFrameImpl"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = tail call %"class.blink::WebViewImpl"* @_ZNK5blink17WebLocalFrameImpl8ViewImplEv(%"class.blink::WebLocalFrameImpl"* nonnull %15) #13
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi %"class.blink::WebViewImpl"* [ %18, %17 ], [ null, %10 ]
  %21 = getelementptr inbounds %"class.blink::WebViewImpl", %"class.blink::WebViewImpl"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Page"*, %"class.blink::Page"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %22, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Settings"*, %"class.blink::Settings"** %23, align 8
  tail call void @_ZN5blink8Settings28SetNavigatorPlatformOverrideERKN3WTF6StringE(%"class.blink::Settings"* %24, %"class.WTF::String"* dereferenceable(8) %2) #13
  br label %25

25:                                               ; preds = %3, %19
  ret void
}

declare void @_ZN5blink8protocol9Emulation8Frontend24virtualTimeBudgetExpiredEv(%"class.blink::protocol::Emulation::Frontend"*) local_unnamed_addr #3

declare void @_ZN5blink11WebViewImpl42SetBaseBackgroundColorOverrideForInspectorEN4absl8optionalIjEE(%"class.blink::WebViewImpl"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp eq i64 %9, %15
  %17 = inttoptr i64 %8 to i8*
  %18 = inttoptr i64 %6 to i8*
  br i1 %16, label %19, label %33

19:                                               ; preds = %1
  %20 = icmp eq i8* %17, %18
  br i1 %20, label %37, label %21

21:                                               ; preds = %19
  %22 = inttoptr i64 %14 to i8*
  br label %23

23:                                               ; preds = %21, %29
  %24 = phi i8* [ %31, %29 ], [ %22, %21 ]
  %25 = phi i8* [ %30, %29 ], [ %17, %21 ]
  %26 = load i8, i8* %25, align 1
  %27 = load i8, i8* %24, align 1
  %28 = icmp eq i8 %26, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = getelementptr inbounds i8, i8* %24, i64 1
  %32 = icmp eq i8* %30, %18
  br i1 %32, label %37, label %23

33:                                               ; preds = %23, %1
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %3, i8* %17, i8* %18) #13
  %34 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %35 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %35, %"class.WTF::String"* dereferenceable(8) %36, %"class.blink::WebVector.495"* null) #13
  br label %37

37:                                               ; preds = %29, %19, %33
  ret void
}

declare void @_ZNK5crdtp12Serializable9SerializeEv(%"class.std::__1::vector"* sret, %"class.crdtp::Serializable"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @lroundf(float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::PtrMaybe.2584"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent33setDefaultBackgroundColorOverrideEN5crdtp6detail8PtrMaybeINS_8protocol3DOM4RGBAEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, %"class.crdtp::detail::PtrMaybe.2584"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent24setDeviceMetricsOverrideEiidbN5crdtp6detail10ValueMaybeIdEENS3_IiEES5_S5_S5_NS3_IbEENS2_8PtrMaybeINS_8protocol9Emulation17ScreenOrientationEEENS7_INS8_4Page8ViewportEEENS7_INS9_14DisplayFeatureEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, i32, i32, double, i1 zeroext, %"class.crdtp::detail::ValueMaybe.2580"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2585"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2648"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2658"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2668"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent24setDeviceMetricsOverrideEiidbN5crdtp6detail10ValueMaybeIdEENS3_IiEES5_S5_S5_NS3_IbEENS2_8PtrMaybeINS_8protocol9Emulation17ScreenOrientationEEENS7_INS8_4Page8ViewportEEENS7_INS9_14DisplayFeatureEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly, i32, i32, double, i1 zeroext, %"class.crdtp::detail::ValueMaybe.2580"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2548"* nocapture readnone, %"class.crdtp::detail::ValueMaybe.2585"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2648"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2658"* nocapture readnone, %"class.crdtp::detail::PtrMaybe.2668"* nocapture readnone) unnamed_addr #0 align 2 {
  %16 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %17 = bitcast i32* %16 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %17) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent26clearDeviceMetricsOverrideEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent26clearDeviceMetricsOverrideEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent10AssertPageEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %4) #13
  ret void
}

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %47, align 8
  %49 = icmp eq %"struct.blink::UserAgentBrandVersion"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  %54 = icmp eq %"struct.blink::UserAgentBrandVersion"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"struct.blink::UserAgentBrandVersion"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %"struct.blink::UserAgentBrandVersion"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %71, %66
  %75 = icmp eq %"struct.blink::UserAgentBrandVersion"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"struct.blink::UserAgentBrandVersion"* %48, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

declare void @_ZN5blink17UserAgentMetadata7MarshalERKN4absl8optionalIS0_EE(%"class.absl::optional.974"* sret, %"class.absl::optional.275"* dereferenceable(160)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEES9_S9_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !33
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !33
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !36, !noalias !33
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !36, !noalias !33
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !33
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !33
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !36, !noalias !33
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !36, !noalias !33
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !33
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !33
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !36, !noalias !33
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !36, !noalias !33
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !33
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !33
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !36, !noalias !33
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !36, !noalias !33
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !38

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !33
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !33
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !36, !noalias !33
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !36, !noalias !33
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !40

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !42

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !43
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !43
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !46, !noalias !43
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !46, !noalias !43
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !43
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !43
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !46, !noalias !43
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !46, !noalias !43
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !43
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !43
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !46, !noalias !43
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !46, !noalias !43
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !43
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !43
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !46, !noalias !43
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !46, !noalias !43
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !48

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !43
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !43
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !46, !noalias !43
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !46, !noalias !43
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !49

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #13
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !50

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !51
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !51
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !54, !noalias !51
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !54, !noalias !51
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !51
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !51
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !54, !noalias !51
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !54, !noalias !51
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !51
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !51
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !54, !noalias !51
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !54, !noalias !51
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !51
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !51
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !54, !noalias !51
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !54, !noalias !51
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !56

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !51
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !51
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !54, !noalias !51
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !54, !noalias !51
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !57

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !58

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #16
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #15
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !59
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !59
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !62, !noalias !59
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !62, !noalias !59
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !59
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !59
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !62, !noalias !59
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !62, !noalias !59
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !59
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !59
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !62, !noalias !59
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !62, !noalias !59
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !59
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !59
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !62, !noalias !59
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !62, !noalias !59
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !64

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !59
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !59
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !62, !noalias !59
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !62, !noalias !59
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !65

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !66

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #13
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !67
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !67
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !70, !noalias !67
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !70, !noalias !67
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !67
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !67
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !70, !noalias !67
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !70, !noalias !67
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !67
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !67
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !70, !noalias !67
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !70, !noalias !67
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !67
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !67
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !70, !noalias !67
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !70, !noalias !67
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !72

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !67
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !67
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !70, !noalias !67
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !70, !noalias !67
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !73

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !74

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #15
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent20setUserAgentOverrideERKN3WTF6StringEN5crdtp6detail10ValueMaybeIS2_EES8_NS6_8PtrMaybeINS_8protocol9Emulation17UserAgentMetadataEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.crdtp::detail::ValueMaybe"* %3, %"class.crdtp::detail::ValueMaybe"* %4, %"class.crdtp::detail::PtrMaybe"* %5)
  ret void
}

declare dereferenceable(16) %"class.blink::LocaleController"* @_ZN5blink16LocaleController8instanceEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16LocaleController19has_locale_overrideEv(%"class.blink::LocaleController"*) local_unnamed_addr #3

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink16LocaleController17SetLocaleOverrideERKN3WTF6StringE(%"class.blink::LocaleController"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent17setLocaleOverrideEN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, %"class.crdtp::detail::ValueMaybe"* %2)
  ret void
}

declare %"class.blink::TimeZoneController::TimeZoneOverride"* @_ZN5blink18TimeZoneController19SetTimeZoneOverrideERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink18TimeZoneController19HasTimeZoneOverrideEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent19setTimezoneOverrideERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent21GetDisabledImageTypesEPN3WTF7HashSetINS1_6StringENS1_10StringHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::InspectorEmulationAgent"*, %"class.WTF::HashSet.1021"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.335", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31, i32 3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %103, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 31
  %10 = bitcast %"class.WTF::Vector.335"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.335"* nonnull sret %3, %"class.blink::InspectorAgentState::MapField.294"* %9)
  %11 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::HashSet.1021", %"class.WTF::HashSet.1021"* %1, i64 0, i32 0
  br label %61

22:                                               ; preds = %100
  %23 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  br label %24

24:                                               ; preds = %22, %8
  %25 = phi %"class.WTF::String"* [ %23, %22 ], [ %12, %8 ]
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !2

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %13, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !4

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %13, align 4
  %56 = bitcast %"class.WTF::Vector.335"* %3 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %11, align 8
  br label %60

60:                                               ; preds = %24, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br label %103

61:                                               ; preds = %18, %100
  %62 = phi %"class.WTF::String"* [ %12, %18 ], [ %101, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %20, align 8
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %20, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #13
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %71
  call void @llvm.trap() #13
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %61, %66, %81
  %84 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1022"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %100

100:                                              ; preds = %83, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 1
  %102 = icmp eq %"class.WTF::String"* %101, %16
  br i1 %102, label %22, label %61

103:                                              ; preds = %2, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent14WillCommitLoadEPNS_10LocalFrameEPNS_14DocumentLoaderE(%"class.blink::InspectorEmulationAgent"*, %"class.blink::LocalFrame"* nocapture readnone, %"class.blink::DocumentLoader"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::DocumentLoader"*, align 8
  store %"class.blink::DocumentLoader"* %2, %"class.blink::DocumentLoader"** %6, align 8
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 26, i32 2, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = ptrtoint %"class.blink::DocumentLoader"* %2 to i64
  br i1 %10, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %14, i64* %15, align 8
  br label %23

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  br label %23

23:                                               ; preds = %16, %12
  %24 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0)) #14
  %28 = icmp ult i64 %27, 4294967296
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %23
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %23
  %31 = trunc i64 %27 to i32
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21VirtualTimePolicyEnum5PauseE, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %31, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  br i1 %36, label %37, label %59

37:                                               ; preds = %30
  call void @_ZN5blink14DocumentLoader16SetDefersLoadingENS_19WebLoaderFreezeModeE(%"class.blink::DocumentLoader"* %2, i8 zeroext 0) #13
  %38 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0
  %39 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %58, label %44, !prof !4

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %38, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %45, align 8
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %46, i64 %47
  %49 = bitcast %"class.blink::Member.240"* %48 to i64*
  store atomic i64 %11, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::DocumentLoader"* %2 to i8*
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #13
  br label %55

55:                                               ; preds = %52, %44
  %56 = load i32, i32* %39, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %39, align 4
  br label %59

58:                                               ; preds = %37
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.237"* %38, %"class.blink::DocumentLoader"** nonnull dereferenceable(8) %6) #13
  br label %59

59:                                               ; preds = %30, %58, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent27ApplyAcceptLanguageOverrideEPN3WTF6StringE(%"class.blink::InspectorEmulationAgent"* nocapture readonly, %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 20, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #13
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %15
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10
  %28 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %29 = bitcast %"class.WTF::String"* %1 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %2, %45, %42, %27, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent22ApplyUserAgentOverrideEPN3WTF6StringE(%"class.blink::InspectorEmulationAgent"* nocapture readonly, %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #13
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %15
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10
  %28 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %29 = bitcast %"class.WTF::String"* %1 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %2, %45, %42, %27, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent30ApplyUserAgentMetadataOverrideEPN4absl8optionalINS_17UserAgentMetadataEEE(%"class.blink::InspectorEmulationAgent"*, %"class.absl::optional.275"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %18, label %22, label %20

20:                                               ; preds = %14
  %21 = tail call dereferenceable(152) %"struct.blink::UserAgentMetadata"* @_ZN5blink17UserAgentMetadataaSERKS0_(%"struct.blink::UserAgentMetadata"* %19, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %15) #13
  br label %29

22:                                               ; preds = %14
  tail call void @_ZN5blink17UserAgentMetadataC2ERKS0_(%"struct.blink::UserAgentMetadata"* %19, %"struct.blink::UserAgentMetadata"* dereferenceable(152) %15) #13
  store i8 1, i8* %16, align 8
  br label %29

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.absl::optional.275", %"class.absl::optional.275"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %28) #13
  store i8 0, i8* %24, align 8
  br label %29

29:                                               ; preds = %2, %27, %23, %22, %20, %6
  ret void
}

declare void @_ZN5blink13CoreProbeSink26AddInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorEmulationAgent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23InspectorEmulationAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorEmulationAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WebLocalFrameImplEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #13
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"class.blink::Member"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorEmulationAgent21setDisabledImageTypesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.std::__1::vector.2685"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.2696", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.2685", %"class.std::__1::vector.2685"* %2, i64 0, i32 0, i32 1
  %15 = bitcast %"class.WTF::String"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.2685"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %27, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 6
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  store i8 1, i8* %21, align 8
  %25 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %25, align 8
  tail call void @_ZN5blink13CoreProbeSink26AddInspectorEmulationAgentEPNS_23InspectorEmulationAgentE(%"class.blink::CoreProbeSink"* %26, %"class.blink::InspectorEmulationAgent"* %1) #13
  br label %27

27:                                               ; preds = %20, %3, %24
  %28 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 0, i32 31
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField.294"* %28)
  %29 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i64 6) #13
  %31 = getelementptr inbounds %"class.std::__1::vector.2685", %"class.std::__1::vector.2685"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %34 = icmp eq %"class.WTF::String"* %32, %33
  br i1 %34, label %241, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.WTF::StringView"* %8 to i8*
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %42 = bitcast %"class.WTF::StringView"* %9 to i8*
  %43 = bitcast %"class.WTF::StringView"* %9 to i64*
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %46 = bitcast %"class.WTF::StringView"* %6 to i8*
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  %50 = bitcast %"class.WTF::StringView"* %6 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %52 = bitcast %"class.WTF::StringView"* %7 to i8*
  %53 = bitcast %"class.WTF::StringView"* %7 to i64*
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %56 = bitcast %"class.WTF::StringView"* %4 to i8*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  %60 = bitcast %"class.WTF::StringView"* %4 to i64*
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %62 = bitcast %"class.WTF::StringView"* %5 to i8*
  %63 = bitcast %"class.WTF::StringView"* %5 to i64*
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %66 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 18
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.WTF::String"* %11 to i8*
  %72 = bitcast %"class.WTF::StringAppend.2696"* %12 to i8*
  %73 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %12, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %12, i64 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  br label %78

76:                                               ; preds = %238
  %77 = icmp eq %"class.WTF::String"* %240, %33
  br i1 %77, label %241, label %78

78:                                               ; preds = %35, %76
  %79 = phi %"class.WTF::String"* [ %32, %35 ], [ %240, %76 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #13
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  call void @llvm.trap() #13
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  store i8* null, i8** %38, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %101, i64* %40, align 8
  br label %106

102:                                              ; preds = %83, %98
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %37, align 8
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 1
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %39, align 8
  br label %106

106:                                              ; preds = %102, %100
  %107 = phi i32 [ %104, %102 ], [ 0, %100 ]
  store i32 %107, i32* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %108 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4AvifE, i64 0, i64 0)) #14
  %109 = icmp ult i64 %108, 4294967296
  br i1 %109, label %111, label %110, !prof !2

110:                                              ; preds = %106
  call void @llvm.trap() #13
  unreachable

111:                                              ; preds = %106
  %112 = trunc i64 %108 to i32
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %113, i64* %43, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4AvifE, i64 0, i64 0), i8** %44, align 8
  store i32 %112, i32* %45, align 8
  %114 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  br i1 %114, label %147, label %115

115:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #13
  br i1 %82, label %116, label %118

116:                                              ; preds = %115
  store i8* null, i8** %48, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %117, i64* %50, align 8
  br label %122

118:                                              ; preds = %115
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %47, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 1
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %49, align 8
  br label %122

122:                                              ; preds = %118, %116
  %123 = phi i32 [ %120, %118 ], [ 0, %116 ]
  store i32 %123, i32* %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %124 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum3JxlE, i64 0, i64 0)) #14
  %125 = icmp ult i64 %124, 4294967296
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %122
  call void @llvm.trap() #13
  unreachable

127:                                              ; preds = %122
  %128 = trunc i64 %124 to i32
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %129, i64* %53, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum3JxlE, i64 0, i64 0), i8** %54, align 8
  store i32 %128, i32* %55, align 8
  %130 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #13
  br i1 %130, label %147, label %131

131:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #13
  br i1 %82, label %132, label %134

132:                                              ; preds = %131
  store i8* null, i8** %58, align 8
  %133 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %133, i64* %60, align 8
  br label %138

134:                                              ; preds = %131
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %57, align 8
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 1
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %59, align 8
  br label %138

138:                                              ; preds = %134, %132
  %139 = phi i32 [ %136, %134 ], [ 0, %132 ]
  store i32 %139, i32* %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #13
  %140 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4WebpE, i64 0, i64 0)) #14
  %141 = icmp ult i64 %140, 4294967296
  br i1 %141, label %143, label %142, !prof !2

142:                                              ; preds = %138
  call void @llvm.trap() #13
  unreachable

143:                                              ; preds = %138
  %144 = trunc i64 %140 to i32
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %145, i64* %63, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Emulation21DisabledImageTypeEnum4WebpE, i64 0, i64 0), i8** %64, align 8
  store i32 %144, i32* %65, align 8
  %146 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #13
  br i1 %146, label %147, label %218

147:                                              ; preds = %143, %127, %111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #13
  br i1 %82, label %165, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %165

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i33
  %157 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #13
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !4

162:                                              ; preds = %153
  call void @llvm.trap() #13
  unreachable

163:                                              ; preds = %153
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %154, align 4
  br label %165

165:                                              ; preds = %147, %148, %163
  %166 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::StringImpl"* %81)
  %167 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %166, 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %73, align 8
  %168 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %166, 1
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %74, align 8
  %169 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %12)
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %75, align 8
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField.294"* %28, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext true)
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #13
  br label %185

185:                                              ; preds = %165, %181, %184
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #13
  br label %201

201:                                              ; preds = %200, %197, %185
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #13
  br label %217

217:                                              ; preds = %201, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %223

218:                                              ; preds = %143
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField.294"* %28)
  store i8 18, i8* %67, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i64 18, i1 false) #13
  store i8 0, i8* %69, align 2
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #13
  %219 = load i8, i8* %67, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %222) #15
  br label %223

223:                                              ; preds = %221, %218, %217
  %224 = phi i32 [ 3, %217 ], [ 1, %218 ], [ 1, %221 ]
  br i1 %82, label %238, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %238

238:                                              ; preds = %223, %234, %237
  %239 = icmp eq i32 %224, 3
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 1
  br i1 %239, label %76, label %242

241:                                              ; preds = %76, %27
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %242

242:                                              ; preds = %238, %241
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #13
  br label %258

258:                                              ; preds = %242, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %259 = icmp eq %"class.std::__1::vector.2685"* %2, null
  br i1 %259, label %295, label %260

260:                                              ; preds = %258
  %261 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %262 = icmp eq %"class.WTF::String"* %261, null
  br i1 %262, label %293, label %263

263:                                              ; preds = %260
  %264 = bitcast %"class.WTF::String"* %261 to i8*
  %265 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %266 = icmp eq %"class.WTF::String"* %265, %261
  br i1 %266, label %291, label %267

267:                                              ; preds = %263, %286
  %268 = phi %"class.WTF::String"* [ %269, %286 ], [ %265, %263 ]
  %269 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %268, i64 -1
  %270 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %269, i64 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #13
  br label %286

286:                                              ; preds = %285, %282, %267
  %287 = icmp eq %"class.WTF::String"* %269, %261
  br i1 %287, label %288, label %267

288:                                              ; preds = %286
  %289 = bitcast %"class.std::__1::vector.2685"* %2 to i8**
  %290 = load i8*, i8** %289, align 8
  br label %291

291:                                              ; preds = %288, %263
  %292 = phi i8* [ %290, %288 ], [ %264, %263 ]
  store %"class.WTF::String"* %261, %"class.WTF::String"** %14, align 8
  call void @_ZdlPv(i8* %292) #15
  br label %293

293:                                              ; preds = %291, %260
  %294 = bitcast %"class.std::__1::vector.2685"* %2 to i8*
  call void @_ZdlPv(i8* %294) #15
  br label %295

295:                                              ; preds = %258, %293
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField.294"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::WebVector.495", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2696", align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %4, align 1
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField.294"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %135

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::HashMap.295", %"class.WTF::HashMap.295"* %16, i64 0, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.296"* %17, %"class.WTF::String"* dereferenceable(8) %1) #13
  %19 = extractvalue { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } %18, 0
  %20 = getelementptr inbounds %"class.WTF::HashMap.295", %"class.WTF::HashMap.295"* %16, i64 0, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %21, i64 %24
  %26 = icmp eq %"struct.WTF::KeyValuePair.299"* %19, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %19, i64 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp eq i8 %29, %8
  br i1 %30, label %135, label %31

31:                                               ; preds = %15, %27
  %32 = call { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.296"* %17, %"class.WTF::String"* dereferenceable(8) %1, i8* nonnull dereferenceable(1) %4) #13
  %33 = extractvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = load i8, i8* %4, align 1, !range !3
  br label %42

38:                                               ; preds = %31
  %39 = extractvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %32, 0
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %39, i64 0, i32 1
  %41 = load i8, i8* %4, align 1, !range !3
  store i8 %41, i8* %40, align 1
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi i8 [ %37, %36 ], [ %41, %38 ]
  %44 = bitcast %"class.blink::WebVector.495"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::WebVector.495", %"class.blink::WebVector.495"* %5, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #13
  %47 = icmp ne i8 %43, 0
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %47, %"class.blink::WebVector.495"* nonnull %5) #13
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 2
  %49 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %48, align 8
  %50 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = bitcast %"class.WTF::StringAppend.2696"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #13
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !4

70:                                               ; preds = %61
  call void @llvm.trap() #13
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %42, %56, %71
  %74 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::StringImpl"* %54)
  %75 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %7, i64 0, i32 0, i32 0, i32 0
  %76 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %7, i64 0, i32 1, i32 0, i32 0
  %78 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %77, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %7)
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WebVector.495"* nonnull %5) #13
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #13
  br label %96

96:                                               ; preds = %73, %92, %95
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #13
  br label %112

112:                                              ; preds = %111, %108, %96
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #13
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %129 = load i8*, i8** %45, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = ptrtoint i8* %129 to i64
  %133 = bitcast i8** %46 to i64*
  store i64 %132, i64* %133, align 8
  call void @_ZdlPv(i8* nonnull %129) #15
  br label %134

134:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %135

135:                                              ; preds = %134, %27, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.2696", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %31
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2696"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2696"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2882", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2696"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #13
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2882"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #13
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2882"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2882"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #13
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2882"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %67, i8* %30) #13
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"* nonnull %68, i8* %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #13
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %80
  call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2696"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #13
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2882"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #13
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #13
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2882"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2882"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #13
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2882"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %144, i16* %107) #13
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2882", %"class.WTF::StringTypeAdapter.2882"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"* nonnull %145, i16* %148) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #13
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #13
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !4

164:                                              ; preds = %157
  call void @llvm.trap() #13
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #13
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorEmulationAgent21setDisabledImageTypesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorEmulationAgent"*, %"class.std::__1::vector.2685"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %1, i64 -1, i32 31, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorEmulationAgent"*
  tail call void @_ZN5blink23InspectorEmulationAgent21setDisabledImageTypesENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorEmulationAgent"* %5, %"class.std::__1::vector.2685"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #15
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Emulation::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Emulation::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol9Emulation10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Emulation::Backend"* %26) #13
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %16, align 8
  store %"class.blink::protocol::Emulation::Frontend"* null, %"class.blink::protocol::Emulation::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Emulation::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev(%"class.blink::InspectorAgentState::MapField.294"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.299"* %4, null
  br i1 %5, label %38, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.299"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.299"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store %"struct.WTF::KeyValuePair.299"* null, %"struct.WTF::KeyValuePair.299"** %3, align 8
  br label %38

38:                                               ; preds = %36, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #13
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"class.blink::InspectorAgentState::MapField.294"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::MapField.294"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #13
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %122, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %122, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %122, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %122, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0
  br label %42

42:                                               ; preds = %31, %120
  %43 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %114, %120 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  store i8* null, i8** %35, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %37, align 8
  br label %53

49:                                               ; preds = %42
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %34, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %36, align 8
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %51, %49 ], [ 0, %47 ]
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = icmp eq i32 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %59, label %64, label %110

60:                                               ; preds = %53
  %61 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %56, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %61, label %62, label %110

62:                                               ; preds = %60
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi %"class.WTF::StringImpl"* [ %63, %62 ], [ %45, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %64 ]
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %44, i32 %71, i32 -1) #13
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !3
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77, !prof !4

76:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %79, i64 %82, i8* nonnull %4) #13
  br i1 %83, label %84, label %93

84:                                               ; preds = %77
  %85 = call { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.296"* %41, %"class.WTF::String"* nonnull dereferenceable(8) %3, i8* nonnull dereferenceable(1) %4) #13
  %86 = extractvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %85, 1
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = extractvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %85, 0
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %90, i64 0, i32 1
  %92 = load i8, i8* %4, align 1, !range !3
  store i8 %92, i8* %91, align 1
  br label %93

93:                                               ; preds = %89, %84, %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %110

110:                                              ; preds = %58, %60, %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, %18
  br i1 %112, label %122, label %113

113:                                              ; preds = %110, %117
  %114 = phi %"struct.WTF::KeyValuePair"* [ %118, %117 ], [ %111, %110 ]
  %115 = bitcast %"struct.WTF::KeyValuePair"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 1
  %119 = icmp eq %"struct.WTF::KeyValuePair"* %118, %18
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %114, %18
  br i1 %121, label %122, label %42

122:                                              ; preds = %25, %110, %120, %117, %9, %28, %1
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.296"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.299"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* null)
  %9 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.299"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.299"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.299"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.299"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.299"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.299"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.299"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.299"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.299"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !3
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.299"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } undef, %"struct.WTF::KeyValuePair.299"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.299"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.296"*, %"struct.WTF::KeyValuePair.299"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.299"*
  %37 = call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* %36, i32 %32, %"struct.WTF::KeyValuePair.299"* %1) #13
  ret %"struct.WTF::KeyValuePair.299"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.296"*, %"struct.WTF::KeyValuePair.299"*, i32, %"struct.WTF::KeyValuePair.299"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.296", align 8
  %6 = bitcast %"class.WTF::HashTable.296"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.296"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.299"* %1, %"struct.WTF::KeyValuePair.299"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.299"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.296"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.296"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.299"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.296"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.296"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.299"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.299"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.299"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.299"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.299"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.299"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.299"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.296"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #13
  %85 = extractvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #13
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.299"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %74, i64 %77, i32 1
  %107 = load i8, i8* %106, align 8, !range !3
  store i8 %107, i8* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.299"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.299"* %85, %"struct.WTF::KeyValuePair.299"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.299"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.299"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.299"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.296"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.299"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.299"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.299"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.299"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.299"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.299"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.299"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.299"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.299"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.299"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.299"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } undef, %"struct.WTF::KeyValuePair.299"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.299"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEED0Ev(%"class.blink::InspectorAgentState::SimpleField.269"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %35, %32, %19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::InspectorAgentState::SimpleField.269"* %0 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.269"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #13
  br i1 %7, label %50, label %8

8:                                                ; preds = %1
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %8
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %2 to i64*
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store i64 %29, i64* %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %28, %42, %45
  %47 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 2
  %48 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %48, %"class.WTF::String"* dereferenceable(8) %49, %"class.blink::WebVector.495"* null) #13
  br label %50

50:                                               ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIN3WTF6StringEE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.269"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.269", %"class.blink::InspectorAgentState::SimpleField.269"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8* %25, i64 %28, %"class.WTF::String"* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.495"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8*, i64, %"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #15
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_ZdlPv(i8* nonnull %12) #15
  br label %18

18:                                               ; preds = %14, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldINSt3__16vectorIhNS2_9allocatorIhEEEEE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPNSt3__16vectorIhNS4_9allocatorIhEEEE(i8* %25, i64 %28, %"class.std::__1::vector"* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPNSt3__16vectorIhNS4_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.274"* %4, null
  br i1 %5, label %9, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"* nonnull %4, i32 %8) #13
  store %"struct.WTF::KeyValuePair.274"* null, %"struct.WTF::KeyValuePair.274"** %3, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #13
  br label %26

26:                                               ; preds = %25, %22, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %26, %39, %42
  %44 = bitcast %"class.blink::InspectorAgentState::MapField"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #13
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %177, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %177, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %177, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %177, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %4 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0
  br label %44

44:                                               ; preds = %31, %175
  %45 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %169, %175 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  store i8* null, i8** %35, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %50, i64* %37, align 8
  br label %55

51:                                               ; preds = %44
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %34, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %36, align 8
  br label %55

55:                                               ; preds = %49, %51
  %56 = phi i32 [ %53, %51 ], [ 0, %49 ]
  store i32 %56, i32* %38, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = icmp eq i32 %56, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %61, label %66, label %165

62:                                               ; preds = %55
  %63 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %58, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  br i1 %63, label %64, label %165

64:                                               ; preds = %62
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ %47, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi i32 [ %71, %69 ], [ 0, %66 ]
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %46, i32 %73, i32 -1) #13
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %72
  call void @llvm.trap() #13
  unreachable

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8* %81, i64 %84, %"class.WTF::String"* nonnull %4) #13
  br i1 %85, label %86, label %132

86:                                               ; preds = %79
  %87 = call { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.271"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %88 = extractvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %87, 1
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %132

91:                                               ; preds = %86
  %92 = extractvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %87, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %92, i64 0, i32 1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #13
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !4

110:                                              ; preds = %101
  call void @llvm.trap() #13
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %91
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"class.WTF::String"* %93 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #13
  br label %132

132:                                              ; preds = %131, %128, %113, %86, %79
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #13
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #13
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %165

165:                                              ; preds = %60, %62, %164
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %167 = icmp eq %"struct.WTF::KeyValuePair"* %166, %18
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %172
  %169 = phi %"struct.WTF::KeyValuePair"* [ %173, %172 ], [ %166, %165 ]
  %170 = bitcast %"struct.WTF::KeyValuePair"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  switch i64 %171, label %175 [
    i64 -1, label %172
    i64 0, label %172
  ]

172:                                              ; preds = %168, %168
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %169, i64 1
  %174 = icmp eq %"struct.WTF::KeyValuePair"* %173, %18
  br i1 %174, label %177, label %168

175:                                              ; preds = %168
  %176 = icmp eq %"struct.WTF::KeyValuePair"* %169, %18
  br i1 %176, label %177, label %44

177:                                              ; preds = %25, %165, %175, %172, %9, %28, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.274"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.274"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #13
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.271"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.274"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* null)
  %9 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.274"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.274"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.274"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.274"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.274"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.274"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.274"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.274"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.274"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.274"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } undef, %"struct.WTF::KeyValuePair.274"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.274"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.271"*, %"struct.WTF::KeyValuePair.274"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.274"*
  %37 = call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* %36, i32 %32, %"struct.WTF::KeyValuePair.274"* %1) #13
  ret %"struct.WTF::KeyValuePair.274"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.274"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.274"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #13
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %53
  tail call void @llvm.trap() #13
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #13
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.271"*, %"struct.WTF::KeyValuePair.274"*, i32, %"struct.WTF::KeyValuePair.274"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.271", align 8
  %6 = bitcast %"class.WTF::HashTable.271"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.271"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.274"* %1, %"struct.WTF::KeyValuePair.274"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.274"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.271"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.271"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.274"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.271"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.271"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.274"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.274"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.274"* nonnull %37, i32 %34) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.274"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.274"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.274"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.274"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.271"* nonnull %5, %"struct.WTF::KeyValuePair.274"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.274"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.274"* %53, %"struct.WTF::KeyValuePair.274"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.274"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.274"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.274"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.271"*, %"struct.WTF::KeyValuePair.274"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.271"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.274"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.274"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.274"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.271"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.274"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.274"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.274"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.274"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.274"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.274"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.274"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.274"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.274"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.274"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.274"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } undef, %"struct.WTF::KeyValuePair.274"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.274"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %3, align 8
  store %"class.blink::protocol::Emulation::Frontend"* null, %"class.blink::protocol::Emulation::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Emulation::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !4

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [24 x i8*] }, { [11 x i8*], [24 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Emulation::Frontend"*, %"class.blink::protocol::Emulation::Frontend"** %5, align 8
  store %"class.blink::protocol::Emulation::Frontend"* null, %"class.blink::protocol::Emulation::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Emulation::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Emulation::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Emulation8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(152) %"struct.blink::UserAgentMetadata"* @_ZN5blink17UserAgentMetadataaSEOS0_(%"struct.blink::UserAgentMetadata"*, %"struct.blink::UserAgentMetadata"* dereferenceable(152)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %3, align 8
  %5 = icmp eq %"struct.blink::UserAgentBrandVersion"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.blink::UserAgentBrandVersion"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %8, align 8
  %10 = icmp eq %"struct.blink::UserAgentBrandVersion"* %9, %4
  br i1 %10, label %35, label %11

11:                                               ; preds = %6, %30
  %12 = phi %"struct.blink::UserAgentBrandVersion"* [ %13, %30 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %12, i64 -1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %19, %11
  %23 = bitcast %"struct.blink::UserAgentBrandVersion"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %27, %22
  %31 = icmp eq %"struct.blink::UserAgentBrandVersion"* %13, %4
  br i1 %31, label %32, label %11

32:                                               ; preds = %30
  %33 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %6
  %36 = phi i8* [ %34, %32 ], [ %7, %6 ]
  store %"struct.blink::UserAgentBrandVersion"* %4, %"struct.blink::UserAgentBrandVersion"** %8, align 8
  tail call void @_ZdlPv(i8* %36) #15
  %37 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  br label %38

38:                                               ; preds = %2, %35
  %39 = bitcast %"struct.blink::UserAgentMetadata"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.blink::UserAgentBrandVersion"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.blink::UserAgentBrandVersion"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"struct.blink::UserAgentBrandVersion"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"struct.blink::UserAgentMetadata"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #13
  %53 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %38
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %38, %59
  %63 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #13
  %65 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 0, i8* %66, align 1
  store i8 0, i8* %64, align 1
  %67 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %68 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2
  %69 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  tail call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %62, %73
  %77 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #13
  %79 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  store i8 0, i8* %80, align 1
  store i8 0, i8* %78, align 1
  %81 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %82 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3
  %83 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %76, %87
  %91 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #13
  %93 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 0, i8* %94, align 1
  store i8 0, i8* %92, align 1
  %95 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %96 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4
  %97 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %90, %101
  %105 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #13
  %107 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  store i8 0, i8* %108, align 1
  store i8 0, i8* %106, align 1
  %109 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %110 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5
  %111 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #15
  br label %118

118:                                              ; preds = %104, %115
  %119 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #13
  %121 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  store i8 0, i8* %122, align 1
  store i8 0, i8* %120, align 1
  %123 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 6
  %124 = load i8, i8* %123, align 8, !range !3
  %125 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 6
  store i8 %124, i8* %125, align 8
  ret %"struct.blink::UserAgentMetadata"* %0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare i32 @_ZN5blink8MakeRGBAEiiii(i32, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN5blink18TimeZoneController22ChangeTimeZoneOverrideERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(152) %"struct.blink::UserAgentMetadata"* @_ZN5blink17UserAgentMetadataaSERKS0_(%"struct.blink::UserAgentMetadata"*, %"struct.blink::UserAgentMetadata"* dereferenceable(152)) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"struct.blink::UserAgentMetadata"* %0, %1
  br i1 %3, label %164, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %8, align 8
  tail call void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.280"* %5, %"struct.blink::UserAgentBrandVersion"* %7, %"struct.blink::UserAgentBrandVersion"* %9) #13
  %10 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %15, label %30, label %20

20:                                               ; preds = %4
  br i1 %19, label %24, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #13
  br label %40

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %26, i64 %28) #13
  br label %40

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %36 = zext i8 %18 to i64
  %37 = select i1 %19, i8* %32, i8* %35
  %38 = select i1 %19, i64 %34, i64 %36
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %37, i64 %38) #13
  br label %40

40:                                               ; preds = %21, %24, %30
  %41 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %46, label %61, label %51

51:                                               ; preds = %40
  br i1 %50, label %55, label %52

52:                                               ; preds = %51
  %53 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #13
  br label %71

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %41, i8* %57, i64 %59) #13
  br label %71

61:                                               ; preds = %40
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %67 = zext i8 %49 to i64
  %68 = select i1 %50, i8* %63, i8* %66
  %69 = select i1 %50, i64 %65, i64 %67
  %70 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %41, i8* %68, i64 %69) #13
  br label %71

71:                                               ; preds = %52, %55, %61
  %72 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %73 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3
  %74 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %77, label %92, label %82

82:                                               ; preds = %71
  br i1 %81, label %86, label %83

83:                                               ; preds = %82
  %84 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #13
  br label %102

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %72, i8* %88, i64 %90) #13
  br label %102

92:                                               ; preds = %71
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %98 = zext i8 %80 to i64
  %99 = select i1 %81, i8* %94, i8* %97
  %100 = select i1 %81, i64 %96, i64 %98
  %101 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %72, i8* %99, i64 %100) #13
  br label %102

102:                                              ; preds = %83, %86, %92
  %103 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %104 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4
  %105 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %108, label %123, label %113

113:                                              ; preds = %102
  br i1 %112, label %117, label %114

114:                                              ; preds = %113
  %115 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %116 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #13
  br label %133

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %103, i8* %119, i64 %121) #13
  br label %133

123:                                              ; preds = %102
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %129 = zext i8 %111 to i64
  %130 = select i1 %112, i8* %125, i8* %128
  %131 = select i1 %112, i64 %127, i64 %129
  %132 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %103, i8* %130, i64 %131) #13
  br label %133

133:                                              ; preds = %114, %117, %123
  %134 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %135 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5
  %136 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  %140 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %139, label %154, label %144

144:                                              ; preds = %133
  br i1 %143, label %148, label %145

145:                                              ; preds = %144
  %146 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %147 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 24, i1 false) #13
  br label %164

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %150, i64 %152) #13
  br label %164

154:                                              ; preds = %133
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  %160 = zext i8 %142 to i64
  %161 = select i1 %143, i8* %156, i8* %159
  %162 = select i1 %143, i64 %158, i64 %160
  %163 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %161, i64 %162) #13
  br label %164

164:                                              ; preds = %2, %145, %148, %154
  %165 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 6
  %166 = load i8, i8* %165, align 8, !range !3
  %167 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 6
  store i8 %166, i8* %167, align 8
  ret %"struct.blink::UserAgentMetadata"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.280"*, %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %2 to i64
  %5 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.blink::UserAgentBrandVersion"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.280"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.blink::UserAgentBrandVersion"*
  br i1 %15, label %167, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.blink::UserAgentBrandVersion"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %1, i64 %22
  %25 = select i1 %23, %"struct.blink::UserAgentBrandVersion"* %24, %"struct.blink::UserAgentBrandVersion"* %2
  %26 = icmp eq %"struct.blink::UserAgentBrandVersion"* %25, %1
  br i1 %26, label %96, label %27

27:                                               ; preds = %17, %92
  %28 = phi %"struct.blink::UserAgentBrandVersion"* [ %94, %92 ], [ %16, %17 ]
  %29 = phi %"struct.blink::UserAgentBrandVersion"* [ %93, %92 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.blink::UserAgentBrandVersion"* %28, %29
  br i1 %31, label %92, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.blink::UserAgentBrandVersion"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.blink::UserAgentBrandVersion"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.blink::UserAgentBrandVersion"* %28 to i8*
  %44 = bitcast %"struct.blink::UserAgentBrandVersion"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #13
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #13
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.blink::UserAgentBrandVersion"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #13
  br label %61

61:                                               ; preds = %51, %45, %42
  %62 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %28, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %67, label %82, label %72

72:                                               ; preds = %61
  br i1 %71, label %76, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %75 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #13
  br label %92

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %78, i64 %80) #13
  br label %92

82:                                               ; preds = %61
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %88 = zext i8 %70 to i64
  %89 = select i1 %71, i8* %84, i8* %87
  %90 = select i1 %71, i64 %86, i64 %88
  %91 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %89, i64 %90) #13
  br label %92

92:                                               ; preds = %82, %76, %73, %27
  %93 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %29, i64 1
  %94 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %28, i64 1
  %95 = icmp eq %"struct.blink::UserAgentBrandVersion"* %93, %25
  br i1 %95, label %96, label %27

96:                                               ; preds = %92, %17
  %97 = phi %"struct.blink::UserAgentBrandVersion"* [ %16, %17 ], [ %94, %92 ]
  br i1 %23, label %98, label %142

98:                                               ; preds = %96
  %99 = load i64, i64* %19, align 8
  %100 = icmp eq %"struct.blink::UserAgentBrandVersion"* %25, %2
  br i1 %100, label %140, label %101

101:                                              ; preds = %98
  %102 = inttoptr i64 %99 to %"struct.blink::UserAgentBrandVersion"*
  br label %103

103:                                              ; preds = %134, %101
  %104 = phi %"struct.blink::UserAgentBrandVersion"* [ %136, %134 ], [ %102, %101 ]
  %105 = phi %"struct.blink::UserAgentBrandVersion"* [ %135, %134 ], [ %24, %101 ]
  %106 = bitcast %"struct.blink::UserAgentBrandVersion"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = bitcast %"struct.blink::UserAgentBrandVersion"* %104 to i8*
  %112 = bitcast %"struct.blink::UserAgentBrandVersion"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #13
  br label %119

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %104, i64 0, i32 0
  %115 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %114, i8* %116, i64 %118) #13
  br label %119

119:                                              ; preds = %113, %110
  %120 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %104, i64 0, i32 1
  %121 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %105, i64 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %128 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 24, i1 false) #13
  br label %134

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %105, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %120, i8* %131, i64 %133) #13
  br label %134

134:                                              ; preds = %129, %126
  %135 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %105, i64 1
  %136 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %104, i64 1
  %137 = icmp eq %"struct.blink::UserAgentBrandVersion"* %135, %2
  br i1 %137, label %138, label %103

138:                                              ; preds = %134
  %139 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %136 to i64
  br label %140

140:                                              ; preds = %98, %138
  %141 = phi i64 [ %99, %98 ], [ %139, %138 ]
  store i64 %141, i64* %19, align 8
  br label %264

142:                                              ; preds = %96
  %143 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %18, align 8
  %144 = icmp eq %"struct.blink::UserAgentBrandVersion"* %143, %97
  br i1 %144, label %166, label %145

145:                                              ; preds = %142, %164
  %146 = phi %"struct.blink::UserAgentBrandVersion"* [ %147, %164 ], [ %143, %142 ]
  %147 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %146, i64 -1
  %148 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %146, i64 -1, i32 1
  %149 = bitcast %"class.std::__1::basic_string"* %148 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %153, %145
  %157 = bitcast %"struct.blink::UserAgentBrandVersion"* %147 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  tail call void @_ZdlPv(i8* %163) #15
  br label %164

164:                                              ; preds = %161, %156
  %165 = icmp eq %"struct.blink::UserAgentBrandVersion"* %147, %97
  br i1 %165, label %166, label %145

166:                                              ; preds = %164, %142
  store %"struct.blink::UserAgentBrandVersion"* %97, %"struct.blink::UserAgentBrandVersion"** %18, align 8
  br label %264

167:                                              ; preds = %3
  %168 = icmp eq i64 %12, 0
  br i1 %168, label %201, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %12 to i8*
  %171 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %172 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %171, align 8
  %173 = icmp eq %"struct.blink::UserAgentBrandVersion"* %172, %16
  br i1 %173, label %198, label %174

174:                                              ; preds = %169, %193
  %175 = phi %"struct.blink::UserAgentBrandVersion"* [ %176, %193 ], [ %172, %169 ]
  %176 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %175, i64 -1
  %177 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %175, i64 -1, i32 1
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  tail call void @_ZdlPv(i8* %184) #15
  br label %185

185:                                              ; preds = %182, %174
  %186 = bitcast %"struct.blink::UserAgentBrandVersion"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  tail call void @_ZdlPv(i8* %192) #15
  br label %193

193:                                              ; preds = %190, %185
  %194 = icmp eq %"struct.blink::UserAgentBrandVersion"* %176, %16
  br i1 %194, label %195, label %174

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::vector.280"* %0 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %195, %169
  %199 = phi i8* [ %197, %195 ], [ %170, %169 ]
  store %"struct.blink::UserAgentBrandVersion"* %16, %"struct.blink::UserAgentBrandVersion"** %171, align 8
  tail call void @_ZdlPv(i8* %199) #15
  %200 = bitcast %"class.std::__1::vector.280"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 24, i1 false) #13
  br label %201

201:                                              ; preds = %167, %198
  %202 = phi i64 [ %10, %167 ], [ 0, %198 ]
  %203 = icmp ugt i64 %7, 384307168202282325
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = bitcast %"class.std::__1::vector.280"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %205) #16
  unreachable

206:                                              ; preds = %201
  %207 = sdiv exact i64 %202, 48
  %208 = icmp ult i64 %207, 192153584101141162
  br i1 %208, label %209, label %213

209:                                              ; preds = %206
  %210 = shl nsw i64 %207, 1
  %211 = icmp ult i64 %210, %7
  %212 = select i1 %211, i64 %7, i64 %210
  br label %213

213:                                              ; preds = %209, %206
  %214 = phi i64 [ %212, %209 ], [ 384307168202282325, %206 ]
  %215 = mul i64 %214, 48
  %216 = tail call i8* @_Znwm(i64 %215) #15
  %217 = bitcast i8* %216 to %"struct.blink::UserAgentBrandVersion"*
  %218 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %219 = bitcast %"struct.blink::UserAgentBrandVersion"** %218 to i8**
  store i8* %216, i8** %219, align 8
  %220 = bitcast %"class.std::__1::vector.280"* %0 to i8**
  store i8* %216, i8** %220, align 8
  %221 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %217, i64 %214
  store %"struct.blink::UserAgentBrandVersion"* %221, %"struct.blink::UserAgentBrandVersion"** %8, align 8
  %222 = bitcast %"struct.blink::UserAgentBrandVersion"** %218 to i64*
  %223 = ptrtoint i8* %216 to i64
  %224 = icmp eq %"struct.blink::UserAgentBrandVersion"* %1, %2
  br i1 %224, label %262, label %225

225:                                              ; preds = %213, %256
  %226 = phi %"struct.blink::UserAgentBrandVersion"* [ %258, %256 ], [ %217, %213 ]
  %227 = phi %"struct.blink::UserAgentBrandVersion"* [ %257, %256 ], [ %1, %213 ]
  %228 = bitcast %"struct.blink::UserAgentBrandVersion"* %227 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %225
  %233 = bitcast %"struct.blink::UserAgentBrandVersion"* %226 to i8*
  %234 = bitcast %"struct.blink::UserAgentBrandVersion"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #13
  br label %241

235:                                              ; preds = %225
  %236 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %226, i64 0, i32 0
  %237 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %236, i8* %238, i64 %240) #13
  br label %241

241:                                              ; preds = %235, %232
  %242 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %226, i64 0, i32 1
  %243 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %227, i64 0, i32 1
  %244 = bitcast %"class.std::__1::basic_string"* %243 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  %246 = load i8, i8* %245, align 1
  %247 = icmp slt i8 %246, 0
  br i1 %247, label %251, label %248

248:                                              ; preds = %241
  %249 = bitcast %"class.std::__1::basic_string"* %242 to i8*
  %250 = bitcast %"class.std::__1::basic_string"* %243 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %249, i8* align 8 %250, i64 24, i1 false) #13
  br label %256

251:                                              ; preds = %241
  %252 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %227, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %242, i8* %253, i64 %255) #13
  br label %256

256:                                              ; preds = %251, %248
  %257 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %227, i64 1
  %258 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %226, i64 1
  %259 = icmp eq %"struct.blink::UserAgentBrandVersion"* %257, %2
  br i1 %259, label %260, label %225

260:                                              ; preds = %256
  %261 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %258 to i64
  br label %262

262:                                              ; preds = %213, %260
  %263 = phi i64 [ %223, %213 ], [ %261, %260 ]
  store i64 %263, i64* %222, align 8
  br label %264

264:                                              ; preds = %140, %166, %262
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataC2ERKS0_(%"struct.blink::UserAgentMetadata"*, %"struct.blink::UserAgentMetadata"* dereferenceable(152)) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.280"* %3, %"class.std::__1::vector.280"* dereferenceable(24) %4)
  %5 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #13
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #13
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #13
  br label %34

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %31, i64 %33) #13
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #13
  br label %49

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %46, i64 %48) #13
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #13
  br label %64

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %50, i8* %61, i64 %63) #13
  br label %64

64:                                               ; preds = %56, %59
  %65 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %66 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #13
  br label %79

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %65, i8* %76, i64 %78) #13
  br label %79

79:                                               ; preds = %71, %74
  %80 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 6
  %81 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %1, i64 0, i32 6
  %82 = load i8, i8* %81, align 8, !range !3
  store i8 %82, i8* %80, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.280"*, %"class.std::__1::vector.280"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.280"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.blink::UserAgentBrandVersion"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.280"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %71, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 384307168202282325
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.280"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to %"struct.blink::UserAgentBrandVersion"*
  %19 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.blink::UserAgentBrandVersion"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.280"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.blink::UserAgentBrandVersion"* %22, %"struct.blink::UserAgentBrandVersion"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %24, align 8
  %26 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %4, align 8
  %27 = bitcast %"struct.blink::UserAgentBrandVersion"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.blink::UserAgentBrandVersion"* %25, %26
  br i1 %29, label %69, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.blink::UserAgentBrandVersion"*
  br label %32

32:                                               ; preds = %63, %30
  %33 = phi %"struct.blink::UserAgentBrandVersion"* [ %65, %63 ], [ %31, %30 ]
  %34 = phi %"struct.blink::UserAgentBrandVersion"* [ %64, %63 ], [ %25, %30 ]
  %35 = bitcast %"struct.blink::UserAgentBrandVersion"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.blink::UserAgentBrandVersion"* %33 to i8*
  %41 = bitcast %"struct.blink::UserAgentBrandVersion"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #13
  br label %48

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47) #13
  br label %48

48:                                               ; preds = %42, %39
  %49 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #13
  br label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %60, i64 %62) #13
  br label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 1
  %65 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 1
  %66 = icmp eq %"struct.blink::UserAgentBrandVersion"* %64, %26
  br i1 %66, label %67, label %32

67:                                               ; preds = %63
  %68 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %65 to i64
  br label %69

69:                                               ; preds = %16, %67
  %70 = phi i64 [ %28, %16 ], [ %68, %67 ]
  store i64 %70, i64* %27, align 8
  br label %71

71:                                               ; preds = %2, %69
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.2696"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #13
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !4

20:                                               ; preds = %11
  tail call void @llvm.trap() #13
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #13
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %33
  tail call void @llvm.trap() #13
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField.267"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.267"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.267"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !3
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.495"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.267"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.267", %"class.blink::InspectorAgentState::SimpleField.267"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev(%"class.blink::InspectorAgentState::SimpleField.268"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.268"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.268"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.268", %"class.blink::InspectorAgentState::SimpleField.268"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8* %25, i64 %28, i32* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev(%"class.blink::InspectorAgentState::SimpleField.293"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.293"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.293"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.293", %"class.blink::InspectorAgentState::SimpleField.293"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8* %25, i64 %28, double* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8*, i64, double*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState9SerializeERKNSt3__16vectorIhNS1_9allocatorIhEEEEPNS_9WebVectorIhEE(%"class.std::__1::vector"* dereferenceable(24), %"class.blink::WebVector.495"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #13
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #13
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #15
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #16
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #15
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #13
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.335"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.335"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.335"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.335"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.335", %"class.WTF::Vector.335"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.335"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.335"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.335"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #13
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !4

122:                                              ; preds = %113
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.26, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.271"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.274"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.274"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.274"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.274"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.274"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.274"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } undef, %"struct.WTF::KeyValuePair.274"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %77, %"struct.WTF::KeyValuePair.274"* %76, 1
  ret { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Emulation12MediaFeatureENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.2552"*, %"class.std::__1::unique_ptr.2554"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2554"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2552"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2552"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2554"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2554"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2554"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2554"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2554"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2554"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2554"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2552", %"class.std::__1::vector.2552"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2554"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2554"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Emulation::MediaFeature"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2554"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2554"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2554"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2554"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !75

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2554"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2554"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2554"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2554"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2554"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2554"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2554"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2554"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2554"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2554"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2554"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2554"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2554"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2554"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2554"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2554"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2554"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2554"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2554"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2554"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2554"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2554"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2554"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2554"*, %"class.std::__1::unique_ptr.2554"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2554"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2554"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2554"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2554"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2554"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2554"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2554", %"class.std::__1::unique_ptr.2554"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Emulation::MediaFeature"*, %"class.blink::protocol::Emulation::MediaFeature"** %142, align 8
  store %"class.blink::protocol::Emulation::MediaFeature"* null, %"class.blink::protocol::Emulation::MediaFeature"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Emulation::MediaFeature"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Emulation::MediaFeature"* %143 to void (%"class.blink::protocol::Emulation::MediaFeature"*)***
  %147 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)**, void (%"class.blink::protocol::Emulation::MediaFeature"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Emulation::MediaFeature"*)*, void (%"class.blink::protocol::Emulation::MediaFeature"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Emulation::MediaFeature"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2554"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"*, %"class.std::__1::vector"*) unnamed_addr #3

declare { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN5blink8protocol3DOM4RGBA23deserializer_descriptorEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"*, %"class.crdtp::DeserializerState"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.495"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2883"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2883"*, i16*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32, %"class.blink::WebVector.495"*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.495"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.2696", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.271"* %6, %"class.WTF::String"* dereferenceable(8) %1) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.270", %"class.WTF::HashMap.270"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.274"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.271"* %6, %"struct.WTF::KeyValuePair.274"* %8) #13
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"class.WTF::StringAppend.2696"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #13
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %30
  tail call void @llvm.trap() #13
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.495"* null) #13
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.271"*, %"struct.WTF::KeyValuePair.274"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %18, %15, %2
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = bitcast %"struct.WTF::KeyValuePair.274"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  %41 = and i32 %40, 2147483647
  %42 = and i32 %39, -2147483648
  %43 = or i32 %41, %42
  store i32 %43, i32* %38, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = mul i32 %46, 6
  %48 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %47, %49
  %51 = icmp ugt i32 %49, 8
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %36
  %54 = lshr i32 %49, 1
  %55 = zext i32 %54 to i64
  %56 = shl nuw nsw i64 %55, 4
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %56, i1 false) #13
  %58 = bitcast i8* %57 to %"struct.WTF::KeyValuePair.274"*
  %59 = tail call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* %58, i32 %54, %"struct.WTF::KeyValuePair.274"* null) #13
  br label %60

60:                                               ; preds = %53, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.271"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.274"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.274"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.274"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.274"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.274"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.274"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } undef, %"struct.WTF::KeyValuePair.274"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %77, %"struct.WTF::KeyValuePair.274"* %76, 1
  ret { %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.274"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.271"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.274"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* null)
  %9 = load %"struct.WTF::KeyValuePair.274"*, %"struct.WTF::KeyValuePair.274"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.274"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.274"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.274"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.274"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.274"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.274"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.274"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.274"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.274"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.271", %"class.WTF::HashTable.271"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.274"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.271"* %0, %"struct.WTF::KeyValuePair.274"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.274"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } undef, %"struct.WTF::KeyValuePair.274"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.274"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.274"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.274"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.274"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.274", %"struct.WTF::KeyValuePair.274"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #13
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %53
  tail call void @llvm.trap() #13
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #13
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

declare void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double, %"class.blink::WebVector.495"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorEmulationAgent"**
  %4 = load %"class.blink::InspectorEmulationAgent"*, %"class.blink::InspectorEmulationAgent"** %3, align 8
  %5 = icmp eq %"class.blink::InspectorEmulationAgent"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::InspectorEmulationAgent", %"class.blink::InspectorEmulationAgent"* %4, i64 -1, i32 31, i32 3, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::InspectorEmulationAgent"* null, %"class.blink::InspectorEmulationAgent"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !4

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::InspectorEmulationAgent"**
  %4 = load %"class.blink::InspectorEmulationAgent"*, %"class.blink::InspectorEmulationAgent"** %3, align 8
  %5 = icmp eq %"class.blink::InspectorEmulationAgent"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::InspectorEmulationAgent"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::InspectorEmulationAgent"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::InspectorEmulationAgent"*)**
  %24 = load void (%"class.blink::InspectorEmulationAgent"*)*, void (%"class.blink::InspectorEmulationAgent"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::InspectorEmulationAgent"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::InspectorEmulationAgent"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::InspectorEmulationAgent"* %15) #13
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent.2592"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent.2592"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !4

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #13
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2593"**
  store %"class.blink::PersistentBase.2593"* %11, %"class.blink::PersistentBase.2593"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23InspectorEmulationAgentELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !4

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::InspectorEmulationAgent"**
  %6 = load %"class.blink::InspectorEmulationAgent"*, %"class.blink::InspectorEmulationAgent"** %5, align 8
  %7 = icmp eq %"class.blink::InspectorEmulationAgent"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.237"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DocumentLoaderEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.240"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.240"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DocumentLoaderEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.30, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.32, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #13
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %34, i8* %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !4

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #13
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.240"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.240"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DocumentLoaderEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DocumentLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentLoader"*
  %4 = bitcast i8* %1 to void (%"class.blink::DocumentLoader"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DocumentLoader"*, %"class.blink::Visitor"*)**, void (%"class.blink::DocumentLoader"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::DocumentLoader"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentLoader"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::DocumentLoader"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.2594"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2594", %"class.WTF::StringAppend.2594"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1022"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1022"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #13
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  tail call void @llvm.trap() #13
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #13
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1022"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1022"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1022"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #13
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1022"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1022", align 8
  %6 = bitcast %"class.WTF::HashTable.1022"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1022"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1022"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1022"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.1022"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1022"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1022"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #13
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #13
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1022"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1022", %"class.WTF::HashTable.1022"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21UserAgentBrandVersionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.280"*, %"struct.blink::UserAgentBrandVersion"* dereferenceable(48)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::UserAgentBrandVersion"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.280"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.280"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::UserAgentBrandVersion"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.blink::UserAgentBrandVersion"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::UserAgentBrandVersion"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %35 to i64
  %37 = bitcast %"struct.blink::UserAgentBrandVersion"* %34 to i8*
  %38 = bitcast %"struct.blink::UserAgentBrandVersion"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  %43 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %34, i64 1
  %44 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.280", %"class.std::__1::vector.280"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %45, align 8
  %47 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %3, align 8
  %48 = icmp eq %"struct.blink::UserAgentBrandVersion"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.blink::UserAgentBrandVersion"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.blink::UserAgentBrandVersion"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %53, i64 -1
  %56 = bitcast %"struct.blink::UserAgentBrandVersion"* %54 to i8*
  %57 = bitcast %"struct.blink::UserAgentBrandVersion"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %53, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #13
  %62 = icmp eq %"struct.blink::UserAgentBrandVersion"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.blink::UserAgentBrandVersion"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.blink::UserAgentBrandVersion"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.blink::UserAgentBrandVersion"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.blink::UserAgentBrandVersion"*
  %72 = icmp eq %"struct.blink::UserAgentBrandVersion"* %67, %71
  br i1 %72, label %94, label %73

73:                                               ; preds = %66, %92
  %74 = phi %"struct.blink::UserAgentBrandVersion"* [ %75, %92 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %74, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %81, %73
  %85 = bitcast %"struct.blink::UserAgentBrandVersion"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %89, %84
  %93 = icmp eq %"struct.blink::UserAgentBrandVersion"* %75, %71
  br i1 %93, label %94, label %73

94:                                               ; preds = %92, %66
  %95 = icmp eq i64 %69, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

declare void @_ZN5blink18TimeZoneController21ClearTimeZoneOverrideEv() local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.237"*, %"class.blink::DocumentLoader"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 %18
  %20 = bitcast %"class.blink::DocumentLoader"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.240"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %8, align 8
  %10 = icmp eq %"class.blink::Member.240"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DocumentLoaderEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DocumentLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %8, align 8
  %26 = icmp eq %"class.blink::Member.240"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.240"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DocumentLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.237"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WebLocalFrameImplEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebLocalFrameImpl"*
  tail call void @_ZNK5blink17WebLocalFrameImpl5TraceEPNS_7VisitorE(%"class.blink::WebLocalFrameImpl"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink17WebLocalFrameImpl5TraceEPNS_7VisitorE(%"class.blink::WebLocalFrameImpl"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField.294"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.2696", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::HashMap.295", %"class.WTF::HashMap.295"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.296"* %6, %"class.WTF::String"* dereferenceable(8) %1) #13
  %8 = extractvalue { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.295", %"class.WTF::HashMap.295"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.299"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.296"* %6, %"struct.WTF::KeyValuePair.299"* %8) #13
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = bitcast %"class.WTF::StringAppend.2696"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.294", %"class.blink::InspectorAgentState::MapField.294"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #13
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %30
  tail call void @llvm.trap() #13
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.2696"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.495"* null) #13
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #13
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.296"*, %"struct.WTF::KeyValuePair.299"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.299"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #13
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.299"*
  %42 = tail call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* %41, i32 %37, %"struct.WTF::KeyValuePair.299"* null) #13
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.296"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.299"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.299"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.299"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.299"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.299"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.299"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } undef, %"struct.WTF::KeyValuePair.299"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } %77, %"struct.WTF::KeyValuePair.299"* %76, 1
  ret { %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.299"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.296"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.299"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* null)
  %9 = load %"struct.WTF::KeyValuePair.299"*, %"struct.WTF::KeyValuePair.299"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.299"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.299"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.299"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.299"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.299"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.299"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.299"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.299"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.299"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.299", %"struct.WTF::KeyValuePair.299"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !3
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.296", %"class.WTF::HashTable.296"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.299"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.296"* %0, %"struct.WTF::KeyValuePair.299"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.299"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } undef, %"struct.WTF::KeyValuePair.299"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.299"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.299"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.2696"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.2696", %"class.WTF::StringAppend.2696"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %31, i8* %32) #13
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  ret i32 %24
}

declare void @_ZN5blink8protocol9Emulation10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Emulation::Backend"*) local_unnamed_addr #3

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_: argument 0"}
!7 = distinct !{!7, !"_ZNO4absl8optionalINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8value_orIS7_EES7_OT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd: argument 0"}
!10 = distinct !{!10, !"_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink23InspectorEmulationAgent20resetPageScaleFactorEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink23InspectorEmulationAgent20resetPageScaleFactorEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink23InspectorEmulationAgent18setPageScaleFactorEd: argument 0"}
!16 = distinct !{!16, !"_ZN5blink23InspectorEmulationAgent18setPageScaleFactorEd"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd: argument 0"}
!19 = distinct !{!19, !"_ZN5blink23InspectorEmulationAgent20setCPUThrottlingRateEd"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink18WrapWeakPersistentINS_23InspectorEmulationAgentEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink18WrapWeakPersistentINS_23InspectorEmulationAgentEEENS_14WeakPersistentIT_EEPS3_"}
!23 = !{!24, !26, !28}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23InspectorEmulationAgentEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIMN5blink23InspectorEmulationAgentEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIMN5blink23InspectorEmulationAgentEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!28 = distinct !{!28, !29, !"_ZN3WTF4BindIMN5blink23InspectorEmulationAgentEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF4BindIMN5blink23InspectorEmulationAgentEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE: argument 0"}
!32 = distinct !{!32, !"_ZN5blink23InspectorEmulationAgent21setNavigatorOverridesERKN3WTF6StringE"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.isvectorized", i32 1}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.unroll.disable"}
!42 = distinct !{!42, !39}
!43 = !{!44}
!44 = distinct !{!44, !45}
!45 = distinct !{!45, !"LVerDomain"}
!46 = !{!47}
!47 = distinct !{!47, !45}
!48 = distinct !{!48, !39}
!49 = distinct !{!49, !41}
!50 = distinct !{!50, !39}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !39}
!57 = distinct !{!57, !41}
!58 = distinct !{!58, !39}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !39}
!65 = distinct !{!65, !41}
!66 = distinct !{!66, !39}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !39}
!73 = distinct !{!73, !41}
!74 = distinct !{!74, !39}
!75 = distinct !{!75, !41}
