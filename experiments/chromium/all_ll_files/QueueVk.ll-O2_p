; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/QueueVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/QueueVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::Queue" = type { %"class.dawn_native::QueueBase" }
%"class.dawn_native::QueueBase" = type { %"class.dawn_native::ObjectBase", %class.SerialQueue.56 }
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.2", %class.Ref.8, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.27", %class.Ref.33, %"class.std::__1::unique_ptr.35", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.8 = type { %class.RefBase.9 }
%class.RefBase.9 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type { %"class.std::__1::vector", %class.SerialQueue, %"class.dawn_native::DeviceBase"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::unique_ptr.13" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::unique_ptr.13"* }
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.33 = type { %class.RefBase.34 }
%class.RefBase.34 = type { %"class.dawn_native::QueueBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.41" }
%"struct.std::__1::array.41" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.42" }
%"class.std::__1::bitset.42" = type { %"class.std::__1::__bitset.43" }
%"class.std::__1::__bitset.43" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%class.SerialQueue.56 = type { %class.SerialStorage.57 }
%class.SerialStorage.57 = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.std::__1::pair.60"*, %"struct.std::__1::pair.60"*, %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::pair.60" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::pair.60"* }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue.96, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::queue", %"class.std::__1::vector.147", %class.SerialQueue.154, %"class.std::__1::vector.164", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.82", %"class.std::__1::vector.89" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.66" }
%"class.std::__1::bitset.66" = type { %"class.std::__1::__bitset.67" }
%"class.std::__1::__bitset.67" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue.96 = type { %class.SerialStorage.97 }
%class.SerialStorage.97 = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.std::__1::pair.100"*, %"struct.std::__1::pair.100"*, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::pair.100" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::pair.100"* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.142" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.136"**, %"struct.std::__1::pair.136"**, %"struct.std::__1::pair.136"**, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::pair.136" = type opaque
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::pair.136"** }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { i64 }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.149" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.154 = type { %class.SerialStorage.155 }
%class.SerialStorage.155 = type { %"class.std::__1::vector.156" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.std::__1::pair.158"*, %"struct.std::__1::pair.158"*, %"class.std::__1::__compressed_pair.159" }
%"struct.std::__1::pair.158" = type opaque
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::pair.158"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.167" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.166", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.166" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.172", %"class.std::__1::vector.172", %"class.std::__1::vector.180", %"class.dawn_native::vulkan::detail::VkHandle.166", i8, [7 x i8] }>
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.dawn_native::vulkan::detail::VkHandle.174"*, %"class.dawn_native::vulkan::detail::VkHandle.174"*, %"class.std::__1::__compressed_pair.175" }
%"class.dawn_native::vulkan::detail::VkHandle.174" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.dawn_native::vulkan::detail::VkHandle.174"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %class.Ref.182*, %class.Ref.182*, %"class.std::__1::__compressed_pair.183" }
%class.Ref.182 = type opaque
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.Ref.182* }
%class.Result = type { %"class.std::__1::unique_ptr.296" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.304" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.306" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn_native::CommandBufferBase" = type <{ %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %"struct.dawn_native::CommandBufferResourceUsage", i8, [7 x i8] }>
%"class.dawn_native::CommandIterator" = type <{ %"class.std::__1::vector.188", i8*, i64, i32, [4 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"*, %"class.std::__1::__compressed_pair.190" }
%"struct.dawn_native::BlockDef" = type { i64, i8* }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.dawn_native::BlockDef"* }
%"struct.dawn_native::CommandBufferResourceUsage" = type { %"class.std::__1::vector.195", %"class.std::__1::vector.255", %"class.std::__1::set", %"class.std::__1::set.271", %"class.std::__1::set.286" }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.dawn_native::RenderPassResourceUsage"*, %"struct.dawn_native::RenderPassResourceUsage"*, %"class.std::__1::__compressed_pair.250" }
%"struct.dawn_native::RenderPassResourceUsage" = type { %"struct.dawn_native::SyncScopeResourceUsage", %"class.std::__1::vector.236", %"class.std::__1::vector.243" }
%"struct.dawn_native::SyncScopeResourceUsage" = type { %"class.std::__1::vector.197", %"class.std::__1::vector.210", %"class.std::__1::vector.217", %"class.std::__1::vector.229" }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.dawn_native::BufferBase"**, %"class.dawn_native::BufferBase"**, %"class.std::__1::__compressed_pair.205" }
%"class.dawn_native::BufferBase" = type { %"class.dawn_native::ObjectBase", i64, i32, i32, i8, %"class.std::__1::unique_ptr.199", void (i32, i8*)*, i8*, i64, i32, i64, i64 }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.dawn_native::StagingBufferBase"* }
%"class.dawn_native::StagingBufferBase" = type { i32 (...)**, i8*, i64 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.dawn_native::BufferBase"** }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { i32*, i32*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { i32* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.dawn_native::TextureBase"**, %"class.dawn_native::TextureBase"**, %"class.std::__1::__compressed_pair.224" }
%"class.dawn_native::TextureBase" = type { %"class.dawn_native::ObjectBase", i32, %"struct.dawn_native::Format"*, %"struct.dawn_native::Extent3D", i32, i32, i32, i32, %"class.std::__1::vector.219" }
%"struct.dawn_native::Extent3D" = type { i32, i32, i32 }
%"class.std::__1::vector.219" = type { i64*, i64, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.dawn_native::TextureBase"** }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.dawn_native::SubresourceStorage"*, %"class.dawn_native::SubresourceStorage"*, %"class.std::__1::__compressed_pair.231" }
%"class.dawn_native::SubresourceStorage" = type opaque
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.dawn_native::SubresourceStorage"* }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"class.dawn_native::QuerySetBase"**, %"class.dawn_native::QuerySetBase"**, %"class.std::__1::__compressed_pair.238" }
%"class.dawn_native::QuerySetBase" = type opaque
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.dawn_native::QuerySetBase"** }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.std::__1::vector.219"*, %"class.std::__1::vector.219"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::vector.219"* }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.dawn_native::RenderPassResourceUsage"* }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"struct.dawn_native::ComputePassResourceUsage"*, %"struct.dawn_native::ComputePassResourceUsage"*, %"class.std::__1::__compressed_pair.281" }
%"struct.dawn_native::ComputePassResourceUsage" = type { %"class.std::__1::vector.257", %"class.std::__1::set", %"class.std::__1::set.271" }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.dawn_native::SyncScopeResourceUsage"*, %"struct.dawn_native::SyncScopeResourceUsage"*, %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.dawn_native::SyncScopeResourceUsage"* }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.dawn_native::ComputePassResourceUsage"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::set.271" = type { %"class.std::__1::__tree.272" }
%"class.std::__1::__tree.272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::set.286" = type { %"class.std::__1::__tree.287" }
%"class.std::__1::__tree.287" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.dawn_platform::Platform" = type { i32 (...)** }
%"class.dawn_native::vulkan::CommandBuffer" = type { %"class.dawn_native::CommandBufferBase.base", [7 x i8] }
%"class.dawn_native::CommandBufferBase.base" = type <{ %"class.dawn_native::ObjectBase", %"class.dawn_native::CommandIterator", %"struct.dawn_native::CommandBufferResourceUsage", i8 }>
%"struct.dawn_native::ImageCopyTexture" = type <{ %"struct.dawn_native::ChainedStruct"*, %"class.dawn_native::TextureBase"*, i32, %"struct.dawn_native::Origin3D", i32, [4 x i8] }>
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%"struct.dawn_native::TextureDataLayout" = type { %"struct.dawn_native::ChainedStruct"*, i64, i32, i32 }

@_ZTVN11dawn_native6vulkan5QueueE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::vulkan::Queue"*)* @_ZN11dawn_native6vulkan5QueueD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::vulkan::Queue"*)* @_ZN11dawn_native6vulkan5QueueD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::vulkan::Queue"*, i32, %"class.dawn_native::CommandBufferBase"**)* @_ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::QueueBase"*, %"class.dawn_native::BufferBase"*, i64, i8*, i64)* @_ZN11dawn_native9QueueBase15WriteBufferImplEPNS_10BufferBaseEmPKvm to i8*), i8* bitcast (void (%class.Result*, %"class.dawn_native::QueueBase"*, %"struct.dawn_native::ImageCopyTexture"*, i8*, %"struct.dawn_native::TextureDataLayout"*, %"struct.dawn_native::Extent3D"*)* @_ZN11dawn_native9QueueBase16WriteTextureImplERKNS_16ImageCopyTextureEPKvRKNS_17TextureDataLayoutERKNS_8Extent3DE to i8*)] }, align 8
@.str = private unnamed_addr constant [58 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/QueueVk.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE = private unnamed_addr constant [11 x i8] c"SubmitImpl\00", align 1
@_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic47 = internal unnamed_addr global i8* null, align 8
@.str.1 = private unnamed_addr constant [32 x i8] c"CommandBufferVk::RecordCommands\00", align 1
@_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic52 = internal unnamed_addr global i8* null, align 8

@_ZN11dawn_native6vulkan5QueueC1EPNS0_6DeviceE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::Queue"*, %"class.dawn_native::vulkan::Device"*), void (%"class.dawn_native::vulkan::Queue"*, %"class.dawn_native::vulkan::Device"*)* @_ZN11dawn_native6vulkan5QueueC2EPNS0_6DeviceE
@_ZN11dawn_native6vulkan5QueueD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::Queue"*), void (%"class.dawn_native::vulkan::Queue"*)* @_ZN11dawn_native6vulkan5QueueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.dawn_native::vulkan::Queue"* @_ZN11dawn_native6vulkan5Queue6CreateEPNS0_6DeviceE(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #6
  %3 = bitcast i8* %2 to %"class.dawn_native::vulkan::Queue"*
  %4 = bitcast i8* %2 to %"class.dawn_native::QueueBase"*
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native9QueueBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::QueueBase"* nonnull %4, %"class.dawn_native::DeviceBase"* %5) #7
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN11dawn_native6vulkan5QueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret %"class.dawn_native::vulkan::Queue"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan5QueueC2EPNS0_6DeviceE(%"class.dawn_native::vulkan::Queue"*, %"class.dawn_native::vulkan::Device"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::Queue", %"class.dawn_native::vulkan::Queue"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %1, i64 0, i32 0
  tail call void @_ZN11dawn_native9QueueBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::QueueBase"* %3, %"class.dawn_native::DeviceBase"* %4) #7
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::Queue", %"class.dawn_native::vulkan::Queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN11dawn_native6vulkan5QueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN11dawn_native9QueueBaseC2EPNS_10DeviceBaseE(%"class.dawn_native::QueueBase"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11dawn_native9QueueBaseD2Ev(%"class.dawn_native::QueueBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan5QueueD2Ev(%"class.dawn_native::vulkan::Queue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Queue", %"class.dawn_native::vulkan::Queue"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native9QueueBaseD2Ev(%"class.dawn_native::QueueBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan5QueueD0Ev(%"class.dawn_native::vulkan::Queue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::Queue", %"class.dawn_native::vulkan::Queue"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native9QueueBaseD2Ev(%"class.dawn_native::QueueBase"* %2) #7
  %3 = bitcast %"class.dawn_native::vulkan::Queue"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Queue"*, i32, %"class.dawn_native::CommandBufferBase"** nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %class.Result, align 8
  %6 = alloca %class.Result, align 8
  %7 = alloca %class.Result, align 8
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::Queue", %"class.dawn_native::vulkan::Queue"* %1, i64 0, i32 0, i32 0
  %9 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #7
  %10 = bitcast %"class.dawn_native::DeviceBase"* %9 to %"class.dawn_native::vulkan::Device"*
  %11 = bitcast %class.Result* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %12, align 8
  call void @_ZN11dawn_native10DeviceBase4TickEv(%class.Result* nonnull sret %5, %"class.dawn_native::DeviceBase"* %9) #7
  %13 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %12, align 8
  %14 = icmp eq %"class.dawn_native::ErrorData"* %13, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %12, align 8
  br i1 %14, label %41, label %15, !prof !2

15:                                               ; preds = %4
  %16 = ptrtoint %"class.dawn_native::ErrorData"* %13 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %13, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE, i64 0, i64 0), i32 44) #7
  %17 = bitcast %class.Result* %0 to i64*
  store i64 %16, i64* %17, align 8
  %18 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %12, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %12, align 8
  %19 = icmp eq %"class.dawn_native::ErrorData"* %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 2, i32 0, i32 0
  %22 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %21, align 8
  %23 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %22 to i64
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %22 to i8*
  call void @_ZdlPv(i8* %28) #6
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %18, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #6
  br label %38

38:                                               ; preds = %35, %29
  %39 = bitcast %"class.dawn_native::ErrorData"* %18 to i8*
  call void @_ZdlPv(i8* %39) #6
  br label %40

40:                                               ; preds = %15, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %149

41:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  %42 = load i8*, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic47, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #7
  %46 = call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %45) #7
  %47 = call i8* @_ZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryE(%"class.dawn_platform::Platform"* %46, i32 2) #7
  store i8* %47, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic47, align 8
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi i8* [ %42, %41 ], [ %47, %44 ]
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #7
  %54 = call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %53) #7
  %55 = load i8*, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic47, align 8
  %56 = call i64 @_ZN13dawn_platform7tracing13AddTraceEventEPNS_8PlatformEcPKhPKcmiPS6_S4_PKmh(%"class.dawn_platform::Platform"* %54, i8 signext 66, i8* %55, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #7
  br label %57

57:                                               ; preds = %48, %52
  %58 = call %"struct.dawn_native::vulkan::CommandRecordingContext"* @_ZN11dawn_native6vulkan6Device26GetPendingRecordingContextEv(%"class.dawn_native::vulkan::Device"* %10) #7
  %59 = icmp eq i32 %2, 0
  br i1 %59, label %100, label %60

60:                                               ; preds = %57
  %61 = bitcast %class.Result* %6 to i8*
  %62 = getelementptr inbounds %class.Result, %class.Result* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = zext i32 %2 to i64
  br label %64

64:                                               ; preds = %96, %60
  %65 = phi i64 [ 0, %60 ], [ %97, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #7
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %62, align 8
  %66 = getelementptr inbounds %"class.dawn_native::CommandBufferBase"*, %"class.dawn_native::CommandBufferBase"** %3, i64 %65
  %67 = bitcast %"class.dawn_native::CommandBufferBase"** %66 to %"class.dawn_native::vulkan::CommandBuffer"**
  %68 = load %"class.dawn_native::vulkan::CommandBuffer"*, %"class.dawn_native::vulkan::CommandBuffer"** %67, align 8
  call void @_ZN11dawn_native6vulkan13CommandBuffer14RecordCommandsEPNS0_23CommandRecordingContextE(%class.Result* nonnull sret %6, %"class.dawn_native::vulkan::CommandBuffer"* %68, %"struct.dawn_native::vulkan::CommandRecordingContext"* %58) #7
  %69 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %62, align 8
  %70 = icmp eq %"class.dawn_native::ErrorData"* %69, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %62, align 8
  br i1 %70, label %96, label %71, !prof !2

71:                                               ; preds = %64
  %72 = ptrtoint %"class.dawn_native::ErrorData"* %69 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %69, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE, i64 0, i64 0), i32 50) #7
  %73 = bitcast %class.Result* %0 to i64*
  store i64 %72, i64* %73, align 8
  %74 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %62, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %62, align 8
  %75 = icmp eq %"class.dawn_native::ErrorData"* %74, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 2, i32 0, i32 0
  %78 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %77, align 8
  %79 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %78 to i64
  %82 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 2, i32 0, i32 1
  %83 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %78 to i8*
  call void @_ZdlPv(i8* %84) #6
  br label %85

85:                                               ; preds = %80, %76
  %86 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %74, i64 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #6
  br label %94

94:                                               ; preds = %91, %85
  %95 = bitcast %"class.dawn_native::ErrorData"* %74 to i8*
  call void @_ZdlPv(i8* %95) #6
  br label %99

96:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  %97 = add nuw nsw i64 %65, 1
  %98 = icmp eq i64 %97, %63
  br i1 %98, label %100, label %64

99:                                               ; preds = %71, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  br label %149

100:                                              ; preds = %96, %57
  %101 = load i8*, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic52, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #7
  %105 = call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %104) #7
  %106 = call i8* @_ZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryE(%"class.dawn_platform::Platform"* %105, i32 2) #7
  store i8* %106, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic52, align 8
  br label %107

107:                                              ; preds = %100, %103
  %108 = phi i8* [ %101, %100 ], [ %106, %103 ]
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %8) #7
  %113 = call %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"* %112) #7
  %114 = load i8*, i8** @_ZZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseEE30trace_event_unique_catstatic52, align 8
  %115 = call i64 @_ZN13dawn_platform7tracing13AddTraceEventEPNS_8PlatformEcPKhPKcmiPS6_S4_PKmh(%"class.dawn_platform::Platform"* %113, i8 signext 69, i8* %114, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #7
  br label %116

116:                                              ; preds = %107, %111
  %117 = bitcast %class.Result* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #7
  %118 = getelementptr inbounds %class.Result, %class.Result* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %118, align 8
  call void @_ZN11dawn_native6vulkan6Device21SubmitPendingCommandsEv(%class.Result* nonnull sret %7, %"class.dawn_native::vulkan::Device"* %10) #7
  %119 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %118, align 8
  %120 = icmp eq %"class.dawn_native::ErrorData"* %119, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %118, align 8
  br i1 %120, label %147, label %121, !prof !2

121:                                              ; preds = %116
  %122 = ptrtoint %"class.dawn_native::ErrorData"* %119 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %119, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6vulkan5Queue10SubmitImplEjPKPNS_17CommandBufferBaseE, i64 0, i64 0), i32 54) #7
  %123 = bitcast %class.Result* %0 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %118, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %118, align 8
  %125 = icmp eq %"class.dawn_native::ErrorData"* %124, null
  br i1 %125, label %146, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %124, i64 0, i32 2, i32 0, i32 0
  %128 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %127, align 8
  %129 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %128 to i64
  %132 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %124, i64 0, i32 2, i32 0, i32 1
  %133 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %128 to i8*
  call void @_ZdlPv(i8* %134) #6
  br label %135

135:                                              ; preds = %130, %126
  %136 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %124, i64 0, i32 1
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #6
  br label %144

144:                                              ; preds = %141, %135
  %145 = bitcast %"class.dawn_native::ErrorData"* %124 to i8*
  call void @_ZdlPv(i8* %145) #6
  br label %146

146:                                              ; preds = %121, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #7
  br label %149

147:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #7
  %148 = bitcast %class.Result* %0 to i64*
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %99, %147, %146, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN11dawn_native10DeviceBase4TickEv(%class.Result* sret, %"class.dawn_native::DeviceBase"*) local_unnamed_addr #2

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #2

declare i8* @_ZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryE(%"class.dawn_platform::Platform"*, i32) local_unnamed_addr #2

declare %"class.dawn_platform::Platform"* @_ZNK11dawn_native10DeviceBase11GetPlatformEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #2

declare %"struct.dawn_native::vulkan::CommandRecordingContext"* @_ZN11dawn_native6vulkan6Device26GetPendingRecordingContextEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

declare void @_ZN11dawn_native6vulkan13CommandBuffer14RecordCommandsEPNS0_23CommandRecordingContextE(%class.Result* sret, %"class.dawn_native::vulkan::CommandBuffer"*, %"struct.dawn_native::vulkan::CommandRecordingContext"*) local_unnamed_addr #2

declare void @_ZN11dawn_native6vulkan6Device21SubmitPendingCommandsEv(%class.Result* sret, %"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #2

declare void @_ZN11dawn_native9QueueBase15WriteBufferImplEPNS_10BufferBaseEmPKvm(%class.Result* sret, %"class.dawn_native::QueueBase"*, %"class.dawn_native::BufferBase"*, i64, i8*, i64) unnamed_addr #2

declare void @_ZN11dawn_native9QueueBase16WriteTextureImplERKNS_16ImageCopyTextureEPKvRKNS_17TextureDataLayoutERKNS_8Extent3DE(%class.Result* sret, %"class.dawn_native::QueueBase"*, %"struct.dawn_native::ImageCopyTexture"* dereferenceable(40), i8*, %"struct.dawn_native::TextureDataLayout"* dereferenceable(24), %"struct.dawn_native::Extent3D"* dereferenceable(12)) unnamed_addr #2

declare i64 @_ZN13dawn_platform7tracing13AddTraceEventEPNS_8PlatformEcPKhPKcmiPS6_S4_PKmh(%"class.dawn_platform::Platform"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
