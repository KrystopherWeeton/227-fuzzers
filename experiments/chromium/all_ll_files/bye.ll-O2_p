; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/bye.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/bye.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::rtcp::Bye" = type { %"class.webrtc::rtcp::RtcpPacket.base", %"class.std::__1::vector", %"class.std::__1::basic_string" }
%"class.webrtc::rtcp::RtcpPacket.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::rtcp::CommonHeader" = type { i8, i8, i8, i32, i8* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.webrtc::rtcp::RtcpPacket" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@_ZN6webrtc4rtcp3Bye11kPacketTypeE = hidden local_unnamed_addr constant i8 -53, align 1
@_ZTVN6webrtc4rtcp3ByeE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::Bye"*)* @_ZN6webrtc4rtcp3ByeD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Bye"*)* @_ZN6webrtc4rtcp3ByeD0Ev to i8*), i8* bitcast (i64 (%"class.webrtc::rtcp::Bye"*)* @_ZNK6webrtc4rtcp3Bye11BlockLengthEv to i8*), i8* bitcast (i1 (%"class.webrtc::rtcp::Bye"*, i8*, i64*, i64, i8*, {}*)* @_ZNK6webrtc4rtcp3Bye6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [68 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/bye.cc\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"Packet is too small to contain CSRCs it promise to have.\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Invalid reason length: \00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Too many CSRCs for Bye packet.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc4rtcp3ByeC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Bye"*), void (%"class.webrtc::rtcp::Bye"*)* @_ZN6webrtc4rtcp3ByeC2Ev
@_ZN6webrtc4rtcp3ByeD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Bye"*), void (%"class.webrtc::rtcp::Bye"*)* @_ZN6webrtc4rtcp3ByeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp3ByeC2Ev(%"class.webrtc::rtcp::Bye"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp3ByeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp3ByeD2Ev(%"class.webrtc::rtcp::Bye"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp3ByeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp3ByeD0Ev(%"class.webrtc::rtcp::Bye"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp3ByeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.webrtc::rtcp::Bye"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp3Bye5ParseERKNS0_12CommonHeaderE(%"class.webrtc::rtcp::Bye"*, %"class.webrtc::rtcp::CommonHeader"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = zext i8 %7 to i32
  %12 = shl nuw nsw i32 %11, 2
  %13 = zext i32 %12 to i64
  %14 = icmp ult i32 %9, %12
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %16) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 48, i32 2, i32 0, i32 0) #11
  %17 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i64 56) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %16) #11
  br label %154

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ugt i32 %9, %12
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %22, i64 %13
  %26 = load i8, i8* %25, align 1
  %27 = sub nsw i64 %10, %13
  %28 = zext i8 %26 to i64
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %31) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 58, i32 2, i32 0, i32 0) #11
  %32 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %32 to %"class.std::__1::basic_ostream"*
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %26, i8* %3, align 1
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* nonnull %3, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %31) #11
  br label %154

36:                                               ; preds = %24, %20
  %37 = phi i8 [ %26, %24 ], [ 0, %20 ]
  %38 = icmp eq i8 %7, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %42 = bitcast %"class.std::__1::vector"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  br label %114

46:                                               ; preds = %36
  %47 = load i8, i8* %22, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw i32 %48, 24
  %50 = getelementptr inbounds i8, i8* %22, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 16
  %54 = or i32 %53, %49
  %55 = getelementptr inbounds i8, i8* %22, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %54, %58
  %60 = getelementptr inbounds i8, i8* %22, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = or i32 %59, %62
  %64 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 1
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %66 = add nsw i32 %11, -1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %69 = bitcast i32** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector"* %65 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 2
  %75 = icmp ult i64 %74, %67
  %76 = inttoptr i64 %72 to i32*
  br i1 %75, label %77, label %79

77:                                               ; preds = %46
  %78 = sub nsw i64 %67, %74
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"* %65, i64 %78) #11
  br label %83

79:                                               ; preds = %46
  %80 = icmp ugt i64 %74, %67
  br i1 %80, label %81, label %83

81:                                               ; preds = %79
  %82 = getelementptr inbounds i32, i32* %76, i64 %67
  store i32* %82, i32** %68, align 8
  br label %83

83:                                               ; preds = %77, %79, %81
  %84 = zext i8 %7 to i64
  %85 = icmp ugt i8 %7, 1
  br i1 %85, label %86, label %114

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %65, i64 0, i32 0, i32 0
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 1, %86 ], [ %112, %88 ]
  %90 = shl i64 %89, 2
  %91 = getelementptr inbounds i8, i8* %22, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = getelementptr inbounds i8, i8* %91, i64 1
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 16
  %99 = or i32 %98, %94
  %100 = getelementptr inbounds i8, i8* %91, i64 2
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 8
  %104 = or i32 %99, %103
  %105 = getelementptr inbounds i8, i8* %91, i64 3
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = or i32 %104, %107
  %109 = add nsw i64 %89, -1
  %110 = load i32*, i32** %87, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 %109
  store i32 %108, i32* %111, align 4
  %112 = add nuw nsw i64 %89, 1
  %113 = icmp eq i64 %112, %84
  br i1 %113, label %114, label %88

114:                                              ; preds = %88, %83, %39
  %115 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  br i1 %23, label %116, label %143

116:                                              ; preds = %114
  %117 = or i32 %12, 1
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %22, i64 %118
  %120 = zext i8 %37 to i64
  %121 = tail call i1 @llvm.is.constant.i64(i64 %120) #11
  %122 = icmp ult i8 %37, 23
  %123 = and i1 %122, %121
  br i1 %123, label %124, label %141

124:                                              ; preds = %116
  %125 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %120, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  br label %135

133:                                              ; preds = %124
  store i8 %37, i8* %126, align 1
  %134 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  br label %135

135:                                              ; preds = %133, %129
  %136 = phi i8* [ %132, %129 ], [ %134, %133 ]
  %137 = icmp eq i8 %37, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %119, i64 %120, i1 false) #11
  br label %139

139:                                              ; preds = %138, %135
  %140 = getelementptr inbounds i8, i8* %136, i64 %120
  store i8 0, i8* %140, align 1
  br label %154

141:                                              ; preds = %116
  %142 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %115, i8* %119, i64 %120) #11
  br label %154

143:                                              ; preds = %114
  %144 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  store i8 0, i8* %150, align 1
  %151 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %151, align 8
  br label %154

152:                                              ; preds = %143
  %153 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  store i8 0, i8* %153, align 1
  store i8 0, i8* %145, align 1
  br label %154

154:                                              ; preds = %152, %148, %141, %139, %30, %15
  %155 = phi i1 [ false, %15 ], [ false, %30 ], [ true, %139 ], [ true, %141 ], [ true, %148 ], [ true, %152 ]
  ret i1 %155
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp3Bye6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::Bye"*, i8*, i64*, i64, i8*, {}*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.webrtc::rtcp::Bye"* %0 to i64 (%"class.webrtc::rtcp::Bye"*)***
  %8 = bitcast %"class.webrtc::rtcp::Bye"* %0 to %"class.webrtc::rtcp::RtcpPacket"*
  br label %9

9:                                                ; preds = %17, %6
  %10 = load i64, i64* %2, align 8
  %11 = load i64 (%"class.webrtc::rtcp::Bye"*)**, i64 (%"class.webrtc::rtcp::Bye"*)*** %7, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::rtcp::Bye"*)*, i64 (%"class.webrtc::rtcp::Bye"*)** %11, i64 2
  %13 = load i64 (%"class.webrtc::rtcp::Bye"*)*, i64 (%"class.webrtc::rtcp::Bye"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::rtcp::Bye"* %0) #11
  %15 = add i64 %14, %10
  %16 = icmp ugt i64 %15, %3
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = tail call zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"* %8, i8* %1, i64* %2, i8* %4, {}* %5) #11
  br i1 %18, label %9, label %164

19:                                               ; preds = %9
  %20 = load i64, i64* %2, align 8
  %21 = load i64 (%"class.webrtc::rtcp::Bye"*)**, i64 (%"class.webrtc::rtcp::Bye"*)*** %7, align 8
  %22 = getelementptr inbounds i64 (%"class.webrtc::rtcp::Bye"*)*, i64 (%"class.webrtc::rtcp::Bye"*)** %21, i64 2
  %23 = load i64 (%"class.webrtc::rtcp::Bye"*)*, i64 (%"class.webrtc::rtcp::Bye"*)** %22, align 8
  %24 = tail call i64 %23(%"class.webrtc::rtcp::Bye"* %0) #11
  %25 = add i64 %24, %20
  %26 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 2
  %34 = add nsw i64 %33, 1
  %35 = tail call i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"* %8) #11
  tail call void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64 %34, i8 zeroext -53, i64 %35, i8* %1, i64* %2) #11
  %36 = load i64, i64* %2, align 8
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = lshr i32 %39, 24
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %37, align 1
  %42 = lshr i32 %39, 16
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %39, 8
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %46, i8* %47, align 1
  %48 = trunc i32 %39 to i8
  %49 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %48, i8* %49, align 1
  %50 = load i64, i64* %2, align 8
  %51 = add i64 %50, 4
  store i64 %51, i64* %2, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = load i32*, i32** %27, align 8
  %55 = icmp eq i32* %53, %54
  br i1 %55, label %84, label %56

56:                                               ; preds = %19
  %57 = ptrtoint i32* %53 to i64
  %58 = getelementptr i32, i32* %54, i64 -1
  %59 = ptrtoint i32* %58 to i64
  %60 = sub i64 %59, %57
  %61 = and i64 %60, 4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %79

63:                                               ; preds = %56
  %64 = load i32, i32* %53, align 4
  %65 = getelementptr inbounds i8, i8* %1, i64 %51
  %66 = lshr i32 %64, 24
  %67 = trunc i32 %66 to i8
  store i8 %67, i8* %65, align 1
  %68 = lshr i32 %64, 16
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  store i8 %69, i8* %70, align 1
  %71 = lshr i32 %64, 8
  %72 = trunc i32 %71 to i8
  %73 = getelementptr inbounds i8, i8* %65, i64 2
  store i8 %72, i8* %73, align 1
  %74 = trunc i32 %64 to i8
  %75 = getelementptr inbounds i8, i8* %65, i64 3
  store i8 %74, i8* %75, align 1
  %76 = load i64, i64* %2, align 8
  %77 = add i64 %76, 4
  store i64 %77, i64* %2, align 8
  %78 = getelementptr inbounds i32, i32* %53, i64 1
  br label %79

79:                                               ; preds = %63, %56
  %80 = phi i64 [ undef, %56 ], [ %77, %63 ]
  %81 = phi i64 [ %51, %56 ], [ %77, %63 ]
  %82 = phi i32* [ %53, %56 ], [ %78, %63 ]
  %83 = icmp ult i64 %60, 4
  br i1 %83, label %84, label %99

84:                                               ; preds = %79, %99, %19
  %85 = phi i64 [ %51, %19 ], [ %80, %79 ], [ %130, %99 ]
  %86 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %96

94:                                               ; preds = %84
  %95 = zext i8 %89 to i64
  br label %96

96:                                               ; preds = %91, %94
  %97 = phi i64 [ %93, %91 ], [ %95, %94 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %164, label %133

99:                                               ; preds = %79, %99
  %100 = phi i64 [ %130, %99 ], [ %81, %79 ]
  %101 = phi i32* [ %131, %99 ], [ %82, %79 ]
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds i8, i8* %1, i64 %100
  %104 = lshr i32 %102, 24
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %103, align 1
  %106 = lshr i32 %102, 16
  %107 = trunc i32 %106 to i8
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  store i8 %107, i8* %108, align 1
  %109 = lshr i32 %102, 8
  %110 = trunc i32 %109 to i8
  %111 = getelementptr inbounds i8, i8* %103, i64 2
  store i8 %110, i8* %111, align 1
  %112 = trunc i32 %102 to i8
  %113 = getelementptr inbounds i8, i8* %103, i64 3
  store i8 %112, i8* %113, align 1
  %114 = load i64, i64* %2, align 8
  %115 = add i64 %114, 4
  store i64 %115, i64* %2, align 8
  %116 = getelementptr inbounds i32, i32* %101, i64 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds i8, i8* %1, i64 %115
  %119 = lshr i32 %117, 24
  %120 = trunc i32 %119 to i8
  store i8 %120, i8* %118, align 1
  %121 = lshr i32 %117, 16
  %122 = trunc i32 %121 to i8
  %123 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 %122, i8* %123, align 1
  %124 = lshr i32 %117, 8
  %125 = trunc i32 %124 to i8
  %126 = getelementptr inbounds i8, i8* %118, i64 2
  store i8 %125, i8* %126, align 1
  %127 = trunc i32 %117 to i8
  %128 = getelementptr inbounds i8, i8* %118, i64 3
  store i8 %127, i8* %128, align 1
  %129 = load i64, i64* %2, align 8
  %130 = add i64 %129, 4
  store i64 %130, i64* %2, align 8
  %131 = getelementptr inbounds i32, i32* %101, i64 2
  %132 = icmp eq i32* %131, %54
  br i1 %132, label %84, label %99

133:                                              ; preds = %96
  br i1 %90, label %134, label %137

134:                                              ; preds = %133
  %135 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  br label %139

137:                                              ; preds = %133
  %138 = zext i8 %89 to i64
  br label %139

139:                                              ; preds = %134, %137
  %140 = phi i64 [ %136, %134 ], [ %138, %137 ]
  %141 = trunc i64 %140 to i8
  %142 = add i64 %85, 1
  store i64 %142, i64* %2, align 8
  %143 = getelementptr inbounds i8, i8* %1, i64 %85
  store i8 %141, i8* %143, align 1
  %144 = load i64, i64* %2, align 8
  %145 = getelementptr inbounds i8, i8* %1, i64 %144
  %146 = load i8, i8* %88, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  br label %153

151:                                              ; preds = %139
  %152 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  br label %153

153:                                              ; preds = %148, %151
  %154 = phi i8* [ %150, %148 ], [ %152, %151 ]
  %155 = and i64 %140, 255
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %154, i64 %155, i1 false)
  %156 = load i64, i64* %2, align 8
  %157 = add i64 %156, %155
  store i64 %157, i64* %2, align 8
  %158 = sub i64 %25, %157
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds i8, i8* %1, i64 %157
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %161, i8 0, i64 %158, i1 false)
  %162 = load i64, i64* %2, align 8
  %163 = add i64 %162, %158
  store i64 %163, i64* %2, align 8
  br label %164

164:                                              ; preds = %17, %96, %153, %160
  %165 = phi i1 [ true, %160 ], [ true, %153 ], [ true, %96 ], [ false, %17 ]
  ret i1 %165
}

declare zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"*, i8*, i64*, i8*, {}*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64, i8 zeroext, i64, i8*, i64*) local_unnamed_addr #3

declare i64 @_ZNK6webrtc4rtcp10RtcpPacket12HeaderLengthEv(%"class.webrtc::rtcp::RtcpPacket"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp3Bye8SetCsrcsENSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.webrtc::rtcp::Bye"* nocapture, %"class.std::__1::vector"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ugt i64 %10, 30
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 121, i32 2, i32 0, i32 0) #11
  %14 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 30) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #11
  br label %41

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = ptrtoint i32* %20 to i64
  %24 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast i32* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  %27 = bitcast %"class.std::__1::vector"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  %28 = load i64, i64* %7, align 8
  br label %29

29:                                               ; preds = %17, %22
  %30 = phi i64 [ %28, %22 ], [ %8, %17 ]
  %31 = bitcast %"class.std::__1::vector"* %18 to i64*
  store i64 %30, i64* %31, align 8
  %32 = load i64, i64* %5, align 8
  %33 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #11
  br label %41

41:                                               ; preds = %29, %12
  %42 = phi i1 [ false, %12 ], [ true, %29 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp3Bye9SetReasonENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.webrtc::rtcp::Bye"* nocapture, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %2, %8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #11
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 0, i8* %15, align 1
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp3Bye11BlockLengthEv(%"class.webrtc::rtcp::Bye"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 2
  %10 = add nuw nsw i64 %9, 1
  %11 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  br label %21

19:                                               ; preds = %1
  %20 = zext i8 %14 to i64
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i64 [ %18, %16 ], [ %20, %19 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  br i1 %15, label %25, label %28

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.webrtc::rtcp::Bye", %"class.webrtc::rtcp::Bye"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %30

28:                                               ; preds = %24
  %29 = zext i8 %14 to i64
  br label %30

30:                                               ; preds = %25, %28
  %31 = phi i64 [ %27, %25 ], [ %29, %28 ]
  %32 = lshr i64 %31, 2
  %33 = add nuw nsw i64 %32, 1
  br label %34

34:                                               ; preds = %21, %30
  %35 = phi i64 [ %33, %30 ], [ 0, %21 ]
  %36 = add nuw i64 %10, %35
  %37 = shl i64 %36, 2
  %38 = add i64 %37, 4
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
