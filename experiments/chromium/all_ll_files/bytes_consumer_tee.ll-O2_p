; ModuleID = '../../third_party/blink/renderer/core/fetch/bytes_consumer_tee.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/bytes_consumer_tee.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.98", i32, [4 x i8], %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.240", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.281", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.214", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.134" = type { %"struct.std::__1::__atomic_base.135" }
%"struct.std::__1::__atomic_base.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i64 }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::Worklist.173"* }
%"class.blink::Worklist.173" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.134" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.194", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.208", [4 x i8] }>
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { i64 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { float }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.217", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.226" }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.240" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.243" }
%"class.WTF::VectorBuffer.243" = type { %"class.WTF::VectorBufferBase.244" }
%"class.WTF::VectorBufferBase.244" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.159"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.166"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.173"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.260" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__cxx_atomic_impl.283" }
%"struct.std::__1::__cxx_atomic_impl.283" = type { %"struct.std::__1::__cxx_atomic_base_impl.284" }
%"struct.std::__1::__cxx_atomic_base_impl.284" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.285" }
%"class.base::time_internal::TimeBase.285" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.22", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.28", %"class.blink::Member.30", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.39", %"class.blink::Member.45", %"class.blink::Member.47", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.4" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.4" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.5" }
%"class.blink::HeapHashMap.5" = type { %"class.WTF::HashMap.8" }
%"class.WTF::HashMap.8" = type { %"class.WTF::HashTable.9" }
%"class.WTF::HashTable.9" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i8*, %"class.blink::Member.94" }
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.96" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.19", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.26"*, i32, i32 }
%"class.blink::Member.26" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.32", i32, i32 }
%"class.blink::HeapHashMap.32" = type { %"class.WTF::HashMap.35" }
%"class.WTF::HashMap.35" = type { %"class.WTF::HashTable.36" }
%"class.WTF::HashTable.36" = type <{ %"struct.WTF::KeyValuePair.38"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.38" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.308 }
%union.anon.308 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.WTF::String" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::(anonymous namespace)::NoopClient" = type { %"class.blink::BytesConsumer::Client" }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::BlobBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member", %class.scoped_refptr.51, %"class.blink::Member.61", %"class.blink::Member.63", %"class.blink::Member.65" }
%class.scoped_refptr.51 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::BlobBytesConsumer::BlobClient"* }
%"class.blink::BlobBytesConsumer::BlobClient" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::BytesConsumer"* }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector.68", i64, %"class.WTF::Vector.71", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.71", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.51, i64, i64, %"class.absl::optional", %class.scoped_refptr.76 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.76 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { i8*, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::TeeHelper" = type { %"class.blink::BytesConsumer::Client", %"class.blink::Member.63", %"class.blink::Member.81", %"class.blink::Member.81" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::(anonymous namespace)::TeeHelper::Destination"* }
%"class.blink::(anonymous namespace)::TeeHelper::Destination" = type <{ %"class.blink::BytesConsumer", %"class.blink::Member", %"class.blink::Member.83", %"class.blink::Member.65", %"class.blink::HeapDeque", %"class.blink::Member.90", i64, i8, i8, [6 x i8] }>
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::(anonymous namespace)::TeeHelper"* }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Member<blink::(anonymous namespace)::TeeHelper::Chunk>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::(anonymous namespace)::TeeHelper::Chunk>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.blink::Member.90"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* }
%"class.blink::(anonymous namespace)::TeeHelper::Chunk" = type { %"class.WTF::Vector.71" }
%"class.blink::FormDataBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::Member.63" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.286", %"class.blink::FreeList", %"class.WTF::Vector.291" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.347", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.347" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.345" }>
%"class.base::RefCountedThreadSafe.345" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.345", [4 x i8] }>
%"class.mojo::ScopedHandleBase.343" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink13BytesConsumer6ClientD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv = comdat any

$_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE = comdat any

$_ZN5blink13BytesConsumer15DrainAsFormDataEv = comdat any

$_ZN5blink13BytesConsumer15DrainAsDataPipeEv = comdat any

$_ZN5blink13BytesConsumerD2Ev = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_110NoopClientEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_110NoopClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_110NoopClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_110NoopClientEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_110NoopClientEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_110NoopClientE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BytesConsumer::Client"*)* @_ZN5blink13BytesConsumer6ClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NoopClient"*)* @_ZN5blink12_GLOBAL__N_110NoopClientD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NoopClient"*)* @_ZN5blink12_GLOBAL__N_110NoopClient13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::NoopClient"*)* @_ZNK5blink12_GLOBAL__N_110NoopClient9DebugNameEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"NoopClient\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BytesConsumer]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelperEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_19TeeHelperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_19TeeHelperEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelperEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@_ZTVN5blink12_GLOBAL__N_19TeeHelperE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BytesConsumer::Client"*)* @_ZN5blink13BytesConsumer6ClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper"*)* @_ZN5blink12_GLOBAL__N_19TeeHelperD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::TeeHelper"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper9DebugNameEv to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_19TeeHelper11DestinationE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11DestinationD0Ev to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, i8**, i64*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, i64)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase.343"*, %"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.8 = private unnamed_addr constant [8 x i8] c"EndRead\00", align 1
@.str.9 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/core/fetch/bytes_consumer_tee.cc\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"TeeHelper::Destination\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE7GetNameEPKv, i8 0 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE7GetNameEPKv, i8 0 }, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEENS_12VectorTraitsIS7_EEEEEEPKcv = private unnamed_addr constant [219 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::(anonymous namespace)::TeeHelper::Chunk>, WTF::VectorTraits<blink::Member<blink::(anonymous namespace)::TeeHelper::Chunk> > >]\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"TeeHelper\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16BytesConsumerTeeEPNS_16ExecutionContextEPNS_13BytesConsumerEPS3_S4_(%"class.blink::ExecutionContext"*, %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** nocapture, %"class.blink::BytesConsumer"** nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = ptrtoint %"class.blink::ExecutionContext"* %0 to i64
  %8 = bitcast %"class.blink::BytesConsumer"* %1 to %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)***
  %9 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)**, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %9, i64 4
  %11 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %10, align 8
  %12 = tail call %"class.blink::BlobDataHandle"* %11(%"class.blink::BytesConsumer"* %1, i32 1) #12
  %13 = icmp eq %"class.blink::BlobDataHandle"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = tail call fastcc %"class.blink::(anonymous namespace)::NoopClient"* @_ZN5blink20MakeGarbageCollectedINS_12_GLOBAL__N_110NoopClientEJEEEPT_DpOT0_()
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::NoopClient", %"class.blink::(anonymous namespace)::NoopClient"* %15, i64 0, i32 0
  %17 = bitcast %"class.blink::BytesConsumer"* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %18 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %18, i64 7
  %20 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %19, align 8
  tail call void %20(%"class.blink::BytesConsumer"* %1, %"class.blink::BytesConsumer::Client"* %16) #12
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #12
  %22 = bitcast i8* %21 to %"class.blink::BlobBytesConsumer"*
  %23 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %14
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %26, %14
  call void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"* %22, %"class.blink::ExecutionContext"* %0, %"class.blink::BlobDataHandle"* nonnull %12) #12
  %30 = getelementptr inbounds i8, i8* %21, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = bitcast %"class.blink::BytesConsumer"** %2 to i8**
  store i8* %21, i8** %34, align 8
  %35 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 48) #12
  %36 = bitcast i8* %35 to %"class.blink::BlobBytesConsumer"*
  %37 = atomicrmw add i32* %23, i32 1 monotonic
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %183, label %39

39:                                               ; preds = %29
  %40 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #12
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %183

42:                                               ; preds = %4
  %43 = bitcast %"class.blink::BytesConsumer"* %1 to %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)***
  %44 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)**, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %44, i64 5
  %46 = load %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)*, %"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)** %45, align 8
  %47 = tail call %"class.blink::EncodedFormData"* %46(%"class.blink::BytesConsumer"* %1) #12
  %48 = icmp eq %"class.blink::EncodedFormData"* %47, null
  br i1 %48, label %49, label %156

49:                                               ; preds = %42
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #12
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #12
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %60, align 8
  %62 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %66 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %65, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.54"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.54"*)) #12
  br label %67

67:                                               ; preds = %64, %56
  %68 = phi i32 [ %62, %56 ], [ %66, %64 ]
  %69 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %61, i64 0, i32 19, i64 1
  %70 = bitcast %"class.blink::BaseArena"** %69 to %"class.blink::NormalPageArena"**
  %71 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %71, i64 0, i32 4
  %73 = load i64, i64* %72, align 8
  %74 = icmp ult i64 %73, 40
  br i1 %74, label %105, label %75, !prof !2

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %71, i64 0, i32 3
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 40
  store i8* %78, i8** %76, align 8
  %79 = add i64 %73, -40
  store i64 %79, i64* %72, align 8
  %80 = bitcast i8* %77 to i32*
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %77, i64 4
  %82 = bitcast i8* %81 to i16*
  %83 = trunc i32 %68 to i16
  %84 = shl i16 %83, 2
  store atomic i16 %84, i16* %82 monotonic, align 2
  %85 = getelementptr inbounds i8, i8* %77, i64 6
  %86 = bitcast i8* %85 to i16*
  store i16 20, i16* %86, align 2
  %87 = ptrtoint i8* %77 to i64
  %88 = and i64 %87, -131072
  %89 = inttoptr i64 %88 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 4400
  %91 = bitcast i8* %90 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %92 = bitcast i8* %90 to i64*
  %93 = load i64, i64* %92, align 16
  %94 = sub i64 %87, %93
  %95 = lshr i64 %94, 3
  %96 = lshr i64 %94, 6
  %97 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %91, i64 0, i32 0, i32 1, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = trunc i64 %95 to i32
  %100 = and i32 %99, 7
  %101 = shl i32 1, %100
  %102 = trunc i32 %101 to i8
  %103 = or i8 %98, %102
  store atomic i8 %103, i8* %97 release, align 1
  %104 = getelementptr inbounds i8, i8* %77, i64 8
  br label %108

105:                                              ; preds = %67
  %106 = zext i32 %68 to i64
  %107 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %71, i64 40, i64 %106) #12
  br label %108

108:                                              ; preds = %105, %75
  %109 = phi i8* [ %104, %75 ], [ %107, %105 ]
  %110 = bitcast i8* %109 to %"class.blink::(anonymous namespace)::TeeHelper"*
  %111 = bitcast i8* %109 to %"class.blink::BytesConsumer::Client"*
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_19TeeHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %109, i64 8
  %114 = bitcast i8* %113 to %"class.blink::BytesConsumer"**
  store %"class.blink::BytesConsumer"* %1, %"class.blink::BytesConsumer"** %114, align 8
  %115 = ptrtoint i8* %109 to i64
  %116 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 80) #12
  %117 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_19TeeHelper11DestinationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %118 to i64*
  store i64 %7, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %116, i64 16
  %121 = bitcast i8* %120 to i64*
  store i64 %115, i64* %121, align 8
  %122 = getelementptr inbounds i8, i8* %116, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 50, i1 false) #12
  %123 = getelementptr inbounds i8, i8* %116, i64 -4
  %124 = bitcast i8* %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = or i16 %125, 1
  store atomic i16 %126, i16* %124 release, align 2
  %127 = getelementptr inbounds i8, i8* %109, i64 16
  %128 = bitcast i8* %127 to i8**
  store i8* %116, i8** %128, align 8
  %129 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 80) #12
  %130 = bitcast i8* %129 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink12_GLOBAL__N_19TeeHelper11DestinationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %131 = getelementptr inbounds i8, i8* %129, i64 8
  %132 = bitcast i8* %131 to i64*
  store i64 %7, i64* %132, align 8
  %133 = getelementptr inbounds i8, i8* %129, i64 16
  %134 = bitcast i8* %133 to i64*
  store i64 %115, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %129, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 50, i1 false) #12
  %136 = getelementptr inbounds i8, i8* %129, i64 -4
  %137 = bitcast i8* %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = or i16 %138, 1
  store atomic i16 %139, i16* %137 release, align 2
  %140 = getelementptr inbounds i8, i8* %109, i64 24
  %141 = bitcast i8* %140 to i8**
  store i8* %129, i8** %141, align 8
  %142 = bitcast %"class.blink::BytesConsumer"* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %143 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %143, i64 7
  %145 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %144, align 8
  tail call void %145(%"class.blink::BytesConsumer"* %1, %"class.blink::BytesConsumer::Client"* %111) #12
  tail call void @_ZN5blink12_GLOBAL__N_19TeeHelper13OnStateChangeEv(%"class.blink::(anonymous namespace)::TeeHelper"* %110) #12
  %146 = getelementptr inbounds i8, i8* %109, i64 -4
  %147 = bitcast i8* %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = or i16 %148, 1
  store atomic i16 %149, i16* %147 release, align 2
  %150 = bitcast i8* %127 to %"class.blink::(anonymous namespace)::TeeHelper::Destination"**
  %151 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %151, i64 0, i32 0
  store %"class.blink::BytesConsumer"* %152, %"class.blink::BytesConsumer"** %2, align 8
  %153 = bitcast i8* %140 to %"class.blink::(anonymous namespace)::TeeHelper::Destination"**
  %154 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %154, i64 0, i32 0
  store %"class.blink::BytesConsumer"* %155, %"class.blink::BytesConsumer"** %3, align 8
  br label %193

156:                                              ; preds = %42
  %157 = tail call fastcc %"class.blink::(anonymous namespace)::NoopClient"* @_ZN5blink20MakeGarbageCollectedINS_12_GLOBAL__N_110NoopClientEJEEEPT_DpOT0_()
  %158 = getelementptr inbounds %"class.blink::(anonymous namespace)::NoopClient", %"class.blink::(anonymous namespace)::NoopClient"* %157, i64 0, i32 0
  %159 = bitcast %"class.blink::BytesConsumer"* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %160 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %160, i64 7
  %162 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %161, align 8
  tail call void %162(%"class.blink::BytesConsumer"* %1, %"class.blink::BytesConsumer::Client"* %158) #12
  %163 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %164 = bitcast i8* %163 to %"class.blink::FormDataBytesConsumer"*
  %165 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #12
  tail call void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* %164, %"class.blink::ExecutionContext"* %0, %"class.blink::EncodedFormData"* nonnull %47) #12
  %166 = getelementptr inbounds i8, i8* %163, i64 -4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = or i16 %168, 1
  store atomic i16 %169, i16* %167 release, align 2
  %170 = bitcast %"class.blink::BytesConsumer"** %2 to i8**
  store i8* %163, i8** %170, align 8
  %171 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64 16) #12
  %172 = bitcast i8* %171 to %"class.blink::FormDataBytesConsumer"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #12
  tail call void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"* %172, %"class.blink::ExecutionContext"* %0, %"class.blink::EncodedFormData"* nonnull %47) #12
  %173 = getelementptr inbounds i8, i8* %171, i64 -4
  %174 = bitcast i8* %173 to i16*
  %175 = load atomic i16, i16* %174 monotonic, align 2
  %176 = or i16 %175, 1
  store atomic i16 %176, i16* %174 release, align 2
  %177 = bitcast %"class.blink::BytesConsumer"** %3 to i8**
  store i8* %171, i8** %177, align 8
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %165) #12
  %178 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %156
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %47) #12
  %182 = bitcast %"class.blink::EncodedFormData"* %47 to i8*
  tail call void @free(i8* %182) #12
  br label %193

183:                                              ; preds = %29, %39
  call void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"* %36, %"class.blink::ExecutionContext"* %0, %"class.blink::BlobDataHandle"* nonnull %12) #12
  %184 = getelementptr inbounds i8, i8* %35, i64 -4
  %185 = bitcast i8* %184 to i16*
  %186 = load atomic i16, i16* %185 monotonic, align 2
  %187 = or i16 %186, 1
  store atomic i16 %187, i16* %185 release, align 2
  %188 = bitcast %"class.blink::BytesConsumer"** %3 to i8**
  store i8* %35, i8** %188, align 8
  %189 = atomicrmw sub i32* %23, i32 1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %193

191:                                              ; preds = %183
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %12) #12
  %192 = bitcast %"class.blink::BlobDataHandle"* %12 to i8*
  call void @free(i8* %192) #12
  br label %193

193:                                              ; preds = %108, %156, %181, %183, %191
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::(anonymous namespace)::NoopClient"* @_ZN5blink20MakeGarbageCollectedINS_12_GLOBAL__N_110NoopClientEJEEEPT_DpOT0_() unnamed_addr #0 {
  %1 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %2 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %1, i64 0, i32 1
  %3 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %2) #12
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %7, !prof !2

5:                                                ; preds = %0
  %6 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %2, i8* %6) #12
  br label %7

7:                                                ; preds = %5, %0
  %8 = phi i8* [ %6, %5 ], [ %3, %0 ]
  %9 = bitcast i8* %8 to %"class.blink::ThreadState"**
  %10 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %11, align 8
  %13 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_110NoopClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %17 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %16, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_110NoopClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.54"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_110NoopClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.54"*)) #12
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i32 [ %13, %7 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %12, i64 0, i32 19, i64 0
  %21 = bitcast %"class.blink::BaseArena"** %20 to %"class.blink::NormalPageArena"**
  %22 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 16
  br i1 %25, label %56, label %26, !prof !2

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %22, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 16
  store i8* %29, i8** %27, align 8
  %30 = add i64 %24, -16
  store i64 %30, i64* %23, align 8
  %31 = bitcast i8* %28 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %28, i64 4
  %33 = bitcast i8* %32 to i16*
  %34 = trunc i32 %19 to i16
  %35 = shl i16 %34, 2
  store atomic i16 %35, i16* %33 monotonic, align 2
  %36 = getelementptr inbounds i8, i8* %28, i64 6
  %37 = bitcast i8* %36 to i16*
  store i16 8, i16* %37, align 2
  %38 = ptrtoint i8* %28 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4400
  %42 = bitcast i8* %41 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %38, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %42, i64 0, i32 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 1, %51
  %53 = trunc i32 %52 to i8
  %54 = or i8 %49, %53
  store atomic i8 %54, i8* %48 release, align 1
  %55 = getelementptr inbounds i8, i8* %28, i64 8
  br label %59

56:                                               ; preds = %18
  %57 = zext i32 %19 to i64
  %58 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %22, i64 16, i64 %57) #12
  br label %59

59:                                               ; preds = %26, %56
  %60 = phi i8* [ %55, %26 ], [ %58, %56 ]
  %61 = bitcast i8* %60 to %"class.blink::(anonymous namespace)::NoopClient"*
  %62 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_110NoopClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %60, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  ret %"class.blink::(anonymous namespace)::NoopClient"* %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_110NoopClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"* nocapture, i8* nocapture) #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_110NoopClientEE8FinalizeEPv(i8* nocapture) #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_110NoopClientEE7GetNameEPKv(i8* nocapture readnone) #5 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.54"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_110NoopClientD0Ev(%"class.blink::(anonymous namespace)::NoopClient"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_110NoopClient13OnStateChangeEv(%"class.blink::(anonymous namespace)::NoopClient"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_110NoopClient9DebugNameEv(%"class.blink::(anonymous namespace)::NoopClient"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10) #12
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumer6ClientD2Ev(%"class.blink::BytesConsumer::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZN5blink17BlobBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::BlobBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BytesConsumerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.54"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BytesConsumerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.54"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BytesConsumerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13BytesConsumerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::BytesConsumer"*
  %3 = bitcast i8* %0 to void (%"class.blink::BytesConsumer"*)***
  %4 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %3, align 8
  %5 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %4, align 8
  tail call void %5(%"class.blink::BytesConsumer"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BytesConsumerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare void @_ZN5blink21FormDataBytesConsumerC1EPNS_16ExecutionContextE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::FormDataBytesConsumer"*, %"class.blink::ExecutionContext"*, %"class.blink::EncodedFormData"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 24
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_19TeeHelperEE8FinalizeEPv(i8* nocapture) #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_19TeeHelperEE7GetNameEPKv(i8* nocapture readnone) #5 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_19TeeHelper5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::TeeHelper"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.63"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.81"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.81"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::TeeHelper::Destination"*
  tail call void @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #12, !range !3
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #12
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2
  %75 = bitcast %"class.blink::Member.83"* %74 to i64*
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %73
  %79 = inttoptr i64 %76 to i8*
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* nonnull %79, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelperEE5TraceEPNS_7VisitorEPKv) #12
  br label %84

84:                                               ; preds = %73, %78
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %86 = bitcast %"class.blink::Member.65"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %155, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = and i64 %87, -131072
  %92 = inttoptr i64 %91 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 4138
  %94 = load i8, i8* %93, align 2
  %95 = icmp eq i8 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = getelementptr inbounds i8, i8* %92, i64 4160
  br label %136

98:                                               ; preds = %89
  %99 = getelementptr inbounds i8, i8* %92, i64 4096
  %100 = bitcast i8* %99 to %"class.blink::NormalPage"*
  %101 = getelementptr inbounds i8, i8* %92, i64 4400
  %102 = bitcast i8* %101 to i8**
  %103 = bitcast i8* %101 to i64*
  %104 = load i64, i64* %103, align 16
  %105 = sub i64 %87, %104
  %106 = lshr i64 %105, 3
  %107 = lshr i64 %105, 6
  %108 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %100, i64 0, i32 2, i32 0, i32 1, i64 %107
  %109 = load atomic i8, i8* %108 acquire, align 1
  %110 = trunc i64 %106 to i32
  %111 = and i32 %110, 7
  %112 = shl i32 2, %111
  %113 = trunc i32 %112 to i8
  %114 = add i8 %113, -1
  %115 = and i8 %114, %109
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %98, %117
  %118 = phi i64 [ %119, %117 ], [ %107, %98 ]
  %119 = add i64 %118, -1
  %120 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %100, i64 0, i32 2, i32 0, i32 1, i64 %119
  %121 = load atomic i8, i8* %120 acquire, align 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %117, label %123

123:                                              ; preds = %117, %98
  %124 = phi i64 [ %107, %98 ], [ %119, %117 ]
  %125 = phi i8 [ %115, %98 ], [ %121, %117 ]
  %126 = zext i8 %125 to i32
  %127 = tail call i32 @llvm.ctlz.i32(i32 %126, i1 true) #12, !range !3
  %128 = add nsw i32 %127, -24
  %129 = shl i64 %124, 3
  %130 = or i64 %129, 7
  %131 = sext i32 %128 to i64
  %132 = sub i64 %130, %131
  %133 = shl i64 %132, 3
  %134 = load i8*, i8** %102, align 16
  %135 = getelementptr inbounds i8, i8* %134, i64 %133
  br label %136

136:                                              ; preds = %123, %96
  %137 = phi i8* [ %97, %96 ], [ %135, %123 ]
  %138 = getelementptr inbounds i8, i8* %137, i64 8
  %139 = getelementptr inbounds i8, i8* %137, i64 4
  %140 = bitcast i8* %139 to i16*
  %141 = load atomic i16, i16* %140 acquire, align 2
  %142 = lshr i16 %141, 2
  %143 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %144 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %143, i64 0, i32 0
  %145 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %144, align 8
  %146 = zext i16 %142 to i64
  %147 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %145, i64 %146
  %148 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %147, align 8
  %149 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %148, i64 0, i32 0
  %150 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %149, align 8
  %151 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %152 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %152, i64 5
  %154 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, align 8
  tail call void %154(%"class.blink::Visitor"* %1, i8* nonnull %90, i8* %138, void (%"class.blink::Visitor"*, i8*)* %150) #12
  br label %155

155:                                              ; preds = %84, %136
  %156 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4
  %157 = bitcast %"class.blink::HeapDeque"* %156 to i64*
  %158 = load atomic i64, i64* %157 monotonic, align 8
  %159 = bitcast %"class.blink::HeapDeque"* %156 to i8**
  %160 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %161 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %161, i64 11
  %163 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %162, align 8
  tail call void %163(%"class.blink::Visitor"* %1, i8** %159) #12
  %164 = icmp eq i64 %158, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %155
  %166 = inttoptr i64 %158 to i8*
  %167 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %168 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, i64 5
  %170 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %169, align 8
  tail call void %170(%"class.blink::Visitor"* %1, i8* nonnull %166, i8* nonnull %166, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %171

171:                                              ; preds = %155, %165
  %172 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 5
  %173 = bitcast %"class.blink::Member.90"* %172 to i64*
  %174 = load atomic i64, i64* %173 monotonic, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = inttoptr i64 %174 to i8*
  %178 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %179 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, i64 5
  %181 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %180, align 8
  tail call void %181(%"class.blink::Visitor"* %1, i8* nonnull %177, i8* nonnull %177, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5TraceEPNS_7VisitorEPKv) #12
  br label %182

182:                                              ; preds = %171, %176
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.90"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.90"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"* nocapture, i8* nocapture) #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper13OnStateChangeEv(%"class.blink::(anonymous namespace)::TeeHelper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %5, i64 0, i32 4, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %5, i64 0, i32 4, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %7, %9
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %12, i64 0, i32 4, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %12, i64 0, i32 4, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  %18 = bitcast i8** %2 to i8*
  %19 = bitcast i64* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %0, i64 0, i32 1, i32 0, i32 0
  br label %21

21:                                               ; preds = %232, %1
  %22 = phi i8 [ 0, %1 ], [ %233, %232 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i8* null, i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  store i64 0, i64* %3, align 8
  %23 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %20, align 8
  %24 = bitcast %"class.blink::BytesConsumer"* %23 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %25 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %25, i64 2
  %27 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %26, align 8
  %28 = call i32 %27(%"class.blink::BytesConsumer"* %23, i8** nonnull %2, i64* nonnull %3) #12
  switch i32 %28, label %138 [
    i32 1, label %29
    i32 0, label %41
  ]

29:                                               ; preds = %21
  %30 = and i8 %22, 1
  %31 = icmp eq i8 %30, 0
  %32 = xor i1 %10, true
  %33 = or i1 %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %35)
  br label %36

36:                                               ; preds = %29, %34
  %37 = xor i1 %17, true
  %38 = or i1 %31, %37
  br i1 %38, label %234, label %39

39:                                               ; preds = %36
  %40 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %40)
  br label %234

41:                                               ; preds = %21
  %42 = load i64, i64* %3, align 8
  %43 = icmp ult i64 %42, 4294967296
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %41
  call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %41
  %46 = trunc i64 %42 to i32
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #12
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %45
  %52 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #12
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i8* [ %52, %51 ], [ %49, %45 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %57, align 8
  %59 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %53
  %62 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %63 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %62, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.54"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.54"*)) #12
  br label %64

64:                                               ; preds = %61, %53
  %65 = phi i32 [ %59, %53 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %58, i64 0, i32 19, i64 0
  %67 = bitcast %"class.blink::BaseArena"** %66 to %"class.blink::NormalPageArena"**
  %68 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %68, i64 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %70, 24
  br i1 %71, label %102, label %72, !prof !2

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %68, i64 0, i32 3
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 24
  store i8* %75, i8** %73, align 8
  %76 = add i64 %70, -24
  store i64 %76, i64* %69, align 8
  %77 = bitcast i8* %74 to i32*
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %74, i64 4
  %79 = bitcast i8* %78 to i16*
  %80 = trunc i32 %65 to i16
  %81 = shl i16 %80, 2
  store atomic i16 %81, i16* %79 monotonic, align 2
  %82 = getelementptr inbounds i8, i8* %74, i64 6
  %83 = bitcast i8* %82 to i16*
  store i16 12, i16* %83, align 2
  %84 = ptrtoint i8* %74 to i64
  %85 = and i64 %84, -131072
  %86 = inttoptr i64 %85 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 4400
  %88 = bitcast i8* %87 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %89 = bitcast i8* %87 to i64*
  %90 = load i64, i64* %89, align 16
  %91 = sub i64 %84, %90
  %92 = lshr i64 %91, 3
  %93 = lshr i64 %91, 6
  %94 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %88, i64 0, i32 0, i32 1, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = trunc i64 %92 to i32
  %97 = and i32 %96, 7
  %98 = shl i32 1, %97
  %99 = trunc i32 %98 to i8
  %100 = or i8 %95, %99
  store atomic i8 %100, i8* %94 release, align 1
  %101 = getelementptr inbounds i8, i8* %74, i64 8
  br label %105

102:                                              ; preds = %64
  %103 = zext i32 %65 to i64
  %104 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %68, i64 24, i64 %103) #12
  br label %105

105:                                              ; preds = %102, %72
  %106 = phi i8* [ %101, %72 ], [ %104, %102 ]
  %107 = bitcast i8* %106 to %"class.blink::(anonymous namespace)::TeeHelper::Chunk"*
  %108 = load i8*, i8** %2, align 8
  %109 = bitcast i8* %106 to %"class.WTF::Vector.71"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #12
  %110 = icmp eq i32 %46, 0
  br i1 %110, label %120, label %111

111:                                              ; preds = %105
  %112 = and i64 %42, 4294967295
  %113 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %112) #12
  %114 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %113) #12
  %115 = ptrtoint i8* %114 to i64
  %116 = bitcast i8* %106 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = trunc i64 %113 to i32
  %118 = getelementptr inbounds i8, i8* %106, i64 8
  %119 = bitcast i8* %118 to i32*
  store i32 %117, i32* %119, align 8
  br label %120

120:                                              ; preds = %105, %111
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.71"* %109, i8* %108, i32 %46) #12
  %121 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #12
  %122 = getelementptr inbounds i8, i8* %106, i64 12
  %123 = bitcast i8* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %121, i64 %125) #12
  %127 = getelementptr inbounds i8, i8* %106, i64 -4
  %128 = bitcast i8* %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = or i16 %129, 1
  store atomic i16 %130, i16* %128 release, align 2
  %131 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %20, align 8
  %132 = load i64, i64* %3, align 8
  %133 = bitcast %"class.blink::BytesConsumer"* %131 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %134 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %133, align 8
  %135 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %134, i64 3
  %136 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %135, align 8
  %137 = call i32 %136(%"class.blink::BytesConsumer"* %131, i64 %132) #12
  br label %138

138:                                              ; preds = %21, %120
  %139 = phi i32 [ %137, %120 ], [ %28, %21 ]
  %140 = phi %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* [ %107, %120 ], [ null, %21 ]
  switch i32 %139, label %232 [
    i32 0, label %141
    i32 1, label %234
    i32 2, label %144
    i32 3, label %155
  ]

141:                                              ; preds = %138
  %142 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EnqueueEPNS1_5ChunkE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %142, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %140)
  %143 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EnqueueEPNS1_5ChunkE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %143, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %140)
  br label %232

144:                                              ; preds = %138
  %145 = icmp eq %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %140, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %144
  %147 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EnqueueEPNS1_5ChunkE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %147, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* nonnull %140)
  %148 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EnqueueEPNS1_5ChunkE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %148, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* nonnull %140)
  br label %149

149:                                              ; preds = %144, %146
  br i1 %10, label %150, label %152

150:                                              ; preds = %149
  %151 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %151)
  br label %152

152:                                              ; preds = %150, %149
  br i1 %17, label %153, label %234

153:                                              ; preds = %152
  %154 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %154)
  br label %234

155:                                              ; preds = %138
  %156 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  %157 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 4, i32 0
  %158 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 4, i32 0, i32 1
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 4, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = icmp ugt i32 %159, %161
  %163 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %157, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %163, align 8
  br i1 %162, label %168, label %165

165:                                              ; preds = %155
  %166 = zext i32 %159 to i64
  %167 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %164, i64 %166
  br label %178

168:                                              ; preds = %155
  %169 = zext i32 %161 to i64
  %170 = bitcast %"class.blink::Member.90"* %164 to i8*
  %171 = shl nuw nsw i64 %169, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %170, i64 %171) #12
  %172 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %163, align 8
  %173 = load i32, i32* %158, align 8
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %172, i64 %174
  %176 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  br label %178

178:                                              ; preds = %168, %165
  %179 = phi i32 [ %177, %168 ], [ %161, %165 ]
  %180 = phi %"class.blink::Member.90"* [ %172, %168 ], [ %164, %165 ]
  %181 = phi %"class.blink::Member.90"* [ %175, %168 ], [ %167, %165 ]
  %182 = zext i32 %179 to i64
  %183 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %180, i64 %182
  %184 = bitcast %"class.blink::Member.90"* %181 to i8*
  %185 = ptrtoint %"class.blink::Member.90"* %183 to i64
  %186 = ptrtoint %"class.blink::Member.90"* %181 to i64
  %187 = sub i64 %185, %186
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %184, i64 %187) #12
  store i32 0, i32* %158, align 8
  store i32 0, i32* %160, align 4
  %188 = bitcast %"class.WTF::Deque"* %157 to i8**
  %189 = load i8*, i8** %188, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %189) #12
  %190 = bitcast %"class.WTF::Deque"* %157 to i64*
  store atomic i64 0, i64* %190 monotonic, align 8
  %191 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %191, align 8
  %192 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %156, i64 0, i32 6
  store i64 0, i64* %192, align 8
  %193 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  %194 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 4, i32 0
  %195 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 4, i32 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 4, i32 0, i32 2
  %198 = load i32, i32* %197, align 4
  %199 = icmp ugt i32 %196, %198
  %200 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %194, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %200, align 8
  br i1 %199, label %205, label %202

202:                                              ; preds = %178
  %203 = zext i32 %196 to i64
  %204 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %201, i64 %203
  br label %215

205:                                              ; preds = %178
  %206 = zext i32 %198 to i64
  %207 = bitcast %"class.blink::Member.90"* %201 to i8*
  %208 = shl nuw nsw i64 %206, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %207, i64 %208) #12
  %209 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %200, align 8
  %210 = load i32, i32* %195, align 8
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %209, i64 %211
  %213 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  br label %215

215:                                              ; preds = %202, %205
  %216 = phi i32 [ %198, %202 ], [ %214, %205 ]
  %217 = phi %"class.blink::Member.90"* [ %201, %202 ], [ %209, %205 ]
  %218 = phi %"class.blink::Member.90"* [ %204, %202 ], [ %212, %205 ]
  %219 = zext i32 %216 to i64
  %220 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %217, i64 %219
  %221 = bitcast %"class.blink::Member.90"* %218 to i8*
  %222 = ptrtoint %"class.blink::Member.90"* %220 to i64
  %223 = ptrtoint %"class.blink::Member.90"* %218 to i64
  %224 = sub i64 %222, %223
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %221, i64 %224) #12
  store i32 0, i32* %195, align 8
  store i32 0, i32* %197, align 4
  %225 = bitcast %"class.WTF::Deque"* %194 to i8**
  %226 = load i8*, i8** %225, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %226) #12
  %227 = bitcast %"class.WTF::Deque"* %194 to i64*
  store atomic i64 0, i64* %227 monotonic, align 8
  %228 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %228, align 8
  %229 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %193, i64 0, i32 6
  store i64 0, i64* %229, align 8
  %230 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %230) #12
  %231 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %11, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %231) #12
  br label %234

232:                                              ; preds = %141, %138
  %233 = phi i8 [ %22, %138 ], [ 1, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %21

234:                                              ; preds = %138, %36, %39, %215, %153, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelperD0Ev(%"class.blink::(anonymous namespace)::TeeHelper"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_19TeeHelper9DebugNameEv(%"class.blink::(anonymous namespace)::TeeHelper"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9) #12
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper11DestinationD0Ev(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination9BeginReadEPPKcPm(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture, i8** nocapture, i64* nocapture) unnamed_addr #0 align 2 {
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %57

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %9 = load i8, i8* %8, align 1, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %57

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %40, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0
  %19 = tail call fastcc dereferenceable(8) %"class.blink::Member.90"* @_ZN3WTF5DequeIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEELj0ENS1_13HeapAllocatorEEixEj(%"class.WTF::Deque"* %18)
  %20 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::(anonymous namespace)::TeeHelper::Chunk"*, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Chunk", %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 6
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  store i8* %26, i8** %1, align 8
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Chunk", %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = load i64, i64* %24, align 8
  %31 = sub i64 %29, %30
  store i64 %31, i64* %2, align 8
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 5
  %33 = bitcast %"class.blink::Member.90"* %32 to i64*
  %34 = ptrtoint %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %21 to i64
  store atomic i64 %34, i64* %33 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %17
  %38 = bitcast %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %21 to i8*
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #12
  br label %57

40:                                               ; preds = %11
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %43, align 8
  %45 = bitcast %"class.blink::BytesConsumer"* %44 to i32 (%"class.blink::BytesConsumer"*)***
  %46 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %46, i64 10
  %48 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %47, align 8
  %49 = tail call i32 %48(%"class.blink::BytesConsumer"* %44) #12
  switch i32 %49, label %56 [
    i32 0, label %57
    i32 1, label %50
    i32 2, label %53
  ]

50:                                               ; preds = %40
  store i8 1, i8* %8, align 1
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %52 = bitcast %"class.blink::Member.65"* %51 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  br label %57

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %55 = bitcast %"class.blink::Member.65"* %54 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  br label %57

56:                                               ; preds = %40
  br label %57

57:                                               ; preds = %37, %17, %40, %3, %7, %56, %53, %50
  %58 = phi i32 [ 3, %56 ], [ 3, %53 ], [ 2, %50 ], [ 2, %7 ], [ 2, %3 ], [ 1, %40 ], [ 0, %17 ], [ 0, %37 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EndReadEm(%"class.blink::(anonymous namespace)::TeeHelper::Destination"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.blink::Persistent", align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 5
  %7 = bitcast %"class.blink::Member.90"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %177, label %14

14:                                               ; preds = %2
  %15 = tail call fastcc dereferenceable(8) %"class.blink::Member.90"* @_ZN3WTF5DequeIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEELj0ENS1_13HeapAllocatorEEixEj(%"class.WTF::Deque"* %8)
  %16 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::(anonymous namespace)::TeeHelper::Chunk"*, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 6
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %1
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Chunk", %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %17, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = icmp eq i64 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %14
  %26 = load i32, i32* %9, align 8
  br label %47

27:                                               ; preds = %14
  store i64 0, i64* %18, align 8
  %28 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %28, align 8
  %30 = load i32, i32* %9, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %29, i64 %31
  %33 = add i32 %30, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %29, i64 %34
  %36 = bitcast %"class.blink::Member.90"* %32 to i8*
  %37 = ptrtoint %"class.blink::Member.90"* %35 to i64
  %38 = ptrtoint %"class.blink::Member.90"* %32 to i64
  %39 = sub i64 %37, %38
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %36, i64 %39) #12
  %40 = load i32, i32* %9, align 8
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, -1
  %44 = icmp eq i32 %40, %43
  %45 = add i32 %40, 1
  %46 = select i1 %44, i32 0, i32 %45
  store i32 %46, i32* %9, align 8
  br label %47

47:                                               ; preds = %25, %27
  %48 = phi i32 [ %26, %25 ], [ %46, %27 ]
  %49 = load i32, i32* %11, align 4
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %177

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %54, align 8
  %56 = bitcast %"class.blink::BytesConsumer"* %55 to i32 (%"class.blink::BytesConsumer"*)***
  %57 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %57, i64 10
  %59 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %58, align 8
  %60 = tail call i32 %59(%"class.blink::BytesConsumer"* %55) #12
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %177

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %64, i64 0, i32 1
  %66 = bitcast %"class.blink::MojoBindingContext"* %65 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %67 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %66, align 8
  %68 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %67, i64 6
  %69 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %68, align 8
  %70 = tail call %"class.base::SingleThreadTaskRunner"* %69(%"class.blink::MojoBindingContext"* %65, i8 zeroext 3) #12
  %71 = bitcast %"class.base::SingleThreadTaskRunner"* %70 to %"class.base::TaskRunner"*
  %72 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.9, i64 0, i64 0), i32 196) #12
  %73 = bitcast %"class.blink::Persistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #12
  %74 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %75, align 8, !alias.scope !6
  %76 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %76, align 8, !alias.scope !6
  %77 = ptrtoint %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0 to i64
  switch i64 %77, label %78 [
    i64 0, label %104
    i64 -1, label %104
  ]

78:                                               ; preds = %62
  %79 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %80 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %79, i64 0, i32 1
  %81 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %80) #12, !noalias !6
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %78
  %84 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %80, i8* %84) #12
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i8* [ %84, %83 ], [ %81, %78 ]
  %87 = bitcast i8* %86 to %"class.blink::ThreadState"**
  %88 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %87, align 8, !noalias !6
  %89 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %89, align 8, !noalias !6
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8, !noalias !6
  %93 = icmp eq %"class.blink::PersistentNode"* %92, null
  br i1 %93, label %94, label %97, !prof !2

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %95) #12
  %96 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  br label %97

97:                                               ; preds = %94, %85
  %98 = phi %"class.blink::PersistentNode"* [ %96, %94 ], [ %92, %85 ]
  %99 = bitcast %"class.blink::PersistentNode"* %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !6
  %101 = bitcast %"class.blink::PersistentRegion"* %90 to i64*
  store i64 %100, i64* %101, align 8, !noalias !6
  %102 = bitcast %"class.blink::PersistentNode"* %98 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %74, %"class.blink::PersistentBase"** %102, align 8, !noalias !6
  %103 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %98, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_19TeeHelper11DestinationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv, void (%"class.blink::Visitor"*, i8*)** %103, align 8
  store %"class.blink::PersistentNode"* %98, %"class.blink::PersistentNode"** %76, align 8, !alias.scope !6
  br label %104

104:                                              ; preds = %62, %62, %97
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %105, align 8, !alias.scope !9
  %106 = call i8* @_Znwm(i64 64) #13, !noalias !12
  %107 = bitcast i8* %106 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %107, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS3_10PersistentIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS2_10PersistentIS5_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !12
  %108 = getelementptr inbounds i8, i8* %106, i64 32
  %109 = bitcast i8* %108 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination5CloseEv to i64), i64 0>, <2 x i64>* %109, align 8, !noalias !12
  %110 = getelementptr inbounds i8, i8* %106, i64 48
  %111 = bitcast %"class.blink::Persistent"* %5 to i64*
  %112 = load i64, i64* %111, align 8, !noalias !12
  %113 = bitcast i8* %110 to i64*
  store i64 %112, i64* %113, align 8, !noalias !12
  %114 = getelementptr inbounds i8, i8* %106, i64 56
  %115 = bitcast i8* %114 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %115, align 8, !noalias !12
  switch i64 %112, label %116 [
    i64 0, label %142
    i64 -1, label %142
  ]

116:                                              ; preds = %104
  %117 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !12
  %118 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %117, i64 0, i32 1
  %119 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %118) #12, !noalias !12
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %123, !prof !2

121:                                              ; preds = %116
  %122 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12, !noalias !12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %118, i8* %122) #12, !noalias !12
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i8* [ %122, %121 ], [ %119, %116 ]
  %125 = bitcast i8* %124 to %"class.blink::ThreadState"**
  %126 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %125, align 8, !noalias !12
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %128 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %127, align 8, !noalias !12
  %129 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %129, align 8, !noalias !12
  %131 = icmp eq %"class.blink::PersistentNode"* %130, null
  br i1 %131, label %132, label %135, !prof !2

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %128, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %133) #12, !noalias !12
  %134 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %129, align 8, !noalias !12
  br label %135

135:                                              ; preds = %132, %123
  %136 = phi %"class.blink::PersistentNode"* [ %134, %132 ], [ %130, %123 ]
  %137 = bitcast %"class.blink::PersistentNode"* %136 to i64*
  %138 = load i64, i64* %137, align 8, !noalias !12
  %139 = bitcast %"class.blink::PersistentRegion"* %128 to i64*
  store i64 %138, i64* %139, align 8, !noalias !12
  %140 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %136, i64 0, i32 0
  store i8* %110, i8** %140, align 8, !noalias !12
  %141 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %136, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_19TeeHelper11DestinationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv, void (%"class.blink::Visitor"*, i8*)** %141, align 8, !noalias !12
  store %"class.blink::PersistentNode"* %136, %"class.blink::PersistentNode"** %115, align 8, !noalias !12
  br label %142

142:                                              ; preds = %104, %104, %135
  %143 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %106, i8** %143, align 8, !alias.scope !12
  %144 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %71, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #12
  %145 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %145) #12
  %146 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %76, align 8
  %147 = icmp eq %"class.blink::PersistentNode"* %146, null
  br i1 %147, label %167, label %148

148:                                              ; preds = %142
  %149 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %150 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %149, i64 0, i32 1
  %151 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %150) #12
  %152 = icmp eq i8* %151, null
  br i1 %152, label %153, label %155, !prof !2

153:                                              ; preds = %148
  %154 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %150, i8* %154) #12
  br label %155

155:                                              ; preds = %153, %148
  %156 = phi i8* [ %154, %153 ], [ %151, %148 ]
  %157 = bitcast i8* %156 to %"class.blink::ThreadState"**
  %158 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %158, i64 0, i32 3, i32 0, i32 0, i32 0
  %160 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %159, align 8
  %161 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %76, align 8
  %162 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %160, i64 0, i32 0, i32 0
  %163 = bitcast %"class.blink::PersistentRegion"* %160 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.blink::PersistentNode"* %161 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %161, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %166, align 8
  store %"class.blink::PersistentNode"* %161, %"class.blink::PersistentNode"** %162, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %76, align 8
  br label %167

167:                                              ; preds = %142, %155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #12
  %168 = icmp eq %"class.base::SingleThreadTaskRunner"* %70, null
  br i1 %168, label %177, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %70, i64 0, i32 0, i32 0, i32 1
  %171 = getelementptr inbounds %"class.base::RefCountedThreadSafe.345", %"class.base::RefCountedThreadSafe.345"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw sub i32* %171, i32 1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.base::RefCountedThreadSafe.345", %"class.base::RefCountedThreadSafe.345"* %170, i64 -2
  %176 = bitcast %"class.base::RefCountedThreadSafe.345"* %175 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %176) #12
  br label %177

177:                                              ; preds = %174, %169, %167, %47, %51, %2
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BlobDataHandle"* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE(%"class.blink::BytesConsumer"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::BlobDataHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EncodedFormData"* @_ZN5blink13BytesConsumer15DrainAsFormDataEv(%"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EncodedFormData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumer15DrainAsDataPipeEv(%"class.mojo::ScopedHandleBase.343"* noalias sret, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::ScopedHandleBase.343", %"class.mojo::ScopedHandleBase.343"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %33

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %8 = load i8, i8* %7, align 1, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %13, align 8
  %15 = bitcast %"class.blink::BytesConsumer"* %14 to i32 (%"class.blink::BytesConsumer"*)***
  %16 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %16, i64 10
  %18 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::BytesConsumer"* %14) #12
  %20 = icmp ne i32 %19, 1
  %21 = add i32 %19, -1
  %22 = icmp ult i32 %21, 2
  %23 = and i1 %20, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %26 = ptrtoint %"class.blink::BytesConsumer::Client"* %1 to i64
  %27 = bitcast %"class.blink::Member.65"* %25 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::BytesConsumer::Client"* %1 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #12
  br label %33

33:                                               ; preds = %2, %6, %30, %24, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination11ClearClientEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::Member.65"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6CancelEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %81

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 1, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %81

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %12, align 8
  %14 = bitcast %"class.blink::BytesConsumer"* %13 to i32 (%"class.blink::BytesConsumer"*)***
  %15 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %15, i64 10
  %17 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::BytesConsumer"* %13) #12
  %19 = icmp ne i32 %18, 1
  %20 = add i32 %18, -1
  %21 = icmp ult i32 %20, 2
  %22 = and i1 %19, %21
  br i1 %22, label %81, label %23

23:                                               ; preds = %9
  store i8 1, i8* %2, align 8
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %26, %28
  %30 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %30, align 8
  br i1 %29, label %35, label %32

32:                                               ; preds = %23
  %33 = zext i32 %26 to i64
  %34 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %31, i64 %33
  br label %45

35:                                               ; preds = %23
  %36 = zext i32 %28 to i64
  %37 = bitcast %"class.blink::Member.90"* %31 to i8*
  %38 = shl nuw nsw i64 %36, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %38) #12
  %39 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %30, align 8
  %40 = load i32, i32* %25, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %39, i64 %41
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  br label %45

45:                                               ; preds = %32, %35
  %46 = phi i32 [ %28, %32 ], [ %44, %35 ]
  %47 = phi %"class.blink::Member.90"* [ %31, %32 ], [ %39, %35 ]
  %48 = phi %"class.blink::Member.90"* [ %34, %32 ], [ %42, %35 ]
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %47, i64 %49
  %51 = bitcast %"class.blink::Member.90"* %48 to i8*
  %52 = ptrtoint %"class.blink::Member.90"* %50 to i64
  %53 = ptrtoint %"class.blink::Member.90"* %48 to i64
  %54 = sub i64 %52, %53
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %51, i64 %54) #12
  store i32 0, i32* %25, align 8
  store i32 0, i32* %27, align 4
  %55 = bitcast %"class.WTF::Deque"* %24 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %56) #12
  %57 = bitcast %"class.WTF::Deque"* %24 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 6
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %61 = bitcast %"class.blink::Member.65"* %60 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  %62 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %10, align 8
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %64, i64 0, i32 7
  %66 = load i8, i8* %65, align 8, !range !5
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %62, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %70, i64 0, i32 7
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %62, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %75, align 8
  %77 = bitcast %"class.blink::BytesConsumer"* %76 to void (%"class.blink::BytesConsumer"*)***
  %78 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %78, i64 9
  %80 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %79, align 8
  tail call void %80(%"class.blink::BytesConsumer"* %76) #12
  br label %81

81:                                               ; preds = %1, %5, %74, %68, %45, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination14GetPublicStateEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 1, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %12, align 8
  %14 = bitcast %"class.blink::BytesConsumer"* %13 to i32 (%"class.blink::BytesConsumer"*)***
  %15 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %15, i64 10
  %17 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::BytesConsumer"* %13) #12
  %19 = icmp eq i32 %18, 1
  %20 = select i1 %19, i32 0, i32 %18
  br label %21

21:                                               ; preds = %1, %5, %9
  %22 = phi i32 [ %20, %9 ], [ 1, %5 ], [ 1, %1 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination8GetErrorEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %4, align 8
  %6 = bitcast %"class.blink::BytesConsumer"* %5 to %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)***
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)**, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %7, i64 11
  %9 = load %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)*, %"class.WTF::StringImpl"* (%"class.blink::BytesConsumer"*)** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* %9(%"class.blink::BytesConsumer"* %5) #12
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_19TeeHelper11Destination9DebugNameEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i64 22) #12
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumerD2Ev(%"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(8) %"class.blink::Member.90"* @_ZN3WTF5DequeIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEELj0ENS1_13HeapAllocatorEEixEj(%"class.WTF::Deque"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, %8
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, %10
  br label %16

16:                                               ; preds = %12, %1
  %17 = phi i32 [ %15, %12 ], [ %10, %1 ]
  %18 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = icmp eq i32 %17, %8
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  store i8* null, i8** %6, align 8
  br label %30

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  store i8* %25, i8** %6, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0), i32 119, %"class.logging::CheckOpResult"* nonnull %3) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %31 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = load i32, i32* %7, align 8
  %34 = icmp eq i32 %32, %33
  %35 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %37 = select i1 %34, i32 0, i32 %33
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %38
  ret %"class.blink::Member.90"* %39
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination5CloseEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  store i8 1, i8* %2, align 1
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %10, align 8
  %12 = icmp eq %"class.blink::BytesConsumer::Client"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::BytesConsumer::Client"* %11 to void (%"class.blink::BytesConsumer::Client"*)***
  %15 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %15, i64 3
  %17 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %16, align 8
  tail call void %17(%"class.blink::BytesConsumer::Client"* nonnull %11) #12
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %19 = bitcast %"class.blink::Member.65"* %18 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  br label %20

20:                                               ; preds = %9, %5, %1, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS3_10PersistentIS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::(anonymous namespace)::TeeHelper::Destination"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)**
  %21 = load void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)*, void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::(anonymous namespace)::TeeHelper::Destination"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* %12) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS2_10PersistentIS5_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #12
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_19TeeHelper11DestinationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::TeeHelper::Destination"**
  %5 = load %"class.blink::(anonymous namespace)::TeeHelper::Destination"*, %"class.blink::(anonymous namespace)::TeeHelper::Destination"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #12
  %7 = icmp eq %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_19TeeHelper11DestinationEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #12
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination6NotifyEv(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %71

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 1, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %71

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %43

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %18, align 8
  %20 = bitcast %"class.blink::BytesConsumer"* %19 to i32 (%"class.blink::BytesConsumer"*)***
  %21 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %21, i64 10
  %23 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::BytesConsumer"* %19) #12
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %43

26:                                               ; preds = %15
  %27 = load i8, i8* %6, align 1, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %71

29:                                               ; preds = %26
  %30 = load i8, i8* %2, align 8, !range !5
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %71

32:                                               ; preds = %29
  store i8 1, i8* %6, align 1
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %33, align 8
  %35 = icmp eq %"class.blink::BytesConsumer::Client"* %34, null
  br i1 %35, label %71, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::BytesConsumer::Client"* %34 to void (%"class.blink::BytesConsumer::Client"*)***
  %38 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %38, i64 3
  %40 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %39, align 8
  tail call void %40(%"class.blink::BytesConsumer::Client"* nonnull %34) #12
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %42 = bitcast %"class.blink::Member.65"* %41 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %71

43:                                               ; preds = %15, %9
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %44, align 8
  %46 = icmp eq %"class.blink::BytesConsumer::Client"* %45, null
  br i1 %46, label %71, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::BytesConsumer::Client"* %45 to void (%"class.blink::BytesConsumer::Client"*)***
  %49 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %49, i64 3
  %51 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %50, align 8
  tail call void %51(%"class.blink::BytesConsumer::Client"* nonnull %45) #12
  %52 = load i8, i8* %2, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %71

54:                                               ; preds = %47
  %55 = load i8, i8* %6, align 1, !range !5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %71

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::(anonymous namespace)::TeeHelper"*, %"class.blink::(anonymous namespace)::TeeHelper"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper", %"class.blink::(anonymous namespace)::TeeHelper"* %59, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %60, align 8
  %62 = bitcast %"class.blink::BytesConsumer"* %61 to i32 (%"class.blink::BytesConsumer"*)***
  %63 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %63, i64 10
  %65 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %64, align 8
  %66 = tail call i32 %65(%"class.blink::BytesConsumer"* %61) #12
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %71

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 3
  %70 = bitcast %"class.blink::Member.65"* %69 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  br label %71

71:                                               ; preds = %43, %57, %47, %54, %36, %32, %29, %26, %5, %1, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_19TeeHelper11Destination7EnqueueEPNS1_5ChunkE(%"class.blink::(anonymous namespace)::TeeHelper::Destination"* nocapture, %"class.blink::(anonymous namespace)::TeeHelper::Chunk"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = ptrtoint %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %1 to i64
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %328

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %23, label %17

17:                                               ; preds = %10
  %18 = add i32 %16, 1
  %19 = icmp eq i32 %18, %13
  br i1 %19, label %20, label %310

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  br label %32

23:                                               ; preds = %10
  %24 = icmp eq i32 %16, 0
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %16, %28
  br i1 %29, label %32, label %310

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %310

32:                                               ; preds = %30, %27, %20
  %33 = phi i32 [ %22, %20 ], [ %26, %27 ], [ 0, %30 ]
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %37 = lshr i32 %33, 2
  %38 = add i32 %33, 1
  %39 = add i32 %38, %37
  %40 = icmp ugt i32 %39, 16
  %41 = select i1 %40, i32 %39, i32 16
  %42 = zext i32 %41 to i64
  %43 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEENS1_13HeapAllocatorEE14AllocationSizeEm(i64 %42) #12
  %44 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %45 = icmp eq %"class.blink::Member.90"* %44, null
  br i1 %45, label %133, label %46

46:                                               ; preds = %32
  %47 = bitcast %"class.blink::Member.90"* %44 to i8*
  %48 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %47, i64 %43) #12
  br i1 %48, label %49, label %133

49:                                               ; preds = %46
  %50 = lshr i64 %43, 3
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %34, align 8
  %52 = load i32, i32* %12, align 8
  %53 = load i32, i32* %15, align 4
  %54 = icmp ugt i32 %52, %53
  br i1 %54, label %55, label %310

55:                                               ; preds = %49
  %56 = sub i32 %52, %33
  %57 = add i32 %56, %51
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %58
  %60 = zext i32 %33 to i64
  %61 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %60
  %62 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %63 = zext i32 %57 to i64
  %64 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %62, i64 %63
  %65 = icmp ne %"class.blink::Member.90"* %64, null
  %66 = icmp ne %"class.blink::Member.90"* %59, null
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %121, !prof !4

68:                                               ; preds = %55
  %69 = icmp eq %"class.blink::Member.90"* %59, %64
  br i1 %69, label %101, label %70

70:                                               ; preds = %68
  %71 = icmp ult %"class.blink::Member.90"* %64, %59
  br i1 %71, label %72, label %83

72:                                               ; preds = %70
  %73 = icmp ult i32 %52, %33
  br i1 %73, label %74, label %101

74:                                               ; preds = %72, %74
  %75 = phi %"class.blink::Member.90"* [ %81, %74 ], [ %64, %72 ]
  %76 = phi %"class.blink::Member.90"* [ %80, %74 ], [ %59, %72 ]
  %77 = bitcast %"class.blink::Member.90"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.blink::Member.90"* %75 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %76, i64 1
  %81 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %75, i64 1
  %82 = icmp ult %"class.blink::Member.90"* %80, %61
  br i1 %82, label %74, label %101

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %61, i64 -1
  %85 = icmp ult %"class.blink::Member.90"* %84, %59
  br i1 %85, label %101, label %86

86:                                               ; preds = %83
  %87 = ptrtoint %"class.blink::Member.90"* %84 to i64
  %88 = ptrtoint %"class.blink::Member.90"* %59 to i64
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %64, i64 %90
  br label %92

92:                                               ; preds = %92, %86
  %93 = phi %"class.blink::Member.90"* [ %99, %92 ], [ %91, %86 ]
  %94 = phi %"class.blink::Member.90"* [ %98, %92 ], [ %84, %86 ]
  %95 = bitcast %"class.blink::Member.90"* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.blink::Member.90"* %93 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %94, i64 -1
  %99 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %93, i64 -1
  %100 = icmp ult %"class.blink::Member.90"* %98, %59
  br i1 %100, label %101, label %92

101:                                              ; preds = %92, %74, %83, %72, %68
  %102 = ptrtoint %"class.blink::Member.90"* %61 to i64
  %103 = ptrtoint %"class.blink::Member.90"* %59 to i64
  %104 = sub i64 %102, %103
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %121, label %106

106:                                              ; preds = %101
  %107 = ashr exact i64 %104, 3
  br label %108

108:                                              ; preds = %118, %106
  %109 = phi i64 [ %111, %118 ], [ %107, %106 ]
  %110 = phi %"class.blink::Member.90"* [ %119, %118 ], [ %64, %106 ]
  %111 = add i64 %109, -1
  %112 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %108
  %115 = bitcast %"class.blink::Member.90"* %110 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %116) #12
  br label %118

118:                                              ; preds = %114, %108
  %119 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %110, i64 1
  %120 = icmp eq i64 %111, 0
  br i1 %120, label %121, label %108

121:                                              ; preds = %118, %101, %55
  %122 = load i32, i32* %12, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %123
  %125 = icmp ult i32 %57, %33
  %126 = select i1 %125, i32 %57, i32 %33
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %127
  %129 = bitcast %"class.blink::Member.90"* %124 to i8*
  %130 = ptrtoint %"class.blink::Member.90"* %128 to i64
  %131 = ptrtoint %"class.blink::Member.90"* %124 to i64
  %132 = sub i64 %130, %131
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %129, i64 %132) #12
  store i32 %57, i32* %12, align 8
  br label %310

133:                                              ; preds = %46, %32
  %134 = tail call fastcc i64 @_ZNK3WTF16VectorBufferBaseIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEENS1_13HeapAllocatorEE14AllocationSizeEm(i64 %42) #12
  %135 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #12
  %136 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %136, align 8
  %137 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #12
  %138 = icmp ult i64 %134, 8
  br i1 %138, label %140, label %139

139:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #12
  store i8* null, i8** %136, align 8
  br label %149

140:                                              ; preds = %133
  %141 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %142 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %141, i8* %142) #12
  %143 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #12
  store i8* %144, i8** %136, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %4) #12
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #12
  br label %149

149:                                              ; preds = %146, %140, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #12
  %150 = and i64 %134, -8
  %151 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %152 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %151, i64 0, i32 1
  %153 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %152) #12
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %157, !prof !2

155:                                              ; preds = %149
  %156 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %152, i8* %156) #12
  br label %157

157:                                              ; preds = %155, %149
  %158 = phi i8* [ %156, %155 ], [ %153, %149 ]
  %159 = bitcast i8* %158 to %"class.blink::ThreadState"**
  %160 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %160, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %161, align 8
  %163 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %157
  %166 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %167 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %166, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.54"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.54"*)) #12
  br label %168

168:                                              ; preds = %165, %157
  %169 = phi i32 [ %163, %157 ], [ %167, %165 ]
  %170 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %162, %"class.blink::ThreadState"* %160, i64 %150, i32 4, i32 %169, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEENS_12VectorTraitsIS7_EEEEEEPKcv, i64 0, i64 0)) #12
  %171 = getelementptr inbounds i8, i8* %170, i64 -4
  %172 = bitcast i8* %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = or i16 %173, 1
  store atomic i16 %174, i16* %172 release, align 2
  %175 = bitcast %"class.WTF::Deque"* %11 to i64*
  %176 = ptrtoint i8* %170 to i64
  store atomic i64 %176, i64* %175 monotonic, align 8
  %177 = lshr i64 %134, 3
  %178 = trunc i64 %177 to i32
  store i32 %178, i32* %34, align 8
  %179 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %168
  %182 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %170) #12
  br label %183

183:                                              ; preds = %181, %168
  %184 = load i32, i32* %12, align 8
  %185 = load i32, i32* %15, align 4
  %186 = icmp ugt i32 %184, %185
  br i1 %186, label %231, label %187

187:                                              ; preds = %183
  %188 = zext i32 %184 to i64
  %189 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %188
  %190 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %191 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %190, i64 %188
  %192 = icmp ne %"class.blink::Member.90"* %191, null
  %193 = icmp ne %"class.blink::Member.90"* %189, null
  %194 = and i1 %193, %192
  br i1 %194, label %195, label %219, !prof !4

195:                                              ; preds = %187
  %196 = zext i32 %185 to i64
  %197 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %196
  %198 = bitcast %"class.blink::Member.90"* %189 to i8*
  %199 = ptrtoint %"class.blink::Member.90"* %197 to i64
  %200 = ptrtoint %"class.blink::Member.90"* %189 to i64
  %201 = sub i64 %199, %200
  %202 = bitcast %"class.blink::Member.90"* %191 to i8*
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %202, i8* nonnull %198, i64 %201) #12
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %219, label %204

204:                                              ; preds = %195
  %205 = ashr exact i64 %201, 3
  br label %206

206:                                              ; preds = %216, %204
  %207 = phi i64 [ %209, %216 ], [ %205, %204 ]
  %208 = phi %"class.blink::Member.90"* [ %217, %216 ], [ %191, %204 ]
  %209 = add i64 %207, -1
  %210 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %206
  %213 = bitcast %"class.blink::Member.90"* %208 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %214) #12
  br label %216

216:                                              ; preds = %212, %206
  %217 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %208, i64 1
  %218 = icmp eq i64 %209, 0
  br i1 %218, label %219, label %206

219:                                              ; preds = %216, %195, %187
  %220 = load i32, i32* %12, align 8
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %221
  %223 = load i32, i32* %15, align 4
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %224
  %226 = bitcast %"class.blink::Member.90"* %222 to i8*
  %227 = ptrtoint %"class.blink::Member.90"* %225 to i64
  %228 = ptrtoint %"class.blink::Member.90"* %222 to i64
  %229 = sub i64 %227, %228
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %226, i64 %229) #12
  %230 = bitcast %"class.blink::Member.90"* %36 to i8*
  br label %308

231:                                              ; preds = %183
  %232 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %233 = icmp ne %"class.blink::Member.90"* %232, null
  %234 = icmp ne %"class.blink::Member.90"* %36, null
  %235 = and i1 %234, %233
  br i1 %235, label %238, label %236, !prof !4

236:                                              ; preds = %231
  %237 = bitcast %"class.blink::Member.90"* %36 to i8*
  br label %257

238:                                              ; preds = %231
  %239 = zext i32 %185 to i64
  %240 = bitcast %"class.blink::Member.90"* %36 to i8*
  %241 = shl nuw nsw i64 %239, 3
  %242 = bitcast %"class.blink::Member.90"* %232 to i8*
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %242, i8* nonnull %240, i64 %241) #12
  %243 = icmp eq i32 %185, 0
  br i1 %243, label %257, label %244

244:                                              ; preds = %238, %254
  %245 = phi i64 [ %247, %254 ], [ %239, %238 ]
  %246 = phi %"class.blink::Member.90"* [ %255, %254 ], [ %232, %238 ]
  %247 = add nsw i64 %245, -1
  %248 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %254, label %250

250:                                              ; preds = %244
  %251 = bitcast %"class.blink::Member.90"* %246 to i8**
  %252 = load i8*, i8** %251, align 8
  %253 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %252) #12
  br label %254

254:                                              ; preds = %250, %244
  %255 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %246, i64 1
  %256 = icmp eq i64 %247, 0
  br i1 %256, label %257, label %244

257:                                              ; preds = %254, %238, %236
  %258 = phi i8* [ %237, %236 ], [ %240, %238 ], [ %240, %254 ]
  %259 = load i32, i32* %15, align 4
  %260 = zext i32 %259 to i64
  %261 = shl nuw nsw i64 %260, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %258, i64 %261) #12
  %262 = load i32, i32* %34, align 8
  %263 = load i32, i32* %12, align 8
  %264 = sub i32 %263, %33
  %265 = add i32 %264, %262
  %266 = zext i32 %263 to i64
  %267 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %266
  %268 = zext i32 %33 to i64
  %269 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %268
  %270 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %35, align 8
  %271 = zext i32 %265 to i64
  %272 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %270, i64 %271
  %273 = icmp ne %"class.blink::Member.90"* %272, null
  %274 = icmp ne %"class.blink::Member.90"* %267, null
  %275 = and i1 %274, %273
  br i1 %275, label %278, label %276, !prof !4

276:                                              ; preds = %257
  %277 = ptrtoint %"class.blink::Member.90"* %269 to i64
  br label %300

278:                                              ; preds = %257
  %279 = bitcast %"class.blink::Member.90"* %267 to i8*
  %280 = ptrtoint %"class.blink::Member.90"* %269 to i64
  %281 = ptrtoint %"class.blink::Member.90"* %267 to i64
  %282 = sub i64 %280, %281
  %283 = bitcast %"class.blink::Member.90"* %272 to i8*
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %283, i8* nonnull %279, i64 %282) #12
  %284 = icmp eq i64 %282, 0
  br i1 %284, label %300, label %285

285:                                              ; preds = %278
  %286 = ashr exact i64 %282, 3
  br label %287

287:                                              ; preds = %297, %285
  %288 = phi i64 [ %290, %297 ], [ %286, %285 ]
  %289 = phi %"class.blink::Member.90"* [ %298, %297 ], [ %272, %285 ]
  %290 = add i64 %288, -1
  %291 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %297, label %293

293:                                              ; preds = %287
  %294 = bitcast %"class.blink::Member.90"* %289 to i8**
  %295 = load i8*, i8** %294, align 8
  %296 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %295) #12
  br label %297

297:                                              ; preds = %293, %287
  %298 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %289, i64 1
  %299 = icmp eq i64 %290, 0
  br i1 %299, label %300, label %287

300:                                              ; preds = %297, %278, %276
  %301 = phi i64 [ %277, %276 ], [ %280, %278 ], [ %280, %297 ]
  %302 = load i32, i32* %12, align 8
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %36, i64 %303
  %305 = bitcast %"class.blink::Member.90"* %304 to i8*
  %306 = ptrtoint %"class.blink::Member.90"* %304 to i64
  %307 = sub i64 %301, %306
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %305, i64 %307) #12
  store i32 %265, i32* %12, align 8
  br label %308

308:                                              ; preds = %300, %219
  %309 = phi i8* [ %258, %300 ], [ %230, %219 ]
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %309) #12
  br label %310

310:                                              ; preds = %308, %121, %49, %30, %27, %17
  %311 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %312 = load %"class.blink::Member.90"*, %"class.blink::Member.90"** %311, align 8
  %313 = load i32, i32* %15, align 4
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds %"class.blink::Member.90", %"class.blink::Member.90"* %312, i64 %314
  %316 = getelementptr inbounds %"class.blink::(anonymous namespace)::TeeHelper::Destination", %"class.blink::(anonymous namespace)::TeeHelper::Destination"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %317 = load i32, i32* %316, align 8
  %318 = add i32 %317, -1
  %319 = icmp eq i32 %313, %318
  %320 = add i32 %313, 1
  %321 = select i1 %319, i32 0, i32 %320
  store i32 %321, i32* %15, align 4
  %322 = bitcast %"class.blink::Member.90"* %315 to i64*
  store atomic i64 %6, i64* %322 monotonic, align 8
  %323 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %310
  %326 = bitcast %"class.blink::(anonymous namespace)::TeeHelper::Chunk"* %1 to i8*
  %327 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %326) #12
  br label %328

328:                                              ; preds = %325, %310, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE8FinalizeEPv(i8* nocapture) #0 align 2 {
  %2 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #12
  %3 = getelementptr inbounds i8, i8* %0, i64 12
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = sub nsw i64 0, %6
  %8 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %2, i64 %7) #12
  %9 = bitcast i8* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %17, label %12, !prof !4

12:                                               ; preds = %1
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %12
  store i32 0, i32* %4, align 4
  br label %16

16:                                               ; preds = %15, %12
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #12
  store i8* null, i8** %9, align 8
  br label %17

17:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_19TeeHelper5ChunkEE7GetNameEPKv(i8* nocapture readnone) #5 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #3

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.71"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.71", %"class.WTF::Vector.71"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.71", %"class.WTF::Vector.71"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.71", %"class.WTF::Vector.71"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #12
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #12
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.71"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !4

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #12
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  %50 = bitcast %"class.WTF::Vector.71"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !4

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #12
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #12
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !4

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #12
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #12
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.71"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %96, i8* %97) #12
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #12
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #12
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  %105 = getelementptr inbounds %"class.WTF::Vector.71", %"class.WTF::Vector.71"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !4

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #12
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZNK3WTF16VectorBufferBaseIN5blink6MemberINS1_12_GLOBAL__N_19TeeHelper5ChunkEEENS1_13HeapAllocatorEE14AllocationSizeEm(i64) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.16, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12_GLOBAL__N_19TeeHelper5ChunkEEEN3WTF12VectorTraitsIS6_EEEEE7GetNameEPKv(i8* nocapture readnone) #5 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 24, i32 33}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_12_GLOBAL__N_19TeeHelper11DestinationEEENS_10PersistentIT_EEPS5_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_12_GLOBAL__N_19TeeHelper11DestinationEEENS_10PersistentIT_EEPS5_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS1_10PersistentIS4_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS1_10PersistentIS4_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!12 = !{!13, !15, !10}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS3_10PersistentIS6_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS3_10PersistentIS6_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS1_10PersistentIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_19TeeHelper11DestinationEFvvEJNS1_10PersistentIS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
