; ModuleID = '../../components/cast_certificate/cast_cert_validator.cc'
source_filename = "../../components/cast_certificate/cast_cert_validator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [88 x i8] }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cast_certificate::CertVerificationContext"* }
%"class.cast_certificate::CertVerificationContext" = type { i32 (...)** }
%"class.cast_certificate::CastCRL" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::CertErrors" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.18" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.net::CertError"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.net::TrustStoreInMemory" = type { %"class.net::TrustStore", %"class.std::__1::unordered_multimap.175" }
%"class.net::TrustStore" = type { %"class.net::CertIssuerSource" }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%"class.std::__1::unordered_multimap.175" = type { %"class.std::__1::__hash_table.176" }
%"class.std::__1::__hash_table.176" = type <{ %"class.std::__1::unique_ptr.177", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179", %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base.180"** }
%"struct.std::__1::__hash_node_base.180" = type { %"struct.std::__1::__hash_node_base.180"* }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::__bucket_list_deallocator.182" }
%"class.std::__1::__bucket_list_deallocator.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { i64 }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::__hash_node_base.180" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { float }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe.24", %"class.std::__1::unique_ptr.25", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.29", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.41", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.60", %"class.std::__1::vector.60", i8, %"class.std::__1::vector.41", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.67", i8, i8, %"class.absl::optional", %"class.absl::optional.75", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.69" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.75", %"class.absl::optional.75", %"class.absl::optional.75" }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.std::__1::vector.205"*, %"class.std::__1::vector.205"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"*, %"class.std::__1::__compressed_pair.207" }
%"struct.net::X509NameAttribute" = type { %"class.net::der::Input", i32, %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.net::X509NameAttribute"* }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::vector.205"* }
%"class.net::CertIssuerSourceStatic" = type { %"class.net::CertIssuerSource", %"class.std::__1::unordered_multimap" }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate" = type { %"class.net::SimplePathBuilderDelegate.base", [4 x i8] }
%"class.net::SimplePathBuilderDelegate.base" = type <{ %"class.net::CertPathBuilderDelegate", i64, i32 }>
%"class.net::CertPathBuilderDelegate" = type { %"class.net::VerifyCertificateChainDelegate" }
%"class.net::VerifyCertificateChainDelegate" = type { i32 (...)** }
%"class.net::CertPathBuilder" = type <{ %"struct.net::CertPathBuilder::Result", %"class.std::__1::unique_ptr.162", %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime", i32, i32, %"class.std::__1::set", i32, i32, i32, [4 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.net::CertPathBuilder::Result" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %"class.std::__1::vector.122", i64, i8, i8, [6 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.111", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.111" = type { %"class.std::__1::__tree.112" }
%"class.std::__1::__tree.112" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"class.std::__1::unique_ptr.124"*, %"class.std::__1::unique_ptr.124"*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.net::CertPathBuilderResultPath"* }
%"struct.net::CertPathBuilderResultPath" = type { %"class.std::__1::vector.127", %"struct.net::CertificateTrust", %"class.std::__1::set", %"class.std::__1::unique_ptr.141", %"class.net::CertPathErrors" }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %class.scoped_refptr.23*, %class.scoped_refptr.23*, %"class.std::__1::__compressed_pair.129" }
%class.scoped_refptr.23 = type { %"class.net::ParsedCertificate"* }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.scoped_refptr.23* }
%"struct.net::CertificateTrust" = type { i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.net::CertPathBuilderDelegateData"* }
%"class.net::CertPathBuilderDelegateData" = type { i32 (...)** }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.147", %"class.net::CertErrors" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.net::CertErrors"* }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::unique_ptr.124"* }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.net::CertPathIter"* }
%"class.net::CertPathIter" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.168" }
%"class.base::time_internal::TimeBase.168" = type { i64 }
%"class.net::SimplePathBuilderDelegate" = type <{ %"class.net::CertPathBuilderDelegate", i64, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::der::Input" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%struct.evp_pkey_st = type { i32, i32, %union.anon.199, %struct.evp_pkey_asn1_method_st* }
%union.anon.199 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl" = type { %"class.cast_certificate::CertVerificationContext", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

@.str = private unnamed_addr constant [11 x i8] c"CommonName\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"CastCertError::ERR_CERTS_MISSING\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"CastCertError::ERR_CERTS_PARSE\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"CastCertError::ERR_CERTS_DATE_INVALID\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"CastCertError::ERR_CERTS_VERIFY_GENERIC\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"CastCertError::ERR_CERTS_RESTRICTIONS\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"CastCertError::ERR_CRL_INVALID\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"CastCertError::ERR_CERTS_REVOKED\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"CastCertError::ERR_UNEXPECTED\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"CastCertError::OK\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"CastCertError::UNKNOWN\00", align 1
@_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance = internal global i64 0, align 8
@_ZN16cast_certificate12_GLOBAL__N_114kCastRootCaDerE = internal constant [969 x i8] c"0\82\03\C50\82\02\AD\A0\03\02\01\02\02\01\020\0D\06\09*\86H\86\F7\0D\01\01\05\05\000u1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\0D0\0B\06\03U\04\0B\0C\04Cast1\150\13\06\03U\04\03\0C\0CCast Root CA0\1E\17\0D140402173426Z\17\0D340328173426Z0u1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\0D0\0B\06\03U\04\0B\0C\04Cast1\150\13\06\03U\04\03\0C\0CCast Root CA0\82\01\220\0D\06\09*\86H\86\F7\0D\01\01\01\05\00\03\82\01\0F\000\82\01\0A\02\82\01\01\00\BA\D9e\9D\DA9\D3\C1w\F6\D4\D0\AE\8FX\08h9J\95\EDp\CF\FDy\08\A9\AA\E5\E9\B8\A7-\A0gG\8A\9E\C9\CFp\B3\05\87i\11\ECp\98\97\C3\E6\C3\C3\EB\BD\C6\B0=\FCO\C1^8\9F\DA\CFs0\06[y7\C1^\8C\87G\94\9AA\92*\D6\95\C4q\5C']\08\B1\80\C6\92\BD\1B\E3A\97\A1\ECu\9FU\9E>\9F\8F\1C\C7ed\07\D3\B3\96\A1\04\9F\91\C4\DE\0A{l\D9\C8\C0x1\A0\19B\A9\E8\83\E3\CE\FC\F1\CE\C2.$F\95\09\19\CA\C0F\B2\E5\01\BA\D7O\F3\BF\F6i\AD\99\04\FA\A0\079\0E\E6\DFQG\07\C0\E4\A9\5CK\94\C5/\B3\A00\7F\E7\95k\B2\AF2\0D\F1\8C\D5m\CB{G\A7\08\AB\CB'\A3M\CFJZ\F1\05\D1\F8b\C5\10*ti\AA\E6K\96\FB\9B\D8c\E4Xf\D3\AD\8An\FF{^\F9\A5V\1E-\821[\F0\E2$\E6AJ\1F\AE\13\02\03\01\00\01\A3`0^0\0F\06\03U\1D\13\04\080\06\01\01\FF\02\01\020\1D\06\03U\1D\0E\04\16\04\14|\9A\1E}\DFyT\BC\D7\CC^\CA\99\86Eyet(\190\1F\06\03U\1D#\04\180\16\80\14|\9A\1E}\DFyT\BC\D7\CC^\CA\99\86Eyet(\190\0B\06\03U\1D\0F\04\04\03\02\01\060\0D\06\09*\86H\86\F7\0D\01\01\05\05\00\03\82\01\01\00\80\F4Z\FB=(\19Q \D7\D4\FB\12\97Je\F2X5\92w0j\F1\D7\B6Q\1A\7F\9A\CD\C7{\03B\ADUj\00\AF\F0\E1\06\C2\BDkxu\DB\FEA\11SJ9\BB\9A:\C6Y4/,3\E3\B2\D6\5C\7F\DDx\EBq[9\DA\83\90\C51\E2?#\EF\DA\EB+-w^\DE\C3C\D2\C9kY\82\CA\D5\ED\FA\A1d[\CB\F1\0D\1Ab\E1\9C\E8\A7\18p\F0_\17\96\F8\ED\86\DB\AE\1D\E0\CF>].\EE\16m\95+<\FD\97\F3\05Z$hM9\B6\F8\E4X\BA\F5\E0&xQ\C5[]N\09\E5lG\8BzZ.\89S\E6\CC6[&<\F8rC\02\82\D2+\CD\F0\D3\A3\EC\13>R\D5\83=\07\DC\1DCez3\02\01\A3\CE\B7\D6`Q;\09\C2#\8A2\FE\98\19`b\93\85\CD4F\DB\D5#\0Fy\DAw\00*\02m\83X\CE\03w5\E1\A3 \93\C2J\A2\A4F\1Cu,\1FM", align 16
@_ZN16cast_certificate12_GLOBAL__N_116kEurekaRootCaDerE = internal constant [967 x i8] c"0\82\03\C30\82\02\AB\A0\03\02\01\02\02\01\010\0D\06\09*\86H\86\F7\0D\01\01\05\05\000|1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\120\10\06\03U\04\0B\0C\09Google TV1\170\15\06\03U\04\03\0C\0EEureka Root CA0\1E\17\0D121217223933Z\17\0D321212223933Z0|1\0B0\09\06\03U\04\06\13\02US1\130\11\06\03U\04\08\0C\0ACalifornia1\160\14\06\03U\04\07\0C\0DMountain View1\130\11\06\03U\04\0A\0C\0AGoogle Inc1\120\10\06\03U\04\0B\0C\09Google TV1\170\15\06\03U\04\03\0C\0EEureka Root CA0\82\01\220\0D\06\09*\86H\86\F7\0D\01\01\01\05\00\03\82\01\0F\000\82\01\0A\02\82\01\01\00\B9\11\D0\EA\12\DC2\E1\DF\5C3k\19s\1D\9D\9E\D09v\BF\A5\84\09\A6\FDnm\E9\DC\8F6N\E9\88\02\BD\9F\F4\E8D\FDL\F5\9A\02VjG*clXE\CC|f$\DCyy\C3*\A4\B2\8B\A0\F7\A2\B5\CD\06~\DB\BE\EC\0C\86\F2\0D$`t\84\CA)#\84\02\D8\A7\ED;\F1\EC&GT\E3\B1-\E6d\0F\F6r\C5\E9\98R\17\C0\FC\F2, \C8@\F8G\C92\9E;\97\B1\8B\F5\98$pcf\19\C1R\E8\04\05=_\8D\BC\D8K\AFw\98o\1Fx\D1\B6P'M\E4\EC\14ig\1FX\AF\A9\A0\11&<\942\07\7F\D7\E9i\1F\AE?Oc\8A\8F\89\D6\F2\19x\5C!\8E\B1\B6W\D8\C0\E1\EE}n\DD\F1:\0Aj\F1\BA\FF\F9\83/\DC\B5\A4 \17c6\EF\C8b\19\CCV\CE\B2\EA1\89KxX\C1\BF\03\13\99\E0\12\F2\88\AA\9B\94\DA\DDvy\17\1E4\D1\0A\C4\07E\02\03\01\00\01\A3P0N0\1D\06\03U\1D\0E\04\16\04\14DN*GX\D8\B9H\91\F6O\CEt\A9\1D2\9A\8D\8D\E90\1F\06\03U\1D#\04\180\16\80\14DN*GX\D8\B9H\91\F6O\CEt\A9\1D2\9A\8D\8D\E90\0C\06\03U\1D\13\04\050\03\01\01\FF0\0D\06\09*\86H\86\F7\0D\01\01\05\05\00\03\82\01\01\00?\C8&\A0n\5C\05@y\A1\98\A93\DEht\85\EE\AE\B7\1C3Y\B0\11\DE\9F\F4O\D3\EBQ\09}G~nQ\85\F4T\CD\83\98%\B1\BA\B0W\EC\93\DB\12\E2\ECQIz\96s\9B\C8\96m\85\8C\D3\E1<\FA2\E2X\0Cwm\87\0C4\01\AA0\A9v\E0\C0\E7\DB^\1B\E9\100\A4\E0\09I&\B9X\CDZ\07\E5Pu\DE\9A;\F6S~\B1S^E'O\17\E3\083\B2P\0A\BB\F4\FC%\97)\DEAu0\FAw8\AAe\8AsO\EA\11{\EB|\17`'\0E\BC>vR\D8\8B\ED\1A\F8\EB7\BB\11\FD\AEp\17\0A\FE\E0\AD\06\B3\1Fi\8Ar\04\C2\C03\0B\D6/cL3\11\14\B8b6\88\C5\03e\01\19\A3\EF\00\BBo\0E\92\FF4\1C\A1\D61\D0\5C^\9F\99}\C7\CA\BD|r\0B\F4\5C\A5~n\04\A8\D2\99,Q\01\14\FE\A2H\F0~\BE\84\0D\B4\D3\E2\F3\0E}\DE\8B\F53", align 16
@.ref.tmp = private constant %"struct.net::ParseCertificateOptions" zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [57 x i8] c"../../components/cast_certificate/cast_cert_validator.cc\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"cert\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.ref.tmp.14 = private constant %"struct.net::ParseCertificateOptions" zeroinitializer, align 1
@_ZTVN16cast_certificate12_GLOBAL__N_123CastPathBuilderDelegateE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.net::SimplePathBuilderDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)* @_ZN3net25SimplePathBuilderDelegate30IsSignatureAlgorithmAcceptableERKNS_18SignatureAlgorithmEPNS_10CertErrorsE to i8*), i8* bitcast (i1 (%"class.net::SimplePathBuilderDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)* @_ZN3net25SimplePathBuilderDelegate21IsPublicKeyAcceptableEP11evp_pkey_stPNS_10CertErrorsE to i8*), i8* bitcast (void (%"class.net::VerifyCertificateChainDelegate"*)* @_ZN3net30VerifyCertificateChainDelegateD2Ev to i8*), i8* bitcast (void (%"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"*)* @_ZN16cast_certificate12_GLOBAL__N_123CastPathBuilderDelegateD0Ev to i8*), i8* bitcast (void (%"class.net::SimplePathBuilderDelegate"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)* @_ZN3net25SimplePathBuilderDelegate26CheckPathAfterVerificationERKNS_15CertPathBuilderEPNS_25CertPathBuilderResultPathE to i8*)] }, align 8
@_ZN3net11cert_errors23kValidityFailedNotAfterE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors24kValidityFailedNotBeforeE = external local_unnamed_addr constant i8*, align 8
@_ZZN16cast_certificate12_GLOBAL__N_118AudioOnlyPolicyOidEvE16kAudioOnlyPolicy = internal constant [10 x i8] c"+\06\01\04\01\D6y\02\05\02", align 1
@_ZTVN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*)* @_ZN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplD2Ev to i8*), i8* bitcast (void (%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*)* @_ZN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplD0Ev to i8*), i8* bitcast (i1 (%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*, %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, i32)* @_ZNK16cast_certificate12_GLOBAL__N_127CertVerificationContextImpl23VerifySignatureOverDataERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES9_N3net15DigestAlgorithmE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*)* @_ZNK16cast_certificate12_GLOBAL__N_127CertVerificationContextImpl13GetCommonNameEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKN4base4TimeEPNS0_10unique_ptrINS_23CertVerificationContextENS0_14default_deleteISH_EEEEPNS_20CastDeviceCertPolicyEPKNS_7CastCRLENS_9CRLPolicyE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr"*, i32*, %"class.cast_certificate::CastCRL"*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.net::CertErrors", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.net::CertErrors", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.base::OnceCallback", align 8
  %16 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %17 = ptrtoint i32* %3 to i64
  %18 = ptrtoint %"class.cast_certificate::CastCRL"* %4 to i64
  %19 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #9
  store i32 -1431655766, i32* %14, align 4
  %20 = ptrtoint i32* %14 to i64
  %21 = call i8* @_Znwm(i64 112) #10, !noalias !2
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.net::TrustStore"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEERKNS_4TimeEPNS4_10unique_ptrINS3_23CertVerificationContextENS4_14default_deleteISK_EEEEPNS3_20CastDeviceCertPolicyEPKNS3_7CastCRLENS3_9CRLPolicyEE3$_0JSD_SG_SO_SQ_ST_SU_PNS3_13CastCertErrorEEEEFvPN3net10TrustStoreEEE7RunOnceEPNS0_13BindStateBaseES11_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEERKNS_4TimeEPNS3_10unique_ptrINS2_23CertVerificationContextENS3_14default_deleteISJ_EEEEPNS2_20CastDeviceCertPolicyEPKNS2_7CastCRLENS2_9CRLPolicyEE3$_0JSC_SF_SN_SP_SS_ST_PNS2_13CastCertErrorEEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !2
  %23 = getelementptr inbounds i8, i8* %21, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = sdiv exact i64 %29, 24
  %31 = icmp eq i64 %29, 0
  %32 = inttoptr i64 %28 to %"class.std::__1::basic_string"*
  %33 = inttoptr i64 %26 to %"class.std::__1::basic_string"*
  br i1 %31, label %73, label %34

34:                                               ; preds = %6
  %35 = icmp ugt i64 %30, 768614336404564650
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast i8* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %34
  %39 = call i8* @_Znwm(i64 %29) #10
  %40 = bitcast i8* %39 to %"class.std::__1::basic_string"*
  %41 = getelementptr inbounds i8, i8* %21, i64 48
  %42 = bitcast i8* %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = bitcast i8* %23 to i8**
  store i8* %39, i8** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %30
  %45 = getelementptr inbounds i8, i8* %21, i64 56
  %46 = bitcast i8* %45 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %46, align 8
  %47 = bitcast i8* %41 to i64*
  %48 = ptrtoint i8* %39 to i64
  %49 = icmp eq %"class.std::__1::basic_string"* %32, %33
  br i1 %49, label %71, label %50

50:                                               ; preds = %38, %65
  %51 = phi %"class.std::__1::basic_string"* [ %67, %65 ], [ %40, %38 ]
  %52 = phi %"class.std::__1::basic_string"* [ %66, %65 ], [ %32, %38 ]
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #9
  br label %65

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %62, i64 %64) #9
  br label %65

65:                                               ; preds = %60, %57
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 1
  %68 = icmp eq %"class.std::__1::basic_string"* %66, %33
  br i1 %68, label %69, label %50

69:                                               ; preds = %65
  %70 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  br label %71

71:                                               ; preds = %69, %38
  %72 = phi i64 [ %48, %38 ], [ %70, %69 ]
  store i64 %72, i64* %47, align 8
  br label %73

73:                                               ; preds = %6, %71
  %74 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds i8, i8* %21, i64 64
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %74, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %21, i64 72
  %79 = bitcast i8* %78 to i64*
  store i64 %16, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %21, i64 80
  %81 = bitcast i8* %80 to i64*
  store i64 %17, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %21, i64 88
  %83 = bitcast i8* %82 to i64*
  store i64 %18, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %21, i64 96
  %85 = bitcast i8* %84 to i32*
  store i32 %5, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %21, i64 104
  %87 = bitcast i8* %86 to i64*
  store i64 %20, i64* %87, align 8
  %88 = bitcast %"class.base::OnceCallback"* %15 to i8**
  store i8* %21, i8** %88, align 8, !alias.scope !2
  %89 = load atomic i8, i8* bitcast (i64* @_ZGVZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to i8*) acquire, align 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %155, !prof !7

91:                                               ; preds = %73
  %92 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance) #9
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %155, label %94

94:                                               ; preds = %91
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %"class.base::internal::LockImpl"*)) #9
  call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.net::TrustStoreInMemory"*)) #9
  %95 = bitcast %"class.net::CertErrors"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false) #9
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %11) #9
  %96 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate26CreateWithoutCopyingUnsafeEPKhmRKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(i8* getelementptr inbounds ([969 x i8], [969 x i8]* @_ZN16cast_certificate12_GLOBAL__N_114kCastRootCaDerE, i64 0, i64 0), i64 969, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) @.ref.tmp, %"class.net::CertErrors"* nonnull %11) #9
  %97 = icmp eq %"class.net::ParsedCertificate"* %96, null
  br i1 %97, label %98, label %119

98:                                               ; preds = %94
  %99 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #9
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  %101 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #9
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.net::CertErrors"* nonnull %11) #9
  %102 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %104 to i64
  %111 = select i1 %105, i8* %107, i8* %101
  %112 = select i1 %105, i64 %109, i64 %110
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %100, i8* %111, i64 %112) #9
  %114 = load i8, i8* %103, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %98
  %117 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %116, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #9
  br label %119

119:                                              ; preds = %118, %94
  %120 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %122, !prof !8

122:                                              ; preds = %119
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %"class.base::internal::LockImpl"*)) #9
  br label %123

123:                                              ; preds = %122, %119
  call void @_ZN3net18TrustStoreInMemory29AddTrustAnchorWithConstraintsE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.net::TrustStoreInMemory"*), %"class.net::ParsedCertificate"* %96) #9
  %124 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #9
  %125 = bitcast %"class.net::CertErrors"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false) #9
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %8) #9
  %126 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate26CreateWithoutCopyingUnsafeEPKhmRKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(i8* getelementptr inbounds ([967 x i8], [967 x i8]* @_ZN16cast_certificate12_GLOBAL__N_116kEurekaRootCaDerE, i64 0, i64 0), i64 967, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) @.ref.tmp.14, %"class.net::CertErrors"* nonnull %8) #9
  %127 = icmp eq %"class.net::ParsedCertificate"* %126, null
  br i1 %127, label %128, label %149

128:                                              ; preds = %123
  %129 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #9
  %130 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  %131 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #9
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.net::CertErrors"* nonnull %8) #9
  %132 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = zext i8 %134 to i64
  %141 = select i1 %135, i8* %137, i8* %131
  %142 = select i1 %135, i64 %139, i64 %140
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %130, i8* %141, i64 %142) #9
  %144 = load i8, i8* %133, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %128
  %147 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %146, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #9
  br label %149

149:                                              ; preds = %148, %123
  %150 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %153, label %152, !prof !8

152:                                              ; preds = %149
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %"class.base::internal::LockImpl"*)) #9
  br label %153

153:                                              ; preds = %152, %149
  call void @_ZN3net18TrustStoreInMemory29AddTrustAnchorWithConstraintsE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.net::TrustStoreInMemory"*), %"class.net::ParsedCertificate"* %126) #9
  %154 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance) #9
  br label %155

155:                                              ; preds = %153, %91, %73
  %156 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %159, label %158, !prof !8

158:                                              ; preds = %155
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %"class.base::internal::LockImpl"*)) #9
  br label %159

159:                                              ; preds = %155, %158
  %160 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #9
  %161 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %163, i64* %164, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %161, align 8
  %165 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %166 = inttoptr i64 %163 to %"class.base::internal::BindStateBase"*
  %167 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %166, i64 0, i32 1
  %168 = bitcast void ()** %167 to void (%"class.base::internal::BindStateBase"*, %"class.net::TrustStore"*)**
  %169 = load void (%"class.base::internal::BindStateBase"*, %"class.net::TrustStore"*)*, void (%"class.base::internal::BindStateBase"*, %"class.net::TrustStore"*)** %168, align 8
  call void %169(%"class.base::internal::BindStateBase"* %166, %"class.net::TrustStore"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance, i64 0, i32 0, i64 40) to %"class.net::TrustStore"*)) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %165) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #9
  %170 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN16cast_certificate12_GLOBAL__N_114CastTrustStore11GetInstanceEvE8instance to %union.pthread_mutex_t*)) #9
  %171 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %171) #9
  %172 = load i32, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #9
  ret i32 %172
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16cast_certificate37VerifyDeviceCertUsingCustomTrustStoreERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKN4base4TimeEPNS0_10unique_ptrINS_23CertVerificationContextENS0_14default_deleteISH_EEEEPNS_20CastDeviceCertPolicyEPKNS_7CastCRLENS_9CRLPolicyEPN3net10TrustStoreE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.base::Time"* dereferenceable(8), %"class.std::__1::unique_ptr"*, i32*, %"class.cast_certificate::CastCRL"*, i32, %"class.net::TrustStore"*) local_unnamed_addr #0 {
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca %"class.std::__1::vector.203", align 8
  %10 = alloca %"class.net::der::Input", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.net::CertErrors", align 8
  %13 = alloca %"class.net::CertIssuerSourceStatic", align 8
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %"struct.net::ParseCertificateOptions", align 1
  %16 = alloca %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate", align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"struct.net::der::GeneralizedTime"*
  %19 = alloca %"class.net::CertPathBuilder", align 8
  %20 = alloca %"class.std::__1::set", align 8
  %21 = alloca [1 x %"class.net::der::Input"], align 8
  %22 = alloca %"struct.net::CertPathBuilder::Result", align 8
  %23 = icmp eq %"class.net::TrustStore"* %6, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %7
  %25 = tail call i32 @_ZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKN4base4TimeEPNS0_10unique_ptrINS_23CertVerificationContextENS0_14default_deleteISH_EEEEPNS_20CastDeviceCertPolicyEPKNS_7CastCRLENS_9CRLPolicyE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.base::Time"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* %2, i32* %3, %"class.cast_certificate::CastCRL"* %4, i32 %5)
  br label %363

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %28, %30
  br i1 %31, label %363, label %32

32:                                               ; preds = %26
  %33 = icmp eq %"class.cast_certificate::CastCRL"* %4, null
  %34 = icmp eq i32 %5, 1
  %35 = and i1 %33, %34
  br i1 %35, label %363, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.net::CertErrors"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  %38 = bitcast %"class.net::CertErrors"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %12) #9
  %39 = bitcast %"class.net::CertIssuerSourceStatic"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %13, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.net::CertIssuerSourceStatic"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  store float 0xFFFFFFFFE0000000, float* %40, align 8
  %42 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %13, i64 0, i32 1, i32 0, i32 4, i64 0
  %43 = bitcast i8* %42 to i32*
  store i32 -1431655766, i32* %43, align 4
  call void @_ZN3net22CertIssuerSourceStaticC1Ev(%"class.net::CertIssuerSourceStatic"* nonnull %13) #9
  %44 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %0 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  br i1 %48, label %98, label %49

49:                                               ; preds = %36
  %50 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %15, i64 0, i32 0
  br label %54

54:                                               ; preds = %49, %90
  %55 = phi i64 [ %47, %49 ], [ %94, %90 ]
  %56 = phi i64 [ 0, %49 ], [ %92, %90 ]
  %57 = phi i64 [ 0, %49 ], [ %91, %90 ]
  %58 = inttoptr i64 %55 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %56
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %67 = select i1 %63, i8* %65, i8* %66
  store i8* %67, i8** %51, align 8
  %68 = load i8, i8* %61, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %56, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %68 to i64
  %73 = select i1 %69, i64 %71, i64 %72
  store i64 %73, i64* %52, align 8
  %74 = call %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #9
  store i8 1, i8* %53, align 1
  %75 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %74, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %15, %"class.net::CertErrors"* nonnull %12) #9
  %76 = ptrtoint %"class.net::ParsedCertificate"* %75 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  %77 = icmp eq %"class.net::ParsedCertificate"* %75, null
  br i1 %77, label %351, label %78

78:                                               ; preds = %54
  %79 = icmp eq i64 %56, 0
  br i1 %79, label %80, label %89

80:                                               ; preds = %78
  %81 = inttoptr i64 %57 to %"class.net::ParsedCertificate"*
  %82 = icmp eq i64 %57, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %81) #9
  %88 = inttoptr i64 %57 to i8*
  call void @_ZdlPv(i8* %88) #10
  br label %90

89:                                               ; preds = %78
  call void @_ZN3net22CertIssuerSourceStatic7AddCertE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::CertIssuerSourceStatic"* nonnull %13, %"class.net::ParsedCertificate"* nonnull %75) #9
  br label %90

90:                                               ; preds = %87, %83, %80, %89
  %91 = phi i64 [ %76, %87 ], [ %76, %83 ], [ %76, %80 ], [ %57, %89 ]
  %92 = add nuw i64 %56, 1
  %93 = load i64, i64* %44, align 8
  %94 = load i64, i64* %46, align 8
  %95 = sub i64 %93, %94
  %96 = sdiv exact i64 %95, 24
  %97 = icmp ult i64 %92, %96
  br i1 %97, label %54, label %98

98:                                               ; preds = %90, %36
  %99 = phi i64 [ 0, %36 ], [ %91, %90 ]
  %100 = bitcast %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #9
  %101 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate", %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16 to %"class.net::SimplePathBuilderDelegate"*
  %103 = bitcast %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false)
  call void @_ZN3net25SimplePathBuilderDelegateC2EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"* nonnull %102, i64 2048, i32 1) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_123CastPathBuilderDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %104 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  store i64 -6148914691236517206, i64* %17, align 8
  %105 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8) %1, %"struct.net::der::GeneralizedTime"* nonnull %18) #9
  br i1 %105, label %106, label %348

106:                                              ; preds = %98
  %107 = bitcast %"class.net::CertPathBuilder"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %107) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 168, i1 false)
  %108 = inttoptr i64 %99 to %"class.net::ParsedCertificate"*
  %109 = icmp eq i64 %99, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 1 monotonic
  br label %113

113:                                              ; preds = %106, %110
  %114 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate", %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16, i64 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::set"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #9
  %116 = bitcast [1 x %"class.net::der::Input"]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  %117 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %21, i64 0, i64 0
  %118 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #9
  %119 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %21, i64 0, i64 0, i32 0
  %120 = extractvalue { i8*, i64 } %118, 0
  store i8* %120, i8** %119, align 8
  %121 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %21, i64 0, i64 0, i32 1
  %122 = extractvalue { i8*, i64 } %118, 1
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %125 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %20, i64 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::__tree_node_base"** %123 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %124, %"class.std::__1::__tree_end_node"** %125, align 8
  %127 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %21, i64 0, i64 1
  call void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"* nonnull %20, %"class.net::der::Input"* nonnull %117, %"class.net::der::Input"* %127) #9
  call void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"* nonnull %19, %"class.net::ParsedCertificate"* %108, %"class.net::TrustStore"* nonnull %6, %"class.net::CertPathBuilderDelegate"* nonnull %114, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %18, i32 2, i32 0, %"class.std::__1::set"* nonnull dereferenceable(24) %20, i32 0, i32 0) #9
  %128 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %20, i64 0, i32 0
  %129 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_node"**
  %130 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %129, align 8
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.134"* nonnull %128, %"class.std::__1::__tree_node"* %130) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #9
  %131 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %13, i64 0, i32 0
  call void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"* nonnull %19, %"class.net::CertIssuerSource"* nonnull %131) #9
  %132 = bitcast %"struct.net::CertPathBuilder::Result"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %132) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 80, i1 false)
  call void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* nonnull sret %22, %"class.net::CertPathBuilder"* nonnull %19) #9
  %133 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %22) #9
  br i1 %133, label %161, label %134

134:                                              ; preds = %113
  %135 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %22, i64 0, i32 2
  %136 = getelementptr inbounds %"class.std::__1::vector.122", %"class.std::__1::vector.122"* %135, i64 0, i32 0, i32 0
  %137 = load %"class.std::__1::unique_ptr.124"*, %"class.std::__1::unique_ptr.124"** %136, align 8
  %138 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %22, i64 0, i32 2, i32 0, i32 1
  %139 = load %"class.std::__1::unique_ptr.124"*, %"class.std::__1::unique_ptr.124"** %138, align 8
  %140 = icmp eq %"class.std::__1::unique_ptr.124"* %137, %139
  br i1 %140, label %346, label %141

141:                                              ; preds = %134
  %142 = ptrtoint %"class.std::__1::unique_ptr.124"* %137 to i64
  %143 = ptrtoint %"class.std::__1::unique_ptr.124"* %139 to i64
  %144 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %22, i64 0, i32 3
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %143, %142
  %147 = ashr exact i64 %146, 3
  %148 = icmp ugt i64 %147, %145
  br i1 %148, label %151, label %149

149:                                              ; preds = %141
  %150 = bitcast %"class.std::__1::vector.122"* %135 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %150) #11
  unreachable

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.124"* %137, i64 %145, i32 0, i32 0, i32 0
  %153 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %152, align 8
  %154 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %153, i64 0, i32 4
  %155 = load i8*, i8** @_ZN3net11cert_errors23kValidityFailedNotAfterE, align 8
  %156 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %154, i8* %155) #9
  br i1 %156, label %346, label %157

157:                                              ; preds = %151
  %158 = load i8*, i8** @_ZN3net11cert_errors24kValidityFailedNotBeforeE, align 8
  %159 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %154, i8* %158) #9
  %160 = select i1 %159, i32 4, i32 5
  br label %346

161:                                              ; preds = %113
  %162 = call %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %22) #9
  %163 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %162, i64 0, i32 0, i32 0, i32 0
  %164 = load %class.scoped_refptr.23*, %class.scoped_refptr.23** %163, align 8
  %165 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %162, i64 0, i32 0, i32 0, i32 1
  %166 = load %class.scoped_refptr.23*, %class.scoped_refptr.23** %165, align 8
  %167 = icmp eq %class.scoped_refptr.23* %164, %166
  br i1 %167, label %199, label %168

168:                                              ; preds = %161
  %169 = bitcast %"class.net::der::Input"* %8 to i8*
  %170 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 0
  %171 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %8, i64 0, i32 1
  br label %172

172:                                              ; preds = %196, %168
  %173 = phi %class.scoped_refptr.23* [ %164, %168 ], [ %197, %196 ]
  %174 = getelementptr inbounds %class.scoped_refptr.23, %class.scoped_refptr.23* %173, i64 0, i32 0
  %175 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %174, align 8
  %176 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %175, i64 0, i32 25
  %177 = load i8, i8* %176, align 8, !range !9
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #9
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN16cast_certificate12_GLOBAL__N_118AudioOnlyPolicyOidEvE16kAudioOnlyPolicy, i64 0, i64 0), i8** %170, align 8
  store i64 10, i64* %171, align 8
  %180 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %175, i64 0, i32 26, i32 0, i32 0
  %181 = load %"class.net::der::Input"*, %"class.net::der::Input"** %180, align 8
  %182 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %175, i64 0, i32 26, i32 0, i32 1
  %183 = load %"class.net::der::Input"*, %"class.net::der::Input"** %182, align 8
  %184 = icmp eq %"class.net::der::Input"* %181, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #9
  br label %196

186:                                              ; preds = %179, %189
  %187 = phi %"class.net::der::Input"* [ %190, %189 ], [ %181, %179 ]
  %188 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %187, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #9
  br i1 %188, label %192, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %187, i64 1
  %191 = icmp eq %"class.net::der::Input"* %190, %183
  br i1 %191, label %192, label %186

192:                                              ; preds = %189, %186
  %193 = phi %"class.net::der::Input"* [ %187, %186 ], [ %183, %189 ]
  %194 = load %"class.net::der::Input"*, %"class.net::der::Input"** %182, align 8
  %195 = icmp eq %"class.net::der::Input"* %193, %194
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #9
  br i1 %195, label %196, label %199

196:                                              ; preds = %192, %185, %172
  %197 = getelementptr inbounds %class.scoped_refptr.23, %class.scoped_refptr.23* %173, i64 1
  %198 = icmp eq %class.scoped_refptr.23* %197, %166
  br i1 %198, label %199, label %172

199:                                              ; preds = %192, %196, %161
  %200 = phi i32 [ 0, %161 ], [ 0, %196 ], [ 1, %192 ]
  store i32 %200, i32* %3, align 4
  %201 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 12
  %202 = load i8, i8* %201, align 4, !range !9
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %346, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 14
  %206 = call zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"* %205, i64 0) #9
  br i1 %206, label %207, label %346

207:                                              ; preds = %204
  %208 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #9
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #9
  %211 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 6, i32 6
  %212 = bitcast %"class.std::__1::vector.203"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #9
  %213 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %9, i64 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::vector.203", %"class.std::__1::vector.203"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 0, i64 24, i1 false) #9
  %215 = call zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16) %211, %"class.std::__1::vector.203"* nonnull %9) #9
  br i1 %215, label %216, label %246

216:                                              ; preds = %207
  %217 = load %"class.std::__1::vector.205"*, %"class.std::__1::vector.205"** %213, align 8
  %218 = load %"class.std::__1::vector.205"*, %"class.std::__1::vector.205"** %214, align 8
  %219 = icmp eq %"class.std::__1::vector.205"* %217, %218
  br i1 %219, label %249, label %220

220:                                              ; preds = %216
  %221 = bitcast %"class.net::der::Input"* %10 to i8*
  %222 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 0
  %223 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %10, i64 0, i32 1
  br label %224

224:                                              ; preds = %241, %220
  %225 = phi %"class.std::__1::vector.205"* [ %217, %220 ], [ %242, %241 ]
  %226 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %225, i64 0, i32 0, i32 0
  %227 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %225, i64 0, i32 0, i32 1
  %229 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %228, align 8
  %230 = icmp eq %"struct.net::X509NameAttribute"* %227, %229
  br i1 %230, label %241, label %231

231:                                              ; preds = %224, %238
  %232 = phi %"struct.net::X509NameAttribute"* [ %239, %238 ], [ %227, %224 ]
  %233 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %232, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #9
  %234 = call { i8*, i64 } @_ZN3net17TypeCommonNameOidEv() #9
  %235 = extractvalue { i8*, i64 } %234, 0
  store i8* %235, i8** %222, align 8
  %236 = extractvalue { i8*, i64 } %234, 1
  store i64 %236, i64* %223, align 8
  %237 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %233, %"class.net::der::Input"* nonnull dereferenceable(16) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #9
  br i1 %237, label %244, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %232, i64 1
  %240 = icmp eq %"struct.net::X509NameAttribute"* %239, %229
  br i1 %240, label %241, label %231

241:                                              ; preds = %238, %224
  %242 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %225, i64 1
  %243 = icmp eq %"class.std::__1::vector.205"* %242, %218
  br i1 %243, label %246, label %224

244:                                              ; preds = %231
  %245 = call zeroext i1 @_ZNK3net17X509NameAttribute13ValueAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::X509NameAttribute"* %232, %"class.std::__1::basic_string"* nonnull %11) #9
  br label %246

246:                                              ; preds = %241, %244, %207
  %247 = phi i1 [ %245, %244 ], [ false, %207 ], [ false, %241 ]
  %248 = load %"class.std::__1::vector.205"*, %"class.std::__1::vector.205"** %213, align 8
  br label %249

249:                                              ; preds = %246, %216
  %250 = phi %"class.std::__1::vector.205"* [ %248, %246 ], [ %217, %216 ]
  %251 = phi i1 [ %247, %246 ], [ false, %216 ]
  %252 = icmp eq %"class.std::__1::vector.205"* %250, null
  br i1 %252, label %275, label %253

253:                                              ; preds = %249
  %254 = bitcast %"class.std::__1::vector.205"* %250 to i8*
  %255 = load %"class.std::__1::vector.205"*, %"class.std::__1::vector.205"** %214, align 8
  %256 = icmp eq %"class.std::__1::vector.205"* %255, %250
  br i1 %256, label %273, label %257

257:                                              ; preds = %253, %268
  %258 = phi %"class.std::__1::vector.205"* [ %259, %268 ], [ %255, %253 ]
  %259 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %258, i64 -1
  %260 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %259, i64 0, i32 0, i32 0
  %261 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %260, align 8
  %262 = icmp eq %"struct.net::X509NameAttribute"* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %257
  %264 = ptrtoint %"struct.net::X509NameAttribute"* %261 to i64
  %265 = getelementptr inbounds %"class.std::__1::vector.205", %"class.std::__1::vector.205"* %258, i64 -1, i32 0, i32 1
  %266 = bitcast %"struct.net::X509NameAttribute"** %265 to i64*
  store i64 %264, i64* %266, align 8
  %267 = bitcast %"struct.net::X509NameAttribute"* %261 to i8*
  call void @_ZdlPv(i8* %267) #10
  br label %268

268:                                              ; preds = %263, %257
  %269 = icmp eq %"class.std::__1::vector.205"* %259, %250
  br i1 %269, label %270, label %257

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.203"* %9 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::vector.205"* %250, %"class.std::__1::vector.205"** %214, align 8
  call void @_ZdlPv(i8* %274) #10
  br label %275

275:                                              ; preds = %273, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #9
  br i1 %251, label %278, label %276

276:                                              ; preds = %275
  %277 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %327

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %108, i64 0, i32 6, i32 7
  %280 = call i8* @_Znwm(i64 56) #10
  %281 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  %285 = load i8*, i8** %209, align 8
  %286 = select i1 %284, i8* %285, i8* %208
  %287 = load i64, i64* %210, align 8
  %288 = zext i8 %283 to i64
  %289 = select i1 %284, i64 %287, i64 %288
  %290 = bitcast i8* %280 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %290, align 8
  %291 = getelementptr inbounds i8, i8* %280, i64 8
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string"*
  call void @_ZNK3net3der5Input8AsStringEv(%"class.std::__1::basic_string"* sret %292, %"class.net::der::Input"* %279) #9
  %293 = getelementptr inbounds i8, i8* %280, i64 32
  %294 = icmp ugt i64 %289, -17
  br i1 %294, label %295, label %297

295:                                              ; preds = %278
  %296 = bitcast i8* %293 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %296) #11
  unreachable

297:                                              ; preds = %278
  %298 = icmp ult i64 %289, 23
  br i1 %298, label %309, label %299

299:                                              ; preds = %297
  %300 = add nuw i64 %289, 16
  %301 = and i64 %300, -16
  %302 = call i8* @_Znwm(i64 %301) #10
  %303 = bitcast i8* %293 to i8**
  store i8* %302, i8** %303, align 8, !alias.scope !10
  %304 = or i64 %301, -9223372036854775808
  %305 = getelementptr inbounds i8, i8* %280, i64 48
  %306 = bitcast i8* %305 to i64*
  store i64 %304, i64* %306, align 8, !alias.scope !10
  %307 = getelementptr inbounds i8, i8* %280, i64 40
  %308 = bitcast i8* %307 to i64*
  store i64 %289, i64* %308, align 8, !alias.scope !10
  br label %313

309:                                              ; preds = %297
  %310 = trunc i64 %289 to i8
  %311 = getelementptr inbounds i8, i8* %280, i64 55
  store i8 %310, i8* %311, align 1, !alias.scope !10
  %312 = icmp eq i64 %289, 0
  br i1 %312, label %315, label %313

313:                                              ; preds = %309, %299
  %314 = phi i8* [ %302, %299 ], [ %293, %309 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %314, i8* align 1 %286, i64 %289, i1 false) #9
  br label %315

315:                                              ; preds = %313, %309
  %316 = phi i8* [ %293, %309 ], [ %314, %313 ]
  %317 = getelementptr inbounds i8, i8* %316, i64 %289
  store i8 0, i8* %317, align 1
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.cast_certificate::CertVerificationContext"*, %"class.cast_certificate::CertVerificationContext"** %318, align 8
  %320 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  store i8* %280, i8** %320, align 8
  %321 = icmp eq %"class.cast_certificate::CertVerificationContext"* %319, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %315
  %323 = bitcast %"class.cast_certificate::CertVerificationContext"* %319 to void (%"class.cast_certificate::CertVerificationContext"*)***
  %324 = load void (%"class.cast_certificate::CertVerificationContext"*)**, void (%"class.cast_certificate::CertVerificationContext"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.cast_certificate::CertVerificationContext"*)*, void (%"class.cast_certificate::CertVerificationContext"*)** %324, i64 1
  %326 = load void (%"class.cast_certificate::CertVerificationContext"*)*, void (%"class.cast_certificate::CertVerificationContext"*)** %325, align 8
  call void %326(%"class.cast_certificate::CertVerificationContext"* nonnull %319) #9
  br label %327

327:                                              ; preds = %322, %315, %276
  %328 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %277, %276 ], [ %281, %315 ], [ %281, %322 ]
  %329 = phi i1 [ false, %276 ], [ true, %315 ], [ true, %322 ]
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %331 = load i8, i8* %330, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %327
  %334 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %334) #10
  br label %335

335:                                              ; preds = %327, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #9
  br i1 %329, label %336, label %346

336:                                              ; preds = %335
  br i1 %33, label %345, label %337

337:                                              ; preds = %336
  %338 = call %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %22) #9
  %339 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %338, i64 0, i32 0
  %340 = bitcast %"class.cast_certificate::CastCRL"* %4 to i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)***
  %341 = load i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)**, i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)*** %340, align 8
  %342 = getelementptr inbounds i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)*, i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)** %341, i64 2
  %343 = load i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)*, i1 (%"class.cast_certificate::CastCRL"*, %"class.std::__1::vector.127"*, %"class.base::Time"*)** %342, align 8
  %344 = call zeroext i1 %343(%"class.cast_certificate::CastCRL"* nonnull %4, %"class.std::__1::vector.127"* dereferenceable(24) %339, %"class.base::Time"* dereferenceable(8) %1) #9
  br i1 %344, label %345, label %346

345:                                              ; preds = %336, %337
  br label %346

346:                                              ; preds = %204, %199, %157, %151, %134, %337, %335, %345
  %347 = phi i32 [ 0, %345 ], [ 3, %335 ], [ 7, %337 ], [ %160, %157 ], [ 5, %134 ], [ 4, %151 ], [ 3, %199 ], [ 3, %204 ]
  call void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %132) #9
  call void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %107) #9
  br label %348

348:                                              ; preds = %98, %346
  %349 = phi i32 [ %347, %346 ], [ 8, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  %350 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate", %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* nonnull %350) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #9
  br label %351

351:                                              ; preds = %54, %348
  %352 = phi i64 [ %99, %348 ], [ %57, %54 ]
  %353 = phi i32 [ %349, %348 ], [ 2, %54 ]
  call void @_ZN3net22CertIssuerSourceStaticD1Ev(%"class.net::CertIssuerSourceStatic"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #9
  %354 = inttoptr i64 %352 to %"class.net::ParsedCertificate"*
  %355 = icmp eq i64 %352, 0
  br i1 %355, label %362, label %356

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %354, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = atomicrmw sub i32* %357, i32 1 acq_rel
  %359 = icmp eq i32 %358, 1
  br i1 %359, label %360, label %362

360:                                              ; preds = %356
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %354) #9
  %361 = inttoptr i64 %352 to i8*
  call void @_ZdlPv(i8* %361) #10
  br label %362

362:                                              ; preds = %351, %356, %360
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  br label %363

363:                                              ; preds = %32, %26, %362, %24
  %364 = phi i32 [ %353, %362 ], [ %25, %24 ], [ 1, %26 ], [ 6, %32 ]
  ret i32 %364
}

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #3

declare void @_ZN3net22CertIssuerSourceStaticC1Ev(%"class.net::CertIssuerSourceStatic"*) unnamed_addr #3

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #3

declare %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3net22CertIssuerSourceStatic7AddCertE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::CertIssuerSourceStatic"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { i8*, i64 } @_ZN3net9AnyPolicyEv() local_unnamed_addr #3

declare void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"* dereferenceable(8), i32, i32, %"class.std::__1::set"* dereferenceable(24), i32, i32) unnamed_addr #3

declare void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"*, %"class.net::CertIssuerSource"*) local_unnamed_addr #3

declare void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* sret, %"class.net::CertPathBuilder"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #3

declare %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result16GetBestValidPathEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net22CertIssuerSourceStaticD1Ev(%"class.net::CertIssuerSourceStatic"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cast_certificate::CertVerificationContext"* @_ZN16cast_certificate34CertVerificationContextImplForTestERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.net::der::Input", align 8
  %3 = bitcast %"class.net::der::Input"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #9
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %2, %"class.base::BasicStringPiece"* dereferenceable(16) %0) #9
  %4 = call i8* @_Znwm(i64 56) #10
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.std::__1::basic_string"*
  call void @_ZNK3net3der5Input8AsStringEv(%"class.std::__1::basic_string"* sret %7, %"class.net::der::Input"* nonnull %2) #9
  %8 = getelementptr inbounds i8, i8* %4, i64 32
  %9 = getelementptr inbounds i8, i8* %4, i64 55
  store i8 10, i8* %9, align 1, !alias.scope !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #9
  %10 = getelementptr inbounds i8, i8* %4, i64 42
  store i8 0, i8* %10, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #9
  %11 = bitcast i8* %4 to %"class.cast_certificate::CertVerificationContext"*
  ret %"class.cast_certificate::CertVerificationContext"* %11
}

declare void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"*, %"class.base::BasicStringPiece"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16cast_certificate21CastCertErrorToStringENS_13CastCertErrorE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  switch i32 %1, label %56 [
    i32 1, label %3
    i32 2, label %9
    i32 4, label %15
    i32 5, label %21
    i32 3, label %27
    i32 6, label %33
    i32 7, label %39
    i32 8, label %45
    i32 0, label %51
  ]

3:                                                ; preds = %2
  %4 = tail call i8* @_Znwm(i64 48) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %7, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32, i1 false) #9
  %8 = getelementptr inbounds i8, i8* %4, i64 32
  store i8 0, i8* %8, align 1
  br label %61

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 32) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i64 30, i1 false) #9
  %14 = getelementptr inbounds i8, i8* %10, i64 30
  store i8 0, i8* %14, align 1
  br label %61

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 48) #10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 37, i1 false) #9
  %20 = getelementptr inbounds i8, i8* %16, i64 37
  store i8 0, i8* %20, align 1
  br label %61

21:                                               ; preds = %2
  %22 = tail call i8* @_Znwm(i64 48) #10
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i64 39, i1 false) #9
  %26 = getelementptr inbounds i8, i8* %22, i64 39
  store i8 0, i8* %26, align 1
  br label %61

27:                                               ; preds = %2
  %28 = tail call i8* @_Znwm(i64 48) #10
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #9
  %32 = getelementptr inbounds i8, i8* %28, i64 37
  store i8 0, i8* %32, align 1
  br label %61

33:                                               ; preds = %2
  %34 = tail call i8* @_Znwm(i64 32) #10
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %37, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30, i1 false) #9
  %38 = getelementptr inbounds i8, i8* %34, i64 30
  store i8 0, i8* %38, align 1
  br label %61

39:                                               ; preds = %2
  %40 = tail call i8* @_Znwm(i64 48) #10
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %43, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i64 32, i1 false) #9
  %44 = getelementptr inbounds i8, i8* %40, i64 32
  store i8 0, i8* %44, align 1
  br label %61

45:                                               ; preds = %2
  %46 = tail call i8* @_Znwm(i64 32) #10
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i64* %48 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %49, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i64 29, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %46, i64 29
  store i8 0, i8* %50, align 1
  br label %61

51:                                               ; preds = %2
  %52 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 17, i8* %53, align 1
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i64 17, i1 false) #9
  %55 = getelementptr inbounds i8, i8* %54, i64 17
  store i8 0, i8* %55, align 1
  br label %61

56:                                               ; preds = %2
  %57 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 22, i8* %58, align 1
  %59 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i64 22, i1 false) #9
  %60 = getelementptr inbounds i8, i8* %59, i64 22
  store i8 0, i8* %60, align 2
  br label %61

61:                                               ; preds = %56, %51, %45, %39, %33, %27, %21, %15, %9, %3
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"*) unnamed_addr #3

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate26CreateWithoutCopyingUnsafeEPKhmRKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(i8*, i64, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

declare void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::CertErrors"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN3net18TrustStoreInMemory29AddTrustAnchorWithConstraintsE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

declare void @_ZN3net25SimplePathBuilderDelegateC2EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"*, i64, i32) unnamed_addr #3

declare zeroext i1 @_ZN3net25SimplePathBuilderDelegate30IsSignatureAlgorithmAcceptableERKNS_18SignatureAlgorithmEPNS_10CertErrorsE(%"class.net::SimplePathBuilderDelegate"*, %"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::CertErrors"*) unnamed_addr #3

declare zeroext i1 @_ZN3net25SimplePathBuilderDelegate21IsPublicKeyAcceptableEP11evp_pkey_stPNS_10CertErrorsE(%"class.net::SimplePathBuilderDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN16cast_certificate12_GLOBAL__N_123CastPathBuilderDelegateD0Ev(%"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate", %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* %2) #9
  %3 = bitcast %"class.cast_certificate::(anonymous namespace)::CastPathBuilderDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare void @_ZN3net25SimplePathBuilderDelegate26CheckPathAfterVerificationERKNS_15CertPathBuilderEPNS_25CertPathBuilderResultPathE(%"class.net::SimplePathBuilderDelegate"*, %"class.net::CertPathBuilder"* dereferenceable(168), %"struct.net::CertPathBuilderResultPath"*) unnamed_addr #3

declare zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"*, i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net3der9BitString10AssertsBitEm(%"class.net::der::BitString"*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.203"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net17TypeCommonNameOidEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK3net17X509NameAttribute13ValueAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.net::X509NameAttribute"*, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZNK3net3der5Input8AsStringEv(%"class.std::__1::basic_string"* sret, %"class.net::der::Input"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplD2Ev(%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplD0Ev(%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN16cast_certificate12_GLOBAL__N_127CertVerificationContextImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK16cast_certificate12_GLOBAL__N_127CertVerificationContextImpl23VerifySignatureOverDataERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES9_N3net15DigestAlgorithmE(%"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::BitString", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::Input", align 8
  %9 = tail call %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm14CreateRsaPkcs1ENS_15DigestAlgorithmE(i32 %3) #9
  %10 = bitcast %"class.net::der::Input"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %5, %"class.base::BasicStringPiece"* dereferenceable(16) %2) #9
  %11 = bitcast %"class.net::der::BitString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  call void @_ZN3net3der5InputC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::der::Input"* nonnull %7, %"class.base::BasicStringPiece"* dereferenceable(16) %1) #9
  call void @_ZN3net3der9BitStringC1ERKNS0_5InputEh(%"class.net::der::BitString"* nonnull %6, %"class.net::der::Input"* nonnull dereferenceable(16) %7, i8 zeroext 0) #9
  %13 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %0, i64 0, i32 1
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %8, %"class.std::__1::basic_string"* %14) #9
  %15 = call zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16) %9, %"class.net::der::Input"* nonnull dereferenceable(16) %5, %"class.net::der::BitString"* nonnull dereferenceable(24) %6, %"class.net::der::Input"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  %16 = icmp eq %"class.net::SignatureAlgorithm"* %9, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  call void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"* nonnull %9) #9
  %18 = bitcast %"class.net::SignatureAlgorithm"* %9 to i8*
  call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %4, %17
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK16cast_certificate12_GLOBAL__N_127CertVerificationContextImpl13GetCommonNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %1, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl", %"class.cast_certificate::(anonymous namespace)::CertVerificationContextImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

declare %"class.net::SignatureAlgorithm"* @_ZN3net18SignatureAlgorithm14CreateRsaPkcs1ENS_15DigestAlgorithmE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16), %"class.net::der::BitString"* dereferenceable(24), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3net3der9BitStringC1ERKNS0_5InputEh(%"class.net::der::BitString"*, %"class.net::der::Input"* dereferenceable(16), i8 zeroext) unnamed_addr #3

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net18SignatureAlgorithmD1Ev(%"class.net::SignatureAlgorithm"*) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEERKNS_4TimeEPNS4_10unique_ptrINS3_23CertVerificationContextENS4_14default_deleteISK_EEEEPNS3_20CastDeviceCertPolicyEPKNS3_7CastCRLENS3_9CRLPolicyEE3$_0JSD_SG_SO_SQ_ST_SU_PNS3_13CastCertErrorEEEEFvPN3net10TrustStoreEEE7RunOnceEPNS0_13BindStateBaseES11_"(%"class.base::internal::BindStateBase"*, %"class.net::TrustStore"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.std::__1::vector"*
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 3
  %6 = bitcast void ()** %5 to %"class.base::Time"*
  %7 = getelementptr inbounds void ()*, void ()** %3, i64 4
  %8 = bitcast void ()** %7 to %"class.std::__1::unique_ptr"**
  %9 = getelementptr inbounds void ()*, void ()** %3, i64 5
  %10 = bitcast void ()** %9 to i32**
  %11 = getelementptr inbounds void ()*, void ()** %3, i64 6
  %12 = bitcast void ()** %11 to %"class.cast_certificate::CastCRL"**
  %13 = getelementptr inbounds void ()*, void ()** %3, i64 7
  %14 = bitcast void ()** %13 to i32*
  %15 = getelementptr inbounds void ()*, void ()** %3, i64 8
  %16 = bitcast void ()** %15 to i32**
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %18 = load i32*, i32** %10, align 8
  %19 = load %"class.cast_certificate::CastCRL"*, %"class.cast_certificate::CastCRL"** %12, align 8
  %20 = load i32, i32* %14, align 4
  %21 = load i32*, i32** %16, align 8
  %22 = tail call i32 @_ZN16cast_certificate37VerifyDeviceCertUsingCustomTrustStoreERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKN4base4TimeEPNS0_10unique_ptrINS_23CertVerificationContextENS0_14default_deleteISH_EEEEPNS_20CastDeviceCertPolicyEPKNS_7CastCRLENS_9CRLPolicyEPN3net10TrustStoreE(%"class.std::__1::vector"* dereferenceable(24) %4, %"class.base::Time"* dereferenceable(8) %6, %"class.std::__1::unique_ptr"* %17, i32* %18, %"class.cast_certificate::CastCRL"* %19, i32 %20, %"class.net::TrustStore"* %1) #9
  store i32 %22, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEERKNS_4TimeEPNS3_10unique_ptrINS2_23CertVerificationContextENS3_14default_deleteISJ_EEEEPNS2_20CastDeviceCertPolicyEPKNS2_7CastCRLENS2_9CRLPolicyEE3$_0JSC_SF_SN_SP_SS_ST_PNS2_13CastCertErrorEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::basic_string"**
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.std::__1::basic_string"**
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, %6
  br i1 %13, label %29, label %14

14:                                               ; preds = %8, %24
  %15 = phi %"class.std::__1::basic_string"* [ %16, %24 ], [ %12, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = icmp eq %"class.std::__1::basic_string"* %16, %6
  br i1 %25, label %26, label %14

26:                                               ; preds = %24
  %27 = bitcast void ()** %4 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %8
  %30 = phi i8* [ %28, %26 ], [ %9, %8 ]
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %11, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %3, %29
  %32 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE6insertIPKS3_EEvT_SC_(%"class.std::__1::set"*, %"class.net::der::Input"*, %"class.net::der::Input"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.net::der::Input"* %1, %2
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::set"* %0 to i64*
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %105, %3
  ret void

15:                                               ; preds = %6, %105
  %16 = phi %"class.net::der::Input"* [ %1, %6 ], [ %106, %105 ]
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %4
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %38, label %22

27:                                               ; preds = %19, %27
  %28 = phi %"class.std::__1::__tree_end_node"* [ %32, %27 ], [ %4, %19 ]
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %27, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  br label %38

38:                                               ; preds = %22, %36
  %39 = phi %"class.std::__1::__tree_node_base"* [ %37, %36 ], [ %23, %22 ]
  %40 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 1
  %42 = bitcast %"class.std::__1::__tree_node_base"* %41 to %"class.net::der::Input"*
  %43 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %42, %"class.net::der::Input"* dereferenceable(16) %16) #9
  br i1 %43, label %44, label %51

44:                                               ; preds = %38, %15
  %45 = phi i64 [ %40, %38 ], [ %7, %15 ]
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %45 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 1
  br label %79

51:                                               ; preds = %38
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %51, %75
  %55 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %52, %51 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %11, %51 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 1
  %58 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %16, %"class.net::der::Input"* dereferenceable(16) %57) #9
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

65:                                               ; preds = %54
  %66 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %57, %"class.net::der::Input"* dereferenceable(16) %16) #9
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

73:                                               ; preds = %65
  %74 = ptrtoint %"class.std::__1::__tree_node"* %55 to i64
  br label %79

75:                                               ; preds = %67, %59
  %76 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %54

79:                                               ; preds = %51, %44, %48, %63, %71, %73
  %80 = phi i64 [ %45, %48 ], [ %64, %63 ], [ %72, %71 ], [ %74, %73 ], [ %7, %44 ], [ %7, %51 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %50, %48 ], [ %60, %63 ], [ %68, %71 ], [ %56, %73 ], [ %9, %44 ], [ %9, %51 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %105

85:                                               ; preds = %79
  %86 = tail call i8* @_Znwm(i64 48) #10, !noalias !16
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast %"class.net::der::Input"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #9, !noalias !16
  %89 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #9
  %91 = bitcast i8* %90 to i64*
  store i64 %80, i64* %91, align 8
  %92 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %92, align 8
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %85
  %98 = ptrtoint %"class.std::__1::__tree_node_base"* %95 to i64
  store i64 %98, i64* %12, align 8
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %100

100:                                              ; preds = %97, %85
  %101 = phi %"class.std::__1::__tree_node_base"* [ %89, %85 ], [ %99, %97 ]
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %101) #9
  %103 = load i64, i64* %13, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %13, align 8
  br label %105

105:                                              ; preds = %79, %100
  %106 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 1
  %107 = icmp eq %"class.net::der::Input"* %106, %2
  br i1 %107, label %14, label %15
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !9
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.134"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.134"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.134"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEERKNS_4TimeEPNS4_10unique_ptrINS3_23CertVerificationContextENS4_14default_deleteISK_EEEEPNS3_20CastDeviceCertPolicyEPKNS3_7CastCRLENS3_9CRLPolicyEE3$_0JSF_SI_RSO_RSQ_RST_RSU_PNS3_13CastCertErrorEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEERKNS_4TimeEPNS4_10unique_ptrINS3_23CertVerificationContextENS4_14default_deleteISK_EEEEPNS3_20CastDeviceCertPolicyEPKNS3_7CastCRLENS3_9CRLPolicyEE3$_0JSF_SI_RSO_RSQ_RST_RSU_PNS3_13CastCertErrorEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS_4TimeEPNS2_10unique_ptrINS1_23CertVerificationContextENS2_14default_deleteISI_EEEEPNS1_20CastDeviceCertPolicyEPKNS1_7CastCRLENS1_9CRLPolicyEE3$_0JSD_SG_RSM_RSO_RSR_RSS_PNS1_13CastCertErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS13_DpOS14_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN16cast_certificate16VerifyDeviceCertERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEERKNS_4TimeEPNS2_10unique_ptrINS1_23CertVerificationContextENS2_14default_deleteISI_EEEEPNS1_20CastDeviceCertPolicyEPKNS1_7CastCRLENS1_9CRLPolicyEE3$_0JSD_SG_RSM_RSO_RSR_RSS_PNS1_13CastCertErrorEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS13_DpOS14_"}
!7 = !{!"branch_weights", i32 1, i32 1048575}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{i8 0, i8 2}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
