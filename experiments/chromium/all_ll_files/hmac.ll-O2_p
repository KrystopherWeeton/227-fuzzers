; ModuleID = '../../components/webcrypto/algorithms/hmac.cc'
source_filename = "../../components/webcrypto/algorithms/hmac.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.webcrypto::(anonymous namespace)::HmacImplementation" = type { %"class.webcrypto::AlgorithmImplementation" }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.7" }
%"class.blink::WebPrivatePtr.7" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr.16" }
%"class.blink::WebPrivatePtr.16" = type { i8* }
%"class.blink::WebCryptoHmacKeyAlgorithmParams" = type <{ %"class.blink::WebCryptoKeyAlgorithmParams", %"class.blink::WebCryptoAlgorithm", i32, [4 x i8] }>
%"class.blink::WebCryptoKeyAlgorithmParams" = type { i32 (...)** }
%struct.env_md_st = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webcrypto::GenerateKeyResult" = type opaque
%"class.blink::WebCryptoHmacKeyGenParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.blink::WebCryptoAlgorithmParamsWithHash" = type { %"class.blink::WebCryptoAlgorithmParams", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebCryptoHmacImportParams" = type { %"class.blink::WebCryptoAlgorithmParamsWithHash", i8, i32 }
%"class.webcrypto::JwkReader" = type { %"class.base::DictionaryValue" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"union.absl::variant_internal::DestructibleUnionImpl.22" }
%"union.absl::variant_internal::DestructibleUnionImpl.22" = type { %"union.absl::variant_internal::DestructibleUnionImpl.23" }
%"union.absl::variant_internal::DestructibleUnionImpl.23" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZTVN9webcrypto12_GLOBAL__N_118HmacImplementationE = internal unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::AlgorithmImplementation"*)* @_ZN9webcrypto23AlgorithmImplementationD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::HmacImplementation"*)* @_ZN9webcrypto12_GLOBAL__N_118HmacImplementationD0Ev to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.webcrypto::CryptoData"*, i8*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataESB_Pb to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.webcrypto::GenerateKeyResult"*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, i1, i32, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, i8*, i32*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS2_18WebCryptoAlgorithmEbiPNS2_12WebCryptoKeyE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, i32, %"class.blink::WebCryptoKey"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS2_12WebCryptoKeyEPNSt3__16vectorIhNS7_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS2_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS2_12WebCryptoKeyE to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"SignHmac\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../components/webcrypto/algorithms/hmac.cc\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"hmac_expected_length == hmac_actual_length\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"HS1\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"HS256\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"HS384\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"HS512\00", align 1
@switch.table._ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS2_12WebCryptoKeyEPNSt3__16vectorIhNS7_9allocatorIhEEEE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto24CreateHmacImplementationEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #10
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_118HmacImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.webcrypto::AlgorithmImplementation"*
  ret %"class.webcrypto::AlgorithmImplementation"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_118HmacImplementationD0Ev(%"class.webcrypto::(anonymous namespace)::HmacImplementation"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::HmacImplementation", %"class.webcrypto::(anonymous namespace)::HmacImplementation"* %0, i64 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %2) #11
  %3 = bitcast %"class.webcrypto::(anonymous namespace)::HmacImplementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* nocapture readnone dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = tail call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %3) #11
  %14 = tail call %"class.blink::WebCryptoHmacKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm10HmacParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %13) #11
  %15 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyAlgorithmParams", %"class.blink::WebCryptoHmacKeyAlgorithmParams"* %14, i64 0, i32 1
  %16 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #11
  %17 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false) #11, !noalias !2
  %18 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11, !noalias !2
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 92) #11, !noalias !2
  %19 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %8, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %19, %"class.base::Location"* nonnull dereferenceable(32) %9) #11, !noalias !2
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11, !noalias !2
  %20 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %15) #11, !noalias !2
  %21 = icmp eq %struct.env_md_st* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %6
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #11
  br label %78

23:                                               ; preds = %6
  %24 = call i64 @EVP_MD_size(%struct.env_md_st* nonnull %20) #11
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !2
  %28 = bitcast %"class.std::__1::vector"* %5 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !2
  %30 = sub i64 %27, %29
  %31 = icmp ugt i64 %24, %30
  %32 = inttoptr i64 %29 to i8*
  br i1 %31, label %33, label %37

33:                                               ; preds = %23
  %34 = sub i64 %24, %30
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %34) #11
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !2
  br label %41

37:                                               ; preds = %23
  %38 = icmp ult i64 %24, %30
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = getelementptr inbounds i8, i8* %32, i64 %24
  store i8* %40, i8** %25, align 8, !noalias !2
  br label %41

41:                                               ; preds = %39, %37, %33
  %42 = phi i8* [ %36, %33 ], [ %32, %37 ], [ %32, %39 ]
  %43 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #11, !noalias !2
  store i32 -1431655766, i32* %10, align 4, !noalias !2
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8, !noalias !2
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !2
  %49 = ptrtoint i8* %45 to i64
  %50 = sub i64 %48, %49
  %51 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8, !noalias !2
  %53 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %54 = load i32, i32* %53, align 8, !noalias !2
  %55 = zext i32 %54 to i64
  %56 = call i8* @HMAC(%struct.env_md_st* nonnull %20, i8* %45, i64 %50, i8* %52, i64 %55, i8* %42, i32* nonnull %10) #11
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %59

58:                                               ; preds = %41
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #11
  br label %77

59:                                               ; preds = %41
  %60 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11, !noalias !2
  %61 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %61, align 8, !noalias !2
  %62 = load i32, i32* %10, align 4, !noalias !2
  %63 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11, !noalias !2
  %64 = zext i32 %62 to i64
  %65 = icmp eq i64 %24, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11, !noalias !2
  store i8* null, i8** %61, align 8, !noalias !2
  br label %76

67:                                               ; preds = %59
  %68 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %24) #11
  %69 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %62) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8* %68, i8* %69) #11
  %70 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11, !noalias !2
  store i8* %71, i8** %61, align 8, !noalias !2
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11, !noalias !2
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %11) #11
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11, !noalias !2
  br label %76

76:                                               ; preds = %73, %67, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11, !noalias !2
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  br label %77

77:                                               ; preds = %76, %58
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #11, !noalias !2
  br label %78

78:                                               ; preds = %22, %77
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %19) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #11, !noalias !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataESB_Pb(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.webcrypto::CryptoData"* dereferenceable(16), i8* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.webcrypto::Status", align 8
  %10 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %13 = bitcast %"class.webcrypto::Status"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  %14 = bitcast %"class.webcrypto::(anonymous namespace)::HmacImplementation"* %1 to void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)***
  %15 = bitcast %"class.webcrypto::Status"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = load void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)**, void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)*** %14, align 8
  %17 = getelementptr inbounds void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)*, void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)** %16, i64 4
  %18 = load void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)*, void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::HmacImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)** %17, align 8
  call void %18(%"class.webcrypto::Status"* nonnull sret %9, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* %1, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %2, %"class.blink::WebCryptoKey"* dereferenceable(8) %3, %"class.webcrypto::CryptoData"* dereferenceable(16) %5, %"class.std::__1::vector"* nonnull %8) #11
  %19 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %9) #11
  br i1 %19, label %20, label %28

20:                                               ; preds = %7
  %21 = bitcast %"class.webcrypto::Status"* %9 to i64*
  %22 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  br label %54

28:                                               ; preds = %7
  %29 = bitcast i8** %12 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %8 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = icmp eq i64 %33, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %28
  %39 = inttoptr i64 %32 to i8*
  %40 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = call zeroext i1 @_ZN6crypto14SecureMemEqualEPKvS1_m(i8* %39, i8* %41, i64 %33) #11
  %43 = zext i1 %42 to i8
  br label %44

44:                                               ; preds = %28, %38
  %45 = phi i8 [ 0, %28 ], [ %43, %38 ]
  store i8 %45, i8* %6, align 1
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  %46 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %20, %44, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  %55 = load i8*, i8** %11, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = ptrtoint i8* %55 to i64
  %59 = bitcast i8** %12 to i64*
  store i64 %58, i64* %59, align 8
  call void @_ZdlPv(i8* nonnull %55) #10
  br label %60

60:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.webcrypto::GenerateKeyResult"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.webcrypto::Status", align 8
  %8 = alloca %"class.webcrypto::Status", align 8
  %9 = alloca %"class.blink::WebCryptoKeyAlgorithm", align 8
  %10 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* nonnull sret %7, i32 12, i32 %4) #11
  %12 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %7) #11
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = bitcast %"class.webcrypto::Status"* %7 to i64*
  %15 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  br label %69

21:                                               ; preds = %6
  %22 = call %"class.blink::WebCryptoHmacKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #11
  %23 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %22, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %64

30:                                               ; preds = %26
  call void @_ZN9webcrypto6Status30ErrorGenerateHmacKeyLengthZeroEv(%"class.webcrypto::Status"* sret %0) #11
  br label %69

31:                                               ; preds = %21
  %32 = bitcast %"class.webcrypto::Status"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %22, i64 0, i32 0, i32 1
  %34 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %33) #11, !noalias !6
  %35 = icmp eq %struct.env_md_st* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %41

37:                                               ; preds = %31
  %38 = call i64 @EVP_MD_block_size(%struct.env_md_st* nonnull %34) #11
  %39 = trunc i64 %38 to i32
  %40 = shl i32 %39, 3
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %41

41:                                               ; preds = %36, %37
  %42 = phi i32 [ 0, %36 ], [ %40, %37 ]
  %43 = bitcast %"class.webcrypto::Status"* %8 to i64*
  %44 = bitcast %"class.webcrypto::Status"* %7 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  %46 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %47 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %8, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %52, %41
  %56 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #11
  %58 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %7) #11
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %61 = load i64, i64* %44, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %56, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #11
  br label %69

64:                                               ; preds = %55, %26
  %65 = phi i32 [ %28, %26 ], [ %42, %55 ]
  %66 = bitcast %"class.blink::WebCryptoKeyAlgorithm"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyGenParams", %"class.blink::WebCryptoHmacKeyGenParams"* %22, i64 0, i32 0, i32 1
  %68 = call i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"* %67) #11
  call void @_ZN5blink21WebCryptoKeyAlgorithm10CreateHmacENS_20WebCryptoAlgorithmIdEj(%"class.blink::WebCryptoKeyAlgorithm"* nonnull sret %9, i32 %68, i32 %65) #11
  call void @_ZN9webcrypto26GenerateWebCryptoSecretKeyERKN5blink21WebCryptoKeyAlgorithmEbijPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret %0, %"class.blink::WebCryptoKeyAlgorithm"* nonnull dereferenceable(8) %9, i1 zeroext %3, i32 %4, i32 %65, %"class.webcrypto::GenerateKeyResult"* %5) #11
  call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  br label %69

69:                                               ; preds = %30, %59, %64, %13
  %70 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %69, %75
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), i1 zeroext, i32, %"class.std::__1::vector"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i8* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #11
  store i8 1, i8* %3, align 1
  %7 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %6, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %6, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %4, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN9webcrypto6Status25ErrorGetHmacKeyLengthZeroEv(%"class.webcrypto::Status"* sret %0) #11
  br label %25

15:                                               ; preds = %10
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  br label %25

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %6, i64 0, i32 0, i32 1
  %18 = tail call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %17) #11, !noalias !9
  %19 = icmp eq %struct.env_md_st* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #11
  br label %25

21:                                               ; preds = %16
  %22 = tail call i64 @EVP_MD_block_size(%struct.env_md_st* nonnull %18) #11
  %23 = trunc i64 %22 to i32
  %24 = shl i32 %23, 3
  store i32 %24, i32* %4, align 4, !noalias !9
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  br label %25

25:                                               ; preds = %21, %20, %15, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS2_18WebCryptoAlgorithmEbiPNS2_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #0 align 2 {
  %9 = alloca %"class.webcrypto::Status", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.webcrypto::JwkReader", align 8
  %12 = alloca %"class.webcrypto::Status", align 8
  %13 = alloca %"class.webcrypto::Status", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.webcrypto::CryptoData", align 8
  switch i32 %2, label %137 [
    i32 0, label %16
    i32 3, label %17
  ]

16:                                               ; preds = %8
  tail call fastcc void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ImportKeyRawERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* dereferenceable(16) %3, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %4, i1 zeroext %5, i32 %6, %"class.blink::WebCryptoKey"* %7)
  br label %138

17:                                               ; preds = %8
  %18 = bitcast %"class.webcrypto::Status"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #11, !noalias !12
  call void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* nonnull sret %9, i32 12, i32 %6) #11, !noalias !12
  %19 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %9) #11, !noalias !12
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = bitcast %"class.webcrypto::Status"* %9 to i64*
  %22 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %23 = load i64, i64* %21, align 8, !noalias !12
  store i64 %23, i64* %22, align 8, !alias.scope !12
  %24 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11, !noalias !12
  br label %127

28:                                               ; preds = %17
  %29 = call %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"* %4) #11, !noalias !12
  %30 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %29, i64 0, i32 0, i32 1
  %31 = call i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"* %30) #11, !noalias !12
  %32 = add i32 %31, -3
  %33 = icmp ult i32 %32, 4
  br i1 %33, label %35, label %34

34:                                               ; preds = %28
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #11
  br label %127

35:                                               ; preds = %28
  %36 = sext i32 %32 to i64
  %37 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS2_12WebCryptoKeyEPNSt3__16vectorIhNS7_9allocatorIhEEEE, i64 0, i64 %36
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11, !noalias !12
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #11, !noalias !12
  %42 = bitcast %"class.webcrypto::JwkReader"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #11, !noalias !12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false) #11, !noalias !12
  call void @_ZN9webcrypto9JwkReaderC1Ev(%"class.webcrypto::JwkReader"* nonnull %11) #11
  %43 = bitcast %"class.webcrypto::Status"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #11, !noalias !12
  call void @_ZN9webcrypto29ReadSecretKeyNoExpectedAlgJwkERKNS_10CryptoDataEbiPNSt3__16vectorIhNS3_9allocatorIhEEEEPNS_9JwkReaderE(%"class.webcrypto::Status"* nonnull sret %12, %"class.webcrypto::CryptoData"* dereferenceable(16) %3, i1 zeroext %5, i32 %6, %"class.std::__1::vector"* nonnull %10, %"class.webcrypto::JwkReader"* nonnull %11) #11
  %44 = bitcast %"class.webcrypto::Status"* %12 to i64*
  %45 = bitcast %"class.webcrypto::Status"* %9 to i64*
  %46 = load i64, i64* %44, align 8, !noalias !12
  store i64 %46, i64* %45, align 8, !noalias !12
  %47 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %48 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %12, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1, !noalias !12
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8, !noalias !12
  call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %53, %35
  %57 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #11, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #11, !noalias !12
  %59 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %9) #11
  br i1 %59, label %60, label %65

60:                                               ; preds = %56
  %61 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %62 = load i64, i64* %45, align 8, !noalias !12
  store i64 %62, i64* %61, align 8, !alias.scope !12
  %63 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %57, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11, !noalias !12
  br label %120

65:                                               ; preds = %56
  %66 = bitcast %"class.webcrypto::Status"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11, !noalias !12
  %67 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #11, !noalias !12
  %68 = call i64 @strlen(i8* %38) #11
  %69 = icmp ugt i64 %68, -17
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %71) #12
  unreachable

72:                                               ; preds = %65
  %73 = icmp ult i64 %68, 23
  br i1 %73, label %82, label %74

74:                                               ; preds = %72
  %75 = add nuw i64 %68, 16
  %76 = and i64 %75, -16
  %77 = call i8* @_Znwm(i64 %76) #10
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %77, i8** %78, align 8, !noalias !12
  %79 = or i64 %76, -9223372036854775808
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8, !noalias !12
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %68, i64* %81, align 8, !noalias !12
  br label %87

82:                                               ; preds = %72
  %83 = trunc i64 %68 to i8
  %84 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 %83, i8* %85, align 1, !noalias !12
  %86 = icmp eq i64 %68, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %82, %74
  %88 = phi i8* [ %77, %74 ], [ %67, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %88, i8* align 1 %38, i64 %68, i1 false) #11
  br label %89

89:                                               ; preds = %87, %82
  %90 = phi i8* [ %67, %82 ], [ %88, %87 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %68
  store i8 0, i8* %91, align 1, !noalias !12
  call void @_ZNK9webcrypto9JwkReader9VerifyAlgERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::Status"* nonnull sret %13, %"class.webcrypto::JwkReader"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #11
  %92 = bitcast %"class.webcrypto::Status"* %13 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !12
  store i64 %93, i64* %45, align 8, !noalias !12
  %94 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2
  %95 = load i8, i8* %50, align 1, !noalias !12
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8, !noalias !12
  call void @_ZdlPv(i8* %99) #10
  br label %100

100:                                              ; preds = %97, %89
  %101 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %101, i64 24, i1 false) #11, !noalias !12
  %102 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  store i8 0, i8* %103, align 1, !noalias !12
  store i8 0, i8* %101, align 8, !noalias !12
  %104 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1, !noalias !12
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8, !noalias !12
  call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %108, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #11, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11, !noalias !12
  %112 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %9) #11
  br i1 %112, label %113, label %118

113:                                              ; preds = %111
  %114 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %115 = load i64, i64* %45, align 8, !noalias !12
  store i64 %115, i64* %114, align 8, !alias.scope !12
  %116 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %117 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %57, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11, !noalias !12
  br label %120

118:                                              ; preds = %111
  %119 = bitcast %"class.webcrypto::CryptoData"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #11, !noalias !12
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %15, %"class.std::__1::vector"* nonnull dereferenceable(24) %10) #11
  call fastcc void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ImportKeyRawERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %15, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %4, i1 zeroext %5, i32 %6, %"class.blink::WebCryptoKey"* %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #11, !noalias !12
  br label %120

120:                                              ; preds = %118, %113, %60
  call void @_ZN9webcrypto9JwkReaderD1Ev(%"class.webcrypto::JwkReader"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #11, !noalias !12
  %121 = load i8*, i8** %40, align 8, !noalias !12
  %122 = icmp eq i8* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = ptrtoint i8* %121 to i64
  %125 = bitcast i8** %41 to i64*
  store i64 %124, i64* %125, align 8, !noalias !12
  call void @_ZdlPv(i8* nonnull %121) #10
  br label %126

126:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11, !noalias !12
  br label %127

127:                                              ; preds = %126, %34, %20
  %128 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %9, i64 0, i32 2
  %129 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1, !noalias !12
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8, !noalias !12
  call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %127, %133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #11, !noalias !12
  br label %138

137:                                              ; preds = %8
  tail call void @_ZN9webcrypto6Status31ErrorUnsupportedImportKeyFormatEv(%"class.webcrypto::Status"* sret %0) #11
  br label %138

138:                                              ; preds = %137, %136, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS2_12WebCryptoKeyEPNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, i32, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.webcrypto::CryptoData", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %2, label %68 [
    i32 0, label %8
    i32 3, label %17
  ]

8:                                                ; preds = %5
  %9 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #11, !noalias !15
  %10 = icmp eq %"class.std::__1::vector"* %9, %4
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %4, i8* %13, i8* %15) #11
  br label %16

16:                                               ; preds = %8, %11
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  br label %69

17:                                               ; preds = %5
  %18 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #11, !noalias !18
  %19 = tail call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %3) #11, !noalias !18
  %20 = tail call %"class.blink::WebCryptoHmacKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm10HmacParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %19) #11, !noalias !18
  %21 = getelementptr inbounds %"class.blink::WebCryptoHmacKeyAlgorithmParams", %"class.blink::WebCryptoHmacKeyAlgorithmParams"* %20, i64 0, i32 1
  %22 = tail call i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"* %21) #11, !noalias !18
  %23 = add i32 %22, -3
  %24 = icmp ult i32 %23, 4
  br i1 %24, label %26, label %25

25:                                               ; preds = %17
  tail call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #11
  br label %69

26:                                               ; preds = %17
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK9webcrypto12_GLOBAL__N_118HmacImplementation9ExportKeyEN5blink18WebCryptoKeyFormatERKNS2_12WebCryptoKeyEPNSt3__16vectorIhNS7_9allocatorIhEEEE, i64 0, i64 %27
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.webcrypto::CryptoData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11, !noalias !18
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %6, %"class.std::__1::vector"* dereferenceable(24) %18) #11
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11, !noalias !18
  %32 = call i64 @strlen(i8* nonnull %29) #11
  %33 = icmp ugt i64 %32, -17
  br i1 %33, label %34, label %36

34:                                               ; preds = %26
  %35 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #12
  unreachable

36:                                               ; preds = %26
  %37 = icmp ult i64 %32, 23
  br i1 %37, label %47, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %32, 16
  %40 = and i64 %39, -16
  %41 = call i8* @_Znwm(i64 %40) #10
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8, !noalias !18
  %43 = or i64 %40, -9223372036854775808
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8, !noalias !18
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %32, i64* %45, align 8, !noalias !18
  %46 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %52

47:                                               ; preds = %36
  %48 = trunc i64 %32 to i8
  %49 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 %48, i8* %50, align 1, !noalias !18
  %51 = icmp eq i64 %32, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %38
  %53 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %49, %47 ], [ %46, %38 ]
  %54 = phi i8* [ %31, %47 ], [ %41, %38 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %29, i64 %32, i1 false) #11
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %49, %47 ], [ %53, %52 ]
  %57 = phi i8* [ %31, %47 ], [ %54, %52 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %32
  store i8 0, i8* %58, align 1, !noalias !18
  %59 = call zeroext i1 @_ZNK5blink12WebCryptoKey11ExtractableEv(%"class.blink::WebCryptoKey"* %3) #11
  %60 = call i32 @_ZNK5blink12WebCryptoKey6UsagesEv(%"class.blink::WebCryptoKey"* %3) #11
  call void @_ZN9webcrypto17WriteSecretKeyJwkERKNS_10CryptoDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbiPNS3_6vectorIhNS7_IhEEEE(%"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i1 zeroext %59, i32 %60, %"class.std::__1::vector"* %4) #11
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1, !noalias !18
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8, !noalias !18
  call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %64, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11, !noalias !18
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #11
  br label %69

68:                                               ; preds = %5
  tail call void @_ZN9webcrypto6Status31ErrorUnsupportedExportKeyFormatEv(%"class.webcrypto::Status"* sret %0) #11
  br label %69

69:                                               ; preds = %67, %25, %68, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS2_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS2_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::HmacImplementation"* nocapture readnone, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i32, i1 zeroext, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKey"*) unnamed_addr #0 align 2 {
  %9 = tail call i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"* %2) #11
  %10 = icmp ne i32 %9, 1
  %11 = icmp ne i32 %3, 0
  %12 = or i1 %11, %10
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret %0) #11
  br label %15

14:                                               ; preds = %8
  tail call void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* dereferenceable(16) %6, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8) %2, i1 zeroext %4, i32 %5, %"class.blink::WebCryptoKey"* %7) #11
  br label %15

15:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare %"class.blink::WebCryptoHmacKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm10HmacParamsEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

declare %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #5

declare i8* @HMAC(%struct.env_md_st*, i8*, i64, i8*, i64, i8*, i32*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #5

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"*) local_unnamed_addr #5

declare zeroext i1 @_ZN6crypto14SecureMemEqualEPKvS1_m(i8*, i8*, i64) local_unnamed_addr #5

declare void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* sret, i32, i32) local_unnamed_addr #5

declare %"class.blink::WebCryptoHmacKeyGenParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacKeyGenParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status30ErrorGenerateHmacKeyLengthZeroEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto26GenerateWebCryptoSecretKeyERKN5blink21WebCryptoKeyAlgorithmEbijPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i1 zeroext, i32, i32, %"class.webcrypto::GenerateKeyResult"*) local_unnamed_addr #5

declare void @_ZN5blink21WebCryptoKeyAlgorithm10CreateHmacENS_20WebCryptoAlgorithmIdEj(%"class.blink::WebCryptoKeyAlgorithm"* sret, i32, i32) local_unnamed_addr #5

declare i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #5

declare i64 @EVP_MD_block_size(%struct.env_md_st*) local_unnamed_addr #5

declare void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

declare %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status25ErrorGetHmacKeyLengthZeroEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ImportKeyRawERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.webcrypto::Status", align 8
  %8 = alloca %"class.webcrypto::Status", align 8
  %9 = alloca %"class.blink::WebCryptoKeyAlgorithm", align 8
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.webcrypto::CryptoData", align 8
  %12 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  %13 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  call void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* nonnull sret %7, i32 12, i32 %4) #11
  %14 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %7) #11
  br i1 %14, label %15, label %23

15:                                               ; preds = %6
  %16 = bitcast %"class.webcrypto::Status"* %7 to i64*
  %17 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11
  br label %112

23:                                               ; preds = %6
  %24 = call %"class.blink::WebCryptoHmacImportParams"* @_ZNK5blink18WebCryptoAlgorithm16HmacImportParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #11
  %25 = bitcast %"class.webcrypto::Status"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  call void @_ZN9webcrypto6Status23ErrorHmacImportEmptyKeyEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %51

30:                                               ; preds = %23
  %31 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %27, i32 8) #11
  %32 = extractvalue { i32, i1 } %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZN9webcrypto6Status17ErrorDataTooLargeEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %51

34:                                               ; preds = %30
  %35 = extractvalue { i32, i1 } %31, 0
  %36 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %24, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !5, !noalias !21
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %24, i64 0, i32 2
  %41 = load i32, i32* %40, align 4, !noalias !21
  %42 = lshr i32 %41, 3
  %43 = and i32 %41, 7
  %44 = add nuw nsw i32 %43, 7
  %45 = lshr i32 %44, 3
  %46 = add nuw nsw i32 %45, %42
  %47 = icmp eq i32 %46, %27
  br i1 %47, label %49, label %48

48:                                               ; preds = %39
  call void @_ZN9webcrypto6Status24ErrorHmacImportBadLengthEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %51

49:                                               ; preds = %39, %34
  %50 = phi i32 [ %35, %34 ], [ %41, %39 ]
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %8) #11
  br label %51

51:                                               ; preds = %29, %33, %48, %49
  %52 = phi i32 [ 0, %29 ], [ 0, %33 ], [ %50, %49 ], [ %35, %48 ]
  %53 = bitcast %"class.webcrypto::Status"* %8 to i64*
  %54 = bitcast %"class.webcrypto::Status"* %7 to i64*
  %55 = load i64, i64* %53, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %57 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %8, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %62, %51
  %66 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  %68 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %7) #11
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %71 = load i64, i64* %54, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %66, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11
  br label %112

74:                                               ; preds = %65
  %75 = bitcast %"class.blink::WebCryptoKeyAlgorithm"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.blink::WebCryptoKeyAlgorithm", %"class.blink::WebCryptoKeyAlgorithm"* %9, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"class.blink::WebCryptoHmacImportParams", %"class.blink::WebCryptoHmacImportParams"* %24, i64 0, i32 0, i32 1
  %78 = call i32 @_ZNK5blink18WebCryptoAlgorithm2IdEv(%"class.blink::WebCryptoAlgorithm"* %77) #11
  call void @_ZN5blink21WebCryptoKeyAlgorithm10CreateHmacENS_20WebCryptoAlgorithmIdEj(%"class.blink::WebCryptoKeyAlgorithm"* nonnull sret %9, i32 %78, i32 %52) #11
  %79 = and i32 %52, 7
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  call void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* dereferenceable(16) %1, %"class.blink::WebCryptoKeyAlgorithm"* nonnull dereferenceable(8) %9, i1 zeroext %3, i32 %4, %"class.blink::WebCryptoKey"* %5) #11
  br label %106

82:                                               ; preds = %74
  %83 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = load i32, i32* %26, align 8
  %89 = zext i32 %88 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #11
  %90 = icmp eq i32 %88, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = call i8* @_Znwm(i64 %89) #10
  store i8* %93, i8** %85, align 8
  store i8* %93, i8** %84, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %89
  store i8* %94, i8** %92, align 8
  %95 = bitcast i8** %85 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* align 1 %87, i64 %89, i1 false) #11
  %96 = ptrtoint i8* %94 to i64
  store i64 %96, i64* %95, align 8
  br label %97

97:                                               ; preds = %82, %91
  %98 = zext i32 %52 to i64
  call void @_ZN9webcrypto19TruncateToBitLengthEmPNSt3__16vectorIhNS0_9allocatorIhEEEE(i64 %98, %"class.std::__1::vector"* nonnull %10) #11
  %99 = bitcast %"class.webcrypto::CryptoData"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #11
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %11, %"class.std::__1::vector"* nonnull dereferenceable(24) %10) #11
  call void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret %0, %"class.webcrypto::CryptoData"* nonnull dereferenceable(16) %11, %"class.blink::WebCryptoKeyAlgorithm"* nonnull dereferenceable(8) %9, i1 zeroext %3, i32 %4, %"class.blink::WebCryptoKey"* %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #11
  %100 = load i8*, i8** %84, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = ptrtoint i8* %100 to i64
  %104 = bitcast i8** %85 to i64*
  store i64 %103, i64* %104, align 8
  call void @_ZdlPv(i8* nonnull %100) #10
  br label %105

105:                                              ; preds = %97, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  br label %106

106:                                              ; preds = %81, %105
  call void @_ZN5blink21WebCryptoKeyAlgorithm5ResetEv(%"class.blink::WebCryptoKeyAlgorithm"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %107 = load i8, i8* %59, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %111) #10
  br label %112

112:                                              ; preds = %15, %69, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  ret void
}

declare void @_ZN9webcrypto6Status31ErrorUnsupportedImportKeyFormatEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto24CreateWebCryptoSecretKeyERKNS_10CryptoDataERKN5blink21WebCryptoKeyAlgorithmEbiPNS3_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare void @_ZN9webcrypto19TruncateToBitLengthEmPNSt3__16vectorIhNS0_9allocatorIhEEEE(i64, %"class.std::__1::vector"*) local_unnamed_addr #5

declare void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #5

declare void @_ZN9webcrypto6Status23ErrorHmacImportEmptyKeyEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status17ErrorDataTooLargeEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status24ErrorHmacImportBadLengthEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #8

declare void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN9webcrypto9JwkReaderC1Ev(%"class.webcrypto::JwkReader"*) unnamed_addr #5

declare void @_ZN9webcrypto29ReadSecretKeyNoExpectedAlgJwkERKNS_10CryptoDataEbiPNSt3__16vectorIhNS3_9allocatorIhEEEEPNS_9JwkReaderE(%"class.webcrypto::Status"* sret, %"class.webcrypto::CryptoData"* dereferenceable(16), i1 zeroext, i32, %"class.std::__1::vector"*, %"class.webcrypto::JwkReader"*) local_unnamed_addr #5

declare void @_ZNK9webcrypto9JwkReader9VerifyAlgERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::JwkReader"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9webcrypto9JwkReaderD1Ev(%"class.webcrypto::JwkReader"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN9webcrypto6Status31ErrorUnsupportedExportKeyFormatEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #11
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #10
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #12
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #10
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN9webcrypto17WriteSecretKeyJwkERKNS_10CryptoDataERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEbiPNS3_6vectorIhNS7_IhEEEE(%"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32, %"class.std::__1::vector"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink12WebCryptoKey11ExtractableEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare i32 @_ZNK5blink12WebCryptoKey6UsagesEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare i32 @_ZNK5blink21WebCryptoKeyAlgorithm10ParamsTypeEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9webcrypto12_GLOBAL__N_18SignHmacERKNSt3__16vectorIhNS1_9allocatorIhEEEERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPS5_: argument 0"}
!4 = distinct !{!4, !"_ZN9webcrypto12_GLOBAL__N_18SignHmacERKNSt3__16vectorIhNS1_9allocatorIhEEEERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPS5_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN9webcrypto12_GLOBAL__N_122GetDigestBlockSizeBitsERKN5blink18WebCryptoAlgorithmEPj: argument 0"}
!8 = distinct !{!8, !"_ZN9webcrypto12_GLOBAL__N_122GetDigestBlockSizeBitsERKN5blink18WebCryptoAlgorithmEPj"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN9webcrypto12_GLOBAL__N_122GetDigestBlockSizeBitsERKN5blink18WebCryptoAlgorithmEPj: argument 0"}
!11 = distinct !{!11, !"_ZN9webcrypto12_GLOBAL__N_122GetDigestBlockSizeBitsERKN5blink18WebCryptoAlgorithmEPj"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ImportKeyJwkERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE: argument 0"}
!14 = distinct !{!14, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ImportKeyJwkERKNS_10CryptoDataERKN5blink18WebCryptoAlgorithmEbiPNS5_12WebCryptoKeyE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ExportKeyRawERKN5blink12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE: argument 0"}
!17 = distinct !{!17, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ExportKeyRawERKN5blink12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ExportKeyJwkERKN5blink12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE: argument 0"}
!20 = distinct !{!20, !"_ZNK9webcrypto12_GLOBAL__N_118HmacImplementation12ExportKeyJwkERKN5blink12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN9webcrypto12_GLOBAL__N_126GetHmacImportKeyLengthBitsEPKN5blink25WebCryptoHmacImportParamsEjPj: argument 0"}
!23 = distinct !{!23, !"_ZN9webcrypto12_GLOBAL__N_126GetHmacImportKeyLengthBitsEPKN5blink25WebCryptoHmacImportParamsEjPj"}
