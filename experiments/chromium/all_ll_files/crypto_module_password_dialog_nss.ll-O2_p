; ModuleID = '../../chrome/browser/ui/crypto_module_password_dialog_nss.cc'
source_filename = "../../chrome/browser/ui/crypto_module_password_dialog_nss.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %struct.PK11SlotInfoStr* }
%struct.PK11SlotInfoStr = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr"* }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.aura::Window" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.(anonymous namespace)::SlotUnlocker" = type <{ i64, %"class.std::__1::vector", i32, [4 x i8], %"class.net::HostPortPair", %"class.aura::Window"*, %"class.base::OnceCallback", i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::OnceCallback.13" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__basic_string_common" = type { i8 }
%struct.CERTCertificateStr = type { %struct.PLArenaPool*, i8*, i8*, %struct.CERTSignedDataStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.CERTNameStr, %struct.CERTValidityStr, %struct.CERTNameStr, %struct.CERTSubjectPublicKeyInfoStr, %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCertExtensionStr**, i8*, %struct.NSSTrustDomainStr*, %struct.SECItemStr, i32, i32, i32, i32, i32, i32, i32, %struct.CERTOKDomainNameStr*, i32, i32, i8*, i8*, %struct.NSSCertificateStr*, %struct.CERTCertTrustStr*, i32, %struct.CERTSubjectListStr*, %struct.CERTAuthKeyIDStr*, i32, %union.anon.11, i32, %struct.PK11SlotInfoStr*, i64, i32, %struct.CERTCertDistrustStr* }
%struct.PLArenaPool = type { %struct.PLArena, %struct.PLArena*, i32, i64 }
%struct.PLArena = type { %struct.PLArena*, i64, i64, i64 }
%struct.CERTSignedDataStr = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.SECAlgorithmIDStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTValidityStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTNameStr = type { %struct.PLArenaPool*, %struct.CERTRDNStr** }
%struct.CERTRDNStr = type { %struct.CERTAVAStr** }
%struct.CERTAVAStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTSubjectPublicKeyInfoStr = type { %struct.PLArenaPool*, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.CERTCertExtensionStr = type { %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr }
%struct.NSSTrustDomainStr = type opaque
%struct.SECItemStr = type { i32, i8*, i32 }
%struct.CERTOKDomainNameStr = type { %struct.CERTOKDomainNameStr*, i8* }
%struct.NSSCertificateStr = type opaque
%struct.CERTCertTrustStr = type { i32, i32, i32 }
%struct.CERTSubjectListStr = type { %struct.PLArenaPool*, i32, i8*, %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, i8* }
%struct.CERTSubjectNodeStr = type { %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTAuthKeyIDStr = type { %struct.SECItemStr, %struct.CERTGeneralNameStr*, %struct.SECItemStr, %struct.SECItemStr** }
%struct.CERTGeneralNameStr = type { i32, %union.anon.10, %struct.SECItemStr, %struct.PRCListStr }
%union.anon.10 = type { %struct.OtherNameStr }
%struct.OtherNameStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.PRCListStr = type { %struct.PRCListStr*, %struct.PRCListStr* }
%union.anon.11 = type { i8* }
%struct.CERTCertDistrustStr = type { %struct.SECItemStr, %struct.SECItemStr }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI15PK11SlotInfoStrN6crypto12NSSDestroyerIS2_XadL_Z13PK11_FreeSlotEEEEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome22UnlockSlotsIfNecessaryENSt3__16vectorINS0_10unique_ptrI15PK11SlotInfoStrN6crypto12NSSDestroyerIS3_XadL_Z13PK11_FreeSlotEEEEEENS0_9allocatorIS7_EEEE26CryptoModulePasswordReasonRKN3net12HostPortPairEPN4aura6WindowEN4base12OnceCallbackIFvvEEE(%"class.std::__1::vector"* nocapture, i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), %"class.aura::Window"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %78, label %14

14:                                               ; preds = %5, %71
  %15 = phi i64 [ %74, %71 ], [ %12, %5 ]
  %16 = phi i64 [ %72, %71 ], [ 0, %5 ]
  %17 = inttoptr i64 %15 to %"class.std::__1::unique_ptr"*
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %18, align 8
  %20 = tail call i32 @PK11_NeedLogin(%struct.PK11SlotInfoStr* %19) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %71, label %22

22:                                               ; preds = %14
  %23 = tail call i32 @PK11_IsLoggedIn(%struct.PK11SlotInfoStr* %19, i8* null) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %71

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 96) #11
  %27 = bitcast i8* %26 to %"class.(anonymous namespace)::SlotUnlocker"*
  %28 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds i8, i8* %26, i64 8
  %39 = bitcast i8* %26 to i64*
  store i64 0, i64* %39, align 8
  %40 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds i8, i8* %26, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %32, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %26, i64 32
  %44 = bitcast i8* %43 to i32*
  store i32 %1, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %26, i64 40
  %46 = bitcast %"class.net::HostPortPair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %25
  %51 = bitcast %"class.net::HostPortPair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %51, i64 24, i1 false) #10
  br label %58

52:                                               ; preds = %25
  %53 = bitcast i8* %45 to %"class.std::__1::basic_string"*
  %54 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %53, i8* %55, i64 %57) #10
  br label %58

58:                                               ; preds = %50, %52
  %59 = getelementptr inbounds i8, i8* %26, i64 64
  %60 = bitcast i8* %59 to i16*
  %61 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 1
  %62 = load i16, i16* %61, align 8
  store i16 %62, i16* %60, align 8
  %63 = getelementptr inbounds i8, i8* %26, i64 72
  %64 = bitcast i8* %63 to %"class.aura::Window"**
  store %"class.aura::Window"* %3, %"class.aura::Window"** %64, align 8
  %65 = getelementptr inbounds i8, i8* %26, i64 80
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast i8* %65 to i64*
  store i64 %36, i64* %67, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8
  %68 = getelementptr inbounds i8, i8* %26, i64 88
  %69 = bitcast i8* %68 to i32*
  store i32 0, i32* %69, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_112SlotUnlocker5StartEv(%"class.(anonymous namespace)::SlotUnlocker"* nonnull %27)
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %70) #10
  br label %89

71:                                               ; preds = %14, %22
  %72 = add nuw i64 %16, 1
  %73 = load i64, i64* %9, align 8
  %74 = load i64, i64* %11, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = icmp ult i64 %72, %76
  br i1 %77, label %14, label %78

78:                                               ; preds = %71, %5
  %79 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %82, i64* %83, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %80, align 8
  %84 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %85 = inttoptr i64 %82 to %"class.base::internal::BindStateBase"*
  %86 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %85, i64 0, i32 1
  %87 = bitcast void ()** %86 to void (%"class.base::internal::BindStateBase"*)**
  %88 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %87, align 8
  tail call void %88(%"class.base::internal::BindStateBase"* %85) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #10
  br label %89

89:                                               ; preds = %58, %78
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_112SlotUnlocker5StartEv(%"class.(anonymous namespace)::SlotUnlocker"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::OnceCallback.13", align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %6, %14
  br i1 %15, label %16, label %95

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %16, %87
  %19 = phi i64 [ %12, %16 ], [ %91, %87 ]
  %20 = phi i64 [ %6, %16 ], [ %89, %87 ]
  %21 = inttoptr i64 %19 to %"class.std::__1::unique_ptr"*
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 %20, i32 0, i32 0, i32 0
  %23 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %22, align 8
  %24 = tail call i32 @PK11_NeedLogin(%struct.PK11SlotInfoStr* %23) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %87, label %26

26:                                               ; preds = %18
  %27 = tail call i32 @PK11_IsLoggedIn(%struct.PK11SlotInfoStr* %23, i8* null) #10
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %87

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = load i64, i64* %5, align 8
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 %31, i32 0, i32 0, i32 0
  %34 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %33, align 8
  %35 = tail call i8* @PK11_GetTokenName(%struct.PK11SlotInfoStr* %34) #10
  %36 = tail call i64 @strlen(i8* %35) #10
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #12
  unreachable

40:                                               ; preds = %29
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = tail call i8* @_Znwm(i64 %44) #11
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = or i64 %44, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %49, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %56

51:                                               ; preds = %40
  %52 = trunc i64 %36 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1
  %55 = icmp eq i64 %36, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %42
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %50, %42 ]
  %58 = phi i8* [ %30, %51 ], [ %45, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %35, i64 %36, i1 false) #10
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %57, %56 ]
  %61 = phi i8* [ %30, %51 ], [ %58, %56 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %36
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 7
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 0
  %66 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 4, i32 0
  %69 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 5
  %70 = load %"class.aura::Window"*, %"class.aura::Window"** %69, align 8
  %71 = ptrtoint %"class.(anonymous namespace)::SlotUnlocker"* %0 to i64
  %72 = tail call i8* @_Znwm(i64 56) #11, !noalias !2
  %73 = bitcast i8* %72 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %74 = getelementptr inbounds i8, i8* %72, i64 32
  %75 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)* @_ZN12_GLOBAL__N_112SlotUnlocker11GotPasswordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i64), i64 0>, <2 x i64>* %75, align 8, !noalias !2
  %76 = getelementptr inbounds i8, i8* %72, i64 48
  %77 = bitcast i8* %76 to i64*
  store i64 %71, i64* %77, align 8, !noalias !2
  %78 = bitcast %"class.base::OnceCallback.13"* %4 to i8**
  store i8* %72, i8** %78, align 8, !alias.scope !2
  call void @_Z30ShowCryptoModulePasswordDialogRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEb26CryptoModulePasswordReasonS7_PN4aura6WindowEN4base12OnceCallbackIFvS7_EEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i1 zeroext %65, i32 %67, %"class.std::__1::basic_string"* dereferenceable(24) %68, %"class.aura::Window"* %70, %"class.base::OnceCallback.13"* nonnull %4) #10
  %79 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #10
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %59
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %59, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  br label %142

87:                                               ; preds = %18, %26
  %88 = load i64, i64* %5, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %5, align 8
  %90 = load i64, i64* %9, align 8
  %91 = load i64, i64* %11, align 8
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 3
  %94 = icmp ult i64 %89, %93
  br i1 %94, label %18, label %95

95:                                               ; preds = %87, %1
  %96 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 6
  %97 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %96, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.base::OnceCallback"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %103 = inttoptr i64 %100 to %"class.base::internal::BindStateBase"*
  %104 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %103, i64 0, i32 1
  %105 = bitcast void ()** %104 to void (%"class.base::internal::BindStateBase"*)**
  %106 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %105, align 8
  tail call void %106(%"class.base::internal::BindStateBase"* %103) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  %107 = icmp eq %"class.(anonymous namespace)::SlotUnlocker"* %0, null
  br i1 %107, label %142, label %108

108:                                              ; preds = %95
  %109 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 6, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %109) #10
  %110 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 4
  %111 = bitcast %"class.net::HostPortPair"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #11
  br label %118

118:                                              ; preds = %115, %108
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %120 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %119, align 8
  %121 = icmp eq %"class.std::__1::unique_ptr"* %120, null
  br i1 %121, label %140, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.std::__1::unique_ptr"* %120 to i8*
  %124 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %125 = icmp eq %"class.std::__1::unique_ptr"* %124, %120
  br i1 %125, label %138, label %126

126:                                              ; preds = %122, %133
  %127 = phi %"class.std::__1::unique_ptr"* [ %128, %133 ], [ %124, %122 ]
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 -1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %129, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %129, align 8
  %131 = icmp eq %struct.PK11SlotInfoStr* %130, null
  br i1 %131, label %133, label %132

132:                                              ; preds = %126
  call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %130) #10
  br label %133

133:                                              ; preds = %132, %126
  %134 = icmp eq %"class.std::__1::unique_ptr"* %128, %120
  br i1 %134, label %135, label %126

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector"* %7 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %135, %122
  %139 = phi i8* [ %137, %135 ], [ %123, %122 ]
  store %"class.std::__1::unique_ptr"* %120, %"class.std::__1::unique_ptr"** %8, align 8
  call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %138, %118
  %141 = bitcast %"class.(anonymous namespace)::SlotUnlocker"* %0 to i8*
  call void @_ZdlPv(i8* %141) #11
  br label %142

142:                                              ; preds = %140, %95, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6chrome25UnlockCertSlotIfNecessaryEP18CERTCertificateStr26CryptoModulePasswordReasonRKN3net12HostPortPairEPN4aura6WindowEN4base12OnceCallbackIFvvEEE(%struct.CERTCertificateStr* nocapture readonly, i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), %"class.aura::Window"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector", align 16
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #10
  %14 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %0, i64 0, i32 42
  %16 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %15, align 8
  %17 = tail call %struct.PK11SlotInfoStr* @PK11_ReferenceSlot(%struct.PK11SlotInfoStr* %16) #10
  %18 = ptrtoint %struct.PK11SlotInfoStr* %17 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %18, i64* %19, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrI15PK11SlotInfoStrN6crypto12NSSDestroyerIS2_XadL_Z13PK11_FreeSlotEEEEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #10
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %21 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %22, align 8
  %23 = icmp eq %struct.PK11SlotInfoStr* %21, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %5
  call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %21) #10
  br label %25

25:                                               ; preds = %5, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %26 = bitcast %"class.std::__1::vector"* %6 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 16
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %29, align 16
  %30 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  store i64 %31, i64* %33, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 24, i1 false) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  call void @_ZN6chrome22UnlockSlotsIfNecessaryENSt3__16vectorINS0_10unique_ptrI15PK11SlotInfoStrN6crypto12NSSDestroyerIS3_XadL_Z13PK11_FreeSlotEEEEEENS0_9allocatorIS7_EEEE26CryptoModulePasswordReasonRKN3net12HostPortPairEPN4aura6WindowEN4base12OnceCallbackIFvvEEE(%"class.std::__1::vector"* nonnull %8, i32 %1, %"class.net::HostPortPair"* dereferenceable(32) %2, %"class.aura::Window"* %3, %"class.base::OnceCallback"* nonnull %9)
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #10
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 16
  %41 = icmp eq %"class.std::__1::unique_ptr"* %40, null
  br i1 %41, label %60, label %42

42:                                               ; preds = %25
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i8*
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %45 = icmp eq %"class.std::__1::unique_ptr"* %44, %40
  br i1 %45, label %58, label %46

46:                                               ; preds = %42, %53
  %47 = phi %"class.std::__1::unique_ptr"* [ %48, %53 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 -1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %49, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %49, align 8
  %51 = icmp eq %struct.PK11SlotInfoStr* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %50) #10
  br label %53

53:                                               ; preds = %52, %46
  %54 = icmp eq %"class.std::__1::unique_ptr"* %48, %40
  br i1 %54, label %55, label %46

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::vector"* %8 to i8**
  %57 = load i8*, i8** %56, align 16
  br label %58

58:                                               ; preds = %55, %42
  %59 = phi i8* [ %57, %55 ], [ %43, %42 ]
  store %"class.std::__1::unique_ptr"* %40, %"class.std::__1::unique_ptr"** %28, align 8
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %25, %58
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 16
  %62 = icmp eq %"class.std::__1::unique_ptr"* %61, null
  br i1 %62, label %81, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::unique_ptr"* %61 to i8*
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr"* %65, %61
  br i1 %66, label %79, label %67

67:                                               ; preds = %63, %74
  %68 = phi %"class.std::__1::unique_ptr"* [ %69, %74 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %70, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %70, align 8
  %72 = icmp eq %struct.PK11SlotInfoStr* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %67
  call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %71) #10
  br label %74

74:                                               ; preds = %73, %67
  %75 = icmp eq %"class.std::__1::unique_ptr"* %69, %61
  br i1 %75, label %76, label %67

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::vector"* %6 to i8**
  %78 = load i8*, i8** %77, align 16
  br label %79

79:                                               ; preds = %76, %63
  %80 = phi i8* [ %78, %76 ], [ %64, %63 ]
  store %"class.std::__1::unique_ptr"* %61, %"class.std::__1::unique_ptr"** %12, align 8
  call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %60, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

declare %struct.PK11SlotInfoStr* @PK11_ReferenceSlot(%struct.PK11SlotInfoStr*) local_unnamed_addr #3

declare i32 @PK11_NeedLogin(%struct.PK11SlotInfoStr*) local_unnamed_addr #3

declare i32 @PK11_IsLoggedIn(%struct.PK11SlotInfoStr*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_Z30ShowCryptoModulePasswordDialogRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEb26CryptoModulePasswordReasonS7_PN4aura6WindowEN4base12OnceCallbackIFvS7_EEE(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.aura::Window"*, %"class.base::OnceCallback.13"*) local_unnamed_addr #3

declare i8* @PK11_GetTokenName(%struct.PK11SlotInfoStr*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112SlotUnlocker11GotPasswordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %14, label %16

14:                                               ; preds = %2
  %15 = add i64 %13, 1
  store i64 %15, i64* %12, align 8
  br label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 %13, i32 0, i32 0, i32 0
  %20 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = tail call i32 @PK11_CheckUserPassword(%struct.PK11SlotInfoStr* %20, i8* %24) #10
  %26 = icmp eq i32 %25, -2
  br i1 %26, label %27, label %29

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.(anonymous namespace)::SlotUnlocker", %"class.(anonymous namespace)::SlotUnlocker"* %0, i64 0, i32 7
  store i32 1, i32* %28, align 8
  br label %32

29:                                               ; preds = %16
  %30 = load i64, i64* %12, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %12, align 8
  br label %32

32:                                               ; preds = %27, %29, %14
  tail call fastcc void @_ZN12_GLOBAL__N_112SlotUnlocker5StartEv(%"class.(anonymous namespace)::SlotUnlocker"* %0)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.(anonymous namespace)::SlotUnlocker"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)**
  %22 = load void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)*, void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.(anonymous namespace)::SlotUnlocker"*, %"class.std::__1::basic_string"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.(anonymous namespace)::SlotUnlocker"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i32 @PK11_CheckUserPassword(%struct.PK11SlotInfoStr*, i8*) local_unnamed_addr #3

declare void @PK11_FreeSlot(%struct.PK11SlotInfoStr*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI15PK11SlotInfoStrN6crypto12NSSDestroyerIS2_XadL_Z13PK11_FreeSlotEEEEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %struct.PK11SlotInfoStr** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !7

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %146
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %146 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %142, align 8
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %142, align 8
  %144 = icmp eq %struct.PK11SlotInfoStr* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  tail call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %143) #10
  br label %146

146:                                              ; preds = %145, %139
  %147 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %147, label %148, label %139

148:                                              ; preds = %146, %132
  %149 = icmp eq i64 %135, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN12_GLOBAL__N_112SlotUnlockerEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
