; ModuleID = '../../v8/src/torque/type-oracle.cc'
source_filename = "../../v8/src/torque/type-oracle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope" = type { %"class.v8::internal::torque::TypeOracle", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* }
%"class.v8::internal::torque::TypeOracle" = type { %"class.v8::internal::torque::Deduplicator", %"class.std::__1::vector.170", %"class.v8::internal::torque::Deduplicator.177", %"class.std::__1::vector.203", %"class.std::__1::vector", %"class.std::__1::vector.216", %"class.std::__1::vector.203", %"class.std::__1::vector.243", i64 }
%"class.v8::internal::torque::Deduplicator" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.146" }
%"class.std::__1::__hash_table.146" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base.150"** }
%"struct.std::__1::__hash_node_base.150" = type { %"struct.std::__1::__hash_node_base.150"* }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::__bucket_list_deallocator.152" }
%"class.std::__1::__bucket_list_deallocator.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::__hash_node_base.150" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.v8::internal::torque::BuiltinPointerType"**, %"class.v8::internal::torque::BuiltinPointerType"**, %"class.std::__1::__compressed_pair.172" }
%"class.v8::internal::torque::BuiltinPointerType" = type { %"class.v8::internal::torque::Type", %"class.std::__1::vector.60", %"class.v8::internal::torque::Type"*, i64 }
%"class.v8::internal::torque::Type" = type { %"class.v8::internal::torque::TypeBase.base", %"class.v8::internal::torque::Type"*, %"class.std::__1::set", i64, %"class.v8::base::Optional", %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::TypeBase.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.v8::internal::torque::SpecializationKey" }
%"struct.v8::internal::torque::SpecializationKey" = type { %"class.v8::internal::torque::GenericType"*, %"class.std::__1::vector.60" }
%"class.v8::internal::torque::GenericType" = type { %"class.v8::internal::torque::GenericDeclarable" }
%"class.v8::internal::torque::GenericDeclarable" = type { %"class.v8::internal::torque::Declarable.base", %"class.std::__1::basic_string", %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"class.std::__1::unordered_map", %"class.v8::base::Optional.43" }
%"class.v8::internal::torque::Declarable.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8 }>
%"class.v8::internal::torque::Scope" = type { %"class.v8::internal::torque::Declarable.base", [7 x i8], %"class.std::__1::unordered_map.84", %"struct.v8::internal::torque::SpecializationRequester" }
%"class.std::__1::unordered_map.84" = type { %"class.std::__1::__hash_table.85" }
%"class.std::__1::__hash_table.85" = type <{ %"class.std::__1::unique_ptr.86", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.89"** }
%"struct.std::__1::__hash_node_base.89" = type { %"struct.std::__1::__hash_node_base.89"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator.91" }
%"class.std::__1::__bucket_list_deallocator.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.89" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.v8::internal::torque::SpecializationRequester" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::Scope"*, %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::SourcePosition" = type { %"class.v8::internal::torque::SourceId", %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }
%"class.v8::internal::torque::SourceId" = type { i32 }
%"struct.v8::internal::torque::LineAndColumn" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.v8::internal::torque::GenericTypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"class.std::__1::vector.12", %"struct.v8::internal::torque::TypeDeclaration"* }
%"struct.v8::internal::torque::Declaration" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::AstNode" = type { i32 (...)**, i32, %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.v8::internal::torque::GenericParameter"*, %"struct.v8::internal::torque::GenericParameter"*, %"class.std::__1::__compressed_pair.19" }
%"struct.v8::internal::torque::GenericParameter" = type { %"struct.v8::internal::torque::Identifier"*, %"class.v8::base::Optional.14" }
%"struct.v8::internal::torque::Identifier" = type { %"struct.v8::internal::torque::AstNode", %"class.std::__1::basic_string" }
%"class.v8::base::Optional.14" = type { %"class.v8::base::internal::OptionalBase.15" }
%"class.v8::base::internal::OptionalBase.15" = type { %"struct.v8::base::internal::OptionalStorage.16" }
%"struct.v8::base::internal::OptionalStorage.16" = type { %"struct.v8::base::internal::OptionalStorageBase.17" }
%"struct.v8::base::internal::OptionalStorageBase.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"struct.v8::internal::torque::TypeExpression"* }
%"struct.v8::internal::torque::TypeExpression" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.v8::internal::torque::GenericParameter"* }
%"struct.v8::internal::torque::TypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"struct.v8::internal::torque::Identifier"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.v8::base::Optional.43" = type { %"class.v8::base::internal::OptionalBase.44" }
%"class.v8::base::internal::OptionalBase.44" = type { %"struct.v8::base::internal::OptionalStorage.45" }
%"struct.v8::base::internal::OptionalStorage.45" = type { %"struct.v8::base::internal::OptionalStorageBase.46" }
%"struct.v8::base::internal::OptionalStorageBase.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"*, %"class.std::__1::__compressed_pair.55" }
%"class.v8::internal::torque::TypeConstraint" = type { %"class.v8::base::Optional.50" }
%"class.v8::base::Optional.50" = type { %"class.v8::base::internal::OptionalBase.51" }
%"class.v8::base::internal::OptionalBase.51" = type { %"struct.v8::base::internal::OptionalStorage.52" }
%"struct.v8::base::internal::OptionalStorage.52" = type { %"struct.v8::base::internal::OptionalStorageBase.53" }
%"struct.v8::base::internal::OptionalStorageBase.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.v8::internal::torque::TypeConstraint"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"**, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.v8::internal::torque::Type"** }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::torque::BuiltinPointerType"** }
%"class.v8::internal::torque::Deduplicator.177" = type { %"class.std::__1::unordered_set.178" }
%"class.std::__1::unordered_set.178" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.198", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::AggregateType" = type { %"class.v8::internal::torque::Type", i8, %"class.std::__1::vector.67", %"class.v8::internal::torque::Namespace"*, %"class.std::__1::basic_string", %"class.std::__1::vector.109" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.v8::internal::torque::Field"*, %"struct.v8::internal::torque::Field"*, %"class.std::__1::__compressed_pair.79" }
%"struct.v8::internal::torque::Field" = type <{ %"struct.v8::internal::torque::SourcePosition", [4 x i8], %"class.v8::internal::torque::AggregateType"*, %"class.v8::base::Optional.69", %"struct.v8::internal::torque::NameAndType", %"class.v8::base::Optional.74", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.v8::base::Optional.69" = type { %"class.v8::base::internal::OptionalBase.70" }
%"class.v8::base::internal::OptionalBase.70" = type { %"struct.v8::base::internal::OptionalStorage.71" }
%"struct.v8::base::internal::OptionalStorage.71" = type { %"struct.v8::base::internal::OptionalStorageBase.72" }
%"struct.v8::base::internal::OptionalStorageBase.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"struct.v8::internal::torque::ClassFieldIndexInfo" }
%"struct.v8::internal::torque::ClassFieldIndexInfo" = type { %"struct.v8::internal::torque::Expression"*, i8 }
%"struct.v8::internal::torque::Expression" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::NameAndType" = type { %"class.std::__1::basic_string", %"class.v8::internal::torque::Type"* }
%"class.v8::base::Optional.74" = type { %"class.v8::base::internal::OptionalBase.75" }
%"class.v8::base::internal::OptionalBase.75" = type { %"struct.v8::base::internal::OptionalStorage.76" }
%"struct.v8::base::internal::OptionalStorage.76" = type { %"struct.v8::base::internal::OptionalStorageBase.77" }
%"struct.v8::base::internal::OptionalStorageBase.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { i64 }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.v8::internal::torque::Field"* }
%"class.v8::internal::torque::Namespace" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.v8::internal::torque::Method"**, %"class.v8::internal::torque::Method"**, %"class.std::__1::__compressed_pair.135" }
%"class.v8::internal::torque::Method" = type { %"class.v8::internal::torque::TorqueMacro.base", %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::TorqueMacro.base" = type { %"class.v8::internal::torque::Macro.base", i8 }
%"class.v8::internal::torque::Macro.base" = type <{ %"class.v8::internal::torque::Callable", i8 }>
%"class.v8::internal::torque::Callable" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.v8::internal::torque::Signature", i64, %"class.v8::base::Optional.130" }
%"struct.v8::internal::torque::Signature" = type <{ %"class.std::__1::vector.111", %"class.v8::base::Optional.118", %"struct.v8::internal::torque::ParameterTypes", i64, %"class.v8::internal::torque::Type"*, %"class.std::__1::vector.123", i8, [7 x i8] }>
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.v8::internal::torque::Identifier"**, %"struct.v8::internal::torque::Identifier"**, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.v8::internal::torque::Identifier"** }
%"class.v8::base::Optional.118" = type { %"class.v8::base::internal::OptionalBase.119" }
%"class.v8::base::internal::OptionalBase.119" = type { %"struct.v8::base::internal::OptionalStorage.120" }
%"struct.v8::base::internal::OptionalStorage.120" = type { %"struct.v8::base::internal::OptionalStorageBase.121" }
%"struct.v8::base::internal::OptionalStorageBase.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::ParameterTypes" = type <{ %"class.std::__1::vector.60", i8, [7 x i8] }>
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.v8::internal::torque::LabelDeclaration"*, %"struct.v8::internal::torque::LabelDeclaration"*, %"class.std::__1::__compressed_pair.125" }
%"struct.v8::internal::torque::LabelDeclaration" = type { %"struct.v8::internal::torque::Identifier"*, %"class.std::__1::vector.60" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.v8::internal::torque::LabelDeclaration"* }
%"class.v8::base::Optional.130" = type { %"class.v8::base::internal::OptionalBase.131" }
%"class.v8::base::internal::OptionalBase.131" = type { %"struct.v8::base::internal::OptionalStorage.132" }
%"struct.v8::base::internal::OptionalStorage.132" = type { %"struct.v8::base::internal::OptionalStorageBase.133" }
%"struct.v8::base::internal::OptionalStorageBase.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"struct.v8::internal::torque::Statement"* }
%"struct.v8::internal::torque::Statement" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.v8::internal::torque::Method"** }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"*, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.v8::internal::torque::BitFieldStructType"* }
%"class.v8::internal::torque::BitFieldStructType" = type { %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Namespace"*, %"struct.v8::internal::torque::BitFieldStructDeclaration"*, %"class.std::__1::vector.228" }
%"struct.v8::internal::torque::BitFieldStructDeclaration" = type { %"struct.v8::internal::torque::TypeDeclaration", %"struct.v8::internal::torque::TypeExpression"*, %"class.std::__1::vector.221" }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"struct.v8::internal::torque::BitFieldDeclaration"*, %"struct.v8::internal::torque::BitFieldDeclaration"*, %"class.std::__1::__compressed_pair.223" }
%"struct.v8::internal::torque::BitFieldDeclaration" = type { %"struct.v8::internal::torque::NameAndTypeExpression", i32 }
%"struct.v8::internal::torque::NameAndTypeExpression" = type { %"struct.v8::internal::torque::Identifier"*, %"struct.v8::internal::torque::TypeExpression"* }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.v8::internal::torque::BitFieldDeclaration"* }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"struct.v8::internal::torque::BitField"*, %"struct.v8::internal::torque::BitField"*, %"class.std::__1::__compressed_pair.230" }
%"struct.v8::internal::torque::BitField" = type { %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::NameAndType", i32, i32 }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.v8::internal::torque::BitField"* }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::unique_ptr.218"* }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.std::__1::unique_ptr.205"*, %"class.std::__1::unique_ptr.205"*, %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::unique_ptr.205"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"*, %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.v8::internal::torque::Namespace"* }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::unique_ptr.245"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope" = type { %"class.v8::internal::torque::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::torque::MessageBuilder" = type { %"struct.v8::internal::torque::TorqueMessage", %"class.std::__1::vector.311" }
%"struct.v8::internal::torque::TorqueMessage" = type <{ %"class.std::__1::basic_string", %"class.v8::base::Optional.306", i32, [4 x i8] }>
%"class.v8::base::Optional.306" = type { %"class.v8::base::internal::OptionalBase.307" }
%"class.v8::base::internal::OptionalBase.307" = type { %"struct.v8::base::internal::OptionalStorage.308" }
%"struct.v8::base::internal::OptionalStorage.308" = type { %"struct.v8::base::internal::OptionalStorageBase.309" }
%"struct.v8::base::internal::OptionalStorageBase.309" = type { i8, %union.anon.310 }
%union.anon.310 = type { %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"*, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.v8::internal::torque::TorqueMessage"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::vector.60"* }
%"class.std::__1::tuple.323" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8::internal::torque::Declarable" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8, [7 x i8] }>
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.v8::internal::torque::ClassType"**, %"class.v8::internal::torque::ClassType"**, %"class.std::__1::__compressed_pair.294" }
%"class.v8::internal::torque::ClassType" = type <{ %"class.v8::internal::torque::AggregateType", i64, %"class.v8::internal::torque::ResidueClass", %"class.v8::base::Flags", [4 x i8], %"class.std::__1::basic_string", %"struct.v8::internal::torque::ClassDeclaration"*, %"class.v8::internal::torque::TypeAlias"*, %"class.v8::base::Optional.284", %"class.v8::base::Optional.289", [4 x i8] }>
%"class.v8::internal::torque::ResidueClass" = type { i64, i64 }
%"class.v8::base::Flags" = type { i32 }
%"struct.v8::internal::torque::ClassDeclaration" = type { %"struct.v8::internal::torque::TypeDeclaration", %"class.v8::base::Flags", %"struct.v8::internal::torque::TypeExpression"*, %"class.v8::base::Optional.118", %"class.std::__1::vector.258", %"class.std::__1::vector.265", %"struct.v8::internal::torque::InstanceTypeConstraints" }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.v8::internal::torque::Declaration"**, %"struct.v8::internal::torque::Declaration"**, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.v8::internal::torque::Declaration"** }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.v8::internal::torque::ClassFieldExpression"*, %"struct.v8::internal::torque::ClassFieldExpression"*, %"class.std::__1::__compressed_pair.274" }
%"struct.v8::internal::torque::ClassFieldExpression" = type <{ %"struct.v8::internal::torque::NameAndTypeExpression", %"class.v8::base::Optional.69", %"class.std::__1::vector.267", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.v8::internal::torque::ConditionalAnnotation"*, %"struct.v8::internal::torque::ConditionalAnnotation"*, %"class.std::__1::__compressed_pair.269" }
%"struct.v8::internal::torque::ConditionalAnnotation" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.v8::internal::torque::ConditionalAnnotation"* }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.v8::internal::torque::ClassFieldExpression"* }
%"struct.v8::internal::torque::InstanceTypeConstraints" = type { i32, i32 }
%"class.v8::internal::torque::TypeAlias" = type { %"class.v8::internal::torque::Declarable.base", i8, %"class.v8::base::Optional.279", %"class.v8::base::Optional.50", i8, %"struct.v8::internal::torque::SourcePosition" }
%"class.v8::base::Optional.279" = type { %"class.v8::base::internal::OptionalBase.280" }
%"class.v8::base::internal::OptionalBase.280" = type { %"struct.v8::base::internal::OptionalStorage.281" }
%"struct.v8::base::internal::OptionalStorage.281" = type { %"struct.v8::base::internal::OptionalStorageBase.282" }
%"struct.v8::base::internal::OptionalStorageBase.282" = type { i8, %union.anon.283 }
%union.anon.283 = type { %"struct.v8::internal::torque::TypeDeclaration"* }
%"class.v8::base::Optional.284" = type { %"class.v8::base::internal::OptionalBase.285" }
%"class.v8::base::internal::OptionalBase.285" = type { %"struct.v8::base::internal::OptionalStorage.286" }
%"struct.v8::base::internal::OptionalStorage.286" = type { %"struct.v8::base::internal::OptionalStorageBase.287" }
%"struct.v8::base::internal::OptionalStorageBase.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { i32 }
%"class.v8::base::Optional.289" = type { %"class.v8::base::internal::OptionalBase.290" }
%"class.v8::base::internal::OptionalBase.290" = type { %"struct.v8::base::internal::OptionalStorage.291" }
%"struct.v8::base::internal::OptionalStorage.291" = type { %"struct.v8::base::internal::OptionalStorageBase.292" }
%"struct.v8::base::internal::OptionalStorageBase.292" = type { i8, %union.anon.293 }
%union.anon.293 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.v8::internal::torque::ClassType"** }
%"class.v8::internal::torque::TypeBase" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.v8::internal::torque::QualifiedName" = type { %"class.std::__1::vector.299", %"class.std::__1::basic_string" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::basic_string"* }
%"class.std::length_error" = type { %"class.std::logic_error" }
%"class.std::logic_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.318" }
%"struct.std::__1::pair.318" = type { %"class.std::__1::vector.60", %"class.v8::internal::torque::Type"* }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.35"*, i8, [7 x i8] }>
%"class.std::__1::allocator.35" = type { i8 }
%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"* }

$_ZN2v88internal6torque11ReportErrorIJRA22_KcmRA18_S3_mRA12_S3_EEEvDpOT_ = comdat any

$_ZN2v88internal6torque17GenericDeclarableIPKNS1_4TypeEPNS1_22GenericTypeDeclarationEE17AddSpecializationERKNSt3__16vectorIS5_NS9_9allocatorIS5_EEEES5_ = comdat any

$_ZNSt3__111make_uniqueIN2v88internal6torque9NamespaceEJRKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$__clang_call_terminate = comdat any

$_ZN2v88internal6torque10TypeOracle19GetReferenceGenericEb = comdat any

$_ZNSt3__120__throw_length_errorEPKc = comdat any

$_ZNSt12length_errorC2EPKc = comdat any

$_ZN2v88internal6torque14MessageBuilderD2Ev = comdat any

$_ZN2v88internal6torque8ToStringIJRA22_KcmRA18_S3_mRA12_S3_EEENSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEDpOT_ = comdat any

$_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN2v88internal6torque13TorqueMessageD2Ev = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_ = comdat any

$_ZN2v88internal6torque8ToStringIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKSB_EEENSS_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_IS10_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE8__rehashEm = comdat any

$_ZN2v88internal6torque5ScopeC2ENS1_10Declarable4KindE = comdat any

$_ZN2v88internal6torque9NamespaceD2Ev = comdat any

$_ZN2v88internal6torque9NamespaceD0Ev = comdat any

$_ZNK2v88internal6torque9Namespace9type_nameEv = comdat any

$_ZN2v88internal6torque5ScopeD2Ev = comdat any

$_ZN2v88internal6torque5ScopeD0Ev = comdat any

$_ZNK2v88internal6torque5Scope9type_nameEv = comdat any

$_ZN2v88internal6torque10DeclarableD2Ev = comdat any

$_ZN2v88internal6torque10DeclarableD0Ev = comdat any

$_ZNK2v88internal6torque10Declarable9type_nameEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque9NamespaceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZTVN2v88internal6torque9NamespaceE = comdat any

$_ZTSN2v88internal6torque9NamespaceE = comdat any

$_ZTSN2v88internal6torque5ScopeE = comdat any

$_ZTSN2v88internal6torque10DeclarableE = comdat any

$_ZTIN2v88internal6torque10DeclarableE = comdat any

$_ZTIN2v88internal6torque5ScopeE = comdat any

$_ZTIN2v88internal6torque9NamespaceE = comdat any

$_ZTVN2v88internal6torque5ScopeE = comdat any

$_ZTVN2v88internal6torque10DeclarableE = comdat any

@_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top = internal thread_local global %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* null, align 8
@.str = private unnamed_addr constant [22 x i8] c"Generic struct takes \00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c" parameters, but \00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c" were given\00", align 1
@_ZN2v88internal6torqueL43GENERIC_TYPE_INSTANTIATION_NAMESPACE_STRINGE = internal constant i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), align 8
@.str.3 = private unnamed_addr constant [38 x i8] c"_generic_type_instantiation_namespace\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"torque_internal\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ConstReference\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"MutableReference\00", align 1
@.str.7 = private unnamed_addr constant [68 x i8] c"allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00", align 1
@_ZTISt12length_error = external constant i8*
@_ZTVSt12length_error = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN2v88internal6torque9NamespaceE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN2v88internal6torque9NamespaceE to i8*), i8* bitcast (void (%"class.v8::internal::torque::Namespace"*)* @_ZN2v88internal6torque9NamespaceD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::torque::Namespace"*)* @_ZN2v88internal6torque9NamespaceD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::torque::Namespace"*)* @_ZNK2v88internal6torque9Namespace9type_nameEv to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN2v88internal6torque9NamespaceE = linkonce_odr hidden constant [32 x i8] c"N2v88internal6torque9NamespaceE\00", comdat, align 1
@_ZTSN2v88internal6torque5ScopeE = linkonce_odr hidden constant [28 x i8] c"N2v88internal6torque5ScopeE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN2v88internal6torque10DeclarableE = linkonce_odr hidden constant [34 x i8] c"N2v88internal6torque10DeclarableE\00", comdat, align 1
@_ZTIN2v88internal6torque10DeclarableE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @_ZTSN2v88internal6torque10DeclarableE, i32 0, i32 0) }, comdat, align 8
@_ZTIN2v88internal6torque5ScopeE = linkonce_odr hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN2v88internal6torque5ScopeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN2v88internal6torque10DeclarableE to i8*) }, comdat, align 8
@_ZTIN2v88internal6torque9NamespaceE = linkonce_odr hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN2v88internal6torque9NamespaceE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN2v88internal6torque5ScopeE to i8*) }, comdat, align 8
@_ZTVN2v88internal6torque5ScopeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN2v88internal6torque5ScopeE to i8*), i8* bitcast (void (%"class.v8::internal::torque::Scope"*)* @_ZN2v88internal6torque5ScopeD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::torque::Scope"*)* @_ZN2v88internal6torque5ScopeD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::torque::Scope"*)* @_ZNK2v88internal6torque5Scope9type_nameEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal6torque10DeclarableE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN2v88internal6torque10DeclarableE to i8*), i8* bitcast (void (%"class.v8::internal::torque::Declarable"*)* @_ZN2v88internal6torque10DeclarableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::torque::Declarable"*)* @_ZN2v88internal6torque10DeclarableD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::torque::Declarable"*)* @_ZNK2v88internal6torque10Declarable9type_nameEv to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [12 x i8] c"<<unknown>>\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"scope\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"namespace\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEv() local_unnamed_addr #0 {
  ret %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN2v88internal6torque10TypeOracle17GetAggregateTypesEv() local_unnamed_addr #1 align 2 {
  %1 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %2 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %1, i64 0, i32 0, i32 4
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.216"* @_ZN2v88internal6torque10TypeOracle22GetBitFieldStructTypesEv() local_unnamed_addr #1 align 2 {
  %1 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %2 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %1, i64 0, i32 0, i32 5
  ret %"class.std::__1::vector.216"* %2
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque10TypeOracle22FinalizeAggregateTypesEv() local_unnamed_addr #2 align 2 {
  %1 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %2 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %1, i64 0, i32 0, i32 4
  %3 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %1, i64 0, i32 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %0, %9
  %10 = phi %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* [ %21, %9 ], [ %1, %0 ]
  %11 = phi i64 [ %12, %9 ], [ 0, %0 ]
  %12 = add i64 %11, 1
  %13 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %10, i64 0, i32 0, i32 4, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 %11, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::torque::AggregateType"*, %"class.v8::internal::torque::AggregateType"** %15, align 8
  %17 = bitcast %"class.v8::internal::torque::AggregateType"* %16 to void (%"class.v8::internal::torque::AggregateType"*)***
  %18 = load void (%"class.v8::internal::torque::AggregateType"*)**, void (%"class.v8::internal::torque::AggregateType"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::torque::AggregateType"*)*, void (%"class.v8::internal::torque::AggregateType"*)** %18, i64 17
  %20 = load void (%"class.v8::internal::torque::AggregateType"*)*, void (%"class.v8::internal::torque::AggregateType"*)** %19, align 8
  tail call void %20(%"class.v8::internal::torque::AggregateType"* %16)
  %21 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %22 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %21, i64 0, i32 0, i32 4
  %23 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %21, i64 0, i32 0, i32 4, i32 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  %30 = icmp eq i64 %12, %29
  br i1 %30, label %31, label %9

31:                                               ; preds = %9, %0
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: ssp uwtable
define hidden %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque10TypeOracle22GetGenericTypeInstanceEPNS1_11GenericTypeENSt3__16vectorIPKNS1_4TypeENS5_9allocatorIS9_EEEE(%"class.v8::internal::torque::GenericType"*, %"class.std::__1::vector.60"*) local_unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope", align 8
  %6 = alloca %"class.v8::base::Optional", align 8
  %7 = alloca %"struct.v8::internal::torque::SpecializationKey", align 8
  %8 = getelementptr inbounds %"class.v8::internal::torque::GenericType", %"class.v8::internal::torque::GenericType"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::torque::GenericType", %"class.v8::internal::torque::GenericType"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"struct.v8::internal::torque::GenericTypeDeclaration"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::torque::GenericTypeDeclaration", %"struct.v8::internal::torque::GenericTypeDeclaration"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.v8::internal::torque::GenericTypeDeclaration", %"struct.v8::internal::torque::GenericTypeDeclaration"* %10, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.v8::internal::torque::GenericParameter"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.12"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::torque::Type"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.60"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %18, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %2
  %28 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  store i64 %18, i64* %3, align 8
  %29 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  store i64 %25, i64* %4, align 8
  call void @_ZN2v88internal6torque11ReportErrorIJRA22_KcmRA18_S3_mRA12_S3_EEEvDpOT_([22 x i8]* nonnull dereferenceable(22) @.str, i64* nonnull dereferenceable(8) %3, [18 x i8]* nonnull dereferenceable(18) @.str.1, i64* nonnull dereferenceable(8) %4, [12 x i8]* nonnull dereferenceable(12) @.str.2) #18
  unreachable

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.v8::internal::torque::GenericType", %"class.v8::internal::torque::GenericType"* %0, i64 0, i32 0, i32 3, i32 0
  %32 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"* %31, %"class.std::__1::vector.60"* dereferenceable(24) %1)
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 5
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to %"class.v8::internal::torque::Type"**
  %37 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %36, align 8
  br label %178

38:                                               ; preds = %30
  %39 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
  %40 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* %40, i64 0, i32 0
  %42 = load %"class.v8::internal::torque::Scope"*, %"class.v8::internal::torque::Scope"** %41, align 8
  %43 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  %44 = getelementptr inbounds %"class.v8::internal::torque::GenericType", %"class.v8::internal::torque::GenericType"* %0, i64 0, i32 0, i32 0, i32 3
  %45 = bitcast %"class.v8::internal::torque::Scope"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* %5 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* %5, i64 0, i32 1
  %49 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
  %50 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
  store %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"* %5, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %53, align 8
  %54 = load %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"struct.v8::internal::torque::GenericTypeDeclaration"** %9, align 8
  %55 = getelementptr inbounds %"struct.v8::internal::torque::GenericTypeDeclaration", %"struct.v8::internal::torque::GenericTypeDeclaration"* %54, i64 0, i32 2
  %56 = load %"struct.v8::internal::torque::TypeDeclaration"*, %"struct.v8::internal::torque::TypeDeclaration"** %55, align 8
  %57 = bitcast %"struct.v8::internal::torque::SpecializationKey"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #17
  %58 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 0
  store %"class.v8::internal::torque::GenericType"* %0, %"class.v8::internal::torque::GenericType"** %58, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1
  %60 = bitcast %"class.std::__1::vector.60"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #17
  %61 = load i64, i64* %20, align 8
  %62 = load i64, i64* %22, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp eq i64 %63, 0
  %66 = ptrtoint %"class.v8::internal::torque::GenericType"* %0 to i64
  br i1 %65, label %102, label %67

67:                                               ; preds = %38
  %68 = icmp ugt i64 %64, 2305843009213693951
  br i1 %68, label %69, label %72

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.60"* %59 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
          to label %71 unwind label %92

71:                                               ; preds = %69
  unreachable

72:                                               ; preds = %67
  %73 = invoke i8* @_Znwm(i64 %63) #19
          to label %74 unwind label %92

74:                                               ; preds = %72
  %75 = bitcast i8* %73 to %"class.v8::internal::torque::Type"**
  %76 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 1
  %77 = bitcast %"class.v8::internal::torque::Type"*** %76 to i8**
  store i8* %73, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.60"* %59 to i8**
  store i8* %73, i8** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %75, i64 %64
  %80 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::Type"** %79, %"class.v8::internal::torque::Type"*** %80, align 8
  %81 = bitcast %"class.v8::internal::torque::Type"*** %76 to i64*
  %82 = ptrtoint i8* %73 to i64
  %83 = icmp sgt i64 %63, 0
  %84 = ptrtoint %"class.v8::internal::torque::Type"** %79 to i64
  br i1 %83, label %85, label %90

85:                                               ; preds = %74
  %86 = lshr exact i64 %63, 3
  %87 = inttoptr i64 %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %87, i64 %63, i1 false) #17
  %88 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %75, i64 %86
  %89 = ptrtoint %"class.v8::internal::torque::Type"** %88 to i64
  br label %90

90:                                               ; preds = %85, %74
  %91 = phi i64 [ %89, %85 ], [ %82, %74 ]
  store i64 %91, i64* %81, align 8
  br label %102

92:                                               ; preds = %72, %69
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %59, i64 0, i32 0, i32 0
  %95 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %94, align 8
  %96 = icmp eq %"class.v8::internal::torque::Type"** %95, null
  br i1 %96, label %143, label %97

97:                                               ; preds = %92
  %98 = ptrtoint %"class.v8::internal::torque::Type"** %95 to i64
  %99 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 1
  %100 = bitcast %"class.v8::internal::torque::Type"*** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.v8::internal::torque::Type"** %95 to i8*
  call void @_ZdlPv(i8* %101) #20
  br label %143

102:                                              ; preds = %38, %90
  %103 = phi i64 [ %84, %90 ], [ 0, %38 ]
  %104 = phi i64 [ %91, %90 ], [ 0, %38 ]
  %105 = phi i64 [ %82, %90 ], [ 0, %38 ]
  %106 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %106, align 8
  %107 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %108 = bitcast %"struct.v8::internal::torque::SpecializationKey"* %107 to i64*
  store i64 %66, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %110 = bitcast %"class.std::__1::vector.60"* %109 to i64*
  store i64 %105, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 1
  %112 = bitcast %"class.v8::internal::torque::Type"*** %111 to i64*
  %113 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %114 = bitcast %"class.v8::internal::torque::Type"*** %113 to i64*
  store i64 %104, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"class.v8::internal::torque::Type"*** %115 to i64*
  store i64 %103, i64* %116, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #17
  %117 = invoke %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque11TypeVisitor11ComputeTypeEPNS1_15TypeDeclarationENS_4base8OptionalINS1_17SpecializationKeyINS1_11GenericTypeEEEEEPNS1_5ScopeE(%"struct.v8::internal::torque::TypeDeclaration"* %56, %"class.v8::base::Optional"* nonnull %6, %"class.v8::internal::torque::Scope"* %42)
          to label %118 unwind label %146

118:                                              ; preds = %102
  %119 = load i8, i8* %106, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %123 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %122, align 8
  %124 = icmp eq %"class.v8::internal::torque::Type"** %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = ptrtoint %"class.v8::internal::torque::Type"** %123 to i64
  store i64 %126, i64* %114, align 8
  %127 = bitcast %"class.v8::internal::torque::Type"** %123 to i8*
  call void @_ZdlPv(i8* %127) #20
  br label %128

128:                                              ; preds = %118, %121, %125
  %129 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %129, align 8
  %131 = icmp eq %"class.v8::internal::torque::Type"** %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = ptrtoint %"class.v8::internal::torque::Type"** %130 to i64
  store i64 %133, i64* %112, align 8
  %134 = bitcast %"class.v8::internal::torque::Type"** %130 to i8*
  call void @_ZdlPv(i8* %134) #20
  br label %135

135:                                              ; preds = %128, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #17
  %136 = load i64, i64* %52, align 8
  %137 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
          to label %141 unwind label %138

138:                                              ; preds = %135
  %139 = landingpad { i8*, i32 }
          catch i8* null
  %140 = extractvalue { i8*, i32 } %139, 0
  call void @__clang_call_terminate(i8* %140) #21
  unreachable

141:                                              ; preds = %135
  %142 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %137 to i64*
  store i64 %136, i64* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  call void @_ZN2v88internal6torque17GenericDeclarableIPKNS1_4TypeEPNS1_22GenericTypeDeclarationEE17AddSpecializationERKNSt3__16vectorIS5_NS9_9allocatorIS5_EEEES5_(%"class.v8::internal::torque::GenericDeclarable"* %8, %"class.std::__1::vector.60"* dereferenceable(24) %1, %"class.v8::internal::torque::Type"* %117)
  br label %178

143:                                              ; preds = %92, %97
  %144 = extractvalue { i8*, i32 } %93, 0
  %145 = extractvalue { i8*, i32 } %93, 1
  br label %166

146:                                              ; preds = %102
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  %149 = extractvalue { i8*, i32 } %147, 1
  %150 = load i8, i8* %106, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %159, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %154 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %153, align 8
  %155 = icmp eq %"class.v8::internal::torque::Type"** %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = ptrtoint %"class.v8::internal::torque::Type"** %154 to i64
  store i64 %157, i64* %114, align 8
  %158 = bitcast %"class.v8::internal::torque::Type"** %154 to i8*
  call void @_ZdlPv(i8* %158) #20
  br label %159

159:                                              ; preds = %156, %152, %146
  %160 = getelementptr inbounds %"struct.v8::internal::torque::SpecializationKey", %"struct.v8::internal::torque::SpecializationKey"* %7, i64 0, i32 1, i32 0, i32 0
  %161 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %160, align 8
  %162 = icmp eq %"class.v8::internal::torque::Type"** %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = ptrtoint %"class.v8::internal::torque::Type"** %161 to i64
  store i64 %164, i64* %112, align 8
  %165 = bitcast %"class.v8::internal::torque::Type"** %161 to i8*
  call void @_ZdlPv(i8* %165) #20
  br label %166

166:                                              ; preds = %163, %159, %143
  %167 = phi i8* [ %144, %143 ], [ %148, %159 ], [ %148, %163 ]
  %168 = phi i32 [ %145, %143 ], [ %149, %159 ], [ %149, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #17
  %169 = load i64, i64* %52, align 8
  %170 = invoke dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
          to label %174 unwind label %171

171:                                              ; preds = %166
  %172 = landingpad { i8*, i32 }
          catch i8* null
  %173 = extractvalue { i8*, i32 } %172, 0
  call void @__clang_call_terminate(i8* %173) #21
  unreachable

174:                                              ; preds = %166
  %175 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %170 to i64*
  store i64 %169, i64* %175, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  %176 = insertvalue { i8*, i32 } undef, i8* %167, 0
  %177 = insertvalue { i8*, i32 } %176, i32 %168, 1
  resume { i8*, i32 } %177

178:                                              ; preds = %141, %34
  %179 = phi %"class.v8::internal::torque::Type"* [ %37, %34 ], [ %117, %141 ]
  ret %"class.v8::internal::torque::Type"* %179
}

; Function Attrs: noreturn ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque11ReportErrorIJRA22_KcmRA18_S3_mRA12_S3_EEEvDpOT_([22 x i8]* dereferenceable(22), i64* dereferenceable(8), [18 x i8]* dereferenceable(18), i64* dereferenceable(8), [12 x i8]* dereferenceable(12)) local_unnamed_addr #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.v8::internal::torque::MessageBuilder", align 8
  %8 = bitcast %"class.v8::internal::torque::MessageBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #17
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17, !noalias !3
  call void @_ZN2v88internal6torque8ToStringIJRA22_KcmRA18_S3_mRA12_S3_EEENSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEDpOT_(%"class.std::__1::basic_string"* nonnull sret %6, [22 x i8]* dereferenceable(22) %0, i64* dereferenceable(8) %1, [18 x i8]* dereferenceable(18) %2, i64* dereferenceable(8) %3, [12 x i8]* dereferenceable(12) %4), !noalias !3
  invoke void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 0)
          to label %10 unwind label %18

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !3
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8, !noalias !3
  call void @_ZdlPv(i8* %17) #20
  br label %28

18:                                               ; preds = %5
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !3
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !3
  call void @_ZdlPv(i8* %26) #20
  br label %27

27:                                               ; preds = %24, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17, !noalias !3
  resume { i8*, i32 } %19

28:                                               ; preds = %10, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17, !noalias !3
  invoke void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"* nonnull %7) #18
          to label %29 unwind label %30

29:                                               ; preds = %28
  unreachable

30:                                               ; preds = %28
  %31 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #17
  resume { i8*, i32 } %31
}

declare %"class.v8::internal::torque::Type"* @_ZN2v88internal6torque11TypeVisitor11ComputeTypeEPNS1_15TypeDeclarationENS_4base8OptionalINS1_17SpecializationKeyINS1_11GenericTypeEEEEEPNS1_5ScopeE(%"struct.v8::internal::torque::TypeDeclaration"*, %"class.v8::base::Optional"*, %"class.v8::internal::torque::Scope"*) local_unnamed_addr #5

declare i32 @__gxx_personality_v0(...)

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque17GenericDeclarableIPKNS1_4TypeEPNS1_22GenericTypeDeclarationEE17AddSpecializationERKNSt3__16vectorIS5_NS9_9allocatorIS5_EEEES5_(%"class.v8::internal::torque::GenericDeclarable"*, %"class.std::__1::vector.60"* dereferenceable(24), %"class.v8::internal::torque::Type"*) local_unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.323", align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.48", align 8
  %8 = alloca %"class.v8::base::Optional.118", align 8
  %9 = alloca %"class.v8::internal::torque::MessageBuilder", align 8
  %10 = getelementptr inbounds %"class.v8::base::Optional.118", %"class.v8::base::Optional.118"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %63

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.48"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 0, i32 3
  %17 = load %"class.v8::internal::torque::Scope"*, %"class.v8::internal::torque::Scope"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 2
  %19 = load %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"struct.v8::internal::torque::GenericTypeDeclaration"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::torque::GenericTypeDeclaration", %"struct.v8::internal::torque::GenericTypeDeclaration"* %19, i64 0, i32 1
  call void @_ZN2v88internal6torque18ComputeConstraintsEPNS1_5ScopeERKNSt3__16vectorINS1_16GenericParameterENS4_9allocatorIS6_EEEE(%"class.std::__1::vector.48"* nonnull sret %7, %"class.v8::internal::torque::Scope"* %17, %"class.std::__1::vector.12"* dereferenceable(24) %20)
  %21 = bitcast %"class.std::__1::vector.48"* %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 1
  %24 = bitcast %"class.v8::internal::torque::TypeConstraint"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.v8::internal::torque::TypeConstraint"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #17
  %29 = load i8, i8* %11, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %30, label %42, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %31, i64 0, i32 0, i32 0
  %34 = load %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"** %33, align 8
  %35 = icmp eq %"class.v8::internal::torque::TypeConstraint"* %34, null
  br i1 %35, label %36, label %48

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::vector.48"* %31 to i64*
  store i64 %22, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::torque::TypeConstraint"** %38 to i64*
  store i64 %25, i64* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.v8::internal::torque::TypeConstraint"** %40 to i64*
  store i64 %28, i64* %41, align 8
  br label %62

42:                                               ; preds = %14
  %43 = bitcast %"class.std::__1::vector.48"* %31 to i64*
  store i64 %22, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::torque::TypeConstraint"** %44 to i64*
  store i64 %25, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.v8::internal::torque::TypeConstraint"** %46 to i64*
  store i64 %28, i64* %47, align 8
  store i8 1, i8* %11, align 8
  br label %62

48:                                               ; preds = %32
  %49 = ptrtoint %"class.v8::internal::torque::TypeConstraint"* %34 to i64
  %50 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::torque::TypeConstraint"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::torque::TypeConstraint", %"class.v8::internal::torque::TypeConstraint"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %52) #20
  %53 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 0
  %54 = load %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"** %53, align 8
  %55 = bitcast %"class.std::__1::vector.48"* %31 to i64*
  store i64 %22, i64* %55, align 8
  store i64 %25, i64* %51, align 8
  %56 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.v8::internal::torque::TypeConstraint"** %56 to i64*
  store i64 %28, i64* %57, align 8
  %58 = icmp eq %"class.v8::internal::torque::TypeConstraint"* %54, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %48
  %60 = ptrtoint %"class.v8::internal::torque::TypeConstraint"* %54 to i64
  store i64 %60, i64* %24, align 8
  %61 = getelementptr inbounds %"class.v8::internal::torque::TypeConstraint", %"class.v8::internal::torque::TypeConstraint"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %61) #20
  br label %62

62:                                               ; preds = %59, %48, %42, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  br label %63

63:                                               ; preds = %3, %62
  %64 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2v88internal6torque23FindConstraintViolationERKNSt3__16vectorIPKNS1_4TypeENS2_9allocatorIS6_EEEERKNS3_INS1_14TypeConstraintENS7_ISC_EEEE(%"class.v8::base::Optional.118"* nonnull sret %8, %"class.std::__1::vector.60"* dereferenceable(24) %1, %"class.std::__1::vector.48"* dereferenceable(24) %64)
  %65 = load i8, i8* %10, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %118, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.v8::internal::torque::MessageBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %68) #17
  %69 = getelementptr inbounds %"class.v8::base::Optional.118", %"class.v8::base::Optional.118"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #17, !noalias !8
  invoke void @_ZN2v88internal6torque8ToStringIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %69)
          to label %71 unwind label %92

71:                                               ; preds = %67
  invoke void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 0)
          to label %72 unwind label %80

72:                                               ; preds = %71
  %73 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !8
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8, !noalias !8
  call void @_ZdlPv(i8* %79) #20
  br label %90

80:                                               ; preds = %71
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1, !noalias !8
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8, !noalias !8
  call void @_ZdlPv(i8* %88) #20
  br label %89

89:                                               ; preds = %86, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #17, !noalias !8
  br label %94

90:                                               ; preds = %77, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #17, !noalias !8
  invoke void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"* nonnull %9) #18
          to label %91 unwind label %98

91:                                               ; preds = %90
  unreachable

92:                                               ; preds = %67
  %93 = landingpad { i8*, i32 }
          cleanup
  br label %94

94:                                               ; preds = %89, %92
  %95 = phi { i8*, i32 } [ %93, %92 ], [ %81, %89 ]
  %96 = extractvalue { i8*, i32 } %95, 0
  %97 = extractvalue { i8*, i32 } %95, 1
  br label %102

98:                                               ; preds = %90
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  %101 = extractvalue { i8*, i32 } %99, 1
  call void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"* nonnull %9) #17
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi i8* [ %100, %98 ], [ %96, %94 ]
  %104 = phi i32 [ %101, %98 ], [ %97, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %68) #17
  %105 = load i8, i8* %10, align 8, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #20
  br label %115

115:                                              ; preds = %102, %107, %112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #17
  %116 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %104, 1
  resume { i8*, i32 } %117

118:                                              ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #17
  %119 = getelementptr inbounds %"class.v8::internal::torque::GenericDeclarable", %"class.v8::internal::torque::GenericDeclarable"* %0, i64 0, i32 3, i32 0
  %120 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #17
  %121 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.60"* %1, %"class.std::__1::vector.60"** %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::tuple.323", %"class.std::__1::tuple.323"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #17
  %123 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %119, %"class.std::__1::vector.60"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.323"* nonnull dereferenceable(1) %5)
  %124 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %123, 0
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 5
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"class.v8::internal::torque::Type"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #17
  store %"class.v8::internal::torque::Type"* %2, %"class.v8::internal::torque::Type"** %126, align 8
  ret void
}

; Function Attrs: ssp uwtable
define hidden %"class.v8::internal::torque::Namespace"* @_ZN2v88internal6torque10TypeOracle39CreateGenericTypeInstantiationNamespaceEv() local_unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__1::unique_ptr.245", align 8
  %2 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %3 = bitcast %"class.std::__1::unique_ptr.245"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #17
  %4 = tail call %"class.v8::internal::torque::Namespace"* @_ZNSt3__111make_uniqueIN2v88internal6torque9NamespaceEJRKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8** nonnull dereferenceable(8) @_ZN2v88internal6torqueL43GENERIC_TYPE_INSTANTIATION_NAMESPACE_STRINGE)
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::torque::Namespace"* %4, %"class.v8::internal::torque::Namespace"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %2, i64 0, i32 0, i32 7, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %2, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %8, align 8
  %10 = icmp ult %"class.std::__1::unique_ptr.245"* %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %0
  %12 = ptrtoint %"class.v8::internal::torque::Namespace"* %4 to i64
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %5, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.245"* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %7, i64 1
  %15 = ptrtoint %"class.std::__1::unique_ptr.245"* %14 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.245"** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %19

17:                                               ; preds = %0
  %18 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %2, i64 0, i32 0, i32 7
  invoke void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque9NamespaceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.243"* %18, %"class.std::__1::unique_ptr.245"* nonnull dereferenceable(8) %1)
          to label %19 unwind label %33

19:                                               ; preds = %11, %17
  %20 = load %"class.v8::internal::torque::Namespace"*, %"class.v8::internal::torque::Namespace"** %5, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %5, align 8
  %21 = icmp eq %"class.v8::internal::torque::Namespace"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.v8::internal::torque::Namespace"* %20 to void (%"class.v8::internal::torque::Namespace"*)***
  %24 = load void (%"class.v8::internal::torque::Namespace"*)**, void (%"class.v8::internal::torque::Namespace"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %24, i64 1
  %26 = load void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %25, align 8
  call void %26(%"class.v8::internal::torque::Namespace"* nonnull %20) #17
  br label %27

27:                                               ; preds = %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #17
  %28 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %29 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %28, i64 0, i32 0, i32 7, i32 0, i32 1
  %30 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %30, i64 -1, i32 0, i32 0, i32 0
  %32 = load %"class.v8::internal::torque::Namespace"*, %"class.v8::internal::torque::Namespace"** %31, align 8
  ret %"class.v8::internal::torque::Namespace"* %32

33:                                               ; preds = %17
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = load %"class.v8::internal::torque::Namespace"*, %"class.v8::internal::torque::Namespace"** %5, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %5, align 8
  %36 = icmp eq %"class.v8::internal::torque::Namespace"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.v8::internal::torque::Namespace"* %35 to void (%"class.v8::internal::torque::Namespace"*)***
  %39 = load void (%"class.v8::internal::torque::Namespace"*)**, void (%"class.v8::internal::torque::Namespace"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %39, i64 1
  %41 = load void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %40, align 8
  call void %41(%"class.v8::internal::torque::Namespace"* nonnull %35) #17
  br label %42

42:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #17
  resume { i8*, i32 } %34
}

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::Namespace"* @_ZNSt3__111make_uniqueIN2v88internal6torque9NamespaceEJRKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i8** dereferenceable(8)) local_unnamed_addr #6 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @_Znwm(i64 192) #19
  %4 = bitcast i8* %3 to %"class.v8::internal::torque::Namespace"*
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = load i8*, i8** %0, align 8
  %7 = tail call i64 @strlen(i8* %6) #17
  %8 = icmp ugt i64 %7, -17
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  invoke void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %10) #18
          to label %11 unwind label %100

11:                                               ; preds = %9
  unreachable

12:                                               ; preds = %1
  %13 = icmp ult i64 %7, 23
  br i1 %13, label %23, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %7, 16
  %16 = and i64 %15, -16
  %17 = invoke i8* @_Znwm(i64 %16) #19
          to label %18 unwind label %100

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = or i64 %16, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %22, align 8
  br label %28

23:                                               ; preds = %12
  %24 = trunc i64 %7 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = icmp eq i64 %7, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %18
  %29 = phi i8* [ %17, %18 ], [ %5, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %6, i64 %7, i1 false) #17
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %5, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %7
  store i8 0, i8* %32, align 1
  %33 = bitcast i8* %3 to %"class.v8::internal::torque::Scope"*
  invoke void @_ZN2v88internal6torque5ScopeC2ENS1_10Declarable4KindE(%"class.v8::internal::torque::Scope"* nonnull %33, i32 0)
          to label %34 unwind label %104

34:                                               ; preds = %30
  %35 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque9NamespaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %3, i64 168
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %34
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %5, i64 24, i1 false)
  br label %99

42:                                               ; preds = %34
  %43 = bitcast i8* %36 to %"class.std::__1::basic_string"*
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %45, i64 %47)
          to label %94 unwind label %48

48:                                               ; preds = %42
  %49 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %50 = getelementptr inbounds i8, i8* %3, i64 167
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %3, i64 144
  %55 = bitcast i8* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #20
  br label %57

57:                                               ; preds = %53, %48
  %58 = getelementptr inbounds i8, i8* %3, i64 88
  %59 = bitcast i8* %58 to %"struct.std::__1::__hash_node_base.89"**
  %60 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.89"* %60, null
  br i1 %61, label %87, label %62

62:                                               ; preds = %57, %84
  %63 = phi %"struct.std::__1::__hash_node_base.89"* [ %65, %84 ], [ %60, %57 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %63, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %63, i64 2
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %63, i64 5
  %68 = bitcast %"struct.std::__1::__hash_node_base.89"* %67 to %"class.v8::internal::torque::Declarable"***
  %69 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %68, align 8
  %70 = icmp eq %"class.v8::internal::torque::Declarable"** %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %62
  %72 = ptrtoint %"class.v8::internal::torque::Declarable"** %69 to i64
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %63, i64 6
  %74 = bitcast %"struct.std::__1::__hash_node_base.89"* %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.v8::internal::torque::Declarable"** %69 to i8*
  tail call void @_ZdlPv(i8* %75) #20
  br label %76

76:                                               ; preds = %71, %62
  %77 = bitcast %"struct.std::__1::__hash_node_base.89"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = bitcast %"struct.std::__1::__hash_node_base.89"* %66 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #20
  br label %84

84:                                               ; preds = %81, %76
  %85 = bitcast %"struct.std::__1::__hash_node_base.89"* %63 to i8*
  tail call void @_ZdlPv(i8* %85) #20
  %86 = icmp eq %"struct.std::__1::__hash_node_base.89"* %65, null
  br i1 %86, label %87, label %62

87:                                               ; preds = %84, %57
  %88 = getelementptr inbounds i8, i8* %3, i64 72
  %89 = bitcast i8* %88 to %"struct.std::__1::__hash_node_base.89"***
  %90 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.89"** %90, null
  br i1 %91, label %107, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.89"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #20
  br label %107

94:                                               ; preds = %42
  %95 = load i8, i8* %38, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %94
  %98 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %98) #20
  br label %99

99:                                               ; preds = %41, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret %"class.v8::internal::torque::Namespace"* %4

100:                                              ; preds = %14, %9
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  %103 = extractvalue { i8*, i32 } %101, 1
  br label %118

104:                                              ; preds = %30
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %107

107:                                              ; preds = %92, %87, %104
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %92 ], [ %37, %87 ], [ %106, %104 ]
  %109 = phi { i8*, i32 } [ %49, %92 ], [ %49, %87 ], [ %105, %104 ]
  %110 = extractvalue { i8*, i32 } %109, 0
  %111 = extractvalue { i8*, i32 } %109, 1
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #20
  br label %118

118:                                              ; preds = %115, %107, %100
  %119 = phi i8* [ %102, %100 ], [ %110, %107 ], [ %110, %115 ]
  %120 = phi i32 [ %103, %100 ], [ %111, %107 ], [ %111, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  call void @_ZdlPv(i8* nonnull %3) #20
  %121 = insertvalue { i8*, i32 } undef, i8* %119, 0
  %122 = insertvalue { i8*, i32 } %121, i32 %120, 1
  resume { i8*, i32 } %122
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque10TypeOracle10GetClassesEv(%"class.std::__1::vector.256"* noalias sret) local_unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = bitcast %"class.std::__1::vector.256"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #17
  %3 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_10TypeOracleEEERPNT_5ScopeEvE3top, align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %3, i64 0, i32 0, i32 4, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::TypeOracle, v8::internal::torque::TypeOracle>::Scope"* %3, i64 0, i32 0, i32 4, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %5, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.v8::internal::torque::ClassType"*** %10 to i64*
  %13 = bitcast %"class.std::__1::vector.256"* %0 to i64*
  %14 = bitcast %"class.v8::internal::torque::ClassType"*** %11 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %0, i64 0, i32 0, i32 0
  br label %17

16:                                               ; preds = %93, %1
  ret void

17:                                               ; preds = %9, %93
  %18 = phi %"class.std::__1::unique_ptr"* [ %5, %9 ], [ %94, %93 ]
  %19 = bitcast %"class.std::__1::unique_ptr"* %18 to %"class.v8::internal::torque::TypeBase"**
  %20 = load %"class.v8::internal::torque::TypeBase"*, %"class.v8::internal::torque::TypeBase"** %19, align 8
  %21 = icmp eq %"class.v8::internal::torque::TypeBase"* %20, null
  br i1 %21, label %93, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::torque::TypeBase", %"class.v8::internal::torque::TypeBase"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %93

26:                                               ; preds = %22
  %27 = ptrtoint %"class.v8::internal::torque::TypeBase"* %20 to i64
  %28 = load %"class.v8::internal::torque::ClassType"**, %"class.v8::internal::torque::ClassType"*** %10, align 8
  %29 = load %"class.v8::internal::torque::ClassType"**, %"class.v8::internal::torque::ClassType"*** %11, align 8
  %30 = icmp ult %"class.v8::internal::torque::ClassType"** %28, %29
  %31 = ptrtoint %"class.v8::internal::torque::ClassType"** %29 to i64
  br i1 %30, label %32, label %36

32:                                               ; preds = %26
  %33 = bitcast %"class.v8::internal::torque::ClassType"** %28 to i64*
  store i64 %27, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::torque::ClassType"*, %"class.v8::internal::torque::ClassType"** %28, i64 1
  %35 = ptrtoint %"class.v8::internal::torque::ClassType"** %34 to i64
  store i64 %35, i64* %12, align 8
  br label %93

36:                                               ; preds = %26
  %37 = ptrtoint %"class.v8::internal::torque::ClassType"** %28 to i64
  %38 = load i64, i64* %13, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::vector.256"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #18
          to label %45 unwind label %86

45:                                               ; preds = %43
  unreachable

46:                                               ; preds = %36
  %47 = sub i64 %31, %38
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 1152921504606846975
  br i1 %49, label %50, label %59

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  invoke void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.7, i64 0, i64 0)) #18
          to label %58 unwind label %86

58:                                               ; preds = %57
  unreachable

59:                                               ; preds = %55, %46
  %60 = phi i64 [ %53, %55 ], [ 2305843009213693951, %46 ]
  %61 = shl i64 %60, 3
  %62 = invoke i8* @_Znwm(i64 %61) #19
          to label %63 unwind label %83

63:                                               ; preds = %59
  %64 = bitcast i8* %62 to %"class.v8::internal::torque::ClassType"**
  br label %65

65:                                               ; preds = %63, %50
  %66 = phi i64 [ %60, %63 ], [ 0, %50 ]
  %67 = phi i8* [ %62, %63 ], [ null, %50 ]
  %68 = phi %"class.v8::internal::torque::ClassType"** [ %64, %63 ], [ null, %50 ]
  %69 = getelementptr inbounds %"class.v8::internal::torque::ClassType"*, %"class.v8::internal::torque::ClassType"** %68, i64 %40
  %70 = getelementptr inbounds %"class.v8::internal::torque::ClassType"*, %"class.v8::internal::torque::ClassType"** %68, i64 %66
  %71 = ptrtoint %"class.v8::internal::torque::ClassType"** %70 to i64
  %72 = bitcast %"class.v8::internal::torque::ClassType"** %69 to i64*
  store i64 %27, i64* %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::torque::ClassType"*, %"class.v8::internal::torque::ClassType"** %69, i64 1
  %74 = ptrtoint %"class.v8::internal::torque::ClassType"** %73 to i64
  %75 = ptrtoint %"class.v8::internal::torque::ClassType"** %68 to i64
  %76 = icmp sgt i64 %39, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %65
  %78 = inttoptr i64 %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %78, i64 %39, i1 false) #17
  br label %79

79:                                               ; preds = %77, %65
  store i64 %75, i64* %13, align 8
  store i64 %74, i64* %12, align 8
  store i64 %71, i64* %14, align 8
  %80 = icmp eq i64 %38, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %38 to i8*
  tail call void @_ZdlPv(i8* %82) #20
  br label %93

83:                                               ; preds = %59
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = inttoptr i64 %38 to %"class.v8::internal::torque::ClassType"**
  br label %89

86:                                               ; preds = %43, %57
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = load %"class.v8::internal::torque::ClassType"**, %"class.v8::internal::torque::ClassType"*** %15, align 8
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi %"class.v8::internal::torque::ClassType"** [ %85, %83 ], [ %88, %86 ]
  %91 = phi { i8*, i32 } [ %84, %83 ], [ %87, %86 ]
  %92 = icmp eq %"class.v8::internal::torque::ClassType"** %90, null
  br i1 %92, label %99, label %96

93:                                               ; preds = %22, %17, %32, %79, %81
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 1
  %95 = icmp eq %"class.std::__1::unique_ptr"* %94, %7
  br i1 %95, label %16, label %17

96:                                               ; preds = %89
  %97 = ptrtoint %"class.v8::internal::torque::ClassType"** %90 to i64
  store i64 %97, i64* %12, align 8
  %98 = bitcast %"class.v8::internal::torque::ClassType"** %90 to i8*
  tail call void @_ZdlPv(i8* %98) #20
  br label %99

99:                                               ; preds = %89, %96
  resume { i8*, i32 } %91
}

; Function Attrs: ssp uwtable
define hidden { i8, %"class.v8::internal::torque::Type"* } @_ZN2v88internal6torque10TypeOracle21MatchReferenceGenericEPKNS1_4TypeEPb(%"class.v8::internal::torque::Type"*, i8*) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque10TypeOracle19GetReferenceGenericEb(i1 zeroext false)
  %4 = tail call { i8, %"class.v8::internal::torque::Type"* } @_ZN2v88internal6torque4Type17MatchUnaryGenericEPKS2_PNS1_11GenericTypeE(%"class.v8::internal::torque::Type"* %0, %"class.v8::internal::torque::GenericType"* %3)
  %5 = extractvalue { i8, %"class.v8::internal::torque::Type"* } %4, 0
  %6 = extractvalue { i8, %"class.v8::internal::torque::Type"* } %4, 1
  %7 = icmp eq i8 %5, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = icmp eq i8* %1, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %8
  store i8 0, i8* %1, align 1
  br label %24

11:                                               ; preds = %2
  %12 = tail call %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque10TypeOracle19GetReferenceGenericEb(i1 zeroext true)
  %13 = tail call { i8, %"class.v8::internal::torque::Type"* } @_ZN2v88internal6torque4Type17MatchUnaryGenericEPKS2_PNS1_11GenericTypeE(%"class.v8::internal::torque::Type"* %0, %"class.v8::internal::torque::GenericType"* %12)
  %14 = extractvalue { i8, %"class.v8::internal::torque::Type"* } %13, 0
  %15 = extractvalue { i8, %"class.v8::internal::torque::Type"* } %13, 1
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = icmp eq i8* %1, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  store i8 1, i8* %1, align 1
  br label %24

20:                                               ; preds = %11
  %21 = ptrtoint %"class.v8::internal::torque::Type"* %15 to i64
  %22 = and i64 %21, -256
  %23 = inttoptr i64 %22 to %"class.v8::internal::torque::Type"*
  br label %24

24:                                               ; preds = %8, %17, %19, %10, %20
  %25 = phi %"class.v8::internal::torque::Type"* [ %6, %8 ], [ %6, %10 ], [ %15, %17 ], [ %15, %19 ], [ %23, %20 ]
  %26 = phi i8 [ %5, %8 ], [ %5, %10 ], [ %14, %17 ], [ %14, %19 ], [ 0, %20 ]
  %27 = insertvalue { i8, %"class.v8::internal::torque::Type"* } undef, i8 %26, 0
  %28 = insertvalue { i8, %"class.v8::internal::torque::Type"* } %27, %"class.v8::internal::torque::Type"* %25, 1
  ret { i8, %"class.v8::internal::torque::Type"* } %28
}

declare { i8, %"class.v8::internal::torque::Type"* } @_ZN2v88internal6torque4Type17MatchUnaryGenericEPKS2_PNS1_11GenericTypeE(%"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::GenericType"*) local_unnamed_addr #5

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #7 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #17
  tail call void @_ZSt9terminatev() #21
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque10TypeOracle19GetReferenceGenericEb(i1 zeroext) local_unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.v8::internal::torque::QualifiedName", align 8
  %3 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"struct.v8::internal::torque::QualifiedName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #17
  %6 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 15, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15, i1 false) #17
  %9 = getelementptr inbounds i8, i8* %6, i64 15
  store i8 0, i8* %9, align 1
  %10 = invoke i8* @_Znwm(i64 24) #19
          to label %11 unwind label %65

11:                                               ; preds = %1
  %12 = ptrtoint i8* %10 to i64
  %13 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %13, i64 24, i1 false)
  %14 = insertelement <2 x i8*> undef, i8* %10, i32 0
  %15 = shufflevector <2 x i8*> %14, <2 x i8*> undef, <2 x i32> zeroinitializer
  %16 = getelementptr i8, <2 x i8*> %15, <2 x i64> <i64 24, i64 24>
  %17 = ptrtoint <2 x i8*> %16 to <2 x i64>
  %18 = select i1 %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)
  %19 = select i1 %0, i64 14, i64 16
  %20 = trunc i64 %19 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 1 %18, i64 %19, i1 false) #17
  %24 = getelementptr inbounds i8, i8* %23, i64 %19
  store i8 0, i8* %24, align 2
  %25 = bitcast %"struct.v8::internal::torque::QualifiedName"* %2 to i64*
  store i64 %12, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %2, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"** %26 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %2, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %23, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #17
  %30 = invoke %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque12Declarations23LookupUniqueGenericTypeERKNS1_13QualifiedNameE(%"struct.v8::internal::torque::QualifiedName"* nonnull dereferenceable(48) %2)
          to label %31 unwind label %69

31:                                               ; preds = %11
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #20
  br label %39

39:                                               ; preds = %36, %31
  %40 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = icmp eq %"class.std::__1::basic_string"* %41, null
  br i1 %42, label %64, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %46 = icmp eq %"class.std::__1::basic_string"* %45, %41
  br i1 %46, label %62, label %47

47:                                               ; preds = %43, %57
  %48 = phi %"class.std::__1::basic_string"* [ %49, %57 ], [ %45, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #20
  br label %57

57:                                               ; preds = %54, %47
  %58 = icmp eq %"class.std::__1::basic_string"* %49, %41
  br i1 %58, label %59, label %47

59:                                               ; preds = %57
  %60 = bitcast %"struct.v8::internal::torque::QualifiedName"* %2 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %43
  %63 = phi i8* [ %61, %59 ], [ %44, %43 ]
  store %"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"** %26, align 8
  call void @_ZdlPv(i8* %63) #20
  br label %64

64:                                               ; preds = %39, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #17
  ret %"class.v8::internal::torque::GenericType"* %30

65:                                               ; preds = %1
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = extractvalue { i8*, i32 } %66, 1
  br label %105

69:                                               ; preds = %11
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  %72 = extractvalue { i8*, i32 } %70, 1
  %73 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #20
  br label %80

80:                                               ; preds = %77, %69
  %81 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %86 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %87 = icmp eq %"class.std::__1::basic_string"* %86, %82
  br i1 %87, label %103, label %88

88:                                               ; preds = %84, %98
  %89 = phi %"class.std::__1::basic_string"* [ %90, %98 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 -1
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #20
  br label %98

98:                                               ; preds = %95, %88
  %99 = icmp eq %"class.std::__1::basic_string"* %90, %82
  br i1 %99, label %100, label %88

100:                                              ; preds = %98
  %101 = bitcast %"struct.v8::internal::torque::QualifiedName"* %2 to i8**
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %100, %84
  %104 = phi i8* [ %102, %100 ], [ %85, %84 ]
  store %"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"** %26, align 8
  call void @_ZdlPv(i8* %104) #20
  br label %105

105:                                              ; preds = %65, %80, %103
  %106 = phi i8* [ %67, %65 ], [ %71, %80 ], [ %71, %103 ]
  %107 = phi i32 [ %68, %65 ], [ %72, %80 ], [ %72, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #17
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  resume { i8*, i32 } %109
}

declare %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque12Declarations23LookupUniqueGenericTypeERKNS1_13QualifiedNameE(%"struct.v8::internal::torque::QualifiedName"* dereferenceable(48)) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: inlinehint noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorEPKc(i8*) local_unnamed_addr #10 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 16) #17
  %3 = bitcast i8* %2 to %"class.std::length_error"*
  invoke void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"* %3, i8* %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast (i8** @_ZTISt12length_error to i8*), i8* bitcast (void (%"class.std::length_error"*)* @_ZNSt12length_errorD1Ev to i8*)) #18
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #17
  resume { i8*, i32 } %6
}

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0
  tail call void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"* %3, i8* %1)
  %4 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt12length_errorD1Ev(%"class.std::length_error"*) unnamed_addr #11

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"*, i8*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv() local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  invoke void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"* %0)
          to label %2 unwind label %38

2:                                                ; preds = %1
  %3 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %13, i64 -1
  %15 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #20
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.311"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %5, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %2, %27
  %30 = bitcast %"class.v8::internal::torque::MessageBuilder"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #20
  br label %37

37:                                               ; preds = %29, %34
  ret void

38:                                               ; preds = %1
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.311"* %41) #17
  %42 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"* %42) #17
  tail call void @__clang_call_terminate(i8* %40) #21
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8ToStringIJRA22_KcmRA18_S3_mRA12_S3_EEENSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEDpOT_(%"class.std::__1::basic_string"* noalias sret, [22 x i8]* dereferenceable(22), i64* dereferenceable(8), [18 x i8]* dereferenceable(18), i64* dereferenceable(8), [12 x i8]* dereferenceable(12)) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %8) #17
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %7, i32 24)
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_ostream.base"* %9 to %"class.std::__1::basic_ostream"*
  %11 = getelementptr inbounds [22 x i8], [22 x i8]* %1, i64 0, i64 0
  %12 = call i64 @strlen(i8* %11) #17
  %13 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* %11, i64 %12)
          to label %14 unwind label %56

14:                                               ; preds = %6
  %15 = load i64, i64* %2, align 8
  %16 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %10, i64 %15)
          to label %17 unwind label %56

17:                                               ; preds = %14
  %18 = getelementptr inbounds [18 x i8], [18 x i8]* %3, i64 0, i64 0
  %19 = call i64 @strlen(i8* %18) #17
  %20 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* %18, i64 %19)
          to label %21 unwind label %56

21:                                               ; preds = %17
  %22 = load i64, i64* %4, align 8
  %23 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %10, i64 %22)
          to label %24 unwind label %56

24:                                               ; preds = %21
  %25 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %26 = call i64 @strlen(i8* %25) #17
  %27 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* %25, i64 %26)
          to label %28 unwind label %56

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %29)
          to label %30 unwind label %58

30:                                               ; preds = %28
  %31 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %32 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  store i64 %31, i64* %32, align 8
  %33 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %34 = inttoptr i64 %31 to i8*
  %35 = getelementptr i8, i8* %34, i64 -24
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %8, i64 %37
  %39 = bitcast i8* %38 to i64*
  store i64 %33, i64* %39, align 8
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %41 = bitcast %"class.std::__1::basic_ostream.base"* %9 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #20
  br label %51

51:                                               ; preds = %30, %48
  %52 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %29, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %52) #17
  %53 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %53, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %54 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_ios.base"* %54 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %55) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %8) #17
  ret void

56:                                               ; preds = %24, %17, %6, %21, %14
  %57 = landingpad { i8*, i32 }
          cleanup
  br label %60

58:                                               ; preds = %28
  %59 = landingpad { i8*, i32 }
          cleanup
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi { i8*, i32 } [ %59, %58 ], [ %57, %56 ]
  %62 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %63 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %65 = inttoptr i64 %62 to i8*
  %66 = getelementptr i8, i8* %65, i64 -24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %8, i64 %68
  %70 = bitcast i8* %69 to i64*
  store i64 %64, i64* %70, align 8
  %71 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %72 = bitcast %"class.std::__1::basic_ostream.base"* %9 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %73, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %60
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #20
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %73, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %84) #17
  %85 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %85, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %86 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_ios.base"* %86 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %87) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %8) #17
  resume { i8*, i32 } %61
}

declare void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"*, i32) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  %5 = getelementptr inbounds %"class.std::__1::basic_ios.base", %"class.std::__1::basic_ios.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::basic_stringstream"* %0 to %"class.std::__1::basic_iostream"*
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %9 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %10 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %8 to i8*
  invoke void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27)
          to label %28 unwind label %59

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %10, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %17, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  invoke void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %30)
          to label %54 unwind label %63

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %58 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false)
  store i32 %1, i32* %57, align 8
  ret void

59:                                               ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  br label %67

63:                                               ; preds = %28
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  tail call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* %7, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  br label %67

67:                                               ; preds = %63, %59
  %68 = phi i8* [ %65, %63 ], [ %61, %59 ]
  %69 = phi i32 [ %66, %63 ], [ %62, %59 ]
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %4) #17
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71
}

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #11

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #5

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  invoke void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
          to label %7 unwind label %65

7:                                                ; preds = %3
  %8 = load i8, i8* %6, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to %"class.std::__1::basic_streambuf"**
  %20 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %19, align 8
  %21 = bitcast i8* %17 to %"class.std::__1::ios_base"*
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 %2
  %26 = getelementptr inbounds i8, i8* %17, i64 144
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %45

30:                                               ; preds = %10
  %31 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  invoke void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %21)
          to label %32 unwind label %72

32:                                               ; preds = %30
  %33 = invoke %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE)
          to label %34 unwind label %41

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::locale::facet"* %33 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %33 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = invoke signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32)
          to label %43 unwind label %41

41:                                               ; preds = %34, %32
  %42 = landingpad { i8*, i32 }
          catch i8* null
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  br label %75

43:                                               ; preds = %34
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  %44 = sext i8 %40 to i32
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %43, %10
  %46 = phi i32 [ %44, %43 ], [ %28, %10 ]
  %47 = trunc i32 %46 to i8
  %48 = and i32 %24, 176
  %49 = icmp eq i32 %48, 32
  %50 = select i1 %49, i8* %25, i8* %1
  %51 = invoke %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %20, i8* %1, i8* %50, i8* %25, %"class.std::__1::ios_base"* dereferenceable(136) %21, i8 signext %47)
          to label %52 unwind label %72

52:                                               ; preds = %45
  %53 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = load i8*, i8** %11, align 8
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %16, i64 %58
  %60 = bitcast i8* %59 to %"class.std::__1::ios_base"*
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 5
  invoke void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %60, i32 %64)
          to label %74 unwind label %70

65:                                               ; preds = %3
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %69 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  br label %78

70:                                               ; preds = %54
  %71 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

72:                                               ; preds = %30, %45
  %73 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

74:                                               ; preds = %7, %54, %52
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  br label %90

75:                                               ; preds = %72, %41, %70
  %76 = phi { i8*, i32 } [ %71, %70 ], [ %73, %72 ], [ %42, %41 ]
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  br label %78

78:                                               ; preds = %75, %65
  %79 = phi i8* [ %16, %75 ], [ %69, %65 ]
  %80 = phi i8** [ %11, %75 ], [ %68, %65 ]
  %81 = phi i8* [ %77, %75 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  %82 = call i8* @__cxa_begin_catch(i8* %81) #17
  %83 = load i8*, i8** %80, align 8
  %84 = getelementptr i8, i8* %83, i64 -24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = bitcast i8* %87 to %"class.std::__1::ios_base"*
  invoke void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"* %88)
          to label %89 unwind label %91

89:                                               ; preds = %78
  call void @__cxa_end_catch()
  br label %90

90:                                               ; preds = %89, %74
  ret %"class.std::__1::basic_ostream"* %0

91:                                               ; preds = %78
  %92 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %93 unwind label %94

93:                                               ; preds = %91
  resume { i8*, i32 } %92

94:                                               ; preds = %91
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #21
  unreachable
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19)
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %86

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %75

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #19
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #17
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = invoke i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17)
          to label %61 unwind label %68

61:                                               ; preds = %46
  %62 = icmp eq i64 %60, %17
  %63 = load i8, i8* %50, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %66) #20
  br label %67

67:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %62, label %75, label %86

68:                                               ; preds = %46
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = load i8, i8* %50, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %73) #20
  br label %74

74:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  resume { i8*, i32 } %69

75:                                               ; preds = %67, %28
  %76 = sub i64 %10, %18
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %80 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %80, i64 12
  %82 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %81, align 8
  %83 = call i64 %82(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %76)
  %84 = icmp eq i64 %83, %76
  br i1 %84, label %85, label %86

85:                                               ; preds = %78, %75
  store i64 0, i64* %13, align 8
  br label %86

86:                                               ; preds = %85, %67, %21, %78, %6
  %87 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %85 ], [ null, %67 ], [ null, %21 ], [ null, %78 ]
  ret %"class.std::__1::basic_streambuf"* %87
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #11

declare void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"*) local_unnamed_addr #5

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #11

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #11

declare void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.311"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %8, %3
  br i1 %9, label %25, label %10

10:                                               ; preds = %5, %20
  %11 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %12, %20 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %11, i64 -1
  %13 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %17, %10
  %21 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %12, %3
  br i1 %21, label %22, label %10

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.311"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ %24, %22 ], [ %6, %5 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %3, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  tail call void @_ZdlPv(i8* %26) #20
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"*) unnamed_addr #15 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #20
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE4findISB_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISC_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::vector.60"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::torque::Type"** %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %2, %8
  %9 = phi i64 [ %16, %8 ], [ 0, %2 ]
  %10 = phi %"class.v8::internal::torque::Type"** [ %17, %8 ], [ %4, %2 ]
  %11 = bitcast %"class.v8::internal::torque::Type"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %12)
  %14 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %13)
  %15 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %9)
  %16 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %14, i64 %15)
  %17 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %10, i64 1
  %18 = icmp eq %"class.v8::internal::torque::Type"** %17, %6
  br i1 %18, label %19, label %8

19:                                               ; preds = %8, %2
  %20 = phi i64 [ 0, %2 ], [ %16, %8 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %129, label %24

24:                                               ; preds = %19
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #17, !range !13
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %129, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %129, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = bitcast %"class.v8::internal::torque::Type"*** %5 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.60"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = inttoptr i64 %50 to %"class.v8::internal::torque::Type"**
  br i1 %26, label %53, label %93

53:                                               ; preds = %45, %85
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %87, %85 ], [ %43, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %20, %57
  br i1 %58, label %66, label %59

59:                                               ; preds = %53
  %60 = icmp ult i64 %57, %22
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = urem i64 %57, %22
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i64 [ %62, %61 ], [ %57, %59 ]
  %65 = icmp eq i64 %64, %35
  br i1 %65, label %85, label %129

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = icmp eq i64 %73, %51
  %75 = inttoptr i64 %72 to %"class.v8::internal::torque::Type"**
  %76 = inttoptr i64 %70 to %"class.v8::internal::torque::Type"**
  br i1 %74, label %77, label %85

77:                                               ; preds = %66
  %78 = icmp eq %"class.v8::internal::torque::Type"** %75, %76
  br i1 %78, label %129, label %79

79:                                               ; preds = %77, %89
  %80 = phi %"class.v8::internal::torque::Type"** [ %91, %89 ], [ %52, %77 ]
  %81 = phi %"class.v8::internal::torque::Type"** [ %90, %89 ], [ %75, %77 ]
  %82 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %81, align 8
  %83 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %80, align 8
  %84 = icmp eq %"class.v8::internal::torque::Type"* %82, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %79, %66, %63
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base"* %87, null
  br i1 %88, label %129, label %53

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %81, i64 1
  %91 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %80, i64 1
  %92 = icmp eq %"class.v8::internal::torque::Type"** %90, %76
  br i1 %92, label %129, label %79

93:                                               ; preds = %45, %125
  %94 = phi %"struct.std::__1::__hash_node_base"* [ %127, %125 ], [ %43, %45 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %94, i64 1
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %20, %97
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = and i64 %97, %46
  %101 = icmp eq i64 %100, %35
  br i1 %101, label %125, label %129

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %94, i64 2
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %94, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = icmp eq i64 %109, %51
  %111 = inttoptr i64 %108 to %"class.v8::internal::torque::Type"**
  %112 = inttoptr i64 %106 to %"class.v8::internal::torque::Type"**
  br i1 %110, label %113, label %125

113:                                              ; preds = %102
  %114 = icmp eq %"class.v8::internal::torque::Type"** %111, %112
  br i1 %114, label %129, label %115

115:                                              ; preds = %113, %121
  %116 = phi %"class.v8::internal::torque::Type"** [ %123, %121 ], [ %52, %113 ]
  %117 = phi %"class.v8::internal::torque::Type"** [ %122, %121 ], [ %111, %113 ]
  %118 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %117, align 8
  %119 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %116, align 8
  %120 = icmp eq %"class.v8::internal::torque::Type"* %118, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %117, i64 1
  %123 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %116, i64 1
  %124 = icmp eq %"class.v8::internal::torque::Type"** %122, %112
  br i1 %124, label %129, label %115

125:                                              ; preds = %115, %102, %99
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %94, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %127, null
  br i1 %128, label %129, label %93

129:                                              ; preds = %113, %125, %99, %121, %77, %85, %63, %89, %41, %19, %34
  %130 = phi %"struct.std::__1::__hash_node_base"* [ null, %34 ], [ null, %19 ], [ null, %41 ], [ %54, %89 ], [ %54, %77 ], [ null, %85 ], [ null, %63 ], [ %94, %121 ], [ %94, %113 ], [ null, %125 ], [ null, %99 ]
  ret %"struct.std::__1::__hash_node_base"* %130
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #5

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #5

declare void @_ZN2v88internal6torque23FindConstraintViolationERKNSt3__16vectorIPKNS1_4TypeENS2_9allocatorIS6_EEEERKNS3_INS1_14TypeConstraintENS7_ISC_EEEE(%"class.v8::base::Optional.118"* sret, %"class.std::__1::vector.60"* dereferenceable(24), %"class.std::__1::vector.48"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN2v88internal6torque18ComputeConstraintsEPNS1_5ScopeERKNSt3__16vectorINS1_16GenericParameterENS4_9allocatorIS6_EEEE(%"class.std::__1::vector.48"* sret, %"class.v8::internal::torque::Scope"*, %"class.std::__1::vector.12"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8ToStringIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEES9_DpOT_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #17
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %3, i32 24)
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_ostream.base"* %5 to %"class.std::__1::basic_ostream"*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* %17, i64 %18)
          to label %20 unwind label %48

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %21)
          to label %22 unwind label %50

22:                                               ; preds = %20
  %23 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %24 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %26 = inttoptr i64 %23 to i8*
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  %32 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %22
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #20
  br label %43

43:                                               ; preds = %22, %40
  %44 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %44) #17
  %45 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %45, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %46 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_ios.base"* %46 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %47) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #17
  ret void

48:                                               ; preds = %2
  %49 = landingpad { i8*, i32 }
          cleanup
  br label %52

50:                                               ; preds = %20
  %51 = landingpad { i8*, i32 }
          cleanup
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi { i8*, i32 } [ %51, %50 ], [ %49, %48 ]
  %54 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %55 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %57 = inttoptr i64 %54 to i8*
  %58 = getelementptr i8, i8* %57, i64 -24
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %4, i64 %60
  %62 = bitcast i8* %61 to i64*
  store i64 %56, i64* %62, align 8
  %63 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %64 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %52, %72
  %76 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %65, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %76) #17
  %77 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %77, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %78 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %79 = bitcast %"class.std::__1::basic_ios.base"* %78 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %79) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #17
  resume { i8*, i32 } %53
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSS_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::vector.60"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.323"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::__1::unique_ptr.324", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %9, align 8
  %11 = icmp eq %"class.v8::internal::torque::Type"** %8, %10
  br i1 %11, label %23, label %12

12:                                               ; preds = %5, %12
  %13 = phi i64 [ %20, %12 ], [ 0, %5 ]
  %14 = phi %"class.v8::internal::torque::Type"** [ %21, %12 ], [ %8, %5 ]
  %15 = bitcast %"class.v8::internal::torque::Type"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %16)
  %18 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %17)
  %19 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %13)
  %20 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %18, i64 %19)
  %21 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %14, i64 1
  %22 = icmp eq %"class.v8::internal::torque::Type"** %21, %10
  br i1 %22, label %23, label %12

23:                                               ; preds = %12, %5
  %24 = phi i64 [ 0, %5 ], [ %20, %12 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %133, label %28

28:                                               ; preds = %23
  %29 = tail call i64 @llvm.ctpop.i64(i64 %26) #17, !range !13
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, -1
  %33 = and i64 %32, %24
  br label %38

34:                                               ; preds = %28
  %35 = icmp ult i64 %24, %26
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %24, %26
  br label %38

38:                                               ; preds = %31, %34, %36
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %24, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %133, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %133, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  %51 = bitcast %"class.v8::internal::torque::Type"*** %9 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.60"* %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = inttoptr i64 %54 to %"class.v8::internal::torque::Type"**
  br i1 %30, label %57, label %97

57:                                               ; preds = %49, %89
  %58 = phi %"struct.std::__1::__hash_node_base"* [ %91, %89 ], [ %47, %49 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %24
  br i1 %62, label %70, label %63

63:                                               ; preds = %57
  %64 = icmp ult i64 %61, %26
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %61, %26
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i64 [ %66, %65 ], [ %61, %63 ]
  %69 = icmp eq i64 %68, %39
  br i1 %69, label %70, label %133

70:                                               ; preds = %67, %57
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 2
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 3
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = icmp eq i64 %77, %55
  %79 = inttoptr i64 %76 to %"class.v8::internal::torque::Type"**
  %80 = inttoptr i64 %74 to %"class.v8::internal::torque::Type"**
  br i1 %78, label %81, label %89

81:                                               ; preds = %70
  %82 = icmp eq %"class.v8::internal::torque::Type"** %79, %80
  br i1 %82, label %248, label %83

83:                                               ; preds = %81, %93
  %84 = phi %"class.v8::internal::torque::Type"** [ %95, %93 ], [ %56, %81 ]
  %85 = phi %"class.v8::internal::torque::Type"** [ %94, %93 ], [ %79, %81 ]
  %86 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %85, align 8
  %87 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %84, align 8
  %88 = icmp eq %"class.v8::internal::torque::Type"* %86, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %83, %70
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base"* %91, null
  br i1 %92, label %133, label %57

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %85, i64 1
  %95 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %84, i64 1
  %96 = icmp eq %"class.v8::internal::torque::Type"** %94, %80
  br i1 %96, label %248, label %83

97:                                               ; preds = %49, %129
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %131, %129 ], [ %47, %49 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 1
  %100 = bitcast %"struct.std::__1::__hash_node_base"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %101, %24
  %103 = and i64 %101, %50
  %104 = icmp eq i64 %103, %39
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %133

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 2
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 3
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = icmp eq i64 %113, %55
  %115 = inttoptr i64 %112 to %"class.v8::internal::torque::Type"**
  %116 = inttoptr i64 %110 to %"class.v8::internal::torque::Type"**
  br i1 %114, label %117, label %129

117:                                              ; preds = %106
  %118 = icmp eq %"class.v8::internal::torque::Type"** %115, %116
  br i1 %118, label %248, label %119

119:                                              ; preds = %117, %125
  %120 = phi %"class.v8::internal::torque::Type"** [ %127, %125 ], [ %56, %117 ]
  %121 = phi %"class.v8::internal::torque::Type"** [ %126, %125 ], [ %115, %117 ]
  %122 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %121, align 8
  %123 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %120, align 8
  %124 = icmp eq %"class.v8::internal::torque::Type"* %122, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %121, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %120, i64 1
  %128 = icmp eq %"class.v8::internal::torque::Type"** %126, %116
  br i1 %128, label %248, label %119

129:                                              ; preds = %119, %106
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"* %131, null
  br i1 %132, label %133, label %97

133:                                              ; preds = %97, %129, %67, %89, %45, %38, %23
  %134 = phi i64 [ %39, %38 ], [ undef, %23 ], [ %39, %45 ], [ %39, %89 ], [ %39, %67 ], [ %39, %129 ], [ %39, %97 ]
  %135 = bitcast %"class.std::__1::unique_ptr.324"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #17
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKSB_EEENSS_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_IS10_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.324"* nonnull sret %6, %"class.std::__1::__hash_table"* %0, i64 %24, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1) %2, %"class.std::__1::tuple"* dereferenceable(8) %3, %"class.std::__1::tuple.323"* dereferenceable(1) %4)
  %136 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 1
  %139 = uitofp i64 %138 to float
  %140 = uitofp i64 %26 to float
  %141 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %142 = load float, float* %141, align 4
  %143 = fmul float %142, %140
  %144 = fcmp olt float %143, %139
  %145 = or i1 %27, %144
  br i1 %145, label %146, label %191

146:                                              ; preds = %133
  %147 = shl i64 %26, 1
  %148 = icmp ult i64 %26, 3
  %149 = call i64 @llvm.ctpop.i64(i64 %26) #17, !range !13
  %150 = icmp ugt i64 %149, 1
  %151 = or i1 %148, %150
  %152 = zext i1 %151 to i64
  %153 = or i64 %147, %152
  %154 = fdiv float %139, %142
  %155 = call float @llvm.ceil.f32(float %154) #17
  %156 = fptoui float %155 to i64
  %157 = icmp ult i64 %153, %156
  %158 = select i1 %157, i64 %156, i64 %153
  invoke void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %158)
          to label %159 unwind label %170

159:                                              ; preds = %146
  %160 = load i64, i64* %25, align 8
  %161 = call i64 @llvm.ctpop.i64(i64 %160) #17, !range !13
  %162 = icmp ugt i64 %161, 1
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = add i64 %160, -1
  %165 = and i64 %164, %24
  br label %191

166:                                              ; preds = %159
  %167 = icmp ult i64 %24, %160
  br i1 %167, label %191, label %168

168:                                              ; preds = %166
  %169 = urem i64 %24, %160
  br label %191

170:                                              ; preds = %146
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %6, i64 0, i32 0, i32 0, i32 0
  %173 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %172, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %172, align 8
  %174 = icmp eq %"struct.std::__1::__hash_node"* %173, null
  br i1 %174, label %190, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %181 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %180, align 8
  %182 = icmp eq %"class.v8::internal::torque::Type"** %181, null
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  %184 = ptrtoint %"class.v8::internal::torque::Type"** %181 to i64
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %186 = bitcast %"class.v8::internal::torque::Type"*** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = bitcast %"class.v8::internal::torque::Type"** %181 to i8*
  call void @_ZdlPv(i8* %187) #20
  br label %188

188:                                              ; preds = %183, %179, %175
  %189 = bitcast %"struct.std::__1::__hash_node"* %173 to i8*
  call void @_ZdlPv(i8* %189) #20
  br label %190

190:                                              ; preds = %170, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #17
  resume { i8*, i32 } %171

191:                                              ; preds = %168, %166, %163, %133
  %192 = phi i64 [ %134, %133 ], [ %165, %163 ], [ %169, %168 ], [ %24, %166 ]
  %193 = phi i64 [ %26, %133 ], [ %160, %163 ], [ %160, %168 ], [ %160, %166 ]
  %194 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %194, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %195, i64 %192
  %197 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base"* %197, null
  br i1 %198, label %199, label %233

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %200, i64 0, i32 0
  %202 = bitcast %"struct.std::__1::__hash_node_base"* %200 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %6, i64 0, i32 0, i32 0, i32 0
  %205 = bitcast %"class.std::__1::unique_ptr.324"* %6 to i64**
  %206 = load i64*, i64** %205, align 8
  store i64 %203, i64* %206, align 8
  %207 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %204, align 8
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %207, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %208, %"struct.std::__1::__hash_node_base"** %201, align 8
  %209 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %194, align 8
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %209, i64 %192
  store %"struct.std::__1::__hash_node_base"* %200, %"struct.std::__1::__hash_node_base"** %210, align 8
  %211 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %204, align 8
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %211, i64 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %212, align 8
  %214 = icmp eq %"struct.std::__1::__hash_node_base"* %213, null
  br i1 %214, label %242, label %215

215:                                              ; preds = %199
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %211, i64 0, i32 0
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %213, i64 1
  %218 = bitcast %"struct.std::__1::__hash_node_base"* %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = call i64 @llvm.ctpop.i64(i64 %193) #17, !range !13
  %221 = icmp ugt i64 %220, 1
  br i1 %221, label %225, label %222

222:                                              ; preds = %215
  %223 = add i64 %193, -1
  %224 = and i64 %219, %223
  br label %229

225:                                              ; preds = %215
  %226 = icmp ult i64 %219, %193
  br i1 %226, label %229, label %227

227:                                              ; preds = %225
  %228 = urem i64 %219, %193
  br label %229

229:                                              ; preds = %222, %225, %227
  %230 = phi i64 [ %224, %222 ], [ %228, %227 ], [ %219, %225 ]
  %231 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %194, align 8
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %231, i64 %230
  store %"struct.std::__1::__hash_node_base"* %216, %"struct.std::__1::__hash_node_base"** %232, align 8
  br label %242

233:                                              ; preds = %191
  %234 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 0, i32 0
  %235 = bitcast %"struct.std::__1::__hash_node_base"* %197 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %6, i64 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.std::__1::unique_ptr.324"* %6 to i64**
  %239 = load i64*, i64** %238, align 8
  store i64 %236, i64* %239, align 8
  %240 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %237, align 8
  %241 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %240, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %241, %"struct.std::__1::__hash_node_base"** %234, align 8
  br label %242

242:                                              ; preds = %233, %229, %199
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %6, i64 0, i32 0, i32 0, i32 0
  %244 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %243, align 8
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %244, i64 0, i32 0
  %246 = load i64, i64* %136, align 8
  %247 = add i64 %246, 1
  store i64 %247, i64* %136, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #17
  br label %248

248:                                              ; preds = %117, %125, %81, %93, %242
  %249 = phi i8 [ 1, %242 ], [ 0, %93 ], [ 0, %81 ], [ 0, %125 ], [ 0, %117 ]
  %250 = phi %"struct.std::__1::__hash_node_base"* [ %245, %242 ], [ %58, %93 ], [ %58, %81 ], [ %98, %125 ], [ %98, %117 ]
  %251 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %250, 0
  %252 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %251, i8 %249, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %252
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKSB_EEENSS_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_IS10_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.324"* noalias sret, %"class.std::__1::__hash_table"*, i64, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.323"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %8 = tail call i8* @_Znwm(i64 48) #19
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.324"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::allocator.35"** %11 to %"class.std::__1::__compressed_pair.32"**
  store %"class.std::__1::__compressed_pair.32"* %7, %"class.std::__1::__compressed_pair.32"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.324"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::vector.60"*, %"class.std::__1::vector.60"** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #17
  %18 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %17, i64 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::torque::Type"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.60"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %66, label %26

26:                                               ; preds = %6
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = bitcast i8* %15 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #18
          to label %30 unwind label %56

30:                                               ; preds = %28
  unreachable

31:                                               ; preds = %26
  %32 = invoke i8* @_Znwm(i64 %23) #19
          to label %33 unwind label %56

33:                                               ; preds = %31
  %34 = bitcast i8* %32 to %"class.v8::internal::torque::Type"**
  %35 = getelementptr inbounds i8, i8* %8, i64 24
  %36 = bitcast i8* %35 to i8**
  store i8* %32, i8** %36, align 8
  %37 = bitcast i8* %15 to i8**
  store i8* %32, i8** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %34, i64 %24
  %39 = getelementptr inbounds i8, i8* %8, i64 32
  %40 = bitcast i8* %39 to %"class.v8::internal::torque::Type"***
  store %"class.v8::internal::torque::Type"** %38, %"class.v8::internal::torque::Type"*** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %17, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %41, align 8
  %43 = load i64, i64* %19, align 8
  %44 = bitcast i8* %35 to i64*
  %45 = ptrtoint i8* %32 to i64
  %46 = ptrtoint %"class.v8::internal::torque::Type"** %42 to i64
  %47 = sub i64 %43, %46
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %33
  %50 = lshr exact i64 %47, 3
  %51 = bitcast %"class.v8::internal::torque::Type"** %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %51, i64 %47, i1 false) #17
  %52 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %34, i64 %50
  %53 = ptrtoint %"class.v8::internal::torque::Type"** %52 to i64
  br label %54

54:                                               ; preds = %49, %33
  %55 = phi i64 [ %53, %49 ], [ %45, %33 ]
  store i64 %55, i64* %44, align 8
  br label %66

56:                                               ; preds = %31, %28
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = bitcast i8* %15 to %"class.v8::internal::torque::Type"***
  %59 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %58, align 8
  %60 = icmp eq %"class.v8::internal::torque::Type"** %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %56
  %62 = ptrtoint %"class.v8::internal::torque::Type"** %59 to i64
  %63 = getelementptr inbounds i8, i8* %8, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast %"class.v8::internal::torque::Type"** %59 to i8*
  tail call void @_ZdlPv(i8* %65) #20
  br label %72

66:                                               ; preds = %54, %6
  %67 = getelementptr inbounds i8, i8* %8, i64 40
  %68 = bitcast i8* %67 to %"class.v8::internal::torque::Type"**
  store %"class.v8::internal::torque::Type"* null, %"class.v8::internal::torque::Type"** %68, align 8
  store i8 1, i8* %13, align 8
  %69 = getelementptr inbounds i8, i8* %8, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %2, i64* %70, align 8
  %71 = bitcast i8* %8 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %71, align 8
  ret void

72:                                               ; preds = %56, %61
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %14, align 8
  tail call void @_ZdlPv(i8* nonnull %8) #20
  resume { i8*, i32 } %57
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !13
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !13
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !13
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_6vectorIPKN2v88internal6torque4TypeENS_9allocatorIS8_EEEES8_EENS_22__unordered_map_hasherISB_SC_NS3_4base4hashISB_EENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SC_SI_SG_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %283, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.7, i64 0, i64 0)) #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #19
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #20
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !14

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %291, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !13
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %291, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %183

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %139, %135 ], [ %75, %77 ]
  %81 = phi i64 [ %137, %135 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %136, %135 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %135, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %134, label %145

97:                                               ; preds = %149, %141
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %143, %141 ], [ %147, %149 ]
  %99 = phi %"struct.std::__1::__hash_node_base"* [ %98, %141 ], [ %80, %149 ]
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = icmp eq i64 %156, %106
  br i1 %107, label %108, label %120

108:                                              ; preds = %97
  %109 = inttoptr i64 %105 to %"class.v8::internal::torque::Type"**
  br label %110

110:                                              ; preds = %116, %108
  %111 = phi %"class.v8::internal::torque::Type"** [ %118, %116 ], [ %109, %108 ]
  %112 = phi %"class.v8::internal::torque::Type"** [ %117, %116 ], [ %157, %108 ]
  %113 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %112, align 8
  %114 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %111, align 8
  %115 = icmp eq %"class.v8::internal::torque::Type"* %113, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %112, i64 1
  %118 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %111, i64 1
  %119 = icmp eq %"class.v8::internal::torque::Type"** %117, %158
  br i1 %119, label %141, label %110

120:                                              ; preds = %141, %97, %169, %178, %110, %160, %145
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %145 ], [ %80, %160 ], [ %99, %110 ], [ %179, %178 ], [ %179, %169 ], [ %99, %97 ], [ %98, %141 ]
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, i64 %90
  %127 = bitcast %"struct.std::__1::__hash_node_base"** %126 to i64**
  %128 = load i64*, i64** %127, align 8
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %122, align 8
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %90
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %133, align 8
  br label %135

134:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %135

135:                                              ; preds = %134, %120, %89
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %80, %134 ], [ %82, %120 ], [ %80, %89 ]
  %137 = phi i64 [ %90, %134 ], [ %81, %120 ], [ %81, %89 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base"* %139, null
  br i1 %140, label %291, label %79

141:                                              ; preds = %116
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %120, label %97

145:                                              ; preds = %92
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %147 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node_base"* %147, null
  br i1 %148, label %120, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %152 = bitcast %"struct.std::__1::__hash_node_base"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = inttoptr i64 %155 to %"class.v8::internal::torque::Type"**
  %158 = inttoptr i64 %153 to %"class.v8::internal::torque::Type"**
  %159 = icmp eq %"class.v8::internal::torque::Type"** %157, %158
  br i1 %159, label %160, label %97

160:                                              ; preds = %149
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %147, i64 2
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %147, i64 3
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"struct.std::__1::__hash_node_base"* %161 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = icmp eq i64 %156, %167
  br i1 %168, label %178, label %120

169:                                              ; preds = %178
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 2
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 3
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"struct.std::__1::__hash_node_base"* %170 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = icmp eq i64 %156, %176
  br i1 %177, label %178, label %120

178:                                              ; preds = %160, %169
  %179 = phi %"struct.std::__1::__hash_node_base"* [ %181, %169 ], [ %147, %160 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"* %181, null
  br i1 %182, label %120, label %169

183:                                              ; preds = %77, %277
  %184 = phi %"struct.std::__1::__hash_node_base"* [ %281, %277 ], [ %75, %77 ]
  %185 = phi i64 [ %279, %277 ], [ %71, %77 ]
  %186 = phi %"struct.std::__1::__hash_node_base"* [ %278, %277 ], [ %38, %77 ]
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %184, i64 1
  %188 = bitcast %"struct.std::__1::__hash_node_base"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, %78
  %191 = icmp eq i64 %190, %185
  br i1 %191, label %277, label %192

192:                                              ; preds = %183
  %193 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %193, i64 %190
  %195 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %194, align 8
  %196 = icmp eq %"struct.std::__1::__hash_node_base"* %195, null
  br i1 %196, label %235, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %184, i64 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %198, align 8
  %200 = icmp eq %"struct.std::__1::__hash_node_base"* %199, null
  br i1 %200, label %263, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %184, i64 2
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %184, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %202 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %205, %207
  %209 = inttoptr i64 %207 to %"class.v8::internal::torque::Type"**
  %210 = inttoptr i64 %205 to %"class.v8::internal::torque::Type"**
  %211 = icmp eq %"class.v8::internal::torque::Type"** %209, %210
  br i1 %211, label %212, label %236

212:                                              ; preds = %201
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %199, i64 2
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %199, i64 3
  %215 = bitcast %"struct.std::__1::__hash_node_base"* %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"struct.std::__1::__hash_node_base"* %213 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = sub i64 %216, %218
  %220 = icmp eq i64 %208, %219
  br i1 %220, label %230, label %263

221:                                              ; preds = %230
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %233, i64 2
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %233, i64 3
  %224 = bitcast %"struct.std::__1::__hash_node_base"* %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"struct.std::__1::__hash_node_base"* %222 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = icmp eq i64 %208, %228
  br i1 %229, label %230, label %263

230:                                              ; preds = %212, %221
  %231 = phi %"struct.std::__1::__hash_node_base"* [ %233, %221 ], [ %199, %212 ]
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %231, i64 0, i32 0
  %233 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %232, align 8
  %234 = icmp eq %"struct.std::__1::__hash_node_base"* %233, null
  br i1 %234, label %263, label %221

235:                                              ; preds = %192
  store %"struct.std::__1::__hash_node_base"* %186, %"struct.std::__1::__hash_node_base"** %194, align 8
  br label %277

236:                                              ; preds = %201, %259
  %237 = phi %"struct.std::__1::__hash_node_base"* [ %261, %259 ], [ %199, %201 ]
  %238 = phi %"struct.std::__1::__hash_node_base"* [ %237, %259 ], [ %184, %201 ]
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %237, i64 2
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %237, i64 3
  %241 = bitcast %"struct.std::__1::__hash_node_base"* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"struct.std::__1::__hash_node_base"* %239 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = sub i64 %242, %244
  %246 = icmp eq i64 %208, %245
  br i1 %246, label %247, label %263

247:                                              ; preds = %236
  %248 = inttoptr i64 %244 to %"class.v8::internal::torque::Type"**
  br label %249

249:                                              ; preds = %255, %247
  %250 = phi %"class.v8::internal::torque::Type"** [ %257, %255 ], [ %248, %247 ]
  %251 = phi %"class.v8::internal::torque::Type"** [ %256, %255 ], [ %209, %247 ]
  %252 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %251, align 8
  %253 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %250, align 8
  %254 = icmp eq %"class.v8::internal::torque::Type"* %252, %253
  br i1 %254, label %255, label %263

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %251, i64 1
  %257 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %250, i64 1
  %258 = icmp eq %"class.v8::internal::torque::Type"** %256, %210
  br i1 %258, label %259, label %249

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %237, i64 0, i32 0
  %261 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %260, align 8
  %262 = icmp eq %"struct.std::__1::__hash_node_base"* %261, null
  br i1 %262, label %263, label %236

263:                                              ; preds = %259, %236, %221, %230, %249, %212, %197
  %264 = phi %"struct.std::__1::__hash_node_base"* [ %184, %197 ], [ %184, %212 ], [ %238, %249 ], [ %231, %230 ], [ %231, %221 ], [ %237, %259 ], [ %238, %236 ]
  %265 = bitcast %"struct.std::__1::__hash_node_base"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i64*
  store i64 %266, i64* %267, align 8
  %268 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %269 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %268, i64 %190
  %270 = bitcast %"struct.std::__1::__hash_node_base"** %269 to i64**
  %271 = load i64*, i64** %270, align 8
  %272 = load i64, i64* %271, align 8
  store i64 %272, i64* %265, align 8
  %273 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %273, i64 %190
  %275 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %274, align 8
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %275, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %184, %"struct.std::__1::__hash_node_base"** %276, align 8
  br label %277

277:                                              ; preds = %183, %263, %235
  %278 = phi %"struct.std::__1::__hash_node_base"* [ %184, %235 ], [ %186, %263 ], [ %184, %183 ]
  %279 = phi i64 [ %190, %235 ], [ %185, %263 ], [ %185, %183 ]
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %278, i64 0, i32 0
  %281 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %280, align 8
  %282 = icmp eq %"struct.std::__1::__hash_node_base"* %281, null
  br i1 %282, label %291, label %183

283:                                              ; preds = %2
  %284 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %285 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %284, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %284, align 8
  %286 = icmp eq %"struct.std::__1::__hash_node_base"** %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = bitcast %"struct.std::__1::__hash_node_base"** %285 to i8*
  tail call void @_ZdlPv(i8* %288) #20
  br label %289

289:                                              ; preds = %283, %287
  %290 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %290, align 8
  br label %291

291:                                              ; preds = %277, %135, %70, %35, %289
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #16

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5ScopeC2ENS1_10Declarable4KindE(%"class.v8::internal::torque::Scope"*, i32) unnamed_addr #2 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.v8::internal::torque::SourcePosition", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque10DeclarableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 3
  %8 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_12CurrentScopeEEERPNT_5ScopeEv()
  %9 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentScope, v8::internal::torque::Scope *>::Scope"** %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::torque::Scope"** %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 4
  %14 = tail call dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv()
  %15 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"struct.v8::internal::torque::SourcePosition"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %16, i64 20, i1 false)
  %18 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 5
  %19 = bitcast %"struct.v8::internal::torque::SourcePosition"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 -1, i64 20, i1 false), !alias.scope !16
  %20 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 6
  store i8 1, i8* %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %21 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.104"* %22 to i32*
  %24 = bitcast %"class.std::__1::unordered_map.84"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 3
  %26 = bitcast %"struct.v8::internal::torque::SourcePosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26)
  %27 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -1, i64 20, i1 false), !alias.scope !19, !noalias !22
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 0, i8* %29, align 1, !noalias !22
  store i8 0, i8* %27, align 8, !noalias !22
  invoke void @_ZN2v88internal6torque23SpecializationRequesterC1ENS1_14SourcePositionEPNS1_5ScopeENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"struct.v8::internal::torque::SpecializationRequester"* %25, %"struct.v8::internal::torque::SourcePosition"* nonnull byval(%"struct.v8::internal::torque::SourcePosition") align 8 %3, %"class.v8::internal::torque::Scope"* null, %"class.std::__1::basic_string"* nonnull %4)
          to label %30 unwind label %36

30:                                               ; preds = %2
  %31 = load i8, i8* %29, align 1, !noalias !22
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !22
  call void @_ZdlPv(i8* %35) #20
  br label %43

36:                                               ; preds = %2
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = load i8, i8* %29, align 1, !noalias !22
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8, !noalias !22
  call void @_ZdlPv(i8* %42) #20
  br label %44

43:                                               ; preds = %33, %30
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27)
  ret void

44:                                               ; preds = %36, %40
  %45 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.89"* %46, null
  br i1 %47, label %73, label %48

48:                                               ; preds = %44, %70
  %49 = phi %"struct.std::__1::__hash_node_base.89"* [ %51, %70 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %49, i64 2
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %49, i64 5
  %54 = bitcast %"struct.std::__1::__hash_node_base.89"* %53 to %"class.v8::internal::torque::Declarable"***
  %55 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %54, align 8
  %56 = icmp eq %"class.v8::internal::torque::Declarable"** %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %48
  %58 = ptrtoint %"class.v8::internal::torque::Declarable"** %55 to i64
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %49, i64 6
  %60 = bitcast %"struct.std::__1::__hash_node_base.89"* %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.v8::internal::torque::Declarable"** %55 to i8*
  call void @_ZdlPv(i8* %61) #20
  br label %62

62:                                               ; preds = %57, %48
  %63 = bitcast %"struct.std::__1::__hash_node_base.89"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = bitcast %"struct.std::__1::__hash_node_base.89"* %52 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #20
  br label %70

70:                                               ; preds = %67, %62
  %71 = bitcast %"struct.std::__1::__hash_node_base.89"* %49 to i8*
  call void @_ZdlPv(i8* %71) #20
  %72 = icmp eq %"struct.std::__1::__hash_node_base.89"* %51, null
  br i1 %72, label %73, label %48

73:                                               ; preds = %70, %44
  %74 = getelementptr inbounds %"class.std::__1::unordered_map.84", %"class.std::__1::unordered_map.84"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %74, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.89"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.std::__1::__hash_node_base.89"** %75 to i8*
  call void @_ZdlPv(i8* %78) #20
  br label %79

79:                                               ; preds = %73, %77
  resume { i8*, i32 } %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque9NamespaceD2Ev(%"class.v8::internal::torque::Namespace"*) unnamed_addr #15 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque9NamespaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 3, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.89"* %22, null
  br i1 %23, label %49, label %24

24:                                               ; preds = %20, %46
  %25 = phi %"struct.std::__1::__hash_node_base.89"* [ %27, %46 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 2
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 5
  %30 = bitcast %"struct.std::__1::__hash_node_base.89"* %29 to %"class.v8::internal::torque::Declarable"***
  %31 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %30, align 8
  %32 = icmp eq %"class.v8::internal::torque::Declarable"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = ptrtoint %"class.v8::internal::torque::Declarable"** %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 6
  %36 = bitcast %"struct.std::__1::__hash_node_base.89"* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.v8::internal::torque::Declarable"** %31 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %33, %24
  %39 = bitcast %"struct.std::__1::__hash_node_base.89"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = bitcast %"struct.std::__1::__hash_node_base.89"* %28 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %43, %38
  %47 = bitcast %"struct.std::__1::__hash_node_base.89"* %25 to i8*
  tail call void @_ZdlPv(i8* %47) #20
  %48 = icmp eq %"struct.std::__1::__hash_node_base.89"* %27, null
  br i1 %48, label %49, label %24

49:                                               ; preds = %46, %20
  %50 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.89"** %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.std::__1::__hash_node_base.89"** %51 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque9NamespaceD0Ev(%"class.v8::internal::torque::Namespace"*) unnamed_addr #15 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque9NamespaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %8, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 3, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #20
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.89"* %22, null
  br i1 %23, label %49, label %24

24:                                               ; preds = %20, %46
  %25 = phi %"struct.std::__1::__hash_node_base.89"* [ %27, %46 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 2
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 5
  %30 = bitcast %"struct.std::__1::__hash_node_base.89"* %29 to %"class.v8::internal::torque::Declarable"***
  %31 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %30, align 8
  %32 = icmp eq %"class.v8::internal::torque::Declarable"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = ptrtoint %"class.v8::internal::torque::Declarable"** %31 to i64
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %25, i64 6
  %36 = bitcast %"struct.std::__1::__hash_node_base.89"* %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.v8::internal::torque::Declarable"** %31 to i8*
  tail call void @_ZdlPv(i8* %37) #20
  br label %38

38:                                               ; preds = %33, %24
  %39 = bitcast %"struct.std::__1::__hash_node_base.89"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = bitcast %"struct.std::__1::__hash_node_base.89"* %28 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %43, %38
  %47 = bitcast %"struct.std::__1::__hash_node_base.89"* %25 to i8*
  tail call void @_ZdlPv(i8* %47) #20
  %48 = icmp eq %"struct.std::__1::__hash_node_base.89"* %27, null
  br i1 %48, label %49, label %24

49:                                               ; preds = %46, %20
  %50 = getelementptr inbounds %"class.v8::internal::torque::Namespace", %"class.v8::internal::torque::Namespace"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.89"** %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.std::__1::__hash_node_base.89"** %51 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %49, %53
  %56 = bitcast %"class.v8::internal::torque::Namespace"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal6torque9Namespace9type_nameEv(%"class.v8::internal::torque::Namespace"*) unnamed_addr #14 comdat align 2 {
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5ScopeD2Ev(%"class.v8::internal::torque::Scope"*) unnamed_addr #15 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 3, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.89"* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11, %37
  %16 = phi %"struct.std::__1::__hash_node_base.89"* [ %18, %37 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 2
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 5
  %21 = bitcast %"struct.std::__1::__hash_node_base.89"* %20 to %"class.v8::internal::torque::Declarable"***
  %22 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %21, align 8
  %23 = icmp eq %"class.v8::internal::torque::Declarable"** %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %15
  %25 = ptrtoint %"class.v8::internal::torque::Declarable"** %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 6
  %27 = bitcast %"struct.std::__1::__hash_node_base.89"* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::torque::Declarable"** %22 to i8*
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %24, %15
  %30 = bitcast %"struct.std::__1::__hash_node_base.89"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = bitcast %"struct.std::__1::__hash_node_base.89"* %19 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #20
  br label %37

37:                                               ; preds = %34, %29
  %38 = bitcast %"struct.std::__1::__hash_node_base.89"* %16 to i8*
  tail call void @_ZdlPv(i8* %38) #20
  %39 = icmp eq %"struct.std::__1::__hash_node_base.89"* %18, null
  br i1 %39, label %40, label %15

40:                                               ; preds = %37, %11
  %41 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.89"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.89"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %40, %44
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque5ScopeD0Ev(%"class.v8::internal::torque::Scope"*) unnamed_addr #15 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal6torque5ScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 3, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #20
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.89"* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11, %37
  %16 = phi %"struct.std::__1::__hash_node_base.89"* [ %18, %37 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.89"*, %"struct.std::__1::__hash_node_base.89"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 2
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 5
  %21 = bitcast %"struct.std::__1::__hash_node_base.89"* %20 to %"class.v8::internal::torque::Declarable"***
  %22 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %21, align 8
  %23 = icmp eq %"class.v8::internal::torque::Declarable"** %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %15
  %25 = ptrtoint %"class.v8::internal::torque::Declarable"** %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.89", %"struct.std::__1::__hash_node_base.89"* %16, i64 6
  %27 = bitcast %"struct.std::__1::__hash_node_base.89"* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::torque::Declarable"** %22 to i8*
  tail call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %24, %15
  %30 = bitcast %"struct.std::__1::__hash_node_base.89"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = bitcast %"struct.std::__1::__hash_node_base.89"* %19 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #20
  br label %37

37:                                               ; preds = %34, %29
  %38 = bitcast %"struct.std::__1::__hash_node_base.89"* %16 to i8*
  tail call void @_ZdlPv(i8* %38) #20
  %39 = icmp eq %"struct.std::__1::__hash_node_base.89"* %18, null
  br i1 %39, label %40, label %15

40:                                               ; preds = %37, %11
  %41 = getelementptr inbounds %"class.v8::internal::torque::Scope", %"class.v8::internal::torque::Scope"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.89"**, %"struct.std::__1::__hash_node_base.89"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.89"** null, %"struct.std::__1::__hash_node_base.89"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.89"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.89"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #20
  br label %46

46:                                               ; preds = %40, %44
  %47 = bitcast %"class.v8::internal::torque::Scope"* %0 to i8*
  tail call void @_ZdlPv(i8* %47) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal6torque5Scope9type_nameEv(%"class.v8::internal::torque::Scope"*) unnamed_addr #14 comdat align 2 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque10DeclarableD2Ev(%"class.v8::internal::torque::Declarable"*) unnamed_addr #14 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque10DeclarableD0Ev(%"class.v8::internal::torque::Declarable"*) unnamed_addr #14 comdat align 2 {
  %2 = bitcast %"class.v8::internal::torque::Declarable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal6torque10Declarable9type_nameEv(%"class.v8::internal::torque::Declarable"*) unnamed_addr #14 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)
}

declare dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::CurrentSourcePosition, v8::internal::torque::SourcePosition>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_21CurrentSourcePositionEEERPNT_5ScopeEv() local_unnamed_addr #5

declare void @_ZN2v88internal6torque23SpecializationRequesterC1ENS1_14SourcePositionEPNS1_5ScopeENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"struct.v8::internal::torque::SpecializationRequester"*, %"struct.v8::internal::torque::SourcePosition"* byval(%"struct.v8::internal::torque::SourcePosition") align 8, %"class.v8::internal::torque::Scope"*, %"class.std::__1::basic_string"*) unnamed_addr #5

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal6torque9NamespaceENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.243"*, %"class.std::__1::unique_ptr.245"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.245"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.243"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.243"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.245"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.7, i64 0, i64 0)) #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.245"*
  br label %34

34:                                               ; preds = %29, %21
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.245"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.245"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.245"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.245"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.245"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.245"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.245"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::internal::torque::Namespace"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.245"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.245"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.245"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.245"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !25

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.245"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.245"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.245"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.245"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.245"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.245"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.245"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.245"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.245"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.245"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.245"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.245"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.245"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.245"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.245"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.245"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.245"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.245"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.245"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.245"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.245"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.245"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.245"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.245"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.245"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.245"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.245"*
  %138 = icmp eq %"class.std::__1::unique_ptr.245"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.245"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.245"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::internal::torque::Namespace"*, %"class.v8::internal::torque::Namespace"** %142, align 8
  store %"class.v8::internal::torque::Namespace"* null, %"class.v8::internal::torque::Namespace"** %142, align 8
  %144 = icmp eq %"class.v8::internal::torque::Namespace"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8::internal::torque::Namespace"* %143 to void (%"class.v8::internal::torque::Namespace"*)***
  %147 = load void (%"class.v8::internal::torque::Namespace"*)**, void (%"class.v8::internal::torque::Namespace"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %147, i64 1
  %149 = load void (%"class.v8::internal::torque::Namespace"*)*, void (%"class.v8::internal::torque::Namespace"*)** %148, align 8
  tail call void %149(%"class.v8::internal::torque::Namespace"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.245"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #20
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #16

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind }
attributes #18 = { noreturn }
attributes #19 = { builtin }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN2v88internal6torqueL7MessageIJRA22_KcmRA18_S3_mRA12_S3_EEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN2v88internal6torqueL7MessageIJRA22_KcmRA18_S3_mRA12_S3_EEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_"}
!6 = distinct !{!6, !7, !"_ZN2v88internal6torque5ErrorIJRA22_KcmRA18_S3_mRA12_S3_EEENS1_14MessageBuilderEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN2v88internal6torque5ErrorIJRA22_KcmRA18_S3_mRA12_S3_EEENS1_14MessageBuilderEDpOT_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN2v88internal6torqueL7MessageIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal6torqueL7MessageIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_"}
!11 = distinct !{!11, !12, !"_ZN2v88internal6torque5ErrorIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZN2v88internal6torque5ErrorIJRNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS1_14MessageBuilderEDpOT_"}
!13 = !{i64 0, i64 65}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN2v88internal6torque14SourcePosition7InvalidEv: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal6torque14SourcePosition7InvalidEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v88internal6torque14SourcePosition7InvalidEv: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal6torque14SourcePosition7InvalidEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2v88internal6torque23SpecializationRequester4NoneEv: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal6torque23SpecializationRequester4NoneEv"}
!25 = distinct !{!25, !15}
