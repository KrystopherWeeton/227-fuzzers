; ModuleID = '../../third_party/blink/renderer/core/timing/measure_memory/measure_memory_controller.cc'
source_filename = "../../third_party/blink/renderer/core/timing/measure_memory/measure_memory_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.163", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.108", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist.39"* }
%"class.blink::Worklist.39" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.88", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.102", [4 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { float }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.111", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.39"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.167" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.384" }
%"struct.std::__1::atomic.384" = type { %"struct.std::__1::__atomic_base.385" }
%"struct.std::__1::__atomic_base.385" = type { %"struct.std::__1::__atomic_base.386" }
%"struct.std::__1::__atomic_base.386" = type { %"struct.std::__1::__cxx_atomic_impl.387" }
%"struct.std::__1::__cxx_atomic_impl.387" = type { %"struct.std::__1::__cxx_atomic_base_impl.388" }
%"struct.std::__1::__cxx_atomic_base_impl.388" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MeasureMemoryController" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::Context" = type { i8 }
%"class.v8::Promise::Resolver" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::TraceWrapperV8Reference.237" = type { %"class.v8::TracedReference.238" }
%"class.v8::TracedReference.238" = type { %"class.v8::BasicTracedReference.239" }
%"class.v8::BasicTracedReference.239" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.240", %"class.blink::ScriptValue" }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.237", %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.182" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.182" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.182" = type { %"class.v8::TracedReference.183" }
%"class.v8::TracedReference.183" = type { %"class.v8::BasicTracedReference.184" }
%"class.v8::BasicTracedReference.184" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.174, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%class.scoped_refptr.174 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.188", %"class.blink::HeapHashMap.197", %"class.std::__1::unique_ptr.207", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.219", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.222" }
%"class.blink::HeapHashMap.188" = type { %"class.WTF::HashMap.191" }
%"class.WTF::HashMap.191" = type { %"class.WTF::HashTable.192" }
%"class.WTF::HashTable.192" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.182" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.197" = type { %"class.WTF::HashMap.200" }
%"class.WTF::HashMap.200" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"struct.WTF::KeyValuePair.203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.203" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.204" }
%"class.blink::TraceWrapperV8Reference.204" = type { %"class.v8::TracedReference.205" }
%"class.v8::TracedReference.205" = type { %"class.v8::BasicTracedReference.206" }
%"class.v8::BasicTracedReference.206" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.210" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.219" = type { %"class.v8::Persistent.220" }
%"class.v8::Persistent.220" = type { %"class.v8::PersistentBase.221" }
%"class.v8::PersistentBase.221" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.222" = type { %"class.WTF::HashMap.225" }
%"class.WTF::HashMap.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"struct.WTF::KeyValuePair.228"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.228" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.229" }
%"class.blink::Persistent.229" = type { %"class.blink::PersistentBase.230" }
%"class.blink::PersistentBase.230" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.237" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.232" }
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i32 }
%"class.base::OnceCallback.2429" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.384" }
%"class.blink::Persistent.2430" = type { %"class.blink::PersistentBase.2431" }
%"class.blink::PersistentBase.2431" = type { %"class.blink::MeasureMemoryController"*, %"class.blink::PersistentNodePtr" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.309", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.319", %"class.blink::Member.321", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.330", %"class.blink::Member.471", %"class.blink::Member.473", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.243" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.243" = type { %"class.WTF::HashMap.246" }
%"class.WTF::HashMap.246" = type { %"class.WTF::HashTable.247" }
%"class.WTF::HashTable.247" = type <{ %"struct.WTF::KeyValuePair.249"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.249" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.255" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.252" }
%"class.WTF::HashTable.252" = type <{ %"class.blink::WeakMember.254"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.254" = type opaque
%"class.blink::Supplementable.255" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.256" }
%"class.blink::HeapHashMap.256" = type { %"class.WTF::HashMap.259" }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.262" = type { i8*, %"class.blink::Member.2327" }
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2329" }
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.263, %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.297", %"class.blink::Member.303", i32, [4 x i8], %"class.WTF::HashSet.305", i32, i32 }
%class.scoped_refptr.263 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.264", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.266 }
%"class.WTF::RefCounted.264" = type { %"class.base::RefCounted.265" }
%"class.base::RefCounted.265" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.266 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.284", %"class.std::__1::map.293"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.272 }
%union.anon.272 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::map.293" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.313" }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.blink::Member.316"*, i32, i32 }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.323", i32, i32 }
%"class.blink::HeapHashMap.323" = type { %"class.WTF::HashMap.326" }
%"class.WTF::HashMap.326" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"struct.WTF::KeyValuePair.329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.329" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.333" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.336" }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"class.mojo::StructPtr.339"*, i32, i32 }
%"class.mojo::StructPtr.339" = type { %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.343", %"class.WTF::HashMap.350", %"class.WTF::HashMap.355", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.360", i32, %"class.mojo::StructPtr.365", %"class.WTF::Vector.360" }
%"class.mojo::StructPtr.343" = type { %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.359"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.359" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.365" = type { %"class.std::__1::unique_ptr.366" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.360", i8, i8, [6 x i8] }>
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.462" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.380", i32 }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.389", %"class.absl::optional.394", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.415", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.437", %"class.std::__1::map.448", i64, %"class.base::OnceCallback.408", %"class.base::OnceCallback.457", i8, %class.scoped_refptr.399, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.458" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.389" = type { %"class.absl::optional_internal::optional_data.390" }
%"class.absl::optional_internal::optional_data.390" = type { %"class.absl::optional_internal::optional_data_base.391" }
%"class.absl::optional_internal::optional_data_base.391" = type { %"class.absl::optional_internal::optional_data_dtor_base.392" }
%"class.absl::optional_internal::optional_data_dtor_base.392" = type { i8, %union.anon.393 }
%union.anon.393 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.394" = type { %"class.absl::optional_internal::optional_data.395" }
%"class.absl::optional_internal::optional_data.395" = type { %"class.absl::optional_internal::optional_data_base.396" }
%"class.absl::optional_internal::optional_data_base.396" = type { %"class.absl::optional_internal::optional_data_dtor_base.397" }
%"class.absl::optional_internal::optional_data_dtor_base.397" = type { i8, %union.anon.398 }
%union.anon.398 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.408" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.399, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.402", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.402" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.403" }
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.413 }
%class.scoped_refptr.413 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.485", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.399, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.232", [4 x i8] }>
%"class.base::RefCountedThreadSafe.485" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.414 }
%class.scoped_refptr.414 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.418", %class.scoped_refptr.419 }
%"class.base::RepeatingCallback.418" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.419 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.420", [4 x i8] }>
%"class.base::RefCountedThreadSafe.420" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.430", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.436" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.436" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.437" = type { %"class.std::__1::__tree.438" }
%"class.std::__1::__tree.438" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.439", %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::map.448" = type { %"class.std::__1::__tree.449" }
%"class.std::__1::__tree.449" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.base::OnceCallback.408" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.457" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.399 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.400" }>
%"class.base::RefCountedThreadSafe.400" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.408" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.458" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.321", i8, [7 x i8], %"class.WTF::Vector.336", %"class.blink::HeapVector.477", i8, [7 x i8], %"class.WTF::HashSet.305", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.477" = type { %"class.WTF::Vector.480" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.blink::Member.483"*, i32, i32 }
%"class.blink::Member.483" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.621", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.629", %"class.blink::Member.631", %"class.blink::Member.633", i8, %"class.blink::Member.635", %"class.blink::Member.637", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.639", %"class.blink::Member.641", %"class.blink::Member.643", %"class.blink::Member.645", %"class.blink::Member.647", %"class.blink::Member.651", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.360", %"class.blink::Member.653", %class.scoped_refptr.655, %"class.blink::HeapHashSet.717", %"class.blink::Member.724", %"class.blink::HeapHashMap.737", %"class.std::__1::unique_ptr.744", %"class.blink::Member.756", %"class.blink::Member.785", %"class.blink::Member.795", %"class.blink::Member.801", %"class.WTF::Vector.804", %"class.util::TokenType.519", %"class.WTF::HashSet.809", %"class.WTF::Deque.813" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", i8, %"class.WTF::Vector.516" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.501" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.489" }
%"class.blink::HeapVector.489" = type { %"class.WTF::Vector.492" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494", [32 x i8] }
%"class.WTF::VectorBufferBase.494" = type { %"struct.std::__1::pair.495"*, i32, i32 }
%"struct.std::__1::pair.495" = type { %"class.WTF::AtomicString", %"class.blink::Member.496" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::HeapVector.498"* }
%"class.blink::HeapVector.498" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.WTF::Vector.504"* }
%"class.WTF::Vector.504" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, i32, i8, i32, %"class.blink::Member.925", %"class.blink::Member.510", %"class.blink::FrameLifecycle", %"class.blink::Member.508", %"class.blink::Member.508", %"class.blink::Member.508", %"class.blink::Member.508", %"class.blink::Member.508", %"class.blink::Member.508", %"class.blink::Member.762", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.935", i8, %"class.base::UnguessableToken", %"class.absl::optional.937", %"class.absl::optional.942", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.508", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.955", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.963", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.971", %"class.blink::FrameLoader", %"class.blink::Member.998", %"class.blink::Member.835", %"class.blink::Member.1000", %"class.blink::Member.1002", %"class.blink::Member.1004", %"class.blink::Member.1006", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1008", %class.scoped_refptr.1010, %"class.blink::Member.1011", %"class.blink::Member.1013", %"class.blink::Member.1015", %"class.blink::Member.1017", %"class.blink::Member.1019", %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1025", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1028", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1049", %"class.std::__1::unique_ptr.1050", %"class.absl::optional.942", i32, [4 x i8], %"class.std::__1::unique_ptr.1056", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1064", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1069", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1074", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.mojo::StructPtr.1086", %"class.blink::Member.1095", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1097", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.955" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.956" }
%"class.blink::HeapHashMap.956" = type { %"class.WTF::HashMap.959" }
%"class.WTF::HashMap.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"struct.WTF::KeyValuePair.962"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.962" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.747", %"class.base::WeakPtrFactory.752" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.751" = type opaque
%"class.base::WeakPtrFactory.752" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.969" }
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.760" }
%"class.blink::WeakMember.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2339", i64, %"class.std::__1::map.2340", i8*, i64, %"class.base::WeakPtrFactory.2349" }
%"class.base::RepeatingCallback.2339" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2340" = type { %"class.std::__1::__tree.2341" }
%"class.std::__1::__tree.2341" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2342", %"class.std::__1::__compressed_pair.2346" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.2346" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.base::WeakPtrFactory.2349" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.971" = type { %"class.WTF::HashSet.974" }
%"class.WTF::HashSet.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %"class.blink::WeakMember.977"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.977" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.762", %"class.blink::Member.978", %"class.blink::Member.980", %"class.std::__1::unique_ptr.982", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.994" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.985" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.231 }
%"class.WTF::HashSet.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1104", %"class.blink::Member.762", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1112", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1117", %"class.blink::Member.1119", %"class.blink::Member.1119", %"class.std::__1::unique_ptr.1122", i32, [4 x i8], %"class.WTF::HashSet.1125", %"class.blink::Member.1132", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1134", %"class.blink::HeapHashSet.1141", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1149", i8, %"class.blink::Member.1155", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1167", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1181", i8, %"class.std::__1::unique_ptr.1187", %"class.std::__1::unique_ptr.1304", %"class.WTF::Vector.1310", i32, %class.scoped_refptr.1315, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1316", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::HeapHashSet.1322", %"class.blink::HeapHashSet.1329", %"class.std::__1::unique_ptr.1336", %"class.std::__1::unique_ptr.1343", %"class.WTF::Vector.1354" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1104" = type { %"class.WTF::HashTable.1105" }
%"class.WTF::HashTable.1105" = type <{ %class.scoped_refptr.1108*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1108 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1111", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1109, %"class.base::WeakPtrFactory.1110" }
%class.scoped_refptr.1109 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1110" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1111" = type { %"class.blink::MemberBase.999" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1112" = type { %"class.absl::optional_internal::optional_data.1113" }
%"class.absl::optional_internal::optional_data.1113" = type { %"class.absl::optional_internal::optional_data_base.1114" }
%"class.absl::optional_internal::optional_data_base.1114" = type { %"class.absl::optional_internal::optional_data_dtor_base.1115" }
%"class.absl::optional_internal::optional_data_dtor_base.1115" = type { i8, %union.anon.1116 }
%union.anon.1116 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::HeapHashSet.1121"* }
%"class.blink::HeapHashSet.1121" = type opaque
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.WTF::HashSet.1125"* }
%"class.WTF::HashSet.1125" = type { %"class.WTF::HashTable.1126" }
%"class.WTF::HashTable.1126" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1134" = type { %"class.WTF::HashSet.1137" }
%"class.WTF::HashSet.1137" = type { %"class.WTF::HashTable.1138" }
%"class.WTF::HashTable.1138" = type <{ %"class.blink::Member.1140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1140" = type opaque
%"class.blink::HeapHashSet.1141" = type { %"class.WTF::HashSet.1144" }
%"class.WTF::HashSet.1144" = type { %"class.WTF::HashTable.1145" }
%"class.WTF::HashTable.1145" = type <{ %"class.blink::Member.1147"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1382", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1393", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.835" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1384", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1389", %"class.blink::Member.1391", %"class.WTF::Vector.1354", i16, %class.scoped_refptr.1109 }
%"class.blink::ThreadState::PrefinalizerRegistration.1384" = type { i8 }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1393" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1394", { i64, i64 } }
%"class.blink::WeakMember.1394" = type { %"class.blink::MemberBase.1148" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1159", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1163", i32, i32 }
%"class.WTF::Vector.1163" = type { %"class.WTF::VectorBuffer.1164" }
%"class.WTF::VectorBuffer.1164" = type { %"class.WTF::VectorBufferBase.1165" }
%"class.WTF::VectorBufferBase.1165" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1167" = type { %"class.WTF::LinkedHashSet.1170" }
%"class.WTF::LinkedHashSet.1170" = type { %"class.WTF::HashMap.1171", %"class.WTF::VectorBackedLinkedList.1175" }
%"class.WTF::HashMap.1171" = type { %"class.WTF::HashTable.1172" }
%"class.WTF::HashTable.1172" = type <{ %"struct.WTF::KeyValuePair.1174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1174" = type opaque
%"class.WTF::VectorBackedLinkedList.1175" = type { %"class.WTF::Vector.1176", i32, i32 }
%"class.WTF::Vector.1176" = type { %"class.WTF::VectorBuffer.1177" }
%"class.WTF::VectorBuffer.1177" = type { %"class.WTF::VectorBufferBase.1178" }
%"class.WTF::VectorBufferBase.1178" = type { %"class.WTF::VectorBackedLinkedListNode.1179"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1179" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1187" = type { %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1190, %class.scoped_refptr.1190, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1281", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1286", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1190 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1191", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1198" }
%"class.WTF::RefCounted.1191" = type { %"class.base::RefCounted.1192" }
%"class.base::RefCounted.1192" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1193", i32, [4 x i8] }>
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200" }
%"class.WTF::VectorBufferBase.1200" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1204", %"class.std::__1::unique_ptr.1253", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1201, %class.scoped_refptr.1202, %class.scoped_refptr.1203 }
%class.scoped_refptr.1201 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1217", i8, i8, %class.scoped_refptr.1201, i32, i32 }
%"class.WTF::RefCounted.1217" = type { %"class.base::RefCounted.1218" }
%"class.base::RefCounted.1218" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1202 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1377" }
%"class.blink::PaintPropertyNode.1377" = type { %"class.WTF::RefCounted.1378", i8, i8, %class.scoped_refptr.1202, i32, i32 }
%"class.WTF::RefCounted.1378" = type { %"class.base::RefCounted.1379" }
%"class.base::RefCounted.1379" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1203 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1374" }
%"class.blink::PaintPropertyNode.1374" = type { %"class.WTF::RefCounted.1375", i8, i8, %class.scoped_refptr.1203, i32, i32 }
%"class.WTF::RefCounted.1375" = type { %"class.base::RefCounted.1376" }
%"class.base::RefCounted.1376" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1207", %"class.WTF::Vector.1212", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1232" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1225, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1226", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1219" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1225 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1359", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1359" = type { %"class.WTF::RefCounted.1360", i8, i8, %class.scoped_refptr.1225, i32, i32 }
%"class.WTF::RefCounted.1360" = type { %"class.base::RefCounted.1361" }
%"class.base::RefCounted.1361" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1362" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1362" = type { %"class.absl::optional_internal::optional_data.1363" }
%"class.absl::optional_internal::optional_data.1363" = type { %"class.absl::optional_internal::optional_data_base.1364" }
%"class.absl::optional_internal::optional_data_base.1364" = type { %"class.absl::optional_internal::optional_data_dtor_base.1365" }
%"class.absl::optional_internal::optional_data_dtor_base.1365" = type { i8, %union.anon.1366 }
%union.anon.1366 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1367", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1367" = type { %"class.std::__1::__vector_base.1368" }
%"class.std::__1::__vector_base.1368" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1369" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1226" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1232" = type { %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1235", %"class.std::__1::unique_ptr.1241", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1256", %"class.absl::optional.1256" }
%"class.absl::optional.1256" = type { %"class.absl::optional_internal::optional_data.1257" }
%"class.absl::optional_internal::optional_data.1257" = type { %"class.absl::optional_internal::optional_data_base.1258" }
%"class.absl::optional_internal::optional_data_base.1258" = type { %"class.absl::optional_internal::optional_data_dtor_base.1259" }
%"class.absl::optional_internal::optional_data_dtor_base.1259" = type { i8, [3 x i8], %union.anon.1260 }
%union.anon.1260 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1198"*, %"class.absl::optional.1266", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1266" = type { %"class.absl::optional_internal::optional_data.1267" }
%"class.absl::optional_internal::optional_data.1267" = type { %"class.absl::optional_internal::optional_data_base.1268" }
%"class.absl::optional_internal::optional_data_base.1268" = type { %"class.absl::optional_internal::optional_data_dtor_base.1269" }
%"class.absl::optional_internal::optional_data_dtor_base.1269" = type { i8, %union.anon.1270 }
%union.anon.1270 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1271", %"class.WTF::Vector.1276" }
%"class.WTF::Vector.1271" = type { %"class.WTF::VectorBuffer.1272" }
%"class.WTF::VectorBuffer.1272" = type { %"class.WTF::VectorBufferBase.1273", [128 x i8] }
%"class.WTF::VectorBufferBase.1273" = type { i32*, i32, i32 }
%"class.WTF::Vector.1276" = type { %"class.WTF::VectorBuffer.1277" }
%"class.WTF::VectorBuffer.1277" = type { %"class.WTF::VectorBufferBase.1278", [128 x i8] }
%"class.WTF::VectorBufferBase.1278" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ %"struct.WTF::KeyValuePair.1290"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1290" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1291", %"class.WTF::Vector.1296" }
%"class.WTF::HashMap.1291" = type { %"class.WTF::HashTable.1292" }
%"class.WTF::HashTable.1292" = type <{ %"struct.WTF::KeyValuePair.1295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1295" = type opaque
%"class.WTF::Vector.1296" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298" }
%"class.WTF::VectorBufferBase.1298" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1310" = type { %"class.WTF::VectorBuffer.1311" }
%"class.WTF::VectorBuffer.1311" = type { %"class.WTF::VectorBufferBase.1312" }
%"class.WTF::VectorBufferBase.1312" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1315 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1322" = type { %"class.WTF::HashSet.1325" }
%"class.WTF::HashSet.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"class.blink::WeakMember.1328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1328" = type opaque
%"class.blink::HeapHashSet.1329" = type { %"class.WTF::HashSet.1332" }
%"class.WTF::HashSet.1332" = type { %"class.WTF::HashTable.1333" }
%"class.WTF::HashTable.1333" = type <{ %"class.blink::WeakMember.1335"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1335" = type opaque
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1339" }
%"class.base::time_internal::TimeBase.1339" = type { i64 }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1346", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1346" = type { %"class.absl::optional_internal::optional_data.1347" }
%"class.absl::optional_internal::optional_data.1347" = type { %"class.absl::optional_internal::optional_data_base.1348" }
%"class.absl::optional_internal::optional_data_base.1348" = type { %"class.absl::optional_internal::optional_data_dtor_base.1349" }
%"class.absl::optional_internal::optional_data_dtor_base.1349" = type { i8, %union.anon.1350 }
%union.anon.1350 = type { %"class.base::Time" }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.base::OnceCallback.408"*, i32, i32 }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.840" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.766", %"class.blink::Member.766" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.766", %"class.blink::Member.768", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.770" }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.818", %"class.blink::Member.631", %"class.blink::Member.768", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.863", %"class.blink::Member.865", %"class.blink::Member.867", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.872", %"class.blink::HeapVector.874" }
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.824" }
%"class.blink::HeapHashMap.824" = type { %"class.WTF::HashMap.827" }
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.830"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.830" = type { %"class.WTF::AtomicString", %"class.blink::Member.831" }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.835", i32, %"class.blink::HeapVector.856" }
%"class.blink::HeapVector.856" = type { %"class.WTF::Vector.859" }
%"class.WTF::Vector.859" = type { %"class.WTF::VectorBuffer.860" }
%"class.WTF::VectorBuffer.860" = type { %"class.WTF::VectorBufferBase.861" }
%"class.WTF::VectorBufferBase.861" = type { %"class.blink::Member.835"*, i32, i32 }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapHashMap.871"* }
%"class.blink::HeapHashMap.871" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.874" = type { %"class.WTF::Vector.877" }
%"class.WTF::Vector.877" = type { %"class.WTF::VectorBuffer.878" }
%"class.WTF::VectorBuffer.878" = type { %"class.WTF::VectorBufferBase.879" }
%"class.WTF::VectorBufferBase.879" = type { %"class.blink::Member.880"*, i32, i32 }
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.882", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.884, %"class.WTF::Vector.885", %"class.WTF::Vector.885", %"class.blink::Member.766", %"class.blink::Member.890", %"class.blink::HeapHashSet.894", %"class.blink::Member.631", %"class.WTF::HashSet.901", %"class.WTF::TextPosition", %"class.blink::Member.905", %"class.blink::HeapVector.907", %"class.blink::Member.914" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.884 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.885" = type { %"class.WTF::VectorBuffer.886" }
%"class.WTF::VectorBuffer.886" = type { %"class.WTF::VectorBufferBase.887" }
%"class.WTF::VectorBufferBase.887" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.892" }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.894" = type { %"class.WTF::HashSet.897" }
%"class.WTF::HashSet.897" = type { %"class.WTF::HashTable.898" }
%"class.WTF::HashTable.898" = type <{ %"class.blink::WeakMember.900"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.900" = type { %"class.blink::MemberBase.769" }
%"class.WTF::HashSet.901" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.907" = type { %"class.WTF::Vector.910" }
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %"class.blink::Member.890"*, i32, i32 }
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.837 }
%class.scoped_refptr.837 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.838", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.844", %"class.blink::Member.846", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.844" = type { %"class.WTF::SingleThreadedBitField.845" }
%"class.WTF::SingleThreadedBitField.845" = type { i32 }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.848 }
%class.scoped_refptr.848 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.849", %"class.WTF::AtomicString", %"class.WTF::Vector.851" }
%"class.WTF::RefCounted.849" = type { %"class.base::RefCounted.850" }
%"class.base::RefCounted.850" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.851" = type { %"class.WTF::VectorBuffer.852" }
%"class.WTF::VectorBuffer.852" = type { %"class.WTF::VectorBufferBase.853", [32 x i8] }
%"class.WTF::VectorBufferBase.853" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1010 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1025" = type { %"class.blink::Member.1026" }
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2352" }
%"class.mojo::Remote.2352" = type { %"class.mojo::internal::InterfacePtrState.2353" }
%"class.mojo::internal::InterfacePtrState.2353" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2354" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.521, %"class.std::__1::unique_ptr.380", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.399, i32 }>
%class.scoped_refptr.521 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.399, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.579", %"class.absl::optional.584", %"class.absl::optional.538", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.604", i8, [7 x i8], %class.scoped_refptr.399, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.420" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.408", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.399, %"class.std::__1::unique_ptr.522", %"class.absl::optional.532", %"struct.std::__1::atomic.163", i8, i8, i8, i8, i32, i32, %"class.absl::optional.538", %"class.std::__1::unique_ptr.543", i8, i64, %class.scoped_refptr.576, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.578" }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.399, i8, %"class.mojo::ScopedHandleBase.525", %class.scoped_refptr.526, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.527", i8*, %"class.base::WeakPtrFactory.528" }
%"class.mojo::ScopedHandleBase.525" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.526 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.527" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.528" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.532" = type { %"class.absl::optional_internal::optional_data.533" }
%"class.absl::optional_internal::optional_data.533" = type { %"class.absl::optional_internal::optional_data_base.534" }
%"class.absl::optional_internal::optional_data_base.534" = type { %"class.absl::optional_internal::optional_data_dtor_base.535" }
%"class.absl::optional_internal::optional_data_dtor_base.535" = type { i8, %union.anon.536 }
%union.anon.536 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.537", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.537" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.546", i8, i64, %class.scoped_refptr.547, %class.scoped_refptr.572 }
%"class.base::RepeatingCallback.546" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.547 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.548", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.550", %"class.std::__1::map.561", i8, [7 x i8] }>
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.549 }
%class.scoped_refptr.549 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.550" = type { %"class.std::__1::__tree.551" }
%"class.std::__1::__tree.551" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.552", %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::map.561" = type { %"class.std::__1::__tree.562" }
%"class.std::__1::__tree.562" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%class.scoped_refptr.572 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.576 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.577 }
%class.scoped_refptr.577 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.578" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.579" = type { %"class.absl::optional_internal::optional_data.580" }
%"class.absl::optional_internal::optional_data.580" = type { %"class.absl::optional_internal::optional_data_base.581" }
%"class.absl::optional_internal::optional_data_base.581" = type { %"class.absl::optional_internal::optional_data_dtor_base.582" }
%"class.absl::optional_internal::optional_data_dtor_base.582" = type { i8, %union.anon.583 }
%union.anon.583 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.584" = type { %"class.absl::optional_internal::optional_data.585" }
%"class.absl::optional_internal::optional_data.585" = type { %"class.absl::optional_internal::optional_data_base.586" }
%"class.absl::optional_internal::optional_data_base.586" = type { %"class.absl::optional_internal::optional_data_dtor_base.587" }
%"class.absl::optional_internal::optional_data_dtor_base.587" = type { i8, [7 x i8], %union.anon.588 }
%union.anon.588 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.538" = type { %"class.absl::optional_internal::optional_data.539" }
%"class.absl::optional_internal::optional_data.539" = type { %"class.absl::optional_internal::optional_data_base.540" }
%"class.absl::optional_internal::optional_data_base.540" = type { %"class.absl::optional_internal::optional_data_dtor_base.541" }
%"class.absl::optional_internal::optional_data_dtor_base.541" = type { i8, %union.anon.542 }
%union.anon.542 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.589 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.589 = type { %"class.std::__1::map.592" }
%"class.std::__1::map.592" = type { %"class.std::__1::__tree.593" }
%"class.std::__1::__tree.593" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.603"*, i64 }
%"class.std::__1::unique_ptr.603" = type opaque
%"class.std::__1::map.604" = type { %"class.std::__1::__tree.605" }
%"class.std::__1::__tree.605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1031, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1031 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1032", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1033" }
%"class.std::__1::vector.1033" = type { %"class.std::__1::__vector_base.1034" }
%"class.std::__1::__vector_base.1034" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1040, i8, [7 x i8] }>
%class.scoped_refptr.1040 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1041", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1041" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1042" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1049" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1062" }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2362" }
%"class.mojo::AssociatedRemote.2362" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2363" }
%"class.mojo::internal::AssociatedInterfacePtrState.2363" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2364" }
%"class.std::__1::unique_ptr.2364" = type { %"class.std::__1::__compressed_pair.2365" }
%"class.std::__1::__compressed_pair.2365" = type { %"struct.std::__1::__compressed_pair_elem.2366" }
%"struct.std::__1::__compressed_pair_elem.2366" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1064" = type { %"class.blink::Member.1065" }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2372" }
%"class.mojo::AssociatedRemote.2372" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2373" }
%"class.mojo::internal::AssociatedInterfacePtrState.2373" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2374" }
%"class.std::__1::unique_ptr.2374" = type { %"class.std::__1::__compressed_pair.2375" }
%"class.std::__1::__compressed_pair.2375" = type { %"struct.std::__1::__compressed_pair_elem.2376" }
%"struct.std::__1::__compressed_pair_elem.2376" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1067" }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2382", %"class.blink::Member.762", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2382" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2383" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.380" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2383" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1069" = type { %"class.blink::Member.1070" }
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2386", %"class.blink::Member.762", %"class.mojo::AssociatedReceiver.2387" }
%"class.blink::ThreadState::PrefinalizerRegistration.2386" = type { i8 }
%"class.mojo::AssociatedReceiver.2387" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2388" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2388" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1072" }
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2391", %"class.blink::Member.762", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2391" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.521, %"class.std::__1::unique_ptr.380", %"class.base::WeakPtrFactory.2392" }
%"class.base::WeakPtrFactory.2392" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1074" = type { %"class.blink::Member.1075" }
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2395", %"class.blink::Member.762", %"class.mojo::AssociatedReceiver.2396" }
%"class.blink::ThreadState::PrefinalizerRegistration.2395" = type { i8 }
%"class.mojo::AssociatedReceiver.2396" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2397" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::HeapHashMap.1085"* }
%"class.blink::HeapHashMap.1085" = type opaque
%"class.mojo::StructPtr.1086" = type { %"class.std::__1::unique_ptr.1087" }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1090", %"class.mojo::InlinedStructPtr.1091" }
%"class.mojo::InlinedStructPtr.1090" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1091" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1097" = type { %"class.absl::optional_internal::optional_data.1098" }
%"class.absl::optional_internal::optional_data.1098" = type { %"class.absl::optional_internal::optional_data_base.1099" }
%"class.absl::optional_internal::optional_data_base.1099" = type { %"class.absl::optional_internal::optional_data_dtor_base.1100" }
%"class.absl::optional_internal::optional_data_dtor_base.1100" = type { i8, %union.anon.1101 }
%union.anon.1101 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.508", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.927" }
%"class.std::__1::vector.927" = type { %"class.std::__1::__vector_base.928" }
%"class.std::__1::__vector_base.928" = type { %"struct.std::__1::pair.929"*, %"struct.std::__1::pair.929"*, %"class.std::__1::__compressed_pair.930" }
%"struct.std::__1::pair.929" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::pair.929"* }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.937" = type { %"class.absl::optional_internal::optional_data.938" }
%"class.absl::optional_internal::optional_data.938" = type { %"class.absl::optional_internal::optional_data_base.939" }
%"class.absl::optional_internal::optional_data_base.939" = type { %"class.absl::optional_internal::optional_data_dtor_base.940" }
%"class.absl::optional_internal::optional_data_dtor_base.940" = type { i8, %union.anon.941 }
%union.anon.941 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.942" = type { %"class.absl::optional_internal::optional_data.943" }
%"class.absl::optional_internal::optional_data.943" = type { %"class.absl::optional_internal::optional_data_base.944" }
%"class.absl::optional_internal::optional_data_base.944" = type { %"class.absl::optional_internal::optional_data_dtor_base.945" }
%"class.absl::optional_internal::optional_data_dtor_base.945" = type { i8, %union.anon.946 }
%union.anon.946 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.947 }
%class.scoped_refptr.947 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.948" }
%"class.blink::HeapHashSet.948" = type { %"class.WTF::HashSet.951" }
%"class.WTF::HashSet.951" = type { %"class.WTF::HashTable.952" }
%"class.WTF::HashTable.952" = type <{ %"class.blink::WeakMember.954"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.954" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.519", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.613" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.309", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.319", %"class.blink::Member.321", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.330", %"class.blink::Member.471", %"class.blink::Member.473", i8 }>
%"class.blink::Supplementable.621" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.622" }
%"class.blink::HeapHashMap.622" = type { %"class.WTF::HashMap.625" }
%"class.WTF::HashMap.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"struct.WTF::KeyValuePair.628"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.628" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1395", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1354", %"class.WTF::Vector.1354", i8, i32, %"class.blink::Member.789", %"class.blink::Member.303", %"class.blink::Member.1403", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1411", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1417", %"class.blink::Member.1419", %"class.blink::Member.880", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1421", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1426", %"class.blink::HeapVector.856", %"class.blink::Member.835", %"class.blink::Member.781", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::Member.835", %"class.blink::UserActionElementSet", %"class.blink::Member.1435", double, double, i64, i64, %"class.blink::HeapHashSet.1437", %"class.blink::HeapHashSet.1444", i16, i8, %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::Member.1457", %"class.blink::TextLinkColors", %"class.blink::Member.1459", i8, [7 x i8], %"class.blink::HeapHashMap.1461", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.835", %"class.WTF::Vector.1468", %"class.blink::Member.1473", %"class.blink::Member.1475", i8, %"class.blink::Member.835", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1477", %"class.blink::HeapVector.1479", %"class.std::__1::unique_ptr.1487", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1493", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1506", %"class.WTF::Vector.1508", i8, i8, %"class.std::__1::unique_ptr.1513", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.856", %"class.blink::HeapVector.1519", i32, i8, %"class.blink::HeapTaskRunnerTimer.1426", %"class.blink::HeapTaskRunnerTimer.1426", %"class.blink::DocumentTiming", %"class.blink::Member.1527", i8, i32, %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::HeapTaskRunnerTimer.1426", %"class.blink::Member.1535", %"class.WTF::HashMap.1537", %"class.blink::Member.1542", %"class.blink::Member.1544", %"class.blink::Member.1546", %"class.blink::Member.1548", %"class.blink::Member.631", %"class.blink::Member.631", %"class.blink::HeapTaskRunnerTimer.1426", %"class.blink::HeapHashSet.1550", i8, i32, %"class.blink::Member.1557", %"class.blink::Member.1559", i32, %"class.blink::Member.1561", %"class.blink::Member.1563", %"class.blink::Member.1565", %"class.std::__1::unique_ptr.1567", i64, %"class.std::__1::unique_ptr.1573", i32, i32, %"class.blink::Member.1579", %"class.blink::Member.1581", %"class.blink::Member.1583", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1585", %"class.WTF::Vector.804", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1587", %"class.blink::Member.1594", %"class.std::__1::unique_ptr.1596", %"class.blink::Member.1610", i8, i8, %"class.WTF::String", %"class.blink::Member.1612", i8, [7 x i8], %"class.blink::HeapHashMap.1614", %"class.blink::HeapObserverSet.1621", %"class.blink::Member.1629", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1631", i32, i8, i8, %"class.blink::WeakMember.1633", %"class.blink::Member.1634" }
%"class.blink::Supplementable.1395" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1396" }
%"class.blink::HeapHashMap.1396" = type { %"class.WTF::HashMap.1399" }
%"class.WTF::HashMap.1399" = type { %"class.WTF::HashTable.1400" }
%"class.WTF::HashTable.1400" = type <{ %"struct.WTF::KeyValuePair.1402"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1402" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1649", %"class.blink::Member.1650", %"class.blink::Member.1652", %"class.blink::Member.1656", %class.scoped_refptr.1109, %class.scoped_refptr.1109, %"class.blink::Member.1658", %"class.blink::Member.1660", %"class.blink::Member.1666", %"class.blink::Member.1670", %"class.blink::Member.1721", %"class.blink::HeapHashMap.1723", %"class.blink::HeapHashSet.1730", %"class.blink::HeapHashSet.1730", %"class.blink::HeapHashMap.1885", %"class.blink::HeapVector.1892", %"class.blink::Member.1900", %"class.blink::HeapTaskRunnerTimer.1902", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1904", %"class.WTF::Vector.1911", %"class.blink::HeapHashSet.1917", %"class.blink::HeapHashSet.1917", %"class.std::__1::unique_ptr.1923", %"class.base::WeakPtr.1715", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1929", %"class.blink::Member.1932", i8, i8, %"class.base::WeakPtrFactory.1934" }
%"class.blink::ThreadState::PrefinalizerRegistration.1649" = type { i8 }
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1664" }
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1674", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1676", %"class.WTF::HashSet.1681", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1685", %"class.std::__1::map.1692", %"class.std::__1::map.1703", %"class.std::__1::unique_ptr.1712", %"class.blink::Member.1660", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1719", %"class.mojo::InlinedStructPtr.1091", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1676" = type { %"class.WTF::HashTable.1677" }
%"class.WTF::HashTable.1677" = type <{ %"struct.WTF::KeyValuePair.1680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1680" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1681" = type { %"class.WTF::HashTable.1682" }
%"class.WTF::HashTable.1682" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1685" = type { %"class.WTF::HashMap.1688" }
%"class.WTF::HashMap.1688" = type { %"class.WTF::HashTable.1689" }
%"class.WTF::HashTable.1689" = type <{ %"struct.WTF::KeyValuePair.1691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1691" = type opaque
%"class.std::__1::map.1692" = type { %"class.std::__1::__tree.1693" }
%"class.std::__1::__tree.1693" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1694", %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::map.1703" = type { %"class.std::__1::__tree.1704" }
%"class.std::__1::__tree.1704" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1705", %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1715", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1723" = type { %"class.WTF::HashMap.1726" }
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1729" = type opaque
%"class.blink::HeapHashSet.1730" = type { %"class.WTF::HashSet.1733" }
%"class.WTF::HashSet.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"class.blink::WeakMember.1736"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1740", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1760", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1843", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1860", %"class.blink::ResourceResponse", %class.scoped_refptr.1862, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1740" = type { %"class.absl::optional_internal::optional_data.1741" }
%"class.absl::optional_internal::optional_data.1741" = type { %"class.absl::optional_internal::optional_data_base.1742" }
%"class.absl::optional_internal::optional_data_base.1742" = type { %"class.absl::optional_internal::optional_data_dtor_base.1743" }
%"class.absl::optional_internal::optional_data_dtor_base.1743" = type { i8, %union.anon.1744 }
%union.anon.1744 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1745", i8, %"class.absl::optional.1750", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1745" = type { %"class.absl::optional_internal::optional_data.1746" }
%"class.absl::optional_internal::optional_data.1746" = type { %"class.absl::optional_internal::optional_data_base.1747" }
%"class.absl::optional_internal::optional_data_base.1747" = type { %"class.absl::optional_internal::optional_data_dtor_base.1748" }
%"class.absl::optional_internal::optional_data_dtor_base.1748" = type { i8, [7 x i8], %union.anon.1749 }
%union.anon.1749 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1755", %"class.WTF::Vector.360" }
%"class.WTF::Vector.1755" = type { %"class.WTF::VectorBuffer.1756" }
%"class.WTF::VectorBuffer.1756" = type { %"class.WTF::VectorBufferBase.1757" }
%"class.WTF::VectorBufferBase.1757" = type { i32*, i32, i32 }
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1762" }
%"class.WTF::VectorBufferBase.1762" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1839" }
%"class.WTF::HashMap.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"struct.WTF::KeyValuePair.1842"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1842" = type <{ %"class.blink::WeakMember.2417", i32, [4 x i8] }>
%"class.blink::WeakMember.2417" = type { %"class.blink::MemberBase.2418" }
%"class.blink::MemberBase.2418" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2419", [7 x i8], %"class.blink::Member.1898", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2419" = type { i8 }
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1737" }
%"class.blink::HeapHashSet.1843" = type { %"class.WTF::HashSet.1846" }
%"class.WTF::HashSet.1846" = type { %"class.WTF::HashTable.1847" }
%"class.WTF::HashTable.1847" = type <{ %"class.blink::WeakMember.1849"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1849" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1850", %"class.WTF::String", %"class.WTF::HashSet.1851", i8, i8, %class.scoped_refptr.242, %class.scoped_refptr.1856, %class.scoped_refptr.1858 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1850" = type { i8 }
%"class.WTF::HashSet.1851" = type { %"class.WTF::HashTable.1852" }
%"class.WTF::HashTable.1852" = type <{ %"struct.std::__1::pair.1855"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1855" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1856 = type { %"class.base::RefCountedData.1857"* }
%"class.base::RefCountedData.1857" = type opaque
%class.scoped_refptr.1858 = type { %"class.base::RefCountedData.1859"* }
%"class.base::RefCountedData.1859" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.266, %class.scoped_refptr.266, %class.scoped_refptr.266, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1768, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1781", %"class.absl::optional.1786", %"class.absl::optional.1796", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.942", %"class.absl::optional.1796", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1796", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.942", %"class.absl::optional.1801", i8, %class.scoped_refptr.1807 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1763" }
%"class.WTF::HashMap.1763" = type { %"class.WTF::HashTable.1764" }
%"class.WTF::HashTable.1764" = type <{ %"struct.WTF::KeyValuePair.1767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1767" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1768 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1769", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.1770", %class.scoped_refptr.1779, i8, %"class.url::Origin" }
%"class.base::RefCounted.1769" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1770" = type { %"class.std::__1::vector.1771" }
%"class.std::__1::vector.1771" = type { %"class.std::__1::__vector_base.1772" }
%"class.std::__1::__vector_base.1772" = type { %"class.std::__1::unique_ptr.1773"*, %"class.std::__1::unique_ptr.1773"*, %"class.std::__1::__compressed_pair.1774" }
%"class.std::__1::unique_ptr.1773" = type { %"class.std::__1::__compressed_pair.2398" }
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.2399" }
%"struct.std::__1::__compressed_pair_elem.2399" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1774" = type { %"struct.std::__1::__compressed_pair_elem.1775" }
%"struct.std::__1::__compressed_pair_elem.1775" = type { %"class.std::__1::unique_ptr.1773"* }
%class.scoped_refptr.1779 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1780", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1780" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1781" = type { %"class.absl::optional_internal::optional_data.1782" }
%"class.absl::optional_internal::optional_data.1782" = type { %"class.absl::optional_internal::optional_data_base.1783" }
%"class.absl::optional_internal::optional_data_base.1783" = type { %"class.absl::optional_internal::optional_data_dtor_base.1784" }
%"class.absl::optional_internal::optional_data_dtor_base.1784" = type { i8, %union.anon.1785 }
%union.anon.1785 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1786" = type { %"class.absl::optional_internal::optional_data.1787" }
%"class.absl::optional_internal::optional_data.1787" = type { %"class.absl::optional_internal::optional_data_base.1788" }
%"class.absl::optional_internal::optional_data_base.1788" = type { %"class.absl::optional_internal::optional_data_dtor_base.1789" }
%"class.absl::optional_internal::optional_data_dtor_base.1789" = type { i8, %union.anon.1790 }
%union.anon.1790 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1791", %"class.WTF::Vector.360", %"class.WTF::String" }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793" }
%"class.WTF::VectorBufferBase.1793" = type { %class.scoped_refptr.266*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.389", %"class.absl::optional.389" }
%"class.absl::optional.1796" = type { %"class.absl::optional_internal::optional_data.1797" }
%"class.absl::optional_internal::optional_data.1797" = type { %"class.absl::optional_internal::optional_data_base.1798" }
%"class.absl::optional_internal::optional_data_base.1798" = type { %"class.absl::optional_internal::optional_data_dtor_base.1799" }
%"class.absl::optional_internal::optional_data_dtor_base.1799" = type { i8, %union.anon.1800 }
%union.anon.1800 = type { %"class.WTF::String" }
%"class.absl::optional.1801" = type { %"class.absl::optional_internal::optional_data.1802" }
%"class.absl::optional_internal::optional_data.1802" = type { %"class.absl::optional_internal::optional_data_base.1803" }
%"class.absl::optional_internal::optional_data_base.1803" = type { %"class.absl::optional_internal::optional_data_dtor_base.1804" }
%"class.absl::optional_internal::optional_data_dtor_base.1804" = type { i8, %union.anon.1805 }
%union.anon.1805 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1806" }
%"class.mojo::PendingRemote.1806" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1807 = type { %"class.base::RefCountedData.1808"* }
%"class.base::RefCountedData.1808" = type { %"class.base::RefCountedThreadSafe.2403", %"class.base::internal::flat_tree.2404" }
%"class.base::RefCountedThreadSafe.2403" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2404" = type { %"class.std::__1::vector.2405" }
%"class.std::__1::vector.2405" = type { %"class.std::__1::__vector_base.2406" }
%"class.std::__1::__vector_base.2406" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2407" }
%"class.std::__1::__compressed_pair.2407" = type { %"struct.std::__1::__compressed_pair_elem.2408" }
%"struct.std::__1::__compressed_pair_elem.2408" = type { i32* }
%"class.blink::Member.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1809", %class.scoped_refptr.1823, %class.scoped_refptr.1824, %"struct.blink::CacheControlHeader", %"class.absl::optional.389", %"class.absl::optional.1346", %"class.absl::optional.1346", %"class.absl::optional.1346", i64, %"class.blink::KURL", %"class.WTF::Vector.1825", %"class.WTF::String", %"class.WTF::Vector.360", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.942", %"class.WTF::Vector.360", %"class.blink::KURL", %"class.absl::optional.1830" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1809" = type { %"class.absl::optional_internal::optional_data.1810" }
%"class.absl::optional_internal::optional_data.1810" = type { %"class.absl::optional_internal::optional_data_base.1811" }
%"class.absl::optional_internal::optional_data_base.1811" = type { %"class.absl::optional_internal::optional_data_dtor_base.1812" }
%"class.absl::optional_internal::optional_data_dtor_base.1812" = type { i8, %union.anon.1813 }
%union.anon.1813 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.360", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1814", %"class.WTF::Vector.1818" }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.853" }
%"class.WTF::Vector.1818" = type { %"class.WTF::VectorBuffer.1819" }
%"class.WTF::VectorBuffer.1819" = type { %"class.WTF::VectorBufferBase.1820" }
%"class.WTF::VectorBufferBase.1820" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1823 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1824 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827" }
%"class.WTF::VectorBufferBase.1827" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1862 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1863", i64, %"class.WTF::Vector.1865", %"class.WTF::Vector.1870" }
%"class.WTF::RefCounted.1863" = type { %"class.base::RefCounted.1864" }
%"class.base::RefCounted.1864" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { i8*, i32, i32 }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"class.std::__1::unique_ptr.1873"*, i32, i32 }
%"class.std::__1::unique_ptr.1873" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1876" }
%"class.std::__1::__tree.1876" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1877", %"class.std::__1::__compressed_pair.1881" }
%"class.std::__1::__compressed_pair.1877" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.1881" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.blink::HeapHashMap.1885" = type { %"class.WTF::HashMap.1888" }
%"class.WTF::HashMap.1888" = type { %"class.WTF::HashTable.1889" }
%"class.WTF::HashTable.1889" = type <{ %"struct.WTF::KeyValuePair.1891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1891" = type opaque
%"class.blink::HeapVector.1892" = type { %"class.WTF::Vector.1895" }
%"class.WTF::Vector.1895" = type { %"class.WTF::VectorBuffer.1896" }
%"class.WTF::VectorBuffer.1896" = type { %"class.WTF::VectorBufferBase.1897" }
%"class.WTF::VectorBufferBase.1897" = type { %"class.blink::Member.1898"*, i32, i32 }
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1902" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1903", { i64, i64 } }
%"class.blink::WeakMember.1903" = type { %"class.blink::MemberBase.1404" }
%"class.blink::HeapHashMap.1904" = type { %"class.WTF::HashMap.1907" }
%"class.WTF::HashMap.1907" = type { %"class.WTF::HashTable.1908" }
%"class.WTF::HashTable.1908" = type <{ %"struct.WTF::KeyValuePair.1910"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1910" = type opaque
%"class.WTF::Vector.1911" = type { %"class.WTF::VectorBuffer.1912" }
%"class.WTF::VectorBuffer.1912" = type { %"class.WTF::VectorBufferBase.1913" }
%"class.WTF::VectorBufferBase.1913" = type { %class.scoped_refptr.1914*, i32, i32 }
%class.scoped_refptr.1914 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1917" = type { %"class.WTF::HashSet.1920" }
%"class.WTF::HashSet.1920" = type { %"class.WTF::HashTable.1921" }
%"class.WTF::HashTable.1921" = type <{ %"class.blink::Member.1860"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1923" = type { %"class.std::__1::__compressed_pair.1924" }
%"class.std::__1::__compressed_pair.1924" = type { %"struct.std::__1::__compressed_pair_elem.1925" }
%"struct.std::__1::__compressed_pair_elem.1925" = type { %"class.WTF::HashSet.994"* }
%"class.base::WeakPtr.1715" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1929" = type { %"class.blink::Member.1930" }
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1934" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.242 }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.631", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.766", %"class.blink::Member.766", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1428" }
%"class.blink::HeapHashMap.1428" = type { %"class.WTF::HashMap.1431" }
%"class.WTF::HashMap.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"struct.WTF::KeyValuePair.1434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1434" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1437" = type { %"class.WTF::HashSet.1440" }
%"class.WTF::HashSet.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"class.blink::WeakMember.1443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1443" = type opaque
%"class.blink::HeapHashSet.1444" = type { %"class.WTF::HashSet.1447" }
%"class.WTF::HashSet.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"class.blink::WeakMember.1450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1450" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.768", %"class.blink::HeapVector.874" }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1461" = type { %"class.WTF::HashMap.1464" }
%"class.WTF::HashMap.1464" = type { %"class.WTF::HashTable.1465" }
%"class.WTF::HashTable.1465" = type <{ %"struct.WTF::KeyValuePair.1467"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1467" = type opaque
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1479" = type { %"class.WTF::Vector.1482" }
%"class.WTF::Vector.1482" = type { %"class.WTF::VectorBuffer.1483" }
%"class.WTF::VectorBuffer.1483" = type { %"class.WTF::VectorBufferBase.1484" }
%"class.WTF::VectorBufferBase.1484" = type { %"class.blink::Member.1485"*, i32, i32 }
%"class.blink::Member.1485" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1493" = type { %"class.WTF::HashSet.1496" }
%"class.WTF::HashSet.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"class.blink::WeakMember.1499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1499" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1500", i32, [4 x i8] }>
%"class.WTF::Vector.1500" = type { %"class.WTF::VectorBuffer.1501" }
%"class.WTF::VectorBuffer.1501" = type { %"class.WTF::VectorBufferBase.1502" }
%"class.WTF::VectorBufferBase.1502" = type { %"struct.std::__1::pair.1503"*, i32, i32 }
%"struct.std::__1::pair.1503" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1508" = type { %"class.WTF::VectorBuffer.1509" }
%"class.WTF::VectorBuffer.1509" = type { %"class.WTF::VectorBufferBase.1510" }
%"class.WTF::VectorBufferBase.1510" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1519" = type { %"class.WTF::Vector.1522" }
%"class.WTF::Vector.1522" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { %"class.blink::Member.1525"*, i32, i32 }
%"class.blink::Member.1525" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.631" }
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1541" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1426" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1427", { i64, i64 } }
%"class.blink::WeakMember.1427" = type { %"class.blink::MemberBase.632" }
%"class.blink::HeapHashSet.1550" = type { %"class.WTF::HashSet.1553" }
%"class.WTF::HashSet.1553" = type { %"class.WTF::HashTable.1554" }
%"class.WTF::HashTable.1554" = type <{ %"class.blink::Member.1556"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1556" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1587" = type { %"class.WTF::HashMap.1590" }
%"class.WTF::HashMap.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"struct.WTF::KeyValuePair.1593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1593" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1596" = type { %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.1598" }
%"struct.std::__1::__compressed_pair_elem.1598" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type <{ %"class.mojo::Remote.1599", i8, [7 x i8] }>
%"class.mojo::Remote.1599" = type { %"class.mojo::internal::InterfacePtrState.1600" }
%"class.mojo::internal::InterfacePtrState.1600" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1601" }
%"class.std::__1::unique_ptr.1601" = type { %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.1603" }
%"struct.std::__1::__compressed_pair_elem.1603" = type { %"class.performance_manager::mojom::blink::DocumentCoordinationUnitProxy"* }
%"class.performance_manager::mojom::blink::DocumentCoordinationUnitProxy" = type { %"class.performance_manager::mojom::blink::DocumentCoordinationUnit", %"class.mojo::MessageReceiverWithResponder"* }
%"class.performance_manager::mojom::blink::DocumentCoordinationUnit" = type { i32 (...)** }
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1614" = type { %"class.WTF::HashMap.1617" }
%"class.WTF::HashMap.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"struct.WTF::KeyValuePair.1620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1620" = type opaque
%"class.blink::HeapObserverSet.1621" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1622" }
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::WeakMember.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1628" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.631", %"class.blink::HeapHashSet.1638", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1645", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1638" = type { %"class.WTF::HashSet.1641" }
%"class.WTF::HashSet.1641" = type { %"class.WTF::HashTable.1642" }
%"class.WTF::HashTable.1642" = type <{ %"class.blink::Member.1644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1644" = type opaque
%"class.blink::HeapTaskRunnerTimer.1645" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1646", { i64, i64 } }
%"class.blink::WeakMember.1646" = type { %"class.blink::MemberBase.1632" }
%"class.blink::WeakMember.1633" = type { %"class.blink::MemberBase.767" }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.655 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.657", i64, %"class.WTF::Vector.661", %"class.WTF::Vector.666", %"class.WTF::Vector.672", %"class.WTF::Vector.690", %class.scoped_refptr.263, %"class.WTF::HashMap.696", %"class.WTF::Vector.701", %"class.WTF::Vector.661", %"class.WTF::Vector.707", %"class.WTF::HashMap.712", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.656" }
%"class.base::RefCountedThreadSafe.656" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { i8* }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668", [8 x i8] }
%"class.WTF::VectorBufferBase.668" = type { %class.scoped_refptr.669*, i32, i32 }
%class.scoped_refptr.669 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674" }
%"class.WTF::VectorBufferBase.674" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.676", %"class.std::__1::unique_ptr.682" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.691" }
%"class.WTF::VectorBuffer.691" = type { %"class.WTF::VectorBufferBase.692" }
%"class.WTF::VectorBufferBase.692" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.693", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.693" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type opaque
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.mojo::ScopedHandleBase.704"*, i32, i32 }
%"class.mojo::ScopedHandleBase.704" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663", [16 x i8] }
%"class.WTF::VectorBufferBase.663" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.707" = type { %"class.WTF::VectorBuffer.708" }
%"class.WTF::VectorBuffer.708" = type { %"class.WTF::VectorBufferBase.709" }
%"class.WTF::VectorBufferBase.709" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type { i8**, %"class.std::__1::unique_ptr.2331" }
%"class.std::__1::unique_ptr.2331" = type { %"class.std::__1::__compressed_pair.2332" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.2333" }
%"struct.std::__1::__compressed_pair_elem.2333" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.717" = type { %"class.WTF::HashSet.720" }
%"class.WTF::HashSet.720" = type { %"class.WTF::HashTable.721" }
%"class.WTF::HashTable.721" = type <{ %"class.blink::WeakMember.723"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.723" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.731", %"class.blink::Member.731", %"class.blink::Member.733", %"class.blink::Member.735", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.726" }
%"class.absl::optional.726" = type { %"class.absl::optional_internal::optional_data.727" }
%"class.absl::optional_internal::optional_data.727" = type { %"class.absl::optional_internal::optional_data_base.728" }
%"class.absl::optional_internal::optional_data_base.728" = type { %"class.absl::optional_internal::optional_data_dtor_base.729" }
%"class.absl::optional_internal::optional_data_dtor_base.729" = type { i8, %union.anon.730 }
%union.anon.730 = type { i64 }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::Event"* }
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.737" = type { %"class.WTF::HashMap.740" }
%"class.WTF::HashMap.740" = type { %"class.WTF::HashTable.741" }
%"class.WTF::HashTable.741" = type <{ %"struct.WTF::KeyValuePair.743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.743" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.762", %"class.blink::CachedTextInputInfo", %"class.blink::Member.781", %"class.blink::Member.783", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.764", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.774", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.774" = type { %"class.WTF::HashMap.777" }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.780" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.766", i32, i32 }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::Member.793" }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.789", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.799" }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::HeapHashMap.803"* }
%"class.blink::HeapHashMap.803" = type opaque
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { i8*, i32, i32 }
%"class.util::TokenType.519" = type { %"class.base::StrongAlias.520" }
%"class.base::StrongAlias.520" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.813" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { i64*, i32, i32 }
%"class.v8::Value" = type { i8 }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2430" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.1970", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.1985", %"class.blink::Member.2003", %"class.blink::Member.2005", %"class.blink::Member.2016", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2018", i32, %"class.blink::Member.2025", %"class.std::__1::unique_ptr.1573", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2046", %"class.absl::optional.2050", i32, %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.2056", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.1950", %"class.blink::Member.1403", %"class.blink::HeapHashSet.1956", %class.scoped_refptr.1962, %"class.blink::Member.1964", %"class.blink::Member.1966", i32, %"class.WTF::Vector.336", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.647" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.1935" }
%"class.blink::PersistentBase.1935" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.1938" }
%"class.blink::Supplementable.1938" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1939" }
%"class.blink::HeapHashMap.1939" = type { %"class.WTF::HashMap.1942" }
%"class.WTF::HashMap.1942" = type { %"class.WTF::HashTable.1943" }
%"class.WTF::HashTable.1943" = type <{ %"struct.WTF::KeyValuePair.1945"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1945" = type { i8*, %"class.blink::Member.2412" }
%"class.blink::Member.2412" = type { %"class.blink::MemberBase.2413" }
%"class.blink::MemberBase.2413" = type { %"class.blink::Supplement.2414"* }
%"class.blink::Supplement.2414" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2415" }
%"class.blink::Member.2415" = type { %"class.blink::MemberBase.2416" }
%"class.blink::MemberBase.2416" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.1946" }
%"struct.std::__1::atomic.1946" = type { %"struct.std::__1::__atomic_base.1947" }
%"struct.std::__1::__atomic_base.1947" = type { %"struct.std::__1::__cxx_atomic_impl.1948" }
%"struct.std::__1::__cxx_atomic_impl.1948" = type { %"struct.std::__1::__cxx_atomic_base_impl.1949" }
%"struct.std::__1::__cxx_atomic_base_impl.1949" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1950" = type { %"class.std::__1::__compressed_pair.1951" }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.1952" }
%"struct.std::__1::__compressed_pair_elem.1952" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.1956" = type { %"class.WTF::HashSet.1959" }
%"class.WTF::HashSet.1959" = type { %"class.WTF::HashTable.1960" }
%"class.WTF::HashTable.1960" = type <{ %"class.blink::WeakMember.1903"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1962 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.1963", [4 x i8] }>
%"class.base::RefCounted.1963" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1964" = type { %"class.blink::MemberBase.1965" }
%"class.blink::MemberBase.1965" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1968", i32, [4 x i8] }>
%"class.std::__1::bitset.1968" = type { %"class.std::__1::__bitset.1969" }
%"class.std::__1::__bitset.1969" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1970" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1971" }
%"class.blink::HeapHashMap.1971" = type { %"class.WTF::HashMap.1974" }
%"class.WTF::HashMap.1974" = type { %"class.WTF::HashTable.1975" }
%"class.WTF::HashTable.1975" = type <{ %"struct.WTF::KeyValuePair.1977"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1977" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1978", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1978" = type { %"class.std::__1::__vector_base.1979" }
%"class.std::__1::__vector_base.1979" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1980" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1985" = type { %"class.std::__1::__compressed_pair.1986" }
%"class.std::__1::__compressed_pair.1986" = type { %"struct.std::__1::__compressed_pair_elem.1987" }
%"struct.std::__1::__compressed_pair_elem.1987" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.WTF::HashMap.1988", %"class.std::__1::unique_ptr.1993" }
%"class.WTF::HashMap.1988" = type { %"class.WTF::HashTable.1989" }
%"class.WTF::HashTable.1989" = type <{ %"struct.WTF::KeyValuePair.1992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1992" = type opaque
%"class.std::__1::unique_ptr.1993" = type { %"class.std::__1::__compressed_pair.1994" }
%"class.std::__1::__compressed_pair.1994" = type { %"struct.std::__1::__compressed_pair_elem.1995" }
%"struct.std::__1::__compressed_pair_elem.1995" = type { %"class.WTF::Vector.1996"* }
%"class.WTF::Vector.1996" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2008" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2007", %"class.WTF::Vector.360", i8 }>
%"class.blink::WeakMember.2007" = type { %"class.blink::MemberBase.304" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2007" }
%"class.blink::Supplementable.2008" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2009" }
%"class.blink::HeapHashMap.2009" = type { %"class.WTF::HashMap.2012" }
%"class.WTF::HashMap.2012" = type { %"class.WTF::HashTable.2013" }
%"class.WTF::HashTable.2013" = type <{ %"struct.WTF::KeyValuePair.2015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2015" = type { i8*, %"class.blink::Member.2421" }
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::Supplement.2423"* }
%"class.blink::Supplement.2423" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2424" }
%"class.blink::Member.2424" = type { %"class.blink::MemberBase.2425" }
%"class.blink::MemberBase.2425" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2016" = type { %"class.blink::MemberBase.2017" }
%"class.blink::MemberBase.2017" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.2018" = type { %"class.WTF::HashMap.2021" }
%"class.WTF::HashMap.2021" = type { %"class.WTF::HashTable.2022" }
%"class.WTF::HashTable.2022" = type <{ %"struct.WTF::KeyValuePair.2024"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2024" = type opaque
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2027", %"class.std::__1::map.2035" }
%"class.mojo::Remote.2027" = type { %"class.mojo::internal::InterfacePtrState.2028" }
%"class.mojo::internal::InterfacePtrState.2028" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2029" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2035" = type { %"class.std::__1::__tree.2036" }
%"class.std::__1::__tree.2036" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2037", %"class.std::__1::__compressed_pair.2041" }
%"class.std::__1::__compressed_pair.2037" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.2041" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1851", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1850", [6 x i8] }>
%"class.absl::optional.2050" = type { %"class.absl::optional_internal::optional_data.2051" }
%"class.absl::optional_internal::optional_data.2051" = type { %"class.absl::optional_internal::optional_data_base.2052" }
%"class.absl::optional_internal::optional_data_base.2052" = type { %"class.absl::optional_internal::optional_data_dtor_base.2053" }
%"class.absl::optional_internal::optional_data_dtor_base.2053" = type { i8, [7 x i8], %union.anon.2054 }
%union.anon.2054 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2055", i8, [7 x i8] }>
%"struct.std::__1::pair.2055" = type { i64, i64 }
%"class.std::__1::unique_ptr.2056" = type { %"class.std::__1::__compressed_pair.2057" }
%"class.std::__1::__compressed_pair.2057" = type { %"struct.std::__1::__compressed_pair_elem.2058" }
%"struct.std::__1::__compressed_pair_elem.2058" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.2059", %"class.mojo::ScopedHandleBase.2253", %"class.mojo::StructPtr.2254", %"class.std::__1::vector.2262", %"class.std::__1::vector.2269" }
%"class.mojo::StructPtr.2059" = type { %"class.std::__1::unique_ptr.2060" }
%"class.std::__1::unique_ptr.2060" = type { %"class.std::__1::__compressed_pair.2061" }
%"class.std::__1::__compressed_pair.2061" = type { %"struct.std::__1::__compressed_pair_elem.2062" }
%"struct.std::__1::__compressed_pair_elem.2062" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2063, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2078", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.2094", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2100", %"class.std::__1::vector.2107", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1830", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2142", %"class.absl::optional.2239", %"class.absl::optional.942", %"class.std::__1::vector.2107", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2063 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2064", %"class.std::__1::vector.2065", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2064" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2065" = type { %"class.std::__1::__vector_base.2066" }
%"class.std::__1::__vector_base.2066" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2067" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2067" = type { %"struct.std::__1::__compressed_pair_elem.2068" }
%"struct.std::__1::__compressed_pair_elem.2068" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.2078" = type { %"class.std::__1::unique_ptr.2079" }
%"class.std::__1::unique_ptr.2079" = type { %"class.std::__1::__compressed_pair.2080" }
%"class.std::__1::__compressed_pair.2080" = type { %"struct.std::__1::__compressed_pair_elem.2081" }
%"struct.std::__1::__compressed_pair_elem.2081" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2082", %"class.std::__1::vector.2082", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2082" = type { %"class.std::__1::__vector_base.2083" }
%"class.std::__1::__vector_base.2083" = type { %"class.mojo::InlinedStructPtr.2084"*, %"class.mojo::InlinedStructPtr.2084"*, %"class.std::__1::__compressed_pair.2086" }
%"class.mojo::InlinedStructPtr.2084" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2086" = type { %"struct.std::__1::__compressed_pair_elem.2087" }
%"struct.std::__1::__compressed_pair_elem.2087" = type { %"class.mojo::InlinedStructPtr.2084"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.2094" = type { %"class.std::__1::__vector_base.2095" }
%"class.std::__1::__vector_base.2095" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.2096" }
%"class.std::__1::__compressed_pair.2096" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"struct.std::__1::__compressed_pair_elem.2074" = type { %class.GURL* }
%"class.absl::optional.2100" = type { %"class.absl::optional_internal::optional_data.2101" }
%"class.absl::optional_internal::optional_data.2101" = type { %"class.absl::optional_internal::optional_data_base.2102" }
%"class.absl::optional_internal::optional_data_base.2102" = type { %"class.absl::optional_internal::optional_data_dtor_base.2103" }
%"class.absl::optional_internal::optional_data_dtor_base.2103" = type { i8, [7 x i8], %union.anon.2104 }
%union.anon.2104 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.2105, %class.scoped_refptr.2105, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2125", %"class.std::__1::basic_string", %"class.std::__1::vector.2133", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.2105 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.2106", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.2114", %"class.std::__1::vector.2118" }
%"class.base::RefCountedThreadSafe.2106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2107", %"class.std::__1::vector.2107", %"class.std::__1::vector.2107", %"class.std::__1::vector.2107" }
%"class.std::__1::unique_ptr.2114" = type { %"class.std::__1::__compressed_pair.2115" }
%"class.std::__1::__compressed_pair.2115" = type { %"struct.std::__1::__compressed_pair_elem.2116" }
%"struct.std::__1::__compressed_pair_elem.2116" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.2118" = type { %"class.std::__1::__vector_base.2119" }
%"class.std::__1::__vector_base.2119" = type { %"class.std::__1::unique_ptr.2114"*, %"class.std::__1::unique_ptr.2114"*, %"class.std::__1::__compressed_pair.2120" }
%"class.std::__1::__compressed_pair.2120" = type { %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"class.std::__1::unique_ptr.2114"* }
%"class.std::__1::vector.2125" = type { %"class.std::__1::__vector_base.2126" }
%"class.std::__1::__vector_base.2126" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2128" }
%"class.net::HashValue" = type { i32, %union.anon.2127 }
%union.anon.2127 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2133" = type { %"class.std::__1::__vector_base.2134" }
%"class.std::__1::__vector_base.2134" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2137" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2135, i32, [4 x i8] }>
%class.scoped_refptr.2135 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2136", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.2138" }
%"struct.std::__1::__compressed_pair_elem.2138" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.2142" = type { %"class.std::__1::unique_ptr.2143" }
%"class.std::__1::unique_ptr.2143" = type { %"class.std::__1::__compressed_pair.2144" }
%"class.std::__1::__compressed_pair.2144" = type { %"struct.std::__1::__compressed_pair_elem.2145" }
%"struct.std::__1::__compressed_pair_elem.2145" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.2146", %"class.mojo::StructPtr.2196", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2203", %"class.base::TimeDelta", %"class.absl::optional.2203", i32, [4 x i8], %"class.std::__1::vector.2215", %"class.mojo::StructPtr.2229", i8, [7 x i8] }>
%"class.std::__1::vector.2146" = type { %"class.std::__1::__vector_base.2147" }
%"class.std::__1::__vector_base.2147" = type { %"class.mojo::StructPtr.2148"*, %"class.mojo::StructPtr.2148"*, %"class.std::__1::__compressed_pair.2191" }
%"class.mojo::StructPtr.2148" = type { %"class.std::__1::unique_ptr.2149" }
%"class.std::__1::unique_ptr.2149" = type { %"class.std::__1::__compressed_pair.2150" }
%"class.std::__1::__compressed_pair.2150" = type { %"struct.std::__1::__compressed_pair_elem.2151" }
%"struct.std::__1::__compressed_pair_elem.2151" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2152", %"class.base::flat_map.2159", %"class.base::flat_map.2169", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2179", i8, %"class.std::__1::vector.2107", i32, %"class.mojo::StructPtr.2181", %"class.std::__1::vector.2107" }
%"class.mojo::StructPtr.2152" = type { %"class.std::__1::unique_ptr.2153" }
%"class.std::__1::unique_ptr.2153" = type { %"class.std::__1::__compressed_pair.2154" }
%"class.std::__1::__compressed_pair.2154" = type { %"struct.std::__1::__compressed_pair_elem.2155" }
%"struct.std::__1::__compressed_pair_elem.2155" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.2159" = type { %"class.base::internal::flat_tree.2160" }
%"class.base::internal::flat_tree.2160" = type { %"class.std::__1::vector.2161" }
%"class.std::__1::vector.2161" = type { %"class.std::__1::__vector_base.2162" }
%"class.std::__1::__vector_base.2162" = type { %"struct.std::__1::pair.2163"*, %"struct.std::__1::pair.2163"*, %"class.std::__1::__compressed_pair.2164" }
%"struct.std::__1::pair.2163" = type opaque
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.2165" }
%"struct.std::__1::__compressed_pair_elem.2165" = type { %"struct.std::__1::pair.2163"* }
%"class.base::flat_map.2169" = type { %"class.base::internal::flat_tree.2170" }
%"class.base::internal::flat_tree.2170" = type { %"class.std::__1::vector.2171" }
%"class.std::__1::vector.2171" = type { %"class.std::__1::__vector_base.2172" }
%"class.std::__1::__vector_base.2172" = type { %"struct.std::__1::pair.2173"*, %"struct.std::__1::pair.2173"*, %"class.std::__1::__compressed_pair.2174" }
%"struct.std::__1::pair.2173" = type opaque
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"struct.std::__1::pair.2173"* }
%"class.mojo::InlinedStructPtr.2179" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.2181" = type { %"class.std::__1::unique_ptr.2182" }
%"class.std::__1::unique_ptr.2182" = type { %"class.std::__1::__compressed_pair.2183" }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.2107", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2191" = type { %"struct.std::__1::__compressed_pair_elem.2192" }
%"struct.std::__1::__compressed_pair_elem.2192" = type { %"class.mojo::StructPtr.2148"* }
%"class.mojo::StructPtr.2196" = type { %"class.std::__1::unique_ptr.2197" }
%"class.std::__1::unique_ptr.2197" = type { %"class.std::__1::__compressed_pair.2198" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.2199" }
%"struct.std::__1::__compressed_pair_elem.2199" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.937", i32, %"class.absl::optional.937" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.937", i32, %"class.absl::optional.937" }
%"class.absl::optional.2203" = type { %"class.absl::optional_internal::optional_data.2204" }
%"class.absl::optional_internal::optional_data.2204" = type { %"class.absl::optional_internal::optional_data_base.2205" }
%"class.absl::optional_internal::optional_data_base.2205" = type { %"class.absl::optional_internal::optional_data_dtor_base.2206" }
%"class.absl::optional_internal::optional_data_dtor_base.2206" = type { i8, %union.anon.2207 }
%union.anon.2207 = type { %"class.std::__1::vector.2208" }
%"class.std::__1::vector.2208" = type { %"class.std::__1::__vector_base.2209" }
%"class.std::__1::__vector_base.2209" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2210" }
%"class.std::__1::__compressed_pair.2210" = type { %"struct.std::__1::__compressed_pair_elem.2211" }
%"struct.std::__1::__compressed_pair_elem.2211" = type { i32* }
%"class.std::__1::vector.2215" = type { %"class.std::__1::__vector_base.2216" }
%"class.std::__1::__vector_base.2216" = type { %"class.mojo::StructPtr.2217"*, %"class.mojo::StructPtr.2217"*, %"class.std::__1::__compressed_pair.2224" }
%"class.mojo::StructPtr.2217" = type { %"class.std::__1::unique_ptr.2218" }
%"class.std::__1::unique_ptr.2218" = type { %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.937" }
%"class.std::__1::__compressed_pair.2224" = type { %"struct.std::__1::__compressed_pair_elem.2225" }
%"struct.std::__1::__compressed_pair_elem.2225" = type { %"class.mojo::StructPtr.2217"* }
%"class.mojo::StructPtr.2229" = type { %"class.std::__1::unique_ptr.2230" }
%"class.std::__1::unique_ptr.2230" = type { %"class.std::__1::__compressed_pair.2231" }
%"class.std::__1::__compressed_pair.2231" = type { %"struct.std::__1::__compressed_pair_elem.2232" }
%"struct.std::__1::__compressed_pair_elem.2232" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.2107"* }
%"class.absl::optional.2239" = type { %"class.absl::optional_internal::optional_data.2240" }
%"class.absl::optional_internal::optional_data.2240" = type { %"class.absl::optional_internal::optional_data_base.2241" }
%"class.absl::optional_internal::optional_data_base.2241" = type { %"class.absl::optional_internal::optional_data_dtor_base.2242" }
%"class.absl::optional_internal::optional_data_dtor_base.2242" = type { i8, %union.anon.2243 }
%union.anon.2243 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.2244" }
%"class.std::__1::unique_ptr.2244" = type { %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.2246" }
%"struct.std::__1::__compressed_pair_elem.2246" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.2107", %"class.absl::optional.937", %"class.std::__1::vector.2107", %"class.std::__1::vector.2107" }
%"class.std::__1::vector.2107" = type { %"class.std::__1::__vector_base.2108" }
%"class.std::__1::__vector_base.2108" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2109" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.2110" }
%"struct.std::__1::__compressed_pair_elem.2110" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2072" }
%"class.std::__1::unique_ptr.2072" = type { %"class.std::__1::__compressed_pair.2073" }
%"class.std::__1::__compressed_pair.2073" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"class.mojo::ScopedHandleBase.2253" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.2254" = type { %"class.std::__1::unique_ptr.2255" }
%"class.std::__1::unique_ptr.2255" = type { %"class.std::__1::__compressed_pair.2256" }
%"class.std::__1::__compressed_pair.2256" = type { %"struct.std::__1::__compressed_pair_elem.2257" }
%"struct.std::__1::__compressed_pair_elem.2257" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.2258", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.2258" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.2262" = type { %"class.std::__1::__vector_base.2263" }
%"class.std::__1::__vector_base.2263" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.2264" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.2269" = type { %"class.std::__1::__vector_base.2270" }
%"class.std::__1::__vector_base.2270" = type { %"class.mojo::StructPtr.2059"*, %"class.mojo::StructPtr.2059"*, %"class.std::__1::__compressed_pair.2271" }
%"class.std::__1::__compressed_pair.2271" = type { %"struct.std::__1::__compressed_pair_elem.2272" }
%"struct.std::__1::__compressed_pair_elem.2272" = type { %"class.mojo::StructPtr.2059"* }
%"class.v8::Promise" = type { i8 }
%"class.mojo::StructPtr.2280" = type { %"class.std::__1::unique_ptr.2281" }
%"class.std::__1::unique_ptr.2281" = type { %"class.std::__1::__compressed_pair.2282" }
%"class.std::__1::__compressed_pair.2282" = type { %"struct.std::__1::__compressed_pair_elem.2283" }
%"struct.std::__1::__compressed_pair_elem.2283" = type { %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* }
%"class.performance_manager::mojom::blink::WebMemoryMeasurement" = type { %"class.WTF::Vector.2284", %"class.mojo::InlinedStructPtr.2291", %"class.mojo::InlinedStructPtr.2291", %"class.mojo::InlinedStructPtr.2291" }
%"class.WTF::Vector.2284" = type { %"class.WTF::VectorBuffer.2285" }
%"class.WTF::VectorBuffer.2285" = type { %"class.WTF::VectorBufferBase.2286" }
%"class.WTF::VectorBufferBase.2286" = type { %"class.mojo::StructPtr.2287"*, i32, i32 }
%"class.mojo::StructPtr.2287" = type { %"class.std::__1::unique_ptr.2288" }
%"class.std::__1::unique_ptr.2288" = type { %"class.std::__1::__compressed_pair.2289" }
%"class.std::__1::__compressed_pair.2289" = type { %"struct.std::__1::__compressed_pair_elem.2290" }
%"struct.std::__1::__compressed_pair_elem.2290" = type { %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* }
%"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry" = type { %"class.mojo::InlinedStructPtr.2291", %"class.WTF::Vector.2293" }
%"class.WTF::Vector.2293" = type { %"class.WTF::VectorBuffer.2294" }
%"class.WTF::VectorBuffer.2294" = type { %"class.WTF::VectorBufferBase.2295" }
%"class.WTF::VectorBufferBase.2295" = type { %"class.mojo::InlinedStructPtr.2296"*, i32, i32 }
%"class.mojo::InlinedStructPtr.2296" = type <{ %"class.performance_manager::mojom::blink::WebMemoryAttribution", i32, [4 x i8] }>
%"class.performance_manager::mojom::blink::WebMemoryAttribution" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::InlinedStructPtr.2291" = type <{ %"class.performance_manager::mojom::blink::WebMemoryUsage", i32, [4 x i8] }>
%"class.performance_manager::mojom::blink::WebMemoryUsage" = type { i64 }
%"class.ukm::builders::PerformanceAPI_Memory" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr.2479" }
%"class.mojo::StructPtr.2479" = type { %"class.std::__1::unique_ptr.2480" }
%"class.std::__1::unique_ptr.2480" = type { %"class.std::__1::__compressed_pair.2481" }
%"class.std::__1::__compressed_pair.2481" = type { %"struct.std::__1::__compressed_pair_elem.2482" }
%"struct.std::__1::__compressed_pair_elem.2482" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map.2483" }
%"class.base::flat_map.2483" = type { %"class.base::internal::flat_tree.2484" }
%"class.base::internal::flat_tree.2484" = type { %"class.std::__1::vector.2485" }
%"class.std::__1::vector.2485" = type { %"class.std::__1::__vector_base.2486" }
%"class.std::__1::__vector_base.2486" = type { %"struct.std::__1::pair.2487"*, %"struct.std::__1::pair.2487"*, %"class.std::__1::__compressed_pair.2488" }
%"struct.std::__1::pair.2487" = type opaque
%"class.std::__1::__compressed_pair.2488" = type { %"struct.std::__1::__compressed_pair_elem.2489" }
%"struct.std::__1::__compressed_pair_elem.2489" = type { %"struct.std::__1::pair.2487"* }
%"class.blink::HeapVector.2318" = type { %"class.WTF::Vector.2321" }
%"class.WTF::Vector.2321" = type { %"class.WTF::VectorBuffer.2322" }
%"class.WTF::VectorBuffer.2322" = type { %"class.WTF::VectorBufferBase.2323" }
%"class.WTF::VectorBufferBase.2323" = type { %"class.blink::Member.2324"*, i32, i32 }
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2426" }
%"class.blink::MemberBase.2426" = type { %"class.blink::MemoryAttribution"* }
%"class.blink::MemoryAttribution" = type { %"class.blink::IDLDictionaryBase", %"class.blink::Member.2427", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::MemoryAttributionContainer"* }
%"class.blink::MemoryAttributionContainer" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeapVector.2310" = type { %"class.WTF::Vector.2313" }
%"class.WTF::Vector.2313" = type { %"class.WTF::VectorBuffer.2314" }
%"class.WTF::VectorBuffer.2314" = type { %"class.WTF::VectorBufferBase.2315" }
%"class.WTF::VectorBufferBase.2315" = type { %"class.blink::Member.2316"*, i32, i32 }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::MemoryBreakdownEntry"* }
%"class.blink::MemoryBreakdownEntry" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.blink::HeapVector.2318", i64, %"class.WTF::Vector.360" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::MemoryMeasurement" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.blink::HeapVector.2310", i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.2470" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ = comdat any

$_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20MemoryBreakdownEntryEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_20MemoryBreakdownEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17MemoryAttributionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17MemoryAttributionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23MeasureMemoryControllerEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23MeasureMemoryControllerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23MeasureMemoryControllerEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [61 x i8] c"performance.measureUserAgentSpecificMemory is not available.\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"performance.measureUserAgentSpecificMemory is not supported in detached iframes.\00", align 1
@_ZN5blink8features38kWebMeasureMemoryViaPerformanceManagerE = external global %"struct.base::Feature", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase47is_performance_manager_instrumentation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase38is_force_eager_measure_memory_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Shared\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"DOM\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20MemoryBreakdownEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MemoryBreakdownEntry>, WTF::VectorTraits<blink::Member<blink::MemoryBreakdownEntry> > >]\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"JavaScript\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17MemoryAttributionEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MemoryAttribution>, WTF::VectorTraits<blink::Member<blink::MemoryAttribution> > >]\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"cross-origin-url\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"DedicatedWorkerGlobalScope\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Window\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"cross-origin-aggregated\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"ServiceWorkerGlobalScope\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"SharedWorkerGlobalScope\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23MeasureMemoryControllerEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MeasureMemoryController]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23MeasureMemoryControllerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23MeasureMemoryControllerEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink23MeasureMemoryControllerC1EN4base7PassKeyIS0_EEPN2v87IsolateENS4_5LocalINS4_7ContextEEENS7_INS4_7Promise8ResolverEEE = hidden unnamed_addr alias void (%"class.blink::MeasureMemoryController"*, %"class.v8::Isolate"*, %"class.v8::Context"*, %"class.v8::Promise::Resolver"*), void (%"class.blink::MeasureMemoryController"*, %"class.v8::Isolate"*, %"class.v8::Context"*, %"class.v8::Promise::Resolver"*)* @_ZN5blink23MeasureMemoryControllerC2EN4base7PassKeyIS0_EEPN2v87IsolateENS4_5LocalINS4_7ContextEEENS7_INS4_7Promise8ResolverEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MeasureMemoryControllerC2EN4base7PassKeyIS0_EEPN2v87IsolateENS4_5LocalINS4_7ContextEEENS7_INS4_7Promise8ResolverEEE(%"class.blink::MeasureMemoryController"*, %"class.v8::Isolate"*, %"class.v8::Context"*, %"class.v8::Promise::Resolver"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 1
  %7 = icmp eq %"class.v8::Context"* %2, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Context"* %2 to i64*
  %10 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %11 = tail call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %10, i64* nonnull %9) #10
  %12 = bitcast i64* %11 to %"class.v8::Context"*
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"class.v8::Context"* [ %12, %8 ], [ null, %4 ]
  %15 = getelementptr inbounds %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::Context"* %14, %"class.v8::Context"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %17, align 8
  %18 = icmp eq %"class.v8::Promise::Resolver"* %3, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.v8::Promise::Resolver"* %3 to i64*
  %21 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %22 = bitcast %"class.blink::TraceWrapperV8Reference"* %16 to i64*
  %23 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %21, i64* nonnull %20, i64* %22, i1 zeroext false) #10
  %24 = ptrtoint i64* %23 to i64
  store atomic i64 %24, i64* %22 monotonic, align 8
  br label %25

25:                                               ; preds = %13, %19
  %26 = bitcast %"class.blink::TraceWrapperV8Reference"* %16 to %"class.blink::TraceWrapperV8Reference.237"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.237"* dereferenceable(8) %26) #10
  %27 = bitcast %"class.blink::ScopedPersistent"* %6 to i64**
  tail call void @_ZN2v82V88MakeWeakEPPm(i64** %27) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23MeasureMemoryController5TraceEPNS_7VisitorE(%"class.blink::MeasureMemoryController"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::TraceWrapperV8Reference"* %3 to %"class.blink::TraceWrapperV8Reference.237"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.237"* dereferenceable(8) %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MeasureMemoryController16StartMeasurementEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.2429", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::Persistent.2430", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #10
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features38kWebMeasureMemoryViaPerformanceManagerE) #10
  %11 = xor i1 %10, true
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase47is_performance_manager_instrumentation_enabled_E, align 1
  %13 = icmp eq i8 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %33, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::ExecutionContext"* %9 to i1 (%"class.blink::ExecutionContext"*)***
  %17 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %17, i64 1
  %19 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::ExecutionContext"* %9) #10
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 -1, i32 8
  %24 = bitcast i32* %23 to %"class.blink::LocalDOMWindow"*
  br i1 %22, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds i32, i32* %23, i64 18
  %27 = bitcast i32* %26 to %"class.blink::LocalFrame"**
  %28 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %27, align 8
  %29 = icmp eq %"class.blink::LocalFrame"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %24) #10
  %32 = icmp eq %"class.blink::Document"* %31, null
  br i1 %32, label %35, label %37

33:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i8* null) #10
  %34 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false)
  br label %202

35:                                               ; preds = %30, %21, %25
  tail call void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i8* null) #10
  %36 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false)
  br label %202

37:                                               ; preds = %30, %15
  %38 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %39) #10
  %41 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.v8::Context"*, %"class.v8::Context"** %41, align 8
  %43 = icmp eq %"class.v8::Context"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %46 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %45, align 8
  %47 = bitcast %"class.v8::Context"* %42 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %46, i64 %48) #10
  %50 = bitcast i64* %49 to %"class.v8::Context"*
  br label %51

51:                                               ; preds = %37, %44
  %52 = phi i64* [ %49, %44 ], [ null, %37 ]
  %53 = phi %"class.v8::Context"* [ %50, %44 ], [ null, %37 ]
  %54 = call %"class.v8::Promise::Resolver"* @_ZN2v87Promise8Resolver3NewENS_5LocalINS_7ContextEEE(%"class.v8::Context"* %53) #10
  %55 = icmp eq %"class.v8::Promise::Resolver"* %54, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #10
  %58 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %59, i64 5
  %61 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, align 8
  call void %61(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %57) #10
  %62 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false)
  br label %201

63:                                               ; preds = %51
  %64 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #10
  %65 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_force_eager_measure_memory_enabled_E, align 1, !range !2
  %66 = zext i8 %65 to i32
  %67 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_23MeasureMemoryControllerEEEPhm(i64 24) #10
  %68 = bitcast i8* %67 to %"class.blink::MeasureMemoryController"*
  %69 = bitcast i8* %67 to %"class.v8::Isolate"**
  store %"class.v8::Isolate"* %39, %"class.v8::Isolate"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = icmp eq %"class.v8::Context"* %53, null
  %72 = bitcast %"class.v8::Isolate"* %39 to %"class.v8::internal::Isolate"*
  br i1 %71, label %76, label %73

73:                                               ; preds = %63
  %74 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %72, i64* nonnull %52) #10
  %75 = bitcast i64* %74 to %"class.v8::Context"*
  br label %76

76:                                               ; preds = %63, %73
  %77 = phi %"class.v8::Context"* [ %75, %73 ], [ null, %63 ]
  %78 = bitcast i8* %70 to %"class.v8::Context"**
  store %"class.v8::Context"* %77, %"class.v8::Context"** %78, align 8
  %79 = getelementptr inbounds i8, i8* %67, i64 16
  %80 = bitcast i8* %79 to i64**
  store i64* null, i64** %80, align 8
  %81 = bitcast %"class.v8::Promise::Resolver"* %54 to i64*
  %82 = bitcast i8* %79 to i64*
  %83 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %72, i64* nonnull %81, i64* %82, i1 zeroext false) #10
  %84 = ptrtoint i64* %83 to i64
  store atomic i64 %84, i64* %82 monotonic, align 8
  %85 = bitcast i8* %79 to %"class.blink::TraceWrapperV8Reference.237"*
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.237"* dereferenceable(8) %85) #10
  %86 = bitcast i8* %70 to i64**
  call void @_ZN2v82V88MakeWeakEPPm(i64** %86) #10
  %87 = getelementptr inbounds i8, i8* %67, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  %91 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %16, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %91, i64 1
  %93 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::ExecutionContext"* %9) #10
  %95 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %94, label %96, label %162

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 -1, i32 8
  %98 = bitcast i32* %97 to %"class.blink::LocalDOMWindow"*
  %99 = select i1 %95, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %98
  %100 = bitcast %"class.base::OnceCallback.2429"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %99) #10
  %102 = call %"class.blink::DocumentResourceCoordinator"* @_ZN5blink8Document22GetResourceCoordinatorEv(%"class.blink::Document"* %101) #10
  %103 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #10
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)* @_ZN5blink23MeasureMemoryController19MeasurementCompleteEN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEE to i64), i64 0>, <2 x i64>* %5, align 16
  %104 = bitcast %"class.blink::Persistent.2430"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10
  %105 = getelementptr inbounds %"class.blink::Persistent.2430", %"class.blink::Persistent.2430"* %7, i64 0, i32 0
  %106 = bitcast %"class.blink::Persistent.2430"* %7 to i8**
  store i8* %67, i8** %106, align 8, !alias.scope !3
  %107 = getelementptr inbounds %"class.blink::Persistent.2430", %"class.blink::Persistent.2430"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %107, align 8, !alias.scope !3
  %108 = ptrtoint i8* %67 to i64
  switch i64 %108, label %109 [
    i64 0, label %135
    i64 -1, label %135
  ]

109:                                              ; preds = %96
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !3
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #10, !noalias !3
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !6

114:                                              ; preds = %109
  %115 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #10
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8, !noalias !3
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %120, align 8, !noalias !3
  %122 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %122, align 8, !noalias !3
  %124 = icmp eq %"class.blink::PersistentNode"* %123, null
  br i1 %124, label %125, label %128, !prof !6

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %126) #10
  %127 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %122, align 8
  br label %128

128:                                              ; preds = %125, %116
  %129 = phi %"class.blink::PersistentNode"* [ %127, %125 ], [ %123, %116 ]
  %130 = bitcast %"class.blink::PersistentNode"* %129 to i64*
  %131 = load i64, i64* %130, align 8, !noalias !3
  %132 = bitcast %"class.blink::PersistentRegion"* %121 to i64*
  store i64 %131, i64* %132, align 8, !noalias !3
  %133 = bitcast %"class.blink::PersistentNode"* %129 to %"class.blink::PersistentBase.2431"**
  store %"class.blink::PersistentBase.2431"* %105, %"class.blink::PersistentBase.2431"** %133, align 8, !noalias !3
  %134 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %129, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %134, align 8
  store %"class.blink::PersistentNode"* %129, %"class.blink::PersistentNode"** %107, align 8, !alias.scope !3
  br label %135

135:                                              ; preds = %128, %96, %96
  %136 = call i8* @_Znwm(i64 64) #11, !noalias !7
  %137 = bitcast i8* %136 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %137, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2280"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent.2430"* nonnull dereferenceable(16) %7) #10, !noalias !7
  %138 = bitcast %"class.base::OnceCallback.2429"* %4 to i8**
  store i8* %136, i8** %138, align 8, !alias.scope !7
  call void @_ZN5blink27DocumentResourceCoordinator31OnWebMemoryMeasurementRequestedEN19performance_manager5mojom25WebMemoryMeasurement_ModeEN4base12OnceCallbackIFvN4mojo9StructPtrINS2_5blink20WebMemoryMeasurementEEEEEE(%"class.blink::DocumentResourceCoordinator"* %102, i32 %66, %"class.base::OnceCallback.2429"* nonnull %4) #10
  %139 = getelementptr inbounds %"class.base::OnceCallback.2429", %"class.base::OnceCallback.2429"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %139) #10
  %140 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %107, align 8
  %141 = icmp eq %"class.blink::PersistentNode"* %140, null
  br i1 %141, label %161, label %142

142:                                              ; preds = %135
  %143 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %144 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %143, i64 0, i32 1
  %145 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %144) #10
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %149, !prof !6

147:                                              ; preds = %142
  %148 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %144, i8* %148) #10
  br label %149

149:                                              ; preds = %147, %142
  %150 = phi i8* [ %148, %147 ], [ %145, %142 ]
  %151 = bitcast i8* %150 to %"class.blink::ThreadState"**
  %152 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %153, align 8
  %155 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %107, align 8
  %156 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %154, i64 0, i32 0, i32 0
  %157 = bitcast %"class.blink::PersistentRegion"* %154 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.blink::PersistentNode"* %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %155, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %160, align 8
  store %"class.blink::PersistentNode"* %155, %"class.blink::PersistentNode"** %156, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %107, align 8
  br label %161

161:                                              ; preds = %135, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  br label %198

162:                                              ; preds = %76
  %163 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 -1, i32 22
  %164 = bitcast %"class.blink::DOMTimerCoordinator"* %163 to %"class.blink::WorkerGlobalScope"*
  %165 = select i1 %95, %"class.blink::WorkerGlobalScope"* null, %"class.blink::WorkerGlobalScope"* %164
  %166 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %165, i64 0, i32 0, i32 1
  %167 = bitcast %"class.blink::ExecutionContext.base"* %166 to %"class.blink::ExecutionContext"*
  %168 = bitcast %"class.blink::ExecutionContext.base"* %166 to i1 (%"class.blink::ExecutionContext"*)***
  %169 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %168, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %169, i64 8
  %171 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %170, align 8
  %172 = call zeroext i1 %171(%"class.blink::ExecutionContext"* %167) #10
  %173 = select i1 %172, i32 3, i32 4
  %174 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %165, i64 0, i32 0, i32 1, i32 5
  %175 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %174, align 8
  %176 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"* %165) #10
  %177 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %176, i64 0, i32 4, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %197, label %180

180:                                              ; preds = %162
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #10
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !6

194:                                              ; preds = %185
  call void @llvm.trap() #10
  unreachable

195:                                              ; preds = %185
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %186, align 4
  br label %197

197:                                              ; preds = %162, %180, %195
  call void @_ZN5blink22LocalWebMemoryMeasurer16StartMeasurementEPN2v87IsolateEN19performance_manager5mojom25WebMemoryMeasurement_ModeEPNS_23MeasureMemoryControllerENS5_26WebMemoryAttribution_ScopeEN3WTF6StringE(%"class.v8::Isolate"* %175, i32 %66, %"class.blink::MeasureMemoryController"* %68, i32 %173, %"class.WTF::StringImpl"* %178) #10
  br label %198

198:                                              ; preds = %197, %161
  %199 = call %"class.v8::Promise"* @_ZN2v87Promise8Resolver10GetPromiseEv(%"class.v8::Promise::Resolver"* nonnull %54) #10
  %200 = bitcast %"class.v8::Promise"* %199 to %"class.v8::Value"*
  call void @_ZN5blink13ScriptPromiseC1EPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptPromise"* %0, %"class.blink::ScriptState"* %1, %"class.v8::Value"* %200) #10
  br label %201

201:                                              ; preds = %198, %56
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #10
  br label %202

202:                                              ; preds = %201, %35, %33
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState18ThrowSecurityErrorEPKcS2_(%"class.blink::ExceptionState"*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Promise::Resolver"* @_ZN2v87Promise8Resolver3NewENS_5LocalINS_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare %"class.v8::Promise"* @_ZN2v87Promise8Resolver10GetPromiseEv(%"class.v8::Promise::Resolver"*) local_unnamed_addr #2

declare void @_ZN5blink13ScriptPromiseC1EPNS_11ScriptStateEN2v85LocalINS3_5ValueEEE(%"class.blink::ScriptPromise"*, %"class.blink::ScriptState"*, %"class.v8::Value"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MeasureMemoryController19MeasurementCompleteEN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEE(%"class.blink::MeasureMemoryController"* nocapture, %"class.mojo::StructPtr.2280"* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.ukm::builders::PerformanceAPI_Memory", align 8
  %4 = alloca %"class.blink::HeapVector.2318", align 8
  %5 = alloca %"class.WTF::Vector.360", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::HeapVector.2318", align 8
  %9 = alloca %"class.blink::MemoryAttribution"*, align 8
  %10 = alloca %"class.WTF::Vector.360", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.blink::HeapVector.2310", align 8
  %13 = alloca %"class.blink::MemoryBreakdownEntry"*, align 8
  %14 = alloca %"class.blink::MemoryBreakdownEntry"*, align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::MemoryBreakdownEntry"*, align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.blink::MemoryBreakdownEntry"*, align 8
  %19 = alloca %"class.v8::HandleScope", align 8
  %20 = alloca %"class.v8::MicrotasksScope", align 8
  %21 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %21, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %1106, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::HandleScope"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 0
  %27 = bitcast %"class.v8::HandleScope"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %19, %"class.v8::Isolate"* %28) #10
  %29 = load %"class.v8::Context"*, %"class.v8::Context"** %21, align 8
  %30 = icmp eq %"class.v8::Context"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::MeasureMemoryController"* %0 to %"class.v8::internal::Isolate"**
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = bitcast %"class.v8::Context"* %29 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %33, i64 %35) #10
  %37 = bitcast i64* %36 to %"class.v8::Context"*
  br label %38

38:                                               ; preds = %24, %31
  %39 = phi %"class.v8::Context"* [ %37, %31 ], [ null, %24 ]
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %39) #10
  %40 = bitcast %"class.v8::MicrotasksScope"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  %41 = bitcast %"class.v8::MicrotasksScope"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %42 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %20, %"class.v8::Isolate"* %42, i32 1) #10
  %43 = bitcast %"class.blink::HeapVector.2310"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.blink::HeapVector.2310", %"class.blink::HeapVector.2310"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::HeapVector.2310", %"class.blink::HeapVector.2310"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.blink::HeapVector.2310", %"class.blink::HeapVector.2310"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #10
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2280", %"class.mojo::StructPtr.2280"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %49 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.mojo::StructPtr.2287"*, %"class.mojo::StructPtr.2287"** %49, align 8
  %51 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %48, i64 0, i32 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %81, label %56

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.blink::HeapVector.2310", %"class.blink::HeapVector.2310"* %12, i64 0, i32 0
  %58 = bitcast %"class.blink::MemoryBreakdownEntry"** %13 to i8*
  %59 = bitcast %"class.blink::HeapVector.2318"* %8 to i8*
  %60 = getelementptr inbounds %"class.blink::HeapVector.2318", %"class.blink::HeapVector.2318"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::HeapVector.2318", %"class.blink::HeapVector.2318"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.blink::HeapVector.2318", %"class.blink::HeapVector.2318"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %63 = getelementptr inbounds %"class.blink::HeapVector.2318", %"class.blink::HeapVector.2318"* %8, i64 0, i32 0
  %64 = bitcast %"class.blink::MemoryAttribution"** %9 to i8*
  %65 = bitcast %"class.WTF::String"* %7 to i8*
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::MemoryAttribution"** %9 to i8**
  %70 = bitcast %"class.WTF::Vector.360"* %10 to i8*
  %71 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %10, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %10, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.WTF::Vector.360"* %10 to i64*
  %76 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %10, i64 0, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.360"* %10 to i8**
  %78 = bitcast %"class.blink::MemoryBreakdownEntry"** %13 to i8**
  br label %421

79:                                               ; preds = %863
  %80 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  br label %81

81:                                               ; preds = %79, %38
  %82 = phi %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* [ %80, %79 ], [ %48, %38 ]
  %83 = getelementptr inbounds %"class.blink::HeapVector.2310", %"class.blink::HeapVector.2310"* %12, i64 0, i32 0
  %84 = bitcast %"class.blink::MemoryBreakdownEntry"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %82, i64 0, i32 2
  %86 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #10
  %87 = call fastcc %"class.blink::MemoryBreakdownEntry"* @_ZN5blink12_GLOBAL__N_127CreateUnattributedBreakdownERKN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink14WebMemoryUsageEEERKN3WTF6StringE(%"class.mojo::InlinedStructPtr.2291"* dereferenceable(16) %85, %"class.WTF::String"* nonnull dereferenceable(8) %15) #10
  store %"class.blink::MemoryBreakdownEntry"* %87, %"class.blink::MemoryBreakdownEntry"** %14, align 8
  %88 = load i32, i32* %46, align 4
  %89 = load i32, i32* %45, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %105, label %91, !prof !6

91:                                               ; preds = %81
  %92 = ptrtoint %"class.blink::MemoryBreakdownEntry"* %87 to i64
  %93 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %94 = zext i32 %88 to i64
  %95 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %93, i64 %94
  %96 = bitcast %"class.blink::Member.2316"* %95 to i64*
  store atomic i64 %92, i64* %96 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %91
  %100 = bitcast %"class.blink::MemoryBreakdownEntry"* %87 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #10
  br label %102

102:                                              ; preds = %99, %91
  %103 = load i32, i32* %46, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %46, align 4
  br label %106

105:                                              ; preds = %81
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2313"* nonnull %83, %"class.blink::MemoryBreakdownEntry"** nonnull dereferenceable(8) %14) #10
  br label %106

106:                                              ; preds = %105, %102
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #10
  br label %123

123:                                              ; preds = %122, %119, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %124 = bitcast %"class.blink::MemoryBreakdownEntry"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #10
  %125 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %126 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %125, i64 0, i32 3
  %127 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #10
  %128 = call fastcc %"class.blink::MemoryBreakdownEntry"* @_ZN5blink12_GLOBAL__N_127CreateUnattributedBreakdownERKN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink14WebMemoryUsageEEERKN3WTF6StringE(%"class.mojo::InlinedStructPtr.2291"* dereferenceable(16) %126, %"class.WTF::String"* nonnull dereferenceable(8) %17) #10
  store %"class.blink::MemoryBreakdownEntry"* %128, %"class.blink::MemoryBreakdownEntry"** %16, align 8
  %129 = load i32, i32* %46, align 4
  %130 = load i32, i32* %45, align 8
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %146, label %132, !prof !6

132:                                              ; preds = %123
  %133 = ptrtoint %"class.blink::MemoryBreakdownEntry"* %128 to i64
  %134 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %135 = zext i32 %129 to i64
  %136 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %134, i64 %135
  %137 = bitcast %"class.blink::Member.2316"* %136 to i64*
  store atomic i64 %133, i64* %137 monotonic, align 8
  %138 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %132
  %141 = bitcast %"class.blink::MemoryBreakdownEntry"* %128 to i8*
  %142 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %141) #10
  br label %143

143:                                              ; preds = %140, %132
  %144 = load i32, i32* %46, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %46, align 4
  br label %147

146:                                              ; preds = %123
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2313"* nonnull %83, %"class.blink::MemoryBreakdownEntry"** nonnull dereferenceable(8) %16) #10
  br label %147

147:                                              ; preds = %146, %143
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #10
  br label %164

164:                                              ; preds = %163, %160, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #10
  %165 = bitcast %"class.blink::MemoryBreakdownEntry"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #10
  %166 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #10
  %167 = bitcast i8* %166 to %"class.blink::MemoryBreakdownEntry"*
  call void @_ZN5blink20MemoryBreakdownEntryC1Ev(%"class.blink::MemoryBreakdownEntry"* %167) #10
  %168 = getelementptr inbounds i8, i8* %166, i64 -4
  %169 = bitcast i8* %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = or i16 %170, 1
  store atomic i16 %171, i16* %169 release, align 2
  %172 = getelementptr inbounds i8, i8* %166, i64 32
  %173 = bitcast i8* %172 to i64*
  store i64 0, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %166, i64 9
  store i8 1, i8* %174, align 1
  %175 = bitcast %"class.blink::HeapVector.2318"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink20MemoryBreakdownEntry14setAttributionERKNS_10HeapVectorINS_6MemberINS_17MemoryAttributionEEELj0EEE(%"class.blink::MemoryBreakdownEntry"* %167, %"class.blink::HeapVector.2318"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #10
  %176 = bitcast %"class.WTF::Vector.360"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 16, i1 false) #10
  call void @_ZN5blink20MemoryBreakdownEntry8setTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MemoryBreakdownEntry"* %167, %"class.WTF::Vector.360"* nonnull dereferenceable(16) %5) #10
  %177 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %5, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::String"*, %"class.WTF::String"** %177, align 8
  %179 = icmp eq %"class.WTF::String"* %178, null
  br i1 %179, label %214, label %180, !prof !14

180:                                              ; preds = %164
  %181 = bitcast %"class.WTF::String"* %178 to i8*
  %182 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %5, i64 0, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %212, label %185, !prof !6

185:                                              ; preds = %180
  %186 = zext i32 %183 to i64
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %186
  br label %188

188:                                              ; preds = %206, %185
  %189 = phi %"class.WTF::String"* [ %207, %206 ], [ %178, %185 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #10
  br label %206

206:                                              ; preds = %205, %202, %188
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %208 = icmp eq %"class.WTF::String"* %207, %187
  br i1 %208, label %209, label %188

209:                                              ; preds = %206
  store i32 0, i32* %182, align 4
  %210 = bitcast %"class.WTF::Vector.360"* %5 to i8**
  %211 = load i8*, i8** %210, align 8
  br label %212

212:                                              ; preds = %209, %180
  %213 = phi i8* [ %211, %209 ], [ %181, %180 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %213) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %177, align 8
  br label %214

214:                                              ; preds = %212, %164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #10
  %215 = bitcast %"class.blink::MemoryBreakdownEntry"** %18 to i8**
  store i8* %166, i8** %215, align 8
  %216 = load i32, i32* %46, align 4
  %217 = load i32, i32* %45, align 8
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %232, label %219, !prof !6

219:                                              ; preds = %214
  %220 = ptrtoint i8* %166 to i64
  %221 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %222 = zext i32 %216 to i64
  %223 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %221, i64 %222
  %224 = bitcast %"class.blink::Member.2316"* %223 to i64*
  store atomic i64 %220, i64* %224 monotonic, align 8
  %225 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %219
  %228 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #10
  br label %229

229:                                              ; preds = %227, %219
  %230 = load i32, i32* %46, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %46, align 4
  br label %234

232:                                              ; preds = %214
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2313"* nonnull %83, %"class.blink::MemoryBreakdownEntry"** nonnull dereferenceable(8) %18) #10
  %233 = load i32, i32* %46, align 4
  br label %234

234:                                              ; preds = %232, %229
  %235 = phi i32 [ %231, %229 ], [ %233, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #10
  %236 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %237 = zext i32 %235 to i64
  %238 = icmp ugt i32 %235, 1
  br i1 %238, label %239, label %402

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %236, i64 %237
  %241 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %240, i64 -1
  %242 = icmp ugt %"class.blink::Member.2316"* %241, %236
  br i1 %242, label %243, label %408

243:                                              ; preds = %239, %395
  %244 = phi i64 [ %246, %395 ], [ %237, %239 ]
  %245 = phi %"class.blink::Member.2316"* [ %396, %395 ], [ %236, %239 ]
  %246 = add nsw i64 %244, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %395, label %248

248:                                              ; preds = %243
  %249 = icmp eq i64 %244, 0
  br i1 %249, label %250, label %266

250:                                              ; preds = %248, %250
  %251 = call i32 @_ZN4base7RandIntEii(i32 0, i32 2147483647) #10
  %252 = icmp sgt i32 %251, -1
  br i1 %252, label %370, label %250

253:                                              ; preds = %370, %253
  %254 = call i32 @_ZN4base7RandIntEii(i32 0, i32 2147483647) #10
  %255 = icmp sgt i32 %254, -1
  br i1 %255, label %256, label %253

256:                                              ; preds = %253
  %257 = and i32 %371, 2097151
  %258 = zext i32 %251 to i64
  %259 = zext i32 %257 to i64
  %260 = shl nuw nsw i64 %258, 21
  %261 = or i64 %260, %259
  %262 = shl i64 %261, 22
  %263 = and i32 %254, 4194303
  %264 = zext i32 %263 to i64
  %265 = or i64 %262, %264
  br label %373

266:                                              ; preds = %248
  %267 = call i64 @llvm.ctlz.i64(i64 %244, i1 true) #10, !range !15
  %268 = lshr i64 9223372036854775807, %267
  %269 = and i64 %268, %244
  %270 = icmp eq i64 %269, 0
  %271 = select i1 %270, i64 63, i64 64
  %272 = sub nsw i64 %271, %267
  %273 = udiv i64 %272, 31
  %274 = urem i64 %272, 31
  %275 = icmp ne i64 %274, 0
  %276 = zext i1 %275 to i64
  %277 = add nuw nsw i64 %273, %276
  %278 = udiv i64 %272, %277
  %279 = icmp ult i64 %278, 64
  %280 = shl i64 -1, %278
  %281 = and i64 %280, 2147483648
  %282 = select i1 %279, i64 %281, i64 0
  %283 = sub nuw nsw i64 2147483648, %282
  %284 = udiv i64 %282, %277
  %285 = icmp ugt i64 %283, %284
  br i1 %285, label %286, label %296

286:                                              ; preds = %266
  %287 = add nuw nsw i64 %277, 1
  %288 = udiv i64 %272, %287
  %289 = urem i64 %272, %287
  %290 = icmp ult i64 %288, 64
  br i1 %290, label %291, label %294

291:                                              ; preds = %286
  %292 = shl i64 -1, %288
  %293 = and i64 %292, 2147483648
  br label %296

294:                                              ; preds = %286
  %295 = sub nsw i64 %287, %289
  br label %303

296:                                              ; preds = %291, %266
  %297 = phi i64 [ %288, %291 ], [ %278, %266 ]
  %298 = phi i64 [ %287, %291 ], [ %277, %266 ]
  %299 = phi i64 [ %293, %291 ], [ %282, %266 ]
  %300 = urem i64 %272, %298
  %301 = sub nsw i64 %298, %300
  %302 = icmp ult i64 %297, 63
  br i1 %302, label %313, label %303

303:                                              ; preds = %296, %294
  %304 = phi i64 [ %288, %294 ], [ %297, %296 ]
  %305 = phi i64 [ %287, %294 ], [ %298, %296 ]
  %306 = phi i64 [ %295, %294 ], [ %301, %296 ]
  %307 = phi i64 [ 0, %294 ], [ %299, %296 ]
  %308 = icmp eq i64 %304, 0
  %309 = sub i64 64, %304
  %310 = lshr i64 -1, %309
  %311 = select i1 %308, i64 0, i64 %310
  %312 = add i64 %304, 1
  br label %323

313:                                              ; preds = %296
  %314 = add nuw nsw i64 %297, 1
  %315 = shl i64 -1, %314
  %316 = and i64 %315, 2147483648
  %317 = icmp eq i64 %297, 0
  %318 = sub nuw nsw i64 64, %297
  %319 = lshr i64 -1, %318
  %320 = select i1 %317, i64 0, i64 %319
  %321 = sub nuw nsw i64 63, %297
  %322 = lshr i64 -1, %321
  br label %323

323:                                              ; preds = %313, %303
  %324 = phi i64 [ %312, %303 ], [ %314, %313 ]
  %325 = phi i64 [ %311, %303 ], [ %320, %313 ]
  %326 = phi i64 [ 0, %303 ], [ %316, %313 ]
  %327 = phi i64 [ %307, %303 ], [ %299, %313 ]
  %328 = phi i64 [ %306, %303 ], [ %301, %313 ]
  %329 = phi i64 [ %305, %303 ], [ %298, %313 ]
  %330 = phi i64 [ %304, %303 ], [ %297, %313 ]
  %331 = phi i64 [ -1, %303 ], [ %322, %313 ]
  %332 = icmp eq i64 %328, 0
  %333 = icmp ult i64 %330, 64
  %334 = icmp ult i64 %328, %329
  %335 = icmp ult i64 %330, 63
  br label %336

336:                                              ; preds = %367, %323
  br i1 %332, label %340, label %337

337:                                              ; preds = %336, %346
  %338 = phi i64 [ %351, %346 ], [ 0, %336 ]
  %339 = phi i64 [ %350, %346 ], [ 0, %336 ]
  br label %342

340:                                              ; preds = %346, %336
  %341 = phi i64 [ 0, %336 ], [ %350, %346 ]
  br i1 %334, label %353, label %367

342:                                              ; preds = %342, %337
  %343 = call i32 @_ZN4base7RandIntEii(i32 0, i32 2147483647) #10
  %344 = sext i32 %343 to i64
  %345 = icmp ugt i64 %327, %344
  br i1 %345, label %346, label %342

346:                                              ; preds = %342
  %347 = shl i64 %339, %330
  %348 = select i1 %333, i64 %347, i64 0
  %349 = and i64 %325, %344
  %350 = add i64 %349, %348
  %351 = add nuw i64 %338, 1
  %352 = icmp eq i64 %351, %328
  br i1 %352, label %340, label %337

353:                                              ; preds = %340, %360
  %354 = phi i64 [ %365, %360 ], [ %328, %340 ]
  %355 = phi i64 [ %364, %360 ], [ %341, %340 ]
  br label %356

356:                                              ; preds = %356, %353
  %357 = call i32 @_ZN4base7RandIntEii(i32 0, i32 2147483647) #10
  %358 = sext i32 %357 to i64
  %359 = icmp ugt i64 %326, %358
  br i1 %359, label %360, label %356

360:                                              ; preds = %356
  %361 = shl i64 %355, %324
  %362 = select i1 %335, i64 %361, i64 0
  %363 = and i64 %331, %358
  %364 = add i64 %363, %362
  %365 = add nsw i64 %354, 1
  %366 = icmp eq i64 %365, %329
  br i1 %366, label %367, label %353

367:                                              ; preds = %360, %340
  %368 = phi i64 [ %341, %340 ], [ %364, %360 ]
  %369 = icmp ult i64 %368, %244
  br i1 %369, label %373, label %336

370:                                              ; preds = %250, %370
  %371 = call i32 @_ZN4base7RandIntEii(i32 0, i32 2147483647) #10
  %372 = icmp sgt i32 %371, -1
  br i1 %372, label %253, label %370

373:                                              ; preds = %367, %256
  %374 = phi i64 [ %265, %256 ], [ %368, %367 ]
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %395, label %376

376:                                              ; preds = %373
  %377 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %245, i64 %374
  %378 = bitcast %"class.blink::Member.2316"* %245 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = bitcast %"class.blink::Member.2316"* %377 to i64*
  %381 = load i64, i64* %380, align 8
  store atomic i64 %381, i64* %378 monotonic, align 8
  store atomic i64 %379, i64* %380 monotonic, align 8
  %382 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %388, label %384

384:                                              ; preds = %376
  %385 = bitcast %"class.blink::Member.2316"* %245 to i8**
  %386 = load i8*, i8** %385, align 8
  %387 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %386) #10
  br label %388

388:                                              ; preds = %384, %376
  %389 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %395, label %391

391:                                              ; preds = %388
  %392 = bitcast %"class.blink::Member.2316"* %377 to i8**
  %393 = load i8*, i8** %392, align 8
  %394 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %393) #10
  br label %395

395:                                              ; preds = %391, %388, %373, %243
  %396 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %245, i64 1
  %397 = icmp ult %"class.blink::Member.2316"* %396, %241
  br i1 %397, label %243, label %398

398:                                              ; preds = %395
  %399 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %400 = load i32, i32* %46, align 4
  %401 = zext i32 %400 to i64
  br label %402

402:                                              ; preds = %398, %234
  %403 = phi i64 [ %401, %398 ], [ %237, %234 ]
  %404 = phi i32 [ %400, %398 ], [ %235, %234 ]
  %405 = phi %"class.blink::Member.2316"* [ %399, %398 ], [ %236, %234 ]
  %406 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %405, i64 %403
  %407 = icmp eq i32 %404, 0
  br i1 %407, label %930, label %408

408:                                              ; preds = %239, %402
  %409 = phi %"class.blink::Member.2316"* [ %406, %402 ], [ %240, %239 ]
  %410 = phi %"class.blink::Member.2316"* [ %405, %402 ], [ %236, %239 ]
  %411 = ptrtoint %"class.blink::Member.2316"* %410 to i64
  %412 = getelementptr %"class.blink::Member.2316", %"class.blink::Member.2316"* %409, i64 -1, i32 0, i32 0
  %413 = ptrtoint %"class.blink::MemoryBreakdownEntry"** %412 to i64
  %414 = sub i64 %413, %411
  %415 = lshr i64 %414, 3
  %416 = add nuw nsw i64 %415, 1
  %417 = and i64 %416, 7
  %418 = icmp ult i64 %414, 56
  br i1 %418, label %913, label %419

419:                                              ; preds = %408
  %420 = sub nsw i64 %416, %417
  br label %866

421:                                              ; preds = %863, %56
  %422 = phi %"class.mojo::StructPtr.2287"* [ %50, %56 ], [ %864, %863 ]
  %423 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %422, i64 0, i32 0, i32 0, i32 0, i32 0
  %424 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %423, align 8
  %425 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %424, i64 0, i32 0, i32 1
  %426 = load i32, i32* %425, align 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %863, label %428

428:                                              ; preds = %421
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %429 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #10
  %430 = bitcast i8* %429 to %"class.blink::MemoryBreakdownEntry"*
  call void @_ZN5blink20MemoryBreakdownEntryC1Ev(%"class.blink::MemoryBreakdownEntry"* %430) #10
  %431 = getelementptr inbounds i8, i8* %429, i64 -4
  %432 = bitcast i8* %431 to i16*
  %433 = load atomic i16, i16* %432 monotonic, align 2
  %434 = or i16 %433, 1
  store atomic i16 %434, i16* %432 release, align 2
  %435 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %423, align 8
  %436 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %435, i64 0, i32 0, i32 0, i32 0
  %437 = load i64, i64* %436, align 8
  %438 = getelementptr inbounds i8, i8* %429, i64 32
  %439 = bitcast i8* %438 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds i8, i8* %429, i64 9
  store i8 1, i8* %440, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #10
  %441 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %423, align 8
  %442 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %441, i64 0, i32 1, i32 0, i32 0, i32 0
  %443 = load %"class.mojo::InlinedStructPtr.2296"*, %"class.mojo::InlinedStructPtr.2296"** %442, align 8
  %444 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %441, i64 0, i32 1, i32 0, i32 0, i32 2
  %445 = load i32, i32* %444, align 4
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %443, i64 %446
  %448 = icmp eq i32 %445, 0
  br i1 %448, label %449, label %530

449:                                              ; preds = %812, %428
  call void @_ZN5blink20MemoryBreakdownEntry14setAttributionERKNS_10HeapVectorINS_6MemberINS_17MemoryAttributionEEELj0EEE(%"class.blink::MemoryBreakdownEntry"* %430, %"class.blink::HeapVector.2318"* nonnull dereferenceable(16) %8) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i64 10) #10
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %469, label %452

452:                                              ; preds = %449
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %469

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = zext i32 %459 to i33
  %461 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %460, i33 1) #10
  %462 = extractvalue { i33, i1 } %461, 1
  %463 = extractvalue { i33, i1 } %461, 0
  %464 = icmp slt i33 %463, 0
  %465 = or i1 %462, %464
  br i1 %465, label %466, label %467, !prof !6

466:                                              ; preds = %457
  call void @llvm.trap() #10
  unreachable

467:                                              ; preds = %457
  %468 = trunc i33 %463 to i32
  store i32 %468, i32* %458, align 4
  br label %469

469:                                              ; preds = %467, %452, %449
  %470 = phi i1 [ false, %467 ], [ false, %452 ], [ true, %449 ]
  %471 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #10
  %472 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %471, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %473 = ptrtoint i8* %472 to i64
  store atomic i64 %473, i64* %75 monotonic, align 8
  %474 = lshr i64 %471, 3
  %475 = trunc i64 %474 to i32
  store i32 %475, i32* %74, align 8
  store i32 1, i32* %76, align 4
  %476 = bitcast i8* %472 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %476, align 8
  br i1 %470, label %494, label %477

477:                                              ; preds = %469
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %494

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #10
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !6

491:                                              ; preds = %482
  call void @llvm.trap() #10
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  br label %494

494:                                              ; preds = %492, %477, %469
  call void @_ZN5blink20MemoryBreakdownEntry8setTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MemoryBreakdownEntry"* %430, %"class.WTF::Vector.360"* nonnull dereferenceable(16) %10) #10
  %495 = load %"class.WTF::String"*, %"class.WTF::String"** %73, align 8
  %496 = icmp eq %"class.WTF::String"* %495, null
  br i1 %496, label %529, label %497, !prof !14

497:                                              ; preds = %494
  %498 = bitcast %"class.WTF::String"* %495 to i8*
  %499 = load i32, i32* %76, align 4
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %527, label %501, !prof !6

501:                                              ; preds = %497
  %502 = zext i32 %499 to i64
  %503 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %495, i64 %502
  br label %504

504:                                              ; preds = %522, %501
  %505 = phi %"class.WTF::String"* [ %523, %522 ], [ %495, %501 ]
  %506 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %505, i64 0, i32 0, i32 0
  %507 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %506, align 8
  %508 = icmp eq %"class.WTF::StringImpl"* %507, null
  br i1 %508, label %522, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = load atomic i32, i32* %510 monotonic, align 4
  %512 = and i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %507, i64 0, i32 0
  %515 = load i32, i32* %514, align 4
  br i1 %513, label %516, label %518

516:                                              ; preds = %509
  %517 = add i32 %515, -1
  store i32 %517, i32* %514, align 4
  br label %518

518:                                              ; preds = %516, %509
  %519 = phi i32 [ %517, %516 ], [ %515, %509 ]
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %518
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %507) #10
  br label %522

522:                                              ; preds = %521, %518, %504
  %523 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %505, i64 1
  %524 = icmp eq %"class.WTF::String"* %523, %503
  br i1 %524, label %525, label %504

525:                                              ; preds = %522
  store i32 0, i32* %76, align 4
  %526 = load i8*, i8** %77, align 8
  br label %527

527:                                              ; preds = %525, %497
  %528 = phi i8* [ %526, %525 ], [ %498, %497 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %528) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %73, align 8
  br label %529

529:                                              ; preds = %527, %494
  br i1 %451, label %828, label %815

530:                                              ; preds = %428, %812
  %531 = phi %"class.mojo::InlinedStructPtr.2296"* [ %813, %812 ], [ %443, %428 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %532 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #10
  %533 = bitcast i8* %532 to %"class.blink::MemoryAttribution"*
  call void @_ZN5blink17MemoryAttributionC1Ev(%"class.blink::MemoryAttribution"* %533) #10
  %534 = getelementptr inbounds i8, i8* %532, i64 -4
  %535 = bitcast i8* %534 to i16*
  %536 = load atomic i16, i16* %535 monotonic, align 2
  %537 = or i16 %536, 1
  store atomic i16 %537, i16* %535 release, align 2
  %538 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 0, i32 0, i32 1, i32 0, i32 0
  %539 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %538, align 8
  %540 = icmp eq %"class.WTF::StringImpl"* %539, null
  br i1 %540, label %578, label %541

541:                                              ; preds = %530
  %542 = getelementptr inbounds i8, i8* %532, i64 24
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %559

547:                                              ; preds = %541
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 0
  %549 = load i32, i32* %548, align 4
  %550 = zext i32 %549 to i33
  %551 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %550, i33 1) #10
  %552 = extractvalue { i33, i1 } %551, 1
  %553 = extractvalue { i33, i1 } %551, 0
  %554 = icmp slt i33 %553, 0
  %555 = or i1 %552, %554
  br i1 %555, label %556, label %557, !prof !6

556:                                              ; preds = %547
  call void @llvm.trap() #10
  unreachable

557:                                              ; preds = %547
  %558 = trunc i33 %553 to i32
  store i32 %558, i32* %548, align 4
  br label %559

559:                                              ; preds = %557, %541
  %560 = ptrtoint %"class.WTF::StringImpl"* %539 to i64
  %561 = bitcast i8* %542 to i64*
  %562 = bitcast i8* %542 to %"class.WTF::StringImpl"**
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  store i64 %560, i64* %561, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %635, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %635

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %563) #10
  br label %635

578:                                              ; preds = %530
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i64 16) #10
  %579 = getelementptr inbounds i8, i8* %532, i64 24
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %599, label %582

582:                                              ; preds = %578
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %599

587:                                              ; preds = %582
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = zext i32 %589 to i33
  %591 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %590, i33 1) #10
  %592 = extractvalue { i33, i1 } %591, 1
  %593 = extractvalue { i33, i1 } %591, 0
  %594 = icmp slt i33 %593, 0
  %595 = or i1 %592, %594
  br i1 %595, label %596, label %597, !prof !6

596:                                              ; preds = %587
  call void @llvm.trap() #10
  unreachable

597:                                              ; preds = %587
  %598 = trunc i33 %593 to i32
  store i32 %598, i32* %588, align 4
  br label %599

599:                                              ; preds = %597, %582, %578
  %600 = ptrtoint %"class.WTF::StringImpl"* %580 to i64
  %601 = bitcast i8* %579 to i64*
  %602 = bitcast i8* %579 to %"class.WTF::StringImpl"**
  %603 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %602, align 8
  store i64 %600, i64* %601, align 8
  %604 = icmp eq %"class.WTF::StringImpl"* %603, null
  br i1 %604, label %618, label %605

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load atomic i32, i32* %606 monotonic, align 4
  %608 = and i32 %607, 2
  %609 = icmp eq i32 %608, 0
  %610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %611 = load i32, i32* %610, align 4
  br i1 %609, label %612, label %614

612:                                              ; preds = %605
  %613 = add i32 %611, -1
  store i32 %613, i32* %610, align 4
  br label %614

614:                                              ; preds = %612, %605
  %615 = phi i32 [ %613, %612 ], [ %611, %605 ]
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %618

617:                                              ; preds = %614
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %603) #10
  br label %618

618:                                              ; preds = %617, %614, %599
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %619, null
  br i1 %620, label %634, label %621

621:                                              ; preds = %618
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load atomic i32, i32* %622 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %627 = load i32, i32* %626, align 4
  br i1 %625, label %628, label %630

628:                                              ; preds = %621
  %629 = add i32 %627, -1
  store i32 %629, i32* %626, align 4
  br label %630

630:                                              ; preds = %628, %621
  %631 = phi i32 [ %629, %628 ], [ %627, %621 ]
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %633, label %634

633:                                              ; preds = %630
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %619) #10
  br label %634

634:                                              ; preds = %633, %630, %618
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  br label %635

635:                                              ; preds = %634, %577, %574, %559
  %636 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 0, i32 0, i32 0
  %637 = load i32, i32* %636, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  switch i32 %637, label %643 [
    i32 2, label %638
    i32 1, label %639
    i32 0, label %640
    i32 3, label %641
    i32 4, label %642
  ]

638:                                              ; preds = %635
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i64 26) #10
  br label %644

639:                                              ; preds = %635
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6) #10
  br label %644

640:                                              ; preds = %635
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i64 23) #10
  br label %644

641:                                              ; preds = %635
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i64 24) #10
  br label %644

642:                                              ; preds = %635
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i64 23) #10
  br label %644

643:                                              ; preds = %635
  unreachable

644:                                              ; preds = %642, %641, %640, %639, %638
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  %646 = getelementptr inbounds i8, i8* %532, i64 16
  %647 = icmp eq %"class.WTF::StringImpl"* %645, null
  br i1 %647, label %665, label %648

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %650 = load atomic i32, i32* %649 monotonic, align 4
  %651 = and i32 %650, 2
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %665

653:                                              ; preds = %648
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %655 = load i32, i32* %654, align 4
  %656 = zext i32 %655 to i33
  %657 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %656, i33 1) #10
  %658 = extractvalue { i33, i1 } %657, 1
  %659 = extractvalue { i33, i1 } %657, 0
  %660 = icmp slt i33 %659, 0
  %661 = or i1 %658, %660
  br i1 %661, label %662, label %663, !prof !6

662:                                              ; preds = %653
  call void @llvm.trap() #10
  unreachable

663:                                              ; preds = %653
  %664 = trunc i33 %659 to i32
  store i32 %664, i32* %654, align 4
  br label %665

665:                                              ; preds = %663, %648, %644
  %666 = ptrtoint %"class.WTF::StringImpl"* %645 to i64
  %667 = bitcast i8* %646 to i64*
  %668 = bitcast i8* %646 to %"class.WTF::StringImpl"**
  %669 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %668, align 8
  store i64 %666, i64* %667, align 8
  %670 = icmp eq %"class.WTF::StringImpl"* %669, null
  br i1 %670, label %684, label %671

671:                                              ; preds = %665
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %669, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %673 = load atomic i32, i32* %672 monotonic, align 4
  %674 = and i32 %673, 2
  %675 = icmp eq i32 %674, 0
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %669, i64 0, i32 0
  %677 = load i32, i32* %676, align 4
  br i1 %675, label %678, label %680

678:                                              ; preds = %671
  %679 = add i32 %677, -1
  store i32 %679, i32* %676, align 4
  br label %680

680:                                              ; preds = %678, %671
  %681 = phi i32 [ %679, %678 ], [ %677, %671 ]
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %683, label %684

683:                                              ; preds = %680
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %669) #10
  br label %684

684:                                              ; preds = %683, %680, %665
  br i1 %647, label %698, label %685

685:                                              ; preds = %684
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load atomic i32, i32* %686 monotonic, align 4
  %688 = and i32 %687, 2
  %689 = icmp eq i32 %688, 0
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %691 = load i32, i32* %690, align 4
  br i1 %689, label %692, label %694

692:                                              ; preds = %685
  %693 = add i32 %691, -1
  store i32 %693, i32* %690, align 4
  br label %694

694:                                              ; preds = %692, %685
  %695 = phi i32 [ %693, %692 ], [ %691, %685 ]
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %698

697:                                              ; preds = %694
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %645) #10
  br label %698

698:                                              ; preds = %697, %694, %684
  %699 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 0, i32 0, i32 2, i32 0, i32 0
  %700 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %699, align 8
  %701 = icmp eq %"class.WTF::StringImpl"* %700, null
  br i1 %701, label %702, label %706

702:                                              ; preds = %698
  %703 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 0, i32 0, i32 3, i32 0, i32 0
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %703, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %793, label %706

706:                                              ; preds = %702, %698
  %707 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #10
  %708 = bitcast i8* %707 to %"class.blink::MemoryAttributionContainer"*
  call void @_ZN5blink26MemoryAttributionContainerC1Ev(%"class.blink::MemoryAttributionContainer"* %708) #10
  %709 = getelementptr inbounds i8, i8* %707, i64 -4
  %710 = bitcast i8* %709 to i16*
  %711 = load atomic i16, i16* %710 monotonic, align 2
  %712 = or i16 %711, 1
  store atomic i16 %712, i16* %710 release, align 2
  %713 = getelementptr inbounds i8, i8* %707, i64 16
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %699, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %714, null
  br i1 %715, label %733, label %716

716:                                              ; preds = %706
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load atomic i32, i32* %717 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %721, label %733

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = zext i32 %723 to i33
  %725 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %724, i33 1) #10
  %726 = extractvalue { i33, i1 } %725, 1
  %727 = extractvalue { i33, i1 } %725, 0
  %728 = icmp slt i33 %727, 0
  %729 = or i1 %726, %728
  br i1 %729, label %730, label %731, !prof !6

730:                                              ; preds = %721
  call void @llvm.trap() #10
  unreachable

731:                                              ; preds = %721
  %732 = trunc i33 %727 to i32
  store i32 %732, i32* %722, align 4
  br label %733

733:                                              ; preds = %731, %716, %706
  %734 = ptrtoint %"class.WTF::StringImpl"* %714 to i64
  %735 = bitcast i8* %713 to i64*
  %736 = bitcast i8* %713 to %"class.WTF::StringImpl"**
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %736, align 8
  store i64 %734, i64* %735, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %733
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #10
  br label %752

752:                                              ; preds = %751, %748, %733
  %753 = getelementptr inbounds i8, i8* %707, i64 8
  %754 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 0, i32 0, i32 3, i32 0, i32 0
  %755 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %754, align 8
  %756 = icmp eq %"class.WTF::StringImpl"* %755, null
  br i1 %756, label %774, label %757

757:                                              ; preds = %752
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %774

762:                                              ; preds = %757
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 0
  %764 = load i32, i32* %763, align 4
  %765 = zext i32 %764 to i33
  %766 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %765, i33 1) #10
  %767 = extractvalue { i33, i1 } %766, 1
  %768 = extractvalue { i33, i1 } %766, 0
  %769 = icmp slt i33 %768, 0
  %770 = or i1 %767, %769
  br i1 %770, label %771, label %772, !prof !6

771:                                              ; preds = %762
  call void @llvm.trap() #10
  unreachable

772:                                              ; preds = %762
  %773 = trunc i33 %768 to i32
  store i32 %773, i32* %763, align 4
  br label %774

774:                                              ; preds = %772, %757, %752
  %775 = ptrtoint %"class.WTF::StringImpl"* %755 to i64
  %776 = bitcast i8* %753 to i64*
  %777 = bitcast i8* %753 to %"class.WTF::StringImpl"**
  %778 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %777, align 8
  store i64 %775, i64* %776, align 8
  %779 = icmp eq %"class.WTF::StringImpl"* %778, null
  br i1 %779, label %793, label %780

780:                                              ; preds = %774
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %782 = load atomic i32, i32* %781 monotonic, align 4
  %783 = and i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  br i1 %784, label %787, label %789

787:                                              ; preds = %780
  %788 = add i32 %786, -1
  store i32 %788, i32* %785, align 4
  br label %789

789:                                              ; preds = %787, %780
  %790 = phi i32 [ %788, %787 ], [ %786, %780 ]
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %793

792:                                              ; preds = %789
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %778) #10
  br label %793

793:                                              ; preds = %792, %789, %774, %702
  %794 = phi %"class.blink::MemoryAttributionContainer"* [ null, %702 ], [ %708, %774 ], [ %708, %789 ], [ %708, %792 ]
  call void @_ZN5blink17MemoryAttribution12setContainerEPNS_26MemoryAttributionContainerE(%"class.blink::MemoryAttribution"* %533, %"class.blink::MemoryAttributionContainer"* %794) #10
  store i8* %532, i8** %69, align 8
  %795 = load i32, i32* %62, align 4
  %796 = load i32, i32* %61, align 8
  %797 = icmp eq i32 %795, %796
  br i1 %797, label %811, label %798, !prof !6

798:                                              ; preds = %793
  %799 = ptrtoint i8* %532 to i64
  %800 = load %"class.blink::Member.2324"*, %"class.blink::Member.2324"** %60, align 8
  %801 = zext i32 %795 to i64
  %802 = getelementptr inbounds %"class.blink::Member.2324", %"class.blink::Member.2324"* %800, i64 %801
  %803 = bitcast %"class.blink::Member.2324"* %802 to i64*
  store atomic i64 %799, i64* %803 monotonic, align 8
  %804 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %808, label %806

806:                                              ; preds = %798
  %807 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %532) #10
  br label %808

808:                                              ; preds = %806, %798
  %809 = load i32, i32* %62, align 4
  %810 = add i32 %809, 1
  store i32 %810, i32* %62, align 4
  br label %812

811:                                              ; preds = %793
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2321"* nonnull %63, %"class.blink::MemoryAttribution"** nonnull dereferenceable(8) %9) #10
  br label %812

812:                                              ; preds = %811, %808
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  %813 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %531, i64 1
  %814 = icmp eq %"class.mojo::InlinedStructPtr.2296"* %813, %447
  br i1 %814, label %449, label %530

815:                                              ; preds = %529
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %817 = load atomic i32, i32* %816 monotonic, align 4
  %818 = and i32 %817, 2
  %819 = icmp eq i32 %818, 0
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %821 = load i32, i32* %820, align 4
  br i1 %819, label %822, label %824

822:                                              ; preds = %815
  %823 = add i32 %821, -1
  store i32 %823, i32* %820, align 4
  br label %824

824:                                              ; preds = %822, %815
  %825 = phi i32 [ %823, %822 ], [ %821, %815 ]
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %827, label %828

827:                                              ; preds = %824
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #10
  br label %828

828:                                              ; preds = %827, %824, %529
  %829 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %830 = icmp eq %"class.WTF::StringImpl"* %829, null
  br i1 %830, label %844, label %831

831:                                              ; preds = %828
  %832 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %833 = load atomic i32, i32* %832 monotonic, align 4
  %834 = and i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %829, i64 0, i32 0
  %837 = load i32, i32* %836, align 4
  br i1 %835, label %838, label %840

838:                                              ; preds = %831
  %839 = add i32 %837, -1
  store i32 %839, i32* %836, align 4
  br label %840

840:                                              ; preds = %838, %831
  %841 = phi i32 [ %839, %838 ], [ %837, %831 ]
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %844

843:                                              ; preds = %840
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %829) #10
  br label %844

844:                                              ; preds = %843, %840, %828
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  store i8* %429, i8** %78, align 8
  %845 = load i32, i32* %46, align 4
  %846 = load i32, i32* %45, align 8
  %847 = icmp eq i32 %845, %846
  br i1 %847, label %861, label %848, !prof !6

848:                                              ; preds = %844
  %849 = ptrtoint i8* %429 to i64
  %850 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %44, align 8
  %851 = zext i32 %845 to i64
  %852 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %850, i64 %851
  %853 = bitcast %"class.blink::Member.2316"* %852 to i64*
  store atomic i64 %849, i64* %853 monotonic, align 8
  %854 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %858, label %856

856:                                              ; preds = %848
  %857 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %429) #10
  br label %858

858:                                              ; preds = %856, %848
  %859 = load i32, i32* %46, align 4
  %860 = add i32 %859, 1
  store i32 %860, i32* %46, align 4
  br label %862

861:                                              ; preds = %844
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2313"* nonnull %57, %"class.blink::MemoryBreakdownEntry"** nonnull dereferenceable(8) %13) #10
  br label %862

862:                                              ; preds = %861, %858
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %863

863:                                              ; preds = %862, %421
  %864 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %422, i64 1
  %865 = icmp eq %"class.mojo::StructPtr.2287"* %864, %54
  br i1 %865, label %79, label %421

866:                                              ; preds = %866, %419
  %867 = phi %"class.blink::Member.2316"* [ %410, %419 ], [ %910, %866 ]
  %868 = phi i64 [ 0, %419 ], [ %909, %866 ]
  %869 = phi i64 [ %420, %419 ], [ %911, %866 ]
  %870 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 0, i32 0, i32 0
  %871 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %870, align 8
  %872 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %871, i64 0, i32 5
  %873 = load i64, i64* %872, align 8
  %874 = add i64 %873, %868
  %875 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 1, i32 0, i32 0
  %876 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %875, align 8
  %877 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %876, i64 0, i32 5
  %878 = load i64, i64* %877, align 8
  %879 = add i64 %878, %874
  %880 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 2, i32 0, i32 0
  %881 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %880, align 8
  %882 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %881, i64 0, i32 5
  %883 = load i64, i64* %882, align 8
  %884 = add i64 %883, %879
  %885 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 3, i32 0, i32 0
  %886 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %885, align 8
  %887 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %886, i64 0, i32 5
  %888 = load i64, i64* %887, align 8
  %889 = add i64 %888, %884
  %890 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 4, i32 0, i32 0
  %891 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %890, align 8
  %892 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %891, i64 0, i32 5
  %893 = load i64, i64* %892, align 8
  %894 = add i64 %893, %889
  %895 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 5, i32 0, i32 0
  %896 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %895, align 8
  %897 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %896, i64 0, i32 5
  %898 = load i64, i64* %897, align 8
  %899 = add i64 %898, %894
  %900 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 6, i32 0, i32 0
  %901 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %900, align 8
  %902 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %901, i64 0, i32 5
  %903 = load i64, i64* %902, align 8
  %904 = add i64 %903, %899
  %905 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 7, i32 0, i32 0
  %906 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %905, align 8
  %907 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %906, i64 0, i32 5
  %908 = load i64, i64* %907, align 8
  %909 = add i64 %908, %904
  %910 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %867, i64 8
  %911 = add i64 %869, -8
  %912 = icmp eq i64 %911, 0
  br i1 %912, label %913, label %866

913:                                              ; preds = %866, %408
  %914 = phi i64 [ undef, %408 ], [ %909, %866 ]
  %915 = phi %"class.blink::Member.2316"* [ %410, %408 ], [ %910, %866 ]
  %916 = phi i64 [ 0, %408 ], [ %909, %866 ]
  %917 = icmp eq i64 %417, 0
  br i1 %917, label %930, label %918

918:                                              ; preds = %913, %918
  %919 = phi %"class.blink::Member.2316"* [ %927, %918 ], [ %915, %913 ]
  %920 = phi i64 [ %926, %918 ], [ %916, %913 ]
  %921 = phi i64 [ %928, %918 ], [ %417, %913 ]
  %922 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %919, i64 0, i32 0, i32 0
  %923 = load %"class.blink::MemoryBreakdownEntry"*, %"class.blink::MemoryBreakdownEntry"** %922, align 8
  %924 = getelementptr inbounds %"class.blink::MemoryBreakdownEntry", %"class.blink::MemoryBreakdownEntry"* %923, i64 0, i32 5
  %925 = load i64, i64* %924, align 8
  %926 = add i64 %925, %920
  %927 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %919, i64 1
  %928 = add i64 %921, -1
  %929 = icmp eq i64 %928, 0
  br i1 %929, label %930, label %918, !llvm.loop !16

930:                                              ; preds = %913, %918, %402
  %931 = phi i64 [ 0, %402 ], [ %914, %913 ], [ %926, %918 ]
  %932 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #10
  %933 = bitcast i8* %932 to %"class.blink::MemoryMeasurement"*
  call void @_ZN5blink17MemoryMeasurementC1Ev(%"class.blink::MemoryMeasurement"* %933) #10
  %934 = getelementptr inbounds i8, i8* %932, i64 -4
  %935 = bitcast i8* %934 to i16*
  %936 = load atomic i16, i16* %935 monotonic, align 2
  %937 = or i16 %936, 1
  store atomic i16 %937, i16* %935 release, align 2
  call void @_ZN5blink17MemoryMeasurement12setBreakdownERKNS_10HeapVectorINS_6MemberINS_20MemoryBreakdownEntryEEELj0EEE(%"class.blink::MemoryMeasurement"* %933, %"class.blink::HeapVector.2310"* nonnull dereferenceable(16) %12) #10
  %938 = getelementptr inbounds i8, i8* %932, i64 32
  %939 = bitcast i8* %938 to i64*
  store i64 %931, i64* %939, align 8
  %940 = getelementptr inbounds i8, i8* %932, i64 9
  store i8 1, i8* %940, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  %941 = getelementptr inbounds %"class.blink::MeasureMemoryController", %"class.blink::MeasureMemoryController"* %0, i64 0, i32 2
  %942 = bitcast %"class.blink::TraceWrapperV8Reference"* %941 to %"class.v8::Promise::Resolver"**
  %943 = load %"class.v8::Promise::Resolver"*, %"class.v8::Promise::Resolver"** %942, align 8
  %944 = icmp eq %"class.v8::Promise::Resolver"* %943, null
  br i1 %944, label %952, label %945

945:                                              ; preds = %930
  %946 = bitcast %"class.blink::MeasureMemoryController"* %0 to %"class.v8::internal::Isolate"**
  %947 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %946, align 8
  %948 = bitcast %"class.v8::Promise::Resolver"* %943 to i64*
  %949 = load i64, i64* %948, align 8
  %950 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %947, i64 %949) #10
  %951 = bitcast i64* %950 to %"class.v8::Promise::Resolver"*
  br label %952

952:                                              ; preds = %930, %945
  %953 = phi %"class.v8::Promise::Resolver"* [ %951, %945 ], [ null, %930 ]
  %954 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  %955 = icmp eq i8* %932, null
  br i1 %955, label %956, label %960

956:                                              ; preds = %952
  %957 = ptrtoint %"class.v8::Isolate"* %954 to i64
  %958 = add i64 %957, 176
  %959 = inttoptr i64 %958 to %"class.v8::Value"*
  br label %968

960:                                              ; preds = %952
  %961 = bitcast i8* %932 to %"class.blink::IDLDictionaryBase"*
  %962 = bitcast %"class.v8::Promise::Resolver"* %953 to %"class.v8::Object"*
  %963 = bitcast i8* %932 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %964 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %963, align 8
  %965 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %964, i64 2
  %966 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %965, align 8
  %967 = call %"class.v8::Value"* %966(%"class.blink::IDLDictionaryBase"* nonnull %961, %"class.v8::Object"* %962, %"class.v8::Isolate"* %954) #10
  br label %968

968:                                              ; preds = %956, %960
  %969 = phi %"class.v8::Value"* [ %959, %956 ], [ %967, %960 ]
  %970 = call i16 @_ZN2v87Promise8Resolver7ResolveENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"* %953, %"class.v8::Context"* %39, %"class.v8::Value"* %969) #10
  %971 = trunc i16 %970 to i8
  %972 = icmp eq i8 %971, 0
  br i1 %972, label %973, label %974, !prof !6

973:                                              ; preds = %968
  call void @_ZN2v82V817FromJustIsNothingEv() #10
  br label %974

974:                                              ; preds = %968, %973
  %975 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %941, i64 0, i32 0, i32 0, i32 0, i32 0
  %976 = load i64*, i64** %975, align 8
  %977 = icmp eq i64* %976, null
  br i1 %977, label %980, label %978

978:                                              ; preds = %974
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %976) #10
  %979 = bitcast %"class.blink::TraceWrapperV8Reference"* %941 to i64*
  store atomic i64 0, i64* %979 monotonic, align 8
  br label %980

980:                                              ; preds = %974, %978
  %981 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %39) #10
  %982 = icmp eq %"class.blink::ExecutionContext"* %981, null
  br i1 %982, label %1105, label %983

983:                                              ; preds = %980
  %984 = bitcast %"class.ukm::builders::PerformanceAPI_Memory"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %984) #10
  %985 = bitcast %"class.blink::ExecutionContext"* %981 to i64 (%"class.blink::ExecutionContext"*)***
  %986 = load i64 (%"class.blink::ExecutionContext"*)**, i64 (%"class.blink::ExecutionContext"*)*** %985, align 8
  %987 = getelementptr inbounds i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %986, i64 45
  %988 = load i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %987, align 8
  %989 = call i64 %988(%"class.blink::ExecutionContext"* nonnull %981) #10
  call void @_ZN3ukm8builders21PerformanceAPI_MemoryC1El(%"class.ukm::builders::PerformanceAPI_Memory"* nonnull %3, i64 %989) #10
  %990 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %991 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %990, i64 0, i32 0, i32 0, i32 0, i32 0
  %992 = load %"class.mojo::StructPtr.2287"*, %"class.mojo::StructPtr.2287"** %991, align 8
  %993 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %990, i64 0, i32 0, i32 0, i32 0, i32 2
  %994 = load i32, i32* %993, align 4
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %1041, label %996

996:                                              ; preds = %983
  %997 = zext i32 %994 to i64
  %998 = shl nuw nsw i64 %997, 3
  %999 = add nsw i64 %998, -8
  %1000 = lshr exact i64 %999, 3
  %1001 = add nuw nsw i64 %1000, 1
  %1002 = and i64 %1001, 1
  %1003 = icmp eq i64 %999, 0
  br i1 %1003, label %1026, label %1004

1004:                                             ; preds = %996
  %1005 = sub nuw nsw i64 %1001, %1002
  br label %1006

1006:                                             ; preds = %1111, %1004
  %1007 = phi %"class.mojo::StructPtr.2287"* [ %992, %1004 ], [ %1113, %1111 ]
  %1008 = phi i64 [ 0, %1004 ], [ %1112, %1111 ]
  %1009 = phi i64 [ %1005, %1004 ], [ %1114, %1111 ]
  %1010 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1007, i64 0, i32 0, i32 0, i32 0, i32 0
  %1011 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %1010, align 8
  %1012 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1011, i64 0, i32 0, i32 1
  %1013 = load i32, i32* %1012, align 8
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1019, label %1015

1015:                                             ; preds = %1006
  %1016 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1011, i64 0, i32 0, i32 0, i32 0
  %1017 = load i64, i64* %1016, align 8
  %1018 = add i64 %1017, %1008
  br label %1019

1019:                                             ; preds = %1015, %1006
  %1020 = phi i64 [ %1018, %1015 ], [ %1008, %1006 ]
  %1021 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1007, i64 1, i32 0, i32 0, i32 0, i32 0
  %1022 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %1021, align 8
  %1023 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1022, i64 0, i32 0, i32 1
  %1024 = load i32, i32* %1023, align 8
  %1025 = icmp eq i32 %1024, 0
  br i1 %1025, label %1111, label %1107

1026:                                             ; preds = %1111, %996
  %1027 = phi i64 [ undef, %996 ], [ %1112, %1111 ]
  %1028 = phi %"class.mojo::StructPtr.2287"* [ %992, %996 ], [ %1113, %1111 ]
  %1029 = phi i64 [ 0, %996 ], [ %1112, %1111 ]
  %1030 = icmp eq i64 %1002, 0
  br i1 %1030, label %1041, label %1031

1031:                                             ; preds = %1026
  %1032 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1028, i64 0, i32 0, i32 0, i32 0, i32 0
  %1033 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %1032, align 8
  %1034 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1033, i64 0, i32 0, i32 1
  %1035 = load i32, i32* %1034, align 8
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1041, label %1037

1037:                                             ; preds = %1031
  %1038 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1033, i64 0, i32 0, i32 0, i32 0
  %1039 = load i64, i64* %1038, align 8
  %1040 = add i64 %1039, %1029
  br label %1041

1041:                                             ; preds = %1026, %1031, %1037, %983
  %1042 = phi i64 [ 0, %983 ], [ %1027, %1026 ], [ %1040, %1037 ], [ %1029, %1031 ]
  %1043 = lshr i64 %1042, 10
  %1044 = call dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory13SetJavaScriptEl(%"class.ukm::builders::PerformanceAPI_Memory"* nonnull %3, i64 %1043) #10
  %1045 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %1046 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %1045, i64 0, i32 0, i32 0, i32 0, i32 0
  %1047 = load %"class.mojo::StructPtr.2287"*, %"class.mojo::StructPtr.2287"** %1046, align 8
  %1048 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %1045, i64 0, i32 0, i32 0, i32 0, i32 2
  %1049 = load i32, i32* %1048, align 4
  %1050 = zext i32 %1049 to i64
  %1051 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1047, i64 %1050
  %1052 = icmp eq i32 %1049, 0
  br i1 %1052, label %1085, label %1053

1053:                                             ; preds = %1041, %1081
  %1054 = phi %"class.mojo::StructPtr.2287"* [ %1083, %1081 ], [ %1047, %1041 ]
  %1055 = phi i64 [ %1082, %1081 ], [ 0, %1041 ]
  %1056 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1054, i64 0, i32 0, i32 0, i32 0, i32 0
  %1057 = load %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"*, %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"** %1056, align 8
  %1058 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1057, i64 0, i32 0, i32 1
  %1059 = load i32, i32* %1058, align 8
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1081, label %1061

1061:                                             ; preds = %1053
  %1062 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1057, i64 0, i32 1, i32 0, i32 0, i32 0
  %1063 = load %"class.mojo::InlinedStructPtr.2296"*, %"class.mojo::InlinedStructPtr.2296"** %1062, align 8
  %1064 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1057, i64 0, i32 1, i32 0, i32 0, i32 2
  %1065 = load i32, i32* %1064, align 4
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %1063, i64 %1066
  %1068 = icmp eq i32 %1065, 0
  br i1 %1068, label %1081, label %1071

1069:                                             ; preds = %1071
  %1070 = icmp eq %"class.mojo::InlinedStructPtr.2296"* %1076, %1067
  br i1 %1070, label %1081, label %1071

1071:                                             ; preds = %1061, %1069
  %1072 = phi %"class.mojo::InlinedStructPtr.2296"* [ %1076, %1069 ], [ %1063, %1061 ]
  %1073 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %1072, i64 0, i32 0, i32 0
  %1074 = load i32, i32* %1073, align 8
  %1075 = icmp eq i32 %1074, 2
  %1076 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2296", %"class.mojo::InlinedStructPtr.2296"* %1072, i64 1
  br i1 %1075, label %1077, label %1069

1077:                                             ; preds = %1071
  %1078 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1057, i64 0, i32 0, i32 0, i32 0
  %1079 = load i64, i64* %1078, align 8
  %1080 = add i64 %1079, %1055
  br label %1081

1081:                                             ; preds = %1069, %1077, %1061, %1053
  %1082 = phi i64 [ %1080, %1077 ], [ %1055, %1053 ], [ %1055, %1061 ], [ %1055, %1069 ]
  %1083 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1054, i64 1
  %1084 = icmp eq %"class.mojo::StructPtr.2287"* %1083, %1051
  br i1 %1084, label %1085, label %1053

1085:                                             ; preds = %1081, %1041
  %1086 = phi i64 [ 0, %1041 ], [ %1082, %1081 ]
  %1087 = lshr i64 %1086, 10
  %1088 = call dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory29SetJavaScript_DedicatedWorkerEl(%"class.ukm::builders::PerformanceAPI_Memory"* %1044, i64 %1087) #10
  %1089 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %1090 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %1089, i64 0, i32 3, i32 0, i32 0
  %1091 = load i64, i64* %1090, align 8
  %1092 = lshr i64 %1091, 10
  %1093 = call dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory6SetDomEl(%"class.ukm::builders::PerformanceAPI_Memory"* %1088, i64 %1092) #10
  %1094 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %47, align 8
  %1095 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryMeasurement", %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %1094, i64 0, i32 2, i32 0, i32 0
  %1096 = load i64, i64* %1095, align 8
  %1097 = lshr i64 %1096, 10
  %1098 = call dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory9SetSharedEl(%"class.ukm::builders::PerformanceAPI_Memory"* %1093, i64 %1097) #10
  %1099 = getelementptr inbounds %"class.ukm::builders::PerformanceAPI_Memory", %"class.ukm::builders::PerformanceAPI_Memory"* %1098, i64 0, i32 0
  %1100 = bitcast %"class.blink::ExecutionContext"* %981 to %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)***
  %1101 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)**, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*** %1100, align 8
  %1102 = getelementptr inbounds %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %1101, i64 44
  %1103 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %1102, align 8
  %1104 = call %"class.ukm::UkmRecorder"* %1103(%"class.blink::ExecutionContext"* nonnull %981) #10
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* %1099, %"class.ukm::UkmRecorder"* %1104) #10
  call void @_ZN3ukm8builders21PerformanceAPI_MemoryD1Ev(%"class.ukm::builders::PerformanceAPI_Memory"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %984) #10
  br label %1105

1105:                                             ; preds = %980, %1085
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %39) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %1106

1106:                                             ; preds = %2, %1105
  ret void

1107:                                             ; preds = %1019
  %1108 = getelementptr inbounds %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry", %"class.performance_manager::mojom::blink::WebMemoryBreakdownEntry"* %1022, i64 0, i32 0, i32 0, i32 0
  %1109 = load i64, i64* %1108, align 8
  %1110 = add i64 %1109, %1020
  br label %1111

1111:                                             ; preds = %1107, %1019
  %1112 = phi i64 [ %1110, %1107 ], [ %1020, %1019 ]
  %1113 = getelementptr inbounds %"class.mojo::StructPtr.2287", %"class.mojo::StructPtr.2287"* %1007, i64 2
  %1114 = add i64 %1009, -2
  %1115 = icmp eq i64 %1114, 0
  br i1 %1115, label %1026, label %1006
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare i16 @_ZN2v87Promise8Resolver7ResolveENS_5LocalINS_7ContextEEENS2_INS_5ValueEEE(%"class.v8::Promise::Resolver"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare %"class.blink::DocumentResourceCoordinator"* @_ZN5blink8Document22GetResourceCoordinatorEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink27DocumentResourceCoordinator31OnWebMemoryMeasurementRequestedEN19performance_manager5mojom25WebMemoryMeasurement_ModeEN4base12OnceCallbackIFvN4mojo9StructPtrINS2_5blink20WebMemoryMeasurementEEEEEE(%"class.blink::DocumentResourceCoordinator"*, i32, %"class.base::OnceCallback.2429"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS3_10PersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.2280"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.2280", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.mojo::StructPtr.2280"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.blink::MeasureMemoryController"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)**
  %24 = load void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)*, void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::MeasureMemoryController"*, %"class.mojo::StructPtr.2280"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = bitcast %"class.mojo::StructPtr.2280"* %3 to i64*
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2280", %"class.mojo::StructPtr.2280"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.mojo::StructPtr.2280"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 0, i64* %31, align 8
  call void %28(%"class.blink::MeasureMemoryController"* %15, %"class.mojo::StructPtr.2280"* nonnull %3) #10
  %33 = load %"class.performance_manager::mojom::blink::WebMemoryMeasurement"*, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %30, align 8
  store %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* null, %"class.performance_manager::mojom::blink::WebMemoryMeasurement"** %30, align 8
  %34 = icmp eq %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  call void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementD1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"* nonnull %33) #10
  %36 = bitcast %"class.performance_manager::mojom::blink::WebMemoryMeasurement"* %33 to i8*
  call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19performance_manager5mojom5blink20WebMemoryMeasurementD1Ev(%"class.performance_manager::mojom::blink::WebMemoryMeasurement"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2430"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.2430"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !6

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !6

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #10
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2431"**
  store %"class.blink::PersistentBase.2431"* %11, %"class.blink::PersistentBase.2431"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !6

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23MeasureMemoryControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::MeasureMemoryController"**
  %5 = load %"class.blink::MeasureMemoryController"*, %"class.blink::MeasureMemoryController"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::MeasureMemoryController"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MeasureMemoryController"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23MeasureMemoryControllerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to %"class.blink::TraceWrapperV8Reference.237"*
  %5 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.237"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.237"* dereferenceable(8) %4) #10
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN5blink22LocalWebMemoryMeasurer16StartMeasurementEPN2v87IsolateEN19performance_manager5mojom25WebMemoryMeasurement_ModeEPNS_23MeasureMemoryControllerENS5_26WebMemoryAttribution_ScopeEN3WTF6StringE(%"class.v8::Isolate"*, i32, %"class.blink::MeasureMemoryController"*, i32, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::MemoryBreakdownEntry"* @_ZN5blink12_GLOBAL__N_127CreateUnattributedBreakdownERKN4mojo16InlinedStructPtrIN19performance_manager5mojom5blink14WebMemoryUsageEEERKN3WTF6StringE(%"class.mojo::InlinedStructPtr.2291"* nocapture readonly dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.blink::HeapVector.2318", align 8
  %4 = alloca %"class.WTF::Vector.360", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #10
  %6 = bitcast i8* %5 to %"class.blink::MemoryBreakdownEntry"*
  tail call void @_ZN5blink20MemoryBreakdownEntryC1Ev(%"class.blink::MemoryBreakdownEntry"* %6) #10
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr.2291", %"class.mojo::InlinedStructPtr.2291"* %0, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 1, i8* %15, align 1
  %16 = bitcast %"class.blink::HeapVector.2318"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = bitcast %"class.blink::HeapVector.2318"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false)
  call void @_ZN5blink20MemoryBreakdownEntry14setAttributionERKNS_10HeapVectorINS_6MemberINS_17MemoryAttributionEEELj0EEE(%"class.blink::MemoryBreakdownEntry"* %6, %"class.blink::HeapVector.2318"* nonnull dereferenceable(16) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  %18 = bitcast %"class.WTF::Vector.360"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #10
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.360"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1) #10
  call void @_ZN5blink20MemoryBreakdownEntry8setTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MemoryBreakdownEntry"* %6, %"class.WTF::Vector.360"* nonnull dereferenceable(16) %4) #10
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %22 = icmp eq %"class.WTF::String"* %21, null
  br i1 %22, label %56, label %23, !prof !14

23:                                               ; preds = %2
  %24 = bitcast %"class.WTF::String"* %21 to i8*
  %25 = load i32, i32* %20, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27, !prof !6

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"class.WTF::String"* [ %49, %48 ], [ %21, %27 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %50 = icmp eq %"class.WTF::String"* %49, %29
  br i1 %50, label %51, label %30

51:                                               ; preds = %48
  store i32 0, i32* %20, align 4
  %52 = bitcast %"class.WTF::Vector.360"* %4 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %23
  %55 = phi i8* [ %53, %51 ], [ %24, %23 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %19, align 8
  br label %56

56:                                               ; preds = %2, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  ret %"class.blink::MemoryBreakdownEntry"* %6
}

declare void @_ZN5blink17MemoryMeasurement12setBreakdownERKNS_10HeapVectorINS_6MemberINS_20MemoryBreakdownEntryEEELj0EEE(%"class.blink::MemoryMeasurement"*, %"class.blink::HeapVector.2310"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2313"*, %"class.blink::MemoryBreakdownEntry"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2313"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %16, i64 %18
  %20 = bitcast %"class.blink::MemoryBreakdownEntry"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2316"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2313"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2316"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20MemoryBreakdownEntryEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2313"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2316"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2316"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2313"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_20MemoryBreakdownEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2313"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2313"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2313"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20MemoryBreakdownEntryEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2316"*, %"class.blink::Member.2316"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.2316"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2316"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !14

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2313"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.2313"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.2313"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_20MemoryBreakdownEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.232"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.232"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_20MemoryBreakdownEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !6

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2316"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2316", %"class.blink::Member.2316"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2316"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20MemoryBreakdownEntryEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_20MemoryBreakdownEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.232"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20MemoryBreakdownEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MemoryBreakdownEntry"*
  %4 = bitcast i8* %1 to void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)**, void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)*, void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)*, void (%"class.blink::MemoryBreakdownEntry"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MemoryBreakdownEntry"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink20MemoryBreakdownEntry14setAttributionERKNS_10HeapVectorINS_6MemberINS_17MemoryAttributionEEELj0EEE(%"class.blink::MemoryBreakdownEntry"*, %"class.blink::HeapVector.2318"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink20MemoryBreakdownEntry8setTypesERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::MemoryBreakdownEntry"*, %"class.WTF::Vector.360"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink20MemoryBreakdownEntryC1Ev(%"class.blink::MemoryBreakdownEntry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.232"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.232"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2321"*, %"class.blink::MemoryAttribution"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2321"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2324"*, %"class.blink::Member.2324"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2324", %"class.blink::Member.2324"* %16, i64 %18
  %20 = bitcast %"class.blink::MemoryAttribution"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2324"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2324"*, %"class.blink::Member.2324"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2324"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17MemoryAttributionEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2470"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2470"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2321"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2470", %"class.blink::HeapVectorBacking.2470"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2324"*, %"class.blink::Member.2324"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2324"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2324"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2321"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17MemoryAttributionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2321"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2321"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2321"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17MemoryAttributionEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2470"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2470"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2324"*, %"class.blink::Member.2324"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2470"* %17, null
  %23 = icmp ne %"class.blink::Member.2324"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2324"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !14

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2321"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2470", %"class.blink::HeapVectorBacking.2470"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.2321"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.2321"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2321", %"class.WTF::Vector.2321"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2470", %"class.blink::HeapVectorBacking.2470"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17MemoryAttributionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2470"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2470"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2470"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.232"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.232"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17MemoryAttributionEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2324"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2324", %"class.blink::Member.2324"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2324"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17MemoryAttributionEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17MemoryAttributionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17MemoryAttributionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MemoryAttribution"*
  %4 = bitcast i8* %1 to void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)**, void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)*, void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)*, void (%"class.blink::MemoryAttribution"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MemoryAttribution"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink17MemoryAttribution12setContainerEPNS_26MemoryAttributionContainerE(%"class.blink::MemoryAttribution"*, %"class.blink::MemoryAttributionContainer"*) local_unnamed_addr #2

declare void @_ZN5blink17MemoryAttributionC1Ev(%"class.blink::MemoryAttribution"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink26MemoryAttributionContainerC1Ev(%"class.blink::MemoryAttributionContainer"*) unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.360"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !14

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !14

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.360"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !14

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !14

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.360"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !6

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

declare void @_ZN5blink17MemoryMeasurementC1Ev(%"class.blink::MemoryMeasurement"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN3ukm8builders21PerformanceAPI_MemoryC1El(%"class.ukm::builders::PerformanceAPI_Memory"*, i64) unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory13SetJavaScriptEl(%"class.ukm::builders::PerformanceAPI_Memory"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory29SetJavaScript_DedicatedWorkerEl(%"class.ukm::builders::PerformanceAPI_Memory"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory6SetDomEl(%"class.ukm::builders::PerformanceAPI_Memory"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::PerformanceAPI_Memory"* @_ZN3ukm8builders21PerformanceAPI_Memory9SetSharedEl(%"class.ukm::builders::PerformanceAPI_Memory"*, i64) local_unnamed_addr #2

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3ukm8builders21PerformanceAPI_MemoryD1Ev(%"class.ukm::builders::PerformanceAPI_Memory"*) unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.237"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v82V88MakeWeakEPPm(i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23MeasureMemoryControllerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.232"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23MeasureMemoryControllerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.232"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23MeasureMemoryControllerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23MeasureMemoryControllerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.v8::Context"**
  %4 = load %"class.v8::Context"*, %"class.v8::Context"** %3, align 8
  %5 = icmp eq %"class.v8::Context"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::Context"* %4 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %7) #10
  store %"class.v8::Context"* null, %"class.v8::Context"** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23MeasureMemoryControllerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink22WrapPersistentInternalINS_23MeasureMemoryControllerEEENS_10PersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink22WrapPersistentInternalINS_23MeasureMemoryControllerEEENS_10PersistentIT_EEPS3_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS1_10PersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink23MeasureMemoryControllerEFvN4mojo9StructPtrIN19performance_manager5mojom5blink20WebMemoryMeasurementEEEEJNS1_10PersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{i64 0, i64 65}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
