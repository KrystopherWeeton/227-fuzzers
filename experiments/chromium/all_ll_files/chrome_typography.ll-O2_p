; ModuleID = '../../chrome/browser/ui/views/chrome_typography.cc'
source_filename = "../../chrome/browser/ui/views/chrome_typography.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::FontList" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", %"class.std::__1::vector", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.18", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr.1"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.34", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.ui::ResourceBundle::FontDetails" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.ui::TouchUiController" = type { i8, i32, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.59 }
%class.scoped_refptr.59 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.60", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.61" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z40GetFontSizeDeltaBoundedByAvailableHeightii(i32, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::FontList", align 8
  %4 = alloca %"class.gfx::FontList", align 8
  %5 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 %1)
  %6 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %7 = bitcast %"class.gfx::FontList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.gfx::FontList", %"class.gfx::FontList"* %3, i64 0, i32 0, i32 0
  store %"class.gfx::FontListImpl"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontListImpl"*), %"class.gfx::FontListImpl"** %8, align 8
  %9 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %6, i32 %5) #4
  call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* nonnull %3, %"class.gfx::FontList"* dereferenceable(8) %9) #4
  %10 = bitcast %"class.gfx::FontList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  call void @_ZNK3gfx8FontList26DeriveWithHeightUpperBoundEi(%"class.gfx::FontList"* nonnull sret %4, %"class.gfx::FontList"* nonnull %3, i32 %0) #4
  %11 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* nonnull %3, %"class.gfx::FontList"* nonnull dereferenceable(8) %4) #4
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  %12 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %3) #4
  %13 = sub i32 %5, %1
  %14 = add i32 %13, %12
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  ret i32 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.gfx::FontList", align 8
  %3 = add nsw i32 %0, -12
  %4 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %5 = bitcast %"class.gfx::FontList"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.gfx::FontList", %"class.gfx::FontList"* %2, i64 0, i32 0, i32 0
  store %"class.gfx::FontListImpl"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontListImpl"*), %"class.gfx::FontListImpl"** %6, align 8
  %7 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %4, i32 %3) #4
  call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* nonnull %2, %"class.gfx::FontList"* dereferenceable(8) %7) #4
  %8 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %2) #4
  %9 = icmp eq i32 %8, %0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %2) #4
  %12 = sub nsw i32 %0, %11
  %13 = add nsw i32 %12, %3
  %14 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %4, i32 %13) #4
  %15 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* nonnull %2, %"class.gfx::FontList"* dereferenceable(8) %14) #4
  %16 = add i32 %12, -12
  br label %17

17:                                               ; preds = %1, %10
  %18 = phi i32 [ %16, %10 ], [ -12, %1 ]
  %19 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %2) #4
  %20 = add i32 %18, %19
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret i32 %20
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"*, %"class.gfx::FontList"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK3gfx8FontList26DeriveWithHeightUpperBoundEi(%"class.gfx::FontList"* sret, %"class.gfx::FontList"*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"*, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z21ApplyCommonFontStylesiiRN2ui14ResourceBundle11FontDetailsE(i32, i32, %"struct.ui::ResourceBundle::FontDetails"* nocapture dereferenceable(32)) local_unnamed_addr #0 {
  %4 = alloca %"class.gfx::FontList", align 8
  %5 = alloca %"class.gfx::FontList", align 8
  %6 = alloca %"class.gfx::FontList", align 8
  %7 = alloca %"class.gfx::FontList", align 8
  %8 = alloca %"class.gfx::FontList", align 8
  %9 = alloca %"class.gfx::FontList", align 8
  switch i32 %0, label %87 [
    i32 17, label %10
    i32 12, label %32
    i32 13, label %36
    i32 15, label %36
    i32 14, label %62
    i32 20, label %75
    i32 21, label %78
    i32 22, label %81
    i32 23, label %84
  ]

10:                                               ; preds = %3
  %11 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #4
  %12 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %19 [
    i32 2, label %18
    i32 1, label %14
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %11, i64 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %10
  br label %19

19:                                               ; preds = %14, %10, %18
  %20 = phi i32 [ 22, %18 ], [ 17, %14 ], [ 17, %10 ]
  %21 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 %20) #4
  %22 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %23 = bitcast %"class.gfx::FontList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  %24 = getelementptr inbounds %"class.gfx::FontList", %"class.gfx::FontList"* %8, i64 0, i32 0, i32 0
  store %"class.gfx::FontListImpl"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontListImpl"*), %"class.gfx::FontListImpl"** %24, align 8
  %25 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %22, i32 %21) #4
  call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* nonnull %8, %"class.gfx::FontList"* dereferenceable(8) %25) #4
  %26 = bitcast %"class.gfx::FontList"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #4
  call void @_ZNK3gfx8FontList26DeriveWithHeightUpperBoundEi(%"class.gfx::FontList"* nonnull sret %9, %"class.gfx::FontList"* nonnull %8, i32 %20) #4
  %27 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* nonnull %8, %"class.gfx::FontList"* nonnull dereferenceable(8) %9) #4
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #4
  %28 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %8) #4
  %29 = sub i32 %21, %20
  %30 = add i32 %29, %28
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  %31 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %87

32:                                               ; preds = %3
  %33 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 14)
  %34 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 2
  store i32 700, i32* %35, align 4
  br label %87

36:                                               ; preds = %3, %3
  %37 = tail call i32 @_ZN15LocationBarView22GetAvailableTextHeightEv() #4
  %38 = tail call %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() #4
  %39 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  switch i32 %40, label %46 [
    i32 2, label %45
    i32 1, label %41
  ]

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.ui::TouchUiController", %"class.ui::TouchUiController"* %38, i64 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %41, %36
  br label %46

46:                                               ; preds = %41, %36, %45
  %47 = phi i32 [ 15, %45 ], [ 14, %41 ], [ 14, %36 ]
  %48 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 %47) #4
  %49 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %50 = bitcast %"class.gfx::FontList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #4
  %51 = getelementptr inbounds %"class.gfx::FontList", %"class.gfx::FontList"* %6, i64 0, i32 0, i32 0
  store %"class.gfx::FontListImpl"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontListImpl"*), %"class.gfx::FontListImpl"** %51, align 8
  %52 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %49, i32 %48) #4
  call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* nonnull %6, %"class.gfx::FontList"* dereferenceable(8) %52) #4
  %53 = bitcast %"class.gfx::FontList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #4
  call void @_ZNK3gfx8FontList26DeriveWithHeightUpperBoundEi(%"class.gfx::FontList"* nonnull sret %7, %"class.gfx::FontList"* nonnull %6, i32 %37) #4
  %54 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* nonnull %6, %"class.gfx::FontList"* nonnull dereferenceable(8) %7) #4
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #4
  %55 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %6) #4
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #4
  %56 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  %57 = icmp eq i32 %0, 15
  %58 = sext i1 %57 to i32
  %59 = sub nsw i32 %58, %47
  %60 = add i32 %59, %48
  %61 = add i32 %60, %55
  store i32 %61, i32* %56, align 8
  br label %87

62:                                               ; preds = %3
  %63 = tail call i32 @_ZN15LocationBarView32GetAvailableDecorationTextHeightEv() #4
  %64 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 11) #4
  %65 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %66 = bitcast %"class.gfx::FontList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #4
  %67 = getelementptr inbounds %"class.gfx::FontList", %"class.gfx::FontList"* %4, i64 0, i32 0, i32 0
  store %"class.gfx::FontListImpl"* inttoptr (i64 -6148914691236517206 to %"class.gfx::FontListImpl"*), %"class.gfx::FontListImpl"** %67, align 8
  %68 = tail call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle20GetFontListWithDeltaEi(%"class.ui::ResourceBundle"* %65, i32 %64) #4
  call void @_ZN3gfx8FontListC1ERKS0_(%"class.gfx::FontList"* nonnull %4, %"class.gfx::FontList"* dereferenceable(8) %68) #4
  %69 = bitcast %"class.gfx::FontList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #4
  call void @_ZNK3gfx8FontList26DeriveWithHeightUpperBoundEi(%"class.gfx::FontList"* nonnull sret %5, %"class.gfx::FontList"* nonnull %4, i32 %63) #4
  %70 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN3gfx8FontListaSERKS0_(%"class.gfx::FontList"* nonnull %4, %"class.gfx::FontList"* nonnull dereferenceable(8) %5) #4
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #4
  %71 = call i32 @_ZNK3gfx8FontList11GetFontSizeEv(%"class.gfx::FontList"* nonnull %4) #4
  %72 = add i32 %64, -11
  %73 = add i32 %72, %71
  call void @_ZN3gfx8FontListD1Ev(%"class.gfx::FontList"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #4
  %74 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %73, i32* %74, align 8
  br label %87

75:                                               ; preds = %3
  %76 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 18)
  %77 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %76, i32* %77, align 8
  br label %87

78:                                               ; preds = %3
  %79 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 13)
  %80 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %79, i32* %80, align 8
  br label %87

81:                                               ; preds = %3
  %82 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 14)
  %83 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %82, i32* %83, align 8
  br label %87

84:                                               ; preds = %3
  %85 = tail call i32 @_Z44GetFontSizeDeltaIgnoringUserOrLocaleSettingsi(i32 13)
  %86 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %2, i64 0, i32 1
  store i32 %85, i32* %86, align 8
  br label %87

87:                                               ; preds = %3, %84, %81, %78, %75, %62, %46, %32, %19
  ret void
}

declare %"class.ui::TouchUiController"* @_ZN2ui17TouchUiController3GetEv() local_unnamed_addr #2

declare i32 @_ZN15LocationBarView22GetAvailableTextHeightEv() local_unnamed_addr #2

declare i32 @_ZN15LocationBarView32GetAvailableDecorationTextHeightEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
