; ModuleID = '../../chrome/browser/extensions/extension_action_icon_factory.cc'
source_filename = "../../chrome/browser/extensions/extension_action_icon_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExtensionActionIconFactory = type { %"class.extensions::IconImage::Observer", %class.Profile*, %"class.extensions::ExtensionAction"*, %"class.ExtensionActionIconFactory::Observer"*, i8, %"class.gfx::Image", %"class.base::ScopedObservation" }
%"class.extensions::IconImage::Observer" = type { i32 (...)** }
%"class.gfx::Image" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.base::ScopedObservation" = type { %"class.extensions::IconImage::Observer"*, %"class.extensions::IconImage"* }
%"class.extensions::IconImage" = type { %"class.content::NotificationObserver", %"class.content::BrowserContext"*, %class.scoped_refptr.109, %class.ExtensionIconSet, i32, i8, i8, [2 x i8], %"class.base::ObserverList.204", %"class.extensions::IconImage::Source"*, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.gfx::Image", %"class.content::NotificationRegistrar", %"class.base::WeakPtrFactory" }
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.scoped_refptr.109 = type { %"class.extensions::Extension"* }
%class.ExtensionIconSet = type { %"class.std::__1::map.46" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList.204" = type <{ %"class.std::__1::vector.205", %"class.base::LinkedList.212", i64, i32, [4 x i8] }>
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.207" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.212" = type { %"class.base::LinkNode.213" }
%"class.base::LinkNode.213" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.extensions::IconImage::Source" = type opaque
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector.217" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair.219" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.110", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126", %"class.std::__1::vector.132", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.152", %"class.std::__1::map.193", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.110" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.134" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.139" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.145" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { i32*, i32*, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.158" }
%"union.absl::variant_internal::DestructibleUnionImpl.158" = type { %"union.absl::variant_internal::DestructibleUnionImpl.159" }
%"union.absl::variant_internal::DestructibleUnionImpl.159" = type { %"union.absl::variant_internal::DestructibleUnionImpl.160" }
%"union.absl::variant_internal::DestructibleUnionImpl.160" = type { %"union.absl::variant_internal::DestructibleUnionImpl.161" }
%"union.absl::variant_internal::DestructibleUnionImpl.161" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.193" = type { %"class.std::__1::__tree.194" }
%"class.std::__1::__tree.194" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.extensions::ExtensionAction" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::map.35", %"class.std::__1::map.46", %"class.std::__1::map.55", %"class.std::__1::map.46", %"class.std::__1::map.64", %"class.std::__1::map.64", %"class.std::__1::map.73", %"class.std::__1::map.82", %"class.std::__1::map.91", %"class.std::__1::map.82", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.gfx::Image", %"class.std::__1::basic_string" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.73" = type { %"class.std::__1::__tree.74" }
%"class.std::__1::__tree.74" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.ExtensionIconSet* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.extensions::IconImage"* }
%"class.ExtensionActionIconFactory::Observer" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.229 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.228, i32, i32 }
%class.sk_sp.228 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.229 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.235", [4 x i8] }>
%"struct.std::__1::atomic.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__atomic_base.237" }
%"struct.std::__1::__atomic_base.237" = type { %"struct.std::__1::__cxx_atomic_impl.238" }
%"struct.std::__1::__cxx_atomic_impl.238" = type { %"struct.std::__1::__cxx_atomic_base_impl.239" }
%"struct.std::__1::__cxx_atomic_base_impl.239" = type { i32 }

$_ZN4base17ScopedObservationIN10extensions9IconImageENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN10extensions9IconImageEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

@_ZN12_GLOBAL__N_123g_allow_invisible_iconsE = internal unnamed_addr global i8 1, align 1
@_ZTV26ExtensionActionIconFactory = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExtensionActionIconFactory*, %"class.extensions::IconImage"*)* @_ZN26ExtensionActionIconFactory27OnExtensionIconImageChangedEPN10extensions9IconImageE to i8*), i8* bitcast (void (%class.ExtensionActionIconFactory*, %"class.extensions::IconImage"*)* @_ZN26ExtensionActionIconFactory29OnExtensionIconImageDestroyedEPN10extensions9IconImageE to i8*), i8* bitcast (void (%class.ExtensionActionIconFactory*)* @_ZN26ExtensionActionIconFactoryD2Ev to i8*), i8* bitcast (void (%class.ExtensionActionIconFactory*)* @_ZN26ExtensionActionIconFactoryD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [50 x i8] c"Extensions.ManifestIconSetIconWasVisibleForPacked\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"Extensions.ManifestIconSetIconWasVisibleForPackedRendered\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"source_ == nullptr\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"../../base/scoped_observation.h\00", align 1
@_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN26ExtensionActionIconFactoryC1EP7ProfilePKN10extensions9ExtensionEPNS2_15ExtensionActionEPNS_8ObserverE = hidden unnamed_addr alias void (%class.ExtensionActionIconFactory*, %class.Profile*, %"class.extensions::Extension"*, %"class.extensions::ExtensionAction"*, %"class.ExtensionActionIconFactory::Observer"*), void (%class.ExtensionActionIconFactory*, %class.Profile*, %"class.extensions::Extension"*, %"class.extensions::ExtensionAction"*, %"class.ExtensionActionIconFactory::Observer"*)* @_ZN26ExtensionActionIconFactoryC2EP7ProfilePKN10extensions9ExtensionEPNS2_15ExtensionActionEPNS_8ObserverE
@_ZN26ExtensionActionIconFactoryD1Ev = hidden unnamed_addr alias void (%class.ExtensionActionIconFactory*), void (%class.ExtensionActionIconFactory*)* @_ZN26ExtensionActionIconFactoryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN26ExtensionActionIconFactory29SetAllowInvisibleIconsForTestEb(i1 zeroext) local_unnamed_addr #0 align 2 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN12_GLOBAL__N_123g_allow_invisible_iconsE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactoryC2EP7ProfilePKN10extensions9ExtensionEPNS2_15ExtensionActionEPNS_8ObserverE(%class.ExtensionActionIconFactory*, %class.Profile*, %"class.extensions::Extension"*, %"class.extensions::ExtensionAction"*, %"class.ExtensionActionIconFactory::Observer"*) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV26ExtensionActionIconFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 1
  store %class.Profile* %1, %class.Profile** %8, align 8
  %9 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 2
  store %"class.extensions::ExtensionAction"* %3, %"class.extensions::ExtensionAction"** %9, align 8
  %10 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 3
  store %"class.ExtensionActionIconFactory::Observer"* %4, %"class.ExtensionActionIconFactory::Observer"** %10, align 8
  %11 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 4
  %12 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %2) #7
  %13 = icmp ne i32 %12, 4
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %11, align 8
  %15 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %15) #7
  %16 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %16, i64 0, i32 0
  store %"class.extensions::IconImage::Observer"* %6, %"class.extensions::IconImage::Observer"** %17, align 8
  %18 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 1
  store %"class.extensions::IconImage"* null, %"class.extensions::IconImage"** %18, align 8
  %19 = getelementptr inbounds %"class.extensions::ExtensionAction", %"class.extensions::ExtensionAction"* %3, i64 0, i32 15, i32 0, i32 0, i32 0
  %20 = load %"class.extensions::IconImage"*, %"class.extensions::IconImage"** %19, align 8
  %21 = icmp eq %"class.extensions::IconImage"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %5
  tail call void @_ZN4base17ScopedObservationIN10extensions9IconImageENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_(%"class.base::ScopedObservation"* %16, %"class.extensions::IconImage"* nonnull %20)
  br label %23

23:                                               ; preds = %5, %22
  ret void
}

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base17ScopedObservationIN10extensions9IconImageENS2_8ObserverEXadL_ZNS2_11AddObserverEPS3_EEXadL_ZNS2_14RemoveObserverES4_EEE7ObserveEPS2_(%"class.base::ScopedObservation"*, %"class.extensions::IconImage"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %0, i64 0, i32 1
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.extensions::IconImage"*, %"class.extensions::IconImage"** %8, align 8
  %11 = icmp eq %"class.extensions::IconImage"* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %7, align 8
  br label %23

13:                                               ; preds = %2
  %14 = bitcast %"class.extensions::IconImage"** %8 to i8*
  %15 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN10extensions9IconImageEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #7
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEDn(i8* null) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %18, i8** %7, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 61, %"class.logging::CheckOpResult"* nonnull %4) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %12, %13, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  store %"class.extensions::IconImage"* %1, %"class.extensions::IconImage"** %8, align 8
  %24 = getelementptr inbounds %"class.base::ScopedObservation", %"class.base::ScopedObservation"* %0, i64 0, i32 0
  %25 = load %"class.extensions::IconImage::Observer"*, %"class.extensions::IconImage::Observer"** %24, align 8
  call void @_ZN10extensions9IconImage11AddObserverEPNS0_8ObserverE(%"class.extensions::IconImage"* %1, %"class.extensions::IconImage::Observer"* %25) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactoryD2Ev(%class.ExtensionActionIconFactory*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV26ExtensionActionIconFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 1
  %4 = load %"class.extensions::IconImage"*, %"class.extensions::IconImage"** %3, align 8
  %5 = icmp eq %"class.extensions::IconImage"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 0
  %8 = load %"class.extensions::IconImage::Observer"*, %"class.extensions::IconImage::Observer"** %7, align 8
  tail call void @_ZN10extensions9IconImage14RemoveObserverEPNS0_8ObserverE(%"class.extensions::IconImage"* nonnull %4, %"class.extensions::IconImage::Observer"* %8) #7
  store %"class.extensions::IconImage"* null, %"class.extensions::IconImage"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %10) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactoryD0Ev(%class.ExtensionActionIconFactory*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV26ExtensionActionIconFactory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 1
  %4 = load %"class.extensions::IconImage"*, %"class.extensions::IconImage"** %3, align 8
  %5 = icmp eq %"class.extensions::IconImage"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 0
  %8 = load %"class.extensions::IconImage::Observer"*, %"class.extensions::IconImage::Observer"** %7, align 8
  tail call void @_ZN10extensions9IconImage14RemoveObserverEPNS0_8ObserverE(%"class.extensions::IconImage"* nonnull %4, %"class.extensions::IconImage::Observer"* %8) #7
  store %"class.extensions::IconImage"* null, %"class.extensions::IconImage"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 5
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %10) #7
  %11 = bitcast %class.ExtensionActionIconFactory* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactory27OnExtensionIconImageChangedEPN10extensions9IconImageE(%class.ExtensionActionIconFactory* nocapture readonly, %"class.extensions::IconImage"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 3
  %4 = load %"class.ExtensionActionIconFactory::Observer"*, %"class.ExtensionActionIconFactory::Observer"** %3, align 8
  %5 = icmp eq %"class.ExtensionActionIconFactory::Observer"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.ExtensionActionIconFactory::Observer"* %4 to void (%"class.ExtensionActionIconFactory::Observer"*)***
  %8 = load void (%"class.ExtensionActionIconFactory::Observer"*)**, void (%"class.ExtensionActionIconFactory::Observer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ExtensionActionIconFactory::Observer"*)*, void (%"class.ExtensionActionIconFactory::Observer"*)** %8, i64 2
  %10 = load void (%"class.ExtensionActionIconFactory::Observer"*)*, void (%"class.ExtensionActionIconFactory::Observer"*)** %9, align 8
  tail call void %10(%"class.ExtensionActionIconFactory::Observer"* nonnull %4) #7
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactory29OnExtensionIconImageDestroyedEPN10extensions9IconImageE(%class.ExtensionActionIconFactory* nocapture, %"class.extensions::IconImage"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 1
  %4 = load %"class.extensions::IconImage"*, %"class.extensions::IconImage"** %3, align 8
  %5 = icmp eq %"class.extensions::IconImage"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %0, i64 0, i32 6, i32 0
  %8 = load %"class.extensions::IconImage::Observer"*, %"class.extensions::IconImage::Observer"** %7, align 8
  tail call void @_ZN10extensions9IconImage14RemoveObserverEPNS0_8ObserverE(%"class.extensions::IconImage"* nonnull %4, %"class.extensions::IconImage::Observer"* %8) #7
  store %"class.extensions::IconImage"* null, %"class.extensions::IconImage"** %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExtensionActionIconFactory7GetIconEi(%"class.gfx::Image"* noalias sret, %class.ExtensionActionIconFactory*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.gfx::Image", align 8
  %5 = alloca %"class.gfx::Image", align 8
  %6 = alloca %"class.gfx::Image", align 8
  %7 = alloca %"class.gfx::Image", align 8
  %8 = bitcast %"class.gfx::Image"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.gfx::Image", %"class.gfx::Image"* %4, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageStorage"*), %"class.gfx::internal::ImageStorage"** %9, align 8
  %10 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %1, i64 0, i32 2
  %11 = load %"class.extensions::ExtensionAction"*, %"class.extensions::ExtensionAction"** %10, align 8
  call void @_ZNK10extensions15ExtensionAction20GetExplicitlySetIconEi(%"class.gfx::Image"* nonnull sret %4, %"class.extensions::ExtensionAction"* %11, i32 %2) #7
  %12 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* nonnull %4) #7
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* nonnull dereferenceable(8) %4) #7
  br label %64

14:                                               ; preds = %3
  %15 = bitcast %"class.gfx::Image"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = load %"class.extensions::ExtensionAction"*, %"class.extensions::ExtensionAction"** %10, align 8
  call void @_ZNK10extensions15ExtensionAction18GetDeclarativeIconEi(%"class.gfx::Image"* nonnull sret %5, %"class.extensions::ExtensionAction"* %16, i32 %2) #7
  %17 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* nonnull %4, %"class.gfx::Image"* nonnull dereferenceable(8) %5) #7
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  %18 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* nonnull %4) #7
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* nonnull dereferenceable(8) %4) #7
  br label %64

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %1, i64 0, i32 5
  %22 = call zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"* %21) #7
  br i1 %22, label %23, label %63

23:                                               ; preds = %20
  %24 = bitcast %"class.gfx::Image"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = load %"class.extensions::ExtensionAction"*, %"class.extensions::ExtensionAction"** %10, align 8
  call void @_ZNK10extensions15ExtensionAction19GetDefaultIconImageEv(%"class.gfx::Image"* nonnull sret %6, %"class.extensions::ExtensionAction"* %25) #7
  %26 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"* nonnull %4, %"class.gfx::Image"* nonnull dereferenceable(8) %6) #7
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %27 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %1, i64 0, i32 4
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %61, label %30

30:                                               ; preds = %23
  %31 = call %class.SkBitmap* @_ZNK3gfx5Image10ToSkBitmapEv(%"class.gfx::Image"* nonnull %4) #7
  %32 = call zeroext i1 @_ZN10extensions10image_util25IsIconSufficientlyVisibleERK8SkBitmap(%class.SkBitmap* dereferenceable(56) %31) #7
  %33 = load atomic i64, i64* @_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %34 = inttoptr i64 %33 to %"class.base::HistogramBase"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 1) #7
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* @_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %39

39:                                               ; preds = %30, %36
  %40 = phi %"class.base::HistogramBase"* [ %34, %30 ], [ %37, %36 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %40, i1 zeroext %32) #7
  %41 = getelementptr inbounds %class.ExtensionActionIconFactory, %class.ExtensionActionIconFactory* %1, i64 0, i32 1
  %42 = bitcast %class.Profile** %41 to %"class.content::BrowserContext"**
  %43 = load %"class.content::BrowserContext"*, %"class.content::BrowserContext"** %42, align 8
  %44 = call zeroext i1 @_ZN10extensions7ui_util50IsRenderedIconSufficientlyVisibleForBrowserContextERK8SkBitmapPN7content14BrowserContextE(%class.SkBitmap* dereferenceable(56) %31, %"class.content::BrowserContext"* %43) #7
  %45 = load atomic i64, i64* @_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %46 = inttoptr i64 %45 to %"class.base::HistogramBase"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 1) #7
  %50 = ptrtoint %"class.base::HistogramBase"* %49 to i64
  store atomic i64 %50, i64* @_ZZN26ExtensionActionIconFactory7GetIconEiE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %51

51:                                               ; preds = %39, %48
  %52 = phi %"class.base::HistogramBase"* [ %46, %39 ], [ %49, %48 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %52, i1 zeroext %44) #7
  %53 = xor i1 %32, true
  %54 = load i8, i8* @_ZN12_GLOBAL__N_123g_allow_invisible_iconsE, align 1
  %55 = icmp eq i8 %54, 0
  %56 = and i1 %55, %53
  br i1 %56, label %57, label %61

57:                                               ; preds = %51
  %58 = bitcast %"class.gfx::Image"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7
  %59 = load %"class.extensions::ExtensionAction"*, %"class.extensions::ExtensionAction"** %10, align 8
  call void @_ZNK10extensions15ExtensionAction23GetPlaceholderIconImageEv(%"class.gfx::Image"* nonnull sret %7, %"class.extensions::ExtensionAction"* %59) #7
  %60 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"* nonnull %4, %"class.gfx::Image"* nonnull dereferenceable(8) %7) #7
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7
  br label %61

61:                                               ; preds = %57, %51, %23
  %62 = call dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"* %21, %"class.gfx::Image"* nonnull dereferenceable(8) %4) #7
  br label %63

63:                                               ; preds = %61, %20
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* dereferenceable(8) %21) #7
  br label %64

64:                                               ; preds = %63, %19, %13
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK10extensions15ExtensionAction20GetExplicitlySetIconEi(%"class.gfx::Image"* sret, %"class.extensions::ExtensionAction"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx5Image7IsEmptyEv(%"class.gfx::Image"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #3

declare void @_ZNK10extensions15ExtensionAction18GetDeclarativeIconEi(%"class.gfx::Image"* sret, %"class.extensions::ExtensionAction"*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK10extensions15ExtensionAction19GetDefaultIconImageEv(%"class.gfx::Image"* sret, %"class.extensions::ExtensionAction"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.gfx::Image"* @_ZN3gfx5ImageaSEOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #3

declare %class.SkBitmap* @_ZNK3gfx5Image10ToSkBitmapEv(%"class.gfx::Image"*) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions10image_util25IsIconSufficientlyVisibleERK8SkBitmap(%class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions7ui_util50IsRenderedIconSufficientlyVisibleForBrowserContextERK8SkBitmapPN7content14BrowserContextE(%class.SkBitmap* dereferenceable(56), %"class.content::BrowserContext"*) local_unnamed_addr #2

declare void @_ZNK10extensions15ExtensionAction23GetPlaceholderIconImageEv(%"class.gfx::Image"* sret, %"class.extensions::ExtensionAction"*) local_unnamed_addr #2

declare void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN10extensions9IconImage11AddObserverEPNS0_8ObserverE(%"class.extensions::IconImage"*, %"class.extensions::IconImage::Observer"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEDn(i8*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN10extensions9IconImageEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #7
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare void @_ZN10extensions9IconImage14RemoveObserverEPNS0_8ObserverE(%"class.extensions::IconImage"*, %"class.extensions::IconImage::Observer"*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
