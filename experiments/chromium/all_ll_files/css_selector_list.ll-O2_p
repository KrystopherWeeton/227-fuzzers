; ModuleID = '../../third_party/blink/renderer/core/css/css_selector_list.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_selector_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::CSSSelector::RareData" = type { %"class.WTF::RefCounted.3", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %union.anon, %"class.blink::QualifiedName", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.6" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CSSSelectorList"* }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.13"*, i32, i32 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::CSSParserSelector"* }
%"class.blink::CSSParserSelector" = type { %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.13" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::CSSSelector"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.25, i32, i8, i8, [2 x i8] }>
%union.anon.25 = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [16 x i8] }
%"class.WTF::VectorBufferBase.28" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.45 }
%union.anon.45 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink11CSSSelectorC2ERKS0_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZN5blink12_GLOBAL__N_120kCSSSelectorTypeNameE = internal constant [19 x i8] c"blink::CSSSelector\00", align 16
@.str = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* noalias nocapture sret, %"class.blink::CSSSelectorList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %1, i64 0, i32 0
  %5 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %4, align 8
  %6 = icmp eq %"class.blink::CSSSelector"* %5, null
  %7 = ptrtoint %"class.blink::CSSSelector"* %5 to i64
  br i1 %6, label %21, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::CSSSelector"* [ %14, %8 ], [ %5, %2 ]
  %10 = bitcast %"class.blink::CSSSelector"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 65536
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %9, i64 1
  br i1 %13, label %8, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %"class.blink::CSSSelector"* %9 to i64
  %17 = sub i64 %16, %7
  %18 = lshr exact i64 %17, 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %20, %15 ], [ 0, %2 ]
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 4
  %25 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN5blink12_GLOBAL__N_120kCSSSelectorTypeNameE, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::CSSSelectorList"* %0 to i8**
  store i8* %25, i8** %26, align 8
  %27 = icmp eq i32 %22, 0
  %28 = bitcast i8* %25 to %"class.blink::CSSSelector"*
  br i1 %27, label %36, label %29

29:                                               ; preds = %21, %29
  %30 = phi i64 [ %34, %29 ], [ 0, %21 ]
  %31 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %28, i64 %30
  %32 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %4, align 8
  %33 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %32, i64 %30
  tail call void @_ZN5blink11CSSSelectorC2ERKS0_(%"class.blink::CSSSelector"* %31, %"class.blink::CSSSelector"* dereferenceable(16) %33)
  %34 = add nuw nsw i64 %30, 1
  %35 = icmp eq i64 %34, %23
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %21
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15CSSSelectorList13ComputeLengthEv(%"class.blink::CSSSelectorList"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %2, align 8
  %4 = icmp eq %"class.blink::CSSSelector"* %3, null
  %5 = ptrtoint %"class.blink::CSSSelector"* %3 to i64
  br i1 %4, label %19, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::CSSSelector"* [ %12, %6 ], [ %3, %1 ]
  %8 = bitcast %"class.blink::CSSSelector"* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 65536
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %7, i64 1
  br i1 %11, label %6, label %13

13:                                               ; preds = %6
  %14 = ptrtoint %"class.blink::CSSSelector"* %7 to i64
  %15 = sub i64 %14, %5
  %16 = lshr exact i64 %15, 4
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, 1
  br label %19

19:                                               ; preds = %1, %13
  %20 = phi i32 [ %18, %13 ], [ 0, %1 ]
  ret i32 %20
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11CSSSelectorC2ERKS0_(%"class.blink::CSSSelector"*, %"class.blink::CSSSelector"* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::CSSSelector"* %0 to i32*
  %4 = bitcast %"class.blink::CSSSelector"* %1 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 15
  %7 = load i32, i32* %3, align 8
  %8 = and i32 %7, -16
  %9 = or i32 %8, %6
  store i32 %9, i32* %3, align 8
  %10 = load i32, i32* %4, align 8
  %11 = and i32 %10, 240
  %12 = and i32 %9, -241
  %13 = or i32 %12, %11
  store i32 %13, i32* %3, align 8
  %14 = load i32, i32* %4, align 8
  %15 = and i32 %14, 65280
  %16 = and i32 %13, -65281
  %17 = or i32 %16, %15
  store i32 %17, i32* %3, align 8
  %18 = load i32, i32* %4, align 8
  %19 = and i32 %18, 65536
  %20 = and i32 %17, -65537
  %21 = or i32 %20, %19
  store i32 %21, i32* %3, align 8
  %22 = load i32, i32* %4, align 8
  %23 = and i32 %22, 131072
  %24 = and i32 %21, -131073
  %25 = or i32 %24, %23
  store i32 %25, i32* %3, align 8
  %26 = load i32, i32* %4, align 8
  %27 = and i32 %26, 262144
  %28 = and i32 %25, -262145
  %29 = or i32 %28, %27
  store i32 %29, i32* %3, align 8
  %30 = load i32, i32* %4, align 8
  %31 = and i32 %30, 524288
  %32 = and i32 %29, -524289
  %33 = or i32 %32, %31
  store i32 %33, i32* %3, align 8
  %34 = load i32, i32* %4, align 8
  %35 = and i32 %34, 1048576
  %36 = and i32 %33, -1048577
  %37 = or i32 %36, %35
  store i32 %37, i32* %3, align 8
  %38 = load i32, i32* %4, align 8
  %39 = and i32 %38, 2097152
  %40 = and i32 %37, -2097153
  %41 = or i32 %40, %39
  store i32 %41, i32* %3, align 8
  %42 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %0, i64 0, i32 1
  %43 = load i32, i32* %4, align 8
  %44 = and i32 %43, 240
  %45 = icmp eq i32 %44, 16
  br i1 %45, label %46, label %59

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1, i64 0, i32 1
  %48 = bitcast %"union.blink::CSSSelector::DataUnion"* %47 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = bitcast %"union.blink::CSSSelector::DataUnion"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, null
  br i1 %51, label %92, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 16777216
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %92

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %58) #8
  br label %92

59:                                               ; preds = %2
  %60 = and i32 %43, 262144
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1, i64 0, i32 1
  %64 = bitcast %"union.blink::CSSSelector::DataUnion"* %63 to %"struct.blink::CSSSelector::RareData"**
  %65 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %64, align 8
  %66 = bitcast %"union.blink::CSSSelector::DataUnion"* %42 to %"struct.blink::CSSSelector::RareData"**
  store %"struct.blink::CSSSelector::RareData"* %65, %"struct.blink::CSSSelector::RareData"** %66, align 8
  %67 = icmp eq %"struct.blink::CSSSelector::RareData"* %65, null
  br i1 %67, label %92, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %69) #8
  br label %92

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #8
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %80
  tail call void @llvm.trap() #8
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %90, %75, %70, %68, %62, %57, %52, %46
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* noalias nocapture sret, %"class.WTF::Vector.12"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %26, %2
  %7 = phi i64 [ 0, %2 ], [ %27, %26 ]
  %8 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %8, align 8
  %9 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 16) #8
  %10 = extractvalue { i64, i1 } %9, 1
  br i1 %10, label %11, label %12, !prof !2

11:                                               ; preds = %6
  tail call void @llvm.trap() #8
  unreachable

12:                                               ; preds = %6
  %13 = extractvalue { i64, i1 } %9, 0
  %14 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZN5blink12_GLOBAL__N_120kCSSSelectorTypeNameE, i64 0, i64 0)) #8
  %15 = bitcast %"class.blink::CSSSelectorList"* %0 to i8**
  store i8* %14, i8** %15, align 8
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast i8* %14 to %"class.blink::CSSSelector"*
  br i1 %17, label %38, label %73

19:                                               ; preds = %2, %26
  %20 = phi i64 [ %27, %26 ], [ 0, %2 ]
  %21 = phi i32 [ %28, %26 ], [ 0, %2 ]
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.13"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %1, i32 %21) #8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %23, align 8
  %25 = icmp eq %"class.blink::CSSParserSelector"* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %31, %19
  %27 = phi i64 [ %20, %19 ], [ %34, %31 ]
  %28 = add nuw i32 %21, 1
  %29 = load i32, i32* %3, align 4
  %30 = icmp ult i32 %28, %29
  br i1 %30, label %19, label %6

31:                                               ; preds = %19, %31
  %32 = phi %"class.blink::CSSParserSelector"* [ %36, %31 ], [ %24, %19 ]
  %33 = phi i64 [ %34, %31 ], [ %20, %19 ]
  %34 = add i64 %33, 1
  %35 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %35, align 8
  %37 = icmp eq %"class.blink::CSSParserSelector"* %36, null
  br i1 %37, label %26, label %31

38:                                               ; preds = %110, %12
  %39 = phi i32 [ 0, %12 ], [ %111, %110 ]
  %40 = add i32 %39, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %18, i64 %41
  %43 = bitcast %"class.blink::CSSSelector"* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = or i32 %44, 2162688
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %38
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %53, align 8
  %55 = zext i32 %50 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %54, i64 %55
  br label %57

57:                                               ; preds = %64, %52
  %58 = phi %"class.std::__1::unique_ptr.13"* [ %65, %64 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %59, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %59, align 8
  %61 = icmp eq %"class.blink::CSSParserSelector"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  tail call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %60) #8
  %63 = bitcast %"class.blink::CSSParserSelector"* %60 to i8*
  tail call void @free(i8* %63) #8
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %58, i64 1
  %66 = icmp eq %"class.std::__1::unique_ptr.13"* %65, %56
  br i1 %66, label %67, label %57

67:                                               ; preds = %64
  store i32 0, i32* %3, align 4
  br label %68

68:                                               ; preds = %67, %49
  %69 = bitcast %"class.WTF::Vector.12"* %1 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.WTF::Vector.12"* %1 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  store i32 0, i32* %46, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #8
  br label %72

72:                                               ; preds = %38, %68
  ret void

73:                                               ; preds = %12, %110
  %74 = phi i32 [ %112, %110 ], [ 0, %12 ]
  %75 = phi i32 [ %111, %110 ], [ 0, %12 ]
  %76 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.13"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"* %1, i32 %74) #8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %77, align 8
  %79 = icmp eq %"class.blink::CSSParserSelector"* %78, null
  br i1 %79, label %110, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.blink::CSSParserSelector"* %78 to i8**
  %83 = load i8*, i8** %82, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %81, align 8
  %84 = zext i32 %75 to i64
  %85 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %18, i64 %84
  %86 = bitcast %"class.blink::CSSSelector"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %83, i64 16, i1 false)
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %83) #8
  %87 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %78, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %87, align 8
  %89 = icmp eq %"class.blink::CSSParserSelector"* %88, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %80, %90
  %91 = phi %"class.blink::CSSParserSelector"* [ %105, %90 ], [ %88, %80 ]
  %92 = phi %"class.blink::CSSSelector"* [ %102, %90 ], [ %85, %80 ]
  %93 = phi i32 [ %97, %90 ], [ %75, %80 ]
  %94 = bitcast %"class.blink::CSSSelector"* %92 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, -131073
  store i32 %96, i32* %94, align 8
  %97 = add i32 %93, 1
  %98 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.blink::CSSParserSelector"* %91 to i8**
  %100 = load i8*, i8** %99, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %98, align 8
  %101 = zext i32 %97 to i64
  %102 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %18, i64 %101
  %103 = bitcast %"class.blink::CSSSelector"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %100, i64 16, i1 false)
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %100) #8
  %104 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %104, align 8
  %106 = icmp eq %"class.blink::CSSParserSelector"* %105, null
  br i1 %106, label %107, label %90

107:                                              ; preds = %90, %80
  %108 = phi i32 [ %75, %80 ], [ %97, %90 ]
  %109 = add i32 %108, 1
  br label %110

110:                                              ; preds = %107, %73
  %111 = phi i32 [ %75, %73 ], [ %109, %107 ]
  %112 = add nuw i32 %74, 1
  %113 = load i32, i32* %3, align 4
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %73, label %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSSelector"* @_ZNK5blink15CSSSelectorList13FirstForCSSOMEv(%"class.blink::CSSSelectorList"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %2, align 8
  %4 = icmp eq %"class.blink::CSSSelector"* %3, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"class.blink::CSSSelector"* [ %29, %26 ], [ %3, %1 ]
  br label %7

7:                                                ; preds = %7, %5
  %8 = phi %"class.blink::CSSSelector"* [ %6, %5 ], [ %13, %7 ]
  %9 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 131072
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 1
  br i1 %12, label %7, label %14

14:                                               ; preds = %7
  %15 = and i32 %10, 2097152
  %16 = icmp ne i32 %15, 0
  %17 = icmp eq %"class.blink::CSSSelector"* %13, null
  %18 = or i1 %17, %16
  br i1 %18, label %30, label %19

19:                                               ; preds = %14, %19
  %20 = phi %"class.blink::CSSSelector"* [ %25, %19 ], [ %6, %14 ]
  %21 = bitcast %"class.blink::CSSSelector"* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 131072
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %20, i64 1
  br i1 %24, label %19, label %26

26:                                               ; preds = %19
  %27 = and i32 %22, 2097152
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, %"class.blink::CSSSelector"* %25, %"class.blink::CSSSelector"* null
  br label %5

30:                                               ; preds = %14, %30
  %31 = phi %"class.blink::CSSSelector"* [ %36, %30 ], [ %6, %14 ]
  %32 = bitcast %"class.blink::CSSSelector"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 131072
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %31, i64 1
  br i1 %35, label %30, label %37

37:                                               ; preds = %30
  %38 = and i32 %33, 65536
  %39 = icmp ne i32 %38, 0
  %40 = icmp eq %"class.blink::CSSSelector"* %36, null
  %41 = or i1 %40, %39
  br i1 %41, label %53, label %42

42:                                               ; preds = %37, %42
  %43 = phi %"class.blink::CSSSelector"* [ %48, %42 ], [ %6, %37 ]
  %44 = bitcast %"class.blink::CSSSelector"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 131072
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %43, i64 1
  br i1 %47, label %42, label %49

49:                                               ; preds = %42
  %50 = and i32 %45, 65536
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, %"class.blink::CSSSelector"* %48, %"class.blink::CSSSelector"* null
  br label %53

53:                                               ; preds = %37, %1, %49
  %54 = phi %"class.blink::CSSSelector"* [ %52, %49 ], [ null, %1 ], [ %3, %37 ]
  ret %"class.blink::CSSSelector"* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %2, align 8
  br label %7

4:                                                ; preds = %50
  %5 = bitcast %"class.blink::CSSSelectorList"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %6) #8
  ret void

7:                                                ; preds = %50, %1
  %8 = phi %"class.blink::CSSSelector"* [ %3, %1 ], [ %51, %50 ]
  %9 = bitcast %"class.blink::CSSSelector"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 65536
  %12 = icmp eq i32 %11, 0
  %13 = and i32 %10, 240
  %14 = icmp eq i32 %13, 16
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  %17 = bitcast %"union.blink::CSSSelector::DataUnion"* %16 to %"class.blink::QualifiedName"*
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %17) #8
  br label %50

18:                                               ; preds = %7
  %19 = and i32 %10, 262144
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 0, i32 1
  br i1 %20, label %33, label %22

22:                                               ; preds = %18
  %23 = bitcast %"union.blink::CSSSelector::DataUnion"* %21 to %"struct.blink::CSSSelector::RareData"**
  %24 = load %"struct.blink::CSSSelector::RareData"*, %"struct.blink::CSSSelector::RareData"** %23, align 8
  %25 = icmp eq %"struct.blink::CSSSelector::RareData"* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #8
  %28 = getelementptr inbounds %"struct.blink::CSSSelector::RareData", %"struct.blink::CSSSelector::RareData"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  tail call void @_ZN5blink11CSSSelector8RareDataD1Ev(%"struct.blink::CSSSelector::RareData"* nonnull %24) #8
  %32 = bitcast %"struct.blink::CSSSelector::RareData"* %24 to i8*
  tail call void @free(i8* %32) #8
  br label %50

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"union.blink::CSSSelector::DataUnion", %"union.blink::CSSSelector::DataUnion"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %50

50:                                               ; preds = %15, %22, %26, %31, %33, %46, %49
  %51 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %8, i64 1
  br i1 %12, label %7, label %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15CSSSelectorList13SelectorsTextEv(%"class.blink::CSSSelectorList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %8 = bitcast %union.anon.25* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  %13 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %12, align 8
  %14 = icmp eq %"class.blink::CSSSelector"* %13, null
  br i1 %14, label %72, label %15

15:                                               ; preds = %1, %34
  %16 = phi %"class.blink::CSSSelector"* [ %37, %34 ], [ %13, %1 ]
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"class.blink::CSSSelector"* [ %16, %15 ], [ %23, %17 ]
  %19 = bitcast %"class.blink::CSSSelector"* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 131072
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %18, i64 1
  br i1 %22, label %17, label %24

24:                                               ; preds = %17
  %25 = and i32 %20, 2097152
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %38

27:                                               ; preds = %24, %27
  %28 = phi %"class.blink::CSSSelector"* [ %33, %27 ], [ %16, %24 ]
  %29 = bitcast %"class.blink::CSSSelector"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 131072
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %28, i64 1
  br i1 %32, label %27, label %34

34:                                               ; preds = %27
  %35 = and i32 %30, 2097152
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, %"class.blink::CSSSelector"* %33, %"class.blink::CSSSelector"* null
  br label %15

38:                                               ; preds = %24, %38
  %39 = phi %"class.blink::CSSSelector"* [ %44, %38 ], [ %16, %24 ]
  %40 = bitcast %"class.blink::CSSSelector"* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 131072
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %39, i64 1
  br i1 %43, label %38, label %45

45:                                               ; preds = %38
  %46 = and i32 %41, 65536
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %45, %48
  %49 = phi %"class.blink::CSSSelector"* [ %54, %48 ], [ %16, %45 ]
  %50 = bitcast %"class.blink::CSSSelector"* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 131072
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %49, i64 1
  br i1 %53, label %48, label %55

55:                                               ; preds = %48
  %56 = and i32 %51, 65536
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %55, %45
  %59 = phi %"class.blink::CSSSelector"* [ %13, %45 ], [ %54, %55 ]
  %60 = icmp eq %"class.blink::CSSSelector"* %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.WTF::StringView"* %3 to i8*
  %63 = bitcast %"class.WTF::StringView"* %3 to i64*
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %66 = bitcast %"class.WTF::StringView"* %4 to i8*
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %71 = bitcast %"class.WTF::StringView"* %4 to i64*
  br label %90

72:                                               ; preds = %172, %1, %55, %58
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #8
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8
  ret %"class.WTF::StringImpl"* %73

90:                                               ; preds = %177, %61
  %91 = phi %"class.blink::CSSSelector"* [ %13, %61 ], [ %178, %177 ]
  %92 = phi %"class.blink::CSSSelector"* [ %59, %61 ], [ %171, %177 ]
  %93 = icmp eq %"class.blink::CSSSelector"* %91, null
  br i1 %93, label %138, label %94

94:                                               ; preds = %90, %113
  %95 = phi %"class.blink::CSSSelector"* [ %116, %113 ], [ %91, %90 ]
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi %"class.blink::CSSSelector"* [ %95, %94 ], [ %102, %96 ]
  %98 = bitcast %"class.blink::CSSSelector"* %97 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 131072
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %97, i64 1
  br i1 %101, label %96, label %103

103:                                              ; preds = %96
  %104 = and i32 %99, 2097152
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %117

106:                                              ; preds = %103, %106
  %107 = phi %"class.blink::CSSSelector"* [ %112, %106 ], [ %95, %103 ]
  %108 = bitcast %"class.blink::CSSSelector"* %107 to i32*
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, 131072
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %107, i64 1
  br i1 %111, label %106, label %113

113:                                              ; preds = %106
  %114 = and i32 %109, 2097152
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, %"class.blink::CSSSelector"* %112, %"class.blink::CSSSelector"* null
  br label %94

117:                                              ; preds = %103, %117
  %118 = phi %"class.blink::CSSSelector"* [ %123, %117 ], [ %95, %103 ]
  %119 = bitcast %"class.blink::CSSSelector"* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 131072
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %118, i64 1
  br i1 %122, label %117, label %124

124:                                              ; preds = %117
  %125 = and i32 %120, 65536
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %138

127:                                              ; preds = %124, %127
  %128 = phi %"class.blink::CSSSelector"* [ %133, %127 ], [ %95, %124 ]
  %129 = bitcast %"class.blink::CSSSelector"* %128 to i32*
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 131072
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %128, i64 1
  br i1 %132, label %127, label %134

134:                                              ; preds = %127
  %135 = and i32 %130, 65536
  %136 = icmp eq i32 %135, 0
  %137 = select i1 %136, %"class.blink::CSSSelector"* %133, %"class.blink::CSSSelector"* null
  br label %138

138:                                              ; preds = %124, %90, %134
  %139 = phi %"class.blink::CSSSelector"* [ %137, %134 ], [ null, %90 ], [ %91, %124 ]
  %140 = icmp eq %"class.blink::CSSSelector"* %92, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #8
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %142, i64* %63, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %64, align 8
  store i32 2, i32* %65, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #8
  br label %143

143:                                              ; preds = %138, %141
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  %144 = call %"class.WTF::StringImpl"* @_ZNK5blink11CSSSelector12SelectorTextEv(%"class.blink::CSSSelector"* nonnull %92) #8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  store i8* null, i8** %68, align 8
  %147 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %147, i64* %71, align 8
  store i32 0, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %164

148:                                              ; preds = %143
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %67, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 1
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %69, align 8
  store i32 %150, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %148
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %148
  %161 = phi i32 [ %159, %158 ], [ %157, %148 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #8
  br label %164

164:                                              ; preds = %146, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  br label %165

165:                                              ; preds = %165, %164
  %166 = phi %"class.blink::CSSSelector"* [ %92, %164 ], [ %171, %165 ]
  %167 = bitcast %"class.blink::CSSSelector"* %166 to i32*
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 131072
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %166, i64 1
  br i1 %170, label %165, label %172

172:                                              ; preds = %165
  %173 = and i32 %168, 2097152
  %174 = icmp ne i32 %173, 0
  %175 = icmp eq %"class.blink::CSSSelector"* %171, null
  %176 = or i1 %175, %174
  br i1 %176, label %72, label %177

177:                                              ; preds = %172
  %178 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %12, align 8
  br label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11CSSSelector12SelectorTextEv(%"class.blink::CSSSelector"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11CSSSelector8RareDataD1Ev(%"struct.blink::CSSSelector::RareData"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.13"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.12"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.13"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"*) unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
