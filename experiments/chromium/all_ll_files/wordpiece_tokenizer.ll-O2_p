; ModuleID = '../../third_party/tensorflow-text/src/tensorflow_text/core/kernels/wordpiece_tokenizer.cc'
source_filename = "../../third_party/tensorflow-text/src/tensorflow_text/core/kernels/wordpiece_tokenizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tensorflow::text::LookupStatus" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.tensorflow::text::WordpieceVocab" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS6_EESE_SE_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcRiEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4absl11string_viewEEEEvDpOT_ = comdat any

@.str.2 = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tensorflow4text17WordpieceTokenizeERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbSD_bPKNS0_14WordpieceVocabEPNS5_6vectorISB_NS9_ISB_EEEEPNSH_IiNS9_IiEEEESN_Pi(%"struct.tensorflow::text::LookupStatus"* noalias nocapture sret, %"class.absl::string_view"* dereferenceable(16), i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.tensorflow::text::WordpieceVocab"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"*, i32* nocapture) local_unnamed_addr #0 {
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.absl::AlphaNum", align 8
  %19 = alloca %"class.absl::AlphaNum", align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.absl::AlphaNum", align 8
  %24 = alloca %"class.absl::AlphaNum", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.absl::AlphaNum", align 8
  %27 = alloca %"class.absl::AlphaNum", align 8
  %28 = alloca i8*, align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.absl::AlphaNum", align 8
  %32 = alloca %"class.absl::AlphaNum", align 8
  %33 = alloca %"class.std::__1::vector.6", align 8
  %34 = alloca i8, align 1
  %35 = alloca %"struct.tensorflow::text::LookupStatus", align 8
  %36 = alloca %"class.std::__1::vector", align 8
  %37 = alloca %"class.std::__1::vector.6", align 8
  %38 = alloca %"class.std::__1::vector.6", align 8
  %39 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %41, %2
  br i1 %42, label %43, label %325

43:                                               ; preds = %13
  %44 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 1
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp ult i32* %45, %47
  %49 = ptrtoint i32* %47 to i64
  br i1 %48, label %50, label %54

50:                                               ; preds = %43
  store i32 0, i32* %45, align 4
  %51 = getelementptr inbounds i32, i32* %45, i64 1
  %52 = ptrtoint i32* %51 to i64
  %53 = bitcast i32** %44 to i64*
  store i64 %52, i64* %53, align 8
  br label %110

54:                                               ; preds = %43
  %55 = ptrtoint i32* %45 to i64
  %56 = bitcast i32** %44 to i64*
  %57 = bitcast %"class.std::__1::vector.6"* %10 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %55, %58
  %60 = ashr exact i64 %59, 2
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 4611686018427387903
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  %64 = bitcast %"class.std::__1::vector.6"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #9
  unreachable

65:                                               ; preds = %54
  %66 = bitcast i32** %46 to i64*
  %67 = sub i64 %49, %58
  %68 = ashr exact i64 %67, 2
  %69 = icmp ult i64 %68, 2305843009213693951
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = ashr exact i64 %67, 1
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 4611686018427387903
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  tail call void @abort() #9
  unreachable

78:                                               ; preds = %75, %65
  %79 = phi i64 [ %73, %75 ], [ 4611686018427387903, %65 ]
  %80 = shl i64 %79, 2
  %81 = tail call i8* @_Znwm(i64 %80) #10
  %82 = bitcast i8* %81 to i32*
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi i32* [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds i32, i32* %85, i64 %60
  %87 = getelementptr inbounds i32, i32* %85, i64 %84
  %88 = ptrtoint i32* %87 to i64
  store i32 0, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = load i64, i64* %56, align 8
  %94 = ptrtoint i32* %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 2
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds i32, i32* %86, i64 %97
  %99 = ptrtoint i32* %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %83
  %102 = bitcast i32* %98 to i8*
  %103 = bitcast i32* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %95, i1 false) #11
  %104 = load i32*, i32** %91, align 8
  br label %105

105:                                              ; preds = %101, %83
  %106 = phi i32* [ %92, %83 ], [ %104, %101 ]
  store i64 %99, i64* %57, align 8
  store i64 %90, i64* %56, align 8
  store i64 %88, i64* %66, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = bitcast i32* %106 to i8*
  tail call void @_ZdlPv(i8* %109) #10
  br label %110

110:                                              ; preds = %50, %105, %108
  store i32 1, i32* %12, align 4
  br i1 %5, label %111, label %208

111:                                              ; preds = %110
  %112 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %114 to i64
  %119 = select i1 %115, i64 %117, i64 %118
  %120 = trunc i64 %119 to i32
  %121 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 1
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = icmp ult i32* %122, %124
  %126 = ptrtoint i32* %124 to i64
  br i1 %125, label %127, label %131

127:                                              ; preds = %111
  store i32 %120, i32* %122, align 4
  %128 = getelementptr inbounds i32, i32* %122, i64 1
  %129 = ptrtoint i32* %128 to i64
  %130 = bitcast i32** %121 to i64*
  store i64 %129, i64* %130, align 8
  br label %187

131:                                              ; preds = %111
  %132 = ptrtoint i32* %122 to i64
  %133 = bitcast i32** %121 to i64*
  %134 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %132, %135
  %137 = ashr exact i64 %136, 2
  %138 = add nsw i64 %137, 1
  %139 = icmp ugt i64 %138, 4611686018427387903
  br i1 %139, label %140, label %142

140:                                              ; preds = %131
  %141 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %141) #9
  unreachable

142:                                              ; preds = %131
  %143 = bitcast i32** %123 to i64*
  %144 = sub i64 %126, %135
  %145 = ashr exact i64 %144, 2
  %146 = icmp ult i64 %145, 2305843009213693951
  br i1 %146, label %147, label %155

147:                                              ; preds = %142
  %148 = ashr exact i64 %144, 1
  %149 = icmp ult i64 %148, %138
  %150 = select i1 %149, i64 %138, i64 %148
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %147
  %153 = icmp ugt i64 %150, 4611686018427387903
  br i1 %153, label %154, label %155

154:                                              ; preds = %152
  tail call void @abort() #9
  unreachable

155:                                              ; preds = %152, %142
  %156 = phi i64 [ %150, %152 ], [ 4611686018427387903, %142 ]
  %157 = shl i64 %156, 2
  %158 = tail call i8* @_Znwm(i64 %157) #10
  %159 = bitcast i8* %158 to i32*
  br label %160

160:                                              ; preds = %155, %147
  %161 = phi i64 [ %156, %155 ], [ 0, %147 ]
  %162 = phi i32* [ %159, %155 ], [ null, %147 ]
  %163 = getelementptr inbounds i32, i32* %162, i64 %137
  %164 = getelementptr inbounds i32, i32* %162, i64 %161
  %165 = ptrtoint i32* %164 to i64
  store i32 %120, i32* %163, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 1
  %167 = ptrtoint i32* %166 to i64
  %168 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = load i64, i64* %133, align 8
  %171 = ptrtoint i32* %169 to i64
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 2
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds i32, i32* %163, i64 %174
  %176 = ptrtoint i32* %175 to i64
  %177 = icmp sgt i64 %172, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %160
  %179 = bitcast i32* %175 to i8*
  %180 = bitcast i32* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* align 4 %180, i64 %172, i1 false) #11
  %181 = load i32*, i32** %168, align 8
  br label %182

182:                                              ; preds = %178, %160
  %183 = phi i32* [ %169, %160 ], [ %181, %178 ]
  store i64 %176, i64* %134, align 8
  store i64 %167, i64* %133, align 8
  store i64 %165, i64* %143, align 8
  %184 = icmp eq i32* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = bitcast i32* %183 to i8*
  tail call void @_ZdlPv(i8* %186) #10
  br label %187

187:                                              ; preds = %127, %182, %185
  %188 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %189 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %191 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %190, align 8
  %192 = icmp ult %"class.std::__1::basic_string"* %189, %191
  br i1 %192, label %193, label %207

193:                                              ; preds = %187
  %194 = load i8, i8* %113, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %193
  %197 = bitcast %"class.std::__1::basic_string"* %189 to i8*
  %198 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 24, i1 false) #11
  br label %203

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = load i64, i64* %116, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %189, i8* %201, i64 %202) #11
  br label %203

203:                                              ; preds = %199, %196
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %189, i64 1
  %205 = ptrtoint %"class.std::__1::basic_string"* %204 to i64
  %206 = bitcast %"class.std::__1::basic_string"** %188 to i64*
  store i64 %205, i64* %206, align 8
  br label %320

207:                                              ; preds = %187
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_(%"class.std::__1::vector"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %6) #11
  br label %320

208:                                              ; preds = %110
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %210 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %212 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %211, align 8
  %213 = icmp ult %"class.std::__1::basic_string"* %210, %212
  br i1 %213, label %214, label %250

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %216 = load i8*, i8** %215, align 8, !noalias !2
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 24, i1 false) #11, !alias.scope !2
  br label %246

220:                                              ; preds = %214
  %221 = load i64, i64* %39, align 8, !noalias !2
  %222 = icmp ugt i64 %221, -17
  br i1 %222, label %223, label %225

223:                                              ; preds = %220
  %224 = bitcast %"class.std::__1::basic_string"* %210 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %224) #9
  unreachable

225:                                              ; preds = %220
  %226 = icmp ult i64 %221, 23
  br i1 %226, label %235, label %227

227:                                              ; preds = %225
  %228 = add nuw i64 %221, 16
  %229 = and i64 %228, -16
  %230 = tail call i8* @_Znwm(i64 %229) #10
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %230, i8** %231, align 8, !alias.scope !2
  %232 = or i64 %229, -9223372036854775808
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %232, i64* %233, align 8, !alias.scope !2
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %221, i64* %234, align 8, !alias.scope !2
  br label %241

235:                                              ; preds = %225
  %236 = trunc i64 %221 to i8
  %237 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  store i8 %236, i8* %238, align 1, !alias.scope !2
  %239 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  %240 = icmp eq i64 %221, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %235, %227
  %242 = phi i8* [ %230, %227 ], [ %239, %235 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %242, i8* nonnull align 1 %216, i64 %221, i1 false) #11
  br label %243

243:                                              ; preds = %241, %235
  %244 = phi i8* [ %239, %235 ], [ %242, %241 ]
  %245 = getelementptr inbounds i8, i8* %244, i64 %221
  store i8 0, i8* %245, align 1
  br label %246

246:                                              ; preds = %243, %218
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 1
  %248 = ptrtoint %"class.std::__1::basic_string"* %247 to i64
  %249 = bitcast %"class.std::__1::basic_string"** %209 to i64*
  store i64 %248, i64* %249, align 8
  br label %251

250:                                              ; preds = %208
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4absl11string_viewEEEEvDpOT_(%"class.std::__1::vector"* %9, %"class.absl::string_view"* dereferenceable(16) %1) #11
  br label %251

251:                                              ; preds = %246, %250
  %252 = load i64, i64* %39, align 8
  %253 = trunc i64 %252 to i32
  %254 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 1
  %255 = load i32*, i32** %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp ult i32* %255, %257
  %259 = ptrtoint i32* %257 to i64
  br i1 %258, label %260, label %264

260:                                              ; preds = %251
  store i32 %253, i32* %255, align 4
  %261 = getelementptr inbounds i32, i32* %255, i64 1
  %262 = ptrtoint i32* %261 to i64
  %263 = bitcast i32** %254 to i64*
  store i64 %262, i64* %263, align 8
  br label %320

264:                                              ; preds = %251
  %265 = ptrtoint i32* %255 to i64
  %266 = bitcast i32** %254 to i64*
  %267 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = sub i64 %265, %268
  %270 = ashr exact i64 %269, 2
  %271 = add nsw i64 %270, 1
  %272 = icmp ugt i64 %271, 4611686018427387903
  br i1 %272, label %273, label %275

273:                                              ; preds = %264
  %274 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %274) #9
  unreachable

275:                                              ; preds = %264
  %276 = bitcast i32** %256 to i64*
  %277 = sub i64 %259, %268
  %278 = ashr exact i64 %277, 2
  %279 = icmp ult i64 %278, 2305843009213693951
  br i1 %279, label %280, label %288

280:                                              ; preds = %275
  %281 = ashr exact i64 %277, 1
  %282 = icmp ult i64 %281, %271
  %283 = select i1 %282, i64 %271, i64 %281
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %293, label %285

285:                                              ; preds = %280
  %286 = icmp ugt i64 %283, 4611686018427387903
  br i1 %286, label %287, label %288

287:                                              ; preds = %285
  tail call void @abort() #9
  unreachable

288:                                              ; preds = %285, %275
  %289 = phi i64 [ %283, %285 ], [ 4611686018427387903, %275 ]
  %290 = shl i64 %289, 2
  %291 = tail call i8* @_Znwm(i64 %290) #10
  %292 = bitcast i8* %291 to i32*
  br label %293

293:                                              ; preds = %288, %280
  %294 = phi i64 [ %289, %288 ], [ 0, %280 ]
  %295 = phi i32* [ %292, %288 ], [ null, %280 ]
  %296 = getelementptr inbounds i32, i32* %295, i64 %270
  %297 = getelementptr inbounds i32, i32* %295, i64 %294
  %298 = ptrtoint i32* %297 to i64
  store i32 %253, i32* %296, align 4
  %299 = getelementptr inbounds i32, i32* %296, i64 1
  %300 = ptrtoint i32* %299 to i64
  %301 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 0
  %302 = load i32*, i32** %301, align 8
  %303 = load i64, i64* %266, align 8
  %304 = ptrtoint i32* %302 to i64
  %305 = sub i64 %303, %304
  %306 = ashr exact i64 %305, 2
  %307 = sub nsw i64 0, %306
  %308 = getelementptr inbounds i32, i32* %296, i64 %307
  %309 = ptrtoint i32* %308 to i64
  %310 = icmp sgt i64 %305, 0
  br i1 %310, label %311, label %315

311:                                              ; preds = %293
  %312 = bitcast i32* %308 to i8*
  %313 = bitcast i32* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %312, i8* align 4 %313, i64 %305, i1 false) #11
  %314 = load i32*, i32** %301, align 8
  br label %315

315:                                              ; preds = %311, %293
  %316 = phi i32* [ %302, %293 ], [ %314, %311 ]
  store i64 %309, i64* %267, align 8
  store i64 %300, i64* %266, align 8
  store i64 %298, i64* %276, align 8
  %317 = icmp eq i32* %316, null
  br i1 %317, label %320, label %318

318:                                              ; preds = %315
  %319 = bitcast i32* %316 to i8*
  tail call void @_ZdlPv(i8* %319) #10
  br label %320

320:                                              ; preds = %318, %315, %260, %207, %203
  %321 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  store i8 0, i8* %322, align 1, !alias.scope !5
  %323 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to i8*
  store i8 0, i8* %323, align 1, !alias.scope !5
  %324 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 1
  store i8 1, i8* %324, align 8, !alias.scope !5
  br label %1560

325:                                              ; preds = %13
  %326 = bitcast %"class.std::__1::vector"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #11, !noalias !8
  %327 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 1
  %329 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 0, i64 24, i1 false) #11, !noalias !8
  %330 = bitcast %"class.std::__1::vector.6"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #11, !noalias !8
  %331 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %37, i64 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %37, i64 0, i32 0, i32 1
  %333 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %330, i8 0, i64 24, i1 false) #11, !noalias !8
  %334 = bitcast %"class.std::__1::vector.6"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %334) #11, !noalias !8
  %335 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %38, i64 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %38, i64 0, i32 0, i32 1
  %337 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %38, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 0, i64 24, i1 false) #11, !noalias !8
  %338 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %339 = bitcast %"class.std::__1::vector.6"* %33 to i8*
  %340 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %33, i64 0, i32 0, i32 0
  %341 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %33, i64 0, i32 0, i32 1
  %342 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %343 = bitcast i32** %341 to i64*
  %344 = bitcast %"class.std::__1::vector.6"* %33 to i64*
  %345 = bitcast i32** %342 to i64*
  %346 = icmp sgt i32 %3, 0
  %347 = sext i32 %3 to i64
  %348 = bitcast %"struct.tensorflow::text::LookupStatus"* %35 to i8*
  %349 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %35, i64 0, i32 1
  %351 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %354 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %355 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %354, i64 0, i32 1, i32 0
  %356 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %357 = bitcast %"class.absl::AlphaNum"* %31 to i8*
  %358 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %359 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %358, i64 0, i32 1, i32 0
  %360 = bitcast %"class.absl::AlphaNum"* %31 to %"class.std::__1::basic_string"**
  %361 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %362 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %363 = bitcast %"class.absl::AlphaNum"* %31 to i64*
  %364 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %31, i64 0, i32 0, i32 1
  %365 = bitcast %"class.absl::AlphaNum"* %32 to i8*
  %366 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %32, i64 0, i32 0, i32 0
  %367 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %32, i64 0, i32 0, i32 1
  %368 = ptrtoint %"class.std::__1::basic_string"* %29 to i64
  %369 = bitcast %"class.std::__1::basic_string"* %29 to i64*
  %370 = bitcast %"class.tensorflow::text::WordpieceVocab"* %8 to void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)***
  %371 = xor i1 %7, true
  %372 = bitcast %"struct.tensorflow::text::LookupStatus"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %375 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %376 = bitcast i32** %332 to i64*
  %377 = bitcast %"class.std::__1::vector.6"* %37 to i64*
  %378 = bitcast i32** %333 to i64*
  %379 = bitcast i32** %336 to i64*
  %380 = bitcast %"class.std::__1::vector.6"* %38 to i64*
  %381 = bitcast i32** %337 to i64*
  %382 = bitcast i32* %21 to i8*
  %383 = bitcast i8** %28 to i8*
  %384 = bitcast %"class.std::__1::basic_string"** %328 to i64*
  %385 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %386 = bitcast %"class.absl::AlphaNum"* %26 to i8*
  %387 = bitcast %"class.absl::AlphaNum"* %26 to %"class.std::__1::basic_string"**
  %388 = bitcast %"class.absl::AlphaNum"* %26 to i64*
  %389 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %26, i64 0, i32 0, i32 1
  %390 = bitcast %"class.absl::AlphaNum"* %27 to i8*
  %391 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %27, i64 0, i32 0, i32 0
  %392 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %27, i64 0, i32 0, i32 1
  %393 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %396, i64 0, i32 1, i32 0
  %398 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %399 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %401 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %402 = bitcast %"class.absl::AlphaNum"* %23 to i8*
  %403 = bitcast %"class.absl::AlphaNum"* %23 to %"class.std::__1::basic_string"**
  %404 = bitcast %"class.absl::AlphaNum"* %23 to i64*
  %405 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %23, i64 0, i32 0, i32 1
  %406 = bitcast %"class.absl::AlphaNum"* %24 to i8*
  %407 = bitcast %"class.absl::AlphaNum"* %24 to %"class.std::__1::basic_string"**
  %408 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %409 = bitcast %"class.absl::AlphaNum"* %24 to i64*
  %410 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %24, i64 0, i32 0, i32 1
  %411 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  %413 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = bitcast i32* %16 to i8*
  %415 = bitcast i8** %20 to i8*
  %416 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %417 = bitcast %"class.absl::AlphaNum"* %18 to i8*
  %418 = bitcast %"class.absl::AlphaNum"* %18 to %"class.std::__1::basic_string"**
  %419 = bitcast %"class.absl::AlphaNum"* %18 to i64*
  %420 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %18, i64 0, i32 0, i32 1
  %421 = bitcast %"class.absl::AlphaNum"* %19 to i8*
  %422 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %19, i64 0, i32 0, i32 0
  %423 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %19, i64 0, i32 0, i32 1
  %424 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %425 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %424, i64 0, i32 1, i32 0
  %426 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 1
  %428 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %429 = bitcast i32** %427 to i64*
  %430 = bitcast %"class.std::__1::vector.6"* %10 to i64*
  %431 = bitcast i32** %428 to i64*
  %432 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %10, i64 0, i32 0, i32 0
  %433 = bitcast i8** %14 to i8*
  %434 = bitcast i64* %15 to i8*
  %435 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %436 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %437 = bitcast %"class.std::__1::basic_string"** %435 to i64*
  %438 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 1
  %439 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %440 = bitcast i32** %438 to i64*
  %441 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  %442 = bitcast i32** %439 to i64*
  %443 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 0
  %444 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %445 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %444, i64 0, i32 1, i32 0
  %446 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to i8*
  %447 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 1
  br label %448

448:                                              ; preds = %1498, %325
  %449 = phi i32 [ 0, %325 ], [ %1495, %1498 ]
  %450 = icmp slt i32 %449, %41
  br i1 %450, label %451, label %1500

451:                                              ; preds = %448
  %452 = load i8*, i8** %338, align 8, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %339) #11, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 0, i64 24, i1 false) #11, !noalias !11
  %453 = load i64, i64* %39, align 8, !noalias !11
  %454 = trunc i64 %453 to i32
  %455 = sext i32 %449 to i64
  %456 = icmp ugt i64 %453, %455
  br i1 %456, label %457, label %592

457:                                              ; preds = %451, %585
  %458 = phi i64 [ %577, %585 ], [ 0, %451 ]
  %459 = phi i32* [ %586, %585 ], [ null, %451 ]
  %460 = phi i64 [ %587, %585 ], [ %455, %451 ]
  %461 = phi i32 [ %525, %585 ], [ %449, %451 ]
  %462 = add nsw i32 %461, 1
  %463 = getelementptr inbounds i8, i8* %452, i64 %460
  %464 = load i8, i8* %463, align 1, !noalias !11
  %465 = zext i8 %464 to i32
  %466 = icmp sgt i8 %464, -1
  %467 = icmp eq i32 %462, %454
  %468 = or i1 %467, %466
  br i1 %468, label %524, label %469

469:                                              ; preds = %457
  %470 = icmp ugt i8 %464, -33
  br i1 %470, label %471, label %514

471:                                              ; preds = %469
  %472 = icmp ult i8 %464, -16
  br i1 %472, label %473, label %487

473:                                              ; preds = %471
  %474 = and i32 %465, 15
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.2, i64 0, i64 %475
  %477 = load i8, i8* %476, align 1, !noalias !11
  %478 = sext i8 %477 to i32
  %479 = sext i32 %462 to i64
  %480 = getelementptr inbounds i8, i8* %452, i64 %479
  %481 = load i8, i8* %480, align 1, !noalias !11
  %482 = lshr i8 %481, 5
  %483 = zext i8 %482 to i32
  %484 = shl i32 1, %483
  %485 = and i32 %484, %478
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %524, label %510

487:                                              ; preds = %471
  %488 = add nsw i32 %465, -240
  %489 = icmp slt i32 %488, 5
  br i1 %489, label %490, label %524

490:                                              ; preds = %487
  %491 = sext i32 %462 to i64
  %492 = getelementptr inbounds i8, i8* %452, i64 %491
  %493 = load i8, i8* %492, align 1, !noalias !11
  %494 = lshr i8 %493, 4
  %495 = zext i8 %494 to i64
  %496 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.3, i64 0, i64 %495
  %497 = load i8, i8* %496, align 1, !noalias !11
  %498 = sext i8 %497 to i32
  %499 = shl i32 1, %488
  %500 = and i32 %499, %498
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %524, label %502

502:                                              ; preds = %490
  %503 = add nsw i32 %461, 2
  %504 = icmp eq i32 %503, %454
  br i1 %504, label %524, label %505

505:                                              ; preds = %502
  %506 = sext i32 %503 to i64
  %507 = getelementptr inbounds i8, i8* %452, i64 %506
  %508 = load i8, i8* %507, align 1, !noalias !11
  %509 = icmp slt i8 %508, -64
  br i1 %509, label %510, label %524

510:                                              ; preds = %505, %473
  %511 = phi i32 [ %462, %473 ], [ %503, %505 ]
  %512 = add nsw i32 %511, 1
  %513 = icmp eq i32 %512, %454
  br i1 %513, label %524, label %516

514:                                              ; preds = %469
  %515 = icmp ugt i8 %464, -63
  br i1 %515, label %516, label %524

516:                                              ; preds = %514, %510
  %517 = phi i32 [ %512, %510 ], [ %462, %514 ]
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds i8, i8* %452, i64 %518
  %520 = load i8, i8* %519, align 1, !noalias !11
  %521 = icmp slt i8 %520, -64
  %522 = zext i1 %521 to i32
  %523 = add nsw i32 %517, %522
  br label %524

524:                                              ; preds = %516, %514, %510, %505, %502, %490, %487, %473, %457
  %525 = phi i32 [ %462, %457 ], [ %462, %473 ], [ %454, %510 ], [ %462, %490 ], [ %454, %502 ], [ %503, %505 ], [ %462, %487 ], [ %462, %514 ], [ %523, %516 ]
  %526 = load i32*, i32** %342, align 8, !noalias !11
  %527 = icmp eq i32* %459, %526
  br i1 %527, label %531, label %528

528:                                              ; preds = %524
  store i32 %525, i32* %459, align 4, !noalias !11
  %529 = getelementptr inbounds i32, i32* %459, i64 1
  %530 = ptrtoint i32* %529 to i64
  store i64 %530, i64* %343, align 8, !noalias !11
  br label %576

531:                                              ; preds = %524
  %532 = ptrtoint i32* %459 to i64
  %533 = load i64, i64* %344, align 8, !noalias !11
  %534 = sub i64 %532, %533
  %535 = ashr exact i64 %534, 2
  %536 = add nsw i64 %535, 1
  %537 = icmp ugt i64 %536, 4611686018427387903
  br i1 %537, label %538, label %540

538:                                              ; preds = %531
  %539 = bitcast %"class.std::__1::vector.6"* %33 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %539) #9, !noalias !11
  unreachable

540:                                              ; preds = %531
  %541 = icmp ult i64 %535, 2305843009213693951
  br i1 %541, label %542, label %550

542:                                              ; preds = %540
  %543 = ashr exact i64 %534, 1
  %544 = icmp ult i64 %543, %536
  %545 = select i1 %544, i64 %536, i64 %543
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %555, label %547

547:                                              ; preds = %542
  %548 = icmp ugt i64 %545, 4611686018427387903
  br i1 %548, label %549, label %550

549:                                              ; preds = %547
  call void @abort() #9, !noalias !11
  unreachable

550:                                              ; preds = %547, %540
  %551 = phi i64 [ %545, %547 ], [ 4611686018427387903, %540 ]
  %552 = shl i64 %551, 2
  %553 = call i8* @_Znwm(i64 %552) #10, !noalias !11
  %554 = bitcast i8* %553 to i32*
  br label %555

555:                                              ; preds = %550, %542
  %556 = phi i64 [ %551, %550 ], [ 0, %542 ]
  %557 = phi i32* [ %554, %550 ], [ null, %542 ]
  %558 = getelementptr inbounds i32, i32* %557, i64 %535
  %559 = getelementptr inbounds i32, i32* %557, i64 %556
  %560 = ptrtoint i32* %559 to i64
  store i32 %525, i32* %558, align 4, !noalias !11
  %561 = getelementptr inbounds i32, i32* %558, i64 1
  %562 = ptrtoint i32* %561 to i64
  %563 = sub i64 %458, %533
  %564 = ashr exact i64 %563, 2
  %565 = sub nsw i64 0, %564
  %566 = getelementptr inbounds i32, i32* %558, i64 %565
  %567 = ptrtoint i32* %566 to i64
  %568 = icmp sgt i64 %563, 0
  br i1 %568, label %569, label %572

569:                                              ; preds = %555
  %570 = bitcast i32* %566 to i8*
  %571 = inttoptr i64 %533 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %570, i8* align 4 %571, i64 %563, i1 false) #11, !noalias !11
  br label %572

572:                                              ; preds = %569, %555
  store i64 %567, i64* %344, align 8, !noalias !11
  store i64 %562, i64* %343, align 8, !noalias !11
  store i64 %560, i64* %345, align 8, !noalias !11
  %573 = icmp eq i64 %533, 0
  br i1 %573, label %576, label %574

574:                                              ; preds = %572
  %575 = inttoptr i64 %533 to i8*
  call void @_ZdlPv(i8* %575) #10, !noalias !11
  br label %576

576:                                              ; preds = %574, %572, %528
  %577 = phi i64 [ %530, %528 ], [ %562, %572 ], [ %562, %574 ]
  %578 = phi i32* [ %529, %528 ], [ %561, %572 ], [ %561, %574 ]
  br i1 %346, label %579, label %585

579:                                              ; preds = %576
  %580 = load i64, i64* %344, align 8, !noalias !11
  %581 = sub i64 %577, %580
  %582 = ashr exact i64 %581, 2
  %583 = icmp eq i64 %582, %347
  %584 = inttoptr i64 %577 to i32*
  br i1 %583, label %592, label %585

585:                                              ; preds = %579, %576
  %586 = phi i32* [ %584, %579 ], [ %578, %576 ]
  %587 = sext i32 %525 to i64
  %588 = load i64, i64* %39, align 8, !noalias !11
  %589 = icmp ugt i64 %588, %587
  br i1 %589, label %457, label %590

590:                                              ; preds = %585
  %591 = load i64, i64* %344, align 8, !noalias !11
  br label %592

592:                                              ; preds = %579, %590, %451
  %593 = phi i64 [ %591, %590 ], [ 0, %451 ], [ %580, %579 ]
  %594 = phi i64 [ %577, %590 ], [ 0, %451 ], [ %577, %579 ]
  %595 = sub i64 %594, %593
  %596 = icmp sgt i32 %449, 0
  %597 = shl i64 %595, 30
  %598 = ashr i64 %597, 32
  %599 = sub nsw i64 0, %455
  br label %600

600:                                              ; preds = %830, %592
  %601 = phi i8 [ -86, %592 ], [ %817, %830 ]
  %602 = phi i8 [ -86, %592 ], [ %818, %830 ]
  %603 = phi i56 [ -24019198012642646, %592 ], [ %819, %830 ]
  %604 = phi i64 [ -6148914691236517206, %592 ], [ %820, %830 ]
  %605 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %592 ], [ %821, %830 ]
  %606 = phi i8 [ 0, %592 ], [ %822, %830 ]
  %607 = phi i8 [ 0, %592 ], [ %823, %830 ]
  %608 = phi i32 [ -1431655766, %592 ], [ %824, %830 ]
  %609 = phi i64 [ %598, %592 ], [ %610, %830 ]
  %610 = add nsw i64 %609, -1
  %611 = icmp sgt i64 %609, 0
  br i1 %611, label %612, label %832

612:                                              ; preds = %600
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #11, !noalias !11
  store i8 -86, i8* %34, align 1, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %348) #11, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %348, i8 -86, i64 32, i1 false) #11, !noalias !11
  %613 = load i32*, i32** %340, align 8, !noalias !11
  %614 = getelementptr inbounds i32, i32* %613, i64 %610
  %615 = load i32, i32* %614, align 4, !noalias !11
  %616 = sub nsw i32 %615, %449
  %617 = load i8*, i8** %338, align 8, !noalias !14
  %618 = getelementptr inbounds i8, i8* %617, i64 %455
  %619 = sext i32 %616 to i64
  %620 = icmp sgt i32 %616, -1
  br i1 %620, label %622, label %621, !prof !17

621:                                              ; preds = %612
  call void @llvm.trap() #11, !noalias !11
  unreachable

622:                                              ; preds = %612
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #11, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 0, i64 24, i1 false) #11, !noalias !14
  br i1 %596, label %623, label %641

623:                                              ; preds = %622
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %356) #11, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %357) #11, !noalias !14
  %624 = load i8, i8* %359, align 1, !noalias !14
  %625 = icmp slt i8 %624, 0
  br i1 %625, label %628, label %626

626:                                              ; preds = %623
  %627 = zext i8 %624 to i64
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %360, align 8, !noalias !14
  br label %633

628:                                              ; preds = %623
  %629 = load i64, i64* %361, align 8, !noalias !14
  %630 = load i64, i64* %362, align 8, !noalias !14
  store i64 %629, i64* %363, align 8, !noalias !14
  %631 = icmp sgt i64 %630, -1
  br i1 %631, label %633, label %632, !prof !17

632:                                              ; preds = %628
  call void @llvm.trap() #11, !noalias !11
  unreachable

633:                                              ; preds = %628, %626
  %634 = phi i64 [ %627, %626 ], [ %630, %628 ]
  store i64 %634, i64* %364, align 8, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %365) #11, !noalias !14
  store i8* %618, i8** %366, align 8, !noalias !14
  store i64 %619, i64* %367, align 8, !noalias !14
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %30, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %31, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %32) #11, !noalias !11
  %635 = load i8, i8* %355, align 1, !noalias !14
  %636 = icmp slt i8 %635, 0
  br i1 %636, label %637, label %639

637:                                              ; preds = %633
  %638 = load i8*, i8** %352, align 8, !noalias !14
  call void @_ZdlPv(i8* %638) #10, !noalias !11
  br label %639

639:                                              ; preds = %637, %633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %351, i8* nonnull align 8 %356, i64 24, i1 false) #11, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %365) #11, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %357) #11, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %356) #11, !noalias !14
  %640 = load i8, i8* %355, align 1, !noalias !14
  br label %763

641:                                              ; preds = %622
  %642 = getelementptr inbounds i8, i8* %618, i64 %619
  %643 = icmp ugt i32 %616, 22
  br i1 %643, label %644, label %650

644:                                              ; preds = %641
  %645 = add nsw i64 %619, -22
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %29, i64 22, i64 %645, i64 0, i64 0, i64 0, i64 0) #11, !noalias !11
  %646 = load i8, i8* %355, align 1, !noalias !14
  %647 = load i8*, i8** %352, align 8, !noalias !14
  %648 = icmp slt i8 %646, 0
  %649 = select i1 %648, i8* %647, i8* %351
  br label %652

650:                                              ; preds = %641
  %651 = icmp eq i32 %616, 0
  br i1 %651, label %756, label %652

652:                                              ; preds = %650, %644
  %653 = phi i8* [ %649, %644 ], [ %351, %650 ]
  %654 = sext i32 %615 to i64
  %655 = sub nsw i64 %654, %455
  %656 = icmp ult i64 %655, 32
  br i1 %656, label %746, label %657

657:                                              ; preds = %652
  %658 = getelementptr i8, i8* %653, i64 %599
  %659 = sext i32 %615 to i64
  %660 = getelementptr i8, i8* %658, i64 %659
  %661 = getelementptr i8, i8* %617, i64 %659
  %662 = icmp ult i8* %653, %661
  %663 = icmp ult i8* %618, %660
  %664 = and i1 %662, %663
  br i1 %664, label %746, label %665

665:                                              ; preds = %657
  %666 = and i64 %655, -32
  %667 = getelementptr i8, i8* %653, i64 %666
  %668 = getelementptr i8, i8* %618, i64 %666
  %669 = add nsw i64 %666, -32
  %670 = lshr exact i64 %669, 5
  %671 = add nuw nsw i64 %670, 1
  %672 = and i64 %671, 3
  %673 = icmp ult i64 %669, 96
  br i1 %673, label %725, label %674

674:                                              ; preds = %665
  %675 = sub nsw i64 %671, %672
  br label %676

676:                                              ; preds = %676, %674
  %677 = phi i64 [ 0, %674 ], [ %722, %676 ]
  %678 = phi i64 [ %675, %674 ], [ %723, %676 ]
  %679 = getelementptr i8, i8* %653, i64 %677
  %680 = getelementptr i8, i8* %618, i64 %677
  %681 = bitcast i8* %680 to <16 x i8>*
  %682 = load <16 x i8>, <16 x i8>* %681, align 1, !alias.scope !18, !noalias !11
  %683 = getelementptr i8, i8* %680, i64 16
  %684 = bitcast i8* %683 to <16 x i8>*
  %685 = load <16 x i8>, <16 x i8>* %684, align 1, !alias.scope !18, !noalias !11
  %686 = bitcast i8* %679 to <16 x i8>*
  store <16 x i8> %682, <16 x i8>* %686, align 1, !alias.scope !21, !noalias !23
  %687 = getelementptr i8, i8* %679, i64 16
  %688 = bitcast i8* %687 to <16 x i8>*
  store <16 x i8> %685, <16 x i8>* %688, align 1, !alias.scope !21, !noalias !23
  %689 = or i64 %677, 32
  %690 = getelementptr i8, i8* %653, i64 %689
  %691 = getelementptr i8, i8* %618, i64 %689
  %692 = bitcast i8* %691 to <16 x i8>*
  %693 = load <16 x i8>, <16 x i8>* %692, align 1, !alias.scope !18, !noalias !11
  %694 = getelementptr i8, i8* %691, i64 16
  %695 = bitcast i8* %694 to <16 x i8>*
  %696 = load <16 x i8>, <16 x i8>* %695, align 1, !alias.scope !18, !noalias !11
  %697 = bitcast i8* %690 to <16 x i8>*
  store <16 x i8> %693, <16 x i8>* %697, align 1, !alias.scope !21, !noalias !23
  %698 = getelementptr i8, i8* %690, i64 16
  %699 = bitcast i8* %698 to <16 x i8>*
  store <16 x i8> %696, <16 x i8>* %699, align 1, !alias.scope !21, !noalias !23
  %700 = or i64 %677, 64
  %701 = getelementptr i8, i8* %653, i64 %700
  %702 = getelementptr i8, i8* %618, i64 %700
  %703 = bitcast i8* %702 to <16 x i8>*
  %704 = load <16 x i8>, <16 x i8>* %703, align 1, !alias.scope !18, !noalias !11
  %705 = getelementptr i8, i8* %702, i64 16
  %706 = bitcast i8* %705 to <16 x i8>*
  %707 = load <16 x i8>, <16 x i8>* %706, align 1, !alias.scope !18, !noalias !11
  %708 = bitcast i8* %701 to <16 x i8>*
  store <16 x i8> %704, <16 x i8>* %708, align 1, !alias.scope !21, !noalias !23
  %709 = getelementptr i8, i8* %701, i64 16
  %710 = bitcast i8* %709 to <16 x i8>*
  store <16 x i8> %707, <16 x i8>* %710, align 1, !alias.scope !21, !noalias !23
  %711 = or i64 %677, 96
  %712 = getelementptr i8, i8* %653, i64 %711
  %713 = getelementptr i8, i8* %618, i64 %711
  %714 = bitcast i8* %713 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !alias.scope !18, !noalias !11
  %716 = getelementptr i8, i8* %713, i64 16
  %717 = bitcast i8* %716 to <16 x i8>*
  %718 = load <16 x i8>, <16 x i8>* %717, align 1, !alias.scope !18, !noalias !11
  %719 = bitcast i8* %712 to <16 x i8>*
  store <16 x i8> %715, <16 x i8>* %719, align 1, !alias.scope !21, !noalias !23
  %720 = getelementptr i8, i8* %712, i64 16
  %721 = bitcast i8* %720 to <16 x i8>*
  store <16 x i8> %718, <16 x i8>* %721, align 1, !alias.scope !21, !noalias !23
  %722 = add i64 %677, 128
  %723 = add i64 %678, -4
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %725, label %676, !llvm.loop !24

725:                                              ; preds = %676, %665
  %726 = phi i64 [ 0, %665 ], [ %722, %676 ]
  %727 = icmp eq i64 %672, 0
  br i1 %727, label %744, label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %741, %728 ], [ %726, %725 ]
  %730 = phi i64 [ %742, %728 ], [ %672, %725 ]
  %731 = getelementptr i8, i8* %653, i64 %729
  %732 = getelementptr i8, i8* %618, i64 %729
  %733 = bitcast i8* %732 to <16 x i8>*
  %734 = load <16 x i8>, <16 x i8>* %733, align 1, !alias.scope !18, !noalias !11
  %735 = getelementptr i8, i8* %732, i64 16
  %736 = bitcast i8* %735 to <16 x i8>*
  %737 = load <16 x i8>, <16 x i8>* %736, align 1, !alias.scope !18, !noalias !11
  %738 = bitcast i8* %731 to <16 x i8>*
  store <16 x i8> %734, <16 x i8>* %738, align 1, !alias.scope !21, !noalias !23
  %739 = getelementptr i8, i8* %731, i64 16
  %740 = bitcast i8* %739 to <16 x i8>*
  store <16 x i8> %737, <16 x i8>* %740, align 1, !alias.scope !21, !noalias !23
  %741 = add i64 %729, 32
  %742 = add i64 %730, -1
  %743 = icmp eq i64 %742, 0
  br i1 %743, label %744, label %728, !llvm.loop !26

744:                                              ; preds = %728, %725
  %745 = icmp eq i64 %655, %666
  br i1 %745, label %756, label %746

746:                                              ; preds = %744, %657, %652
  %747 = phi i8* [ %653, %657 ], [ %653, %652 ], [ %667, %744 ]
  %748 = phi i8* [ %618, %657 ], [ %618, %652 ], [ %668, %744 ]
  br label %749

749:                                              ; preds = %746, %749
  %750 = phi i8* [ %754, %749 ], [ %747, %746 ]
  %751 = phi i8* [ %753, %749 ], [ %748, %746 ]
  %752 = load i8, i8* %751, align 1, !noalias !11
  store i8 %752, i8* %750, align 1, !noalias !11
  %753 = getelementptr inbounds i8, i8* %751, i64 1
  %754 = getelementptr inbounds i8, i8* %750, i64 1
  %755 = icmp eq i8* %753, %642
  br i1 %755, label %756, label %749, !llvm.loop !28

756:                                              ; preds = %749, %744, %650
  %757 = phi i8* [ %351, %650 ], [ %667, %744 ], [ %754, %749 ]
  store i8 0, i8* %757, align 1, !noalias !11
  %758 = load i8, i8* %355, align 1, !noalias !14
  %759 = icmp slt i8 %758, 0
  br i1 %759, label %760, label %761

760:                                              ; preds = %756
  store i64 %619, i64* %353, align 8, !noalias !14
  br label %770

761:                                              ; preds = %756
  %762 = trunc i32 %616 to i8
  store i8 %762, i8* %355, align 1, !noalias !14
  br label %763

763:                                              ; preds = %761, %639
  %764 = phi i8 [ %762, %761 ], [ %640, %639 ]
  %765 = icmp slt i8 %764, 0
  br i1 %765, label %768, label %766

766:                                              ; preds = %763
  %767 = zext i8 %764 to i64
  br label %775

768:                                              ; preds = %763
  %769 = load i64, i64* %353, align 8, !noalias !14
  br label %770

770:                                              ; preds = %768, %760
  %771 = phi i64 [ %769, %768 ], [ %619, %760 ]
  %772 = load i64, i64* %369, align 8, !noalias !14
  %773 = icmp sgt i64 %771, -1
  br i1 %773, label %775, label %774, !prof !17

774:                                              ; preds = %770
  call void @llvm.trap() #11, !noalias !11
  unreachable

775:                                              ; preds = %770, %766
  %776 = phi i64 [ %772, %770 ], [ %368, %766 ]
  %777 = phi i64 [ %771, %770 ], [ %767, %766 ]
  %778 = inttoptr i64 %776 to i8*
  %779 = load void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)**, void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)*** %370, align 8, !noalias !14
  %780 = getelementptr inbounds void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)*, void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)** %779, i64 2
  %781 = load void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)*, void (%"struct.tensorflow::text::LookupStatus"*, %"class.tensorflow::text::WordpieceVocab"*, i8*, i64, i8*)** %780, align 8, !noalias !14
  call void %781(%"struct.tensorflow::text::LookupStatus"* nonnull sret %35, %"class.tensorflow::text::WordpieceVocab"* %8, i8* %778, i64 %777, i8* nonnull %34) #11, !noalias !11
  %782 = load i8, i8* %355, align 1, !noalias !14
  %783 = icmp slt i8 %782, 0
  br i1 %783, label %784, label %786

784:                                              ; preds = %775
  %785 = load i8*, i8** %352, align 8, !noalias !14
  call void @_ZdlPv(i8* %785) #10, !noalias !11
  br label %786

786:                                              ; preds = %784, %775
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #11, !noalias !14
  %787 = load i8, i8* %350, align 8, !range !29, !noalias !11
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %789, label %796

789:                                              ; preds = %786
  %790 = load i8*, i8** %349, align 8, !noalias !8
  %791 = load i64, i64* %374, align 8, !noalias !8
  %792 = load i64, i64* %375, align 8, !noalias !8
  %793 = trunc i64 %792 to i56
  %794 = lshr i64 %792, 56
  %795 = trunc i64 %794 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %348, i8 0, i64 24, i1 false) #11, !noalias !11
  br label %816

796:                                              ; preds = %786
  %797 = load i8, i8* %34, align 1, !range !29, !noalias !11
  %798 = icmp eq i8 %797, 0
  br i1 %798, label %806, label %799

799:                                              ; preds = %796
  %800 = load i32*, i32** %340, align 8, !noalias !11
  %801 = getelementptr inbounds i32, i32* %800, i64 %610
  %802 = load i32, i32* %801, align 4, !noalias !11
  %803 = ptrtoint i8* %605 to i64
  %804 = and i64 %803, -256
  %805 = inttoptr i64 %804 to i8*
  br label %816

806:                                              ; preds = %796
  %807 = trunc i64 %610 to i32
  %808 = icmp ne i32 %807, 0
  %809 = or i1 %808, %371
  br i1 %809, label %816, label %810

810:                                              ; preds = %806
  %811 = load i32*, i32** %340, align 8, !noalias !11
  %812 = load i32, i32* %811, align 4, !noalias !11
  %813 = ptrtoint i8* %605 to i64
  %814 = and i64 %813, -256
  %815 = inttoptr i64 %814 to i8*
  br label %816

816:                                              ; preds = %810, %806, %799, %789
  %817 = phi i8 [ %795, %789 ], [ %601, %806 ], [ 0, %810 ], [ 0, %799 ]
  %818 = phi i8 [ 0, %789 ], [ %602, %806 ], [ 1, %810 ], [ 1, %799 ]
  %819 = phi i56 [ %793, %789 ], [ %603, %806 ], [ %603, %810 ], [ %603, %799 ]
  %820 = phi i64 [ %791, %789 ], [ %604, %806 ], [ %604, %810 ], [ %604, %799 ]
  %821 = phi i8* [ %790, %789 ], [ %605, %806 ], [ %815, %810 ], [ %805, %799 ]
  %822 = phi i8 [ %606, %789 ], [ %606, %806 ], [ 1, %810 ], [ %606, %799 ]
  %823 = phi i8 [ %607, %789 ], [ %607, %806 ], [ 1, %810 ], [ 1, %799 ]
  %824 = phi i32 [ %608, %789 ], [ %608, %806 ], [ %812, %810 ], [ %802, %799 ]
  %825 = phi i32 [ 1, %789 ], [ 0, %806 ], [ 1, %810 ], [ 1, %799 ]
  %826 = load i8, i8* %373, align 1, !noalias !11
  %827 = icmp slt i8 %826, 0
  br i1 %827, label %828, label %830

828:                                              ; preds = %816
  %829 = load i8*, i8** %349, align 8, !noalias !11
  call void @_ZdlPv(i8* %829) #10, !noalias !11
  br label %830

830:                                              ; preds = %828, %816
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %348) #11, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #11, !noalias !11
  %831 = icmp eq i32 %825, 0
  br i1 %831, label %600, label %836

832:                                              ; preds = %600
  %833 = ptrtoint i8* %605 to i64
  %834 = and i64 %833, -256
  %835 = inttoptr i64 %834 to i8*
  br label %836

836:                                              ; preds = %830, %832
  %837 = phi i8 [ 0, %832 ], [ %817, %830 ]
  %838 = phi i8 [ 1, %832 ], [ %818, %830 ]
  %839 = phi i56 [ %603, %832 ], [ %819, %830 ]
  %840 = phi i64 [ %604, %832 ], [ %820, %830 ]
  %841 = phi i8* [ %835, %832 ], [ %821, %830 ]
  %842 = phi i8 [ %606, %832 ], [ %822, %830 ]
  %843 = phi i8 [ %607, %832 ], [ %823, %830 ]
  %844 = phi i32 [ %608, %832 ], [ %824, %830 ]
  %845 = load i32*, i32** %340, align 8, !noalias !11
  %846 = icmp eq i32* %845, null
  br i1 %846, label %850, label %847

847:                                              ; preds = %836
  %848 = ptrtoint i32* %845 to i64
  store i64 %848, i64* %343, align 8, !noalias !11
  %849 = bitcast i32* %845 to i8*
  call void @_ZdlPv(i8* %849) #10, !noalias !11
  br label %850

850:                                              ; preds = %847, %836
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %339) #11, !noalias !11
  %851 = icmp eq i8 %838, 0
  br i1 %851, label %852, label %860

852:                                              ; preds = %850
  %853 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %841, i8** %853, align 8, !alias.scope !8
  %854 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %840, i64* %854, align 8, !alias.scope !8
  %855 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %856 = zext i8 %837 to i64
  %857 = shl nuw i64 %856, 56
  %858 = zext i56 %839 to i64
  %859 = or i64 %857, %858
  store i64 %859, i64* %855, align 8, !alias.scope !8
  br label %1521

860:                                              ; preds = %850
  %861 = icmp eq i8 %843, 0
  br i1 %861, label %1255, label %862

862:                                              ; preds = %860
  %863 = icmp eq i8 %842, 0
  %864 = load i32*, i32** %332, align 8, !noalias !8
  %865 = load i32*, i32** %333, align 8, !noalias !8
  %866 = icmp eq i32* %864, %865
  %867 = ptrtoint i32* %865 to i64
  %868 = ptrtoint i32* %864 to i64
  br i1 %863, label %1089, label %869

869:                                              ; preds = %862
  br i1 %866, label %873, label %870

870:                                              ; preds = %869
  store i32 %449, i32* %864, align 4, !noalias !8
  %871 = getelementptr inbounds i32, i32* %864, i64 1
  %872 = ptrtoint i32* %871 to i64
  store i64 %872, i64* %376, align 8, !noalias !8
  br label %915

873:                                              ; preds = %869
  %874 = load i64, i64* %377, align 8, !noalias !8
  %875 = sub i64 %868, %874
  %876 = ashr exact i64 %875, 2
  %877 = add nsw i64 %876, 1
  %878 = icmp ugt i64 %877, 4611686018427387903
  br i1 %878, label %879, label %881

879:                                              ; preds = %873
  %880 = bitcast %"class.std::__1::vector.6"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %880) #9, !noalias !8
  unreachable

881:                                              ; preds = %873
  %882 = sub i64 %867, %874
  %883 = ashr exact i64 %882, 2
  %884 = icmp ult i64 %883, 2305843009213693951
  br i1 %884, label %885, label %893

885:                                              ; preds = %881
  %886 = ashr exact i64 %882, 1
  %887 = icmp ult i64 %886, %877
  %888 = select i1 %887, i64 %877, i64 %886
  %889 = icmp eq i64 %888, 0
  br i1 %889, label %898, label %890

890:                                              ; preds = %885
  %891 = icmp ugt i64 %888, 4611686018427387903
  br i1 %891, label %892, label %893

892:                                              ; preds = %890
  call void @abort() #9, !noalias !8
  unreachable

893:                                              ; preds = %890, %881
  %894 = phi i64 [ %888, %890 ], [ 4611686018427387903, %881 ]
  %895 = shl i64 %894, 2
  %896 = call i8* @_Znwm(i64 %895) #10, !noalias !8
  %897 = bitcast i8* %896 to i32*
  br label %898

898:                                              ; preds = %893, %885
  %899 = phi i64 [ %894, %893 ], [ 0, %885 ]
  %900 = phi i8* [ %896, %893 ], [ null, %885 ]
  %901 = phi i32* [ %897, %893 ], [ null, %885 ]
  %902 = getelementptr inbounds i32, i32* %901, i64 %876
  %903 = getelementptr inbounds i32, i32* %901, i64 %899
  %904 = ptrtoint i32* %903 to i64
  store i32 %449, i32* %902, align 4, !noalias !8
  %905 = getelementptr inbounds i32, i32* %902, i64 1
  %906 = ptrtoint i32* %905 to i64
  %907 = ptrtoint i32* %901 to i64
  %908 = icmp sgt i64 %875, 0
  br i1 %908, label %909, label %911

909:                                              ; preds = %898
  %910 = inttoptr i64 %874 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %900, i8* align 4 %910, i64 %875, i1 false) #11, !noalias !8
  br label %911

911:                                              ; preds = %909, %898
  store i64 %907, i64* %377, align 8, !noalias !8
  store i64 %906, i64* %376, align 8, !noalias !8
  store i64 %904, i64* %378, align 8, !noalias !8
  %912 = icmp eq i64 %874, 0
  br i1 %912, label %915, label %913

913:                                              ; preds = %911
  %914 = inttoptr i64 %874 to i8*
  call void @_ZdlPv(i8* %914) #10, !noalias !8
  br label %915

915:                                              ; preds = %913, %911, %870
  %916 = load i32*, i32** %336, align 8, !noalias !8
  %917 = load i32*, i32** %337, align 8, !noalias !8
  %918 = icmp eq i32* %916, %917
  %919 = ptrtoint i32* %917 to i64
  br i1 %918, label %923, label %920

920:                                              ; preds = %915
  store i32 %844, i32* %916, align 4, !noalias !8
  %921 = getelementptr inbounds i32, i32* %916, i64 1
  %922 = ptrtoint i32* %921 to i64
  store i64 %922, i64* %379, align 8, !noalias !8
  br label %966

923:                                              ; preds = %915
  %924 = ptrtoint i32* %916 to i64
  %925 = load i64, i64* %380, align 8, !noalias !8
  %926 = sub i64 %924, %925
  %927 = ashr exact i64 %926, 2
  %928 = add nsw i64 %927, 1
  %929 = icmp ugt i64 %928, 4611686018427387903
  br i1 %929, label %930, label %932

930:                                              ; preds = %923
  %931 = bitcast %"class.std::__1::vector.6"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %931) #9, !noalias !8
  unreachable

932:                                              ; preds = %923
  %933 = sub i64 %919, %925
  %934 = ashr exact i64 %933, 2
  %935 = icmp ult i64 %934, 2305843009213693951
  br i1 %935, label %936, label %944

936:                                              ; preds = %932
  %937 = ashr exact i64 %933, 1
  %938 = icmp ult i64 %937, %928
  %939 = select i1 %938, i64 %928, i64 %937
  %940 = icmp eq i64 %939, 0
  br i1 %940, label %949, label %941

941:                                              ; preds = %936
  %942 = icmp ugt i64 %939, 4611686018427387903
  br i1 %942, label %943, label %944

943:                                              ; preds = %941
  call void @abort() #9, !noalias !8
  unreachable

944:                                              ; preds = %941, %932
  %945 = phi i64 [ %939, %941 ], [ 4611686018427387903, %932 ]
  %946 = shl i64 %945, 2
  %947 = call i8* @_Znwm(i64 %946) #10, !noalias !8
  %948 = bitcast i8* %947 to i32*
  br label %949

949:                                              ; preds = %944, %936
  %950 = phi i64 [ %945, %944 ], [ 0, %936 ]
  %951 = phi i8* [ %947, %944 ], [ null, %936 ]
  %952 = phi i32* [ %948, %944 ], [ null, %936 ]
  %953 = getelementptr inbounds i32, i32* %952, i64 %927
  %954 = getelementptr inbounds i32, i32* %952, i64 %950
  %955 = ptrtoint i32* %954 to i64
  store i32 %844, i32* %953, align 4, !noalias !8
  %956 = getelementptr inbounds i32, i32* %953, i64 1
  %957 = ptrtoint i32* %956 to i64
  %958 = ptrtoint i32* %952 to i64
  %959 = icmp sgt i64 %926, 0
  br i1 %959, label %960, label %962

960:                                              ; preds = %949
  %961 = inttoptr i64 %925 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %951, i8* align 4 %961, i64 %926, i1 false) #11, !noalias !8
  br label %962

962:                                              ; preds = %960, %949
  store i64 %958, i64* %380, align 8, !noalias !8
  store i64 %957, i64* %379, align 8, !noalias !8
  store i64 %955, i64* %381, align 8, !noalias !8
  %963 = icmp eq i64 %925, 0
  br i1 %963, label %966, label %964

964:                                              ; preds = %962
  %965 = inttoptr i64 %925 to i8*
  call void @_ZdlPv(i8* %965) #10, !noalias !8
  br label %966

966:                                              ; preds = %964, %962, %920
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %382) #11, !noalias !8
  %967 = sub nsw i32 %844, %449
  store i32 %967, i32* %21, align 4, !noalias !8
  br i1 %5, label %968, label %1021

968:                                              ; preds = %966
  br i1 %596, label %969, label %1005

969:                                              ; preds = %968
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %401) #11, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %402) #11, !noalias !8
  %970 = load i8, i8* %359, align 1, !noalias !8
  %971 = icmp slt i8 %970, 0
  br i1 %971, label %974, label %972

972:                                              ; preds = %969
  %973 = zext i8 %970 to i64
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %403, align 8, !noalias !8
  br label %979

974:                                              ; preds = %969
  %975 = load i64, i64* %361, align 8, !noalias !8
  %976 = load i64, i64* %362, align 8, !noalias !8
  store i64 %975, i64* %404, align 8, !noalias !8
  %977 = icmp sgt i64 %976, -1
  br i1 %977, label %979, label %978, !prof !17

978:                                              ; preds = %974
  call void @llvm.trap() #11, !noalias !8
  unreachable

979:                                              ; preds = %974, %972
  %980 = phi i64 [ %973, %972 ], [ %976, %974 ]
  store i64 %980, i64* %405, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %406) #11, !noalias !8
  %981 = load i8, i8* %397, align 1, !noalias !8
  %982 = icmp slt i8 %981, 0
  br i1 %982, label %985, label %983

983:                                              ; preds = %979
  %984 = zext i8 %981 to i64
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %407, align 8, !noalias !8
  br label %990

985:                                              ; preds = %979
  %986 = load i64, i64* %408, align 8, !noalias !8
  %987 = load i64, i64* %400, align 8, !noalias !8
  store i64 %986, i64* %409, align 8, !noalias !8
  %988 = icmp sgt i64 %987, -1
  br i1 %988, label %990, label %989, !prof !17

989:                                              ; preds = %985
  call void @llvm.trap() #11, !noalias !8
  unreachable

990:                                              ; preds = %985, %983
  %991 = phi i64 [ %984, %983 ], [ %987, %985 ]
  store i64 %991, i64* %410, align 8, !noalias !8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %22, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %23, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %24) #11, !noalias !8
  %992 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %993 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %994 = icmp ult %"class.std::__1::basic_string"* %992, %993
  br i1 %994, label %995, label %999

995:                                              ; preds = %990
  %996 = bitcast %"class.std::__1::basic_string"* %992 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %996, i8* nonnull align 8 %401, i64 24, i1 false) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %401, i8 0, i64 24, i1 false) #11, !noalias !8
  %997 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %992, i64 1
  %998 = ptrtoint %"class.std::__1::basic_string"* %997 to i64
  store i64 %998, i64* %384, align 8, !noalias !8
  br label %1004

999:                                              ; preds = %990
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %36, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #11, !noalias !8
  %1000 = load i8, i8* %412, align 1, !noalias !8
  %1001 = icmp slt i8 %1000, 0
  br i1 %1001, label %1002, label %1004

1002:                                             ; preds = %999
  %1003 = load i8*, i8** %413, align 8, !noalias !8
  call void @_ZdlPv(i8* %1003) #10, !noalias !8
  br label %1004

1004:                                             ; preds = %1002, %999, %995
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %406) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %402) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %401) #11, !noalias !8
  br label %1088

1005:                                             ; preds = %968
  %1006 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1007 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %1008 = icmp eq %"class.std::__1::basic_string"* %1006, %1007
  br i1 %1008, label %1020, label %1009

1009:                                             ; preds = %1005
  %1010 = load i8, i8* %397, align 1, !noalias !8
  %1011 = icmp slt i8 %1010, 0
  br i1 %1011, label %1014, label %1012

1012:                                             ; preds = %1009
  %1013 = bitcast %"class.std::__1::basic_string"* %1006 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1013, i8* align 8 %398, i64 24, i1 false) #11, !noalias !8
  br label %1017

1014:                                             ; preds = %1009
  %1015 = load i8*, i8** %399, align 8, !noalias !8
  %1016 = load i64, i64* %400, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %1006, i8* %1015, i64 %1016) #11, !noalias !8
  br label %1017

1017:                                             ; preds = %1014, %1012
  %1018 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1006, i64 1
  %1019 = ptrtoint %"class.std::__1::basic_string"* %1018 to i64
  store i64 %1019, i64* %384, align 8, !noalias !8
  br label %1088

1020:                                             ; preds = %1005
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* nonnull %36, %"class.std::__1::basic_string"* dereferenceable(24) %6) #11, !noalias !8
  br label %1088

1021:                                             ; preds = %966
  br i1 %596, label %1022, label %1053

1022:                                             ; preds = %1021
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %385) #11, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %386) #11, !noalias !8
  %1023 = load i8, i8* %359, align 1, !noalias !8
  %1024 = icmp slt i8 %1023, 0
  br i1 %1024, label %1027, label %1025

1025:                                             ; preds = %1022
  %1026 = zext i8 %1023 to i64
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %387, align 8, !noalias !8
  br label %1032

1027:                                             ; preds = %1022
  %1028 = load i64, i64* %361, align 8, !noalias !8
  %1029 = load i64, i64* %362, align 8, !noalias !8
  store i64 %1028, i64* %388, align 8, !noalias !8
  %1030 = icmp sgt i64 %1029, -1
  br i1 %1030, label %1032, label %1031, !prof !17

1031:                                             ; preds = %1027
  call void @llvm.trap() #11, !noalias !8
  unreachable

1032:                                             ; preds = %1027, %1025
  %1033 = phi i64 [ %1026, %1025 ], [ %1029, %1027 ]
  store i64 %1033, i64* %389, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %390) #11, !noalias !8
  %1034 = icmp sgt i32 %967, -1
  br i1 %1034, label %1036, label %1035, !prof !17

1035:                                             ; preds = %1032
  call void @llvm.trap() #11, !noalias !8
  unreachable

1036:                                             ; preds = %1032
  %1037 = sext i32 %967 to i64
  %1038 = load i8*, i8** %338, align 8, !noalias !8
  %1039 = getelementptr inbounds i8, i8* %1038, i64 %455
  store i8* %1039, i8** %391, align 8, !noalias !8
  store i64 %1037, i64* %392, align 8, !noalias !8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %25, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %26, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %27) #11, !noalias !8
  %1040 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1041 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %1042 = icmp ult %"class.std::__1::basic_string"* %1040, %1041
  br i1 %1042, label %1043, label %1047

1043:                                             ; preds = %1036
  %1044 = bitcast %"class.std::__1::basic_string"* %1040 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1044, i8* nonnull align 8 %385, i64 24, i1 false) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %385, i8 0, i64 24, i1 false) #11, !noalias !8
  %1045 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1040, i64 1
  %1046 = ptrtoint %"class.std::__1::basic_string"* %1045 to i64
  store i64 %1046, i64* %384, align 8, !noalias !8
  br label %1052

1047:                                             ; preds = %1036
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %36, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #11, !noalias !8
  %1048 = load i8, i8* %394, align 1, !noalias !8
  %1049 = icmp slt i8 %1048, 0
  br i1 %1049, label %1050, label %1052

1050:                                             ; preds = %1047
  %1051 = load i8*, i8** %395, align 8, !noalias !8
  call void @_ZdlPv(i8* %1051) #10, !noalias !8
  br label %1052

1052:                                             ; preds = %1050, %1047, %1043
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %390) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %386) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %385) #11, !noalias !8
  br label %1088

1053:                                             ; preds = %1021
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #11, !noalias !8
  %1054 = load i8*, i8** %338, align 8, !noalias !8
  store i8* %1054, i8** %28, align 8, !noalias !8
  %1055 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1056 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %1057 = icmp ult %"class.std::__1::basic_string"* %1055, %1056
  br i1 %1057, label %1058, label %1086

1058:                                             ; preds = %1053
  %1059 = sext i32 %967 to i64
  %1060 = icmp ugt i32 %967, -17
  br i1 %1060, label %1061, label %1063

1061:                                             ; preds = %1058
  %1062 = bitcast %"class.std::__1::basic_string"* %1055 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1062) #9, !noalias !8
  unreachable

1063:                                             ; preds = %1058
  %1064 = icmp ult i32 %967, 23
  br i1 %1064, label %1073, label %1065

1065:                                             ; preds = %1063
  %1066 = add nuw nsw i64 %1059, 16
  %1067 = and i64 %1066, -16
  %1068 = call i8* @_Znwm(i64 %1067) #10, !noalias !8
  %1069 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1068, i8** %1069, align 8, !noalias !8
  %1070 = or i64 %1067, -9223372036854775808
  %1071 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1070, i64* %1071, align 8, !noalias !8
  %1072 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1059, i64* %1072, align 8, !noalias !8
  br label %1079

1073:                                             ; preds = %1063
  %1074 = trunc i32 %967 to i8
  %1075 = bitcast %"class.std::__1::basic_string"* %1055 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1076 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1075, i64 0, i32 1, i32 0
  store i8 %1074, i8* %1076, align 1, !noalias !8
  %1077 = bitcast %"class.std::__1::basic_string"* %1055 to i8*
  %1078 = icmp eq i32 %967, 0
  br i1 %1078, label %1081, label %1079

1079:                                             ; preds = %1073, %1065
  %1080 = phi i8* [ %1068, %1065 ], [ %1077, %1073 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1080, i8* align 1 %1054, i64 %1059, i1 false) #11, !noalias !8
  br label %1081

1081:                                             ; preds = %1079, %1073
  %1082 = phi i8* [ %1077, %1073 ], [ %1080, %1079 ]
  %1083 = getelementptr inbounds i8, i8* %1082, i64 %1059
  store i8 0, i8* %1083, align 1, !noalias !8
  %1084 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 1
  %1085 = ptrtoint %"class.std::__1::basic_string"* %1084 to i64
  store i64 %1085, i64* %384, align 8, !noalias !8
  br label %1087

1086:                                             ; preds = %1053
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcRiEEEvDpOT_(%"class.std::__1::vector"* nonnull %36, i8** nonnull dereferenceable(8) %28, i32* nonnull dereferenceable(4) %21) #11, !noalias !8
  br label %1087

1087:                                             ; preds = %1086, %1081
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #11, !noalias !8
  br label %1088

1088:                                             ; preds = %1087, %1052, %1020, %1017, %1004
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %382) #11, !noalias !8
  br label %1493

1089:                                             ; preds = %862
  br i1 %866, label %1093, label %1090

1090:                                             ; preds = %1089
  store i32 %449, i32* %864, align 4, !noalias !8
  %1091 = getelementptr inbounds i32, i32* %864, i64 1
  %1092 = ptrtoint i32* %1091 to i64
  store i64 %1092, i64* %376, align 8, !noalias !8
  br label %1135

1093:                                             ; preds = %1089
  %1094 = load i64, i64* %377, align 8, !noalias !8
  %1095 = sub i64 %868, %1094
  %1096 = ashr exact i64 %1095, 2
  %1097 = add nsw i64 %1096, 1
  %1098 = icmp ugt i64 %1097, 4611686018427387903
  br i1 %1098, label %1099, label %1101

1099:                                             ; preds = %1093
  %1100 = bitcast %"class.std::__1::vector.6"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1100) #9, !noalias !8
  unreachable

1101:                                             ; preds = %1093
  %1102 = sub i64 %867, %1094
  %1103 = ashr exact i64 %1102, 2
  %1104 = icmp ult i64 %1103, 2305843009213693951
  br i1 %1104, label %1105, label %1113

1105:                                             ; preds = %1101
  %1106 = ashr exact i64 %1102, 1
  %1107 = icmp ult i64 %1106, %1097
  %1108 = select i1 %1107, i64 %1097, i64 %1106
  %1109 = icmp eq i64 %1108, 0
  br i1 %1109, label %1118, label %1110

1110:                                             ; preds = %1105
  %1111 = icmp ugt i64 %1108, 4611686018427387903
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1110
  call void @abort() #9, !noalias !8
  unreachable

1113:                                             ; preds = %1110, %1101
  %1114 = phi i64 [ %1108, %1110 ], [ 4611686018427387903, %1101 ]
  %1115 = shl i64 %1114, 2
  %1116 = call i8* @_Znwm(i64 %1115) #10, !noalias !8
  %1117 = bitcast i8* %1116 to i32*
  br label %1118

1118:                                             ; preds = %1113, %1105
  %1119 = phi i64 [ %1114, %1113 ], [ 0, %1105 ]
  %1120 = phi i8* [ %1116, %1113 ], [ null, %1105 ]
  %1121 = phi i32* [ %1117, %1113 ], [ null, %1105 ]
  %1122 = getelementptr inbounds i32, i32* %1121, i64 %1096
  %1123 = getelementptr inbounds i32, i32* %1121, i64 %1119
  %1124 = ptrtoint i32* %1123 to i64
  store i32 %449, i32* %1122, align 4, !noalias !8
  %1125 = getelementptr inbounds i32, i32* %1122, i64 1
  %1126 = ptrtoint i32* %1125 to i64
  %1127 = ptrtoint i32* %1121 to i64
  %1128 = icmp sgt i64 %1095, 0
  br i1 %1128, label %1129, label %1131

1129:                                             ; preds = %1118
  %1130 = inttoptr i64 %1094 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1120, i8* align 4 %1130, i64 %1095, i1 false) #11, !noalias !8
  br label %1131

1131:                                             ; preds = %1129, %1118
  store i64 %1127, i64* %377, align 8, !noalias !8
  store i64 %1126, i64* %376, align 8, !noalias !8
  store i64 %1124, i64* %378, align 8, !noalias !8
  %1132 = icmp eq i64 %1094, 0
  br i1 %1132, label %1135, label %1133

1133:                                             ; preds = %1131
  %1134 = inttoptr i64 %1094 to i8*
  call void @_ZdlPv(i8* %1134) #10, !noalias !8
  br label %1135

1135:                                             ; preds = %1133, %1131, %1090
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %414) #11, !noalias !8
  %1136 = sub nsw i32 %844, %449
  store i32 %1136, i32* %16, align 4, !noalias !8
  br i1 %596, label %1137, label %1168

1137:                                             ; preds = %1135
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %416) #11, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %417) #11, !noalias !8
  %1138 = load i8, i8* %359, align 1, !noalias !8
  %1139 = icmp slt i8 %1138, 0
  br i1 %1139, label %1142, label %1140

1140:                                             ; preds = %1137
  %1141 = zext i8 %1138 to i64
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %418, align 8, !noalias !8
  br label %1147

1142:                                             ; preds = %1137
  %1143 = load i64, i64* %361, align 8, !noalias !8
  %1144 = load i64, i64* %362, align 8, !noalias !8
  store i64 %1143, i64* %419, align 8, !noalias !8
  %1145 = icmp sgt i64 %1144, -1
  br i1 %1145, label %1147, label %1146, !prof !17

1146:                                             ; preds = %1142
  call void @llvm.trap() #11, !noalias !8
  unreachable

1147:                                             ; preds = %1142, %1140
  %1148 = phi i64 [ %1141, %1140 ], [ %1144, %1142 ]
  store i64 %1148, i64* %420, align 8, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %421) #11, !noalias !8
  %1149 = icmp sgt i32 %1136, -1
  br i1 %1149, label %1151, label %1150, !prof !17

1150:                                             ; preds = %1147
  call void @llvm.trap() #11, !noalias !8
  unreachable

1151:                                             ; preds = %1147
  %1152 = sext i32 %1136 to i64
  %1153 = load i8*, i8** %338, align 8, !noalias !8
  %1154 = getelementptr inbounds i8, i8* %1153, i64 %455
  store i8* %1154, i8** %422, align 8, !noalias !8
  store i64 %1152, i64* %423, align 8, !noalias !8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %18, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %19) #11, !noalias !8
  %1155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1156 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %1157 = icmp ult %"class.std::__1::basic_string"* %1155, %1156
  br i1 %1157, label %1158, label %1162

1158:                                             ; preds = %1151
  %1159 = bitcast %"class.std::__1::basic_string"* %1155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1159, i8* nonnull align 8 %416, i64 24, i1 false) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 24, i1 false) #11, !noalias !8
  %1160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1155, i64 1
  %1161 = ptrtoint %"class.std::__1::basic_string"* %1160 to i64
  store i64 %1161, i64* %384, align 8, !noalias !8
  br label %1167

1162:                                             ; preds = %1151
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %36, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #11, !noalias !8
  %1163 = load i8, i8* %425, align 1, !noalias !8
  %1164 = icmp slt i8 %1163, 0
  br i1 %1164, label %1165, label %1167

1165:                                             ; preds = %1162
  %1166 = load i8*, i8** %426, align 8, !noalias !8
  call void @_ZdlPv(i8* %1166) #10, !noalias !8
  br label %1167

1167:                                             ; preds = %1165, %1162, %1158
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %421) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %417) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %416) #11, !noalias !8
  br label %1203

1168:                                             ; preds = %1135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %415) #11, !noalias !8
  %1169 = load i8*, i8** %338, align 8, !noalias !8
  store i8* %1169, i8** %20, align 8, !noalias !8
  %1170 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1171 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %329, align 8, !noalias !8
  %1172 = icmp ult %"class.std::__1::basic_string"* %1170, %1171
  br i1 %1172, label %1173, label %1201

1173:                                             ; preds = %1168
  %1174 = sext i32 %1136 to i64
  %1175 = icmp ugt i32 %1136, -17
  br i1 %1175, label %1176, label %1178

1176:                                             ; preds = %1173
  %1177 = bitcast %"class.std::__1::basic_string"* %1170 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1177) #9, !noalias !8
  unreachable

1178:                                             ; preds = %1173
  %1179 = icmp ult i32 %1136, 23
  br i1 %1179, label %1188, label %1180

1180:                                             ; preds = %1178
  %1181 = add nuw nsw i64 %1174, 16
  %1182 = and i64 %1181, -16
  %1183 = call i8* @_Znwm(i64 %1182) #10, !noalias !8
  %1184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1183, i8** %1184, align 8, !noalias !8
  %1185 = or i64 %1182, -9223372036854775808
  %1186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1185, i64* %1186, align 8, !noalias !8
  %1187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1174, i64* %1187, align 8, !noalias !8
  br label %1194

1188:                                             ; preds = %1178
  %1189 = trunc i32 %1136 to i8
  %1190 = bitcast %"class.std::__1::basic_string"* %1170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1190, i64 0, i32 1, i32 0
  store i8 %1189, i8* %1191, align 1, !noalias !8
  %1192 = bitcast %"class.std::__1::basic_string"* %1170 to i8*
  %1193 = icmp eq i32 %1136, 0
  br i1 %1193, label %1196, label %1194

1194:                                             ; preds = %1188, %1180
  %1195 = phi i8* [ %1183, %1180 ], [ %1192, %1188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1195, i8* align 1 %1169, i64 %1174, i1 false) #11, !noalias !8
  br label %1196

1196:                                             ; preds = %1194, %1188
  %1197 = phi i8* [ %1192, %1188 ], [ %1195, %1194 ]
  %1198 = getelementptr inbounds i8, i8* %1197, i64 %1174
  store i8 0, i8* %1198, align 1, !noalias !8
  %1199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1170, i64 1
  %1200 = ptrtoint %"class.std::__1::basic_string"* %1199 to i64
  store i64 %1200, i64* %384, align 8, !noalias !8
  br label %1202

1201:                                             ; preds = %1168
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcRiEEEvDpOT_(%"class.std::__1::vector"* nonnull %36, i8** nonnull dereferenceable(8) %20, i32* nonnull dereferenceable(4) %16) #11, !noalias !8
  br label %1202

1202:                                             ; preds = %1201, %1196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %415) #11, !noalias !8
  br label %1203

1203:                                             ; preds = %1202, %1167
  %1204 = load i32*, i32** %336, align 8, !noalias !8
  %1205 = load i32*, i32** %337, align 8, !noalias !8
  %1206 = icmp eq i32* %1204, %1205
  %1207 = ptrtoint i32* %1205 to i64
  br i1 %1206, label %1211, label %1208

1208:                                             ; preds = %1203
  store i32 %844, i32* %1204, align 4, !noalias !8
  %1209 = getelementptr inbounds i32, i32* %1204, i64 1
  %1210 = ptrtoint i32* %1209 to i64
  store i64 %1210, i64* %379, align 8, !noalias !8
  br label %1254

1211:                                             ; preds = %1203
  %1212 = ptrtoint i32* %1204 to i64
  %1213 = load i64, i64* %380, align 8, !noalias !8
  %1214 = sub i64 %1212, %1213
  %1215 = ashr exact i64 %1214, 2
  %1216 = add nsw i64 %1215, 1
  %1217 = icmp ugt i64 %1216, 4611686018427387903
  br i1 %1217, label %1218, label %1220

1218:                                             ; preds = %1211
  %1219 = bitcast %"class.std::__1::vector.6"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1219) #9, !noalias !8
  unreachable

1220:                                             ; preds = %1211
  %1221 = sub i64 %1207, %1213
  %1222 = ashr exact i64 %1221, 2
  %1223 = icmp ult i64 %1222, 2305843009213693951
  br i1 %1223, label %1224, label %1232

1224:                                             ; preds = %1220
  %1225 = ashr exact i64 %1221, 1
  %1226 = icmp ult i64 %1225, %1216
  %1227 = select i1 %1226, i64 %1216, i64 %1225
  %1228 = icmp eq i64 %1227, 0
  br i1 %1228, label %1237, label %1229

1229:                                             ; preds = %1224
  %1230 = icmp ugt i64 %1227, 4611686018427387903
  br i1 %1230, label %1231, label %1232

1231:                                             ; preds = %1229
  call void @abort() #9, !noalias !8
  unreachable

1232:                                             ; preds = %1229, %1220
  %1233 = phi i64 [ %1227, %1229 ], [ 4611686018427387903, %1220 ]
  %1234 = shl i64 %1233, 2
  %1235 = call i8* @_Znwm(i64 %1234) #10, !noalias !8
  %1236 = bitcast i8* %1235 to i32*
  br label %1237

1237:                                             ; preds = %1232, %1224
  %1238 = phi i64 [ %1233, %1232 ], [ 0, %1224 ]
  %1239 = phi i8* [ %1235, %1232 ], [ null, %1224 ]
  %1240 = phi i32* [ %1236, %1232 ], [ null, %1224 ]
  %1241 = getelementptr inbounds i32, i32* %1240, i64 %1215
  %1242 = getelementptr inbounds i32, i32* %1240, i64 %1238
  %1243 = ptrtoint i32* %1242 to i64
  store i32 %844, i32* %1241, align 4, !noalias !8
  %1244 = getelementptr inbounds i32, i32* %1241, i64 1
  %1245 = ptrtoint i32* %1244 to i64
  %1246 = ptrtoint i32* %1240 to i64
  %1247 = icmp sgt i64 %1214, 0
  br i1 %1247, label %1248, label %1250

1248:                                             ; preds = %1237
  %1249 = inttoptr i64 %1213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1239, i8* align 4 %1249, i64 %1214, i1 false) #11, !noalias !8
  br label %1250

1250:                                             ; preds = %1248, %1237
  store i64 %1246, i64* %380, align 8, !noalias !8
  store i64 %1245, i64* %379, align 8, !noalias !8
  store i64 %1243, i64* %381, align 8, !noalias !8
  %1251 = icmp eq i64 %1213, 0
  br i1 %1251, label %1254, label %1252

1252:                                             ; preds = %1250
  %1253 = inttoptr i64 %1213 to i8*
  call void @_ZdlPv(i8* %1253) #10, !noalias !8
  br label %1254

1254:                                             ; preds = %1252, %1250, %1208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %414) #11, !noalias !8
  br label %1493

1255:                                             ; preds = %860
  %1256 = load i32*, i32** %427, align 8, !noalias !30
  %1257 = load i32*, i32** %428, align 8, !noalias !30
  %1258 = icmp ult i32* %1256, %1257
  %1259 = ptrtoint i32* %1257 to i64
  br i1 %1258, label %1260, label %1263

1260:                                             ; preds = %1255
  store i32 0, i32* %1256, align 4, !noalias !30
  %1261 = getelementptr inbounds i32, i32* %1256, i64 1
  %1262 = ptrtoint i32* %1261 to i64
  store i64 %1262, i64* %429, align 8, !noalias !30
  br label %1315

1263:                                             ; preds = %1255
  %1264 = ptrtoint i32* %1256 to i64
  %1265 = load i64, i64* %430, align 8, !noalias !30
  %1266 = sub i64 %1264, %1265
  %1267 = ashr exact i64 %1266, 2
  %1268 = add nsw i64 %1267, 1
  %1269 = icmp ugt i64 %1268, 4611686018427387903
  br i1 %1269, label %1270, label %1272

1270:                                             ; preds = %1263
  %1271 = bitcast %"class.std::__1::vector.6"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1271) #9, !noalias !30
  unreachable

1272:                                             ; preds = %1263
  %1273 = sub i64 %1259, %1265
  %1274 = ashr exact i64 %1273, 2
  %1275 = icmp ult i64 %1274, 2305843009213693951
  br i1 %1275, label %1276, label %1284

1276:                                             ; preds = %1272
  %1277 = ashr exact i64 %1273, 1
  %1278 = icmp ult i64 %1277, %1268
  %1279 = select i1 %1278, i64 %1268, i64 %1277
  %1280 = icmp eq i64 %1279, 0
  br i1 %1280, label %1289, label %1281

1281:                                             ; preds = %1276
  %1282 = icmp ugt i64 %1279, 4611686018427387903
  br i1 %1282, label %1283, label %1284

1283:                                             ; preds = %1281
  call void @abort() #9, !noalias !30
  unreachable

1284:                                             ; preds = %1281, %1272
  %1285 = phi i64 [ %1279, %1281 ], [ 4611686018427387903, %1272 ]
  %1286 = shl i64 %1285, 2
  %1287 = call i8* @_Znwm(i64 %1286) #10, !noalias !30
  %1288 = bitcast i8* %1287 to i32*
  br label %1289

1289:                                             ; preds = %1284, %1276
  %1290 = phi i64 [ %1285, %1284 ], [ 0, %1276 ]
  %1291 = phi i32* [ %1288, %1284 ], [ null, %1276 ]
  %1292 = getelementptr inbounds i32, i32* %1291, i64 %1267
  %1293 = getelementptr inbounds i32, i32* %1291, i64 %1290
  %1294 = ptrtoint i32* %1293 to i64
  store i32 0, i32* %1292, align 4, !noalias !30
  %1295 = getelementptr inbounds i32, i32* %1292, i64 1
  %1296 = ptrtoint i32* %1295 to i64
  %1297 = load i32*, i32** %432, align 8, !noalias !30
  %1298 = load i64, i64* %429, align 8, !noalias !30
  %1299 = ptrtoint i32* %1297 to i64
  %1300 = sub i64 %1298, %1299
  %1301 = ashr exact i64 %1300, 2
  %1302 = sub nsw i64 0, %1301
  %1303 = getelementptr inbounds i32, i32* %1292, i64 %1302
  %1304 = ptrtoint i32* %1303 to i64
  %1305 = icmp sgt i64 %1300, 0
  br i1 %1305, label %1306, label %1310

1306:                                             ; preds = %1289
  %1307 = bitcast i32* %1303 to i8*
  %1308 = bitcast i32* %1297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1307, i8* align 4 %1308, i64 %1300, i1 false) #11, !noalias !30
  %1309 = load i32*, i32** %432, align 8, !noalias !30
  br label %1310

1310:                                             ; preds = %1306, %1289
  %1311 = phi i32* [ %1297, %1289 ], [ %1309, %1306 ]
  store i64 %1304, i64* %430, align 8, !noalias !30
  store i64 %1296, i64* %429, align 8, !noalias !30
  store i64 %1294, i64* %431, align 8, !noalias !30
  %1312 = icmp eq i32* %1311, null
  br i1 %1312, label %1315, label %1313

1313:                                             ; preds = %1310
  %1314 = bitcast i32* %1311 to i8*
  call void @_ZdlPv(i8* %1314) #10, !noalias !30
  br label %1315

1315:                                             ; preds = %1313, %1310, %1260
  br i1 %5, label %1316, label %1394

1316:                                             ; preds = %1315
  %1317 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %435, align 8, !noalias !30
  %1318 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %436, align 8, !noalias !30
  %1319 = icmp eq %"class.std::__1::basic_string"* %1317, %1318
  br i1 %1319, label %1331, label %1320

1320:                                             ; preds = %1316
  %1321 = load i8, i8* %397, align 1, !noalias !30
  %1322 = icmp slt i8 %1321, 0
  br i1 %1322, label %1325, label %1323

1323:                                             ; preds = %1320
  %1324 = bitcast %"class.std::__1::basic_string"* %1317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1324, i8* align 8 %398, i64 24, i1 false) #11, !noalias !30
  br label %1328

1325:                                             ; preds = %1320
  %1326 = load i8*, i8** %399, align 8, !noalias !30
  %1327 = load i64, i64* %400, align 8, !noalias !30
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %1317, i8* %1326, i64 %1327) #11, !noalias !30
  br label %1328

1328:                                             ; preds = %1325, %1323
  %1329 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1317, i64 1
  %1330 = ptrtoint %"class.std::__1::basic_string"* %1329 to i64
  store i64 %1330, i64* %437, align 8, !noalias !30
  br label %1332

1331:                                             ; preds = %1316
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %6) #11, !noalias !30
  br label %1332

1332:                                             ; preds = %1331, %1328
  %1333 = load i64, i64* %39, align 8, !noalias !30
  %1334 = trunc i64 %1333 to i32
  %1335 = load i32*, i32** %438, align 8, !noalias !30
  %1336 = load i32*, i32** %439, align 8, !noalias !30
  %1337 = icmp ult i32* %1335, %1336
  %1338 = ptrtoint i32* %1336 to i64
  br i1 %1337, label %1339, label %1342

1339:                                             ; preds = %1332
  store i32 %1334, i32* %1335, align 4, !noalias !30
  %1340 = getelementptr inbounds i32, i32* %1335, i64 1
  %1341 = ptrtoint i32* %1340 to i64
  store i64 %1341, i64* %440, align 8, !noalias !30
  br label %1490

1342:                                             ; preds = %1332
  %1343 = ptrtoint i32* %1335 to i64
  %1344 = load i64, i64* %441, align 8, !noalias !30
  %1345 = sub i64 %1343, %1344
  %1346 = ashr exact i64 %1345, 2
  %1347 = add nsw i64 %1346, 1
  %1348 = icmp ugt i64 %1347, 4611686018427387903
  br i1 %1348, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1350) #9, !noalias !30
  unreachable

1351:                                             ; preds = %1342
  %1352 = sub i64 %1338, %1344
  %1353 = ashr exact i64 %1352, 2
  %1354 = icmp ult i64 %1353, 2305843009213693951
  br i1 %1354, label %1355, label %1363

1355:                                             ; preds = %1351
  %1356 = ashr exact i64 %1352, 1
  %1357 = icmp ult i64 %1356, %1347
  %1358 = select i1 %1357, i64 %1347, i64 %1356
  %1359 = icmp eq i64 %1358, 0
  br i1 %1359, label %1368, label %1360

1360:                                             ; preds = %1355
  %1361 = icmp ugt i64 %1358, 4611686018427387903
  br i1 %1361, label %1362, label %1363

1362:                                             ; preds = %1360
  call void @abort() #9, !noalias !30
  unreachable

1363:                                             ; preds = %1360, %1351
  %1364 = phi i64 [ %1358, %1360 ], [ 4611686018427387903, %1351 ]
  %1365 = shl i64 %1364, 2
  %1366 = call i8* @_Znwm(i64 %1365) #10, !noalias !30
  %1367 = bitcast i8* %1366 to i32*
  br label %1368

1368:                                             ; preds = %1363, %1355
  %1369 = phi i64 [ %1364, %1363 ], [ 0, %1355 ]
  %1370 = phi i32* [ %1367, %1363 ], [ null, %1355 ]
  %1371 = getelementptr inbounds i32, i32* %1370, i64 %1346
  %1372 = getelementptr inbounds i32, i32* %1370, i64 %1369
  %1373 = ptrtoint i32* %1372 to i64
  store i32 %1334, i32* %1371, align 4, !noalias !30
  %1374 = getelementptr inbounds i32, i32* %1371, i64 1
  %1375 = ptrtoint i32* %1374 to i64
  %1376 = load i32*, i32** %443, align 8, !noalias !30
  %1377 = load i64, i64* %440, align 8, !noalias !30
  %1378 = ptrtoint i32* %1376 to i64
  %1379 = sub i64 %1377, %1378
  %1380 = ashr exact i64 %1379, 2
  %1381 = sub nsw i64 0, %1380
  %1382 = getelementptr inbounds i32, i32* %1371, i64 %1381
  %1383 = ptrtoint i32* %1382 to i64
  %1384 = icmp sgt i64 %1379, 0
  br i1 %1384, label %1385, label %1389

1385:                                             ; preds = %1368
  %1386 = bitcast i32* %1382 to i8*
  %1387 = bitcast i32* %1376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1386, i8* align 4 %1387, i64 %1379, i1 false) #11, !noalias !30
  %1388 = load i32*, i32** %443, align 8, !noalias !30
  br label %1389

1389:                                             ; preds = %1385, %1368
  %1390 = phi i32* [ %1376, %1368 ], [ %1388, %1385 ]
  store i64 %1383, i64* %441, align 8, !noalias !30
  store i64 %1375, i64* %440, align 8, !noalias !30
  store i64 %1373, i64* %442, align 8, !noalias !30
  %1391 = icmp eq i32* %1390, null
  br i1 %1391, label %1490, label %1392

1392:                                             ; preds = %1389
  %1393 = bitcast i32* %1390 to i8*
  call void @_ZdlPv(i8* %1393) #10, !noalias !30
  br label %1490

1394:                                             ; preds = %1315
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #11, !noalias !30
  %1395 = load i8*, i8** %338, align 8, !noalias !30
  store i8* %1395, i8** %14, align 8, !noalias !30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #11, !noalias !30
  %1396 = load i64, i64* %39, align 8, !noalias !30
  store i64 %1396, i64* %15, align 8, !noalias !30
  %1397 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %435, align 8, !noalias !30
  %1398 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %436, align 8, !noalias !30
  %1399 = icmp ult %"class.std::__1::basic_string"* %1397, %1398
  br i1 %1399, label %1400, label %1427

1400:                                             ; preds = %1394
  %1401 = icmp ugt i64 %1396, -17
  br i1 %1401, label %1402, label %1404

1402:                                             ; preds = %1400
  %1403 = bitcast %"class.std::__1::basic_string"* %1397 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1403) #9, !noalias !30
  unreachable

1404:                                             ; preds = %1400
  %1405 = icmp ult i64 %1396, 23
  br i1 %1405, label %1414, label %1406

1406:                                             ; preds = %1404
  %1407 = add nuw i64 %1396, 16
  %1408 = and i64 %1407, -16
  %1409 = call i8* @_Znwm(i64 %1408) #10, !noalias !30
  %1410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1409, i8** %1410, align 8, !noalias !30
  %1411 = or i64 %1408, -9223372036854775808
  %1412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1411, i64* %1412, align 8, !noalias !30
  %1413 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1396, i64* %1413, align 8, !noalias !30
  br label %1420

1414:                                             ; preds = %1404
  %1415 = trunc i64 %1396 to i8
  %1416 = bitcast %"class.std::__1::basic_string"* %1397 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1416, i64 0, i32 1, i32 0
  store i8 %1415, i8* %1417, align 1, !noalias !30
  %1418 = bitcast %"class.std::__1::basic_string"* %1397 to i8*
  %1419 = icmp eq i64 %1396, 0
  br i1 %1419, label %1422, label %1420

1420:                                             ; preds = %1414, %1406
  %1421 = phi i8* [ %1409, %1406 ], [ %1418, %1414 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1421, i8* align 1 %1395, i64 %1396, i1 false) #11, !noalias !30
  br label %1422

1422:                                             ; preds = %1420, %1414
  %1423 = phi i8* [ %1418, %1414 ], [ %1421, %1420 ]
  %1424 = getelementptr inbounds i8, i8* %1423, i64 %1396
  store i8 0, i8* %1424, align 1, !noalias !30
  %1425 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1397, i64 1
  %1426 = ptrtoint %"class.std::__1::basic_string"* %1425 to i64
  store i64 %1426, i64* %437, align 8, !noalias !30
  br label %1428

1427:                                             ; preds = %1394
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector"* %9, i8** nonnull dereferenceable(8) %14, i64* nonnull dereferenceable(8) %15) #11, !noalias !30
  br label %1428

1428:                                             ; preds = %1427, %1422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #11, !noalias !30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #11, !noalias !30
  %1429 = load i64, i64* %39, align 8, !noalias !30
  %1430 = trunc i64 %1429 to i32
  %1431 = load i32*, i32** %438, align 8, !noalias !30
  %1432 = load i32*, i32** %439, align 8, !noalias !30
  %1433 = icmp ult i32* %1431, %1432
  %1434 = ptrtoint i32* %1432 to i64
  br i1 %1433, label %1435, label %1438

1435:                                             ; preds = %1428
  store i32 %1430, i32* %1431, align 4, !noalias !30
  %1436 = getelementptr inbounds i32, i32* %1431, i64 1
  %1437 = ptrtoint i32* %1436 to i64
  store i64 %1437, i64* %440, align 8, !noalias !30
  br label %1490

1438:                                             ; preds = %1428
  %1439 = ptrtoint i32* %1431 to i64
  %1440 = load i64, i64* %441, align 8, !noalias !30
  %1441 = sub i64 %1439, %1440
  %1442 = ashr exact i64 %1441, 2
  %1443 = add nsw i64 %1442, 1
  %1444 = icmp ugt i64 %1443, 4611686018427387903
  br i1 %1444, label %1445, label %1447

1445:                                             ; preds = %1438
  %1446 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1446) #9, !noalias !30
  unreachable

1447:                                             ; preds = %1438
  %1448 = sub i64 %1434, %1440
  %1449 = ashr exact i64 %1448, 2
  %1450 = icmp ult i64 %1449, 2305843009213693951
  br i1 %1450, label %1451, label %1459

1451:                                             ; preds = %1447
  %1452 = ashr exact i64 %1448, 1
  %1453 = icmp ult i64 %1452, %1443
  %1454 = select i1 %1453, i64 %1443, i64 %1452
  %1455 = icmp eq i64 %1454, 0
  br i1 %1455, label %1464, label %1456

1456:                                             ; preds = %1451
  %1457 = icmp ugt i64 %1454, 4611686018427387903
  br i1 %1457, label %1458, label %1459

1458:                                             ; preds = %1456
  call void @abort() #9, !noalias !30
  unreachable

1459:                                             ; preds = %1456, %1447
  %1460 = phi i64 [ %1454, %1456 ], [ 4611686018427387903, %1447 ]
  %1461 = shl i64 %1460, 2
  %1462 = call i8* @_Znwm(i64 %1461) #10, !noalias !30
  %1463 = bitcast i8* %1462 to i32*
  br label %1464

1464:                                             ; preds = %1459, %1451
  %1465 = phi i64 [ %1460, %1459 ], [ 0, %1451 ]
  %1466 = phi i32* [ %1463, %1459 ], [ null, %1451 ]
  %1467 = getelementptr inbounds i32, i32* %1466, i64 %1442
  %1468 = getelementptr inbounds i32, i32* %1466, i64 %1465
  %1469 = ptrtoint i32* %1468 to i64
  store i32 %1430, i32* %1467, align 4, !noalias !30
  %1470 = getelementptr inbounds i32, i32* %1467, i64 1
  %1471 = ptrtoint i32* %1470 to i64
  %1472 = load i32*, i32** %443, align 8, !noalias !30
  %1473 = load i64, i64* %440, align 8, !noalias !30
  %1474 = ptrtoint i32* %1472 to i64
  %1475 = sub i64 %1473, %1474
  %1476 = ashr exact i64 %1475, 2
  %1477 = sub nsw i64 0, %1476
  %1478 = getelementptr inbounds i32, i32* %1467, i64 %1477
  %1479 = ptrtoint i32* %1478 to i64
  %1480 = icmp sgt i64 %1475, 0
  br i1 %1480, label %1481, label %1485

1481:                                             ; preds = %1464
  %1482 = bitcast i32* %1478 to i8*
  %1483 = bitcast i32* %1472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1482, i8* align 4 %1483, i64 %1475, i1 false) #11, !noalias !30
  %1484 = load i32*, i32** %443, align 8, !noalias !30
  br label %1485

1485:                                             ; preds = %1481, %1464
  %1486 = phi i32* [ %1472, %1464 ], [ %1484, %1481 ]
  store i64 %1479, i64* %441, align 8, !noalias !30
  store i64 %1471, i64* %440, align 8, !noalias !30
  store i64 %1469, i64* %442, align 8, !noalias !30
  %1487 = icmp eq i32* %1486, null
  br i1 %1487, label %1490, label %1488

1488:                                             ; preds = %1485
  %1489 = bitcast i32* %1486 to i8*
  call void @_ZdlPv(i8* %1489) #10, !noalias !30
  br label %1490

1490:                                             ; preds = %1488, %1485, %1435, %1392, %1389, %1339
  %1491 = load i32, i32* %12, align 4, !noalias !30
  %1492 = add nsw i32 %1491, 1
  store i32 %1492, i32* %12, align 4, !noalias !30
  store i8 0, i8* %445, align 1, !alias.scope !33
  store i8 0, i8* %446, align 1, !alias.scope !33
  store i8 1, i8* %447, align 8, !alias.scope !33
  br label %1493

1493:                                             ; preds = %1490, %1254, %1088
  %1494 = phi i32 [ 1, %1490 ], [ 0, %1254 ], [ 0, %1088 ]
  %1495 = phi i32 [ %449, %1490 ], [ %844, %1254 ], [ %844, %1088 ]
  %1496 = icmp slt i8 %837, 0
  br i1 %1496, label %1497, label %1498

1497:                                             ; preds = %1493
  call void @_ZdlPv(i8* %841) #10, !noalias !8
  br label %1498

1498:                                             ; preds = %1497, %1493
  %1499 = icmp eq i32 %1494, 0
  br i1 %1499, label %448, label %1523

1500:                                             ; preds = %448
  %1501 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %435, align 8, !noalias !8
  %1502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %327, align 8, !noalias !8
  %1503 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1504 = call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS6_EESE_SE_(%"class.std::__1::vector"* %9, %"class.std::__1::basic_string"* %1501, %"class.std::__1::basic_string"* %1502, %"class.std::__1::basic_string"* %1503) #11, !noalias !8
  %1505 = load i32*, i32** %427, align 8, !noalias !8
  %1506 = load i32*, i32** %331, align 8, !noalias !8
  %1507 = load i32*, i32** %332, align 8, !noalias !8
  %1508 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_(%"class.std::__1::vector.6"* %10, i32* %1505, i32* %1506, i32* %1507) #11, !noalias !8
  %1509 = load i32*, i32** %438, align 8, !noalias !8
  %1510 = load i32*, i32** %335, align 8, !noalias !8
  %1511 = load i32*, i32** %336, align 8, !noalias !8
  %1512 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_(%"class.std::__1::vector.6"* %11, i32* %1509, i32* %1510, i32* %1511) #11, !noalias !8
  %1513 = load i64, i64* %384, align 8, !noalias !8
  %1514 = bitcast %"class.std::__1::vector"* %36 to i64*
  %1515 = load i64, i64* %1514, align 8, !noalias !8
  %1516 = sub i64 %1513, %1515
  %1517 = sdiv exact i64 %1516, 24
  %1518 = load i32, i32* %12, align 4, !noalias !8
  %1519 = trunc i64 %1517 to i32
  %1520 = add i32 %1518, %1519
  store i32 %1520, i32* %12, align 4, !noalias !8
  store i8 0, i8* %445, align 1, !alias.scope !36
  store i8 0, i8* %446, align 1, !alias.scope !36
  br label %1521

1521:                                             ; preds = %852, %1500
  %1522 = phi i8 [ 1, %1500 ], [ 0, %852 ]
  store i8 %1522, i8* %447, align 8, !alias.scope !39
  br label %1523

1523:                                             ; preds = %1498, %1521
  %1524 = load i32*, i32** %335, align 8, !noalias !8
  %1525 = icmp eq i32* %1524, null
  br i1 %1525, label %1529, label %1526

1526:                                             ; preds = %1523
  %1527 = ptrtoint i32* %1524 to i64
  store i64 %1527, i64* %379, align 8, !noalias !8
  %1528 = bitcast i32* %1524 to i8*
  call void @_ZdlPv(i8* %1528) #10, !noalias !8
  br label %1529

1529:                                             ; preds = %1526, %1523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %334) #11, !noalias !8
  %1530 = load i32*, i32** %331, align 8, !noalias !8
  %1531 = icmp eq i32* %1530, null
  br i1 %1531, label %1535, label %1532

1532:                                             ; preds = %1529
  %1533 = ptrtoint i32* %1530 to i64
  store i64 %1533, i64* %376, align 8, !noalias !8
  %1534 = bitcast i32* %1530 to i8*
  call void @_ZdlPv(i8* %1534) #10, !noalias !8
  br label %1535

1535:                                             ; preds = %1532, %1529
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #11, !noalias !8
  %1536 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %327, align 8, !noalias !8
  %1537 = icmp eq %"class.std::__1::basic_string"* %1536, null
  br i1 %1537, label %1559, label %1538

1538:                                             ; preds = %1535
  %1539 = bitcast %"class.std::__1::basic_string"* %1536 to i8*
  %1540 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  %1541 = icmp eq %"class.std::__1::basic_string"* %1540, %1536
  br i1 %1541, label %1557, label %1542

1542:                                             ; preds = %1538, %1552
  %1543 = phi %"class.std::__1::basic_string"* [ %1544, %1552 ], [ %1540, %1538 ]
  %1544 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1543, i64 -1
  %1545 = bitcast %"class.std::__1::basic_string"* %1544 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1546 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1545, i64 0, i32 1, i32 0
  %1547 = load i8, i8* %1546, align 1, !noalias !8
  %1548 = icmp slt i8 %1547, 0
  br i1 %1548, label %1549, label %1552

1549:                                             ; preds = %1542
  %1550 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1544, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1551 = load i8*, i8** %1550, align 8, !noalias !8
  call void @_ZdlPv(i8* %1551) #10, !noalias !8
  br label %1552

1552:                                             ; preds = %1549, %1542
  %1553 = icmp eq %"class.std::__1::basic_string"* %1544, %1536
  br i1 %1553, label %1554, label %1542

1554:                                             ; preds = %1552
  %1555 = bitcast %"class.std::__1::vector"* %36 to i8**
  %1556 = load i8*, i8** %1555, align 8, !noalias !8
  br label %1557

1557:                                             ; preds = %1554, %1538
  %1558 = phi i8* [ %1556, %1554 ], [ %1539, %1538 ]
  store %"class.std::__1::basic_string"* %1536, %"class.std::__1::basic_string"** %328, align 8, !noalias !8
  call void @_ZdlPv(i8* %1558) #10, !noalias !8
  br label %1559

1559:                                             ; preds = %1535, %1557
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #11, !noalias !8
  br label %1560

1560:                                             ; preds = %1559, %320
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tensorflow4text17WordpieceTokenizeERKN4absl11string_viewEiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbSD_PKNS0_14WordpieceVocabEPNS5_6vectorISB_NS9_ISB_EEEEPNSH_IiNS9_IiEEEESN_Pi(%"struct.tensorflow::text::LookupStatus"* noalias nocapture sret, %"class.absl::string_view"* dereferenceable(16), i32, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), %"class.tensorflow::text::WordpieceVocab"*, %"class.std::__1::vector"*, %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"*, i32* nocapture) local_unnamed_addr #0 {
  tail call void @_ZN10tensorflow4text17WordpieceTokenizeERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbSD_bPKNS0_14WordpieceVocabEPNS5_6vectorISB_NS9_ISB_EEEEPNSH_IiNS9_IiEEEESN_Pi(%"struct.tensorflow::text::LookupStatus"* sret %0, %"class.absl::string_view"* dereferenceable(16) %1, i32 %2, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %3, i1 zeroext %4, %"class.std::__1::basic_string"* dereferenceable(24) %5, i1 zeroext false, %"class.tensorflow::text::WordpieceVocab"* %6, %"class.std::__1::vector"* %7, %"class.std::__1::vector.6"* %8, %"class.std::__1::vector.6"* %9, i32* %10)
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS6_EESE_SE_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %248

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %45
  %31 = phi %"class.std::__1::basic_string"* [ %47, %45 ], [ %17, %27 ]
  %32 = phi %"class.std::__1::basic_string"* [ %46, %45 ], [ %28, %27 ]
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #11
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #11
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %45
  %50 = ptrtoint %"class.std::__1::basic_string"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %248

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"class.std::__1::basic_string"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"class.std::__1::basic_string"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %10
  %61 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 24
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %63
  %65 = icmp ult %"class.std::__1::basic_string"* %64, %17
  br i1 %65, label %89, label %68

66:                                               ; preds = %89
  %67 = ptrtoint %"class.std::__1::basic_string"* %95 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %68, %83
  %72 = phi %"class.std::__1::basic_string"* [ %75, %83 ], [ %58, %68 ]
  %73 = phi %"class.std::__1::basic_string"* [ %74, %83 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %80, %71
  %84 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #11
  %86 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 0, i8* %87, align 1
  store i8 0, i8* %85, align 1
  %88 = icmp eq %"class.std::__1::basic_string"* %74, %1
  br i1 %88, label %97, label %71

89:                                               ; preds = %56, %89
  %90 = phi %"class.std::__1::basic_string"* [ %95, %89 ], [ %58, %56 ]
  %91 = phi %"class.std::__1::basic_string"* [ %94, %89 ], [ %64, %56 ]
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #11
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %96 = icmp ult %"class.std::__1::basic_string"* %94, %17
  br i1 %96, label %89, label %66

97:                                               ; preds = %83, %68
  %98 = icmp eq %"class.std::__1::basic_string"* %59, %2
  br i1 %98, label %248, label %99

99:                                               ; preds = %97, %132
  %100 = phi %"class.std::__1::basic_string"* [ %134, %132 ], [ %1, %97 ]
  %101 = phi %"class.std::__1::basic_string"* [ %133, %132 ], [ %2, %97 ]
  %102 = icmp eq %"class.std::__1::basic_string"* %100, %101
  br i1 %102, label %132, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %107, label %122, label %112

112:                                              ; preds = %103
  br i1 %111, label %116, label %113

113:                                              ; preds = %112
  %114 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %115 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #11
  br label %132

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %118, i64 %120) #11
  br label %132

122:                                              ; preds = %103
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %128 = zext i8 %110 to i64
  %129 = select i1 %111, i8* %124, i8* %127
  %130 = select i1 %111, i64 %126, i64 %128
  %131 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %129, i64 %130) #11
  br label %132

132:                                              ; preds = %122, %116, %113, %99
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 1
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 1
  %135 = icmp eq %"class.std::__1::basic_string"* %133, %59
  br i1 %135, label %248, label %99

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = sdiv exact i64 %139, 24
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 768614336404564650
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #9
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = sdiv exact i64 %146, 24
  %148 = icmp ult i64 %147, 384307168202282325
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = sdiv exact i64 %150, 24
  br label %159

152:                                              ; preds = %145
  %153 = shl nsw i64 %147, 1
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = sdiv exact i64 %156, 24
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %152, %149
  %160 = phi i64 [ %151, %149 ], [ %157, %152 ]
  %161 = phi i64 [ 768614336404564650, %149 ], [ %155, %152 ]
  %162 = mul i64 %161, 24
  %163 = tail call i8* @_Znwm(i64 %162) #10
  %164 = bitcast i8* %163 to %"class.std::__1::basic_string"*
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %160, %159 ], [ %157, %152 ]
  %167 = phi i64 [ %161, %159 ], [ 0, %152 ]
  %168 = phi %"class.std::__1::basic_string"* [ %164, %159 ], [ null, %152 ]
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %166
  %170 = ptrtoint %"class.std::__1::basic_string"* %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %167
  %172 = ptrtoint %"class.std::__1::basic_string"* %171 to i64
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 %10
  br label %174

174:                                              ; preds = %165, %190
  %175 = phi %"class.std::__1::basic_string"* [ %191, %190 ], [ %169, %165 ]
  %176 = phi i64 [ %192, %190 ], [ %170, %165 ]
  %177 = phi %"class.std::__1::basic_string"* [ %193, %190 ], [ %2, %165 ]
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %174
  %183 = inttoptr i64 %176 to i8*
  %184 = bitcast %"class.std::__1::basic_string"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #11
  br label %190

185:                                              ; preds = %174
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %175, i8* %187, i64 %189) #11
  br label %190

190:                                              ; preds = %185, %182
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  %192 = ptrtoint %"class.std::__1::basic_string"* %191 to i64
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 1
  %194 = icmp eq %"class.std::__1::basic_string"* %173, %191
  br i1 %194, label %195, label %174

195:                                              ; preds = %190
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %197 = icmp eq %"class.std::__1::basic_string"* %196, %1
  br i1 %197, label %208, label %198

198:                                              ; preds = %195, %198
  %199 = phi %"class.std::__1::basic_string"* [ %201, %198 ], [ %169, %195 ]
  %200 = phi %"class.std::__1::basic_string"* [ %202, %198 ], [ %1, %195 ]
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 -1
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1
  %203 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #11
  %205 = icmp eq %"class.std::__1::basic_string"* %202, %196
  br i1 %205, label %206, label %198

206:                                              ; preds = %198
  %207 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  br label %208

208:                                              ; preds = %206, %195
  %209 = phi i64 [ %170, %195 ], [ %207, %206 ]
  %210 = phi %"class.std::__1::basic_string"* [ %169, %195 ], [ %201, %206 ]
  %211 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %212 = icmp eq %"class.std::__1::basic_string"* %211, %1
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = ptrtoint %"class.std::__1::basic_string"* %210 to i64
  br label %225

215:                                              ; preds = %208, %215
  %216 = phi %"class.std::__1::basic_string"* [ %221, %215 ], [ %173, %208 ]
  %217 = phi %"class.std::__1::basic_string"* [ %220, %215 ], [ %1, %208 ]
  %218 = bitcast %"class.std::__1::basic_string"* %216 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 24, i1 false) #11
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 1
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 1
  %222 = icmp eq %"class.std::__1::basic_string"* %220, %211
  br i1 %222, label %223, label %215

223:                                              ; preds = %215
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %225

225:                                              ; preds = %223, %213
  %226 = phi %"class.std::__1::basic_string"* [ %1, %213 ], [ %224, %223 ]
  %227 = phi %"class.std::__1::basic_string"* [ %173, %213 ], [ %221, %223 ]
  %228 = phi i64 [ %214, %213 ], [ %209, %223 ]
  %229 = ptrtoint %"class.std::__1::basic_string"* %227 to i64
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store i64 %228, i64* %137, align 8
  store i64 %229, i64* %22, align 8
  store i64 %172, i64* %14, align 8
  %231 = icmp eq %"class.std::__1::basic_string"* %226, %230
  br i1 %231, label %244, label %232

232:                                              ; preds = %225, %242
  %233 = phi %"class.std::__1::basic_string"* [ %234, %242 ], [ %226, %225 ]
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 -1
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  tail call void @_ZdlPv(i8* %241) #10
  br label %242

242:                                              ; preds = %239, %232
  %243 = icmp eq %"class.std::__1::basic_string"* %234, %230
  br i1 %243, label %244, label %232

244:                                              ; preds = %242, %225
  %245 = icmp eq %"class.std::__1::basic_string"* %230, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  tail call void @_ZdlPv(i8* %247) #10
  br label %248

248:                                              ; preds = %132, %246, %244, %51, %97, %4
  %249 = phi %"class.std::__1::basic_string"* [ %1, %4 ], [ %1, %97 ], [ %1, %51 ], [ %169, %244 ], [ %169, %246 ], [ %1, %132 ]
  ret %"class.std::__1::basic_string"* %249
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPiEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS9_E9referenceEEE5valueES7_E4typeENS5_IPKiEES9_S9_(%"class.std::__1::vector.6"*, i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint i32* %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint i32* %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %706

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = ptrtoint i32* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i32** %18 to i64*
  br i1 %23, label %339, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %196

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %2, i64 %27
  %31 = icmp eq i32* %30, %3
  br i1 %31, label %191, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr i32, i32* %3, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 8
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr i32, i32* %3, i64 %41
  %43 = ptrtoint i32* %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 2
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr i32, i32* %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add i64 %48, 1
  %50 = getelementptr i32, i32* %2, i64 %49
  %51 = icmp ult i32* %19, %50
  %52 = icmp ult i32* %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 9223372036854775800
  %56 = getelementptr i32, i32* %19, i64 %55
  %57 = getelementptr i32, i32* %30, i64 %55
  %58 = add nsw i64 %55, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %19, i64 %66
  %69 = getelementptr i32, i32* %30, i64 %66
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !40
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !40
  %75 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !43, !noalias !40
  %76 = getelementptr i32, i32* %68, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !43, !noalias !40
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %19, i64 %78
  %80 = getelementptr i32, i32* %30, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !40
  %83 = getelementptr i32, i32* %80, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !40
  %86 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !43, !noalias !40
  %87 = getelementptr i32, i32* %79, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !43, !noalias !40
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %19, i64 %89
  %91 = getelementptr i32, i32* %30, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !40
  %94 = getelementptr i32, i32* %91, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !40
  %97 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !43, !noalias !40
  %98 = getelementptr i32, i32* %90, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !43, !noalias !40
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %19, i64 %100
  %102 = getelementptr i32, i32* %30, i64 %100
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !40
  %105 = getelementptr i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !40
  %108 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !43, !noalias !40
  %109 = getelementptr i32, i32* %101, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !43, !noalias !40
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !45

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %19, i64 %118
  %121 = getelementptr i32, i32* %30, i64 %118
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !40
  %124 = getelementptr i32, i32* %121, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !40
  %127 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !43, !noalias !40
  %128 = getelementptr i32, i32* %120, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !43, !noalias !40
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !46

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi i32* [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi i32* [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr i32, i32* %3, i64 -1
  %140 = ptrtoint i32* %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %135, %146
  %147 = phi i32* [ %152, %146 ], [ %136, %135 ]
  %148 = phi i32* [ %151, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %153, %146 ], [ %144, %135 ]
  %150 = load i32, i32* %148, align 4
  store i32 %150, i32* %147, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = add i64 %149, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %146, !llvm.loop !47

155:                                              ; preds = %146, %135
  %156 = phi i32* [ undef, %135 ], [ %152, %146 ]
  %157 = phi i32* [ %136, %135 ], [ %152, %146 ]
  %158 = phi i32* [ %137, %135 ], [ %151, %146 ]
  %159 = icmp ult i64 %141, 28
  br i1 %159, label %188, label %160

160:                                              ; preds = %155, %160
  %161 = phi i32* [ %186, %160 ], [ %157, %155 ]
  %162 = phi i32* [ %185, %160 ], [ %158, %155 ]
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds i32, i32* %162, i64 1
  %165 = getelementptr inbounds i32, i32* %161, i64 1
  %166 = load i32, i32* %164, align 4
  store i32 %166, i32* %165, align 4
  %167 = getelementptr inbounds i32, i32* %162, i64 2
  %168 = getelementptr inbounds i32, i32* %161, i64 2
  %169 = load i32, i32* %167, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %162, i64 3
  %171 = getelementptr inbounds i32, i32* %161, i64 3
  %172 = load i32, i32* %170, align 4
  store i32 %172, i32* %171, align 4
  %173 = getelementptr inbounds i32, i32* %162, i64 4
  %174 = getelementptr inbounds i32, i32* %161, i64 4
  %175 = load i32, i32* %173, align 4
  store i32 %175, i32* %174, align 4
  %176 = getelementptr inbounds i32, i32* %162, i64 5
  %177 = getelementptr inbounds i32, i32* %161, i64 5
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %177, align 4
  %179 = getelementptr inbounds i32, i32* %162, i64 6
  %180 = getelementptr inbounds i32, i32* %161, i64 6
  %181 = load i32, i32* %179, align 4
  store i32 %181, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %162, i64 7
  %183 = getelementptr inbounds i32, i32* %161, i64 7
  %184 = load i32, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %185 = getelementptr inbounds i32, i32* %162, i64 8
  %186 = getelementptr inbounds i32, i32* %161, i64 8
  %187 = icmp eq i32* %185, %3
  br i1 %187, label %188, label %160, !llvm.loop !48

188:                                              ; preds = %155, %160, %133
  %189 = phi i32* [ %56, %133 ], [ %156, %155 ], [ %186, %160 ]
  %190 = ptrtoint i32* %189 to i64
  br label %191

191:                                              ; preds = %188, %29
  %192 = phi i64 [ %20, %29 ], [ %190, %188 ]
  store i64 %192, i64* %24, align 8
  %193 = icmp sgt i64 %26, 0
  br i1 %193, label %194, label %706

194:                                              ; preds = %191
  %195 = inttoptr i64 %192 to i32*
  br label %196

196:                                              ; preds = %194, %25
  %197 = phi i64 [ %192, %194 ], [ %20, %25 ]
  %198 = phi i32* [ %195, %194 ], [ %19, %25 ]
  %199 = phi i32* [ %30, %194 ], [ %3, %25 ]
  %200 = getelementptr inbounds i32, i32* %1, i64 %12
  %201 = ptrtoint i32* %200 to i64
  %202 = sub i64 %197, %201
  %203 = ashr exact i64 %202, 2
  %204 = getelementptr inbounds i32, i32* %1, i64 %203
  %205 = icmp ult i32* %204, %19
  br i1 %205, label %206, label %319

206:                                              ; preds = %196
  %207 = sub nsw i64 0, %203
  %208 = getelementptr i32, i32* %19, i64 %207
  %209 = bitcast i32* %208 to i8*
  %210 = xor i64 %7, -1
  %211 = getelementptr i8, i8* %209, i64 %210
  %212 = ptrtoint i8* %211 to i64
  %213 = lshr i64 %212, 2
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 8
  br i1 %215, label %216, label %219

216:                                              ; preds = %314, %219, %206
  %217 = phi i32* [ %198, %219 ], [ %198, %206 ], [ %237, %314 ]
  %218 = phi i32* [ %204, %219 ], [ %204, %206 ], [ %238, %314 ]
  br label %327

219:                                              ; preds = %206
  %220 = sub nsw i64 0, %203
  %221 = getelementptr i32, i32* %19, i64 %220
  %222 = bitcast i32* %221 to i8*
  %223 = xor i64 %7, -1
  %224 = getelementptr i8, i8* %222, i64 %223
  %225 = ptrtoint i8* %224 to i64
  %226 = lshr i64 %225, 2
  %227 = add nuw nsw i64 %226, 1
  %228 = getelementptr i32, i32* %198, i64 %227
  %229 = add nsw i64 %203, %226
  %230 = add i64 %229, 1
  %231 = getelementptr i32, i32* %1, i64 %230
  %232 = icmp ult i32* %198, %231
  %233 = icmp ult i32* %204, %228
  %234 = and i1 %232, %233
  br i1 %234, label %216, label %235

235:                                              ; preds = %219
  %236 = and i64 %214, 9223372036854775800
  %237 = getelementptr i32, i32* %198, i64 %236
  %238 = getelementptr i32, i32* %204, i64 %236
  %239 = add nsw i64 %236, -8
  %240 = lshr exact i64 %239, 3
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 24
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i32, i32* %198, i64 %247
  %250 = getelementptr i32, i32* %204, i64 %247
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !49
  %253 = getelementptr i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !49
  %256 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !52, !noalias !49
  %257 = getelementptr i32, i32* %249, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !52, !noalias !49
  %259 = or i64 %247, 8
  %260 = getelementptr i32, i32* %198, i64 %259
  %261 = getelementptr i32, i32* %204, i64 %259
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !49
  %264 = getelementptr i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !49
  %267 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !52, !noalias !49
  %268 = getelementptr i32, i32* %260, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !52, !noalias !49
  %270 = or i64 %247, 16
  %271 = getelementptr i32, i32* %198, i64 %270
  %272 = getelementptr i32, i32* %204, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !49
  %275 = getelementptr i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !49
  %278 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !52, !noalias !49
  %279 = getelementptr i32, i32* %271, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !52, !noalias !49
  %281 = or i64 %247, 24
  %282 = getelementptr i32, i32* %198, i64 %281
  %283 = getelementptr i32, i32* %204, i64 %281
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !49
  %286 = getelementptr i32, i32* %283, i64 4
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !49
  %289 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !52, !noalias !49
  %290 = getelementptr i32, i32* %282, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !52, !noalias !49
  %292 = add i64 %247, 32
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !54

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i32, i32* %198, i64 %299
  %302 = getelementptr i32, i32* %204, i64 %299
  %303 = bitcast i32* %302 to <4 x i32>*
  %304 = load <4 x i32>, <4 x i32>* %303, align 4, !alias.scope !49
  %305 = getelementptr i32, i32* %302, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 4, !alias.scope !49
  %308 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %308, align 4, !alias.scope !52, !noalias !49
  %309 = getelementptr i32, i32* %301, i64 4
  %310 = bitcast i32* %309 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %310, align 4, !alias.scope !52, !noalias !49
  %311 = add i64 %299, 8
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !55

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %214, %236
  br i1 %315, label %316, label %216

316:                                              ; preds = %327, %314
  %317 = phi i32* [ %237, %314 ], [ %332, %327 ]
  %318 = ptrtoint i32* %317 to i64
  br label %319

319:                                              ; preds = %316, %196
  %320 = phi i64 [ %318, %316 ], [ %197, %196 ]
  store i64 %320, i64* %24, align 8
  %321 = icmp eq i64 %202, 0
  br i1 %321, label %334, label %322

322:                                              ; preds = %319
  %323 = sub nsw i64 0, %203
  %324 = getelementptr inbounds i32, i32* %198, i64 %323
  %325 = bitcast i32* %324 to i8*
  %326 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %325, i8* align 4 %326, i64 %202, i1 false) #11
  br label %334

327:                                              ; preds = %216, %327
  %328 = phi i32* [ %332, %327 ], [ %217, %216 ]
  %329 = phi i32* [ %331, %327 ], [ %218, %216 ]
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %329, i64 1
  %332 = getelementptr inbounds i32, i32* %328, i64 1
  %333 = icmp ult i32* %331, %19
  br i1 %333, label %327, label %316, !llvm.loop !56

334:                                              ; preds = %319, %322
  %335 = ptrtoint i32* %199 to i64
  %336 = sub i64 %335, %8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %706, label %338

338:                                              ; preds = %334
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %336, i1 false) #11
  br label %706

339:                                              ; preds = %14
  %340 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %20, %341
  %343 = ashr exact i64 %342, 2
  %344 = add nsw i64 %343, %12
  %345 = icmp ugt i64 %344, 4611686018427387903
  br i1 %345, label %346, label %348

346:                                              ; preds = %339
  %347 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %347) #9
  unreachable

348:                                              ; preds = %339
  %349 = sub i64 %17, %341
  %350 = ashr exact i64 %349, 2
  %351 = icmp ult i64 %350, 2305843009213693951
  br i1 %351, label %355, label %352

352:                                              ; preds = %348
  %353 = sub i64 %7, %341
  %354 = ashr exact i64 %353, 2
  br label %365

355:                                              ; preds = %348
  %356 = ashr exact i64 %349, 1
  %357 = icmp ult i64 %356, %344
  %358 = select i1 %357, i64 %344, i64 %356
  %359 = sub i64 %7, %341
  %360 = ashr exact i64 %359, 2
  %361 = icmp eq i64 %358, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %355
  %363 = icmp ugt i64 %358, 4611686018427387903
  br i1 %363, label %364, label %365

364:                                              ; preds = %362
  tail call void @abort() #9
  unreachable

365:                                              ; preds = %352, %362
  %366 = phi i64 [ 4611686018427387903, %352 ], [ %358, %362 ]
  %367 = phi i64 [ %354, %352 ], [ %360, %362 ]
  %368 = shl i64 %366, 2
  %369 = tail call i8* @_Znwm(i64 %368) #10
  %370 = bitcast i8* %369 to i32*
  br label %371

371:                                              ; preds = %365, %355
  %372 = phi i64 [ %367, %365 ], [ %360, %355 ]
  %373 = phi i64 [ %366, %365 ], [ 0, %355 ]
  %374 = phi i32* [ %370, %365 ], [ null, %355 ]
  %375 = getelementptr inbounds i32, i32* %374, i64 %372
  %376 = getelementptr inbounds i32, i32* %374, i64 %373
  %377 = ptrtoint i32* %376 to i64
  %378 = getelementptr inbounds i32, i32* %375, i64 %12
  %379 = add i64 %11, -4
  %380 = lshr i64 %379, 2
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 8
  br i1 %382, label %475, label %383

383:                                              ; preds = %371
  %384 = add i64 %11, -4
  %385 = lshr i64 %384, 2
  %386 = add nsw i64 %372, %385
  %387 = add i64 %386, 1
  %388 = getelementptr i32, i32* %374, i64 %387
  %389 = add nuw nsw i64 %385, 1
  %390 = getelementptr i32, i32* %2, i64 %389
  %391 = icmp ult i32* %375, %390
  %392 = icmp ugt i32* %388, %2
  %393 = and i1 %391, %392
  br i1 %393, label %475, label %394

394:                                              ; preds = %383
  %395 = and i64 %381, 9223372036854775800
  %396 = getelementptr i32, i32* %375, i64 %395
  %397 = getelementptr i32, i32* %2, i64 %395
  %398 = add nsw i64 %395, -8
  %399 = lshr exact i64 %398, 3
  %400 = add nuw nsw i64 %399, 1
  %401 = and i64 %400, 3
  %402 = icmp ult i64 %398, 24
  br i1 %402, label %454, label %403

403:                                              ; preds = %394
  %404 = sub nsw i64 %400, %401
  br label %405

405:                                              ; preds = %405, %403
  %406 = phi i64 [ 0, %403 ], [ %451, %405 ]
  %407 = phi i64 [ %404, %403 ], [ %452, %405 ]
  %408 = getelementptr i32, i32* %375, i64 %406
  %409 = getelementptr i32, i32* %2, i64 %406
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !57
  %412 = getelementptr i32, i32* %409, i64 4
  %413 = bitcast i32* %412 to <4 x i32>*
  %414 = load <4 x i32>, <4 x i32>* %413, align 4, !alias.scope !57
  %415 = bitcast i32* %408 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %415, align 4, !alias.scope !60, !noalias !57
  %416 = getelementptr i32, i32* %408, i64 4
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %417, align 4, !alias.scope !60, !noalias !57
  %418 = or i64 %406, 8
  %419 = getelementptr i32, i32* %375, i64 %418
  %420 = getelementptr i32, i32* %2, i64 %418
  %421 = bitcast i32* %420 to <4 x i32>*
  %422 = load <4 x i32>, <4 x i32>* %421, align 4, !alias.scope !57
  %423 = getelementptr i32, i32* %420, i64 4
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4, !alias.scope !57
  %426 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %426, align 4, !alias.scope !60, !noalias !57
  %427 = getelementptr i32, i32* %419, i64 4
  %428 = bitcast i32* %427 to <4 x i32>*
  store <4 x i32> %425, <4 x i32>* %428, align 4, !alias.scope !60, !noalias !57
  %429 = or i64 %406, 16
  %430 = getelementptr i32, i32* %375, i64 %429
  %431 = getelementptr i32, i32* %2, i64 %429
  %432 = bitcast i32* %431 to <4 x i32>*
  %433 = load <4 x i32>, <4 x i32>* %432, align 4, !alias.scope !57
  %434 = getelementptr i32, i32* %431, i64 4
  %435 = bitcast i32* %434 to <4 x i32>*
  %436 = load <4 x i32>, <4 x i32>* %435, align 4, !alias.scope !57
  %437 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %433, <4 x i32>* %437, align 4, !alias.scope !60, !noalias !57
  %438 = getelementptr i32, i32* %430, i64 4
  %439 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %439, align 4, !alias.scope !60, !noalias !57
  %440 = or i64 %406, 24
  %441 = getelementptr i32, i32* %375, i64 %440
  %442 = getelementptr i32, i32* %2, i64 %440
  %443 = bitcast i32* %442 to <4 x i32>*
  %444 = load <4 x i32>, <4 x i32>* %443, align 4, !alias.scope !57
  %445 = getelementptr i32, i32* %442, i64 4
  %446 = bitcast i32* %445 to <4 x i32>*
  %447 = load <4 x i32>, <4 x i32>* %446, align 4, !alias.scope !57
  %448 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %444, <4 x i32>* %448, align 4, !alias.scope !60, !noalias !57
  %449 = getelementptr i32, i32* %441, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  store <4 x i32> %447, <4 x i32>* %450, align 4, !alias.scope !60, !noalias !57
  %451 = add i64 %406, 32
  %452 = add i64 %407, -4
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %405, !llvm.loop !62

454:                                              ; preds = %405, %394
  %455 = phi i64 [ 0, %394 ], [ %451, %405 ]
  %456 = icmp eq i64 %401, 0
  br i1 %456, label %473, label %457

457:                                              ; preds = %454, %457
  %458 = phi i64 [ %470, %457 ], [ %455, %454 ]
  %459 = phi i64 [ %471, %457 ], [ %401, %454 ]
  %460 = getelementptr i32, i32* %375, i64 %458
  %461 = getelementptr i32, i32* %2, i64 %458
  %462 = bitcast i32* %461 to <4 x i32>*
  %463 = load <4 x i32>, <4 x i32>* %462, align 4, !alias.scope !57
  %464 = getelementptr i32, i32* %461, i64 4
  %465 = bitcast i32* %464 to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4, !alias.scope !57
  %467 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %463, <4 x i32>* %467, align 4, !alias.scope !60, !noalias !57
  %468 = getelementptr i32, i32* %460, i64 4
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %469, align 4, !alias.scope !60, !noalias !57
  %470 = add i64 %458, 8
  %471 = add i64 %459, -1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %457, !llvm.loop !63

473:                                              ; preds = %457, %454
  %474 = icmp eq i64 %381, %395
  br i1 %474, label %529, label %475

475:                                              ; preds = %473, %383, %371
  %476 = phi i32* [ %375, %383 ], [ %375, %371 ], [ %396, %473 ]
  %477 = phi i32* [ %2, %383 ], [ %2, %371 ], [ %397, %473 ]
  %478 = ptrtoint i32* %476 to i64
  %479 = add nsw i64 %372, %12
  %480 = add nsw i64 %479, -1
  %481 = getelementptr i32, i32* %374, i64 %480
  %482 = ptrtoint i32* %481 to i64
  %483 = sub i64 %482, %478
  %484 = lshr i64 %483, 2
  %485 = add nuw nsw i64 %484, 1
  %486 = and i64 %485, 7
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %497, label %488

488:                                              ; preds = %475, %488
  %489 = phi i32* [ %493, %488 ], [ %476, %475 ]
  %490 = phi i32* [ %494, %488 ], [ %477, %475 ]
  %491 = phi i64 [ %495, %488 ], [ %486, %475 ]
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  %493 = getelementptr inbounds i32, i32* %489, i64 1
  %494 = getelementptr inbounds i32, i32* %490, i64 1
  %495 = add i64 %491, -1
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %497, label %488, !llvm.loop !64

497:                                              ; preds = %488, %475
  %498 = phi i32* [ %476, %475 ], [ %493, %488 ]
  %499 = phi i32* [ %477, %475 ], [ %494, %488 ]
  %500 = icmp ult i64 %483, 28
  br i1 %500, label %529, label %501

501:                                              ; preds = %497, %501
  %502 = phi i32* [ %526, %501 ], [ %498, %497 ]
  %503 = phi i32* [ %527, %501 ], [ %499, %497 ]
  %504 = load i32, i32* %503, align 4
  store i32 %504, i32* %502, align 4
  %505 = getelementptr inbounds i32, i32* %502, i64 1
  %506 = getelementptr inbounds i32, i32* %503, i64 1
  %507 = load i32, i32* %506, align 4
  store i32 %507, i32* %505, align 4
  %508 = getelementptr inbounds i32, i32* %502, i64 2
  %509 = getelementptr inbounds i32, i32* %503, i64 2
  %510 = load i32, i32* %509, align 4
  store i32 %510, i32* %508, align 4
  %511 = getelementptr inbounds i32, i32* %502, i64 3
  %512 = getelementptr inbounds i32, i32* %503, i64 3
  %513 = load i32, i32* %512, align 4
  store i32 %513, i32* %511, align 4
  %514 = getelementptr inbounds i32, i32* %502, i64 4
  %515 = getelementptr inbounds i32, i32* %503, i64 4
  %516 = load i32, i32* %515, align 4
  store i32 %516, i32* %514, align 4
  %517 = getelementptr inbounds i32, i32* %502, i64 5
  %518 = getelementptr inbounds i32, i32* %503, i64 5
  %519 = load i32, i32* %518, align 4
  store i32 %519, i32* %517, align 4
  %520 = getelementptr inbounds i32, i32* %502, i64 6
  %521 = getelementptr inbounds i32, i32* %503, i64 6
  %522 = load i32, i32* %521, align 4
  store i32 %522, i32* %520, align 4
  %523 = getelementptr inbounds i32, i32* %502, i64 7
  %524 = getelementptr inbounds i32, i32* %503, i64 7
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %523, align 4
  %526 = getelementptr inbounds i32, i32* %502, i64 8
  %527 = getelementptr inbounds i32, i32* %503, i64 8
  %528 = icmp eq i32* %378, %526
  br i1 %528, label %529, label %501, !llvm.loop !65

529:                                              ; preds = %497, %501, %473
  %530 = load i32*, i32** %9, align 8
  %531 = ptrtoint i32* %530 to i64
  %532 = sub i64 %7, %531
  %533 = ashr exact i64 %532, 2
  %534 = sub nsw i64 0, %533
  %535 = getelementptr inbounds i32, i32* %375, i64 %534
  %536 = ptrtoint i32* %535 to i64
  %537 = icmp sgt i64 %532, 0
  br i1 %537, label %538, label %541

538:                                              ; preds = %529
  %539 = bitcast i32* %535 to i8*
  %540 = bitcast i32* %530 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %539, i8* align 4 %540, i64 %532, i1 false) #11
  br label %541

541:                                              ; preds = %538, %529
  %542 = load i32*, i32** %18, align 8
  %543 = icmp eq i32* %542, %1
  br i1 %543, label %699, label %544

544:                                              ; preds = %541
  %545 = getelementptr i32, i32* %542, i64 -1
  %546 = ptrtoint i32* %545 to i64
  %547 = sub i64 %546, %7
  %548 = lshr i64 %547, 2
  %549 = add nuw nsw i64 %548, 1
  %550 = icmp ult i64 %549, 8
  br i1 %550, label %646, label %551

551:                                              ; preds = %544
  %552 = add nsw i64 %372, %12
  %553 = getelementptr i32, i32* %542, i64 -1
  %554 = ptrtoint i32* %553 to i64
  %555 = sub i64 %554, %7
  %556 = lshr i64 %555, 2
  %557 = add nsw i64 %552, %556
  %558 = add i64 %557, 1
  %559 = getelementptr i32, i32* %374, i64 %558
  %560 = add nuw nsw i64 %556, 1
  %561 = getelementptr i32, i32* %1, i64 %560
  %562 = icmp ult i32* %378, %561
  %563 = icmp ugt i32* %559, %1
  %564 = and i1 %562, %563
  br i1 %564, label %646, label %565

565:                                              ; preds = %551
  %566 = and i64 %549, 9223372036854775800
  %567 = getelementptr i32, i32* %378, i64 %566
  %568 = getelementptr i32, i32* %1, i64 %566
  %569 = add nsw i64 %566, -8
  %570 = lshr exact i64 %569, 3
  %571 = add nuw nsw i64 %570, 1
  %572 = and i64 %571, 3
  %573 = icmp ult i64 %569, 24
  br i1 %573, label %625, label %574

574:                                              ; preds = %565
  %575 = sub nsw i64 %571, %572
  br label %576

576:                                              ; preds = %576, %574
  %577 = phi i64 [ 0, %574 ], [ %622, %576 ]
  %578 = phi i64 [ %575, %574 ], [ %623, %576 ]
  %579 = getelementptr i32, i32* %378, i64 %577
  %580 = getelementptr i32, i32* %1, i64 %577
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !66
  %583 = getelementptr i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !66
  %586 = bitcast i32* %579 to <4 x i32>*
  store <4 x i32> %582, <4 x i32>* %586, align 4, !alias.scope !69, !noalias !66
  %587 = getelementptr i32, i32* %579, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %585, <4 x i32>* %588, align 4, !alias.scope !69, !noalias !66
  %589 = or i64 %577, 8
  %590 = getelementptr i32, i32* %378, i64 %589
  %591 = getelementptr i32, i32* %1, i64 %589
  %592 = bitcast i32* %591 to <4 x i32>*
  %593 = load <4 x i32>, <4 x i32>* %592, align 4, !alias.scope !66
  %594 = getelementptr i32, i32* %591, i64 4
  %595 = bitcast i32* %594 to <4 x i32>*
  %596 = load <4 x i32>, <4 x i32>* %595, align 4, !alias.scope !66
  %597 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %593, <4 x i32>* %597, align 4, !alias.scope !69, !noalias !66
  %598 = getelementptr i32, i32* %590, i64 4
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %596, <4 x i32>* %599, align 4, !alias.scope !69, !noalias !66
  %600 = or i64 %577, 16
  %601 = getelementptr i32, i32* %378, i64 %600
  %602 = getelementptr i32, i32* %1, i64 %600
  %603 = bitcast i32* %602 to <4 x i32>*
  %604 = load <4 x i32>, <4 x i32>* %603, align 4, !alias.scope !66
  %605 = getelementptr i32, i32* %602, i64 4
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4, !alias.scope !66
  %608 = bitcast i32* %601 to <4 x i32>*
  store <4 x i32> %604, <4 x i32>* %608, align 4, !alias.scope !69, !noalias !66
  %609 = getelementptr i32, i32* %601, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %607, <4 x i32>* %610, align 4, !alias.scope !69, !noalias !66
  %611 = or i64 %577, 24
  %612 = getelementptr i32, i32* %378, i64 %611
  %613 = getelementptr i32, i32* %1, i64 %611
  %614 = bitcast i32* %613 to <4 x i32>*
  %615 = load <4 x i32>, <4 x i32>* %614, align 4, !alias.scope !66
  %616 = getelementptr i32, i32* %613, i64 4
  %617 = bitcast i32* %616 to <4 x i32>*
  %618 = load <4 x i32>, <4 x i32>* %617, align 4, !alias.scope !66
  %619 = bitcast i32* %612 to <4 x i32>*
  store <4 x i32> %615, <4 x i32>* %619, align 4, !alias.scope !69, !noalias !66
  %620 = getelementptr i32, i32* %612, i64 4
  %621 = bitcast i32* %620 to <4 x i32>*
  store <4 x i32> %618, <4 x i32>* %621, align 4, !alias.scope !69, !noalias !66
  %622 = add i64 %577, 32
  %623 = add i64 %578, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %625, label %576, !llvm.loop !71

625:                                              ; preds = %576, %565
  %626 = phi i64 [ 0, %565 ], [ %622, %576 ]
  %627 = icmp eq i64 %572, 0
  br i1 %627, label %644, label %628

628:                                              ; preds = %625, %628
  %629 = phi i64 [ %641, %628 ], [ %626, %625 ]
  %630 = phi i64 [ %642, %628 ], [ %572, %625 ]
  %631 = getelementptr i32, i32* %378, i64 %629
  %632 = getelementptr i32, i32* %1, i64 %629
  %633 = bitcast i32* %632 to <4 x i32>*
  %634 = load <4 x i32>, <4 x i32>* %633, align 4, !alias.scope !66
  %635 = getelementptr i32, i32* %632, i64 4
  %636 = bitcast i32* %635 to <4 x i32>*
  %637 = load <4 x i32>, <4 x i32>* %636, align 4, !alias.scope !66
  %638 = bitcast i32* %631 to <4 x i32>*
  store <4 x i32> %634, <4 x i32>* %638, align 4, !alias.scope !69, !noalias !66
  %639 = getelementptr i32, i32* %631, i64 4
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> %637, <4 x i32>* %640, align 4, !alias.scope !69, !noalias !66
  %641 = add i64 %629, 8
  %642 = add i64 %630, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %628, !llvm.loop !72

644:                                              ; preds = %628, %625
  %645 = icmp eq i64 %549, %566
  br i1 %645, label %699, label %646

646:                                              ; preds = %644, %551, %544
  %647 = phi i32* [ %378, %551 ], [ %378, %544 ], [ %567, %644 ]
  %648 = phi i32* [ %1, %551 ], [ %1, %544 ], [ %568, %644 ]
  %649 = ptrtoint i32* %648 to i64
  %650 = getelementptr i32, i32* %542, i64 -1
  %651 = ptrtoint i32* %650 to i64
  %652 = sub i64 %651, %649
  %653 = lshr i64 %652, 2
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %666, label %657

657:                                              ; preds = %646, %657
  %658 = phi i32* [ %663, %657 ], [ %647, %646 ]
  %659 = phi i32* [ %662, %657 ], [ %648, %646 ]
  %660 = phi i64 [ %664, %657 ], [ %655, %646 ]
  %661 = load i32, i32* %659, align 4
  store i32 %661, i32* %658, align 4
  %662 = getelementptr inbounds i32, i32* %659, i64 1
  %663 = getelementptr inbounds i32, i32* %658, i64 1
  %664 = add i64 %660, -1
  %665 = icmp eq i64 %664, 0
  br i1 %665, label %666, label %657, !llvm.loop !73

666:                                              ; preds = %657, %646
  %667 = phi i32* [ undef, %646 ], [ %663, %657 ]
  %668 = phi i32* [ %647, %646 ], [ %663, %657 ]
  %669 = phi i32* [ %648, %646 ], [ %662, %657 ]
  %670 = icmp ult i64 %652, 28
  br i1 %670, label %699, label %671

671:                                              ; preds = %666, %671
  %672 = phi i32* [ %697, %671 ], [ %668, %666 ]
  %673 = phi i32* [ %696, %671 ], [ %669, %666 ]
  %674 = load i32, i32* %673, align 4
  store i32 %674, i32* %672, align 4
  %675 = getelementptr inbounds i32, i32* %673, i64 1
  %676 = getelementptr inbounds i32, i32* %672, i64 1
  %677 = load i32, i32* %675, align 4
  store i32 %677, i32* %676, align 4
  %678 = getelementptr inbounds i32, i32* %673, i64 2
  %679 = getelementptr inbounds i32, i32* %672, i64 2
  %680 = load i32, i32* %678, align 4
  store i32 %680, i32* %679, align 4
  %681 = getelementptr inbounds i32, i32* %673, i64 3
  %682 = getelementptr inbounds i32, i32* %672, i64 3
  %683 = load i32, i32* %681, align 4
  store i32 %683, i32* %682, align 4
  %684 = getelementptr inbounds i32, i32* %673, i64 4
  %685 = getelementptr inbounds i32, i32* %672, i64 4
  %686 = load i32, i32* %684, align 4
  store i32 %686, i32* %685, align 4
  %687 = getelementptr inbounds i32, i32* %673, i64 5
  %688 = getelementptr inbounds i32, i32* %672, i64 5
  %689 = load i32, i32* %687, align 4
  store i32 %689, i32* %688, align 4
  %690 = getelementptr inbounds i32, i32* %673, i64 6
  %691 = getelementptr inbounds i32, i32* %672, i64 6
  %692 = load i32, i32* %690, align 4
  store i32 %692, i32* %691, align 4
  %693 = getelementptr inbounds i32, i32* %673, i64 7
  %694 = getelementptr inbounds i32, i32* %672, i64 7
  %695 = load i32, i32* %693, align 4
  store i32 %695, i32* %694, align 4
  %696 = getelementptr inbounds i32, i32* %673, i64 8
  %697 = getelementptr inbounds i32, i32* %672, i64 8
  %698 = icmp eq i32* %696, %542
  br i1 %698, label %699, label %671, !llvm.loop !74

699:                                              ; preds = %666, %671, %644, %541
  %700 = phi i32* [ %378, %541 ], [ %567, %644 ], [ %667, %666 ], [ %697, %671 ]
  %701 = ptrtoint i32* %700 to i64
  %702 = load i32*, i32** %9, align 8
  store i64 %536, i64* %340, align 8
  store i64 %701, i64* %24, align 8
  store i64 %377, i64* %16, align 8
  %703 = icmp eq i32* %702, null
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = bitcast i32* %702 to i8*
  tail call void @_ZdlPv(i8* %705) #10
  br label %706

706:                                              ; preds = %704, %699, %191, %334, %338, %4
  %707 = phi i32* [ %1, %4 ], [ %1, %338 ], [ %1, %334 ], [ %1, %191 ], [ %375, %699 ], [ %375, %704 ]
  ret i32* %707
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcRiEEEvDpOT_(%"class.std::__1::vector"*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #9
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #10
  %31 = bitcast i8* %30 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33
  %37 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  %38 = load i8*, i8** %1, align 8
  %39 = load i32, i32* %2, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp ugt i32 %39, -17
  br i1 %41, label %42, label %44

42:                                               ; preds = %32
  %43 = bitcast %"class.std::__1::basic_string"* %35 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #9
  unreachable

44:                                               ; preds = %32
  %45 = icmp ult i32 %39, 23
  br i1 %45, label %54, label %46

46:                                               ; preds = %44
  %47 = add nuw nsw i64 %40, 16
  %48 = and i64 %47, -16
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = or i64 %48, -9223372036854775808
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %53, align 8
  br label %60

54:                                               ; preds = %44
  %55 = trunc i32 %39 to i8
  %56 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 %55, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %59 = icmp eq i32 %39, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %54, %46
  %61 = phi i8* [ %49, %46 ], [ %58, %54 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %38, i64 %40, i1 false) #11
  br label %62

62:                                               ; preds = %54, %60
  %63 = phi i8* [ %58, %54 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %40
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %66 = ptrtoint %"class.std::__1::basic_string"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %70 = icmp eq %"class.std::__1::basic_string"* %69, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  %72 = ptrtoint %"class.std::__1::basic_string"* %68 to i64
  br label %84

73:                                               ; preds = %62, %73
  %74 = phi %"class.std::__1::basic_string"* [ %76, %73 ], [ %35, %62 ]
  %75 = phi %"class.std::__1::basic_string"* [ %77, %73 ], [ %69, %62 ]
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 -1
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #11
  %80 = icmp eq %"class.std::__1::basic_string"* %77, %68
  br i1 %80, label %81, label %73

81:                                               ; preds = %73
  %82 = load i64, i64* %7, align 8
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  br label %84

84:                                               ; preds = %71, %81
  %85 = phi %"class.std::__1::basic_string"* [ %68, %71 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::basic_string"* [ %35, %71 ], [ %76, %81 ]
  %87 = phi i64 [ %72, %71 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::basic_string"* %86 to i64
  store i64 %88, i64* %7, align 8
  store i64 %66, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::basic_string"*
  %90 = icmp eq %"class.std::__1::basic_string"* %85, %89
  br i1 %90, label %103, label %91

91:                                               ; preds = %84, %101
  %92 = phi %"class.std::__1::basic_string"* [ %93, %101 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 -1
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %98, %91
  %102 = icmp eq %"class.std::__1::basic_string"* %93, %89
  br i1 %102, label %103, label %91

103:                                              ; preds = %101, %84
  %104 = icmp eq i64 %87, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %106) #10
  br label %107

107:                                              ; preds = %103, %105
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector"*, i8** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #9
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #10
  %31 = bitcast i8* %30 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33
  %37 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  %38 = load i8*, i8** %1, align 8
  %39 = load i64, i64* %2, align 8
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::basic_string"* %35 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #9
  unreachable

43:                                               ; preds = %32
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = tail call i8* @_Znwm(i64 %47) #10
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8
  br label %59

53:                                               ; preds = %43
  %54 = trunc i64 %39 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %45
  %60 = phi i8* [ %48, %45 ], [ %57, %53 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %38, i64 %39, i1 false) #11
  br label %61

61:                                               ; preds = %53, %59
  %62 = phi i8* [ %57, %53 ], [ %60, %59 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %39
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %67
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  br label %83

72:                                               ; preds = %61, %72
  %73 = phi %"class.std::__1::basic_string"* [ %75, %72 ], [ %35, %61 ]
  %74 = phi %"class.std::__1::basic_string"* [ %76, %72 ], [ %68, %61 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #11
  %79 = icmp eq %"class.std::__1::basic_string"* %76, %67
  br i1 %79, label %80, label %72

80:                                               ; preds = %72
  %81 = load i64, i64* %7, align 8
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  br label %83

83:                                               ; preds = %70, %80
  %84 = phi %"class.std::__1::basic_string"* [ %67, %70 ], [ %82, %80 ]
  %85 = phi %"class.std::__1::basic_string"* [ %35, %70 ], [ %75, %80 ]
  %86 = phi i64 [ %71, %70 ], [ %81, %80 ]
  %87 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  store i64 %87, i64* %7, align 8
  store i64 %65, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %88 = inttoptr i64 %86 to %"class.std::__1::basic_string"*
  %89 = icmp eq %"class.std::__1::basic_string"* %84, %88
  br i1 %89, label %102, label %90

90:                                               ; preds = %83, %100
  %91 = phi %"class.std::__1::basic_string"* [ %92, %100 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 -1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZdlPv(i8* %99) #10
  br label %100

100:                                              ; preds = %97, %90
  %101 = icmp eq %"class.std::__1::basic_string"* %92, %88
  br i1 %101, label %102, label %90

102:                                              ; preds = %100, %83
  %103 = icmp eq i64 %86, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %102, %104
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKS6_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4absl11string_viewEEEEvDpOT_(%"class.std::__1::vector"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8, !noalias !75
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #11, !alias.scope !75
  br label %69

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !75
  %45 = icmp ugt i64 %44, -17
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %47) #9
  unreachable

48:                                               ; preds = %42
  %49 = icmp ult i64 %44, 23
  br i1 %49, label %58, label %50

50:                                               ; preds = %48
  %51 = add nuw i64 %44, 16
  %52 = and i64 %51, -16
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %53, i8** %54, align 8, !alias.scope !75
  %55 = or i64 %52, -9223372036854775808
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8, !alias.scope !75
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %57, align 8, !alias.scope !75
  br label %64

58:                                               ; preds = %48
  %59 = trunc i64 %44 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1, !alias.scope !75
  %62 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %63 = icmp eq i64 %44, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %58, %50
  %65 = phi i8* [ %53, %50 ], [ %62, %58 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* nonnull align 1 %38, i64 %44, i1 false) #11
  br label %66

66:                                               ; preds = %64, %58
  %67 = phi i8* [ %62, %58 ], [ %65, %64 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %44
  store i8 0, i8* %68, align 1
  br label %69

69:                                               ; preds = %40, %66
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %71 = ptrtoint %"class.std::__1::basic_string"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %72, align 8
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %75 = icmp eq %"class.std::__1::basic_string"* %74, %73
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = ptrtoint %"class.std::__1::basic_string"* %73 to i64
  br label %89

78:                                               ; preds = %69, %78
  %79 = phi %"class.std::__1::basic_string"* [ %81, %78 ], [ %34, %69 ]
  %80 = phi %"class.std::__1::basic_string"* [ %82, %78 ], [ %74, %69 ]
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 -1
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 -1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  %85 = icmp eq %"class.std::__1::basic_string"* %82, %73
  br i1 %85, label %86, label %78

86:                                               ; preds = %78
  %87 = load i64, i64* %6, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %89

89:                                               ; preds = %76, %86
  %90 = phi %"class.std::__1::basic_string"* [ %73, %76 ], [ %88, %86 ]
  %91 = phi %"class.std::__1::basic_string"* [ %34, %76 ], [ %81, %86 ]
  %92 = phi i64 [ %77, %76 ], [ %87, %86 ]
  %93 = ptrtoint %"class.std::__1::basic_string"* %91 to i64
  store i64 %93, i64* %6, align 8
  store i64 %71, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %94 = inttoptr i64 %92 to %"class.std::__1::basic_string"*
  %95 = icmp eq %"class.std::__1::basic_string"* %90, %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %89, %106
  %97 = phi %"class.std::__1::basic_string"* [ %98, %106 ], [ %90, %89 ]
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 -1
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %103, %96
  %107 = icmp eq %"class.std::__1::basic_string"* %98, %94
  br i1 %107, label %108, label %96

108:                                              ; preds = %106, %89
  %109 = icmp eq i64 %92, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN10tensorflow4text12LookupStatus2OKEv: argument 0"}
!7 = distinct !{!7, !"_ZN10tensorflow4text12LookupStatus2OKEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN10tensorflow4text12_GLOBAL__N_117TokenizeL2RGreedyERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEbSE_bPKNS0_14WordpieceVocabEPNS6_6vectorISC_NSA_ISC_EEEEPNSI_IiNSA_IiEEEESO_Pi: argument 0"}
!10 = distinct !{!10, !"_ZN10tensorflow4text12_GLOBAL__N_117TokenizeL2RGreedyERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEbSE_bPKNS0_14WordpieceVocabEPNS6_6vectorISC_NSA_ISC_EEEEPNSI_IiNSA_IiEEEESO_Pi"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN10tensorflow4text12_GLOBAL__N_122LongestMatchStartingAtEiRKN4absl11string_viewERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEibPKNS0_14WordpieceVocabEPiPbSJ_: argument 0"}
!13 = distinct !{!13, !"_ZN10tensorflow4text12_GLOBAL__N_122LongestMatchStartingAtEiRKN4absl11string_viewERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEibPKNS0_14WordpieceVocabEPiPbSJ_"}
!14 = !{!15, !12, !9}
!15 = distinct !{!15, !16, !"_ZN10tensorflow4text12_GLOBAL__N_16LookupEiiRKN4absl11string_viewERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEPKNS0_14WordpieceVocabEPb: argument 0"}
!16 = distinct !{!16, !"_ZN10tensorflow4text12_GLOBAL__N_16LookupEiiRKN4absl11string_viewERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEPKNS0_14WordpieceVocabEPb"}
!17 = !{!"branch_weights", i32 2000, i32 1}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = !{!12, !9, !19}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.isvectorized", i32 1}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = distinct !{!28, !25}
!29 = !{i8 0, i8 2}
!30 = !{!31, !9}
!31 = distinct !{!31, !32, !"_ZN10tensorflow4text12_GLOBAL__N_112NoTokenFoundERKN4absl11string_viewEbRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEPNS6_6vectorISC_NSA_ISC_EEEEPNSF_IiNSA_IiEEEESL_Pi: argument 0"}
!32 = distinct !{!32, !"_ZN10tensorflow4text12_GLOBAL__N_112NoTokenFoundERKN4absl11string_viewEbRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEPNS6_6vectorISC_NSA_ISC_EEEEPNSF_IiNSA_IiEEEESL_Pi"}
!33 = !{!34, !31, !9}
!34 = distinct !{!34, !35, !"_ZN10tensorflow4text12LookupStatus2OKEv: argument 0"}
!35 = distinct !{!35, !"_ZN10tensorflow4text12LookupStatus2OKEv"}
!36 = !{!37, !9}
!37 = distinct !{!37, !38, !"_ZN10tensorflow4text12LookupStatus2OKEv: argument 0"}
!38 = distinct !{!38, !"_ZN10tensorflow4text12LookupStatus2OKEv"}
!39 = !{!9, !37}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !25}
!46 = distinct !{!46, !27}
!47 = distinct !{!47, !27}
!48 = distinct !{!48, !25}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !25}
!55 = distinct !{!55, !27}
!56 = distinct !{!56, !25}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !25}
!63 = distinct !{!63, !27}
!64 = distinct !{!64, !27}
!65 = distinct !{!65, !25}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !25}
!72 = distinct !{!72, !27}
!73 = distinct !{!73, !27}
!74 = distinct !{!74, !25}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!77 = distinct !{!77, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
