; ModuleID = '../../ppapi/shared_impl/scoped_pp_resource.cc'
source_filename = "../../ppapi/shared_impl/scoped_pp_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::ScopedPPResource" = type { i32 }
%"struct.ppapi::ScopedPPResource::PassRef" = type { i8 }
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.ppapi::HostResource" = type { i32, i32 }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.ppapi::ResourceTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.15", i32, %"class.std::__1::unique_ptr.39", %"class.base::WeakPtrFactory" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.std::__1::unordered_map.15" = type { %"class.std::__1::__hash_table.16" }
%"class.std::__1::__hash_table.16" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.35", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base.20"** }
%"struct.std::__1::__hash_node_base.20" = type { %"struct.std::__1::__hash_node_base.20"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator.22" }
%"class.std::__1::__bucket_list_deallocator.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base.20" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.44", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.45" }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i8 }

@_ZN5ppapi16ScopedPPResourceC1Ev = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*), void (%"class.ppapi::ScopedPPResource"*)* @_ZN5ppapi16ScopedPPResourceC2Ev
@_ZN5ppapi16ScopedPPResourceC1Ei = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*, i32), void (%"class.ppapi::ScopedPPResource"*, i32)* @_ZN5ppapi16ScopedPPResourceC2Ei
@_ZN5ppapi16ScopedPPResourceC1ERKNS0_7PassRefEi = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*, %"struct.ppapi::ScopedPPResource::PassRef"*, i32), void (%"class.ppapi::ScopedPPResource"*, %"struct.ppapi::ScopedPPResource::PassRef"*, i32)* @_ZN5ppapi16ScopedPPResourceC2ERKNS0_7PassRefEi
@_ZN5ppapi16ScopedPPResourceC1EPNS_8ResourceE = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*, %"class.ppapi::Resource"*), void (%"class.ppapi::ScopedPPResource"*, %"class.ppapi::Resource"*)* @_ZN5ppapi16ScopedPPResourceC2EPNS_8ResourceE
@_ZN5ppapi16ScopedPPResourceC1ERKS0_ = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*, %"class.ppapi::ScopedPPResource"*), void (%"class.ppapi::ScopedPPResource"*, %"class.ppapi::ScopedPPResource"*)* @_ZN5ppapi16ScopedPPResourceC2ERKS0_
@_ZN5ppapi16ScopedPPResourceD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ScopedPPResource"*), void (%"class.ppapi::ScopedPPResource"*)* @_ZN5ppapi16ScopedPPResourceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi16ScopedPPResourceC2Ev(%"class.ppapi::ScopedPPResource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResourceC2Ei(%"class.ppapi::ScopedPPResource"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 2
  %10 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::ResourceTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #4
  %12 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"* %11, i32 %12) #4
  br label %13

13:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResource10CallAddRefEv(%"class.ppapi::ScopedPPResource"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 2
  %10 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::ResourceTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #4
  %12 = load i32, i32* %2, align 4
  tail call void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"* %11, i32 %12) #4
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi16ScopedPPResourceC2ERKNS0_7PassRefEi(%"class.ppapi::ScopedPPResource"* nocapture, %"struct.ppapi::ScopedPPResource::PassRef"* nocapture readnone dereferenceable(1), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  store i32 %2, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResourceC2EPNS_8ResourceE(%"class.ppapi::ScopedPPResource"* nocapture, %"class.ppapi::Resource"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %4 = icmp eq %"class.ppapi::Resource"* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN5ppapi8Resource12GetReferenceEv(%"class.ppapi::Resource"* nonnull %1) #4
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i32 [ %6, %5 ], [ 0, %2 ]
  store i32 %8, i32* %3, align 4
  ret void
}

declare i32 @_ZN5ppapi8Resource12GetReferenceEv(%"class.ppapi::Resource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResourceC2ERKS0_(%"class.ppapi::ScopedPPResource"* nocapture, %"class.ppapi::ScopedPPResource"* nocapture readonly dereferenceable(4)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %9 = bitcast %"class.ppapi::PpapiGlobals"* %8 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %10 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %10, i64 2
  %12 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %11, align 8
  %13 = tail call %"class.ppapi::ResourceTracker"* %12(%"class.ppapi::PpapiGlobals"* %8) #4
  %14 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"* %13, i32 %14) #4
  br label %15

15:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResourceD2Ev(%"class.ppapi::ScopedPPResource"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 2
  %10 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::ResourceTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #4
  %12 = load i32, i32* %2, align 4
  tail call void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"* %11, i32 %12) #4
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi16ScopedPPResource11CallReleaseEv(%"class.ppapi::ScopedPPResource"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %7 = bitcast %"class.ppapi::PpapiGlobals"* %6 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %8 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %8, i64 2
  %10 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %9, align 8
  %11 = tail call %"class.ppapi::ResourceTracker"* %10(%"class.ppapi::PpapiGlobals"* %6) #4
  %12 = load i32, i32* %2, align 4
  tail call void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"* %11, i32 %12) #4
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(4) %"class.ppapi::ScopedPPResource"* @_ZN5ppapi16ScopedPPResourceaSEi(%"class.ppapi::ScopedPPResource"* returned, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %10 = bitcast %"class.ppapi::PpapiGlobals"* %9 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %11 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %11, i64 2
  %13 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %12, align 8
  %14 = tail call %"class.ppapi::ResourceTracker"* %13(%"class.ppapi::PpapiGlobals"* %9) #4
  %15 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"* %14, i32 %15) #4
  br label %16

16:                                               ; preds = %6, %8
  store i32 %1, i32* %3, align 4
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %20 = bitcast %"class.ppapi::PpapiGlobals"* %19 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %21 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %21, i64 2
  %23 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %22, align 8
  %24 = tail call %"class.ppapi::ResourceTracker"* %23(%"class.ppapi::PpapiGlobals"* %19) #4
  %25 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"* %24, i32 %25) #4
  br label %26

26:                                               ; preds = %18, %16, %2
  ret %"class.ppapi::ScopedPPResource"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(4) %"class.ppapi::ScopedPPResource"* @_ZN5ppapi16ScopedPPResourceaSERKS0_(%"class.ppapi::ScopedPPResource"* returned, %"class.ppapi::ScopedPPResource"* nocapture readonly dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %12 = bitcast %"class.ppapi::PpapiGlobals"* %11 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %13 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %13, i64 2
  %15 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %14, align 8
  %16 = tail call %"class.ppapi::ResourceTracker"* %15(%"class.ppapi::PpapiGlobals"* %11) #4
  %17 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"* %16, i32 %17) #4
  %18 = load i32, i32* %5, align 4
  br label %19

19:                                               ; preds = %8, %10
  %20 = phi i32 [ %6, %8 ], [ %18, %10 ]
  store i32 %20, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #4
  %24 = bitcast %"class.ppapi::PpapiGlobals"* %23 to %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %25 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %25, i64 2
  %27 = load %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::ResourceTracker"* (%"class.ppapi::PpapiGlobals"*)** %26, align 8
  %28 = tail call %"class.ppapi::ResourceTracker"* %27(%"class.ppapi::PpapiGlobals"* %23) #4
  %29 = load i32, i32* %3, align 4
  tail call void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"* %28, i32 %29) #4
  br label %30

30:                                               ; preds = %22, %19, %2
  ret %"class.ppapi::ScopedPPResource"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5ppapi16ScopedPPResource7ReleaseEv(%"class.ppapi::ScopedPPResource"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ScopedPPResource", %"class.ppapi::ScopedPPResource"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  store i32 0, i32* %2, align 4
  ret i32 %3
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #2

declare void @_ZN5ppapi15ResourceTracker14AddRefResourceEi(%"class.ppapi::ResourceTracker"*, i32) local_unnamed_addr #2

declare void @_ZN5ppapi15ResourceTracker15ReleaseResourceEi(%"class.ppapi::ResourceTracker"*, i32) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
