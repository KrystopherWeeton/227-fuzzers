; ModuleID = '../../base/process/launch_posix.cc'
source_filename = "../../base/process/launch_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"*, %"class.std::__1::__compressed_pair" }
%"struct.base::InjectionArc" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::InjectionArc"* }
%"class.base::DirReaderLinux" = type { i32, [4 x i8], [512 x i8], i64, i64 }
%"class.base::Process" = type { i32 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.1", %"class.std::__1::map", i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"struct.base::LaunchOptions" = type <{ i8, [7 x i8], %"class.base::FilePath", %"class.std::__1::vector.21", %"class.std::__1::map.28", i8, [3 x i8], i32, i8, i8, [6 x i8], %"class.base::FilePath", %"class.base::LaunchOptions::PreExecDelegate"*, %"class.std::__1::vector.34"*, i8, [7 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::pair"* }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::LaunchOptions::PreExecDelegate" = type { i32 (...)** }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { i32*, i32*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i32* }
%"struct.base::(anonymous namespace)::kernel_sigaction" = type { i8*, i64, i8*, i64 }
%"class.base::FileDescriptorTableInjection" = type { %"class.base::InjectionDelegate" }
%"class.base::InjectionDelegate" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i8**, i8**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i8** }
%struct.__sigset_t = type { [16 x i64] }
%"class.base::TimeDelta" = type { i64 }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%struct.rlimit = type { i64, i64 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.64" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.58 }
%struct.anon.58 = type { i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map.67", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map.67" = type { %"class.std::__1::__tree.68" }
%"class.std::__1::__tree.68" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.51", i32, i64, i64 }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.82" }
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl.85" }
%"struct.std::__1::__cxx_atomic_impl.85" = type { %"struct.std::__1::__cxx_atomic_base_impl.86" }
%"struct.std::__1::__cxx_atomic_base_impl.86" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.51", [4 x i8] }>
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZN4baseL6kFDDirE = internal constant [14 x i8] c"/proc/self/fd\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [14 x i8] c"LaunchProcess\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"Check failed: !(options.clone_flags & (CLONE_SIGHAND | CLONE_THREAD | CLONE_VM))\0A\00", align 1
@.str.2 = private unnamed_addr constant [106 x i8] c"Check failed: !(options.clone_flags & (CLONE_CHILD_CLEARTID | CLONE_CHILD_SETTID | CLONE_PARENT_SETTID))\0A\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"Check failed: (options.clone_flags & 0xff) == 0\0A\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"MPArch.ForkTime\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Failed to open /dev/null\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Failed to dup /dev/null for stdin\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"setpgid failed\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"getrlimit failed\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"setrlimit failed\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"prctl(PR_SET_NO_NEW_PRIVS) failed\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"prctl(PR_SET_PDEATHSIG) failed\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"Check failed: chdir(current_directory) == 0\0A\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"LaunchProcess: failed to execvp:\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"../../base/process/launch_posix.cc\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"Invalid usage of ForkWithFlags\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Failed to close directory handle\00", align 1
@environ = external local_unnamed_addr global i8**, align 8
@.str.18 = private unnamed_addr constant [77 x i8] c"Check failed: pthread_sigmask(SIG_SETMASK, &new_sigmask, &old_sigmask) == 0\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"sigaction (get) failed.\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"sigaction (set) failed.\00", align 1
@_ZTVN4base28FileDescriptorTableInjectionE = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.21 = private unnamed_addr constant [13 x i8] c"GetAppOutput\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.23 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN4base13LaunchProcessERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKNS_13LaunchOptionsEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19CloseSuperfluousFdsERKNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.base::DirReaderLinux", align 8
  %3 = alloca i8*, align 8
  %4 = tail call i64 @_ZN4base9GetMaxFdsEv() #16
  %5 = bitcast %"class.base::DirReaderLinux"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 536, i8* nonnull %5) #16
  %6 = bitcast %"class.base::DirReaderLinux"* %2 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 0
  %8 = tail call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN4baseL6kFDDirE, i64 0, i64 0), i32 65536) #16
  store i32 %8, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 528, i1 false) #16
  %10 = icmp sgt i32 %8, -1
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %150, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.base::InjectionArc"** %14 to i64*
  %16 = bitcast %"class.std::__1::vector"* %0 to i64*
  br label %25

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 4
  %19 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 3
  %20 = bitcast i8** %3 to i8*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.base::InjectionArc"** %21 to i64*
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = sext i32 %8 to i64
  br label %50

25:                                               ; preds = %47, %13
  %26 = phi i64 [ 0, %13 ], [ %48, %47 ]
  %27 = trunc i64 %26 to i32
  %28 = icmp ult i32 %27, 3
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = load i64, i64* %15, align 8
  %31 = load i64, i64* %16, align 8
  %32 = icmp eq i64 %30, %31
  %33 = inttoptr i64 %31 to %"struct.base::InjectionArc"*
  br i1 %32, label %45, label %34

34:                                               ; preds = %29
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %35, 12
  br label %39

37:                                               ; preds = %39
  %38 = icmp ult i64 %44, %36
  br i1 %38, label %39, label %45

39:                                               ; preds = %34, %37
  %40 = phi i64 [ 0, %34 ], [ %44, %37 ]
  %41 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %33, i64 %40, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, %27
  %44 = add nuw i64 %40, 1
  br i1 %43, label %47, label %37

45:                                               ; preds = %37, %29
  %46 = tail call i32 @close(i32 %27) #16
  br label %47

47:                                               ; preds = %39, %45, %25
  %48 = add nuw i64 %26, 1
  %49 = icmp eq i64 %48, %4
  br i1 %49, label %140, label %25

50:                                               ; preds = %80, %17
  %51 = phi i64 [ 0, %17 ], [ %81, %80 ]
  %52 = phi i64 [ 0, %17 ], [ %82, %80 ]
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 2, i64 %51
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 8
  %59 = zext i16 %58 to i64
  %60 = add i64 %51, %59
  store i64 %60, i64* %19, align 8
  br label %61

61:                                               ; preds = %54, %50
  %62 = phi i64 [ %60, %54 ], [ %51, %50 ]
  %63 = icmp eq i64 %62, %52
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = load i32, i32* %7, align 8
  %66 = call i64 (i64, ...) @syscall(i64 217, i32 %65, i8* %9, i64 512) #16
  %67 = trunc i64 %66 to i32
  switch i32 %67, label %68 [
    i32 0, label %138
    i32 -1, label %138
  ]

68:                                               ; preds = %64
  %69 = shl i64 %66, 32
  %70 = ashr exact i64 %69, 32
  store i64 %70, i64* %18, align 8
  store i64 0, i64* %19, align 8
  br label %71

71:                                               ; preds = %61, %68
  %72 = phi i64 [ 0, %68 ], [ %62, %61 ]
  %73 = phi i64 [ %70, %68 ], [ %52, %61 ]
  %74 = icmp eq i64 %73, 0
  %75 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 2, i64 %72
  %76 = getelementptr inbounds i8, i8* %75, i64 19
  %77 = select i1 %74, i8* null, i8* %76
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 46
  br i1 %79, label %80, label %83

80:                                               ; preds = %71, %135
  %81 = phi i64 [ %72, %71 ], [ %136, %135 ]
  %82 = phi i64 [ %73, %71 ], [ %137, %135 ]
  br label %50

83:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %84 = tail call i32* @__errno_location() #17
  store i32 0, i32* %84, align 4
  %85 = load i64, i64* %18, align 8
  %86 = icmp eq i64 %85, 0
  %87 = load i64, i64* %19, align 8
  %88 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 2, i64 %87
  %89 = getelementptr inbounds i8, i8* %88, i64 19
  %90 = select i1 %86, i8* null, i8* %89
  %91 = call i64 @strtol(i8* %90, i8** nonnull %3, i32 10) #16
  %92 = load i64, i64* %18, align 8
  %93 = icmp eq i64 %92, 0
  %94 = load i64, i64* %19, align 8
  %95 = getelementptr inbounds %"class.base::DirReaderLinux", %"class.base::DirReaderLinux"* %2, i64 0, i32 2, i64 %94
  %96 = getelementptr inbounds i8, i8* %95, i64 19
  %97 = select i1 %93, i8* null, i8* %96
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %135, label %100

100:                                              ; preds = %83
  %101 = load i8*, i8** %3, align 8
  %102 = load i8, i8* %101, align 1
  %103 = icmp ne i8 %102, 0
  %104 = icmp slt i64 %91, 0
  %105 = or i1 %104, %103
  br i1 %105, label %135, label %106

106:                                              ; preds = %100
  %107 = load i32, i32* %84, align 4
  %108 = icmp ne i32 %107, 0
  %109 = icmp ult i64 %91, 3
  %110 = or i1 %109, %108
  br i1 %110, label %135, label %111

111:                                              ; preds = %106
  %112 = load i64, i64* %22, align 8
  %113 = load i64, i64* %23, align 8
  %114 = icmp eq i64 %112, %113
  %115 = inttoptr i64 %113 to %"struct.base::InjectionArc"*
  br i1 %114, label %128, label %116

116:                                              ; preds = %111
  %117 = sub i64 %112, %113
  %118 = sdiv exact i64 %117, 12
  br label %121

119:                                              ; preds = %121
  %120 = icmp ult i64 %127, %118
  br i1 %120, label %121, label %128

121:                                              ; preds = %116, %119
  %122 = phi i64 [ 0, %116 ], [ %127, %119 ]
  %123 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %115, i64 %122, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = icmp eq i64 %91, %125
  %127 = add nuw i64 %122, 1
  br i1 %126, label %135, label %119

128:                                              ; preds = %119, %111
  %129 = icmp eq i64 %91, %24
  br i1 %129, label %135, label %130

130:                                              ; preds = %128
  %131 = trunc i64 %91 to i32
  %132 = call i32 @close(i32 %131) #16
  %133 = load i64, i64* %18, align 8
  %134 = load i64, i64* %19, align 8
  br label %135

135:                                              ; preds = %121, %130, %106, %128, %83, %100
  %136 = phi i64 [ %134, %130 ], [ %94, %106 ], [ %94, %128 ], [ %94, %83 ], [ %94, %100 ], [ %94, %121 ]
  %137 = phi i64 [ %133, %130 ], [ %92, %106 ], [ %92, %128 ], [ %92, %83 ], [ %92, %100 ], [ %92, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %80

138:                                              ; preds = %64, %64
  %139 = load i32, i32* %7, align 8
  br label %140

140:                                              ; preds = %47, %138
  %141 = phi i32 [ %139, %138 ], [ %8, %47 ]
  %142 = icmp sgt i32 %141, -1
  br i1 %142, label %143, label %150

143:                                              ; preds = %140
  %144 = call i32 @close(i32 %141) #16
  switch i32 %144, label %149 [
    i32 -1, label %145
    i32 0, label %150
  ]

145:                                              ; preds = %143
  %146 = tail call i32* @__errno_location() #17
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 4
  br i1 %148, label %150, label %149

149:                                              ; preds = %145, %143
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0)) #16
  br label %150

150:                                              ; preds = %11, %140, %143, %145, %149
  call void @llvm.lifetime.end.p0i8(i64 536, i8* nonnull %5) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base9GetMaxFdsEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13LaunchProcessERKNS_11CommandLineERKNS_13LaunchOptionsE(%"class.base::Process"* noalias sret, %"class.base::CommandLine"* nocapture readonly dereferenceable(56), %"struct.base::LaunchOptions"* dereferenceable(144)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %1, i64 0, i32 0
  tail call void @_ZN4base13LaunchProcessERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKNS_13LaunchOptionsE(%"class.base::Process"* sret %0, %"class.std::__1::vector.1"* dereferenceable(24) %4, %"struct.base::LaunchOptions"* dereferenceable(144) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base13LaunchProcessERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKNS_13LaunchOptionsE(%"class.base::Process"* noalias sret, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), %"struct.base::LaunchOptions"* dereferenceable(144)) local_unnamed_addr #0 {
  %4 = alloca %"struct.base::(anonymous namespace)::kernel_sigaction", align 8
  %5 = alloca %"class.base::FileDescriptorTableInjection", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector.41", align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.__sigset_t, align 8
  %12 = alloca %struct.__sigset_t, align 8
  %13 = alloca %struct.__sigset_t, align 8
  %14 = alloca %"class.base::TimeDelta", align 8
  %15 = alloca %"class.base::ScopedGeneric", align 8
  %16 = alloca %struct.rlimit, align 8
  %17 = alloca %struct.__sigset_t, align 8
  %18 = alloca [3 x i8], align 1
  %19 = alloca [3 x i8], align 1
  %20 = alloca %"class.base::ScopedBlockingCall", align 8
  %21 = alloca %"class.base::Location", align 8
  %22 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %23 = and i8 %22, 25
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %31, label %25, !prof !2

25:                                               ; preds = %3
  %26 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %27 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %29 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %29, i64* %28, align 8
  %30 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %26, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %31

31:                                               ; preds = %3, %25
  %32 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), %25 ]
  %33 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %25 ]
  %34 = phi i64 [ -6148914691236517206, %3 ], [ %30, %25 ]
  %35 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #16
  %39 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #16
  %43 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 3, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::pair"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.21"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = bitcast %"struct.base::InjectionArc"** %38 to i64*
  %52 = bitcast %"class.std::__1::vector"* %7 to i64*
  %53 = icmp eq i64 %49, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %31
  %55 = icmp ugt i64 %50, 1537228672809129301
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  call void @abort() #18
  unreachable

57:                                               ; preds = %31
  %58 = bitcast %"struct.base::InjectionArc"** %42 to i64*
  %59 = bitcast %"class.std::__1::vector"* %8 to i64*
  br label %77

60:                                               ; preds = %54
  %61 = bitcast %"struct.base::InjectionArc"** %37 to i64*
  %62 = mul i64 %50, 12
  %63 = call i8* @_Znwm(i64 %62) #19
  %64 = bitcast i8* %63 to %"struct.base::InjectionArc"*
  %65 = ptrtoint i8* %63 to i64
  %66 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %64, i64 %50
  %67 = ptrtoint %"struct.base::InjectionArc"* %66 to i64
  store i64 %65, i64* %52, align 8
  store i64 %65, i64* %61, align 8
  store i64 %67, i64* %51, align 8
  %68 = bitcast %"struct.base::InjectionArc"** %42 to i64*
  %69 = bitcast %"class.std::__1::vector"* %8 to i64*
  %70 = bitcast %"struct.base::InjectionArc"** %41 to i64*
  %71 = mul i64 %50, 12
  %72 = call i8* @_Znwm(i64 %71) #19
  %73 = bitcast i8* %72 to %"struct.base::InjectionArc"*
  %74 = ptrtoint i8* %72 to i64
  %75 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %73, i64 %50
  %76 = ptrtoint %"struct.base::InjectionArc"* %75 to i64
  store i64 %74, i64* %69, align 8
  store i64 %74, i64* %70, align 8
  store i64 %76, i64* %68, align 8
  br label %77

77:                                               ; preds = %60, %57
  %78 = phi i64* [ %59, %57 ], [ %69, %60 ]
  %79 = phi i64* [ %58, %57 ], [ %68, %60 ]
  %80 = bitcast %"class.std::__1::vector.41"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #16
  %81 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %9, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %9, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #16
  %84 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = sdiv exact i64 %89, 24
  %91 = add nsw i64 %90, 1
  %92 = bitcast i8*** %83 to i64*
  %93 = bitcast %"class.std::__1::vector.41"* %9 to i64*
  %94 = icmp eq i64 %91, 0
  %95 = inttoptr i64 %88 to %"class.std::__1::basic_string"*
  %96 = inttoptr i64 %86 to %"class.std::__1::basic_string"*
  br i1 %94, label %109, label %97

97:                                               ; preds = %77
  %98 = icmp ugt i64 %91, 2305843009213693951
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  call void @abort() #18
  unreachable

100:                                              ; preds = %97
  %101 = bitcast i8*** %82 to i64*
  %102 = shl nsw i64 %91, 3
  %103 = call i8* @_Znwm(i64 %102) #19
  %104 = bitcast i8* %103 to i8**
  %105 = ptrtoint i8* %103 to i64
  %106 = getelementptr inbounds i8*, i8** %104, i64 %91
  %107 = ptrtoint i8** %106 to i64
  %108 = ptrtoint i8* %103 to i64
  store i64 %108, i64* %93, align 8
  store i64 %105, i64* %101, align 8
  store i64 %107, i64* %92, align 8
  br label %109

109:                                              ; preds = %100, %77
  %110 = phi i64 [ 0, %77 ], [ %105, %100 ]
  %111 = phi i8** [ null, %77 ], [ %106, %100 ]
  %112 = phi i8** [ null, %77 ], [ %104, %100 ]
  %113 = icmp eq %"class.std::__1::basic_string"* %95, %96
  br i1 %113, label %120, label %114

114:                                              ; preds = %109
  %115 = bitcast i8*** %82 to i64*
  br label %186

116:                                              ; preds = %252
  %117 = load i8**, i8*** %82, align 8
  %118 = load i8**, i8*** %83, align 8
  %119 = ptrtoint i8** %117 to i64
  br label %120

120:                                              ; preds = %116, %109
  %121 = phi i64 [ %119, %116 ], [ %110, %109 ]
  %122 = phi i8** [ %118, %116 ], [ %111, %109 ]
  %123 = phi i8** [ %117, %116 ], [ %112, %109 ]
  %124 = icmp ult i8** %123, %122
  %125 = ptrtoint i8** %122 to i64
  br i1 %124, label %126, label %131

126:                                              ; preds = %120
  %127 = bitcast i8** %123 to i64*
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds i8*, i8** %123, i64 1
  %129 = ptrtoint i8** %128 to i64
  %130 = bitcast i8*** %82 to i64*
  store i64 %129, i64* %130, align 8
  br label %180

131:                                              ; preds = %120
  %132 = ptrtoint i8** %123 to i64
  %133 = bitcast i8*** %82 to i64*
  %134 = load i64, i64* %93, align 8
  %135 = sub i64 %132, %134
  %136 = ashr exact i64 %135, 3
  %137 = add nsw i64 %136, 1
  %138 = icmp ugt i64 %137, 2305843009213693951
  br i1 %138, label %139, label %141

139:                                              ; preds = %131
  %140 = bitcast %"class.std::__1::vector.41"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %140) #18
  unreachable

141:                                              ; preds = %131
  %142 = sub i64 %125, %134
  %143 = ashr exact i64 %142, 3
  %144 = icmp ult i64 %143, 1152921504606846975
  br i1 %144, label %145, label %153

145:                                              ; preds = %141
  %146 = ashr exact i64 %142, 2
  %147 = icmp ult i64 %146, %137
  %148 = select i1 %147, i64 %137, i64 %146
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %145
  %151 = icmp ugt i64 %148, 2305843009213693951
  br i1 %151, label %152, label %153

152:                                              ; preds = %150
  call void @abort() #18
  unreachable

153:                                              ; preds = %150, %141
  %154 = phi i64 [ %148, %150 ], [ 2305843009213693951, %141 ]
  %155 = shl i64 %154, 3
  %156 = call i8* @_Znwm(i64 %155) #19
  %157 = bitcast i8* %156 to i8**
  br label %158

158:                                              ; preds = %153, %145
  %159 = phi i64 [ %154, %153 ], [ 0, %145 ]
  %160 = phi i8** [ %157, %153 ], [ null, %145 ]
  %161 = getelementptr inbounds i8*, i8** %160, i64 %136
  %162 = getelementptr inbounds i8*, i8** %160, i64 %159
  %163 = ptrtoint i8** %162 to i64
  %164 = bitcast i8** %161 to i64*
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds i8*, i8** %161, i64 1
  %166 = ptrtoint i8** %165 to i64
  %167 = sub i64 %121, %134
  %168 = ashr exact i64 %167, 3
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds i8*, i8** %161, i64 %169
  %171 = ptrtoint i8** %170 to i64
  %172 = icmp sgt i64 %167, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %158
  %174 = bitcast i8** %170 to i8*
  %175 = inttoptr i64 %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 %167, i1 false) #16
  br label %176

176:                                              ; preds = %173, %158
  store i64 %171, i64* %93, align 8
  store i64 %166, i64* %133, align 8
  store i64 %163, i64* %92, align 8
  %177 = icmp eq i64 %134, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = inttoptr i64 %134 to i8*
  call void @_ZdlPv(i8* %179) #19
  br label %180

180:                                              ; preds = %126, %176, %178
  %181 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #16
  store i8* null, i8** %10, align 8
  %182 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 5
  %183 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %262, label %255

186:                                              ; preds = %114, %252
  %187 = phi %"class.std::__1::basic_string"* [ %95, %114 ], [ %253, %252 ]
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  br label %197

195:                                              ; preds = %186
  %196 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  br label %197

197:                                              ; preds = %192, %195
  %198 = phi i8* [ %194, %192 ], [ %196, %195 ]
  %199 = ptrtoint i8* %198 to i64
  %200 = load i8**, i8*** %82, align 8
  %201 = load i8**, i8*** %83, align 8
  %202 = icmp ult i8** %200, %201
  %203 = ptrtoint i8** %201 to i64
  br i1 %202, label %204, label %208

204:                                              ; preds = %197
  %205 = bitcast i8** %200 to i64*
  store i64 %199, i64* %205, align 8
  %206 = getelementptr inbounds i8*, i8** %200, i64 1
  %207 = ptrtoint i8** %206 to i64
  store i64 %207, i64* %115, align 8
  br label %252

208:                                              ; preds = %197
  %209 = ptrtoint i8** %200 to i64
  %210 = load i64, i64* %93, align 8
  %211 = sub i64 %209, %210
  %212 = ashr exact i64 %211, 3
  %213 = add nsw i64 %212, 1
  %214 = icmp ugt i64 %213, 2305843009213693951
  br i1 %214, label %215, label %217

215:                                              ; preds = %208
  %216 = bitcast %"class.std::__1::vector.41"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %216) #18
  unreachable

217:                                              ; preds = %208
  %218 = sub i64 %203, %210
  %219 = ashr exact i64 %218, 3
  %220 = icmp ult i64 %219, 1152921504606846975
  br i1 %220, label %221, label %229

221:                                              ; preds = %217
  %222 = ashr exact i64 %218, 2
  %223 = icmp ult i64 %222, %213
  %224 = select i1 %223, i64 %213, i64 %222
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %234, label %226

226:                                              ; preds = %221
  %227 = icmp ugt i64 %224, 2305843009213693951
  br i1 %227, label %228, label %229

228:                                              ; preds = %226
  call void @abort() #18
  unreachable

229:                                              ; preds = %226, %217
  %230 = phi i64 [ %224, %226 ], [ 2305843009213693951, %217 ]
  %231 = shl i64 %230, 3
  %232 = call i8* @_Znwm(i64 %231) #19
  %233 = bitcast i8* %232 to i8**
  br label %234

234:                                              ; preds = %229, %221
  %235 = phi i64 [ %230, %229 ], [ 0, %221 ]
  %236 = phi i8* [ %232, %229 ], [ null, %221 ]
  %237 = phi i8** [ %233, %229 ], [ null, %221 ]
  %238 = getelementptr inbounds i8*, i8** %237, i64 %212
  %239 = getelementptr inbounds i8*, i8** %237, i64 %235
  %240 = ptrtoint i8** %239 to i64
  %241 = bitcast i8** %238 to i64*
  store i64 %199, i64* %241, align 8
  %242 = getelementptr inbounds i8*, i8** %238, i64 1
  %243 = ptrtoint i8** %242 to i64
  %244 = ptrtoint i8** %237 to i64
  %245 = icmp sgt i64 %211, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %234
  %247 = inttoptr i64 %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %247, i64 %211, i1 false) #16
  br label %248

248:                                              ; preds = %246, %234
  store i64 %244, i64* %93, align 8
  store i64 %243, i64* %115, align 8
  store i64 %240, i64* %92, align 8
  %249 = icmp eq i64 %210, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = inttoptr i64 %210 to i8*
  call void @_ZdlPv(i8* %251) #19
  br label %252

252:                                              ; preds = %204, %248, %250
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 1
  %254 = icmp eq %"class.std::__1::basic_string"* %253, %96
  br i1 %254, label %116, label %186

255:                                              ; preds = %180
  %256 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 4
  %257 = load i8, i8* %182, align 8, !range !3
  %258 = load i8**, i8*** @environ, align 8
  %259 = icmp eq i8 %257, 0
  %260 = select i1 %259, i8** %258, i8** %10
  %261 = call i8** @_ZN4base8internal16AlterEnvironmentEPKPKcRKNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESC_NS5_4lessISC_EENSA_INS5_4pairIKSC_SC_EEEEEE(i8** %260, %"class.std::__1::map.28"* dereferenceable(24) %256) #16
  br label %262

262:                                              ; preds = %255, %180
  %263 = phi i8** [ null, %180 ], [ %261, %255 ]
  %264 = bitcast %struct.__sigset_t* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %264) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 128, i1 false)
  %265 = call i32 @sigfillset(%struct.__sigset_t* nonnull %11) #16
  %266 = bitcast %struct.__sigset_t* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %266) #16
  %267 = bitcast %struct.__sigset_t* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 128, i1 false)
  %268 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %11, %struct.__sigset_t* nonnull %12) #16
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %271, label %270

270:                                              ; preds = %262
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.18, i64 0, i64 0)) #16
  br label %271

271:                                              ; preds = %262, %270
  %272 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 2
  %273 = bitcast %"class.base::FilePath"* %272 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %273, i64 0, i32 1, i32 0
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  br label %282

280:                                              ; preds = %271
  %281 = zext i8 %275 to i64
  br label %282

282:                                              ; preds = %277, %280
  %283 = phi i64 [ %279, %277 ], [ %281, %280 ]
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %291, label %285

285:                                              ; preds = %282
  br i1 %276, label %286, label %289

286:                                              ; preds = %285
  %287 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  br label %291

289:                                              ; preds = %285
  %290 = bitcast %"class.base::FilePath"* %272 to i8*
  br label %291

291:                                              ; preds = %289, %286, %282
  %292 = phi i8* [ null, %282 ], [ %288, %286 ], [ %290, %289 ]
  %293 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %294 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 7
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %319, label %297

297:                                              ; preds = %291
  %298 = and i32 %295, 67840
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %302, label %300

300:                                              ; preds = %297
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0)) #16
  %301 = load i32, i32* %294, align 4
  br label %302

302:                                              ; preds = %297, %300
  %303 = phi i32 [ %295, %297 ], [ %301, %300 ]
  %304 = and i32 %303, 19922944
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %302
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.2, i64 0, i64 0)) #16
  %307 = load i32, i32* %294, align 4
  br label %308

308:                                              ; preds = %302, %306
  %309 = phi i32 [ %303, %302 ], [ %307, %306 ]
  %310 = and i32 %309, 255
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %308
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0)) #16
  %313 = load i32, i32* %294, align 4
  br label %314

314:                                              ; preds = %312, %308
  %315 = phi i32 [ %313, %312 ], [ %309, %308 ]
  %316 = or i32 %315, 17
  %317 = sext i32 %316 to i64
  %318 = call i32 @_ZN4base13ForkWithFlagsEmPiS0_(i64 %317, i32* null, i32* null)
  br label %321

319:                                              ; preds = %291
  %320 = call i32 @fork() #16
  br label %321

321:                                              ; preds = %319, %314
  %322 = phi i32 [ %318, %314 ], [ %320, %319 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %343, label %324

324:                                              ; preds = %321
  %325 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %326 = bitcast %struct.__sigset_t* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %326) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 128, i1 false) #16, !alias.scope !4
  %327 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %12, %struct.__sigset_t* nonnull %13) #16
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %330, label %329

329:                                              ; preds = %324
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.18, i64 0, i64 0)) #16
  br label %330

330:                                              ; preds = %324, %329
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %326) #16
  %331 = bitcast %"class.base::TimeDelta"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #16
  %332 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %14, i64 0, i32 0
  %333 = sub nsw i64 %325, %293
  store i64 %333, i64* %332, align 8
  %334 = load atomic i64, i64* @_ZZN4base13LaunchProcessERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKNS_13LaunchOptionsEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %335 = inttoptr i64 %334 to %"class.base::HistogramBase"*
  %336 = icmp eq i64 %334, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %330
  %338 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %339 = ptrtoint %"class.base::HistogramBase"* %338 to i64
  store atomic i64 %339, i64* @_ZZN4base13LaunchProcessERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEERKNS_13LaunchOptionsEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %340

340:                                              ; preds = %337, %330
  %341 = phi %"class.base::HistogramBase"* [ %335, %330 ], [ %338, %337 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %341, %"class.base::TimeDelta"* nonnull dereferenceable(8) %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #16
  %342 = icmp slt i32 %322, 0
  br i1 %342, label %670, label %655

343:                                              ; preds = %321
  call void @_ZN4base6subtle16ResetFDOwnershipEv() #16
  %344 = bitcast %"class.base::ScopedGeneric"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %344) #16
  %345 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 0
  %346 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 1, i32 0
  %347 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 2
  %348 = bitcast %"class.base::ScopedGeneric"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %348, i8 -86, i64 16, i1 false)
  br label %349

349:                                              ; preds = %352, %343
  %350 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 0) #16
  %351 = icmp eq i32 %350, -1
  br i1 %351, label %352, label %357

352:                                              ; preds = %349
  %353 = tail call i32* @__errno_location() #17
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, 4
  br i1 %355, label %349, label %356

356:                                              ; preds = %352
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %345, align 8
  store i32 -1, i32* %346, align 8
  store i8 0, i8* %347, align 4
  br label %360

357:                                              ; preds = %349
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %345, align 8
  store i32 %350, i32* %346, align 8
  store i8 0, i8* %347, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15, i32 %350) #16
  %358 = load i32, i32* %346, align 8
  %359 = icmp eq i32 %358, -1
  br i1 %359, label %360, label %361

360:                                              ; preds = %357, %356
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #16
  call void @_exit(i32 127) #18
  unreachable

361:                                              ; preds = %357, %368
  %362 = phi i32 [ %369, %368 ], [ %358, %357 ]
  %363 = call i32 @dup2(i32 %362, i32 0) #16
  switch i32 %363, label %370 [
    i32 -1, label %364
    i32 0, label %371
  ]

364:                                              ; preds = %361
  %365 = tail call i32* @__errno_location() #17
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 4
  br i1 %367, label %368, label %370

368:                                              ; preds = %364
  %369 = load i32, i32* %346, align 8
  br label %361

370:                                              ; preds = %364, %361
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #16
  call void @_exit(i32 127) #18
  unreachable

371:                                              ; preds = %361
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %344) #16
  %372 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 14
  %373 = load i8, i8* %372, align 8, !range !3
  %374 = icmp eq i8 %373, 0
  br i1 %374, label %379, label %375

375:                                              ; preds = %371
  %376 = call i32 @setpgid(i32 0, i32 0) #16
  %377 = icmp slt i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #16
  call void @_exit(i32 127) #18
  unreachable

379:                                              ; preds = %371, %375
  %380 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 13
  %381 = load %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"** %380, align 8
  %382 = icmp eq %"class.std::__1::vector.34"* %381, null
  br i1 %382, label %411, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %381, i64 0, i32 0, i32 0
  %385 = load i32*, i32** %384, align 8
  %386 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %381, i64 0, i32 0, i32 1
  %387 = load i32*, i32** %386, align 8
  %388 = icmp eq i32* %385, %387
  br i1 %388, label %411, label %389

389:                                              ; preds = %383
  %390 = bitcast %struct.rlimit* %16 to i8*
  %391 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %16, i64 0, i32 0
  %392 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %16, i64 0, i32 1
  %393 = bitcast %struct.rlimit* %16 to i8*
  br label %394

394:                                              ; preds = %389, %408
  %395 = phi i32* [ %385, %389 ], [ %409, %408 ]
  %396 = load i32, i32* %395, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %390) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %393, i8 -86, i64 16, i1 false)
  %397 = call i32 @getrlimit64(i32 %396, %struct.rlimit* nonnull %16) #16
  %398 = icmp slt i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %394
  call void @_ZN7logging6RawLogEiPKc(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #16
  br label %408

400:                                              ; preds = %394
  %401 = load i64, i64* %391, align 8
  %402 = load i64, i64* %392, align 8
  %403 = icmp ult i64 %401, %402
  br i1 %403, label %404, label %408

404:                                              ; preds = %400
  store i64 %402, i64* %391, align 8
  %405 = call i32 @setrlimit64(i32 %396, %struct.rlimit* nonnull %16) #16
  %406 = icmp slt i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZN7logging6RawLogEiPKc(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)) #16
  br label %408

408:                                              ; preds = %400, %407, %404, %399
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %390) #16
  %409 = getelementptr inbounds i32, i32* %395, i64 1
  %410 = icmp eq i32* %409, %387
  br i1 %410, label %411, label %394

411:                                              ; preds = %408, %383, %379
  %412 = bitcast %"struct.base::(anonymous namespace)::kernel_sigaction"* %4 to i8*
  %413 = getelementptr inbounds %"struct.base::(anonymous namespace)::kernel_sigaction", %"struct.base::(anonymous namespace)::kernel_sigaction"* %4, i64 0, i32 0
  %414 = getelementptr inbounds %"struct.base::(anonymous namespace)::kernel_sigaction", %"struct.base::(anonymous namespace)::kernel_sigaction"* %4, i64 0, i32 2
  br label %415

415:                                              ; preds = %431, %411
  %416 = phi i32 [ 1, %411 ], [ %432, %431 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %412) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %412, i8 0, i64 32, i1 false) #16
  %417 = call i64 (i64, ...) @syscall(i64 13, i32 %416, %"struct.base::(anonymous namespace)::kernel_sigaction"* null, %"struct.base::(anonymous namespace)::kernel_sigaction"* nonnull %4, i64 8) #16
  %418 = trunc i64 %417 to i32
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %425, label %420

420:                                              ; preds = %415
  %421 = tail call i32* @__errno_location() #17
  %422 = load i32, i32* %421, align 4
  %423 = icmp eq i32 %422, 22
  br i1 %423, label %433, label %424

424:                                              ; preds = %420
  call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0)) #16
  br label %425

425:                                              ; preds = %424, %415
  switch i32 %416, label %426 [
    i32 19, label %431
    i32 9, label %431
  ]

426:                                              ; preds = %425
  store i8* null, i8** %413, align 8
  store i8* null, i8** %414, align 8
  %427 = call i64 (i64, ...) @syscall(i64 13, i32 %416, %"struct.base::(anonymous namespace)::kernel_sigaction"* nonnull %4, %"struct.base::(anonymous namespace)::kernel_sigaction"* null, i64 8) #16
  %428 = trunc i64 %427 to i32
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %431, label %430

430:                                              ; preds = %426
  call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #16
  br label %431

431:                                              ; preds = %430, %426, %425, %425
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %412) #16
  %432 = add nuw nsw i32 %416, 1
  br label %415

433:                                              ; preds = %420
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %412) #16
  %434 = bitcast %struct.__sigset_t* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %434) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 -86, i64 128, i1 false) #16, !alias.scope !7
  %435 = call i32 @pthread_sigmask(i32 2, %struct.__sigset_t* nonnull %12, %struct.__sigset_t* nonnull %17) #16
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %438, label %437

437:                                              ; preds = %433
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.18, i64 0, i64 0)) #16
  br label %438

438:                                              ; preds = %433, %437
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %434) #16
  %439 = load i64, i64* %45, align 8
  %440 = load i64, i64* %47, align 8
  %441 = icmp eq i64 %439, %440
  br i1 %441, label %447, label %442

442:                                              ; preds = %438
  %443 = getelementptr inbounds [3 x i8], [3 x i8]* %18, i64 0, i64 0
  %444 = bitcast %"struct.base::InjectionArc"** %37 to i64*
  %445 = getelementptr inbounds [3 x i8], [3 x i8]* %19, i64 0, i64 0
  %446 = bitcast %"struct.base::InjectionArc"** %41 to i64*
  br label %450

447:                                              ; preds = %575, %438
  %448 = load i64, i64* %183, align 8
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %582, label %585

450:                                              ; preds = %442, %575
  %451 = phi i64 [ %440, %442 ], [ %578, %575 ]
  %452 = phi i64 [ 0, %442 ], [ %576, %575 ]
  %453 = inttoptr i64 %451 to %"struct.std::__1::pair"*
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %443)
  %454 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %453, i64 %452, i32 0
  %455 = load i32, i32* %454, align 4
  %456 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %453, i64 %452, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %37, align 8
  %459 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %38, align 8
  %460 = icmp ult %"struct.base::InjectionArc"* %458, %459
  %461 = ptrtoint %"struct.base::InjectionArc"* %459 to i64
  br i1 %460, label %462, label %469

462:                                              ; preds = %450
  %463 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %458, i64 0, i32 0
  store i32 %455, i32* %463, align 4
  %464 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %458, i64 0, i32 1
  store i32 %457, i32* %464, align 4
  %465 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %458, i64 0, i32 2
  store i8 0, i8* %465, align 4
  %466 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %458, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %466, i8* nonnull align 1 %443, i64 3, i1 false)
  %467 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %458, i64 1
  %468 = ptrtoint %"struct.base::InjectionArc"* %467 to i64
  store i64 %468, i64* %444, align 8
  br label %515

469:                                              ; preds = %450
  %470 = ptrtoint %"struct.base::InjectionArc"* %458 to i64
  %471 = load i64, i64* %52, align 8
  %472 = sub i64 %470, %471
  %473 = sdiv exact i64 %472, 12
  %474 = add nsw i64 %473, 1
  %475 = icmp ugt i64 %474, 1537228672809129301
  br i1 %475, label %476, label %478

476:                                              ; preds = %469
  %477 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %477) #18
  unreachable

478:                                              ; preds = %469
  %479 = sub i64 %461, %471
  %480 = sdiv exact i64 %479, 12
  %481 = icmp ult i64 %480, 768614336404564650
  br i1 %481, label %482, label %487

482:                                              ; preds = %478
  %483 = shl nsw i64 %480, 1
  %484 = icmp ult i64 %483, %474
  %485 = select i1 %484, i64 %474, i64 %483
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %492, label %487

487:                                              ; preds = %482, %478
  %488 = phi i64 [ %485, %482 ], [ 1537228672809129301, %478 ]
  %489 = mul i64 %488, 12
  %490 = call i8* @_Znwm(i64 %489) #19
  %491 = bitcast i8* %490 to %"struct.base::InjectionArc"*
  br label %492

492:                                              ; preds = %487, %482
  %493 = phi i64 [ %488, %487 ], [ 0, %482 ]
  %494 = phi %"struct.base::InjectionArc"* [ %491, %487 ], [ null, %482 ]
  %495 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %494, i64 %473
  %496 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %494, i64 %493
  %497 = ptrtoint %"struct.base::InjectionArc"* %496 to i64
  %498 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %495, i64 0, i32 0
  store i32 %455, i32* %498, align 4
  %499 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %494, i64 %473, i32 1
  store i32 %457, i32* %499, align 4
  %500 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %494, i64 %473, i32 2
  store i8 0, i8* %500, align 4
  %501 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %494, i64 %473, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %501, i8* nonnull align 1 %443, i64 3, i1 false)
  %502 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %495, i64 1
  %503 = ptrtoint %"struct.base::InjectionArc"* %502 to i64
  %504 = sdiv exact i64 %472, -12
  %505 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %495, i64 %504
  %506 = ptrtoint %"struct.base::InjectionArc"* %505 to i64
  %507 = icmp sgt i64 %472, 0
  br i1 %507, label %508, label %511

508:                                              ; preds = %492
  %509 = bitcast %"struct.base::InjectionArc"* %505 to i8*
  %510 = inttoptr i64 %471 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %509, i8* align 4 %510, i64 %472, i1 false) #16
  br label %511

511:                                              ; preds = %508, %492
  store i64 %506, i64* %52, align 8
  store i64 %503, i64* %444, align 8
  store i64 %497, i64* %51, align 8
  %512 = icmp eq i64 %471, 0
  br i1 %512, label %515, label %513

513:                                              ; preds = %511
  %514 = inttoptr i64 %471 to i8*
  call void @_ZdlPv(i8* %514) #19
  br label %515

515:                                              ; preds = %462, %511, %513
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %443)
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %445)
  %516 = load i32, i32* %454, align 4
  %517 = load i32, i32* %456, align 4
  %518 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %41, align 8
  %519 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %42, align 8
  %520 = icmp ult %"struct.base::InjectionArc"* %518, %519
  %521 = ptrtoint %"struct.base::InjectionArc"* %519 to i64
  br i1 %520, label %522, label %529

522:                                              ; preds = %515
  %523 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %518, i64 0, i32 0
  store i32 %516, i32* %523, align 4
  %524 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %518, i64 0, i32 1
  store i32 %517, i32* %524, align 4
  %525 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %518, i64 0, i32 2
  store i8 0, i8* %525, align 4
  %526 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %518, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %526, i8* nonnull align 1 %445, i64 3, i1 false)
  %527 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %518, i64 1
  %528 = ptrtoint %"struct.base::InjectionArc"* %527 to i64
  store i64 %528, i64* %446, align 8
  br label %575

529:                                              ; preds = %515
  %530 = ptrtoint %"struct.base::InjectionArc"* %518 to i64
  %531 = load i64, i64* %78, align 8
  %532 = sub i64 %530, %531
  %533 = sdiv exact i64 %532, 12
  %534 = add nsw i64 %533, 1
  %535 = icmp ugt i64 %534, 1537228672809129301
  br i1 %535, label %536, label %538

536:                                              ; preds = %529
  %537 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %537) #18
  unreachable

538:                                              ; preds = %529
  %539 = sub i64 %521, %531
  %540 = sdiv exact i64 %539, 12
  %541 = icmp ult i64 %540, 768614336404564650
  br i1 %541, label %542, label %547

542:                                              ; preds = %538
  %543 = shl nsw i64 %540, 1
  %544 = icmp ult i64 %543, %534
  %545 = select i1 %544, i64 %534, i64 %543
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %552, label %547

547:                                              ; preds = %542, %538
  %548 = phi i64 [ %545, %542 ], [ 1537228672809129301, %538 ]
  %549 = mul i64 %548, 12
  %550 = call i8* @_Znwm(i64 %549) #19
  %551 = bitcast i8* %550 to %"struct.base::InjectionArc"*
  br label %552

552:                                              ; preds = %547, %542
  %553 = phi i64 [ %548, %547 ], [ 0, %542 ]
  %554 = phi %"struct.base::InjectionArc"* [ %551, %547 ], [ null, %542 ]
  %555 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %554, i64 %533
  %556 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %554, i64 %553
  %557 = ptrtoint %"struct.base::InjectionArc"* %556 to i64
  %558 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %555, i64 0, i32 0
  store i32 %516, i32* %558, align 4
  %559 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %554, i64 %533, i32 1
  store i32 %517, i32* %559, align 4
  %560 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %554, i64 %533, i32 2
  store i8 0, i8* %560, align 4
  %561 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %554, i64 %533, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %561, i8* nonnull align 1 %445, i64 3, i1 false)
  %562 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %555, i64 1
  %563 = ptrtoint %"struct.base::InjectionArc"* %562 to i64
  %564 = sdiv exact i64 %532, -12
  %565 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %555, i64 %564
  %566 = ptrtoint %"struct.base::InjectionArc"* %565 to i64
  %567 = icmp sgt i64 %532, 0
  br i1 %567, label %568, label %571

568:                                              ; preds = %552
  %569 = bitcast %"struct.base::InjectionArc"* %565 to i8*
  %570 = inttoptr i64 %531 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %569, i8* align 4 %570, i64 %532, i1 false) #16
  br label %571

571:                                              ; preds = %568, %552
  store i64 %566, i64* %78, align 8
  store i64 %563, i64* %446, align 8
  store i64 %557, i64* %79, align 8
  %572 = icmp eq i64 %531, 0
  br i1 %572, label %575, label %573

573:                                              ; preds = %571
  %574 = inttoptr i64 %531 to i8*
  call void @_ZdlPv(i8* %574) #19
  br label %575

575:                                              ; preds = %522, %571, %573
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %445)
  %576 = add nuw i64 %452, 1
  %577 = load i64, i64* %45, align 8
  %578 = load i64, i64* %47, align 8
  %579 = sub i64 %577, %578
  %580 = ashr exact i64 %579, 3
  %581 = icmp ult i64 %576, %580
  br i1 %581, label %450, label %447

582:                                              ; preds = %447
  %583 = load i8, i8* %182, align 8, !range !3
  %584 = icmp eq i8 %583, 0
  br i1 %584, label %586, label %585

585:                                              ; preds = %582, %447
  store i8** %263, i8*** @environ, align 8
  br label %586

586:                                              ; preds = %582, %585
  %587 = bitcast %"class.base::FileDescriptorTableInjection"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #16
  %588 = getelementptr inbounds %"class.base::FileDescriptorTableInjection", %"class.base::FileDescriptorTableInjection"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base28FileDescriptorTableInjectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %588, align 8
  %589 = getelementptr inbounds %"class.base::FileDescriptorTableInjection", %"class.base::FileDescriptorTableInjection"* %5, i64 0, i32 0
  %590 = call zeroext i1 @_ZN4base35PerformInjectiveMultimapDestructiveEPNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEEPNS_17InjectionDelegateE(%"class.std::__1::vector"* nonnull %7, %"class.base::InjectionDelegate"* nonnull %589) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #16
  br i1 %590, label %592, label %591

591:                                              ; preds = %586
  call void @_exit(i32 127) #18
  unreachable

592:                                              ; preds = %586
  call void @_ZN4base19CloseSuperfluousFdsERKNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %8)
  %593 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 8
  %594 = load i8, i8* %593, align 8, !range !3
  %595 = icmp eq i8 %594, 0
  br i1 %595, label %596, label %603

596:                                              ; preds = %592
  %597 = call i32 (i32, ...) @prctl(i32 38, i32 1, i32 0, i32 0, i32 0) #16
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %603, label %599

599:                                              ; preds = %596
  %600 = load i32, i32* %421, align 4
  %601 = icmp eq i32 %600, 22
  br i1 %601, label %603, label %602

602:                                              ; preds = %599
  call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)) #16
  br label %603

603:                                              ; preds = %599, %596, %592, %602
  %604 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 9
  %605 = load i8, i8* %604, align 1, !range !3
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %611, label %607

607:                                              ; preds = %603
  %608 = call i32 (i32, ...) @prctl(i32 1, i32 9) #16
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %611, label %610

610:                                              ; preds = %607
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0)) #16
  call void @_exit(i32 127) #18
  unreachable

611:                                              ; preds = %607, %603
  %612 = icmp eq i8* %292, null
  br i1 %612, label %617, label %613

613:                                              ; preds = %611
  %614 = call i32 @chdir(i8* nonnull %292) #16
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %617, label %616

616:                                              ; preds = %613
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0)) #16
  br label %617

617:                                              ; preds = %611, %613, %616
  %618 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 12
  %619 = load %"class.base::LaunchOptions::PreExecDelegate"*, %"class.base::LaunchOptions::PreExecDelegate"** %618, align 8
  %620 = icmp eq %"class.base::LaunchOptions::PreExecDelegate"* %619, null
  br i1 %620, label %626, label %621

621:                                              ; preds = %617
  %622 = bitcast %"class.base::LaunchOptions::PreExecDelegate"* %619 to void (%"class.base::LaunchOptions::PreExecDelegate"*)***
  %623 = load void (%"class.base::LaunchOptions::PreExecDelegate"*)**, void (%"class.base::LaunchOptions::PreExecDelegate"*)*** %622, align 8
  %624 = getelementptr inbounds void (%"class.base::LaunchOptions::PreExecDelegate"*)*, void (%"class.base::LaunchOptions::PreExecDelegate"*)** %623, i64 2
  %625 = load void (%"class.base::LaunchOptions::PreExecDelegate"*)*, void (%"class.base::LaunchOptions::PreExecDelegate"*)** %624, align 8
  call void %625(%"class.base::LaunchOptions::PreExecDelegate"* nonnull %619) #16
  br label %626

626:                                              ; preds = %617, %621
  %627 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 11
  %628 = bitcast %"class.base::FilePath"* %627 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %629 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %628, i64 0, i32 1, i32 0
  %630 = load i8, i8* %629, align 1
  %631 = icmp slt i8 %630, 0
  br i1 %631, label %632, label %635

632:                                              ; preds = %626
  %633 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %634 = load i64, i64* %633, align 8
  br label %637

635:                                              ; preds = %626
  %636 = zext i8 %630 to i64
  br label %637

637:                                              ; preds = %632, %635
  %638 = phi i64 [ %634, %632 ], [ %636, %635 ]
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %646, label %640

640:                                              ; preds = %637
  br i1 %631, label %641, label %644

641:                                              ; preds = %640
  %642 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %627, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load i8*, i8** %642, align 8
  br label %649

644:                                              ; preds = %640
  %645 = bitcast %"class.base::FilePath"* %627 to i8*
  br label %649

646:                                              ; preds = %637
  %647 = load i8**, i8*** %81, align 8
  %648 = load i8*, i8** %647, align 8
  br label %649

649:                                              ; preds = %644, %641, %646
  %650 = phi i8* [ %648, %646 ], [ %643, %641 ], [ %645, %644 ]
  %651 = load i8**, i8*** %81, align 8
  %652 = call i32 @execvp(i8* %650, i8** %651) #16
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #16
  %653 = load i8**, i8*** %81, align 8
  %654 = load i8*, i8** %653, align 8
  call void @_ZN7logging6RawLogEiPKc(i32 2, i8* %654) #16
  call void @_exit(i32 127) #18
  unreachable

655:                                              ; preds = %340
  %656 = getelementptr inbounds %"struct.base::LaunchOptions", %"struct.base::LaunchOptions"* %2, i64 0, i32 0
  %657 = load i8, i8* %656, align 8, !range !3
  %658 = icmp eq i8 %657, 0
  br i1 %658, label %670, label %659

659:                                              ; preds = %655
  %660 = bitcast %"class.base::ScopedBlockingCall"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %660) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %660, i8 -86, i64 80, i1 false)
  %661 = bitcast %"class.base::Location"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %661) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0), i32 494) #16
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %20, %"class.base::Location"* nonnull dereferenceable(32) %21, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %661) #16
  br label %662

662:                                              ; preds = %665, %659
  %663 = call i32 @waitpid(i32 %322, i32* null, i32 0) #16
  %664 = icmp eq i32 %663, -1
  br i1 %664, label %665, label %669

665:                                              ; preds = %662
  %666 = tail call i32* @__errno_location() #17
  %667 = load i32, i32* %666, align 4
  %668 = icmp eq i32 %667, 4
  br i1 %668, label %662, label %669

669:                                              ; preds = %662, %665
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %660) #16
  br label %670

670:                                              ; preds = %669, %655, %340
  %671 = phi i32 [ 0, %340 ], [ %322, %655 ], [ %322, %669 ]
  call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 %671) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %266) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %264) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #16
  %672 = icmp eq i8** %263, null
  br i1 %672, label %675, label %673

673:                                              ; preds = %670
  %674 = bitcast i8** %263 to i8*
  call void @_ZdaPv(i8* %674) #19
  br label %675

675:                                              ; preds = %670, %673
  %676 = load i8**, i8*** %81, align 8
  %677 = icmp eq i8** %676, null
  br i1 %677, label %682, label %678

678:                                              ; preds = %675
  %679 = ptrtoint i8** %676 to i64
  %680 = bitcast i8*** %82 to i64*
  store i64 %679, i64* %680, align 8
  %681 = bitcast i8** %676 to i8*
  call void @_ZdlPv(i8* %681) #19
  br label %682

682:                                              ; preds = %675, %678
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #16
  %683 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %40, align 8
  %684 = icmp eq %"struct.base::InjectionArc"* %683, null
  br i1 %684, label %689, label %685

685:                                              ; preds = %682
  %686 = ptrtoint %"struct.base::InjectionArc"* %683 to i64
  %687 = bitcast %"struct.base::InjectionArc"** %41 to i64*
  store i64 %686, i64* %687, align 8
  %688 = bitcast %"struct.base::InjectionArc"* %683 to i8*
  call void @_ZdlPv(i8* %688) #19
  br label %689

689:                                              ; preds = %682, %685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #16
  %690 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %36, align 8
  %691 = icmp eq %"struct.base::InjectionArc"* %690, null
  br i1 %691, label %696, label %692

692:                                              ; preds = %689
  %693 = ptrtoint %"struct.base::InjectionArc"* %690 to i64
  %694 = bitcast %"struct.base::InjectionArc"** %37 to i64*
  store i64 %693, i64* %694, align 8
  %695 = bitcast %"struct.base::InjectionArc"* %690 to i8*
  call void @_ZdlPv(i8* %695) #19
  br label %696

696:                                              ; preds = %689, %692
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16
  %697 = icmp eq i8* %32, null
  br i1 %697, label %702, label %698

698:                                              ; preds = %696
  %699 = load i8, i8* %32, align 1
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %702, label %701

701:                                              ; preds = %698
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %32, i8* %33, i64 %34) #16
  br label %702

702:                                              ; preds = %696, %698, %701
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE9push_backEOS1_(%"class.std::__1::vector.41"*, i8** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp ult i8** %4, %6
  %8 = ptrtoint i8** %6 to i64
  br i1 %7, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast i8** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8** %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds i8*, i8** %4, i64 1
  %14 = ptrtoint i8** %13 to i64
  %15 = bitcast i8*** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %75

16:                                               ; preds = %2
  %17 = ptrtoint i8** %4 to i64
  %18 = bitcast i8*** %3 to i64*
  %19 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #18
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i8*** %5 to i64*
  %29 = sub i64 %8, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #18
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #19
  %44 = bitcast i8* %43 to i8**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i8** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i8*, i8** %47, i64 %22
  %49 = getelementptr inbounds i8*, i8** %47, i64 %46
  %50 = ptrtoint i8** %49 to i64
  %51 = bitcast i8** %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8** %48 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds i8*, i8** %48, i64 1
  %55 = ptrtoint i8** %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 0
  %57 = load i8**, i8*** %56, align 8
  %58 = load i64, i64* %18, align 8
  %59 = ptrtoint i8** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds i8*, i8** %48, i64 %62
  %64 = ptrtoint i8** %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %45
  %67 = bitcast i8** %63 to i8*
  %68 = bitcast i8** %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #16
  %69 = load i8**, i8*** %56, align 8
  br label %70

70:                                               ; preds = %66, %45
  %71 = phi i8** [ %57, %45 ], [ %69, %66 ]
  store i64 %64, i64* %19, align 8
  store i64 %55, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %72 = icmp eq i8** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast i8** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #19
  br label %75

75:                                               ; preds = %73, %70, %9
  ret void
}

declare i8** @_ZN4base8internal16AlterEnvironmentEPKPKcRKNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESC_NS5_4lessISC_EENSA_INS5_4pairIKSC_SC_EEEEEE(i8**, %"class.std::__1::map.28"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) local_unnamed_addr #6

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base13ForkWithFlagsEmPiS0_(i64, i32*, i32*) local_unnamed_addr #0 {
  %4 = alloca [1 x %struct.__jmp_buf_tag], align 16
  %5 = and i64 %0, 524288
  %6 = icmp ne i64 %5, 0
  %7 = and i64 %0, 18874368
  %8 = icmp ne i64 %7, 0
  %9 = icmp eq i32* %2, null
  %10 = and i1 %8, %9
  %11 = and i64 %0, 1048576
  %12 = icmp ne i64 %11, 0
  %13 = icmp eq i32* %1, null
  %14 = and i1 %13, %12
  %15 = and i64 %0, 256
  %16 = icmp ne i64 %15, 0
  %17 = or i1 %6, %10
  %18 = or i1 %14, %17
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %3
  call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #16
  br label %21

21:                                               ; preds = %3, %20
  %22 = bitcast [1 x %struct.__jmp_buf_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %22) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 200, i1 false)
  %23 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %4, i64 0, i64 0
  %24 = call i32 @_setjmp(%struct.__jmp_buf_tag* nonnull %23) #20
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = call fastcc i32 @_ZN4base12_GLOBAL__N_122CloneAndLongjmpInChildEmPiS1_PA1_13__jmp_buf_tag(i64 %0, i32* %1, i32* %2, [1 x %struct.__jmp_buf_tag]* nonnull %4)
  br label %29

28:                                               ; preds = %21
  call void @_ZN4base8internal13ClearTidCacheEv() #16
  br label %29

29:                                               ; preds = %28, %26
  %30 = phi i32 [ %27, %26 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %22) #16
  ret i32 %30
}

; Function Attrs: nofree nounwind
declare i32 @fork() local_unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base7ProcessC1Ei(%"class.base::Process"*, i32) unnamed_addr #2

declare void @_ZN4base6subtle16ResetFDOwnershipEv() local_unnamed_addr #2

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #7

declare void @_ZN7logging6RawLogEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_exit(i32) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #16
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0), i64 44) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #16
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #16
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind
declare i32 @setpgid(i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @getrlimit64(i32, %struct.rlimit*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @setrlimit64(i32, %struct.rlimit*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @prctl(i32, ...) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @chdir(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @execvp(i8*, i8**) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

declare i32 @waitpid(i32, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base26RaiseProcessToHighPriorityEv() local_unnamed_addr #9 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base12GetAppOutputERKNS_11CommandLineEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::CommandLine"* nocapture readonly dereferenceable(56), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %0, i64 0, i32 0
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #16
  store i32 -1431655766, i32* %3, align 4
  %6 = call fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* dereferenceable(24) %4, i1 zeroext false, %"class.std::__1::basic_string"* %1, i32* nonnull %3) #16
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 0
  %9 = and i1 %6, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #16
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base12GetAppOutputERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPS7_(%"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %3, align 4
  %5 = call fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* dereferenceable(24) %0, i1 zeroext false, %"class.std::__1::basic_string"* %1, i32* nonnull %3)
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  %8 = and i1 %5, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"*, i32*) unnamed_addr #0 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::FileDescriptorTableInjection", align 8
  %7 = alloca %"class.std::__1::vector.41", align 16
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [2 x i32], align 4
  %11 = alloca [3 x i8], align 1
  %12 = alloca [3 x i8], align 1
  %13 = alloca [3 x i8], align 1
  %14 = alloca i8*, align 8
  %15 = alloca [256 x i8], align 16
  %16 = alloca %"class.base::Process", align 4
  store i32 1, i32* %3, align 4
  %17 = bitcast %"class.std::__1::vector.41"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %7, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %7, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 24, i1 false) #16
  %21 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 24
  %28 = add nsw i64 %27, 1
  %29 = bitcast i8*** %20 to i64*
  %30 = bitcast %"class.std::__1::vector.41"* %7 to i64*
  %31 = icmp eq i64 %28, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %4
  %33 = icmp ugt i64 %28, 2305843009213693951
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  tail call void @abort() #18
  unreachable

35:                                               ; preds = %32
  %36 = shl nsw i64 %28, 3
  %37 = tail call i8* @_Znwm(i64 %36) #19
  %38 = bitcast i8* %37 to i8**
  %39 = getelementptr inbounds i8*, i8** %38, i64 %28
  %40 = ptrtoint i8** %39 to i64
  %41 = insertelement <2 x i8*> undef, i8* %37, i32 0
  %42 = shufflevector <2 x i8*> %41, <2 x i8*> undef, <2 x i32> zeroinitializer
  %43 = ptrtoint <2 x i8*> %42 to <2 x i64>
  %44 = bitcast %"class.std::__1::vector.41"* %7 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 16
  store i64 %40, i64* %29, align 16
  br label %45

45:                                               ; preds = %35, %4
  %46 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #16
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"struct.base::InjectionArc"** %49 to i64*
  %55 = bitcast %"class.std::__1::vector"* %8 to i64*
  %56 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  %57 = tail call i8* @_Znwm(i64 36) #19
  %58 = ptrtoint i8* %57 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 36
  %60 = ptrtoint i8* %59 to i64
  store i64 %58, i64* %55, align 8
  store i64 %58, i64* %56, align 8
  store i64 %60, i64* %54, align 8
  %61 = bitcast %"struct.base::InjectionArc"** %53 to i64*
  %62 = bitcast %"class.std::__1::vector"* %9 to i64*
  %63 = bitcast %"struct.base::InjectionArc"** %52 to i64*
  %64 = tail call i8* @_Znwm(i64 36) #19
  %65 = ptrtoint i8* %64 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 36
  %67 = ptrtoint i8* %66 to i64
  store i64 %65, i64* %62, align 8
  store i64 %65, i64* %63, align 8
  store i64 %67, i64* %61, align 8
  %68 = bitcast [2 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #16
  %69 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 1
  store i32 -1431655766, i32* %70, align 4
  %71 = call i32 @pipe(i32* nonnull %69) #16
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %385, label %73

73:                                               ; preds = %45
  %74 = call i32 @fork() #16
  switch i32 %74, label %333 [
    i32 -1, label %75
    i32 0, label %80
  ]

75:                                               ; preds = %73
  %76 = load i32, i32* %69, align 4
  %77 = call i32 @close(i32 %76) #16
  %78 = load i32, i32* %70, align 4
  %79 = call i32 @close(i32 %78) #16
  br label %385

80:                                               ; preds = %73
  call void @_ZN4base6subtle16ResetFDOwnershipEv() #16
  %81 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 1) #16
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_exit(i32 127) #18
  unreachable

84:                                               ; preds = %80
  %85 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %85)
  %86 = load i32, i32* %70, align 4
  %87 = bitcast i8* %57 to i32*
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %57, i64 4
  %89 = bitcast i8* %88 to i32*
  store i32 1, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %57, i64 8
  store i8 1, i8* %90, align 4
  %91 = getelementptr inbounds i8, i8* %57, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* nonnull align 1 %85, i64 3, i1 false)
  %92 = getelementptr inbounds i8, i8* %57, i64 12
  %93 = ptrtoint i8* %92 to i64
  %94 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  store i64 %93, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %85)
  %95 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %95)
  %96 = select i1 %1, i32 %86, i32 %81
  %97 = bitcast i8* %92 to i32*
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %57, i64 16
  %99 = bitcast i8* %98 to i32*
  store i32 2, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %57, i64 20
  store i8 1, i8* %100, align 4
  %101 = getelementptr inbounds i8, i8* %57, i64 21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* nonnull align 1 %95, i64 3, i1 false)
  %102 = getelementptr inbounds i8, i8* %57, i64 24
  %103 = bitcast i8* %102 to %"struct.base::InjectionArc"*
  %104 = ptrtoint i8* %102 to i64
  %105 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  store i64 %104, i64* %105, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %95)
  %106 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %106)
  %107 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %49, align 8
  %108 = icmp ugt %"struct.base::InjectionArc"* %107, %103
  %109 = ptrtoint %"struct.base::InjectionArc"* %107 to i64
  br i1 %108, label %110, label %119

110:                                              ; preds = %84
  %111 = bitcast i8* %102 to i32*
  store i32 %81, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %57, i64 28
  %113 = bitcast i8* %112 to i32*
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds i8, i8* %57, i64 32
  store i8 1, i8* %114, align 4
  %115 = getelementptr inbounds i8, i8* %57, i64 33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* nonnull align 1 %106, i64 3, i1 false)
  %116 = getelementptr inbounds i8, i8* %57, i64 36
  %117 = ptrtoint i8* %116 to i64
  %118 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  store i64 %117, i64* %118, align 8
  br label %168

119:                                              ; preds = %84
  %120 = ptrtoint i8* %102 to i64
  %121 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  %122 = load i64, i64* %55, align 8
  %123 = sub i64 %120, %122
  %124 = sdiv exact i64 %123, 12
  %125 = add nsw i64 %124, 1
  %126 = icmp ugt i64 %125, 1537228672809129301
  br i1 %126, label %127, label %129

127:                                              ; preds = %119
  %128 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %128) #18
  unreachable

129:                                              ; preds = %119
  %130 = sub i64 %109, %122
  %131 = sdiv exact i64 %130, 12
  %132 = icmp ult i64 %131, 768614336404564650
  br i1 %132, label %133, label %138

133:                                              ; preds = %129
  %134 = shl nsw i64 %131, 1
  %135 = icmp ult i64 %134, %125
  %136 = select i1 %135, i64 %125, i64 %134
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %133, %129
  %139 = phi i64 [ %136, %133 ], [ 1537228672809129301, %129 ]
  %140 = mul i64 %139, 12
  %141 = call i8* @_Znwm(i64 %140) #19
  %142 = bitcast i8* %141 to %"struct.base::InjectionArc"*
  br label %143

143:                                              ; preds = %138, %133
  %144 = phi i64 [ %139, %138 ], [ 0, %133 ]
  %145 = phi %"struct.base::InjectionArc"* [ %142, %138 ], [ null, %133 ]
  %146 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %145, i64 %124
  %147 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %145, i64 %144
  %148 = ptrtoint %"struct.base::InjectionArc"* %147 to i64
  %149 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %146, i64 0, i32 0
  store i32 %81, i32* %149, align 4
  %150 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %145, i64 %124, i32 1
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %145, i64 %124, i32 2
  store i8 1, i8* %151, align 4
  %152 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %145, i64 %124, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %152, i8* nonnull align 1 %106, i64 3, i1 false)
  %153 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %146, i64 1
  %154 = ptrtoint %"struct.base::InjectionArc"* %153 to i64
  %155 = sub i64 %104, %122
  %156 = sdiv exact i64 %155, -12
  %157 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %146, i64 %156
  %158 = ptrtoint %"struct.base::InjectionArc"* %157 to i64
  %159 = icmp sgt i64 %155, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %143
  %161 = bitcast %"struct.base::InjectionArc"* %157 to i8*
  %162 = inttoptr i64 %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %155, i1 false) #16
  br label %163

163:                                              ; preds = %160, %143
  store i64 %158, i64* %55, align 8
  store i64 %154, i64* %121, align 8
  store i64 %148, i64* %54, align 8
  %164 = icmp eq i64 %122, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %122 to i8*
  call void @_ZdlPv(i8* %166) #19
  %167 = load i64, i64* %121, align 8
  br label %168

168:                                              ; preds = %110, %163, %165
  %169 = phi i64* [ %118, %110 ], [ %121, %163 ], [ %121, %165 ]
  %170 = phi i64 [ %117, %110 ], [ %154, %163 ], [ %167, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %106)
  %171 = load i64, i64* %55, align 8
  %172 = icmp eq i64 %170, %171
  br i1 %172, label %175, label %173

173:                                              ; preds = %168
  %174 = bitcast %"struct.base::InjectionArc"** %52 to i64*
  br label %180

175:                                              ; preds = %238, %168
  %176 = bitcast %"class.base::FileDescriptorTableInjection"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #16
  %177 = getelementptr inbounds %"class.base::FileDescriptorTableInjection", %"class.base::FileDescriptorTableInjection"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base28FileDescriptorTableInjectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8
  %178 = getelementptr inbounds %"class.base::FileDescriptorTableInjection", %"class.base::FileDescriptorTableInjection"* %6, i64 0, i32 0
  %179 = call zeroext i1 @_ZN4base35PerformInjectiveMultimapDestructiveEPNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEEPNS_17InjectionDelegateE(%"class.std::__1::vector"* nonnull %8, %"class.base::InjectionDelegate"* nonnull %178) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #16
  br i1 %179, label %246, label %245

180:                                              ; preds = %173, %238
  %181 = phi i64 [ %171, %173 ], [ %241, %238 ]
  %182 = phi i64 [ 0, %173 ], [ %239, %238 ]
  %183 = inttoptr i64 %181 to %"struct.base::InjectionArc"*
  %184 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %183, i64 %182
  %185 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %52, align 8
  %186 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %53, align 8
  %187 = icmp eq %"struct.base::InjectionArc"* %185, %186
  %188 = ptrtoint %"struct.base::InjectionArc"* %186 to i64
  br i1 %187, label %194, label %189

189:                                              ; preds = %180
  %190 = bitcast %"struct.base::InjectionArc"* %185 to i8*
  %191 = bitcast %"struct.base::InjectionArc"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %190, i8* align 4 %191, i64 12, i1 false) #16
  %192 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %185, i64 1
  %193 = ptrtoint %"struct.base::InjectionArc"* %192 to i64
  store i64 %193, i64* %174, align 8
  br label %238

194:                                              ; preds = %180
  %195 = ptrtoint %"struct.base::InjectionArc"* %185 to i64
  %196 = load i64, i64* %62, align 8
  %197 = sub i64 %195, %196
  %198 = sdiv exact i64 %197, 12
  %199 = add nsw i64 %198, 1
  %200 = icmp ugt i64 %199, 1537228672809129301
  br i1 %200, label %201, label %203

201:                                              ; preds = %194
  %202 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %202) #18
  unreachable

203:                                              ; preds = %194
  %204 = sub i64 %188, %196
  %205 = sdiv exact i64 %204, 12
  %206 = icmp ult i64 %205, 768614336404564650
  br i1 %206, label %207, label %212

207:                                              ; preds = %203
  %208 = shl nsw i64 %205, 1
  %209 = icmp ult i64 %208, %199
  %210 = select i1 %209, i64 %199, i64 %208
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %217, label %212

212:                                              ; preds = %207, %203
  %213 = phi i64 [ %210, %207 ], [ 1537228672809129301, %203 ]
  %214 = mul i64 %213, 12
  %215 = call i8* @_Znwm(i64 %214) #19
  %216 = bitcast i8* %215 to %"struct.base::InjectionArc"*
  br label %217

217:                                              ; preds = %212, %207
  %218 = phi i64 [ %213, %212 ], [ 0, %207 ]
  %219 = phi %"struct.base::InjectionArc"* [ %216, %212 ], [ null, %207 ]
  %220 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %219, i64 %198
  %221 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %219, i64 %218
  %222 = ptrtoint %"struct.base::InjectionArc"* %221 to i64
  %223 = bitcast %"struct.base::InjectionArc"* %220 to i8*
  %224 = bitcast %"struct.base::InjectionArc"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %223, i8* align 4 %224, i64 12, i1 false) #16
  %225 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %220, i64 1
  %226 = ptrtoint %"struct.base::InjectionArc"* %225 to i64
  %227 = sdiv exact i64 %197, -12
  %228 = getelementptr inbounds %"struct.base::InjectionArc", %"struct.base::InjectionArc"* %220, i64 %227
  %229 = ptrtoint %"struct.base::InjectionArc"* %228 to i64
  %230 = icmp sgt i64 %197, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %217
  %232 = bitcast %"struct.base::InjectionArc"* %228 to i8*
  %233 = inttoptr i64 %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 %197, i1 false) #16
  br label %234

234:                                              ; preds = %231, %217
  store i64 %229, i64* %62, align 8
  store i64 %226, i64* %174, align 8
  store i64 %222, i64* %61, align 8
  %235 = icmp eq i64 %196, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %234
  %237 = inttoptr i64 %196 to i8*
  call void @_ZdlPv(i8* %237) #19
  br label %238

238:                                              ; preds = %189, %234, %236
  %239 = add nuw i64 %182, 1
  %240 = load i64, i64* %169, align 8
  %241 = load i64, i64* %55, align 8
  %242 = sub i64 %240, %241
  %243 = sdiv exact i64 %242, 12
  %244 = icmp ult i64 %239, %243
  br i1 %244, label %180, label %175

245:                                              ; preds = %175
  call void @_exit(i32 127) #18
  unreachable

246:                                              ; preds = %175
  call void @_ZN4base19CloseSuperfluousFdsERKNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %9)
  %247 = load i64, i64* %22, align 8
  %248 = load i64, i64* %24, align 8
  %249 = icmp eq i64 %247, %248
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = bitcast i8*** %19 to i64*
  br label %257

252:                                              ; preds = %326, %246
  %253 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #16
  store i8* null, i8** %14, align 8
  call void @_ZNSt3__16vectorIPcNS_9allocatorIS1_EEE9push_backEOS1_(%"class.std::__1::vector.41"* nonnull %7, i8** nonnull dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #16
  %254 = load i8**, i8*** %18, align 16
  %255 = load i8*, i8** %254, align 8
  %256 = call i32 @execvp(i8* %255, i8** %254) #16
  call void @_exit(i32 127) #18
  unreachable

257:                                              ; preds = %250, %326
  %258 = phi i64 [ %248, %250 ], [ %329, %326 ]
  %259 = phi i64 [ 0, %250 ], [ %327, %326 ]
  %260 = inttoptr i64 %258 to %"class.std::__1::basic_string"*
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %260, i64 %259
  %262 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %257
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  br label %271

269:                                              ; preds = %257
  %270 = bitcast %"class.std::__1::basic_string"* %261 to i8*
  br label %271

271:                                              ; preds = %266, %269
  %272 = phi i8* [ %268, %266 ], [ %270, %269 ]
  %273 = ptrtoint i8* %272 to i64
  %274 = load i8**, i8*** %19, align 8
  %275 = load i8**, i8*** %20, align 16
  %276 = icmp ult i8** %274, %275
  %277 = ptrtoint i8** %275 to i64
  br i1 %276, label %278, label %282

278:                                              ; preds = %271
  %279 = bitcast i8** %274 to i64*
  store i64 %273, i64* %279, align 8
  %280 = getelementptr inbounds i8*, i8** %274, i64 1
  %281 = ptrtoint i8** %280 to i64
  store i64 %281, i64* %251, align 8
  br label %326

282:                                              ; preds = %271
  %283 = ptrtoint i8** %274 to i64
  %284 = load i64, i64* %30, align 16
  %285 = sub i64 %283, %284
  %286 = ashr exact i64 %285, 3
  %287 = add nsw i64 %286, 1
  %288 = icmp ugt i64 %287, 2305843009213693951
  br i1 %288, label %289, label %291

289:                                              ; preds = %282
  %290 = bitcast %"class.std::__1::vector.41"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %290) #18
  unreachable

291:                                              ; preds = %282
  %292 = sub i64 %277, %284
  %293 = ashr exact i64 %292, 3
  %294 = icmp ult i64 %293, 1152921504606846975
  br i1 %294, label %295, label %303

295:                                              ; preds = %291
  %296 = ashr exact i64 %292, 2
  %297 = icmp ult i64 %296, %287
  %298 = select i1 %297, i64 %287, i64 %296
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %308, label %300

300:                                              ; preds = %295
  %301 = icmp ugt i64 %298, 2305843009213693951
  br i1 %301, label %302, label %303

302:                                              ; preds = %300
  call void @abort() #18
  unreachable

303:                                              ; preds = %300, %291
  %304 = phi i64 [ %298, %300 ], [ 2305843009213693951, %291 ]
  %305 = shl i64 %304, 3
  %306 = call i8* @_Znwm(i64 %305) #19
  %307 = bitcast i8* %306 to i8**
  br label %308

308:                                              ; preds = %303, %295
  %309 = phi i64 [ %304, %303 ], [ 0, %295 ]
  %310 = phi i8* [ %306, %303 ], [ null, %295 ]
  %311 = phi i8** [ %307, %303 ], [ null, %295 ]
  %312 = getelementptr inbounds i8*, i8** %311, i64 %286
  %313 = getelementptr inbounds i8*, i8** %311, i64 %309
  %314 = ptrtoint i8** %313 to i64
  %315 = bitcast i8** %312 to i64*
  store i64 %273, i64* %315, align 8
  %316 = getelementptr inbounds i8*, i8** %312, i64 1
  %317 = ptrtoint i8** %316 to i64
  %318 = ptrtoint i8** %311 to i64
  %319 = icmp sgt i64 %285, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %308
  %321 = inttoptr i64 %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %321, i64 %285, i1 false) #16
  br label %322

322:                                              ; preds = %320, %308
  store i64 %318, i64* %30, align 16
  store i64 %317, i64* %251, align 8
  store i64 %314, i64* %29, align 16
  %323 = icmp eq i64 %284, 0
  br i1 %323, label %326, label %324

324:                                              ; preds = %322
  %325 = inttoptr i64 %284 to i8*
  call void @_ZdlPv(i8* %325) #19
  br label %326

326:                                              ; preds = %278, %322, %324
  %327 = add nuw i64 %259, 1
  %328 = load i64, i64* %22, align 8
  %329 = load i64, i64* %24, align 8
  %330 = sub i64 %328, %329
  %331 = sdiv exact i64 %330, 24
  %332 = icmp ult i64 %327, %331
  br i1 %332, label %257, label %252

333:                                              ; preds = %73
  %334 = load i32, i32* %70, align 4
  %335 = call i32 @close(i32 %334) #16
  %336 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), align 16
  %337 = and i8 %336, 25
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %345, label %339, !prof !2

339:                                              ; preds = %333
  %340 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %341 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #16
  %342 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %343 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %343, i64* %342, align 8
  %344 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %340, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #16
  br label %345

345:                                              ; preds = %333, %339
  %346 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %333 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), %339 ]
  %347 = phi i8* [ null, %333 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 8, i32 0), %339 ]
  %348 = phi i64 [ -6148914691236517206, %333 ], [ %344, %339 ]
  %349 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  %351 = load i8, i8* %350, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %353, label %357

353:                                              ; preds = %345
  %354 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load i8*, i8** %354, align 8
  store i8 0, i8* %355, align 1
  %356 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %356, align 8
  br label %359

357:                                              ; preds = %345
  %358 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %358, align 1
  store i8 0, i8* %350, align 1
  br label %359

359:                                              ; preds = %353, %357
  %360 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  br label %361

361:                                              ; preds = %372, %359
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %360) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %360, i8 -86, i64 256, i1 false)
  br label %362

362:                                              ; preds = %366, %361
  %363 = load i32, i32* %69, align 4
  %364 = call i64 @read(i32 %363, i8* nonnull %360, i64 256) #16
  %365 = icmp eq i64 %364, -1
  br i1 %365, label %366, label %370

366:                                              ; preds = %362
  %367 = tail call i32* @__errno_location() #17
  %368 = load i32, i32* %367, align 4
  %369 = icmp eq i32 %368, 4
  br i1 %369, label %362, label %374

370:                                              ; preds = %362
  %371 = icmp slt i64 %364, 1
  br i1 %371, label %374, label %372

372:                                              ; preds = %370
  %373 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %2, i8* nonnull %360, i64 %364) #16
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %360) #16
  br label %361

374:                                              ; preds = %370, %366
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %360) #16
  %375 = load i32, i32* %69, align 4
  %376 = call i32 @close(i32 %375) #16
  %377 = bitcast %"class.base::Process"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %377) #16
  %378 = getelementptr inbounds %"class.base::Process", %"class.base::Process"* %16, i64 0, i32 0
  store i32 -1431655766, i32* %378, align 4
  call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* nonnull %16, i32 %74) #16
  %379 = call zeroext i1 @_ZNK4base7Process11WaitForExitEPi(%"class.base::Process"* nonnull %16, i32* %3) #16
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %377) #16
  %380 = icmp eq i8* %347, null
  br i1 %380, label %385, label %381

381:                                              ; preds = %374
  %382 = load i8, i8* %347, align 1
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %385, label %384

384:                                              ; preds = %381
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %347, i8* %346, i64 %348) #16
  br label %385

385:                                              ; preds = %384, %381, %374, %75, %45
  %386 = phi i1 [ false, %45 ], [ false, %75 ], [ %379, %374 ], [ %379, %381 ], [ %379, %384 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #16
  %387 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %51, align 8
  %388 = icmp eq %"struct.base::InjectionArc"* %387, null
  br i1 %388, label %393, label %389

389:                                              ; preds = %385
  %390 = ptrtoint %"struct.base::InjectionArc"* %387 to i64
  %391 = bitcast %"struct.base::InjectionArc"** %52 to i64*
  store i64 %390, i64* %391, align 8
  %392 = bitcast %"struct.base::InjectionArc"* %387 to i8*
  call void @_ZdlPv(i8* %392) #19
  br label %393

393:                                              ; preds = %385, %389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #16
  %394 = load %"struct.base::InjectionArc"*, %"struct.base::InjectionArc"** %47, align 8
  %395 = icmp eq %"struct.base::InjectionArc"* %394, null
  br i1 %395, label %400, label %396

396:                                              ; preds = %393
  %397 = ptrtoint %"struct.base::InjectionArc"* %394 to i64
  %398 = bitcast %"struct.base::InjectionArc"** %48 to i64*
  store i64 %397, i64* %398, align 8
  %399 = bitcast %"struct.base::InjectionArc"* %394 to i8*
  call void @_ZdlPv(i8* %399) #19
  br label %400

400:                                              ; preds = %393, %396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #16
  %401 = load i8**, i8*** %18, align 16
  %402 = icmp eq i8** %401, null
  br i1 %402, label %407, label %403

403:                                              ; preds = %400
  %404 = ptrtoint i8** %401 to i64
  %405 = bitcast i8*** %19 to i64*
  store i64 %404, i64* %405, align 8
  %406 = bitcast i8** %401 to i8*
  call void @_ZdlPv(i8* %406) #19
  br label %407

407:                                              ; preds = %400, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #16
  ret i1 %386
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20GetAppOutputAndErrorERKNS_11CommandLineEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::CommandLine"* nocapture readonly dereferenceable(56), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %0, i64 0, i32 0
  %6 = call fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* dereferenceable(24) %5, i1 zeroext true, %"class.std::__1::basic_string"* %1, i32* nonnull %3)
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 0
  %9 = and i1 %6, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20GetAppOutputAndErrorERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPS7_(%"class.std::__1::vector.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %3, align 4
  %5 = call fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* dereferenceable(24) %0, i1 zeroext true, %"class.std::__1::basic_string"* %1, i32* nonnull %3)
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  %8 = and i1 %5, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base24GetAppOutputWithExitCodeERKNS_11CommandLineEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPi(%"class.base::CommandLine"* nocapture readonly dereferenceable(56), %"class.std::__1::basic_string"*, i32*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %0, i64 0, i32 0
  %5 = tail call fastcc zeroext i1 @_ZN4baseL20GetAppOutputInternalERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPKPcbPS7_bPi(%"class.std::__1::vector.1"* dereferenceable(24) %4, i1 zeroext false, %"class.std::__1::basic_string"* %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #10

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i32 @_ZN4base12_GLOBAL__N_122CloneAndLongjmpInChildEmPiS1_PA1_13__jmp_buf_tag(i64, i32*, i32*, [1 x %struct.__jmp_buf_tag]*) unnamed_addr #11 {
  %5 = alloca [16384 x i8], align 16
  %6 = getelementptr inbounds [16384 x i8], [16384 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 16384, i1 false)
  %7 = getelementptr inbounds [16384 x i8], [16384 x i8]* %5, i64 0, i64 16384
  %8 = trunc i64 %0 to i32
  %9 = bitcast [1 x %struct.__jmp_buf_tag]* %3 to i8*
  %10 = call i32 (i32 (i8*)*, i8*, i32, i8*, ...) @clone(i32 (i8*)* nonnull @_ZN4base12_GLOBAL__N_111CloneHelperEPv, i8* %7, i32 %8, i8* %9, i32* %1, i8* null, i32* %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %6) #16
  ret i32 %10
}

declare void @_ZN4base8internal13ClearTidCacheEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @syscall(i64, ...) local_unnamed_addr #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_sigmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) local_unnamed_addr #6

declare zeroext i1 @_ZN4base35PerformInjectiveMultimapDestructiveEPNSt3__16vectorINS_12InjectionArcENS0_9allocatorIS2_EEEEPNS_17InjectionDelegateE(%"class.std::__1::vector"*, %"class.base::InjectionDelegate"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pipe(i32*) local_unnamed_addr #6

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base7Process11WaitForExitEPi(%"class.base::Process"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @clone(i32 (i8*)*, i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: noreturn nounwind ssp uwtable
define internal i32 @_ZN4base12_GLOBAL__N_111CloneHelperEPv(i8*) #15 {
  %2 = bitcast i8* %0 to %struct.__jmp_buf_tag*
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %2, i32 1) #18
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @__longjmp_chk(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #16
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #19
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #2

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nounwind readnone }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4base12_GLOBAL__N_113SetSignalMaskERK10__sigset_t: argument 0"}
!6 = distinct !{!6, !"_ZN4base12_GLOBAL__N_113SetSignalMaskERK10__sigset_t"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4base12_GLOBAL__N_113SetSignalMaskERK10__sigset_t: argument 0"}
!9 = distinct !{!9, !"_ZN4base12_GLOBAL__N_113SetSignalMaskERK10__sigset_t"}
