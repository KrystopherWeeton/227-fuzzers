; ModuleID = '../../third_party/abseil-cpp/absl/types/bad_variant_access.cc'
source_filename = "../../third_party/abseil-cpp/absl/types/bad_variant_access.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.absl::bad_variant_access" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }

@.str = private unnamed_addr constant [19 x i8] c"Bad variant access\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/abseil-cpp/absl/types/bad_variant_access.cc\00", align 1
@.str.2 = private unnamed_addr constant [122 x i8] c"Internal error in absl::variant implementation. Attempted to rethrow an exception when building with exceptions disabled.\00", align 1
@_ZTVN4absl18bad_variant_accessE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::bad_variant_access"*)* @_ZN4absl18bad_variant_accessD2Ev to i8*), i8* bitcast (void (%"class.absl::bad_variant_access"*)* @_ZN4absl18bad_variant_accessD0Ev to i8*), i8* bitcast (i8* (%"class.absl::bad_variant_access"*)* @_ZNK4absl18bad_variant_access4whatEv to i8*)] }, align 8

@_ZN4absl18bad_variant_accessD1Ev = hidden unnamed_addr alias void (%"class.absl::bad_variant_access"*), void (%"class.absl::bad_variant_access"*)* @_ZN4absl18bad_variant_accessD2Ev

; Function Attrs: nounwind
declare void @_ZNSt9exceptionD2Ev(%"class.std::exception"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18bad_variant_accessD2Ev(%"class.absl::bad_variant_access"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.absl::bad_variant_access", %"class.absl::bad_variant_access"* %0, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl18bad_variant_accessD0Ev(%"class.absl::bad_variant_access"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.absl::bad_variant_access", %"class.absl::bad_variant_access"* %0, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %2) #7
  %3 = bitcast %"class.absl::bad_variant_access"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK4absl18bad_variant_access4whatEv(%"class.absl::bad_variant_access"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #4 {
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 40), i32 44, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #7
  tail call void @abort() #9
  unreachable
}

declare void @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4absl16variant_internal7RethrowEv() local_unnamed_addr #4 {
  tail call void (i32, i8*, i32, i8*, ...) @_ZN4absl20raw_logging_internal6RawLogENS_11LogSeverityEPKciS3_z(i32 3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 40), i32 55, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.2, i64 0, i64 0)) #7
  tail call void @abort() #9
  unreachable
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
