; ModuleID = '../../ui/gl/gl_image_shared_memory.cc'
source_filename = "../../ui/gl/gl_image_shared_memory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLImageSharedMemory" = type <{ %"class.gl::GLImageMemory.base", [4 x i8], %"class.base::WritableSharedMemoryMapping", %"class.gfx::GenericSharedMemoryId", [4 x i8] }>
%"class.gl::GLImageMemory.base" = type <{ %"class.gl::GLImage", %"class.gfx::Size", i8*, i32, [4 x i8], i64, i32, [4 x i8], %"class.base::WeakPtr", %"class.base::WeakPtr.6", i64, i32 }>
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::WeakPtr.6" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.gl::GLImageMemory" = type <{ %"class.gl::GLImage", %"class.gfx::Size", i8*, i32, [4 x i8], i64, i32, [4 x i8], %"class.base::WeakPtr", %"class.base::WeakPtr.6", i64, i32, [4 x i8] }>
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.11", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::map.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.29 }
%union.anon.29 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.30" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }

$_ZN2gl13GLImageMemory15ReleaseTexImageEj = comdat any

$_ZN2gl13GLImageMemory5FlushEv = comdat any

@_ZTVN2gl19GLImageSharedMemoryE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl13GLImageMemory15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (void ()* @_ZN2gl13GLImageMemory20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImageSharedMemory"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl19GLImageSharedMemory12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZNK2gl13GLImageMemory7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (void ()* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageSharedMemory"*)* @_ZN2gl19GLImageSharedMemoryD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageSharedMemory"*)* @_ZN2gl19GLImageSharedMemoryD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"/shared_memory\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1

@_ZN2gl19GLImageSharedMemoryC1ERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.gl::GLImageSharedMemory"*, %"class.gfx::Size"*), void (%"class.gl::GLImageSharedMemory"*, %"class.gfx::Size"*)* @_ZN2gl19GLImageSharedMemoryC2ERKN3gfx4SizeE
@_ZN2gl19GLImageSharedMemoryD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageSharedMemory"*), void (%"class.gl::GLImageSharedMemory"*)* @_ZN2gl19GLImageSharedMemoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageSharedMemoryC2ERKN3gfx4SizeE(%"class.gl::GLImageSharedMemory"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::GLImageSharedMemory"* %0 to %"class.gl::GLImageMemory"*
  tail call void @_ZN2gl13GLImageMemoryC2ERKN3gfx4SizeE(%"class.gl::GLImageMemory"* %3, %"class.gfx::Size"* dereferenceable(8) %1) #8
  %4 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 2
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %5) #8
  %6 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 3, i32 0
  store i32 -1, i32* %6, align 4
  ret void
}

declare void @_ZN2gl13GLImageMemoryC2ERKN3gfx4SizeE(%"class.gl::GLImageMemory"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageSharedMemoryD2Ev(%"class.gl::GLImageSharedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #8
  %4 = bitcast %"class.gl::GLImageSharedMemory"* %0 to %"class.gl::GLImageMemory"*
  tail call void @_ZN2gl13GLImageMemoryD2Ev(%"class.gl::GLImageMemory"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl13GLImageMemoryD2Ev(%"class.gl::GLImageMemory"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageSharedMemoryD0Ev(%"class.gl::GLImageSharedMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageSharedMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %3) #8
  %4 = bitcast %"class.gl::GLImageSharedMemory"* %0 to %"class.gl::GLImageMemory"*
  tail call void @_ZN2gl13GLImageMemoryD2Ev(%"class.gl::GLImageMemory"* %4) #8
  %5 = bitcast %"class.gl::GLImageSharedMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageSharedMemory10InitializeERKN4base24UnsafeSharedMemoryRegionEN3gfx21GenericSharedMemoryIdENS5_12BufferFormatEmm(%"class.gl::GLImageSharedMemory"*, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64), i32, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %8 = tail call zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"* %1) #8
  br i1 %8, label %9, label %54

9:                                                ; preds = %6
  %10 = tail call i64 @_ZN3gfx35NumberOfPlanesForLinearBufferFormatENS_12BufferFormatE(i32 %3) #8
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %54

12:                                               ; preds = %9
  %13 = bitcast %"class.gl::GLImageSharedMemory"* %0 to %"class.gl::GLImageMemory"*
  %14 = bitcast %"class.gl::GLImageSharedMemory"* %0 to i64 (%"class.gl::GLImageMemory"*)***
  %15 = load i64 (%"class.gl::GLImageMemory"*)**, i64 (%"class.gl::GLImageMemory"*)*** %14, align 8
  %16 = load i64 (%"class.gl::GLImageMemory"*)*, i64 (%"class.gl::GLImageMemory"*)** %15, align 8
  %17 = tail call i64 %16(%"class.gl::GLImageMemory"* %13) #8
  %18 = lshr i64 %17, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i64 %5, 0
  %22 = and i1 %21, %20
  br i1 %22, label %54, label %23, !prof !2

23:                                               ; preds = %12
  %24 = ashr i64 %17, 32
  %25 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %5, i64 %24) #8
  %26 = extractvalue { i64, i1 } %25, 1
  br i1 %26, label %54, label %27

27:                                               ; preds = %23
  %28 = extractvalue { i64, i1 } %25, 0
  %29 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #8
  %30 = urem i64 %4, %29
  %31 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #8
  %32 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #8
  %33 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %28, i64 %30) #8
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %54, label %35

35:                                               ; preds = %27
  %36 = extractvalue { i64, i1 } %33, 0
  %37 = udiv i64 %4, %32
  %38 = mul i64 %37, %31
  %39 = bitcast %"class.base::WritableSharedMemoryMapping"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %7, i64 0, i32 0, i32 1
  %41 = bitcast %"class.base::WritableSharedMemoryMapping"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 48, i1 false)
  call void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* nonnull sret %7, %"class.base::UnsafeSharedMemoryRegion"* %1, i64 %38, i64 %36) #8
  %42 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %7, i64 0, i32 0
  %43 = load i8*, i8** %40, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds i8, i8* %43, i64 %30
  %47 = call zeroext i1 @_ZN2gl13GLImageMemory10InitializeEPKhN3gfx12BufferFormatEm(%"class.gl::GLImageMemory"* %13, i8* %46, i32 %3, i64 %5) #8
  br i1 %47, label %48, label %52

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 2
  %50 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %49, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %7) #8
  %51 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 3, i32 0
  store i32 %2, i32* %51, align 8
  br label %52

52:                                               ; preds = %35, %45, %48
  %53 = phi i1 [ true, %48 ], [ false, %35 ], [ false, %45 ]
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #8
  br label %54

54:                                               ; preds = %52, %12, %23, %27, %9, %6
  %55 = phi i1 [ false, %6 ], [ false, %9 ], [ false, %23 ], [ %53, %52 ], [ false, %27 ], [ false, %12 ]
  ret i1 %55
}

declare zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #1

declare i64 @_ZN3gfx35NumberOfPlanesForLinearBufferFormatENS_12BufferFormatE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::UnsafeSharedMemoryRegion"*, i64, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl13GLImageMemory10InitializeEPKhN3gfx12BufferFormatEm(%"class.gl::GLImageMemory"*, i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageSharedMemory12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImageSharedMemory"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::UnguessableToken", align 8
  %7 = bitcast %"class.gl::GLImageSharedMemory"* %0 to %"class.gl::GLImageMemory"*
  %8 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.gl::GLImageSharedMemory"* %0 to i64 (%"class.gl::GLImageMemory"*)***
  %11 = load i64 (%"class.gl::GLImageMemory"*)**, i64 (%"class.gl::GLImageMemory"*)*** %10, align 8
  %12 = load i64 (%"class.gl::GLImageMemory"*)*, i64 (%"class.gl::GLImageMemory"*)** %11, align 8
  %13 = tail call i64 %12(%"class.gl::GLImageMemory"* %7) #8
  %14 = ashr i64 %13, 32
  %15 = mul i64 %14, %9
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #8, !alias.scope !3
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !3
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = zext i8 %22 to i64
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %30 = select i1 %23, i64 %25, i64 %28
  %31 = select i1 %23, i8* %27, i8* %29
  %32 = add i64 %30, 14
  %33 = icmp ugt i64 %32, -17
  br i1 %33, label %34, label %36

34:                                               ; preds = %4
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #10
  unreachable

36:                                               ; preds = %4
  %37 = icmp ult i64 %32, 23
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %30, 30
  %40 = and i64 %39, -16
  %41 = tail call i8* @_Znwm(i64 %40) #9
  store i8* %41, i8** %17, align 8, !alias.scope !3
  %42 = or i64 %40, -9223372036854775808
  store i64 %42, i64* %19, align 8, !alias.scope !3
  store i64 %30, i64* %18, align 8, !alias.scope !3
  br label %48

43:                                               ; preds = %36
  %44 = trunc i64 %30 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1, !alias.scope !3
  %47 = icmp eq i64 %30, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %38, %43
  %49 = phi i8* [ %41, %38 ], [ %16, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %31, i64 %30, i1 false) #8
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i8* [ %16, %43 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %30
  store i8 0, i8* %52, align 1
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14) #8
  %54 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %50, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %54, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %15) #8
  %62 = bitcast %"class.base::UnguessableToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8
  %63 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %6, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %6, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.gl::GLImageSharedMemory", %"class.gl::GLImageSharedMemory"* %0, i64 0, i32 2, i32 0, i32 4
  %66 = bitcast %"class.base::UnguessableToken"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %66, i64 16, i1 false)
  %67 = load i64, i64* %63, align 8
  %68 = load i64, i64* %64, align 8
  %69 = or i64 %68, %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %54, i64 0, i32 1
  call void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %72, %"class.base::UnguessableToken"* nonnull dereferenceable(16) %6, i32 0) #8
  br label %73

73:                                               ; preds = %61, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8
  ret void
}

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #1

declare i64 @_ZN2gl13GLImageMemory7GetSizeEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare i32 @_ZN2gl13GLImageMemory17GetInternalFormatEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare i32 @_ZN2gl13GLImageMemory13GetDataFormatEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare i32 @_ZN2gl13GLImageMemory11GetDataTypeEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare i32 @_ZN2gl13GLImageMemory16ShouldBindOrCopyEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl13GLImageMemory12BindTexImageEj(%"class.gl::GLImageMemory"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13GLImageMemory15ReleaseTexImageEj(%"class.gl::GLImageMemory"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2gl13GLImageMemory12CopyTexImageEj(%"class.gl::GLImageMemory"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl13GLImageMemory15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImageMemory"*, i32, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2gl13GLImageMemory20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE() unnamed_addr

declare void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13GLImageMemory5FlushEv(%"class.gl::GLImageMemory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZNK2gl13GLImageMemory7GetTypeEv(%"class.gl::GLImageMemory"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #1

declare void @_ZN2gl7GLImage15GetNativePixmapEv() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 4001}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
