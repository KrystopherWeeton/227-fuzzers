; ModuleID = '../../third_party/blink/renderer/modules/csspaint/paint_worklet_messaging_proxy.cc'
source_filename = "../../third_party/blink/renderer/modules/csspaint/paint_worklet_messaging_proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PaintWorkletMessagingProxy" = type { %"class.blink::ThreadedWorkletMessagingProxy" }
%"class.blink::ThreadedWorkletMessagingProxy" = type { %"class.blink::ThreadedMessagingProxyBase", %"class.blink::WorkletGlobalScopeProxy", %"class.std::__1::unique_ptr.251" }
%"class.blink::ThreadedMessagingProxyBase" = type { i32 (...)**, %"class.blink::Member", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.175", i8, [7 x i8], %"class.base::WaitableEvent", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::SelfKeepAlive" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ParentExecutionContextTaskRunners" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.171", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.34" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.259" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::WorkerThread"* }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.178, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.190, %"class.std::__1::unique_ptr.196", %"class.WTF::HashMap", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.224", %"class.blink::CrossThreadPersistent.226", %"class.blink::CrossThreadPersistent.228", %class.scoped_refptr.230, %"class.blink::TaskHandle", %"class.WTF::HashSet", %"class.WTF::HashSet.235" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.178 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.179" }
%"class.WTF::Deque.179" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.std::__1::unique_ptr.184"*, i32, i32 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%class.scoped_refptr.190 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.211, %class.scoped_refptr.211, %class.scoped_refptr.211, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.220" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.199", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.199" = type { %"class.WTF::HashTable.200" }
%"class.WTF::HashTable.200" = type <{ %"struct.WTF::KeyValuePair.203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.203" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.205", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.206" }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i8 }
%class.scoped_refptr.211 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.224" = type { %"class.blink::PersistentBase.225" }
%"class.blink::PersistentBase.225" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.226" = type { %"class.blink::PersistentBase.227" }
%"class.blink::PersistentBase.227" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type opaque
%"class.blink::CrossThreadPersistent.228" = type { %"class.blink::PersistentBase.229" }
%"class.blink::PersistentBase.229" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.230 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.232" }
%"class.WTF::HashTable.232" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.235" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ %"class.std::__1::unique_ptr.239"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.239" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.243, i8, [7 x i8] }>
%class.scoped_refptr.243 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.244", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.244" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.245" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.250" }
%"class.blink::PersistentBase.250" = type { %"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::WorkletGlobalScopeProxy" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadedWorkletObjectProxy"* }
%"class.blink::ThreadedWorkletObjectProxy" = type { %"class.blink::ThreadedObjectProxyBase", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::ThreadedObjectProxyBase" = type { %"class.blink::WorkerReportingProxy", %"class.blink::CrossThreadPersistent" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.254" }
%"class.blink::PersistentBase.254" = type { %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::CrossThreadPersistentNodePtr.255" }
%"class.blink::CrossThreadPersistentNodePtr.255" = type { %"struct.std::__1::atomic" }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::AnimationAndPaintWorkletThread" = type <{ %"class.blink::WorkerThread", i32, [4 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.276" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.270 }
%class.scoped_refptr.270 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.271" }
%"struct.std::__1::atomic.271" = type { %"struct.std::__1::__atomic_base.272" }
%"struct.std::__1::__atomic_base.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__cxx_atomic_impl.274" }
%"struct.std::__1::__cxx_atomic_impl.274" = type { %"struct.std::__1::__cxx_atomic_base_impl.275" }
%"struct.std::__1::__cxx_atomic_base_impl.275" = type { i32 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::KURL"* }
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.284, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.285" }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%class.scoped_refptr.284 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.284 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::WorkerResourceTimingNotifier" = type opaque
%"class.blink::WorkletPendingTasks" = type opaque

@_ZTVN5blink26PaintWorkletMessagingProxyE = hidden unnamed_addr constant { [10 x i8*], [8 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZN5blink26PaintWorkletMessagingProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZN5blink26PaintWorkletMessagingProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::Visitor"*)* @_ZNK5blink26PaintWorkletMessagingProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::WorkerThread"* (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZN5blink26PaintWorkletMessagingProxy18CreateWorkerThreadEv to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"*, i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZN5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZN5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv to i8*), i8* bitcast (%"class.blink::ThreadedWorkletObjectProxy"* (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*)* @_ZN5blink29ThreadedWorkletMessagingProxy17CreateObjectProxyEPS0_PNS_33ParentExecutionContextTaskRunnersE to i8*)], [8 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink26PaintWorkletMessagingProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZThn104_N5blink26PaintWorkletMessagingProxyD1Ev to i8*), i8* bitcast (void (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZThn104_N5blink26PaintWorkletMessagingProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"*, i32, %"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ThreadedWorkletMessagingProxy"*)* @_ZThn104_N5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv to i8*)] }, align 8
@_ZTVN5blink29ThreadedWorkletMessagingProxyE = external unnamed_addr constant { [10 x i8*], [8 x i8*] }, align 8

@_ZN5blink26PaintWorkletMessagingProxyC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::ExecutionContext"*), void (%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::ExecutionContext"*)* @_ZN5blink26PaintWorkletMessagingProxyC2EPNS_16ExecutionContextE
@_ZN5blink26PaintWorkletMessagingProxyD1Ev = hidden unnamed_addr alias void (%"class.blink::PaintWorkletMessagingProxy"*), void (%"class.blink::PaintWorkletMessagingProxy"*)* @_ZN5blink26PaintWorkletMessagingProxyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PaintWorkletMessagingProxyC2EPNS_16ExecutionContextE(%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink29ThreadedWorkletMessagingProxyC2EPNS_16ExecutionContextE(%"class.blink::ThreadedWorkletMessagingProxy"* %3, %"class.blink::ExecutionContext"* %1) #3
  %4 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink26PaintWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink26PaintWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN5blink29ThreadedWorkletMessagingProxyC2EPNS_16ExecutionContextE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink26PaintWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZNK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::ThreadedWorkletMessagingProxy"* %3, %"class.blink::Visitor"* %1) #3
  ret void
}

declare void @_ZNK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink26PaintWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::PaintWorkletMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 0, i32 2
  %4 = bitcast %"class.blink::CrossThreadPersistent"* %3 to %"class.blink::ThreadedWorkletMessagingProxy"*
  tail call void @_ZNK5blink29ThreadedWorkletMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::ThreadedWorkletMessagingProxy"* %4, %"class.blink::Visitor"* %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PaintWorkletMessagingProxyD2Ev(%"class.blink::PaintWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  %6 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %5 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %9 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %9, i64 1
  %11 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %10, align 8
  tail call void %11(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %5) #3
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %13) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink26PaintWorkletMessagingProxyD1Ev(%"class.blink::PaintWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 6, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 7
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %6 to %"class.blink::ThreadedWorkletObjectProxy"**
  %8 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  %9 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %8 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %12 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %12, i64 1
  %14 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %13, align 8
  tail call void %14(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %8) #3
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.blink::CrossThreadPersistent"* %2 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %16) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26PaintWorkletMessagingProxyD0Ev(%"class.blink::PaintWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %4, align 8
  %6 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %5 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %9 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %9, i64 1
  %11 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %10, align 8
  tail call void %11(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %5) #3
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %13) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink26PaintWorkletMessagingProxyD0Ev(%"class.blink::PaintWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 6, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [8 x i8*] }, { [10 x i8*], [8 x i8*] }* @_ZTVN5blink29ThreadedWorkletMessagingProxyE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 7
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %6 to %"class.blink::ThreadedWorkletObjectProxy"**
  %8 = load %"class.blink::ThreadedWorkletObjectProxy"*, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  store %"class.blink::ThreadedWorkletObjectProxy"* null, %"class.blink::ThreadedWorkletObjectProxy"** %7, align 8
  %9 = icmp eq %"class.blink::ThreadedWorkletObjectProxy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::ThreadedWorkletObjectProxy"* %8 to void (%"class.blink::ThreadedWorkletObjectProxy"*)***
  %12 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)**, void (%"class.blink::ThreadedWorkletObjectProxy"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %12, i64 1
  %14 = load void (%"class.blink::ThreadedWorkletObjectProxy"*)*, void (%"class.blink::ThreadedWorkletObjectProxy"*)** %13, align 8
  tail call void %14(%"class.blink::ThreadedWorkletObjectProxy"* nonnull %8) #3
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast %"class.blink::CrossThreadPersistent"* %2 to %"class.blink::ThreadedMessagingProxyBase"*
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %16) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WorkerThread"* @_ZN5blink26PaintWorkletMessagingProxy18CreateWorkerThreadEv(%"class.blink::PaintWorkletMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaintWorkletMessagingProxy", %"class.blink::PaintWorkletMessagingProxy"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(40) %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink29ThreadedWorkletMessagingProxy18WorkletObjectProxyEv(%"class.blink::ThreadedWorkletMessagingProxy"* %2) #3
  %4 = getelementptr inbounds %"class.blink::ThreadedWorkletObjectProxy", %"class.blink::ThreadedWorkletObjectProxy"* %3, i64 0, i32 0, i32 0
  %5 = tail call %"class.blink::AnimationAndPaintWorkletThread"* @_ZN5blink30AnimationAndPaintWorkletThread21CreateForPaintWorkletERNS_20WorkerReportingProxyE(%"class.blink::WorkerReportingProxy"* dereferenceable(8) %4) #3
  %6 = getelementptr inbounds %"class.blink::AnimationAndPaintWorkletThread", %"class.blink::AnimationAndPaintWorkletThread"* %5, i64 0, i32 0
  ret %"class.blink::WorkerThread"* %6
}

declare %"class.blink::AnimationAndPaintWorkletThread"* @_ZN5blink30AnimationAndPaintWorkletThread21CreateForPaintWorkletERNS_20WorkerReportingProxyE(%"class.blink::WorkerReportingProxy"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink29ThreadedWorkletMessagingProxy18WorkletObjectProxyEv(%"class.blink::ThreadedWorkletMessagingProxy"*) local_unnamed_addr #1

declare void @_ZN5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #1

declare void @_ZN5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #1

declare void @_ZN5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #1

declare %"class.blink::ThreadedWorkletObjectProxy"* @_ZN5blink29ThreadedWorkletMessagingProxy17CreateObjectProxyEPS0_PNS_33ParentExecutionContextTaskRunnersE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy20FetchAndInvokeScriptERKNS_4KURLEN7network5mojom15CredentialsModeERKNS_33FetchClientSettingsObjectSnapshotERNS_28WorkerResourceTimingNotifierE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::ThreadedWorkletMessagingProxy"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"class.blink::WorkerResourceTimingNotifier"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy22WorkletObjectDestroyedEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink29ThreadedWorkletMessagingProxy27TerminateWorkletGlobalScopeEv(%"class.blink::ThreadedWorkletMessagingProxy"*) unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
