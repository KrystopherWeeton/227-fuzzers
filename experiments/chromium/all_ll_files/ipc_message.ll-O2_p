; ModuleID = '../../ipc/ipc_message.cc'
source_filename = "../../ipc/ipc_message.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr.1*, %class.scoped_refptr.1*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr.1 = type { %"class.IPC::MessageAttachment"* }
%"class.IPC::MessageAttachment" = type { %"class.base::Pickle::Attachment.base", [4 x i8] }
%"class.base::Pickle::Attachment.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr.1* }
%"struct.IPC::Message::NextMessageInfo" = type { i64, i8, i8*, i8* }
%"struct.IPC::Message::Header" = type { %"struct.base::Pickle::Header", i32, i32, i32, i16, i16 }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector.8", %"class.base::Lock", i8, %"class.std::__1::vector.16", %"class.std::__1::map", %"class.std::__1::vector.31", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.63", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.87", %"class.std::__1::unordered_map.111", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.139", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.188", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.247", %"class.std::__1::unique_ptr.271", i64, %"class.base::RepeatingCallback", %class.scoped_refptr.279, %"class.base::RepeatingCallback.281", %"class.base::RepeatingCallback.282", i64, i8, %"struct.std::__1::atomic.283", %"struct.std::__1::atomic.305", %"struct.std::__1::atomic.309", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::unique_ptr.10"*, %"class.std::__1::unique_ptr.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::unique_ptr.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::unique_ptr.10"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.18" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::unique_ptr.33" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::unique_ptr.33"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.63" = type { %"class.std::__1::__hash_table.64" }
%"class.std::__1::__hash_table.64" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.83", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.68"** }
%"struct.std::__1::__hash_node_base.68" = type { %"struct.std::__1::__hash_node_base.68"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator.70" }
%"class.std::__1::__bucket_list_deallocator.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::__hash_node_base.68" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.87" = type { %"class.std::__1::__hash_table.88" }
%"class.std::__1::__hash_table.88" = type <{ %"class.std::__1::unique_ptr.89", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.107", [4 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base.92"** }
%"struct.std::__1::__hash_node_base.92" = type { %"struct.std::__1::__hash_node_base.92"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator.94" }
%"class.std::__1::__bucket_list_deallocator.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base.92" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.139" = type { %"struct.std::__1::__atomic_base.140" }
%"struct.std::__1::__atomic_base.140" = type { %"struct.std::__1::__atomic_base.141" }
%"struct.std::__1::__atomic_base.141" = type { %"struct.std::__1::__cxx_atomic_impl.142" }
%"struct.std::__1::__cxx_atomic_impl.142" = type { %"struct.std::__1::__cxx_atomic_base_impl.143" }
%"struct.std::__1::__cxx_atomic_base_impl.143" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.188", %"class.std::__1::unordered_set.224", %"class.std::__1::unordered_set.224" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.144", %"class.std::__1::vector.144", %"class.std::__1::vector.144" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.160", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.151" }
%"class.std::__1::__tree.151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::vector.160" = type { %"class.std::__1::__vector_base.161" }
%"class.std::__1::__vector_base.161" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.162" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.167" }
%"class.std::__1::__hash_table.167" = type <{ %"class.std::__1::unique_ptr.168", %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.185", [4 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170", %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base.171"** }
%"struct.std::__1::__hash_node_base.171" = type { %"struct.std::__1::__hash_node_base.171"* }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.std::__1::__bucket_list_deallocator.173" }
%"class.std::__1::__bucket_list_deallocator.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::__hash_node_base.171" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_set.224" = type { %"class.std::__1::__hash_table.225" }
%"class.std::__1::__hash_table.225" = type <{ %"class.std::__1::unique_ptr.226", %"class.std::__1::__compressed_pair.236", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::__hash_node_base.229"** }
%"struct.std::__1::__hash_node_base.229" = type { %"struct.std::__1::__hash_node_base.229"* }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::__bucket_list_deallocator.231" }
%"class.std::__1::__bucket_list_deallocator.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::__hash_node_base.229" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.219" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.190" }
%"union.absl::variant_internal::DestructibleUnionImpl.190" = type { %"union.absl::variant_internal::DestructibleUnionImpl.191" }
%"union.absl::variant_internal::DestructibleUnionImpl.191" = type { %"union.absl::variant_internal::DestructibleUnionImpl.192" }
%"union.absl::variant_internal::DestructibleUnionImpl.192" = type { %"union.absl::variant_internal::DestructibleUnionImpl.193" }
%"union.absl::variant_internal::DestructibleUnionImpl.193" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.246" }
%"class.base::ThreadLocalPointer.246" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.247" = type { %"class.std::__1::__hash_table.248" }
%"class.std::__1::__hash_table.248" = type <{ %"class.std::__1::unique_ptr.249", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.267", [4 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base.252"** }
%"struct.std::__1::__hash_node_base.252" = type { %"struct.std::__1::__hash_node_base.252"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator.254" }
%"class.std::__1::__bucket_list_deallocator.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.252" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.278", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.278" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.279 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.280" }>
%"class.base::RefCountedThreadSafe.280" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.281" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.282" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.283" = type { %"struct.std::__1::__atomic_base.284" }
%"struct.std::__1::__atomic_base.284" = type { %"struct.std::__1::__cxx_atomic_impl.285" }
%"struct.std::__1::__cxx_atomic_impl.285" = type { %"struct.std::__1::__cxx_atomic_base_impl.286" }
%"struct.std::__1::__cxx_atomic_base_impl.286" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.304, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.287" }
%"class.base::time_internal::TimeBase.287" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon.304 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { void ()* }
%"struct.std::__1::atomic.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__cxx_atomic_impl.311" }
%"struct.std::__1::__cxx_atomic_impl.311" = type { %"struct.std::__1::__cxx_atomic_base_impl.312" }
%"struct.std::__1::__cxx_atomic_base_impl.312" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.base::Pickle::Attachment" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%class.scoped_refptr.4 = type { %"class.base::Pickle::Attachment"* }

@_ZTVN3IPC7MessageE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.IPC::Message"*)* @_ZN3IPC7MessageD2Ev to i8*), i8* bitcast (void (%"class.IPC::Message"*)* @_ZN3IPC7MessageD0Ev to i8*), i8* bitcast (i1 (%"class.IPC::Message"*, %"class.base::Pickle::Attachment"*)* @_ZN3IPC7Message15WriteAttachmentE13scoped_refptrIN4base6Pickle10AttachmentEE to i8*), i8* bitcast (i1 (%"class.IPC::Message"*, %"class.base::PickleIterator"*, %class.scoped_refptr.4*)* @_ZNK3IPC7Message14ReadAttachmentEPN4base14PickleIteratorEP13scoped_refptrINS1_6Pickle10AttachmentEE to i8*), i8* bitcast (i1 (%"class.IPC::Message"*)* @_ZNK3IPC7Message14HasAttachmentsEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_19g_ref_numE = internal global { { { i32 } } } zeroinitializer, align 4

@_ZN3IPC7MessageD1Ev = hidden unnamed_addr alias void (%"class.IPC::Message"*), void (%"class.IPC::Message"*)* @_ZN3IPC7MessageD2Ev
@_ZN3IPC7MessageC1Ev = hidden unnamed_addr alias void (%"class.IPC::Message"*), void (%"class.IPC::Message"*)* @_ZN3IPC7MessageC2Ev
@_ZN3IPC7MessageC1EijNS0_13PriorityValueE = hidden unnamed_addr alias void (%"class.IPC::Message"*, i32, i32, i32), void (%"class.IPC::Message"*, i32, i32, i32)* @_ZN3IPC7MessageC2EijNS0_13PriorityValueE
@_ZN3IPC7MessageC1EPKci = hidden unnamed_addr alias void (%"class.IPC::Message"*, i8*, i32), void (%"class.IPC::Message"*, i8*, i32)* @_ZN3IPC7MessageC2EPKci
@_ZN3IPC7MessageC1ERKS0_ = hidden unnamed_addr alias void (%"class.IPC::Message"*, %"class.IPC::Message"*), void (%"class.IPC::Message"*, %"class.IPC::Message"*)* @_ZN3IPC7MessageC2ERKS0_
@_ZN3IPC7Message15NextMessageInfoC1Ev = hidden unnamed_addr alias void (%"struct.IPC::Message::NextMessageInfo"*), void (%"struct.IPC::Message::NextMessageInfo"*)* @_ZN3IPC7Message15NextMessageInfoC2Ev
@_ZN3IPC7Message15NextMessageInfoD1Ev = hidden unnamed_addr alias void (%"struct.IPC::Message::NextMessageInfo"*), void (%"struct.IPC::Message::NextMessageInfo"*)* @_ZN3IPC7Message15NextMessageInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageD2Ev(%"class.IPC::Message"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %3, align 8
  %5 = icmp eq %"class.IPC::MessageAttachmentSet"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %4) #10
  %11 = bitcast %"class.IPC::MessageAttachmentSet"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  tail call void @_ZN4base6PickleD2Ev(%"class.base::Pickle"* %13) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base6PickleD2Ev(%"class.base::Pickle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageD0Ev(%"class.IPC::Message"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %3, align 8
  %5 = icmp eq %"class.IPC::MessageAttachmentSet"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %4) #10
  %11 = bitcast %"class.IPC::MessageAttachmentSet"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  tail call void @_ZN4base6PickleD2Ev(%"class.base::Pickle"* %13) #10
  %14 = bitcast %"class.IPC::Message"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageC2Ev(%"class.IPC::Message"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  tail call void @_ZN4base6PickleC2Ei(%"class.base::Pickle"* %2, i32 20) #10
  %3 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  store %"class.IPC::MessageAttachmentSet"* null, %"class.IPC::MessageAttachmentSet"** %4, align 8
  %5 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.base::Pickle::Header"** %5 to %"struct.IPC::Message::Header"**
  %7 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %8 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %7, i64 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %10 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %9, i64 0, i32 1
  store i32 0, i32* %10, align 4
  %11 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #10
  %12 = icmp eq %"class.base::trace_event::TraceLog"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %11, i64 0, i32 22
  %15 = load i32, i32* %14, align 8
  %16 = shl i32 %15, 14
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %1 ]
  %19 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN12_GLOBAL__N_19g_ref_numE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %20 = and i32 %19, 16383
  %21 = or i32 %20, %18
  %22 = shl i32 %21, 8
  %23 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %24 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %23, i64 0, i32 3
  store i32 %22, i32* %24, align 4
  %25 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %26 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %25, i64 0, i32 4
  store i16 0, i16* %26, align 4
  %27 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %28 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %27, i64 0, i32 5
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 1
  store i8 0, i8* %29, align 8
  ret void
}

declare void @_ZN4base6PickleC2Ei(%"class.base::Pickle"*, i32) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3IPC7Message4InitEv(%"class.IPC::Message"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageC2EijNS0_13PriorityValueE(%"class.IPC::Message"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  tail call void @_ZN4base6PickleC2Ei(%"class.base::Pickle"* %5, i32 20) #10
  %6 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  store %"class.IPC::MessageAttachmentSet"* null, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %8 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"struct.base::Pickle::Header"** %8 to %"struct.IPC::Message::Header"**
  %10 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %9, align 8
  %11 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %10, i64 0, i32 1
  store i32 %1, i32* %11, align 4
  %12 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %9, align 8
  %13 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %12, i64 0, i32 2
  store i32 %2, i32* %13, align 4
  %14 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #10
  %15 = icmp eq %"class.base::trace_event::TraceLog"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %14, i64 0, i32 22
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 %18, 14
  br label %20

20:                                               ; preds = %4, %16
  %21 = phi i32 [ %19, %16 ], [ 0, %4 ]
  %22 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN12_GLOBAL__N_19g_ref_numE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %23 = and i32 %22, 16383
  %24 = or i32 %23, %21
  %25 = shl i32 %24, 8
  %26 = or i32 %25, %3
  %27 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %9, align 8
  %28 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %27, i64 0, i32 3
  store i32 %26, i32* %28, align 4
  %29 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %9, align 8
  %30 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %29, i64 0, i32 4
  store i16 0, i16* %30, align 4
  %31 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %9, align 8
  %32 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %31, i64 0, i32 5
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 1
  store i8 0, i8* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageC2EPKci(%"class.IPC::Message"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  %5 = sext i32 %2 to i64
  tail call void @_ZN4base6PickleC2EPKcm(%"class.base::Pickle"* %4, i8* %1, i64 %5) #10
  %6 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  store %"class.IPC::MessageAttachmentSet"* null, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %8 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  ret void
}

declare void @_ZN4base6PickleC2EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7MessageC2ERKS0_(%"class.IPC::Message"*, %"class.IPC::Message"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 0
  tail call void @_ZN4base6PickleC2ERKS0_(%"class.base::Pickle"* %3, %"class.base::Pickle"* dereferenceable(40) %4) #10
  %5 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3IPC7MessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  store %"class.IPC::MessageAttachmentSet"* null, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %8 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 2, i32 0
  %10 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %9, align 8
  %11 = icmp eq %"class.IPC::MessageAttachmentSet"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = ptrtoint %"class.IPC::MessageAttachmentSet"* %10 to i64
  %14 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %13, i64* %14, align 8
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %19 = bitcast %"class.IPC::MessageAttachmentSet"* %18 to i8*
  %20 = ptrtoint %"class.IPC::MessageAttachmentSet"* %10 to i64
  %21 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %20, i64* %21, align 8
  %22 = icmp eq %"class.IPC::MessageAttachmentSet"* %18, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %18) #10
  tail call void @_ZdlPv(i8* %19) #11
  br label %28

28:                                               ; preds = %12, %15, %23, %27
  ret void
}

declare void @_ZN4base6PickleC2ERKS0_(%"class.base::Pickle"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.IPC::Message"* @_ZN3IPC7MessageaSERKS0_(%"class.IPC::Message"* returned, %"class.IPC::Message"* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(40) %"class.base::Pickle"* @_ZN4base6PickleaSERKS0_(%"class.base::Pickle"* %4, %"class.base::Pickle"* dereferenceable(40) %3) #10
  %6 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 2, i32 0
  %7 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %6, align 8
  %8 = icmp eq %"class.IPC::MessageAttachmentSet"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.IPC::MessageAttachmentSet"* %7 to i64
  %15 = bitcast %class.scoped_refptr* %13 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %17 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.IPC::MessageAttachmentSet"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %17) #10
  %24 = bitcast %"class.IPC::MessageAttachmentSet"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %12, %19, %23
  ret %"class.IPC::Message"* %0
}

declare dereferenceable(40) %"class.base::Pickle"* @_ZN4base6PickleaSERKS0_(%"class.base::Pickle"*, %"class.base::Pickle"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3IPC7Message15SetHeaderValuesEijj(%"class.IPC::Message"* nocapture readonly, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.base::Pickle::Header"** %5 to %"struct.IPC::Message::Header"**
  %7 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %8 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %7, i64 0, i32 1
  store i32 %1, i32* %8, align 4
  %9 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %10 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %9, i64 0, i32 2
  store i32 %2, i32* %10, align 4
  %11 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %6, align 8
  %12 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %11, i64 0, i32 3
  store i32 %3, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7Message26EnsureMessageAttachmentSetEv(%"class.IPC::Message"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %4 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %3, align 8
  %5 = icmp eq %"class.IPC::MessageAttachmentSet"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 40) #11
  %8 = bitcast i8* %7 to %"class.IPC::MessageAttachmentSet"*
  tail call void @_ZN3IPC20MessageAttachmentSetC1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %8) #10
  %9 = bitcast i8* %7 to i32*
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = ptrtoint i8* %7 to i64
  %12 = bitcast %class.scoped_refptr* %2 to i64*
  %13 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %3, align 8
  store i64 %11, i64* %12, align 8
  %14 = icmp eq %"class.IPC::MessageAttachmentSet"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %13) #10
  %20 = bitcast %"class.IPC::MessageAttachmentSet"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %15, %6, %1
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3IPC20MessageAttachmentSetC1Ev(%"class.IPC::MessageAttachmentSet"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3IPC7Message15NextMessageInfoC2Ev(%"struct.IPC::Message::NextMessageInfo"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3IPC7Message15NextMessageInfoD2Ev(%"struct.IPC::Message::NextMessageInfo"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3IPC7Message8FindNextEPKcS2_PNS0_15NextMessageInfoE(i8*, i8*, %"struct.IPC::Message::NextMessageInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %2, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %2, i64 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store i64 0, i64* %4, align 8
  %8 = call zeroext i1 @_ZN4base6Pickle8PeekNextEmPKcS2_Pm(i64 20, i8* %0, i8* %1, i64* nonnull %4) #10
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = ptrtoint i8* %1 to i64
  %11 = ptrtoint i8* %0 to i64
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %4, align 8
  %14 = icmp ult i64 %12, %13
  store i64 %13, i64* %6, align 8
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds i8, i8* %0, i64 %13
  %17 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %2, i64 0, i32 3
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"struct.IPC::Message::NextMessageInfo", %"struct.IPC::Message::NextMessageInfo"* %2, i64 0, i32 2
  store i8* %16, i8** %18, align 8
  store i8 1, i8* %5, align 8
  br label %19

19:                                               ; preds = %15, %9, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

declare zeroext i1 @_ZN4base6Pickle8PeekNextEmPKcS2_Pm(i64, i8*, i8*, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3IPC7Message15WriteAttachmentE13scoped_refptrIN4base6Pickle10AttachmentEE(%"class.IPC::Message"*, %"class.base::Pickle::Attachment"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %8 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %9 = icmp eq %"class.IPC::MessageAttachmentSet"* %8, null
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = tail call i8* @_Znwm(i64 40) #11
  %12 = bitcast i8* %11 to %"class.IPC::MessageAttachmentSet"*
  tail call void @_ZN3IPC20MessageAttachmentSetC1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %12) #10
  %13 = bitcast i8* %11 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = ptrtoint i8* %11 to i64
  %16 = bitcast %class.scoped_refptr* %6 to i64*
  %17 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %7, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.IPC::MessageAttachmentSet"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"* nonnull %17) #10
  %24 = bitcast %"class.IPC::MessageAttachmentSet"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %2, %10, %19, %23
  %26 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %7, align 8
  %27 = bitcast %"class.base::Pickle::Attachment"* %1 to %"class.IPC::MessageAttachment"*
  %28 = icmp eq %"class.base::Pickle::Attachment"* %1, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::Pickle::Attachment", %"class.base::Pickle::Attachment"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %25, %29
  %33 = call zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEEPm(%"class.IPC::MessageAttachmentSet"* %26, %"class.IPC::MessageAttachment"* %27, i64* nonnull %4) #10
  %34 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 0
  %35 = load i64, i64* %4, align 8
  %36 = trunc i64 %35 to i32
  %37 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37)
  store i32 %36, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %34, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  br i1 %28, label %50, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.base::Pickle::Attachment", %"class.base::Pickle::Attachment"* %1, i64 0, i32 1
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe.2"* %44 to %"class.base::Pickle::Attachment"*
  %46 = bitcast %"class.base::RefCountedThreadSafe.2"* %44 to void (%"class.base::Pickle::Attachment"*)***
  %47 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %47, i64 1
  %49 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %48, align 8
  call void %49(%"class.base::Pickle::Attachment"* nonnull %45) #10
  br label %50

50:                                               ; preds = %32, %38, %43
  ret i1 %33
}

declare zeroext i1 @_ZN3IPC20MessageAttachmentSet13AddAttachmentE13scoped_refptrINS_17MessageAttachmentEEPm(%"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachment"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3IPC7Message14ReadAttachmentEPN4base14PickleIteratorEP13scoped_refptrINS1_6Pickle10AttachmentEE(%"class.IPC::Message"* nocapture readonly, %"class.base::PickleIterator"*, %class.scoped_refptr.4* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  store i32 -1431655766, i32* %4, align 4
  %6 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %1, i32* nonnull %4) #10
  br i1 %6, label %7, label %34

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  %9 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %8, align 8
  %10 = icmp eq %"class.IPC::MessageAttachmentSet"* %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %7
  %12 = load i32, i32* %4, align 4
  %13 = call %"class.IPC::MessageAttachment"* @_ZN3IPC20MessageAttachmentSet15GetAttachmentAtEj(%"class.IPC::MessageAttachmentSet"* nonnull %9, i32 %12) #10
  %14 = ptrtoint %"class.IPC::MessageAttachment"* %13 to i64
  %15 = bitcast %class.scoped_refptr.4* %2 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %2, i64 0, i32 0
  %17 = load %"class.base::Pickle::Attachment"*, %"class.base::Pickle::Attachment"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.base::Pickle::Attachment"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.base::Pickle::Attachment", %"class.base::Pickle::Attachment"* %17, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.2"* %25 to %"class.base::Pickle::Attachment"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.2"* %25 to void (%"class.base::Pickle::Attachment"*)***
  %28 = load void (%"class.base::Pickle::Attachment"*)**, void (%"class.base::Pickle::Attachment"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %28, i64 1
  %30 = load void (%"class.base::Pickle::Attachment"*)*, void (%"class.base::Pickle::Attachment"*)** %29, align 8
  call void %30(%"class.base::Pickle::Attachment"* nonnull %26) #10
  br label %31

31:                                               ; preds = %24, %19, %11
  %32 = load %"class.base::Pickle::Attachment"*, %"class.base::Pickle::Attachment"** %16, align 8
  %33 = icmp ne %"class.base::Pickle::Attachment"* %32, null
  br label %34

34:                                               ; preds = %31, %7, %3
  %35 = phi i1 [ false, %3 ], [ %33, %31 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i1 %35
}

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #3

declare %"class.IPC::MessageAttachment"* @_ZN3IPC20MessageAttachmentSet15GetAttachmentAtEj(%"class.IPC::MessageAttachmentSet"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3IPC7Message14HasAttachmentsEv(%"class.IPC::Message"* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.IPC::MessageAttachmentSet"*, %"class.IPC::MessageAttachmentSet"** %2, align 8
  %4 = icmp eq %"class.IPC::MessageAttachmentSet"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %6, align 8
  %8 = getelementptr inbounds %"class.IPC::MessageAttachmentSet", %"class.IPC::MessageAttachmentSet"* %3, i64 0, i32 2, i32 0, i32 1
  %9 = load %class.scoped_refptr.1*, %class.scoped_refptr.1** %8, align 8
  %10 = icmp ne %class.scoped_refptr.1* %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3IPC20MessageAttachmentSetD1Ev(%"class.IPC::MessageAttachmentSet"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
