; ModuleID = '../../components/base32/base32.cc'
source_filename = "../../components/base32/base32.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN6base32L9kEncodingE = internal unnamed_addr constant [33 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6base3212Base32EncodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_18Base32EncodePolicyE(%"class.std::__1::basic_string"* noalias nocapture sret, i8*, i64, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #7
  br label %65

12:                                               ; preds = %4
  %13 = add i64 %2, 4
  %14 = udiv i64 %13, 5
  %15 = shl i64 %14, 3
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 8) #7
  %17 = extractvalue { i64, i1 } %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

19:                                               ; preds = %12
  %20 = extractvalue { i64, i1 } %16, 0
  %21 = or i64 %20, 4
  %22 = udiv i64 %21, 5
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #7
  %24 = icmp eq i32 %3, 0
  %25 = select i1 %24, i64 %15, i64 %22
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %6, i64 %25) #7
  %26 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 0) #7
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 8
  br label %30

30:                                               ; preds = %19, %54
  %31 = phi i32 [ 8, %19 ], [ %57, %54 ]
  %32 = phi i64 [ 1, %19 ], [ %56, %54 ]
  %33 = phi i32 [ %29, %19 ], [ %55, %54 ]
  %34 = and i32 %33, 65535
  %35 = lshr i32 %34, 11
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [33 x i8], [33 x i8]* @_ZN6base32L9kEncodingE, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext %38) #7
  %39 = shl nuw nsw i32 %34, 5
  %40 = add nsw i32 %31, 5
  %41 = icmp sgt i32 %40, 7
  %42 = load i64, i64* %8, align 8
  %43 = icmp ult i64 %32, %42
  %44 = and i1 %41, %43
  br i1 %44, label %45, label %54

45:                                               ; preds = %30
  %46 = add nsw i32 %31, -3
  %47 = add nuw i64 %32, 1
  %48 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %32) #7
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl i32 %50, %46
  %52 = and i32 %39, 65504
  %53 = add nuw nsw i32 %51, %52
  br label %54

54:                                               ; preds = %45, %30
  %55 = phi i32 [ %53, %45 ], [ %39, %30 ]
  %56 = phi i64 [ %47, %45 ], [ %32, %30 ]
  %57 = phi i32 [ %46, %45 ], [ %40, %30 ]
  %58 = icmp slt i32 %57, 16
  br i1 %58, label %30, label %59

59:                                               ; preds = %54
  br i1 %24, label %60, label %63

60:                                               ; preds = %59
  %61 = sub i64 %15, %22
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* nonnull %6, i64 %61, i8 signext 61) #7
  br label %63

63:                                               ; preds = %59, %60
  %64 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %23, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  br label %65

65:                                               ; preds = %63, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6base3212Base32DecodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = tail call i8* @memchr(i8* %1, i32 61, i64 %2) #7
  %11 = icmp eq i8* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %9
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint i8* %1 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = sub i64 %2, %15
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %18)
  %19 = load i64, i64* %7, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %3, %17
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #7
  br label %80

23:                                               ; preds = %12, %17, %9
  %24 = phi i64 [ %19, %17 ], [ %2, %9 ], [ %2, %12 ]
  %25 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %24, i64 5) #7
  %26 = extractvalue { i64, i1 } %25, 1
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %23
  call void @llvm.trap() #7
  unreachable

28:                                               ; preds = %23
  %29 = extractvalue { i64, i1 } %25, 0
  %30 = lshr i64 %29, 3
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %5, i64 %30) #7
  %33 = load i8*, i8** %6, align 8
  %34 = load i64, i64* %7, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %69, label %37

37:                                               ; preds = %28, %64
  %38 = phi i8* [ %67, %64 ], [ %33, %28 ]
  %39 = phi i64 [ %66, %64 ], [ 16, %28 ]
  %40 = phi i16 [ %65, %64 ], [ 0, %28 ]
  %41 = load i8, i8* %38, align 1
  %42 = add i8 %41, -65
  %43 = icmp ult i8 %42, 26
  br i1 %43, label %50, label %44

44:                                               ; preds = %37
  %45 = add i8 %41, -50
  %46 = icmp ugt i8 %45, 5
  %47 = add i8 %41, -24
  %48 = icmp ugt i8 %47, 31
  %49 = or i1 %46, %48
  br i1 %49, label %71, label %50

50:                                               ; preds = %44, %37
  %51 = phi i8 [ %42, %37 ], [ %47, %44 ]
  %52 = zext i8 %51 to i32
  %53 = add i64 %39, -5
  %54 = trunc i64 %53 to i32
  %55 = shl i32 %52, %54
  %56 = trunc i32 %55 to i16
  %57 = or i16 %40, %56
  %58 = icmp ult i64 %53, 9
  br i1 %58, label %59, label %64

59:                                               ; preds = %50
  %60 = lshr i16 %57, 8
  %61 = trunc i16 %60 to i8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %5, i8 signext %61) #7
  %62 = shl i16 %57, 8
  %63 = add nuw nsw i64 %39, 3
  br label %64

64:                                               ; preds = %59, %50
  %65 = phi i16 [ %57, %50 ], [ %62, %59 ]
  %66 = phi i64 [ %53, %50 ], [ %63, %59 ]
  %67 = getelementptr inbounds i8, i8* %38, i64 1
  %68 = icmp eq i8* %67, %35
  br i1 %68, label %69, label %37

69:                                               ; preds = %64, %28
  %70 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %31, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #7
  br label %79

71:                                               ; preds = %44
  %72 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #7
  %73 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %78) #8
  br label %79

79:                                               ; preds = %69, %71, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br label %80

80:                                               ; preds = %79, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2002, i32 2000}
