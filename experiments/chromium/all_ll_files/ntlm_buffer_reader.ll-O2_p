; ModuleID = '../../net/ntlm/ntlm_buffer_reader.cc'
source_filename = "../../net/ntlm/ntlm_buffer_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ntlm::NtlmBufferReader" = type { %"class.base::span", i64 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.net::ntlm::SecurityBuffer" = type <{ i32, i16, [2 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.net::ntlm::AvPair" = type { %"class.std::__1::vector.1", i64, i32, i16, i16 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::ntlm::AvPair"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3net4ntlm16NtlmBufferReader8ReadUIntImEEbPT_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIN3net4ntlm6AvPairENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZN3net4ntlmL10kSignatureE = internal constant [8 x i8] c"NTLMSSP\00", align 1

@_ZN3net4ntlm16NtlmBufferReaderC1Ev = hidden unnamed_addr alias void (%"class.net::ntlm::NtlmBufferReader"*), void (%"class.net::ntlm::NtlmBufferReader"*)* @_ZN3net4ntlm16NtlmBufferReaderC2Ev
@_ZN3net4ntlm16NtlmBufferReaderC1EN4base4spanIKhLm18446744073709551615EEE = hidden unnamed_addr alias void (%"class.net::ntlm::NtlmBufferReader"*, i64, i8*), void (%"class.net::ntlm::NtlmBufferReader"*, i64, i8*)* @_ZN3net4ntlm16NtlmBufferReaderC2EN4base4spanIKhLm18446744073709551615EEE
@_ZN3net4ntlm16NtlmBufferReaderD1Ev = hidden unnamed_addr alias void (%"class.net::ntlm::NtlmBufferReader"*), void (%"class.net::ntlm::NtlmBufferReader"*)* @_ZN3net4ntlm16NtlmBufferReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm16NtlmBufferReaderC2Ev(%"class.net::ntlm::NtlmBufferReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::ntlm::NtlmBufferReader"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net4ntlm16NtlmBufferReaderC2EN4base4spanIKhLm18446744073709551615EEE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i64, i8*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  store i8* %2, i8** %5, align 8
  %6 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net4ntlm16NtlmBufferReaderD2Ev(%"class.net::ntlm::NtlmBufferReader"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net4ntlm16NtlmBufferReader7CanReadEm(%"class.net::ntlm::NtlmBufferReader"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = sub i64 %8, %1
  %12 = icmp uge i64 %11, %4
  br label %13

13:                                               ; preds = %2, %6, %10
  %14 = phi i1 [ true, %2 ], [ false, %6 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net4ntlm16NtlmBufferReader11CanReadFromEmm(%"class.net::ntlm::NtlmBufferReader"* nocapture readonly, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %2
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = sub i64 %7, %2
  %11 = icmp uge i64 %10, %1
  br label %12

12:                                               ; preds = %9, %5, %3
  %13 = phi i1 [ true, %3 ], [ false, %5 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader10ReadUInt16EPt(%"class.net::ntlm::NtlmBufferReader"* nocapture, i16* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1
  %8 = add i64 %6, -2
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %29

11:                                               ; preds = %2
  store i16 0, i16* %1, align 2
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load i64, i64* %3, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i16
  store i16 %17, i16* %1, align 2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %3, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  %24 = shl nuw i16 %23, 8
  %25 = load i16, i16* %1, align 2
  %26 = add i16 %24, %25
  store i16 %26, i16* %1, align 2
  %27 = load i64, i64* %3, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %3, align 8
  br label %29

29:                                               ; preds = %2, %11
  %30 = phi i1 [ false, %2 ], [ true, %11 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader10ReadUInt32EPj(%"class.net::ntlm::NtlmBufferReader"* nocapture, i32* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 3
  %8 = add i64 %6, -4
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %47

11:                                               ; preds = %2
  store i32 0, i32* %1, align 4
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load i64, i64* %3, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %1, align 4
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %3, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 8
  %25 = load i32, i32* %1, align 4
  %26 = add i32 %24, %25
  store i32 %26, i32* %1, align 4
  %27 = load i64, i64* %3, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %3, align 8
  %29 = load i8*, i8** %12, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 16
  %34 = load i32, i32* %1, align 4
  %35 = add i32 %33, %34
  store i32 %35, i32* %1, align 4
  %36 = load i64, i64* %3, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %3, align 8
  %38 = load i8*, i8** %12, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw i32 %41, 24
  %43 = load i32, i32* %1, align 4
  %44 = add i32 %42, %43
  store i32 %44, i32* %1, align 4
  %45 = load i64, i64* %3, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %3, align 8
  br label %47

47:                                               ; preds = %2, %11
  %48 = phi i1 [ false, %2 ], [ true, %11 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader10ReadUInt64EPm(%"class.net::ntlm::NtlmBufferReader"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader8ReadUIntImEEbPT_(%"class.net::ntlm::NtlmBufferReader"* %0, i64* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader8ReadUIntImEEbPT_(%"class.net::ntlm::NtlmBufferReader"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 7
  %8 = add i64 %6, -8
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %83

11:                                               ; preds = %2
  store i64 0, i64* %1, align 8
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load i64, i64* %3, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  store i64 %17, i64* %1, align 8
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %3, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %24, %25
  store i64 %26, i64* %1, align 8
  %27 = load i64, i64* %3, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %3, align 8
  %29 = load i8*, i8** %12, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 16
  %34 = load i64, i64* %1, align 8
  %35 = add i64 %33, %34
  store i64 %35, i64* %1, align 8
  %36 = load i64, i64* %3, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %3, align 8
  %38 = load i8*, i8** %12, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 24
  %43 = load i64, i64* %1, align 8
  %44 = add i64 %42, %43
  store i64 %44, i64* %1, align 8
  %45 = load i64, i64* %3, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %3, align 8
  %47 = load i8*, i8** %12, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = shl nuw nsw i64 %50, 32
  %52 = load i64, i64* %1, align 8
  %53 = add i64 %51, %52
  store i64 %53, i64* %1, align 8
  %54 = load i64, i64* %3, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %3, align 8
  %56 = load i8*, i8** %12, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = shl nuw nsw i64 %59, 40
  %61 = load i64, i64* %1, align 8
  %62 = add i64 %60, %61
  store i64 %62, i64* %1, align 8
  %63 = load i64, i64* %3, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %3, align 8
  %65 = load i8*, i8** %12, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 48
  %70 = load i64, i64* %1, align 8
  %71 = add i64 %69, %70
  store i64 %71, i64* %1, align 8
  %72 = load i64, i64* %3, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %3, align 8
  %74 = load i8*, i8** %12, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = shl nuw i64 %77, 56
  %79 = load i64, i64* %1, align 8
  %80 = add i64 %78, %79
  store i64 %80, i64* %1, align 8
  %81 = load i64, i64* %3, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %3, align 8
  br label %83

83:                                               ; preds = %11, %2
  %84 = phi i1 [ false, %2 ], [ true, %11 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader9ReadFlagsEPNS0_14NegotiateFlagsE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 3
  %8 = add i64 %6, -4
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %36

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add i64 %4, 1
  store i64 %17, i64* %3, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %16
  %23 = add i64 %4, 2
  store i64 %23, i64* %3, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 16
  %28 = or i32 %22, %27
  %29 = add i64 %4, 3
  store i64 %29, i64* %3, align 8
  %30 = getelementptr inbounds i8, i8* %13, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 %32, 24
  %34 = or i32 %28, %33
  %35 = add i64 %4, 4
  store i64 %35, i64* %3, align 8
  store i32 %34, i32* %1, align 4
  br label %36

36:                                               ; preds = %2, %11
  %37 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader9ReadBytesEN4base4spanIhLm18446744073709551615EEE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp uge i64 %9, %1
  %11 = sub i64 %9, %1
  %12 = icmp uge i64 %11, %5
  %13 = and i1 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %17, i64 %1, i1 false)
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, %1
  store i64 %19, i64* %4, align 8
  br label %20

20:                                               ; preds = %7, %3, %14
  %21 = phi i1 [ true, %14 ], [ true, %3 ], [ false, %7 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader13ReadBytesFromERKNS0_14SecurityBufferEN4base4spanIhLm18446744073709551615EEE(%"class.net::ntlm::NtlmBufferReader"* nocapture readonly, %"struct.net::ntlm::SecurityBuffer"* nocapture readonly dereferenceable(8), i64, i8*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.net::ntlm::SecurityBuffer"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = lshr i64 %6, 32
  %8 = and i64 %7, 65535
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = and i64 %6, 4294967295
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp uge i64 %13, %8
  %15 = sub i64 %13, %8
  %16 = icmp uge i64 %15, %11
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %10, %4
  %19 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %1, i64 0, i32 1
  %20 = load i16, i16* %19, align 4
  %21 = zext i16 %20 to i64
  %22 = icmp ugt i64 %21, %2
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = and i64 %6, 4294967295
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %29, i64 %21, i1 false)
  br label %30

30:                                               ; preds = %10, %23, %18, %25
  %31 = phi i1 [ true, %25 ], [ false, %18 ], [ true, %23 ], [ false, %10 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader25ReadPayloadAsBufferReaderERKNS0_14SecurityBufferEPS1_(%"class.net::ntlm::NtlmBufferReader"* nocapture readonly, %"struct.net::ntlm::SecurityBuffer"* nocapture readonly dereferenceable(8), %"class.net::ntlm::NtlmBufferReader"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::ntlm::SecurityBuffer"* %1 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = lshr i64 %5, 32
  %7 = and i64 %6, 65535
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = and i64 %5, 4294967295
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp uge i64 %12, %7
  %14 = sub i64 %12, %7
  %15 = icmp uge i64 %14, %10
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %28

17:                                               ; preds = %9, %3
  %18 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = and i64 %5, 4294967295
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %1, i64 0, i32 1
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %2, i64 0, i32 0, i32 1
  store i8* %21, i8** %26, align 8
  %27 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %2, i64 0, i32 1
  store i64 0, i64* %27, align 8
  br label %28

28:                                               ; preds = %9, %17
  %29 = phi i1 [ true, %17 ], [ false, %9 ]
  ret i1 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18ReadSecurityBufferEPNS0_14SecurityBufferE(%"class.net::ntlm::NtlmBufferReader"* nocapture, %"struct.net::ntlm::SecurityBuffer"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, 1
  %9 = add i64 %7, -2
  %10 = icmp uge i64 %9, %5
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %77

12:                                               ; preds = %2
  store i16 0, i16* %3, align 2
  %13 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = load i64, i64* %4, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i16
  store i16 %18, i16* %3, align 2
  %19 = load i64, i64* %4, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %4, align 8
  %21 = load i8*, i8** %13, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw i16 %24, 8
  %26 = load i16, i16* %3, align 2
  %27 = add i16 %25, %26
  store i16 %27, i16* %3, align 2
  %28 = load i64, i64* %4, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %4, align 8
  %30 = load i64, i64* %6, align 8
  %31 = icmp ugt i64 %30, 1
  %32 = add i64 %30, -2
  %33 = icmp uge i64 %32, %29
  %34 = and i1 %31, %33
  br i1 %34, label %35, label %77

35:                                               ; preds = %12
  %36 = add i64 %28, 3
  store i64 %36, i64* %4, align 8
  %37 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %1, i64 0, i32 0
  %38 = icmp ugt i64 %30, 3
  %39 = add i64 %30, -4
  %40 = icmp uge i64 %39, %36
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %77

42:                                               ; preds = %35
  store i32 0, i32* %37, align 4
  %43 = load i8*, i8** %13, align 8
  %44 = load i64, i64* %4, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  store i32 %47, i32* %37, align 4
  %48 = load i64, i64* %4, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %4, align 8
  %50 = load i8*, i8** %13, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 8
  %55 = load i32, i32* %37, align 4
  %56 = add i32 %54, %55
  store i32 %56, i32* %37, align 4
  %57 = load i64, i64* %4, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %4, align 8
  %59 = load i8*, i8** %13, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = load i32, i32* %37, align 4
  %65 = add i32 %63, %64
  store i32 %65, i32* %37, align 4
  %66 = load i64, i64* %4, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %4, align 8
  %68 = load i8*, i8** %13, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw i32 %71, 24
  %73 = load i32, i32* %37, align 4
  %74 = add i32 %72, %73
  store i32 %74, i32* %37, align 4
  %75 = load i64, i64* %4, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %4, align 8
  br label %77

77:                                               ; preds = %42, %35, %12, %2
  %78 = phi i1 [ false, %2 ], [ false, %12 ], [ false, %35 ], [ true, %42 ]
  ret i1 %78
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader9SkipBytesEm(%"class.net::ntlm::NtlmBufferReader"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp uge i64 %8, %1
  %10 = sub i64 %8, %1
  %11 = icmp uge i64 %10, %4
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %6, %2
  %14 = add i64 %4, %1
  store i64 %14, i64* %3, align 8
  br label %15

15:                                               ; preds = %6, %13
  %16 = phi i1 [ true, %13 ], [ false, %6 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader16ReadAvPairHeaderEPNS0_14TargetInfoAvIdEPt(%"class.net::ntlm::NtlmBufferReader"* nocapture, i16* nocapture, i16* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, 3
  %9 = add i64 %7, -4
  %10 = icmp uge i64 %9, %5
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %48

12:                                               ; preds = %3
  %13 = add i64 %7, -2
  %14 = icmp ult i64 %13, %5
  br i1 %14, label %46, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %5
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i16
  %21 = add i64 %5, 1
  store i64 %21, i64* %4, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i16
  %25 = shl nuw i16 %24, 8
  %26 = or i16 %25, %20
  %27 = add i64 %5, 2
  store i64 %27, i64* %4, align 8
  %28 = icmp ult i64 %13, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %15
  store i16 0, i16* %2, align 2
  %30 = load i8*, i8** %16, align 8
  %31 = load i64, i64* %4, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  store i16 %34, i16* %2, align 2
  %35 = load i64, i64* %4, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %4, align 8
  %37 = load i8*, i8** %16, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw i16 %40, 8
  %42 = load i16, i16* %2, align 2
  %43 = add i16 %41, %42
  store i16 %43, i16* %2, align 2
  %44 = load i64, i64* %4, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %4, align 8
  br label %46

46:                                               ; preds = %15, %12, %29
  %47 = phi i16 [ -21846, %12 ], [ %26, %15 ], [ %26, %29 ]
  store i16 %47, i16* %1, align 2
  br label %48

48:                                               ; preds = %3, %46
  %49 = phi i1 [ true, %46 ], [ false, %3 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader14ReadTargetInfoEmPNSt3__16vectorINS0_6AvPairENS2_9allocatorIS4_EEEE(%"class.net::ntlm::NtlmBufferReader"*, i64, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.net::ntlm::AvPair", align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %164, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %164, label %12

12:                                               ; preds = %6
  %13 = sub i64 %10, %1
  %14 = icmp ult i64 %13, %8
  %15 = icmp ult i64 %1, 4
  %16 = or i1 %15, %14
  br i1 %16, label %164, label %17

17:                                               ; preds = %12
  %18 = add i64 %8, %1
  %19 = icmp ult i64 %8, %18
  br i1 %19, label %20, label %157

20:                                               ; preds = %17
  %21 = bitcast %"struct.net::ntlm::AvPair"* %4 to i8*
  %22 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %4, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %4, i64 0, i32 4
  %24 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %4, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %4, i64 0, i32 2
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.net::ntlm::AvPair"** %28 to i64*
  br label %31

31:                                               ; preds = %20, %154
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 40, i1 false)
  call void @_ZN3net4ntlm6AvPairC1Ev(%"struct.net::ntlm::AvPair"* nonnull %4) #14
  %32 = load i64, i64* %7, align 8
  %33 = load i64, i64* %9, align 8
  %34 = icmp ugt i64 %33, 3
  %35 = add i64 %33, -4
  %36 = icmp uge i64 %35, %32
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %151

38:                                               ; preds = %31
  %39 = add i64 %33, -2
  %40 = icmp ult i64 %39, %32
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = load i8*, i8** %24, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %32
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  %46 = add i64 %32, 1
  store i64 %46, i64* %7, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw i16 %49, 8
  %51 = or i16 %50, %45
  %52 = add i64 %32, 2
  store i64 %52, i64* %7, align 8
  %53 = icmp ult i64 %39, %52
  br i1 %53, label %65, label %54

54:                                               ; preds = %41
  store i16 0, i16* %23, align 2
  %55 = getelementptr inbounds i8, i8* %42, i64 %52
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  store i16 %57, i16* %23, align 2
  %58 = add i64 %32, 3
  store i64 %58, i64* %7, align 8
  %59 = getelementptr inbounds i8, i8* %42, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i16
  %62 = shl nuw i16 %61, 8
  %63 = or i16 %62, %57
  store i16 %63, i16* %23, align 2
  %64 = add i64 %32, 4
  store i64 %64, i64* %7, align 8
  br label %69

65:                                               ; preds = %41, %38
  %66 = phi i64 [ %52, %41 ], [ %32, %38 ]
  %67 = phi i16 [ %51, %41 ], [ -21846, %38 ]
  %68 = load i16, i16* %23, align 2
  br label %69

69:                                               ; preds = %65, %54
  %70 = phi i16 [ %68, %65 ], [ %63, %54 ]
  %71 = phi i64 [ %66, %65 ], [ %64, %54 ]
  %72 = phi i16 [ %67, %65 ], [ %51, %54 ]
  store i16 %72, i16* %22, align 4
  %73 = zext i16 %70 to i64
  %74 = icmp eq i16 %70, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %69
  %76 = icmp uge i64 %33, %73
  %77 = sub i64 %33, %73
  %78 = icmp uge i64 %77, %71
  %79 = and i1 %76, %78
  br i1 %79, label %80, label %150

80:                                               ; preds = %75, %69
  %81 = load i8*, i8** %24, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %71
  %83 = getelementptr inbounds i8, i8* %82, i64 %73
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"* nonnull %25, i8* %82, i8* %83)
  %84 = load i16, i16* %22, align 4
  switch i16 %84, label %127 [
    i16 0, label %85
    i16 6, label %88
    i16 7, label %122
    i16 10, label %150
    i16 9, label %150
  ]

85:                                               ; preds = %80
  %86 = load i16, i16* %23, align 2
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %151, label %150

88:                                               ; preds = %80
  %89 = load i16, i16* %23, align 2
  %90 = icmp eq i16 %89, 4
  br i1 %90, label %91, label %150

91:                                               ; preds = %88
  %92 = load i64, i64* %7, align 8
  %93 = load i64, i64* %9, align 8
  %94 = icmp ugt i64 %93, 3
  %95 = add i64 %93, -4
  %96 = icmp uge i64 %95, %92
  %97 = and i1 %94, %96
  br i1 %97, label %98, label %150

98:                                               ; preds = %91
  store i32 0, i32* %27, align 8
  %99 = load i8*, i8** %24, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 %92
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  store i32 %102, i32* %27, align 8
  %103 = add i64 %92, 1
  store i64 %103, i64* %7, align 8
  %104 = getelementptr inbounds i8, i8* %99, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw nsw i32 %106, 8
  %108 = or i32 %107, %102
  store i32 %108, i32* %27, align 8
  %109 = add i64 %92, 2
  store i64 %109, i64* %7, align 8
  %110 = getelementptr inbounds i8, i8* %99, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw nsw i32 %112, 16
  %114 = or i32 %113, %108
  store i32 %114, i32* %27, align 8
  %115 = add i64 %92, 3
  store i64 %115, i64* %7, align 8
  %116 = getelementptr inbounds i8, i8* %99, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = shl nuw i32 %118, 24
  %120 = or i32 %119, %114
  store i32 %120, i32* %27, align 8
  %121 = add i64 %92, 4
  br label %140

122:                                              ; preds = %80
  %123 = load i16, i16* %23, align 2
  %124 = icmp eq i16 %123, 8
  br i1 %124, label %125, label %150

125:                                              ; preds = %122
  %126 = call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader8ReadUIntImEEbPT_(%"class.net::ntlm::NtlmBufferReader"* %0, i64* %26) #14
  br i1 %126, label %142, label %150

127:                                              ; preds = %80
  %128 = load i16, i16* %23, align 2
  %129 = zext i16 %128 to i64
  %130 = load i64, i64* %7, align 8
  %131 = icmp eq i16 %128, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %127
  %133 = load i64, i64* %9, align 8
  %134 = icmp uge i64 %133, %129
  %135 = sub i64 %133, %129
  %136 = icmp uge i64 %135, %130
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %150

138:                                              ; preds = %127, %132
  %139 = add i64 %130, %129
  br label %140

140:                                              ; preds = %98, %138
  %141 = phi i64 [ %139, %138 ], [ %121, %98 ]
  store i64 %141, i64* %7, align 8
  br label %142

142:                                              ; preds = %140, %125
  %143 = load %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"** %28, align 8
  %144 = load %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"** %29, align 8
  %145 = icmp ult %"struct.net::ntlm::AvPair"* %143, %144
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  call void @_ZN3net4ntlm6AvPairC1EOS1_(%"struct.net::ntlm::AvPair"* %143, %"struct.net::ntlm::AvPair"* nonnull dereferenceable(40) %4) #14
  %147 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %143, i64 1
  %148 = ptrtoint %"struct.net::ntlm::AvPair"* %147 to i64
  store i64 %148, i64* %30, align 8
  br label %154

149:                                              ; preds = %142
  call void @_ZNSt3__16vectorIN3net4ntlm6AvPairENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %2, %"struct.net::ntlm::AvPair"* nonnull dereferenceable(40) %4) #14
  br label %154

150:                                              ; preds = %75, %88, %122, %125, %80, %80, %91, %132, %85
  call void @_ZN3net4ntlm6AvPairD1Ev(%"struct.net::ntlm::AvPair"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #14
  br label %164

151:                                              ; preds = %31, %85
  %152 = phi i8 [ 1, %85 ], [ 0, %31 ]
  call void @_ZN3net4ntlm6AvPairD1Ev(%"struct.net::ntlm::AvPair"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #14
  %153 = load i64, i64* %7, align 8
  br label %157

154:                                              ; preds = %149, %146
  call void @_ZN3net4ntlm6AvPairD1Ev(%"struct.net::ntlm::AvPair"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #14
  %155 = load i64, i64* %7, align 8
  %156 = icmp ult i64 %155, %18
  br i1 %156, label %31, label %157

157:                                              ; preds = %154, %17, %151
  %158 = phi i64 [ %153, %151 ], [ %8, %17 ], [ %155, %154 ]
  %159 = phi i8 [ %152, %151 ], [ 0, %17 ], [ 0, %154 ]
  %160 = icmp eq i64 %158, %18
  %161 = and i8 %159, 1
  %162 = icmp ne i8 %161, 0
  %163 = and i1 %162, %160
  ret i1 %163

164:                                              ; preds = %6, %150, %12, %3
  %165 = phi i1 [ true, %3 ], [ false, %12 ], [ false, %150 ], [ false, %6 ]
  ret i1 %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3net4ntlm6AvPairC1Ev(%"struct.net::ntlm::AvPair"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #14
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #14
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #15
  %46 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #14
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #16
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #15
  %61 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #14
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net4ntlm6AvPairD1Ev(%"struct.net::ntlm::AvPair"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader21ReadTargetInfoPayloadEPNSt3__16vectorINS0_6AvPairENS2_9allocatorIS4_EEEE(%"class.net::ntlm::NtlmBufferReader"* nocapture, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.net::ntlm::SecurityBuffer"*
  %5 = alloca %"class.net::ntlm::NtlmBufferReader", align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %4, i64 0, i32 1
  store i64 -6149102341220990976, i64* %3, align 8
  %8 = call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18ReadSecurityBufferEPNS0_14SecurityBufferE(%"class.net::ntlm::NtlmBufferReader"* %0, %"struct.net::ntlm::SecurityBuffer"* nonnull %4)
  br i1 %8, label %9, label %39

9:                                                ; preds = %2
  %10 = bitcast %"class.net::ntlm::NtlmBufferReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #14
  %14 = load i64, i64* %3, align 8
  %15 = lshr i64 %14, 32
  %16 = and i64 %15, 65535
  %17 = icmp eq i64 %16, 0
  %18 = and i64 %14, 4294967295
  br i1 %17, label %26, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp uge i64 %21, %16
  %23 = sub i64 %21, %16
  %24 = icmp uge i64 %23, %18
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %37

26:                                               ; preds = %9, %19
  %27 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %18
  %30 = load i16, i16* %7, align 4
  %31 = zext i16 %30 to i64
  store i64 %31, i64* %11, align 8
  store i8* %29, i8** %12, align 8
  store i64 0, i64* %13, align 8
  %32 = call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader14ReadTargetInfoEmPNSt3__16vectorINS0_6AvPairENS2_9allocatorIS4_EEEE(%"class.net::ntlm::NtlmBufferReader"* nonnull %5, i64 %31, %"class.std::__1::vector"* %1)
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = load i64, i64* %13, align 8
  %35 = load i64, i64* %11, align 8
  %36 = icmp uge i64 %34, %35
  br label %37

37:                                               ; preds = %19, %26, %33
  %38 = phi i1 [ %36, %33 ], [ false, %26 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  br label %39

39:                                               ; preds = %2, %37
  %40 = phi i1 [ %38, %37 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader15ReadMessageTypeEPNS0_11MessageTypeE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 3
  %8 = add i64 %6, -4
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %38

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add i64 %4, 1
  store i64 %17, i64* %3, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %16
  %23 = add i64 %4, 2
  store i64 %23, i64* %3, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 16
  %28 = or i32 %22, %27
  %29 = add i64 %4, 3
  store i64 %29, i64* %3, align 8
  %30 = getelementptr inbounds i8, i8* %13, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 %32, 24
  %34 = or i32 %28, %33
  %35 = add i64 %4, 4
  store i64 %35, i64* %3, align 8
  store i32 %34, i32* %1, align 4
  %36 = add i32 %34, -1
  %37 = icmp ult i32 %36, 3
  br label %38

38:                                               ; preds = %2, %11
  %39 = phi i1 [ %37, %11 ], [ false, %2 ]
  ret i1 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18SkipSecurityBufferEv(%"class.net::ntlm::NtlmBufferReader"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 7
  %7 = add i64 %5, -8
  %8 = icmp uge i64 %7, %3
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = add i64 %3, 8
  store i64 %11, i64* %2, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ true, %10 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader32SkipSecurityBufferWithValidationEv(%"class.net::ntlm::NtlmBufferReader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.net::ntlm::SecurityBuffer"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  store i64 -6149102341220990976, i64* %2, align 8
  %5 = call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18ReadSecurityBufferEPNS0_14SecurityBufferE(%"class.net::ntlm::NtlmBufferReader"* %0, %"struct.net::ntlm::SecurityBuffer"* nonnull %3)
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = load i64, i64* %2, align 8
  %8 = lshr i64 %7, 32
  %9 = and i64 %7, 4294967295
  %10 = and i64 %8, 65535
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %10
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = sub i64 %14, %10
  %18 = icmp uge i64 %17, %9
  br label %19

19:                                               ; preds = %16, %12, %6, %1
  %20 = phi i1 [ false, %1 ], [ true, %6 ], [ false, %12 ], [ %18, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret i1 %20
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader14MatchSignatureEv(%"class.net::ntlm::NtlmBufferReader"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 7
  %7 = add i64 %5, -8
  %8 = icmp uge i64 %7, %3
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %3
  %14 = tail call i32 @bcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN3net4ntlmL10kSignatureE, i64 0, i64 0), i8* %13, i64 8)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %10
  %17 = add i64 %3, 8
  store i64 %17, i64* %2, align 8
  br label %18

18:                                               ; preds = %1, %10, %16
  %19 = phi i1 [ true, %16 ], [ false, %10 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader16MatchMessageTypeENS0_11MessageTypeE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 3
  %8 = add i64 %6, -4
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add i64 %4, 1
  store i64 %17, i64* %3, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %16
  %23 = add i64 %4, 2
  store i64 %23, i64* %3, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 16
  %28 = or i32 %22, %27
  %29 = add i64 %4, 3
  store i64 %29, i64* %3, align 8
  %30 = getelementptr inbounds i8, i8* %13, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 %32, 24
  %34 = or i32 %28, %33
  %35 = add i64 %4, 4
  store i64 %35, i64* %3, align 8
  %36 = add i32 %34, -1
  %37 = icmp ult i32 %36, 3
  %38 = icmp eq i32 %34, %1
  %39 = and i1 %38, %37
  ret i1 %39

40:                                               ; preds = %2
  ret i1 false
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18MatchMessageHeaderENS0_11MessageTypeE(%"class.net::ntlm::NtlmBufferReader"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 7
  %8 = add i64 %6, -8
  %9 = icmp uge i64 %8, %4
  %10 = and i1 %7, %9
  br i1 %10, label %11, label %48

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = tail call i32 @bcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN3net4ntlmL10kSignatureE, i64 0, i64 0), i8* %14, i64 8) #14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = add i64 %4, 8
  store i64 %18, i64* %3, align 8
  %19 = add i64 %6, -4
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %48, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %13, i64 %18
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add i64 %4, 9
  store i64 %25, i64* %3, align 8
  %26 = getelementptr inbounds i8, i8* %13, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 8
  %30 = or i32 %29, %24
  %31 = add i64 %4, 10
  store i64 %31, i64* %3, align 8
  %32 = getelementptr inbounds i8, i8* %13, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 16
  %36 = or i32 %30, %35
  %37 = add i64 %4, 11
  store i64 %37, i64* %3, align 8
  %38 = getelementptr inbounds i8, i8* %13, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw i32 %40, 24
  %42 = or i32 %36, %41
  %43 = add i64 %4, 12
  store i64 %43, i64* %3, align 8
  %44 = add i32 %42, -1
  %45 = icmp ult i32 %44, 3
  %46 = icmp eq i32 %42, %1
  %47 = and i1 %46, %45
  br label %48

48:                                               ; preds = %17, %2, %11, %21
  %49 = phi i1 [ %47, %21 ], [ false, %17 ], [ false, %11 ], [ false, %2 ]
  ret i1 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader10MatchZerosEm(%"class.net::ntlm::NtlmBufferReader"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp uge i64 %8, %1
  %10 = sub i64 %8, %1
  %11 = icmp uge i64 %10, %4
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %4
  br label %19

17:                                               ; preds = %19
  %18 = icmp eq i64 %24, %1
  br i1 %18, label %25, label %19

19:                                               ; preds = %17, %13
  %20 = phi i64 [ 0, %13 ], [ %24, %17 ]
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  %24 = add nuw i64 %20, 1
  br i1 %23, label %17, label %27

25:                                               ; preds = %17, %2
  %26 = add i64 %4, %1
  store i64 %26, i64* %3, align 8
  br label %27

27:                                               ; preds = %19, %6, %25
  %28 = phi i1 [ true, %25 ], [ false, %6 ], [ false, %19 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferReader24MatchEmptySecurityBufferEv(%"class.net::ntlm::NtlmBufferReader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.net::ntlm::SecurityBuffer"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"struct.net::ntlm::SecurityBuffer", %"struct.net::ntlm::SecurityBuffer"* %3, i64 0, i32 1
  store i64 -6149102341220990976, i64* %2, align 8
  %6 = call zeroext i1 @_ZN3net4ntlm16NtlmBufferReader18ReadSecurityBufferEPNS0_14SecurityBufferE(%"class.net::ntlm::NtlmBufferReader"* %0, %"struct.net::ntlm::SecurityBuffer"* nonnull %3)
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = bitcast i64* %2 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %10
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = load i16, i16* %5, align 4
  %16 = icmp eq i16 %15, 0
  br label %17

17:                                               ; preds = %7, %14, %1
  %18 = phi i1 [ false, %7 ], [ false, %1 ], [ %16, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret i1 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net4ntlm16NtlmBufferReader9SetCursorEm(%"class.net::ntlm::NtlmBufferReader"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferReader", %"class.net::ntlm::NtlmBufferReader"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net4ntlm6AvPairENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.net::ntlm::AvPair"* dereferenceable(40)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ntlm::AvPair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ntlm::AvPair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"struct.net::ntlm::AvPair"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::ntlm::AvPair"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %33, i64 %32
  %36 = ptrtoint %"struct.net::ntlm::AvPair"* %35 to i64
  tail call void @_ZN3net4ntlm6AvPairC1EOS1_(%"struct.net::ntlm::AvPair"* %34, %"struct.net::ntlm::AvPair"* dereferenceable(40) %1) #14
  %37 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %34, i64 1
  %38 = ptrtoint %"struct.net::ntlm::AvPair"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"** %39, align 8
  %41 = load %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"** %3, align 8
  %42 = icmp eq %"struct.net::ntlm::AvPair"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.net::ntlm::AvPair"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.net::ntlm::AvPair"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.net::ntlm::AvPair"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %47, i64 -1
  tail call void @_ZN3net4ntlm6AvPairC1EOS1_(%"struct.net::ntlm::AvPair"* %48, %"struct.net::ntlm::AvPair"* dereferenceable(40) %49) #14
  %50 = icmp eq %"struct.net::ntlm::AvPair"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.net::ntlm::AvPair"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.net::ntlm::AvPair"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.net::ntlm::AvPair"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.net::ntlm::AvPair"*
  %60 = icmp eq %"struct.net::ntlm::AvPair"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.net::ntlm::AvPair"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %62, i64 -1
  tail call void @_ZN3net4ntlm6AvPairD1Ev(%"struct.net::ntlm::AvPair"* %63) #14
  %64 = icmp eq %"struct.net::ntlm::AvPair"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3net4ntlm6AvPairC1EOS1_(%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"* dereferenceable(40)) unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
