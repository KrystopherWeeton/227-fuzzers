; ModuleID = '../../chrome/browser/storage/storage_notification_service_impl.cc'
source_filename = "../../chrome/browser/storage/storage_notification_service_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.StorageNotificationServiceImpl = type { %"class.content::StorageNotificationService", %class.KeyedService, %"class.base::TimeTicks" }
%"class.content::StorageNotificationService" = type { i32 (...)** }
%class.KeyedService = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZTVN7content26StorageNotificationServiceE = comdat any

@_ZTV30StorageNotificationServiceImpl = hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.StorageNotificationServiceImpl*, %"class.url::Origin"*)* @_ZN30StorageNotificationServiceImpl36MaybeShowStoragePressureNotificationEN3url6OriginE to i8*), i8* bitcast (void (%class.StorageNotificationServiceImpl*)* @_ZN30StorageNotificationServiceImplD2Ev to i8*), i8* bitcast (void (%class.StorageNotificationServiceImpl*)* @_ZN30StorageNotificationServiceImplD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%class.StorageNotificationServiceImpl*)* @_ZThn8_N30StorageNotificationServiceImplD1Ev to i8*), i8* bitcast (void (%class.StorageNotificationServiceImpl*)* @_ZThn8_N30StorageNotificationServiceImplD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*)] }, align 8
@_ZN8switches36kStoragePressureNotificationIntervalE = external constant [0 x i8], align 1
@_ZTVN7content26StorageNotificationServiceE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN30StorageNotificationServiceImplC1Ev = hidden unnamed_addr alias void (%class.StorageNotificationServiceImpl*), void (%class.StorageNotificationServiceImpl*)* @_ZN30StorageNotificationServiceImplC2Ev
@_ZN30StorageNotificationServiceImplD1Ev = hidden unnamed_addr alias void (%class.StorageNotificationServiceImpl*), void (%class.StorageNotificationServiceImpl*)* @_ZN30StorageNotificationServiceImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN30StorageNotificationServiceImpl36MaybeShowStoragePressureNotificationEN3url6OriginE(%class.StorageNotificationServiceImpl* nocapture, %"class.url::Origin"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %51, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %11 = load i64, i64* %6, align 8
  %12 = sub nsw i64 %10, %11
  %13 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #6
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  store i32 -1431655766, i32* %3, align 4
  %15 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches36kStoragePressureNotificationIntervalE, i64 0, i64 0)) #6
  br i1 %15, label %16, label %47

16:                                               ; preds = %9
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #6
  %20 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches36kStoragePressureNotificationIntervalE, i64 0, i64 0)) #6
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches36kStoragePressureNotificationIntervalE, i64 0, i64 0), i64 %20) #6
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %18, align 8
  %26 = select i1 %24, i8* %25, i8* %17
  %27 = load i64, i64* %19, align 8
  %28 = zext i8 %23 to i64
  %29 = select i1 %24, i64 %27, i64 %28
  %30 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %26, i64 %29, i32* nonnull %3) #6
  %31 = load i32, i32* %3, align 4
  %32 = icmp sgt i32 %31, -1
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %16
  %35 = icmp eq i32 %31, 2147483647
  %36 = sext i32 %31 to i64
  %37 = mul nsw i64 %36, 60000000
  %38 = select i1 %35, i64 9223372036854775807, i64 %37
  br label %39

39:                                               ; preds = %34, %16
  %40 = phi i64 [ %38, %34 ], [ undef, %16 ]
  %41 = phi i1 [ false, %34 ], [ true, %16 ]
  %42 = load i8, i8* %22, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %45) #7
  br label %46

46:                                               ; preds = %44, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #6
  br i1 %41, label %47, label %48

47:                                               ; preds = %46, %9
  br label %48

48:                                               ; preds = %46, %47
  %49 = phi i64 [ 86400000000, %47 ], [ %40, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  %50 = icmp slt i64 %12, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %2, %48
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %5, %"class.url::Origin"* dereferenceable(80) %1) #6
  call void @_ZN6chrome25ShowStoragePressureBubbleEN3url6OriginE(%"class.url::Origin"* nonnull %5) #6
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #6
  %52 = call i64 @_ZN4base9TimeTicks3NowEv() #6
  store i64 %52, i64* %6, align 8
  br label %53

53:                                               ; preds = %48, %51
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6chrome25ShowStoragePressureBubbleEN3url6OriginE(%"class.url::Origin"*) local_unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN30StorageNotificationServiceImplC2Ev(%class.StorageNotificationServiceImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN7content26StorageNotificationServiceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 1
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %3) #6
  %4 = bitcast %class.StorageNotificationServiceImpl* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTV30StorageNotificationServiceImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTV30StorageNotificationServiceImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %5, align 8
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN30StorageNotificationServiceImplD2Ev(%class.StorageNotificationServiceImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 1
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N30StorageNotificationServiceImplD1Ev(%class.StorageNotificationServiceImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 -1, i32 2
  %3 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 1
  %4 = bitcast %"class.base::TimeTicks"* %3 to %class.KeyedService*
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN30StorageNotificationServiceImplD0Ev(%class.StorageNotificationServiceImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 0, i32 1
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %2) #6
  %3 = bitcast %class.StorageNotificationServiceImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N30StorageNotificationServiceImplD0Ev(%class.StorageNotificationServiceImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StorageNotificationServiceImpl, %class.StorageNotificationServiceImpl* %0, i64 -1, i32 2
  %3 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 1
  %4 = bitcast %"class.base::TimeTicks"* %3 to %class.KeyedService*
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %4) #6
  %5 = bitcast %"class.base::TimeTicks"* %2 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
