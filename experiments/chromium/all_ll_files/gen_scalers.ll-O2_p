; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_scale/generic/gen_scalers.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_scale/generic/gen_scalers.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_horizontal_line_5_4_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %4, %6
  %7 = phi i8* [ %43, %6 ], [ %0, %4 ]
  %8 = phi i8* [ %44, %6 ], [ %2, %4 ]
  %9 = phi i32 [ %45, %6 ], [ 0, %4 ]
  %10 = load i8, i8* %7, align 1
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %7, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %7, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %7, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  store i8 %10, i8* %8, align 1
  %23 = mul nuw nsw i32 %13, 192
  %24 = shl nuw nsw i32 %16, 6
  %25 = add nuw nsw i32 %23, 128
  %26 = add nuw nsw i32 %25, %24
  %27 = lshr i32 %26, 8
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %28, i8* %29, align 1
  %30 = add nuw nsw i32 %19, %16
  %31 = shl nuw nsw i32 %30, 7
  %32 = add nuw nsw i32 %31, 128
  %33 = lshr i32 %32, 8
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %34, i8* %35, align 1
  %36 = shl nuw nsw i32 %19, 6
  %37 = mul nuw nsw i32 %22, 192
  %38 = add nuw nsw i32 %36, 128
  %39 = add nuw nsw i32 %38, %37
  %40 = lshr i32 %39, 8
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %41, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %7, i64 5
  %44 = getelementptr inbounds i8, i8* %8, i64 4
  %45 = add i32 %9, 5
  %46 = icmp ult i32 %45, %1
  br i1 %46, label %6, label %47

47:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_vertical_band_5_4_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %61, label %7

7:                                                ; preds = %5
  %8 = zext i32 %1 to i64
  %9 = shl i32 %1, 1
  %10 = zext i32 %9 to i64
  %11 = mul i32 %1, 3
  %12 = zext i32 %11 to i64
  %13 = shl i32 %1, 2
  %14 = zext i32 %13 to i64
  %15 = zext i32 %3 to i64
  %16 = shl i32 %3, 1
  %17 = zext i32 %16 to i64
  %18 = mul i32 %3, 3
  %19 = zext i32 %18 to i64
  br label %20

20:                                               ; preds = %20, %7
  %21 = phi i8* [ %0, %7 ], [ %57, %20 ]
  %22 = phi i8* [ %2, %7 ], [ %58, %20 ]
  %23 = phi i32 [ 0, %7 ], [ %59, %20 ]
  %24 = load i8, i8* %21, align 1
  %25 = getelementptr inbounds i8, i8* %21, i64 %8
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = getelementptr inbounds i8, i8* %21, i64 %10
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds i8, i8* %21, i64 %12
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8, i8* %21, i64 %14
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  store i8 %24, i8* %22, align 1
  %37 = mul nuw nsw i32 %27, 192
  %38 = shl nuw nsw i32 %30, 6
  %39 = add nuw nsw i32 %37, 128
  %40 = add nuw nsw i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds i8, i8* %22, i64 %15
  store i8 %42, i8* %43, align 1
  %44 = add nuw nsw i32 %33, %30
  %45 = shl nuw nsw i32 %44, 7
  %46 = add nuw nsw i32 %45, 128
  %47 = lshr i32 %46, 8
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds i8, i8* %22, i64 %17
  store i8 %48, i8* %49, align 1
  %50 = shl nuw nsw i32 %33, 6
  %51 = mul nuw nsw i32 %36, 192
  %52 = add nuw nsw i32 %50, 128
  %53 = add nuw nsw i32 %52, %51
  %54 = lshr i32 %53, 8
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds i8, i8* %22, i64 %19
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds i8, i8* %21, i64 1
  %58 = getelementptr inbounds i8, i8* %22, i64 1
  %59 = add nuw i32 %23, 1
  %60 = icmp eq i32 %59, %4
  br i1 %60, label %61, label %20

61:                                               ; preds = %20, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_horizontal_line_5_3_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %4, %6
  %7 = phi i8* [ %37, %6 ], [ %0, %4 ]
  %8 = phi i8* [ %38, %6 ], [ %2, %4 ]
  %9 = phi i32 [ %39, %6 ], [ 0, %4 ]
  %10 = load i8, i8* %7, align 1
  %11 = getelementptr inbounds i8, i8* %7, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds i8, i8* %7, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds i8, i8* %7, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds i8, i8* %7, i64 4
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  store i8 %10, i8* %8, align 1
  %23 = mul nuw nsw i32 %13, 85
  %24 = mul nuw nsw i32 %16, 171
  %25 = add nuw nsw i32 %23, 128
  %26 = add nuw nsw i32 %25, %24
  %27 = lshr i32 %26, 8
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %28, i8* %29, align 1
  %30 = mul nuw nsw i32 %19, 171
  %31 = mul nuw nsw i32 %22, 85
  %32 = add nuw nsw i32 %30, 128
  %33 = add nuw nsw i32 %32, %31
  %34 = lshr i32 %33, 8
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds i8, i8* %7, i64 5
  %38 = getelementptr inbounds i8, i8* %8, i64 3
  %39 = add i32 %9, 5
  %40 = icmp ult i32 %39, %1
  br i1 %40, label %6, label %41

41:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_vertical_band_5_3_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %5
  %8 = zext i32 %1 to i64
  %9 = shl i32 %1, 1
  %10 = zext i32 %9 to i64
  %11 = mul i32 %1, 3
  %12 = zext i32 %11 to i64
  %13 = shl i32 %1, 2
  %14 = zext i32 %13 to i64
  %15 = zext i32 %3 to i64
  %16 = shl i32 %3, 1
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %18, %7
  %19 = phi i8* [ %0, %7 ], [ %49, %18 ]
  %20 = phi i8* [ %2, %7 ], [ %50, %18 ]
  %21 = phi i32 [ 0, %7 ], [ %51, %18 ]
  %22 = load i8, i8* %19, align 1
  %23 = getelementptr inbounds i8, i8* %19, i64 %8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds i8, i8* %19, i64 %10
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %19, i64 %12
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds i8, i8* %19, i64 %14
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  store i8 %22, i8* %20, align 1
  %35 = mul nuw nsw i32 %25, 85
  %36 = mul nuw nsw i32 %28, 171
  %37 = add nuw nsw i32 %35, 128
  %38 = add nuw nsw i32 %37, %36
  %39 = lshr i32 %38, 8
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds i8, i8* %20, i64 %15
  store i8 %40, i8* %41, align 1
  %42 = mul nuw nsw i32 %31, 171
  %43 = mul nuw nsw i32 %34, 85
  %44 = add nuw nsw i32 %42, 128
  %45 = add nuw nsw i32 %44, %43
  %46 = lshr i32 %45, 8
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %20, i64 %17
  store i8 %47, i8* %48, align 1
  %49 = getelementptr inbounds i8, i8* %19, i64 1
  %50 = getelementptr inbounds i8, i8* %20, i64 1
  %51 = add nuw i32 %21, 1
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %53, label %18

53:                                               ; preds = %18, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_horizontal_line_2_1_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %4, %6
  %7 = phi i8* [ %11, %6 ], [ %0, %4 ]
  %8 = phi i8* [ %12, %6 ], [ %2, %4 ]
  %9 = phi i32 [ %13, %6 ], [ 0, %4 ]
  %10 = load i8, i8* %7, align 1
  store i8 %10, i8* %8, align 1
  %11 = getelementptr inbounds i8, i8* %7, i64 2
  %12 = getelementptr inbounds i8, i8* %8, i64 1
  %13 = add i32 %9, 2
  %14 = icmp ult i32 %13, %1
  br i1 %14, label %6, label %15

15:                                               ; preds = %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_vertical_band_2_1_scale_c(i8* nocapture readonly, i32, i8* nocapture, i32, i32) local_unnamed_addr #1 {
  %6 = zext i32 %4 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %0, i64 %6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_vertical_band_2_1_scale_i_c(i8* nocapture readonly, i32, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %107

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  %9 = icmp ult i32 %4, 16
  br i1 %9, label %76, label %10

10:                                               ; preds = %7
  %11 = add nsw i64 %8, -1
  %12 = trunc i64 %11 to i32
  %13 = xor i32 %1, -1
  %14 = icmp ult i32 %13, %12
  %15 = icmp ugt i64 %11, 4294967295
  %16 = or i1 %14, %15
  br i1 %16, label %76, label %17

17:                                               ; preds = %10
  %18 = getelementptr i8, i8* %2, i64 %8
  %19 = zext i32 %1 to i64
  %20 = getelementptr i8, i8* %0, i64 %19
  %21 = add nuw nsw i64 %8, %19
  %22 = getelementptr i8, i8* %0, i64 %21
  %23 = getelementptr i8, i8* %0, i64 %8
  %24 = sext i32 %1 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr i8, i8* %0, i64 %25
  %27 = sub nsw i64 %8, %24
  %28 = getelementptr i8, i8* %0, i64 %27
  %29 = icmp ugt i8* %22, %2
  %30 = icmp ult i8* %20, %18
  %31 = and i1 %29, %30
  %32 = icmp ugt i8* %23, %2
  %33 = icmp ugt i8* %18, %0
  %34 = and i1 %32, %33
  %35 = or i1 %31, %34
  %36 = icmp ugt i8* %28, %2
  %37 = icmp ult i8* %26, %18
  %38 = and i1 %36, %37
  %39 = or i1 %35, %38
  br i1 %39, label %76, label %40

40:                                               ; preds = %17
  %41 = and i64 %8, 4294967280
  %42 = trunc i64 %41 to i32
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i64 [ 0, %40 ], [ %72, %43 ]
  %45 = trunc i64 %44 to i32
  %46 = sub nsw i32 %45, %1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1, !alias.scope !2
  %51 = zext <16 x i8> %50 to <16 x i32>
  %52 = getelementptr inbounds i8, i8* %0, i64 %44
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !5
  %55 = zext <16 x i8> %54 to <16 x i32>
  %56 = mul nuw nsw <16 x i32> %55, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %57 = trunc i64 %44 to i32
  %58 = add i32 %57, %1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %0, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !7
  %63 = zext <16 x i8> %62 to <16 x i32>
  %64 = add nuw nsw <16 x i32> %63, %51
  %65 = mul nuw nsw <16 x i32> %64, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %66 = add nuw nsw <16 x i32> %56, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %67 = add nuw nsw <16 x i32> %66, %65
  %68 = lshr <16 x i32> %67, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %69 = trunc <16 x i32> %68 to <16 x i8>
  %70 = getelementptr inbounds i8, i8* %2, i64 %44
  %71 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %71, align 1, !alias.scope !9, !noalias !11
  %72 = add i64 %44, 16
  %73 = icmp eq i64 %72, %41
  br i1 %73, label %74, label %43, !llvm.loop !12

74:                                               ; preds = %43
  %75 = icmp eq i64 %41, %8
  br i1 %75, label %107, label %76

76:                                               ; preds = %74, %17, %10, %7
  %77 = phi i64 [ 0, %17 ], [ 0, %10 ], [ 0, %7 ], [ %41, %74 ]
  %78 = phi i32 [ 0, %17 ], [ 0, %10 ], [ 0, %7 ], [ %42, %74 ]
  br label %79

79:                                               ; preds = %76, %79
  %80 = phi i64 [ %104, %79 ], [ %77, %76 ]
  %81 = phi i32 [ %105, %79 ], [ %78, %76 ]
  %82 = sub nsw i32 %81, %1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = getelementptr inbounds i8, i8* %0, i64 %80
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = mul nuw nsw i32 %89, 10
  %91 = trunc i64 %80 to i32
  %92 = add i32 %91, %1
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = add nuw nsw i32 %96, %86
  %98 = mul nuw nsw i32 %97, 3
  %99 = add nuw nsw i32 %90, 8
  %100 = add nuw nsw i32 %99, %98
  %101 = lshr i32 %100, 4
  %102 = trunc i32 %101 to i8
  %103 = getelementptr inbounds i8, i8* %2, i64 %80
  store i8 %102, i8* %103, align 1
  %104 = add nuw nsw i64 %80, 1
  %105 = add nuw nsw i32 %81, 1
  %106 = icmp eq i64 %104, %8
  br i1 %106, label %107, label %79, !llvm.loop !14

107:                                              ; preds = %79, %74, %5
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !4}
!9 = !{!10}
!10 = distinct !{!10, !4}
!11 = !{!8, !6, !3}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !13}
