; ModuleID = '../../components/media_router/browser/media_sinks_observer.cc'
source_filename = "../../components/media_router/browser/media_sinks_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media_router::MediaSinksObserver" = type <{ i32 (...)**, %"class.absl::optional", %"class.url::Origin", %"class.media_router::MediaRouter"*, i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.media_router::MediaSource" }
%"class.media_router::MediaSource" = type { %"class.std::__1::basic_string", %class.GURL }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.media_router::MediaRouter" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"*, %"class.std::__1::__compressed_pair.17" }
%"class.media_router::MediaSink" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.absl::optional.12", %"class.absl::optional.12", i32, i32 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.media_router::MediaSink"* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.url::Origin"* }

@_ZTVN12media_router18MediaSinksObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media_router::MediaSinksObserver"*)* @_ZN12media_router18MediaSinksObserverD2Ev to i8*), i8* bitcast (void (%"class.media_router::MediaSinksObserver"*)* @_ZN12media_router18MediaSinksObserverD0Ev to i8*), i8* bitcast (void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*, %"class.std::__1::vector.22"*)* @_ZN12media_router18MediaSinksObserver14OnSinksUpdatedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEERKNS2_IN3url6OriginENS4_ISA_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN12media_router18MediaSinksObserverD1Ev = hidden unnamed_addr alias void (%"class.media_router::MediaSinksObserver"*), void (%"class.media_router::MediaSinksObserver"*)* @_ZN12media_router18MediaSinksObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router18MediaSinksObserverC2EPNS_11MediaRouterERKNS_11MediaSourceERKN3url6OriginE(%"class.media_router::MediaSinksObserver"*, %"class.media_router::MediaRouter"*, %"class.media_router::MediaSource"* dereferenceable(144), %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router18MediaSinksObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.media_router::MediaSource"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.media_router::MediaSource"* %7 to i8*
  %14 = bitcast %"class.media_router::MediaSource"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #7
  br label %21

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.media_router::MediaSource", %"class.media_router::MediaSource"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.media_router::MediaSource", %"class.media_router::MediaSource"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.media_router::MediaSource", %"class.media_router::MediaSource"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* %18, i64 %20) #7
  br label %21

21:                                               ; preds = %12, %15
  %22 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.media_router::MediaSource", %"class.media_router::MediaSource"* %2, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %22, %class.GURL* dereferenceable(120) %23) #7
  %24 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %24, %"class.url::Origin"* dereferenceable(80) %3) #7
  %25 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 3
  store %"class.media_router::MediaRouter"* %1, %"class.media_router::MediaRouter"** %25, align 8
  %26 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 4
  store i8 0, i8* %26, align 8
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router18MediaSinksObserverC2EPNS_11MediaRouterE(%"class.media_router::MediaSinksObserver"*, %"class.media_router::MediaRouter"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router18MediaSinksObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 144, i1 false) #7
  %7 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %7) #7
  %8 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 3
  store %"class.media_router::MediaRouter"* %1, %"class.media_router::MediaRouter"** %8, align 8
  %9 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 4
  store i8 0, i8* %9, align 8
  ret void
}

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router18MediaSinksObserverD2Ev(%"class.media_router::MediaSinksObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router18MediaSinksObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 3
  %8 = load %"class.media_router::MediaRouter"*, %"class.media_router::MediaRouter"** %7, align 8
  %9 = bitcast %"class.media_router::MediaRouter"* %8 to void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)***
  %10 = load void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)**, void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*, void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)** %10, i64 22
  %12 = load void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*, void (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)** %11, align 8
  tail call void %12(%"class.media_router::MediaRouter"* %8, %"class.media_router::MediaSinksObserver"* %0) #7
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %14) #7
  %15 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN12media_router11MediaSourceD1Ev(%"class.media_router::MediaSource"* %19) #7
  store i8 0, i8* %15, align 8
  br label %20

20:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN12media_router18MediaSinksObserverD0Ev(%"class.media_router::MediaSinksObserver"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12media_router18MediaSinksObserver4InitEv(%"class.media_router::MediaSinksObserver"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 3
  %7 = load %"class.media_router::MediaRouter"*, %"class.media_router::MediaRouter"** %6, align 8
  %8 = bitcast %"class.media_router::MediaRouter"* %7 to i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)***
  %9 = load i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)**, i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*, i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)** %9, i64 21
  %11 = load i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)*, i1 (%"class.media_router::MediaRouter"*, %"class.media_router::MediaSinksObserver"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.media_router::MediaRouter"* %7, %"class.media_router::MediaSinksObserver"* %0) #7
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i1 [ %12, %5 ], [ true, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router18MediaSinksObserver14OnSinksUpdatedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEERKNS2_IN3url6OriginENS4_ISA_EEEE(%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.22"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.url::Origin"*, %"class.url::Origin"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.url::Origin"*, %"class.url::Origin"** %7, align 8
  %9 = icmp eq %"class.url::Origin"* %6, %8
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media_router::MediaSinksObserver", %"class.media_router::MediaSinksObserver"* %0, i64 0, i32 2
  br label %12

12:                                               ; preds = %10, %15
  %13 = phi %"class.url::Origin"* [ %16, %15 ], [ %6, %10 ]
  %14 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %13, %"class.url::Origin"* dereferenceable(80) %11) #7
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 1
  %17 = icmp eq %"class.url::Origin"* %16, %8
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %15
  %19 = phi %"class.url::Origin"* [ %13, %12 ], [ %8, %15 ]
  %20 = load %"class.url::Origin"*, %"class.url::Origin"** %7, align 8
  %21 = icmp eq %"class.url::Origin"* %19, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %18, %3
  %23 = bitcast %"class.media_router::MediaSinksObserver"* %0 to void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)***
  %24 = load void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)**, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)** %24, i64 3
  %26 = load void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)** %25, align 8
  tail call void %26(%"class.media_router::MediaSinksObserver"* %0, %"class.std::__1::vector"* dereferenceable(24) %1) #7
  br label %51

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #7
  %29 = bitcast %"class.media_router::MediaSinksObserver"* %0 to void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)***
  %30 = load void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)**, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)** %30, i64 3
  %32 = load void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)*, void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*)** %31, align 8
  call void %32(%"class.media_router::MediaSinksObserver"* %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #7
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %34 = load %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"** %33, align 8
  %35 = icmp eq %"class.media_router::MediaSink"* %34, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %27
  %37 = bitcast %"class.media_router::MediaSink"* %34 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %39 = load %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"** %38, align 8
  %40 = icmp eq %"class.media_router::MediaSink"* %39, %34
  br i1 %40, label %48, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"class.media_router::MediaSink"* [ %43, %41 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.media_router::MediaSink", %"class.media_router::MediaSink"* %42, i64 -1
  call void @_ZN12media_router9MediaSinkD1Ev(%"class.media_router::MediaSink"* %43) #7
  %44 = icmp eq %"class.media_router::MediaSink"* %43, %34
  br i1 %44, label %45, label %41

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::vector"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %36
  %49 = phi i8* [ %47, %45 ], [ %37, %36 ]
  store %"class.media_router::MediaSink"* %34, %"class.media_router::MediaSink"** %38, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %27, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  br label %51

51:                                               ; preds = %50, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind
declare void @_ZN12media_router11MediaSourceD1Ev(%"class.media_router::MediaSource"*) unnamed_addr #2

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12media_router9MediaSinkD1Ev(%"class.media_router::MediaSink"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
