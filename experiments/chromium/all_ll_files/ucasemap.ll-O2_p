; ModuleID = '../../third_party/icu/source/common/ucasemap.cpp'
source_filename = "../../third_party/icu/source/common/ucasemap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UCaseMap = type { %"class.icu_69::BreakIterator"*, [32 x i8], i32, i32 }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.icu_69::Edits" = type <{ i16*, i32, i32, i32, i32, i32, [100 x i16], [4 x i8] }>
%struct.UCaseContext = type { i8*, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"class.icu_69::CheckedArrayByteSink" = type <{ %"class.icu_69::ByteSink", i8*, i32, i32, i32, i8, [3 x i8] }>

@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\CC\88\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\CC\81\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\CE\99\00", align 1
@_ZN6icu_699LatinCase15TO_LOWER_NORMALE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase14TO_LOWER_TR_LTE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase11TO_UPPER_TRE = external local_unnamed_addr constant [384 x i8], align 16
@_ZN6icu_699LatinCase15TO_UPPER_NORMALE = external local_unnamed_addr constant [384 x i8], align 16

@_ZN8UCaseMapC1EPKcjP10UErrorCode = hidden unnamed_addr alias void (%struct.UCaseMap*, i8*, i32, i32*), void (%struct.UCaseMap*, i8*, i32, i32*)* @_ZN8UCaseMapC2EPKcjP10UErrorCode
@_ZN8UCaseMapD1Ev = hidden unnamed_addr alias void (%struct.UCaseMap*), void (%struct.UCaseMap*)* @_ZN8UCaseMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8UCaseMapC2EPKcjP10UErrorCode(%struct.UCaseMap*, i8*, i32, i32*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 0
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %5, align 8
  %6 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  store i32 %2, i32* %7, align 4
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %38

10:                                               ; preds = %4
  %11 = icmp eq i8* %1, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 1, i64 0
  store i8 0, i8* %16, align 8
  br label %36

17:                                               ; preds = %12, %10
  %18 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 1, i64 0
  %19 = tail call i32 @uloc_getName_69(i8* %1, i8* %18, i32 32, i32* %3) #8
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 15
  %22 = icmp eq i32 %19, 32
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  store i32 0, i32* %3, align 4
  %25 = tail call i32 @uloc_getLanguage_69(i8* %1, i8* %18, i32 32, i32* %3) #8
  %26 = icmp eq i32 %25, 32
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %3, align 4
  br label %30

29:                                               ; preds = %24
  store i32 15, i32* %3, align 4
  br label %35

30:                                               ; preds = %27, %17
  %31 = phi i32 [ %28, %27 ], [ %20, %17 ]
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  store i32 0, i32* %6, align 8
  %34 = tail call i32 @ucase_getCaseLocale_69(i8* %18) #8
  br label %36

35:                                               ; preds = %30, %29
  store i8 0, i8* %18, align 8
  br label %36

36:                                               ; preds = %35, %33, %15
  %37 = phi i32 [ 1, %15 ], [ %34, %33 ], [ 1, %35 ]
  store i32 %37, i32* %6, align 8
  br label %38

38:                                               ; preds = %36, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucasemap_setLocale_69(%struct.UCaseMap*, i8*, i32*) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %35

6:                                                ; preds = %3
  %7 = icmp eq i8* %1, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %6
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 1, i64 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  store i32 1, i32* %13, align 8
  br label %35

14:                                               ; preds = %6, %8
  %15 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 1, i64 0
  %16 = tail call i32 @uloc_getName_69(i8* %1, i8* %15, i32 32, i32* %2) #8
  %17 = load i32, i32* %2, align 4
  %18 = icmp eq i32 %17, 15
  %19 = icmp eq i32 %16, 32
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  store i32 0, i32* %2, align 4
  %22 = tail call i32 @uloc_getLanguage_69(i8* %1, i8* %15, i32 32, i32* %2) #8
  %23 = icmp eq i32 %22, 32
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %2, align 4
  br label %27

26:                                               ; preds = %21
  store i32 15, i32* %2, align 4
  br label %33

27:                                               ; preds = %24, %14
  %28 = phi i32 [ %25, %24 ], [ %17, %14 ]
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = tail call i32 @ucase_getCaseLocale_69(i8* %15) #8
  store i32 %32, i32* %31, align 8
  br label %35

33:                                               ; preds = %26, %27
  store i8 0, i8* %15, align 8
  %34 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  store i32 1, i32* %34, align 8
  br label %35

35:                                               ; preds = %30, %33, %3, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8UCaseMapD2Ev(%struct.UCaseMap* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 0
  %3 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %2, align 8
  %4 = icmp eq %"class.icu_69::BreakIterator"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.icu_69::BreakIterator"* %3 to void (%"class.icu_69::BreakIterator"*)***
  %7 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %7, i64 1
  %9 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %8, align 8
  tail call void %9(%"class.icu_69::BreakIterator"* nonnull %3) #8
  br label %10

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UCaseMap* @ucasemap_open_69(i8*, i32, i32*) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 48) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = bitcast i8* %7 to %struct.UCaseMap*
  tail call void @_ZN8UCaseMapC2EPKcjP10UErrorCode(%struct.UCaseMap* nonnull %10, i8* %0, i32 %1, i32* %2)
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %24, label %14

13:                                               ; preds = %6
  store i32 7, i32* %2, align 4
  br label %24

14:                                               ; preds = %9
  %15 = bitcast i8* %7 to %"class.icu_69::BreakIterator"**
  %16 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %15, align 8
  %17 = icmp eq %"class.icu_69::BreakIterator"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.icu_69::BreakIterator"* %16 to void (%"class.icu_69::BreakIterator"*)***
  %20 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %20, i64 1
  %22 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %21, align 8
  tail call void %22(%"class.icu_69::BreakIterator"* nonnull %16) #8
  br label %23

23:                                               ; preds = %14, %18
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %7) #8
  br label %24

24:                                               ; preds = %13, %23, %9, %3
  %25 = phi %struct.UCaseMap* [ null, %3 ], [ null, %13 ], [ null, %23 ], [ %10, %9 ]
  ret %struct.UCaseMap* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ucasemap_close_69(%struct.UCaseMap*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UCaseMap* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 0
  %5 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %4, align 8
  %6 = icmp eq %"class.icu_69::BreakIterator"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.icu_69::BreakIterator"* %5 to void (%"class.icu_69::BreakIterator"*)***
  %9 = load void (%"class.icu_69::BreakIterator"*)**, void (%"class.icu_69::BreakIterator"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %9, i64 1
  %11 = load void (%"class.icu_69::BreakIterator"*)*, void (%"class.icu_69::BreakIterator"*)** %10, align 8
  tail call void %11(%"class.icu_69::BreakIterator"* nonnull %5) #8
  br label %12

12:                                               ; preds = %3, %7
  %13 = bitcast %struct.UCaseMap* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %13) #8
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @ucasemap_getLocale_69(%struct.UCaseMap* readnone) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 1, i64 0
  ret i8* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @ucasemap_getOptions_69(%struct.UCaseMap* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @uloc_getName_69(i8*, i8*, i32, i32*) local_unnamed_addr #5

declare i32 @uloc_getLanguage_69(i8*, i8*, i32, i32*) local_unnamed_addr #5

declare i32 @ucase_getCaseLocale_69(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ucasemap_setOptions_69(%struct.UCaseMap* nocapture, i32, i32* nocapture readonly) local_unnamed_addr #6 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  store i32 %1, i32* %7, align 4
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ucasemap_internalUTF8ToTitle_69(i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %9 = alloca %struct.UCaseContext, align 8
  %10 = alloca i16*, align 8
  %11 = load i32, i32* %7, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %337

13:                                               ; preds = %8
  %14 = and i32 %1, 1536
  %15 = icmp eq i32 %14, 1536
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store i32 1, i32* %7, align 4
  br label %337

17:                                               ; preds = %13
  %18 = bitcast %struct.UCaseContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #8
  %19 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 1
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false)
  %21 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 0
  store i8* %3, i8** %21, align 8
  %22 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 3
  store i32 %4, i32* %22, align 8
  %23 = icmp sgt i32 %4, 0
  br i1 %23, label %24, label %336

24:                                               ; preds = %17
  %25 = bitcast %"class.icu_69::BreakIterator"* %2 to i32 (%"class.icu_69::BreakIterator"*)***
  %26 = and i32 %1, 512
  %27 = icmp eq i32 %26, 0
  %28 = and i32 %1, 1024
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 4
  %31 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 5
  %32 = bitcast i16** %10 to i8*
  %33 = icmp eq %"class.icu_69::Edits"* %6, null
  %34 = and i32 %1, 16384
  %35 = icmp eq i32 %34, 0
  %36 = icmp eq i32 %0, 5
  %37 = and i32 %1, 256
  %38 = icmp eq i32 %37, 0
  br label %39

39:                                               ; preds = %335, %24
  %40 = phi i1 [ false, %24 ], [ true, %335 ]
  %41 = phi i32 [ 0, %24 ], [ %56, %335 ]
  %42 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %25, align 8
  br i1 %40, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %42, i64 10
  %45 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %44, align 8
  %46 = call i32 %45(%"class.icu_69::BreakIterator"* %2) #8
  br label %51

47:                                               ; preds = %39
  %48 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %42, i64 13
  %49 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %48, align 8
  %50 = call i32 %49(%"class.icu_69::BreakIterator"* %2) #8
  br label %51

51:                                               ; preds = %47, %43
  %52 = phi i32 [ %46, %43 ], [ %50, %47 ]
  %53 = icmp eq i32 %52, -1
  %54 = icmp sgt i32 %52, %4
  %55 = or i1 %53, %54
  %56 = select i1 %55, i32 %4, i32 %52
  %57 = icmp slt i32 %41, %56
  br i1 %57, label %58, label %333

58:                                               ; preds = %51
  %59 = add nsw i32 %41, 1
  %60 = sext i32 %41 to i64
  %61 = getelementptr inbounds i8, i8* %3, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = icmp sgt i8 %62, -1
  br i1 %64, label %141, label %65

65:                                               ; preds = %58
  %66 = icmp eq i32 %59, %56
  br i1 %66, label %141, label %67

67:                                               ; preds = %65
  %68 = icmp ugt i8 %62, -33
  br i1 %68, label %69, label %124

69:                                               ; preds = %67
  %70 = icmp ult i8 %62, -16
  br i1 %70, label %71, label %87

71:                                               ; preds = %69
  %72 = and i32 %63, 15
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = sext i32 %59 to i64
  %78 = getelementptr inbounds i8, i8* %3, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = lshr i8 %79, 5
  %81 = zext i8 %80 to i32
  %82 = shl i32 1, %81
  %83 = and i32 %82, %76
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %141, label %85

85:                                               ; preds = %71
  %86 = and i8 %79, 63
  br label %115

87:                                               ; preds = %69
  %88 = add nsw i32 %63, -240
  %89 = icmp slt i32 %88, 5
  br i1 %89, label %90, label %141

90:                                               ; preds = %87
  %91 = sext i32 %59 to i64
  %92 = getelementptr inbounds i8, i8* %3, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = lshr i32 %94, 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sext i8 %98 to i32
  %100 = shl i32 1, %88
  %101 = and i32 %100, %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %141, label %103

103:                                              ; preds = %90
  %104 = add nsw i32 %41, 2
  %105 = icmp eq i32 %104, %56
  br i1 %105, label %141, label %106

106:                                              ; preds = %103
  %107 = shl nsw i32 %88, 6
  %108 = and i32 %94, 63
  %109 = or i32 %108, %107
  %110 = sext i32 %104 to i64
  %111 = getelementptr inbounds i8, i8* %3, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = xor i8 %112, -128
  %114 = icmp ult i8 %113, 64
  br i1 %114, label %115, label %141

115:                                              ; preds = %85, %106
  %116 = phi i32 [ %59, %85 ], [ %104, %106 ]
  %117 = phi i32 [ %72, %85 ], [ %109, %106 ]
  %118 = phi i8 [ %86, %85 ], [ %113, %106 ]
  %119 = shl nsw i32 %117, 6
  %120 = zext i8 %118 to i32
  %121 = or i32 %119, %120
  %122 = add nsw i32 %116, 1
  %123 = icmp eq i32 %122, %56
  br i1 %123, label %141, label %128

124:                                              ; preds = %67
  %125 = icmp ugt i8 %62, -63
  br i1 %125, label %126, label %141

126:                                              ; preds = %124
  %127 = and i32 %63, 31
  br label %128

128:                                              ; preds = %115, %126
  %129 = phi i32 [ %122, %115 ], [ %59, %126 ]
  %130 = phi i32 [ %121, %115 ], [ %127, %126 ]
  %131 = sext i32 %129 to i64
  %132 = getelementptr inbounds i8, i8* %3, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = xor i8 %133, -128
  %135 = icmp ult i8 %134, 64
  br i1 %135, label %136, label %141

136:                                              ; preds = %128
  %137 = zext i8 %134 to i32
  %138 = shl i32 %130, 6
  %139 = or i32 %138, %137
  %140 = add nsw i32 %129, 1
  br label %141

141:                                              ; preds = %136, %71, %115, %103, %90, %65, %128, %124, %106, %87, %58
  %142 = phi i32 [ %59, %58 ], [ %140, %136 ], [ %129, %128 ], [ %56, %115 ], [ %59, %71 ], [ %104, %106 ], [ %56, %103 ], [ %59, %90 ], [ %59, %87 ], [ %59, %124 ], [ %56, %65 ]
  %143 = phi i32 [ %63, %58 ], [ %139, %136 ], [ -1, %128 ], [ -1, %115 ], [ -1, %71 ], [ -1, %106 ], [ -1, %103 ], [ -1, %90 ], [ -1, %87 ], [ -1, %124 ], [ -1, %65 ]
  br i1 %27, label %144, label %261

144:                                              ; preds = %141, %247
  %145 = phi i32 [ %146, %247 ], [ %41, %141 ]
  %146 = phi i32 [ %248, %247 ], [ %142, %141 ]
  %147 = phi i32 [ %249, %247 ], [ %143, %141 ]
  br i1 %29, label %151, label %148

148:                                              ; preds = %144
  %149 = call i32 @ucase_getType_69(i32 %147) #8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %162, label %250

151:                                              ; preds = %144
  %152 = call signext i8 @u_charType_69(i32 %147) #8
  %153 = sext i8 %152 to i32
  %154 = shl i32 1, %153
  %155 = and i32 %154, 251792942
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %250

157:                                              ; preds = %151
  %158 = icmp eq i8 %152, 4
  br i1 %158, label %159, label %162

159:                                              ; preds = %157
  %160 = call i32 @ucase_getType_69(i32 %147) #8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %250

162:                                              ; preds = %157, %148, %159
  %163 = icmp eq i32 %146, %56
  br i1 %163, label %250, label %164

164:                                              ; preds = %162
  %165 = add nsw i32 %146, 1
  %166 = sext i32 %146 to i64
  %167 = getelementptr inbounds i8, i8* %3, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = icmp sgt i8 %168, -1
  br i1 %170, label %247, label %171

171:                                              ; preds = %164
  %172 = icmp eq i32 %165, %56
  br i1 %172, label %247, label %173

173:                                              ; preds = %171
  %174 = icmp ugt i8 %168, -33
  br i1 %174, label %175, label %230

175:                                              ; preds = %173
  %176 = icmp ult i8 %168, -16
  br i1 %176, label %177, label %193

177:                                              ; preds = %175
  %178 = and i32 %169, 15
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = sext i8 %181 to i32
  %183 = sext i32 %165 to i64
  %184 = getelementptr inbounds i8, i8* %3, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = lshr i8 %185, 5
  %187 = zext i8 %186 to i32
  %188 = shl i32 1, %187
  %189 = and i32 %188, %182
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %247, label %191

191:                                              ; preds = %177
  %192 = and i8 %185, 63
  br label %221

193:                                              ; preds = %175
  %194 = add nsw i32 %169, -240
  %195 = icmp slt i32 %194, 5
  br i1 %195, label %196, label %247

196:                                              ; preds = %193
  %197 = sext i32 %165 to i64
  %198 = getelementptr inbounds i8, i8* %3, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = lshr i32 %200, 4
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = shl i32 1, %194
  %207 = and i32 %206, %205
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %247, label %209

209:                                              ; preds = %196
  %210 = add nsw i32 %146, 2
  %211 = icmp eq i32 %210, %56
  br i1 %211, label %247, label %212

212:                                              ; preds = %209
  %213 = shl nsw i32 %194, 6
  %214 = and i32 %200, 63
  %215 = or i32 %214, %213
  %216 = sext i32 %210 to i64
  %217 = getelementptr inbounds i8, i8* %3, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = xor i8 %218, -128
  %220 = icmp ult i8 %219, 64
  br i1 %220, label %221, label %247

221:                                              ; preds = %191, %212
  %222 = phi i32 [ %165, %191 ], [ %210, %212 ]
  %223 = phi i32 [ %178, %191 ], [ %215, %212 ]
  %224 = phi i8 [ %192, %191 ], [ %219, %212 ]
  %225 = shl nsw i32 %223, 6
  %226 = zext i8 %224 to i32
  %227 = or i32 %225, %226
  %228 = add nsw i32 %222, 1
  %229 = icmp eq i32 %228, %56
  br i1 %229, label %247, label %234

230:                                              ; preds = %173
  %231 = icmp ugt i8 %168, -63
  br i1 %231, label %232, label %247

232:                                              ; preds = %230
  %233 = and i32 %169, 31
  br label %234

234:                                              ; preds = %221, %232
  %235 = phi i32 [ %228, %221 ], [ %165, %232 ]
  %236 = phi i32 [ %227, %221 ], [ %233, %232 ]
  %237 = sext i32 %235 to i64
  %238 = getelementptr inbounds i8, i8* %3, i64 %237
  %239 = load i8, i8* %238, align 1
  %240 = xor i8 %239, -128
  %241 = icmp ult i8 %240, 64
  br i1 %241, label %242, label %247

242:                                              ; preds = %234
  %243 = zext i8 %240 to i32
  %244 = shl i32 %236, 6
  %245 = or i32 %244, %243
  %246 = add nsw i32 %235, 1
  br label %247

247:                                              ; preds = %242, %177, %221, %209, %196, %171, %234, %230, %212, %193, %164
  %248 = phi i32 [ %246, %242 ], [ %165, %177 ], [ %56, %221 ], [ %56, %209 ], [ %165, %196 ], [ %56, %171 ], [ %235, %234 ], [ %165, %230 ], [ %210, %212 ], [ %165, %193 ], [ %165, %164 ]
  %249 = phi i32 [ %245, %242 ], [ -1, %177 ], [ -1, %221 ], [ -1, %209 ], [ -1, %196 ], [ -1, %171 ], [ -1, %234 ], [ -1, %230 ], [ -1, %212 ], [ -1, %193 ], [ %169, %164 ]
  br label %144

250:                                              ; preds = %151, %148, %162, %159
  %251 = phi i32 [ %146, %151 ], [ %146, %148 ], [ %56, %162 ], [ %146, %159 ]
  %252 = phi i32 [ %145, %151 ], [ %145, %148 ], [ %56, %162 ], [ %145, %159 ]
  %253 = icmp sgt i32 %252, %41
  br i1 %253, label %254, label %261

254:                                              ; preds = %250
  %255 = sub nsw i32 %252, %41
  %256 = load i32, i32* %7, align 4
  %257 = icmp slt i32 %256, 1
  br i1 %257, label %258, label %336

258:                                              ; preds = %254
  %259 = icmp sgt i32 %255, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %61, i32 %255, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %261

261:                                              ; preds = %258, %260, %250, %141
  %262 = phi i32 [ %41, %141 ], [ %252, %250 ], [ %252, %260 ], [ %252, %258 ]
  %263 = phi i32 [ %142, %141 ], [ %251, %250 ], [ %251, %260 ], [ %251, %258 ]
  %264 = phi i32 [ %143, %141 ], [ %147, %250 ], [ %147, %260 ], [ %147, %258 ]
  %265 = icmp sgt i32 %263, %262
  br i1 %265, label %266, label %333

266:                                              ; preds = %261
  %267 = icmp sgt i32 %264, -1
  br i1 %267, label %268, label %286

268:                                              ; preds = %266
  store i32 %262, i32* %30, align 4
  store i32 %263, i32* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %10, align 8
  %269 = call i32 @ucase_toFullTitle_69(i32 %264, i32 (i8*, i8)* nonnull @_ZN12_GLOBAL__N_124utf8_caseContextIteratorEPva, i8* nonnull %18, i16** nonnull %10, i32 %0) #8
  %270 = sub nsw i32 %263, %262
  %271 = load i16*, i16** %10, align 8
  %272 = icmp slt i32 %269, 0
  br i1 %272, label %273, label %278

273:                                              ; preds = %268
  br i1 %33, label %275, label %274

274:                                              ; preds = %273
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %6, i32 %270) #8
  br label %275

275:                                              ; preds = %274, %273
  br i1 %35, label %276, label %284

276:                                              ; preds = %275
  %277 = xor i32 %269, -1
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %270, i32 %277, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* null) #8
  br label %284

278:                                              ; preds = %268
  %279 = icmp slt i32 %269, 32
  br i1 %279, label %281, label %280

280:                                              ; preds = %278
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %270, i32 %269, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  br label %284

281:                                              ; preds = %278
  %282 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEiPKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %270, i16* %271, i32 %269, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %285, label %284

284:                                              ; preds = %281, %275, %276, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %295

285:                                              ; preds = %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %336

286:                                              ; preds = %266
  %287 = sext i32 %262 to i64
  %288 = getelementptr inbounds i8, i8* %3, i64 %287
  %289 = sub nsw i32 %263, %262
  %290 = load i32, i32* %7, align 4
  %291 = icmp slt i32 %290, 1
  br i1 %291, label %292, label %336

292:                                              ; preds = %286
  %293 = icmp sgt i32 %289, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %292
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %288, i32 %289, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %295

295:                                              ; preds = %292, %294, %284
  %296 = add nsw i32 %262, 1
  %297 = icmp slt i32 %296, %56
  %298 = and i1 %36, %297
  br i1 %298, label %299, label %315

299:                                              ; preds = %295
  %300 = sext i32 %262 to i64
  %301 = getelementptr inbounds i8, i8* %3, i64 %300
  %302 = load i8, i8* %301, align 1
  switch i8 %302, label %315 [
    i8 73, label %303
    i8 105, label %303
  ]

303:                                              ; preds = %299, %299
  %304 = sext i32 %296 to i64
  %305 = getelementptr inbounds i8, i8* %3, i64 %304
  %306 = load i8, i8* %305, align 1
  switch i8 %306, label %315 [
    i8 106, label %307
    i8 74, label %309
  ]

307:                                              ; preds = %303
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 1, i32 74, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  %308 = add nsw i32 %263, 1
  br label %315

309:                                              ; preds = %303
  %310 = load i32, i32* %7, align 4
  %311 = icmp slt i32 %310, 1
  br i1 %311, label %312, label %336

312:                                              ; preds = %309
  %313 = getelementptr inbounds i8, i8* %301, i64 1
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %313, i32 1, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  %314 = add nsw i32 %263, 1
  br label %315

315:                                              ; preds = %303, %299, %307, %312, %295
  %316 = phi i32 [ %308, %307 ], [ %314, %312 ], [ %263, %295 ], [ %263, %299 ], [ %263, %303 ]
  %317 = icmp sgt i32 %56, %316
  br i1 %317, label %318, label %333

318:                                              ; preds = %315
  br i1 %38, label %319, label %324

319:                                              ; preds = %318
  call fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32 %0, i32 %1, i8* %3, %struct.UCaseContext* nonnull %9, i32 %316, i32 %56, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  %320 = load i32, i32* %7, align 4
  %321 = icmp slt i32 %320, 1
  %322 = icmp slt i32 %56, %4
  %323 = and i1 %321, %322
  br i1 %323, label %335, label %336

324:                                              ; preds = %318
  %325 = sext i32 %316 to i64
  %326 = getelementptr inbounds i8, i8* %3, i64 %325
  %327 = sub nsw i32 %56, %316
  %328 = load i32, i32* %7, align 4
  %329 = icmp slt i32 %328, 1
  br i1 %329, label %330, label %336

330:                                              ; preds = %324
  %331 = icmp sgt i32 %327, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %330
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %326, i32 %327, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %333

333:                                              ; preds = %330, %332, %51, %261, %315
  %334 = icmp slt i32 %56, %4
  br i1 %334, label %335, label %336

335:                                              ; preds = %333, %319
  br label %39

336:                                              ; preds = %333, %309, %324, %286, %254, %319, %17, %285
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #8
  br label %337

337:                                              ; preds = %8, %16, %336
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @ucase_getType_69(i32) local_unnamed_addr #5

declare i32 @ucase_toFullTitle_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_124utf8_caseContextIteratorEPva(i8*, i8 signext) #0 {
  %3 = icmp slt i8 %1, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 20
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds i8, i8* %0, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %0, i64 28
  store i8 %1, i8* %10, align 4
  br label %27

11:                                               ; preds = %2
  %12 = icmp eq i8 %1, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i64 24
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %0, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %0, i64 28
  store i8 %1, i8* %19, align 4
  br label %45

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %0, i64 28
  %22 = load i8, i8* %21, align 4
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds i8, i8* %0, i64 12
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %23, label %27, label %45

27:                                               ; preds = %20, %4
  %28 = phi i32* [ %9, %4 ], [ %25, %20 ]
  %29 = phi i32 [ %7, %4 ], [ %26, %20 ]
  %30 = getelementptr inbounds i8, i8* %0, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %32, %29
  br i1 %33, label %34, label %137

34:                                               ; preds = %27
  %35 = bitcast i8* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = add nsw i32 %29, -1
  store i32 %37, i32* %28, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp sgt i8 %40, -1
  br i1 %42, label %137, label %43

43:                                               ; preds = %34
  %44 = tail call i32 @utf8_prevCharSafeBody_69(i8* %36, i32 %32, i32* %28, i32 %41, i8 signext -1) #8
  br label %137

45:                                               ; preds = %20, %13
  %46 = phi i32* [ %18, %13 ], [ %25, %20 ]
  %47 = phi i32 [ %16, %13 ], [ %26, %20 ]
  %48 = getelementptr inbounds i8, i8* %0, i64 16
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = icmp slt i32 %47, %50
  br i1 %51, label %52, label %137

52:                                               ; preds = %45
  %53 = bitcast i8* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add nsw i32 %47, 1
  store i32 %55, i32* %46, align 4
  %56 = sext i32 %47 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp sgt i8 %58, -1
  br i1 %60, label %137, label %61

61:                                               ; preds = %52
  %62 = icmp eq i32 %55, %50
  br i1 %62, label %137, label %63

63:                                               ; preds = %61
  %64 = icmp ugt i8 %58, -33
  br i1 %64, label %65, label %120

65:                                               ; preds = %63
  %66 = icmp ult i8 %58, -16
  br i1 %66, label %67, label %83

67:                                               ; preds = %65
  %68 = and i32 %59, 15
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = sext i32 %55 to i64
  %74 = getelementptr inbounds i8, i8* %54, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = lshr i8 %75, 5
  %77 = zext i8 %76 to i32
  %78 = shl i32 1, %77
  %79 = and i32 %78, %72
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %137, label %81

81:                                               ; preds = %67
  %82 = and i8 %75, 63
  br label %111

83:                                               ; preds = %65
  %84 = add nsw i32 %59, -240
  %85 = icmp slt i32 %84, 5
  br i1 %85, label %86, label %137

86:                                               ; preds = %83
  %87 = sext i32 %55 to i64
  %88 = getelementptr inbounds i8, i8* %54, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = lshr i32 %90, 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i32
  %96 = shl i32 1, %84
  %97 = and i32 %96, %95
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %137, label %99

99:                                               ; preds = %86
  %100 = add nsw i32 %47, 2
  store i32 %100, i32* %46, align 4
  %101 = icmp eq i32 %100, %50
  br i1 %101, label %137, label %102

102:                                              ; preds = %99
  %103 = shl nsw i32 %84, 6
  %104 = and i32 %90, 63
  %105 = or i32 %104, %103
  %106 = sext i32 %100 to i64
  %107 = getelementptr inbounds i8, i8* %54, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = xor i8 %108, -128
  %110 = icmp ult i8 %109, 64
  br i1 %110, label %111, label %137

111:                                              ; preds = %81, %102
  %112 = phi i32 [ %55, %81 ], [ %100, %102 ]
  %113 = phi i32 [ %68, %81 ], [ %105, %102 ]
  %114 = phi i8 [ %82, %81 ], [ %109, %102 ]
  %115 = shl nsw i32 %113, 6
  %116 = zext i8 %114 to i32
  %117 = or i32 %115, %116
  %118 = add nsw i32 %112, 1
  store i32 %118, i32* %46, align 4
  %119 = icmp eq i32 %118, %50
  br i1 %119, label %137, label %124

120:                                              ; preds = %63
  %121 = icmp ugt i8 %58, -63
  br i1 %121, label %122, label %137

122:                                              ; preds = %120
  %123 = and i32 %59, 31
  br label %124

124:                                              ; preds = %111, %122
  %125 = phi i32 [ %118, %111 ], [ %55, %122 ]
  %126 = phi i32 [ %117, %111 ], [ %123, %122 ]
  %127 = sext i32 %125 to i64
  %128 = getelementptr inbounds i8, i8* %54, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = xor i8 %129, -128
  %131 = icmp ult i8 %130, 64
  br i1 %131, label %132, label %137

132:                                              ; preds = %124
  %133 = zext i8 %130 to i32
  %134 = shl i32 %126, 6
  %135 = or i32 %134, %133
  %136 = add nsw i32 %125, 1
  store i32 %136, i32* %46, align 4
  br label %137

137:                                              ; preds = %27, %45, %52, %83, %102, %120, %124, %61, %86, %99, %111, %67, %132, %34, %43
  %138 = phi i32 [ %41, %34 ], [ %44, %43 ], [ %59, %52 ], [ %135, %132 ], [ -1, %67 ], [ -1, %111 ], [ -1, %99 ], [ -1, %86 ], [ -1, %61 ], [ -1, %124 ], [ -1, %120 ], [ -1, %102 ], [ -1, %83 ], [ -1, %45 ], [ -1, %27 ]
  ret i32 %138
}

declare void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32, i32, i8*, %struct.UCaseContext*, i32, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) unnamed_addr #0 {
  %10 = alloca i8, align 1
  %11 = alloca i16*, align 8
  %12 = icmp eq i32 %0, 1
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = icmp sgt i32 %0, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = or i32 %0, 1
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %21, label %22

18:                                               ; preds = %13
  %19 = and i32 %1, 7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18, %15
  br label %22

22:                                               ; preds = %9, %18, %15, %21
  %23 = phi i8* [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase14TO_LOWER_TR_LTE, i64 0, i64 0), %21 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %15 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %18 ], [ getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_LOWER_NORMALE, i64 0, i64 0), %9 ]
  %24 = tail call %struct.UTrie2* @ucase_getTrie_69() #8
  %25 = load i32, i32* %8, align 4
  %26 = icmp slt i32 %25, 1
  %27 = icmp slt i32 %4, %5
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %323

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %24, i64 0, i32 0
  %31 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %24, i64 0, i32 9
  %32 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %24, i64 0, i32 10
  %33 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %24, i64 0, i32 3
  %34 = icmp eq %"class.icu_69::Edits"* %7, null
  %35 = bitcast %"class.icu_69::ByteSink"* %6 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %36 = bitcast i16** %11 to i8*
  %37 = icmp sgt i32 %0, -1
  %38 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %3, i64 0, i32 4
  %39 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %3, i64 0, i32 5
  %40 = bitcast %struct.UCaseContext* %3 to i8*
  br label %41

41:                                               ; preds = %283, %29
  %42 = phi i32 [ %25, %29 ], [ %284, %283 ]
  %43 = phi i32 [ %4, %29 ], [ %285, %283 ]
  %44 = phi i32 [ %4, %29 ], [ %286, %283 ]
  %45 = add nsw i32 %43, 1
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp sgt i8 %48, -1
  br i1 %50, label %51, label %68

51:                                               ; preds = %41
  %52 = zext i8 %48 to i64
  %53 = getelementptr inbounds i8, i8* %23, i64 %52
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %55 [
    i8 -128, label %289
    i8 0, label %276
  ]

55:                                               ; preds = %51
  %56 = sub nsw i32 %43, %44
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = sext i32 %44 to i64
  %60 = getelementptr inbounds i8, i8* %2, i64 %59
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %60, i32 %56, %"class.icu_69::ByteSink"* dereferenceable(8) %6, i32 %1, %"class.icu_69::Edits"* %7) #8
  br label %61

61:                                               ; preds = %55, %58
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %62 = add i8 %54, %48
  store i8 %62, i8* %10, align 1
  %63 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %35, align 8
  %64 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %63, i64 2
  %65 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %64, align 8
  call void %65(%"class.icu_69::ByteSink"* %6, i8* nonnull %10, i32 1) #8
  br i1 %34, label %67, label %66

66:                                               ; preds = %61
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 1, i32 1) #8
  br label %67

67:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  br label %276

68:                                               ; preds = %41
  %69 = icmp ult i8 %48, -29
  br i1 %69, label %70, label %100

70:                                               ; preds = %68
  %71 = add nsw i8 %48, 62
  %72 = icmp ult i8 %71, 4
  %73 = icmp slt i32 %45, %5
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %119

75:                                               ; preds = %70
  %76 = sext i32 %45 to i64
  %77 = getelementptr inbounds i8, i8* %2, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = xor i8 %78, -128
  %80 = icmp ult i8 %79, 64
  br i1 %80, label %81, label %119

81:                                               ; preds = %75
  %82 = zext i8 %79 to i32
  %83 = add nsw i32 %43, 2
  %84 = shl nuw nsw i32 %49, 6
  %85 = add nsw i32 %84, -12288
  %86 = or i32 %85, %82
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %23, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  switch i8 %89, label %91 [
    i8 -128, label %287
    i8 0, label %276
  ]

91:                                               ; preds = %81
  %92 = sub nsw i32 %43, %44
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = sext i32 %44 to i64
  %96 = getelementptr inbounds i8, i8* %2, i64 %95
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %96, i32 %92, %"class.icu_69::ByteSink"* dereferenceable(8) %6, i32 %1, %"class.icu_69::Edits"* %7) #8
  br label %97

97:                                               ; preds = %91, %94
  %98 = add nsw i32 %86, %90
  call void @_ZN6icu_6912ByteSinkUtil14appendTwoBytesEiRNS_8ByteSinkE(i32 %98, %"class.icu_69::ByteSink"* dereferenceable(8) %6) #8
  br i1 %34, label %276, label %99

99:                                               ; preds = %97
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %7, i32 2, i32 2) #8
  br label %276

100:                                              ; preds = %68
  %101 = icmp ult i8 %48, -22
  %102 = add nsw i8 %48, 21
  %103 = icmp ult i8 %102, 2
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %119

105:                                              ; preds = %100
  %106 = add nsw i32 %43, 3
  %107 = icmp sgt i32 %106, %5
  br i1 %107, label %119, label %108

108:                                              ; preds = %105
  %109 = sext i32 %45 to i64
  %110 = getelementptr inbounds i8, i8* %2, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, -64
  br i1 %112, label %113, label %119

113:                                              ; preds = %108
  %114 = add nsw i32 %43, 2
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %2, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, -64
  br i1 %118, label %276, label %119

119:                                              ; preds = %108, %113, %105, %100, %70, %75
  %120 = icmp eq i32 %45, %5
  br i1 %120, label %274, label %121

121:                                              ; preds = %119
  %122 = icmp ugt i8 %48, -33
  br i1 %122, label %123, label %178

123:                                              ; preds = %121
  %124 = icmp ult i8 %48, -16
  br i1 %124, label %125, label %141

125:                                              ; preds = %123
  %126 = and i32 %49, 15
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = sext i32 %45 to i64
  %132 = getelementptr inbounds i8, i8* %2, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = lshr i8 %133, 5
  %135 = zext i8 %134 to i32
  %136 = shl i32 1, %135
  %137 = and i32 %136, %130
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %276, label %139

139:                                              ; preds = %125
  %140 = and i8 %133, 63
  br label %169

141:                                              ; preds = %123
  %142 = add nsw i32 %49, -240
  %143 = icmp slt i32 %142, 5
  br i1 %143, label %144, label %276

144:                                              ; preds = %141
  %145 = sext i32 %45 to i64
  %146 = getelementptr inbounds i8, i8* %2, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = lshr i32 %148, 4
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = shl i32 1, %142
  %155 = and i32 %154, %153
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %276, label %157

157:                                              ; preds = %144
  %158 = add nsw i32 %43, 2
  %159 = icmp eq i32 %158, %5
  br i1 %159, label %274, label %160

160:                                              ; preds = %157
  %161 = shl nsw i32 %142, 6
  %162 = and i32 %148, 63
  %163 = or i32 %162, %161
  %164 = sext i32 %158 to i64
  %165 = getelementptr inbounds i8, i8* %2, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = xor i8 %166, -128
  %168 = icmp ult i8 %167, 64
  br i1 %168, label %169, label %276

169:                                              ; preds = %139, %160
  %170 = phi i32 [ %45, %139 ], [ %158, %160 ]
  %171 = phi i32 [ %126, %139 ], [ %163, %160 ]
  %172 = phi i8 [ %140, %139 ], [ %167, %160 ]
  %173 = shl nsw i32 %171, 6
  %174 = zext i8 %172 to i32
  %175 = or i32 %173, %174
  %176 = add nsw i32 %170, 1
  %177 = icmp eq i32 %176, %5
  br i1 %177, label %274, label %182

178:                                              ; preds = %121
  %179 = icmp ugt i8 %48, -63
  br i1 %179, label %180, label %276

180:                                              ; preds = %178
  %181 = and i32 %49, 31
  br label %182

182:                                              ; preds = %169, %180
  %183 = phi i32 [ %176, %169 ], [ %45, %180 ]
  %184 = phi i32 [ %175, %169 ], [ %181, %180 ]
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds i8, i8* %2, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = xor i8 %187, -128
  %189 = icmp ult i8 %188, 64
  br i1 %189, label %190, label %276

190:                                              ; preds = %182
  %191 = zext i8 %188 to i32
  %192 = shl i32 %184, 6
  %193 = or i32 %192, %191
  %194 = add nsw i32 %183, 1
  %195 = icmp slt i32 %193, 0
  br i1 %195, label %276, label %196

196:                                              ; preds = %190
  %197 = load i16*, i16** %30, align 8
  %198 = icmp ult i32 %193, 55296
  br i1 %198, label %199, label %208

199:                                              ; preds = %196
  %200 = lshr i32 %193, 5
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i16, i16* %197, i64 %201
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = shl nuw nsw i32 %204, 2
  %206 = and i32 %191, 31
  %207 = add nuw nsw i32 %205, %206
  br label %250

208:                                              ; preds = %196
  %209 = icmp ult i32 %193, 65536
  br i1 %209, label %210, label %222

210:                                              ; preds = %208
  %211 = icmp slt i32 %193, 56320
  %212 = select i1 %211, i32 320, i32 0
  %213 = lshr i32 %193, 5
  %214 = add nuw nsw i32 %212, %213
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i16, i16* %197, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = shl nuw nsw i32 %218, 2
  %220 = and i32 %191, 31
  %221 = add nuw nsw i32 %219, %220
  br label %250

222:                                              ; preds = %208
  %223 = icmp ugt i32 %193, 1114111
  br i1 %223, label %224, label %227

224:                                              ; preds = %222
  %225 = load i32, i32* %33, align 8
  %226 = add nsw i32 %225, 128
  br label %250

227:                                              ; preds = %222
  %228 = load i32, i32* %31, align 4
  %229 = icmp slt i32 %193, %228
  br i1 %229, label %232, label %230

230:                                              ; preds = %227
  %231 = load i32, i32* %32, align 8
  br label %250

232:                                              ; preds = %227
  %233 = lshr i32 %184, 5
  %234 = and i32 %233, 2097151
  %235 = add nuw nsw i32 %234, 2080
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i16, i16* %197, i64 %236
  %238 = load i16, i16* %237, align 2
  %239 = zext i16 %238 to i32
  %240 = lshr i32 %193, 5
  %241 = and i32 %240, 63
  %242 = add nuw nsw i32 %241, %239
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds i16, i16* %197, i64 %243
  %245 = load i16, i16* %244, align 2
  %246 = zext i16 %245 to i32
  %247 = shl nuw nsw i32 %246, 2
  %248 = and i32 %191, 31
  %249 = add nuw nsw i32 %247, %248
  br label %250

250:                                              ; preds = %210, %230, %232, %224, %199
  %251 = phi i32 [ %207, %199 ], [ %221, %210 ], [ %226, %224 ], [ %231, %230 ], [ %249, %232 ]
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i16, i16* %197, i64 %252
  %254 = load i16, i16* %253, align 2
  %255 = zext i16 %254 to i32
  %256 = and i32 %255, 8
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %291

258:                                              ; preds = %250
  %259 = and i32 %255, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %276, label %261

261:                                              ; preds = %258
  %262 = ashr i16 %254, 7
  %263 = icmp eq i16 %262, 0
  br i1 %263, label %276, label %264

264:                                              ; preds = %261
  %265 = sext i16 %262 to i32
  %266 = sub nsw i32 %43, %44
  %267 = icmp sgt i32 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %264
  %269 = sext i32 %44 to i64
  %270 = getelementptr inbounds i8, i8* %2, i64 %269
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %270, i32 %266, %"class.icu_69::ByteSink"* dereferenceable(8) %6, i32 %1, %"class.icu_69::Edits"* %7) #8
  br label %271

271:                                              ; preds = %264, %268
  %272 = sub nsw i32 %194, %43
  %273 = add nsw i32 %193, %265
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %272, i32 %273, %"class.icu_69::ByteSink"* dereferenceable(8) %6, %"class.icu_69::Edits"* %7) #8
  br label %276

274:                                              ; preds = %169, %157, %119
  %275 = load i32, i32* %8, align 4
  br label %323

276:                                              ; preds = %81, %141, %160, %178, %182, %144, %125, %99, %97, %51, %261, %258, %271, %190, %113, %67
  %277 = phi i32 [ %45, %67 ], [ %44, %113 ], [ %44, %190 ], [ %194, %271 ], [ %44, %258 ], [ %44, %261 ], [ %44, %51 ], [ %83, %99 ], [ %83, %97 ], [ %44, %125 ], [ %44, %144 ], [ %44, %182 ], [ %44, %178 ], [ %44, %160 ], [ %44, %141 ], [ %44, %81 ]
  %278 = phi i32 [ %45, %67 ], [ %106, %113 ], [ %194, %190 ], [ %194, %271 ], [ %194, %258 ], [ %194, %261 ], [ %45, %51 ], [ %83, %99 ], [ %83, %97 ], [ %45, %125 ], [ %45, %144 ], [ %183, %182 ], [ %45, %178 ], [ %158, %160 ], [ %45, %141 ], [ %83, %81 ]
  %279 = load i32, i32* %8, align 4
  %280 = icmp slt i32 %279, 1
  %281 = icmp slt i32 %278, %5
  %282 = and i1 %281, %280
  br i1 %282, label %283, label %323

283:                                              ; preds = %276, %317
  %284 = phi i32 [ %279, %276 ], [ %319, %317 ]
  %285 = phi i32 [ %278, %276 ], [ %293, %317 ]
  %286 = phi i32 [ %277, %276 ], [ %318, %317 ]
  br label %41

287:                                              ; preds = %81
  %288 = icmp slt i32 %86, 0
  br i1 %288, label %323, label %291

289:                                              ; preds = %51
  %290 = zext i8 %48 to i32
  br label %291

291:                                              ; preds = %250, %289, %287
  %292 = phi i32 [ %86, %287 ], [ %290, %289 ], [ %193, %250 ]
  %293 = phi i32 [ %83, %287 ], [ %45, %289 ], [ %194, %250 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  br i1 %37, label %294, label %296

294:                                              ; preds = %291
  store i32 %43, i32* %38, align 4
  store i32 %293, i32* %39, align 8
  %295 = call i32 @ucase_toFullLower_69(i32 %292, i32 (i8*, i8)* nonnull @_ZN12_GLOBAL__N_124utf8_caseContextIteratorEPva, i8* %40, i16** nonnull %11, i32 %0) #8
  br label %298

296:                                              ; preds = %291
  %297 = call i32 @ucase_toFullFolding_69(i32 %292, i16** nonnull %11, i32 %1) #8
  br label %298

298:                                              ; preds = %296, %294
  %299 = phi i32 [ %295, %294 ], [ %297, %296 ]
  %300 = icmp sgt i32 %299, -1
  br i1 %300, label %301, label %317

301:                                              ; preds = %298
  %302 = sub nsw i32 %43, %44
  %303 = load i32, i32* %8, align 4
  %304 = icmp slt i32 %303, 1
  %305 = icmp sgt i32 %302, 0
  %306 = and i1 %305, %304
  br i1 %306, label %307, label %310

307:                                              ; preds = %301
  %308 = sext i32 %44 to i64
  %309 = getelementptr inbounds i8, i8* %2, i64 %308
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %309, i32 %302, %"class.icu_69::ByteSink"* dereferenceable(8) %6, i32 %1, %"class.icu_69::Edits"* %7) #8
  br label %310

310:                                              ; preds = %307, %301
  %311 = sub nsw i32 %293, %43
  %312 = icmp slt i32 %299, 32
  br i1 %312, label %313, label %316

313:                                              ; preds = %310
  %314 = load i16*, i16** %11, align 8
  %315 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEiPKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %311, i16* %314, i32 %299, %"class.icu_69::ByteSink"* dereferenceable(8) %6, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8) #8
  br label %317

316:                                              ; preds = %310
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %311, i32 %299, %"class.icu_69::ByteSink"* dereferenceable(8) %6, %"class.icu_69::Edits"* %7) #8
  br label %317

317:                                              ; preds = %298, %313, %316
  %318 = phi i32 [ %44, %298 ], [ %293, %313 ], [ %293, %316 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %319 = load i32, i32* %8, align 4
  %320 = icmp slt i32 %319, 1
  %321 = icmp slt i32 %293, %5
  %322 = and i1 %321, %320
  br i1 %322, label %283, label %323

323:                                              ; preds = %287, %317, %276, %274, %22
  %324 = phi i32 [ %25, %22 ], [ %275, %274 ], [ %319, %317 ], [ %42, %287 ], [ %279, %276 ]
  %325 = phi i32 [ %4, %22 ], [ %44, %274 ], [ %318, %317 ], [ %44, %287 ], [ %277, %276 ]
  %326 = phi i32 [ %4, %22 ], [ %5, %274 ], [ %293, %317 ], [ %83, %287 ], [ %278, %276 ]
  %327 = sub nsw i32 %326, %325
  %328 = icmp slt i32 %324, 1
  %329 = icmp sgt i32 %327, 0
  %330 = and i1 %328, %329
  br i1 %330, label %331, label %334

331:                                              ; preds = %323
  %332 = sext i32 %325 to i64
  %333 = getelementptr inbounds i8, i8* %2, i64 %332
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %333, i32 %327, %"class.icu_69::ByteSink"* dereferenceable(8) %6, i32 %1, %"class.icu_69::Edits"* %7) #8
  br label %334

334:                                              ; preds = %323, %331
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6910GreekUpper23isFollowedByCasedLetterEPKhii(i8* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  br label %4

4:                                                ; preds = %90, %3
  %5 = phi i32 [ %1, %3 ], [ %91, %90 ]
  %6 = icmp slt i32 %5, %2
  br i1 %6, label %7, label %99

7:                                                ; preds = %4
  %8 = add nsw i32 %5, 1
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp sgt i8 %11, -1
  br i1 %13, label %90, label %14

14:                                               ; preds = %7
  %15 = icmp eq i32 %8, %2
  br i1 %15, label %90, label %16

16:                                               ; preds = %14
  %17 = icmp ugt i8 %11, -33
  br i1 %17, label %18, label %73

18:                                               ; preds = %16
  %19 = icmp ult i8 %11, -16
  br i1 %19, label %20, label %36

20:                                               ; preds = %18
  %21 = and i32 %12, 15
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = sext i32 %8 to i64
  %27 = getelementptr inbounds i8, i8* %0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = lshr i8 %28, 5
  %30 = zext i8 %29 to i32
  %31 = shl i32 1, %30
  %32 = and i32 %31, %25
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %90, label %34

34:                                               ; preds = %20
  %35 = and i8 %28, 63
  br label %64

36:                                               ; preds = %18
  %37 = add nsw i32 %12, -240
  %38 = icmp slt i32 %37, 5
  br i1 %38, label %39, label %90

39:                                               ; preds = %36
  %40 = sext i32 %8 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = lshr i32 %43, 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = shl i32 1, %37
  %50 = and i32 %49, %48
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %90, label %52

52:                                               ; preds = %39
  %53 = add nsw i32 %5, 2
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %90, label %55

55:                                               ; preds = %52
  %56 = shl nsw i32 %37, 6
  %57 = and i32 %43, 63
  %58 = or i32 %57, %56
  %59 = sext i32 %53 to i64
  %60 = getelementptr inbounds i8, i8* %0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = xor i8 %61, -128
  %63 = icmp ult i8 %62, 64
  br i1 %63, label %64, label %90

64:                                               ; preds = %34, %55
  %65 = phi i32 [ %8, %34 ], [ %53, %55 ]
  %66 = phi i32 [ %21, %34 ], [ %58, %55 ]
  %67 = phi i8 [ %35, %34 ], [ %62, %55 ]
  %68 = shl nsw i32 %66, 6
  %69 = zext i8 %67 to i32
  %70 = or i32 %68, %69
  %71 = add nsw i32 %65, 1
  %72 = icmp eq i32 %71, %2
  br i1 %72, label %90, label %77

73:                                               ; preds = %16
  %74 = icmp ugt i8 %11, -63
  br i1 %74, label %75, label %90

75:                                               ; preds = %73
  %76 = and i32 %12, 31
  br label %77

77:                                               ; preds = %64, %75
  %78 = phi i32 [ %71, %64 ], [ %8, %75 ]
  %79 = phi i32 [ %70, %64 ], [ %76, %75 ]
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i8, i8* %0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = xor i8 %82, -128
  %84 = icmp ult i8 %83, 64
  br i1 %84, label %85, label %90

85:                                               ; preds = %77
  %86 = zext i8 %83 to i32
  %87 = shl i32 %79, 6
  %88 = or i32 %87, %86
  %89 = add nsw i32 %78, 1
  br label %90

90:                                               ; preds = %85, %20, %64, %52, %39, %14, %77, %73, %55, %36, %7
  %91 = phi i32 [ %8, %7 ], [ %89, %85 ], [ %78, %77 ], [ %2, %64 ], [ %8, %20 ], [ %53, %55 ], [ %2, %52 ], [ %8, %39 ], [ %8, %36 ], [ %8, %73 ], [ %2, %14 ]
  %92 = phi i32 [ %12, %7 ], [ %88, %85 ], [ -1, %77 ], [ -1, %64 ], [ -1, %20 ], [ -1, %55 ], [ -1, %52 ], [ -1, %39 ], [ -1, %36 ], [ -1, %73 ], [ -1, %14 ]
  %93 = tail call i32 @ucase_getTypeOrIgnorable_69(i32 %92) #8
  %94 = and i32 %93, 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %4

96:                                               ; preds = %90
  %97 = icmp ne i32 %93, 0
  %98 = zext i1 %97 to i8
  br label %99

99:                                               ; preds = %4, %96
  %100 = phi i8 [ %98, %96 ], [ 0, %4 ]
  ret i8 %100
}

declare i32 @ucase_getTypeOrIgnorable_69(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6910GreekUpper7toUpperEjPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %7 = alloca i16*, align 8
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %389

9:                                                ; preds = %6
  %10 = icmp eq %"class.icu_69::Edits"* %4, null
  %11 = and i32 %0, 16384
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10
  %14 = icmp ne %"class.icu_69::Edits"* %4, null
  %15 = bitcast %"class.icu_69::ByteSink"* %3 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %16 = bitcast i16** %7 to i8*
  br label %17

17:                                               ; preds = %9, %385
  %18 = phi i32 [ 0, %9 ], [ %387, %385 ]
  %19 = phi i32 [ 0, %9 ], [ %386, %385 ]
  %20 = add nsw i32 %18, 1
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %1, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp sgt i8 %23, -1
  br i1 %25, label %102, label %26

26:                                               ; preds = %17
  %27 = icmp eq i32 %20, %2
  br i1 %27, label %102, label %28

28:                                               ; preds = %26
  %29 = icmp ugt i8 %23, -33
  br i1 %29, label %30, label %85

30:                                               ; preds = %28
  %31 = icmp ult i8 %23, -16
  br i1 %31, label %32, label %48

32:                                               ; preds = %30
  %33 = and i32 %24, 15
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = sext i32 %20 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = lshr i8 %40, 5
  %42 = zext i8 %41 to i32
  %43 = shl i32 1, %42
  %44 = and i32 %43, %37
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %102, label %46

46:                                               ; preds = %32
  %47 = and i8 %40, 63
  br label %76

48:                                               ; preds = %30
  %49 = add nsw i32 %24, -240
  %50 = icmp slt i32 %49, 5
  br i1 %50, label %51, label %102

51:                                               ; preds = %48
  %52 = sext i32 %20 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = lshr i32 %55, 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = shl i32 1, %49
  %62 = and i32 %61, %60
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %102, label %64

64:                                               ; preds = %51
  %65 = add nsw i32 %18, 2
  %66 = icmp eq i32 %65, %2
  br i1 %66, label %102, label %67

67:                                               ; preds = %64
  %68 = shl nsw i32 %49, 6
  %69 = and i32 %55, 63
  %70 = or i32 %69, %68
  %71 = sext i32 %65 to i64
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = xor i8 %73, -128
  %75 = icmp ult i8 %74, 64
  br i1 %75, label %76, label %102

76:                                               ; preds = %46, %67
  %77 = phi i32 [ %20, %46 ], [ %65, %67 ]
  %78 = phi i32 [ %33, %46 ], [ %70, %67 ]
  %79 = phi i8 [ %47, %46 ], [ %74, %67 ]
  %80 = shl nsw i32 %78, 6
  %81 = zext i8 %79 to i32
  %82 = or i32 %80, %81
  %83 = add nsw i32 %77, 1
  %84 = icmp eq i32 %83, %2
  br i1 %84, label %102, label %89

85:                                               ; preds = %28
  %86 = icmp ugt i8 %23, -63
  br i1 %86, label %87, label %102

87:                                               ; preds = %85
  %88 = and i32 %24, 31
  br label %89

89:                                               ; preds = %76, %87
  %90 = phi i32 [ %83, %76 ], [ %20, %87 ]
  %91 = phi i32 [ %82, %76 ], [ %88, %87 ]
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds i8, i8* %1, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = xor i8 %94, -128
  %96 = icmp ult i8 %95, 64
  br i1 %96, label %97, label %102

97:                                               ; preds = %89
  %98 = zext i8 %95 to i32
  %99 = shl i32 %91, 6
  %100 = or i32 %99, %98
  %101 = add nsw i32 %90, 1
  br label %102

102:                                              ; preds = %97, %32, %76, %64, %51, %26, %89, %85, %67, %48, %17
  %103 = phi i32 [ %20, %17 ], [ %101, %97 ], [ %90, %89 ], [ %2, %76 ], [ %20, %32 ], [ %65, %67 ], [ %2, %64 ], [ %20, %51 ], [ %20, %48 ], [ %20, %85 ], [ %2, %26 ]
  %104 = phi i32 [ %24, %17 ], [ %100, %97 ], [ -1, %89 ], [ -1, %76 ], [ -1, %32 ], [ -1, %67 ], [ -1, %64 ], [ -1, %51 ], [ -1, %48 ], [ -1, %85 ], [ -1, %26 ]
  %105 = call i32 @ucase_getTypeOrIgnorable_69(i32 %104) #8
  %106 = and i32 %105, 4
  %107 = icmp eq i32 %106, 0
  %108 = and i32 %19, 1
  %109 = icmp ne i32 %105, 0
  %110 = zext i1 %109 to i32
  %111 = select i1 %107, i32 %110, i32 %108
  %112 = call i32 @_ZN6icu_6910GreekUpper13getLetterDataEi(i32 %104) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %358, label %114

114:                                              ; preds = %102
  %115 = and i32 %112, 1023
  %116 = and i32 %112, 4096
  %117 = icmp eq i32 %116, 0
  %118 = and i32 %19, 2
  %119 = icmp eq i32 %118, 0
  %120 = or i1 %119, %117
  br i1 %120, label %124, label %121

121:                                              ; preds = %114
  switch i32 %115, label %124 [
    i32 933, label %122
    i32 921, label %122
  ]

122:                                              ; preds = %121, %121
  %123 = or i32 %112, 32768
  br label %124

124:                                              ; preds = %121, %114, %122
  %125 = phi i32 [ %123, %122 ], [ %112, %121 ], [ %112, %114 ]
  %126 = lshr i32 %125, 13
  %127 = and i32 %126, 1
  %128 = icmp slt i32 %103, %2
  br i1 %128, label %129, label %226

129:                                              ; preds = %124, %220
  %130 = phi i32 [ %224, %220 ], [ %127, %124 ]
  %131 = phi i32 [ %221, %220 ], [ %125, %124 ]
  %132 = phi i32 [ %216, %220 ], [ %103, %124 ]
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds i8, i8* %1, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp sgt i8 %136, -1
  br i1 %138, label %215, label %139

139:                                              ; preds = %129
  %140 = icmp eq i32 %133, %2
  br i1 %140, label %215, label %141

141:                                              ; preds = %139
  %142 = icmp ugt i8 %136, -33
  br i1 %142, label %143, label %198

143:                                              ; preds = %141
  %144 = icmp ult i8 %136, -16
  br i1 %144, label %145, label %161

145:                                              ; preds = %143
  %146 = and i32 %137, 15
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = sext i32 %133 to i64
  %152 = getelementptr inbounds i8, i8* %1, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = lshr i8 %153, 5
  %155 = zext i8 %154 to i32
  %156 = shl i32 1, %155
  %157 = and i32 %156, %150
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %215, label %159

159:                                              ; preds = %145
  %160 = and i8 %153, 63
  br label %189

161:                                              ; preds = %143
  %162 = add nsw i32 %137, -240
  %163 = icmp slt i32 %162, 5
  br i1 %163, label %164, label %215

164:                                              ; preds = %161
  %165 = sext i32 %133 to i64
  %166 = getelementptr inbounds i8, i8* %1, i64 %165
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = lshr i32 %168, 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = shl i32 1, %162
  %175 = and i32 %174, %173
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %215, label %177

177:                                              ; preds = %164
  %178 = add nsw i32 %132, 2
  %179 = icmp eq i32 %178, %2
  br i1 %179, label %215, label %180

180:                                              ; preds = %177
  %181 = shl nsw i32 %162, 6
  %182 = and i32 %168, 63
  %183 = or i32 %182, %181
  %184 = sext i32 %178 to i64
  %185 = getelementptr inbounds i8, i8* %1, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = xor i8 %186, -128
  %188 = icmp ult i8 %187, 64
  br i1 %188, label %189, label %215

189:                                              ; preds = %159, %180
  %190 = phi i32 [ %133, %159 ], [ %178, %180 ]
  %191 = phi i32 [ %146, %159 ], [ %183, %180 ]
  %192 = phi i8 [ %160, %159 ], [ %187, %180 ]
  %193 = shl nsw i32 %191, 6
  %194 = zext i8 %192 to i32
  %195 = or i32 %193, %194
  %196 = add nsw i32 %190, 1
  %197 = icmp eq i32 %196, %2
  br i1 %197, label %215, label %202

198:                                              ; preds = %141
  %199 = icmp ugt i8 %136, -63
  br i1 %199, label %200, label %215

200:                                              ; preds = %198
  %201 = and i32 %137, 31
  br label %202

202:                                              ; preds = %189, %200
  %203 = phi i32 [ %196, %189 ], [ %133, %200 ]
  %204 = phi i32 [ %195, %189 ], [ %201, %200 ]
  %205 = sext i32 %203 to i64
  %206 = getelementptr inbounds i8, i8* %1, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = xor i8 %207, -128
  %209 = icmp ult i8 %208, 64
  br i1 %209, label %210, label %215

210:                                              ; preds = %202
  %211 = zext i8 %208 to i32
  %212 = shl i32 %204, 6
  %213 = or i32 %212, %211
  %214 = add nsw i32 %203, 1
  br label %215

215:                                              ; preds = %210, %145, %189, %177, %164, %139, %202, %198, %180, %161, %129
  %216 = phi i32 [ %133, %129 ], [ %214, %210 ], [ %203, %202 ], [ %2, %189 ], [ %133, %145 ], [ %178, %180 ], [ %2, %177 ], [ %133, %164 ], [ %133, %161 ], [ %133, %198 ], [ %2, %139 ]
  %217 = phi i32 [ %137, %129 ], [ %213, %210 ], [ -1, %202 ], [ -1, %189 ], [ -1, %145 ], [ -1, %180 ], [ -1, %177 ], [ -1, %164 ], [ -1, %161 ], [ -1, %198 ], [ -1, %139 ]
  %218 = call i32 @_ZN6icu_6910GreekUpper16getDiacriticDataEi(i32 %217) #8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %215
  %221 = or i32 %218, %131
  %222 = lshr i32 %218, 13
  %223 = and i32 %222, 1
  %224 = add nuw nsw i32 %223, %130
  %225 = icmp slt i32 %216, %2
  br i1 %225, label %129, label %226

226:                                              ; preds = %220, %215, %124
  %227 = phi i32 [ %103, %124 ], [ %132, %215 ], [ %216, %220 ]
  %228 = phi i32 [ %125, %124 ], [ %131, %215 ], [ %221, %220 ]
  %229 = phi i32 [ %127, %124 ], [ %130, %215 ], [ %224, %220 ]
  %230 = and i32 %228, 53248
  %231 = icmp eq i32 %230, 20480
  %232 = or i32 %111, 2
  %233 = select i1 %231, i32 %232, i32 %111
  %234 = icmp eq i32 %115, 919
  br i1 %234, label %235, label %249

235:                                              ; preds = %226
  %236 = and i32 %228, 16384
  %237 = icmp ne i32 %236, 0
  %238 = or i32 %229, %108
  %239 = icmp eq i32 %238, 0
  %240 = and i1 %237, %239
  br i1 %240, label %241, label %249

241:                                              ; preds = %235
  %242 = call signext i8 @_ZN6icu_6910GreekUpper23isFollowedByCasedLetterEPKhii(i8* %1, i32 %227, i32 %2)
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %249

244:                                              ; preds = %241
  %245 = icmp eq i32 %227, %18
  %246 = select i1 %245, i32 905, i32 919
  %247 = xor i1 %245, true
  %248 = zext i1 %247 to i8
  br label %255

249:                                              ; preds = %241, %235, %226
  %250 = trunc i32 %228 to i16
  %251 = icmp slt i16 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %249
  switch i32 %115, label %255 [
    i32 921, label %253
    i32 933, label %254
  ]

253:                                              ; preds = %252
  br label %255

254:                                              ; preds = %252
  br label %255

255:                                              ; preds = %252, %244, %249, %254, %253
  %256 = phi i32 [ 0, %253 ], [ 0, %254 ], [ %228, %249 ], [ %228, %244 ], [ %228, %252 ]
  %257 = phi i32 [ 938, %253 ], [ 939, %254 ], [ %115, %249 ], [ %246, %244 ], [ %115, %252 ]
  %258 = phi i8 [ 0, %253 ], [ 0, %254 ], [ 0, %249 ], [ %248, %244 ], [ 0, %252 ]
  br i1 %13, label %259, label %261

259:                                              ; preds = %255
  %260 = and i32 %256, 98304
  br label %336

261:                                              ; preds = %255
  %262 = add nsw i32 %18, 2
  %263 = icmp sgt i32 %262, %227
  br i1 %263, label %280, label %264

264:                                              ; preds = %261
  %265 = load i8, i8* %22, align 1
  %266 = lshr i32 %257, 6
  %267 = trunc i32 %266 to i8
  %268 = or i8 %267, -64
  %269 = icmp eq i8 %265, %268
  br i1 %269, label %270, label %280

270:                                              ; preds = %264
  %271 = sext i32 %20 to i64
  %272 = getelementptr inbounds i8, i8* %1, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = trunc i32 %257 to i8
  %275 = and i8 %274, 63
  %276 = or i8 %275, -128
  %277 = icmp ne i8 %273, %276
  %278 = icmp sgt i32 %229, 0
  %279 = or i1 %278, %277
  br label %280

280:                                              ; preds = %270, %264, %261
  %281 = phi i1 [ true, %264 ], [ true, %261 ], [ %279, %270 ]
  %282 = and i32 %256, 98304
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %301, label %284

284:                                              ; preds = %280
  %285 = add nsw i32 %18, 4
  %286 = icmp sgt i32 %285, %227
  br i1 %286, label %298, label %287

287:                                              ; preds = %284
  %288 = sext i32 %262 to i64
  %289 = getelementptr inbounds i8, i8* %1, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = icmp eq i8 %290, -52
  br i1 %291, label %292, label %298

292:                                              ; preds = %287
  %293 = add nsw i32 %18, 3
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, i8* %1, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = icmp ne i8 %296, -120
  br label %298

298:                                              ; preds = %287, %292, %284
  %299 = phi i1 [ true, %287 ], [ true, %284 ], [ %297, %292 ]
  %300 = or i1 %281, %299
  br label %301

301:                                              ; preds = %280, %298
  %302 = phi i1 [ %300, %298 ], [ %281, %280 ]
  %303 = phi i32 [ %285, %298 ], [ %262, %280 ]
  %304 = icmp eq i8 %258, 0
  br i1 %304, label %322, label %305

305:                                              ; preds = %301
  %306 = add nsw i32 %303, 2
  %307 = icmp sgt i32 %306, %227
  br i1 %307, label %319, label %308

308:                                              ; preds = %305
  %309 = sext i32 %303 to i64
  %310 = getelementptr inbounds i8, i8* %1, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = icmp eq i8 %311, -52
  br i1 %312, label %313, label %319

313:                                              ; preds = %308
  %314 = add nsw i32 %303, 1
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %1, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = icmp ne i8 %317, -127
  br label %319

319:                                              ; preds = %308, %313, %305
  %320 = phi i1 [ true, %308 ], [ true, %305 ], [ %318, %313 ]
  %321 = or i1 %302, %320
  br label %322

322:                                              ; preds = %301, %319
  %323 = phi i1 [ %321, %319 ], [ %302, %301 ]
  %324 = phi i32 [ %306, %319 ], [ %303, %301 ]
  %325 = sub nsw i32 %227, %18
  %326 = sub nsw i32 %324, %18
  %327 = shl nsw i32 %229, 1
  %328 = add nsw i32 %326, %327
  %329 = icmp ne i32 %325, %328
  %330 = or i1 %323, %329
  br i1 %330, label %331, label %333

331:                                              ; preds = %322
  br i1 %14, label %332, label %336

332:                                              ; preds = %331
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %4, i32 %325, i32 %328) #8
  br label %336

333:                                              ; preds = %322
  br i1 %14, label %334, label %335

334:                                              ; preds = %333
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %4, i32 %325) #8
  br label %335

335:                                              ; preds = %333, %334
  br i1 %12, label %336, label %385

336:                                              ; preds = %259, %335, %331, %332
  %337 = phi i32 [ %260, %259 ], [ %282, %335 ], [ %282, %331 ], [ %282, %332 ]
  call void @_ZN6icu_6912ByteSinkUtil14appendTwoBytesEiRNS_8ByteSinkE(i32 %257, %"class.icu_69::ByteSink"* dereferenceable(8) %3) #8
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %343, label %339

339:                                              ; preds = %336
  %340 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %15, align 8
  %341 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %340, i64 2
  %342 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %341, align 8
  call void %342(%"class.icu_69::ByteSink"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 2) #8
  br label %343

343:                                              ; preds = %336, %339
  %344 = icmp eq i8 %258, 0
  br i1 %344, label %349, label %345

345:                                              ; preds = %343
  %346 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %15, align 8
  %347 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %346, i64 2
  %348 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %347, align 8
  call void %348(%"class.icu_69::ByteSink"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 2) #8
  br label %349

349:                                              ; preds = %343, %345
  %350 = icmp sgt i32 %229, 0
  br i1 %350, label %351, label %385

351:                                              ; preds = %349, %351
  %352 = phi i32 [ %356, %351 ], [ %229, %349 ]
  %353 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %15, align 8
  %354 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %353, i64 2
  %355 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %354, align 8
  call void %355(%"class.icu_69::ByteSink"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 2) #8
  %356 = add nsw i32 %352, -1
  %357 = icmp sgt i32 %356, 0
  br i1 %357, label %351, label %385

358:                                              ; preds = %102
  %359 = icmp sgt i32 %104, -1
  br i1 %359, label %360, label %378

360:                                              ; preds = %358
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %361 = call i32 @ucase_toFullUpper_69(i32 %104, i32 (i8*, i8)* null, i8* null, i16** nonnull %7, i32 4) #8
  %362 = sub nsw i32 %103, %18
  %363 = load i16*, i16** %7, align 8
  %364 = icmp slt i32 %361, 0
  br i1 %364, label %365, label %370

365:                                              ; preds = %360
  br i1 %10, label %367, label %366

366:                                              ; preds = %365
  call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %4, i32 %362) #8
  br label %367

367:                                              ; preds = %366, %365
  br i1 %12, label %368, label %376

368:                                              ; preds = %367
  %369 = xor i32 %361, -1
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %362, i32 %369, %"class.icu_69::ByteSink"* dereferenceable(8) %3, %"class.icu_69::Edits"* null) #8
  br label %376

370:                                              ; preds = %360
  %371 = icmp slt i32 %361, 32
  br i1 %371, label %373, label %372

372:                                              ; preds = %370
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %362, i32 %361, %"class.icu_69::ByteSink"* dereferenceable(8) %3, %"class.icu_69::Edits"* %4) #8
  br label %376

373:                                              ; preds = %370
  %374 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEiPKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %362, i16* %363, i32 %361, %"class.icu_69::ByteSink"* dereferenceable(8) %3, %"class.icu_69::Edits"* %4, i32* dereferenceable(4) %5) #8
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %373, %367, %368, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %385

377:                                              ; preds = %373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %389

378:                                              ; preds = %358
  %379 = sub nsw i32 %103, %18
  %380 = load i32, i32* %5, align 4
  %381 = icmp slt i32 %380, 1
  br i1 %381, label %382, label %389

382:                                              ; preds = %378
  %383 = icmp sgt i32 %379, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %22, i32 %379, %"class.icu_69::ByteSink"* dereferenceable(8) %3, i32 %0, %"class.icu_69::Edits"* %4) #8
  br label %385

385:                                              ; preds = %351, %349, %335, %382, %384, %376
  %386 = phi i32 [ %233, %335 ], [ %111, %376 ], [ %111, %384 ], [ %111, %382 ], [ %233, %349 ], [ %233, %351 ]
  %387 = phi i32 [ %227, %335 ], [ %103, %376 ], [ %103, %384 ], [ %103, %382 ], [ %227, %349 ], [ %227, %351 ]
  %388 = icmp slt i32 %387, %2
  br i1 %388, label %17, label %389

389:                                              ; preds = %385, %378, %6, %377
  ret void
}

declare i32 @_ZN6icu_6910GreekUpper13getLetterDataEi(i32) local_unnamed_addr #5

declare i32 @_ZN6icu_6910GreekUpper16getDiacriticDataEi(i32) local_unnamed_addr #5

declare void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"*, i32, i32) local_unnamed_addr #5

declare void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"*, i32) local_unnamed_addr #5

declare void @_ZN6icu_6912ByteSinkUtil14appendTwoBytesEiRNS_8ByteSinkE(i32, %"class.icu_69::ByteSink"* dereferenceable(8)) local_unnamed_addr #5

declare i32 @ucase_toFullUpper_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeES7_S9_SB_(i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nocapture, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %41

12:                                               ; preds = %9
  %13 = icmp eq i8* %3, null
  %14 = icmp ne i32 %4, 0
  %15 = and i1 %13, %14
  %16 = icmp slt i32 %4, -1
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  store i32 1, i32* %8, align 4
  br label %41

19:                                               ; preds = %12
  %20 = icmp eq i32 %4, -1
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = tail call i64 @strlen(i8* %3) #9
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %21, %19
  %25 = phi i32 [ %23, %21 ], [ %4, %19 ]
  %26 = icmp ne %"class.icu_69::Edits"* %7, null
  %27 = and i32 %1, 8192
  %28 = icmp eq i32 %27, 0
  %29 = and i1 %28, %26
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %7) #8
  br label %31

31:                                               ; preds = %30, %24
  tail call void %5(i32 %0, i32 %1, %"class.icu_69::BreakIterator"* %2, i8* %3, i32 %25, %"class.icu_69::ByteSink"* dereferenceable(8) %6, %"class.icu_69::Edits"* %7, i32* dereferenceable(4) %8) #8
  %32 = bitcast %"class.icu_69::ByteSink"* %6 to void (%"class.icu_69::ByteSink"*)***
  %33 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %33, i64 4
  %35 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %34, align 8
  tail call void %35(%"class.icu_69::ByteSink"* %6) #8
  %36 = load i32, i32* %8, align 4
  %37 = icmp slt i32 %36, 1
  %38 = and i1 %26, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = tail call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %7, i32* dereferenceable(4) %8) #8
  br label %41

41:                                               ; preds = %9, %39, %18, %31
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"*) local_unnamed_addr #2

declare signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, i8*, i32, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nocapture, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 {
  %11 = alloca %"class.icu_69::CheckedArrayByteSink", align 8
  %12 = load i32, i32* %9, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %71

14:                                               ; preds = %10
  %15 = icmp slt i32 %4, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = icmp eq i8* %3, null
  %18 = icmp ne i32 %4, 0
  %19 = and i1 %17, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = icmp eq i8* %5, null
  %22 = icmp ne i32 %6, 0
  %23 = and i1 %21, %22
  %24 = icmp slt i32 %6, -1
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %27

26:                                               ; preds = %20, %16, %14
  store i32 1, i32* %9, align 4
  br label %71

27:                                               ; preds = %20
  %28 = icmp eq i32 %6, -1
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = tail call i64 @strlen(i8* %5) #9
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi i32 [ %31, %29 ], [ %6, %27 ]
  br i1 %17, label %47, label %34

34:                                               ; preds = %32
  %35 = icmp ult i8* %5, %3
  br i1 %35, label %40, label %36

36:                                               ; preds = %34
  %37 = sext i32 %4 to i64
  %38 = getelementptr inbounds i8, i8* %3, i64 %37
  %39 = icmp ugt i8* %38, %5
  br i1 %39, label %46, label %40

40:                                               ; preds = %34, %36
  %41 = icmp ult i8* %3, %5
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = sext i32 %33 to i64
  %44 = getelementptr inbounds i8, i8* %5, i64 %43
  %45 = icmp ugt i8* %44, %3
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %36
  store i32 1, i32* %9, align 4
  br label %71

47:                                               ; preds = %40, %32, %42
  %48 = bitcast %"class.icu_69::CheckedArrayByteSink"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %11, i64 0, i32 4
  %50 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %11, i64 0, i32 5
  %51 = bitcast %"class.icu_69::CheckedArrayByteSink"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false)
  call void @_ZN6icu_6920CheckedArrayByteSinkC1EPci(%"class.icu_69::CheckedArrayByteSink"* nonnull %11, i8* %3, i32 %4) #8
  %52 = icmp ne %"class.icu_69::Edits"* %8, null
  %53 = and i32 %1, 8192
  %54 = icmp eq i32 %53, 0
  %55 = and i1 %54, %52
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %8) #8
  br label %57

57:                                               ; preds = %56, %47
  %58 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %11, i64 0, i32 0
  call void %7(i32 %0, i32 %1, %"class.icu_69::BreakIterator"* %2, i8* %5, i32 %33, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %58, %"class.icu_69::Edits"* %8, i32* dereferenceable(4) %9) #8
  call void @_ZN6icu_698ByteSink5FlushEv(%"class.icu_69::ByteSink"* nonnull %58) #8
  %59 = load i32, i32* %9, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = load i8, i8* %50, align 4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  store i32 15, i32* %9, align 4
  br label %68

65:                                               ; preds = %61
  br i1 %52, label %66, label %68

66:                                               ; preds = %65
  %67 = call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %8, i32* dereferenceable(4) %9) #8
  br label %68

68:                                               ; preds = %57, %64, %66, %65
  %69 = load i32, i32* %49, align 8
  %70 = call i32 @u_terminateChars_69(i8* %3, i32 %4, i32 %69, i32* %9) #8
  call void @_ZN6icu_6920CheckedArrayByteSinkD1Ev(%"class.icu_69::CheckedArrayByteSink"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #8
  br label %71

71:                                               ; preds = %10, %68, %46, %26
  %72 = phi i32 [ 0, %26 ], [ 0, %46 ], [ %70, %68 ], [ 0, %10 ]
  ret i32 %72
}

declare void @_ZN6icu_6920CheckedArrayByteSinkC1EPci(%"class.icu_69::CheckedArrayByteSink"*, i8*, i32) unnamed_addr #5

declare void @_ZN6icu_698ByteSink5FlushEv(%"class.icu_69::ByteSink"*) unnamed_addr #5

declare i32 @u_terminateChars_69(i8*, i32, i32, i32*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_6920CheckedArrayByteSinkD1Ev(%"class.icu_69::CheckedArrayByteSink"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucasemap_utf8ToLower_69(%struct.UCaseMap* nocapture readonly, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 %8, i32 %10, %"class.icu_69::BreakIterator"* null, i8* %1, i32 %2, i8* %3, i32 %4, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL28ucasemap_internalUTF8ToLowerijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %5)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL28ucasemap_internalUTF8ToLowerijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) #0 {
  %9 = alloca %struct.UCaseContext, align 8
  %10 = bitcast %struct.UCaseContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  %11 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 1
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false)
  %13 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 0
  store i8* %3, i8** %13, align 8
  %14 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %9, i64 0, i32 3
  store i32 %4, i32* %14, align 8
  call fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32 %0, i32 %1, i8* %3, %struct.UCaseContext* nonnull %9, i32 0, i32 %4, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucasemap_utf8ToUpper_69(%struct.UCaseMap* nocapture readonly, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 %8, i32 %10, %"class.icu_69::BreakIterator"* null, i8* %1, i32 %2, i8* %3, i32 %4, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL28ucasemap_internalUTF8ToUpperijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %5)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL28ucasemap_internalUTF8ToUpperijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) #0 {
  %9 = alloca i8, align 1
  %10 = alloca i16*, align 8
  %11 = alloca %struct.UCaseContext, align 8
  %12 = icmp eq i32 %0, 4
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @_ZN6icu_6910GreekUpper7toUpperEjPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %1, i8* %3, i32 %4, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  br label %324

14:                                               ; preds = %8
  %15 = bitcast %struct.UCaseContext* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #8
  %16 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 1
  %17 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false)
  %18 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 0
  store i8* %3, i8** %18, align 8
  %19 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 3
  store i32 %4, i32* %19, align 8
  %20 = icmp eq i32 %0, 2
  %21 = select i1 %20, i8* getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase11TO_UPPER_TRE, i64 0, i64 0), i8* getelementptr inbounds ([384 x i8], [384 x i8]* @_ZN6icu_699LatinCase15TO_UPPER_NORMALE, i64 0, i64 0)
  %22 = tail call %struct.UTrie2* @ucase_getTrie_69() #8
  %23 = load i32, i32* %7, align 4
  %24 = icmp slt i32 %23, 1
  %25 = icmp sgt i32 %4, 0
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %312

27:                                               ; preds = %14
  %28 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %22, i64 0, i32 0
  %29 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %22, i64 0, i32 9
  %30 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %22, i64 0, i32 10
  %31 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %22, i64 0, i32 3
  %32 = icmp eq %"class.icu_69::Edits"* %6, null
  %33 = bitcast %"class.icu_69::ByteSink"* %5 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %34 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 4
  %35 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %11, i64 0, i32 5
  %36 = bitcast i16** %10 to i8*
  br label %37

37:                                               ; preds = %277, %27
  %38 = phi i32 [ %23, %27 ], [ %278, %277 ]
  %39 = phi i32 [ 0, %27 ], [ %279, %277 ]
  %40 = phi i32 [ 0, %27 ], [ %280, %277 ]
  %41 = add nsw i32 %39, 1
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds i8, i8* %3, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp sgt i8 %44, -1
  br i1 %46, label %47, label %64

47:                                               ; preds = %37
  %48 = zext i8 %44 to i64
  %49 = getelementptr inbounds i8, i8* %21, i64 %48
  %50 = load i8, i8* %49, align 1
  switch i8 %50, label %51 [
    i8 -128, label %283
    i8 0, label %270
  ]

51:                                               ; preds = %47
  %52 = sub nsw i32 %39, %40
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = sext i32 %40 to i64
  %56 = getelementptr inbounds i8, i8* %3, i64 %55
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %56, i32 %52, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %57

57:                                               ; preds = %54, %51
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  %58 = add i8 %50, %44
  store i8 %58, i8* %9, align 1
  %59 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %33, align 8
  %60 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %59, i64 2
  %61 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %60, align 8
  call void %61(%"class.icu_69::ByteSink"* %5, i8* nonnull %9, i32 1) #8
  br i1 %32, label %63, label %62

62:                                               ; preds = %57
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %6, i32 1, i32 1) #8
  br label %63

63:                                               ; preds = %62, %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  br label %270

64:                                               ; preds = %37
  %65 = icmp ult i8 %44, -29
  br i1 %65, label %66, label %96

66:                                               ; preds = %64
  %67 = add nsw i8 %44, 62
  %68 = icmp ult i8 %67, 4
  %69 = icmp slt i32 %41, %4
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %115

71:                                               ; preds = %66
  %72 = sext i32 %41 to i64
  %73 = getelementptr inbounds i8, i8* %3, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = xor i8 %74, -128
  %76 = icmp ult i8 %75, 64
  br i1 %76, label %77, label %115

77:                                               ; preds = %71
  %78 = zext i8 %75 to i32
  %79 = add nsw i32 %39, 2
  %80 = shl nuw nsw i32 %45, 6
  %81 = add nsw i32 %80, -12288
  %82 = or i32 %81, %78
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %21, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  switch i8 %85, label %87 [
    i8 -128, label %281
    i8 0, label %270
  ]

87:                                               ; preds = %77
  %88 = sub nsw i32 %39, %40
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = sext i32 %40 to i64
  %92 = getelementptr inbounds i8, i8* %3, i64 %91
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %92, i32 %88, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %93

93:                                               ; preds = %90, %87
  %94 = add nsw i32 %82, %86
  call void @_ZN6icu_6912ByteSinkUtil14appendTwoBytesEiRNS_8ByteSinkE(i32 %94, %"class.icu_69::ByteSink"* dereferenceable(8) %5) #8
  br i1 %32, label %270, label %95

95:                                               ; preds = %93
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %6, i32 2, i32 2) #8
  br label %270

96:                                               ; preds = %64
  %97 = icmp ult i8 %44, -22
  %98 = add nsw i8 %44, 21
  %99 = icmp ult i8 %98, 2
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %115

101:                                              ; preds = %96
  %102 = add nsw i32 %39, 3
  %103 = icmp sgt i32 %102, %4
  br i1 %103, label %115, label %104

104:                                              ; preds = %101
  %105 = sext i32 %41 to i64
  %106 = getelementptr inbounds i8, i8* %3, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, -64
  br i1 %108, label %109, label %115

109:                                              ; preds = %104
  %110 = add nsw i32 %39, 2
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %3, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, -64
  br i1 %114, label %270, label %115

115:                                              ; preds = %109, %104, %101, %96, %71, %66
  %116 = icmp eq i32 %41, %4
  br i1 %116, label %312, label %117

117:                                              ; preds = %115
  %118 = icmp ugt i8 %44, -33
  br i1 %118, label %119, label %174

119:                                              ; preds = %117
  %120 = icmp ult i8 %44, -16
  br i1 %120, label %121, label %137

121:                                              ; preds = %119
  %122 = and i32 %45, 15
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = sext i8 %125 to i32
  %127 = sext i32 %41 to i64
  %128 = getelementptr inbounds i8, i8* %3, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = lshr i8 %129, 5
  %131 = zext i8 %130 to i32
  %132 = shl i32 1, %131
  %133 = and i32 %132, %126
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %270, label %135

135:                                              ; preds = %121
  %136 = and i8 %129, 63
  br label %165

137:                                              ; preds = %119
  %138 = add nsw i32 %45, -240
  %139 = icmp slt i32 %138, 5
  br i1 %139, label %140, label %270

140:                                              ; preds = %137
  %141 = sext i32 %41 to i64
  %142 = getelementptr inbounds i8, i8* %3, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = lshr i32 %144, 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = shl i32 1, %138
  %151 = and i32 %150, %149
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %270, label %153

153:                                              ; preds = %140
  %154 = add nsw i32 %39, 2
  %155 = icmp eq i32 %154, %4
  br i1 %155, label %312, label %156

156:                                              ; preds = %153
  %157 = shl nsw i32 %138, 6
  %158 = and i32 %144, 63
  %159 = or i32 %158, %157
  %160 = sext i32 %154 to i64
  %161 = getelementptr inbounds i8, i8* %3, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = xor i8 %162, -128
  %164 = icmp ult i8 %163, 64
  br i1 %164, label %165, label %270

165:                                              ; preds = %156, %135
  %166 = phi i32 [ %41, %135 ], [ %154, %156 ]
  %167 = phi i32 [ %122, %135 ], [ %159, %156 ]
  %168 = phi i8 [ %136, %135 ], [ %163, %156 ]
  %169 = shl nsw i32 %167, 6
  %170 = zext i8 %168 to i32
  %171 = or i32 %169, %170
  %172 = add nsw i32 %166, 1
  %173 = icmp eq i32 %172, %4
  br i1 %173, label %312, label %178

174:                                              ; preds = %117
  %175 = icmp ugt i8 %44, -63
  br i1 %175, label %176, label %270

176:                                              ; preds = %174
  %177 = and i32 %45, 31
  br label %178

178:                                              ; preds = %176, %165
  %179 = phi i32 [ %172, %165 ], [ %41, %176 ]
  %180 = phi i32 [ %171, %165 ], [ %177, %176 ]
  %181 = sext i32 %179 to i64
  %182 = getelementptr inbounds i8, i8* %3, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = xor i8 %183, -128
  %185 = icmp ult i8 %184, 64
  br i1 %185, label %186, label %270

186:                                              ; preds = %178
  %187 = zext i8 %184 to i32
  %188 = shl i32 %180, 6
  %189 = or i32 %188, %187
  %190 = add nsw i32 %179, 1
  %191 = icmp slt i32 %189, 0
  br i1 %191, label %270, label %192

192:                                              ; preds = %186
  %193 = load i16*, i16** %28, align 8
  %194 = icmp ult i32 %189, 55296
  br i1 %194, label %195, label %204

195:                                              ; preds = %192
  %196 = lshr i32 %189, 5
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i16, i16* %193, i64 %197
  %199 = load i16, i16* %198, align 2
  %200 = zext i16 %199 to i32
  %201 = shl nuw nsw i32 %200, 2
  %202 = and i32 %187, 31
  %203 = add nuw nsw i32 %201, %202
  br label %246

204:                                              ; preds = %192
  %205 = icmp ult i32 %189, 65536
  br i1 %205, label %206, label %218

206:                                              ; preds = %204
  %207 = icmp slt i32 %189, 56320
  %208 = select i1 %207, i32 320, i32 0
  %209 = lshr i32 %189, 5
  %210 = add nuw nsw i32 %208, %209
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i16, i16* %193, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = shl nuw nsw i32 %214, 2
  %216 = and i32 %187, 31
  %217 = add nuw nsw i32 %215, %216
  br label %246

218:                                              ; preds = %204
  %219 = icmp ugt i32 %189, 1114111
  br i1 %219, label %220, label %223

220:                                              ; preds = %218
  %221 = load i32, i32* %31, align 8
  %222 = add nsw i32 %221, 128
  br label %246

223:                                              ; preds = %218
  %224 = load i32, i32* %29, align 4
  %225 = icmp slt i32 %189, %224
  br i1 %225, label %228, label %226

226:                                              ; preds = %223
  %227 = load i32, i32* %30, align 8
  br label %246

228:                                              ; preds = %223
  %229 = lshr i32 %180, 5
  %230 = and i32 %229, 2097151
  %231 = add nuw nsw i32 %230, 2080
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i16, i16* %193, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = zext i16 %234 to i32
  %236 = lshr i32 %189, 5
  %237 = and i32 %236, 63
  %238 = add nuw nsw i32 %237, %235
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds i16, i16* %193, i64 %239
  %241 = load i16, i16* %240, align 2
  %242 = zext i16 %241 to i32
  %243 = shl nuw nsw i32 %242, 2
  %244 = and i32 %187, 31
  %245 = add nuw nsw i32 %243, %244
  br label %246

246:                                              ; preds = %228, %226, %220, %206, %195
  %247 = phi i32 [ %203, %195 ], [ %217, %206 ], [ %222, %220 ], [ %227, %226 ], [ %245, %228 ]
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i16, i16* %193, i64 %248
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = and i32 %251, 8
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %285

254:                                              ; preds = %246
  %255 = and i32 %251, 3
  %256 = icmp eq i32 %255, 1
  br i1 %256, label %257, label %270

257:                                              ; preds = %254
  %258 = ashr i16 %250, 7
  %259 = icmp eq i16 %258, 0
  br i1 %259, label %270, label %260

260:                                              ; preds = %257
  %261 = sext i16 %258 to i32
  %262 = sub nsw i32 %39, %40
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  %265 = sext i32 %40 to i64
  %266 = getelementptr inbounds i8, i8* %3, i64 %265
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %266, i32 %262, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %267

267:                                              ; preds = %264, %260
  %268 = sub nsw i32 %190, %39
  %269 = add nsw i32 %189, %261
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %268, i32 %269, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  br label %270

270:                                              ; preds = %267, %257, %254, %186, %178, %174, %156, %140, %137, %121, %109, %95, %93, %77, %63, %47
  %271 = phi i32 [ %41, %63 ], [ %40, %109 ], [ %40, %186 ], [ %190, %267 ], [ %40, %254 ], [ %40, %257 ], [ %40, %47 ], [ %79, %95 ], [ %79, %93 ], [ %40, %121 ], [ %40, %140 ], [ %40, %178 ], [ %40, %174 ], [ %40, %156 ], [ %40, %137 ], [ %40, %77 ]
  %272 = phi i32 [ %41, %63 ], [ %102, %109 ], [ %190, %186 ], [ %190, %267 ], [ %190, %254 ], [ %190, %257 ], [ %41, %47 ], [ %79, %95 ], [ %79, %93 ], [ %41, %121 ], [ %41, %140 ], [ %179, %178 ], [ %41, %174 ], [ %154, %156 ], [ %41, %137 ], [ %79, %77 ]
  %273 = load i32, i32* %7, align 4
  %274 = icmp slt i32 %273, 1
  %275 = icmp slt i32 %272, %4
  %276 = and i1 %275, %274
  br i1 %276, label %277, label %312

277:                                              ; preds = %270, %306
  %278 = phi i32 [ %273, %270 ], [ %308, %306 ]
  %279 = phi i32 [ %272, %270 ], [ %287, %306 ]
  %280 = phi i32 [ %271, %270 ], [ %307, %306 ]
  br label %37

281:                                              ; preds = %77
  %282 = icmp slt i32 %82, 0
  br i1 %282, label %312, label %285

283:                                              ; preds = %47
  %284 = zext i8 %44 to i32
  br label %285

285:                                              ; preds = %246, %283, %281
  %286 = phi i32 [ %82, %281 ], [ %284, %283 ], [ %189, %246 ]
  %287 = phi i32 [ %79, %281 ], [ %41, %283 ], [ %190, %246 ]
  store i32 %39, i32* %34, align 4
  store i32 %287, i32* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %10, align 8
  %288 = call i32 @ucase_toFullUpper_69(i32 %286, i32 (i8*, i8)* nonnull @_ZN12_GLOBAL__N_124utf8_caseContextIteratorEPva, i8* nonnull %15, i16** nonnull %10, i32 %0) #8
  %289 = icmp sgt i32 %288, -1
  br i1 %289, label %290, label %306

290:                                              ; preds = %285
  %291 = sub nsw i32 %39, %40
  %292 = load i32, i32* %7, align 4
  %293 = icmp slt i32 %292, 1
  %294 = icmp sgt i32 %291, 0
  %295 = and i1 %294, %293
  br i1 %295, label %296, label %299

296:                                              ; preds = %290
  %297 = sext i32 %40 to i64
  %298 = getelementptr inbounds i8, i8* %3, i64 %297
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %298, i32 %291, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %299

299:                                              ; preds = %296, %290
  %300 = sub nsw i32 %287, %39
  %301 = icmp slt i32 %288, 32
  br i1 %301, label %302, label %305

302:                                              ; preds = %299
  %303 = load i16*, i16** %10, align 8
  %304 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEiPKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %300, i16* %303, i32 %288, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  br label %306

305:                                              ; preds = %299
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %300, i32 %288, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  br label %306

306:                                              ; preds = %305, %302, %285
  %307 = phi i32 [ %40, %285 ], [ %287, %302 ], [ %287, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %308 = load i32, i32* %7, align 4
  %309 = icmp slt i32 %308, 1
  %310 = icmp slt i32 %287, %4
  %311 = and i1 %310, %309
  br i1 %311, label %277, label %312

312:                                              ; preds = %306, %281, %270, %115, %153, %165, %14
  %313 = phi i32 [ %23, %14 ], [ %38, %281 ], [ %308, %306 ], [ %273, %270 ], [ %38, %115 ], [ %38, %153 ], [ %38, %165 ]
  %314 = phi i32 [ 0, %14 ], [ %40, %281 ], [ %307, %306 ], [ %271, %270 ], [ %40, %115 ], [ %40, %153 ], [ %40, %165 ]
  %315 = phi i32 [ 0, %14 ], [ %79, %281 ], [ %287, %306 ], [ %272, %270 ], [ %4, %115 ], [ %4, %153 ], [ %4, %165 ]
  %316 = sub nsw i32 %315, %314
  %317 = icmp slt i32 %313, 1
  %318 = icmp sgt i32 %316, 0
  %319 = and i1 %317, %318
  br i1 %319, label %320, label %323

320:                                              ; preds = %312
  %321 = sext i32 %314 to i64
  %322 = getelementptr inbounds i8, i8* %3, i64 %321
  call void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8* %322, i32 %316, %"class.icu_69::ByteSink"* dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6) #8
  br label %323

323:                                              ; preds = %312, %320
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #8
  br label %324

324:                                              ; preds = %323, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ucasemap_utf8FoldCase_69(%struct.UCaseMap* nocapture readonly, i8*, i32, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.UCaseMap, %struct.UCaseMap* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 1, i32 %8, %"class.icu_69::BreakIterator"* null, i8* %1, i32 %2, i8* %3, i32 %4, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL25ucasemap_internalUTF8FoldijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %5)
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL25ucasemap_internalUTF8FoldijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i32, %"class.icu_69::BreakIterator"* nocapture readnone, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) #0 {
  tail call fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32 -1, i32 %1, i8* %3, %struct.UCaseContext* null, i32 0, i32 %4, %"class.icu_69::ByteSink"* dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_697CaseMap11utf8ToLowerEPKcjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.UCaseContext, align 8
  %9 = tail call i32 @ustrcase_getCaseLocale_69(i8* %0) #8
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %46

12:                                               ; preds = %7
  %13 = icmp eq i8* %2, null
  %14 = icmp ne i32 %3, 0
  %15 = and i1 %13, %14
  %16 = icmp slt i32 %3, -1
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  store i32 1, i32* %6, align 4
  br label %46

19:                                               ; preds = %12
  %20 = icmp eq i32 %3, -1
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = tail call i64 @strlen(i8* %2) #9
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %21, %19
  %25 = phi i32 [ %23, %21 ], [ %3, %19 ]
  %26 = icmp ne %"class.icu_69::Edits"* %5, null
  %27 = and i32 %1, 8192
  %28 = icmp eq i32 %27, 0
  %29 = and i1 %28, %26
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %5) #8
  br label %31

31:                                               ; preds = %30, %24
  %32 = bitcast %struct.UCaseContext* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8
  %33 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %8, i64 0, i32 1
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #8
  %35 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %8, i64 0, i32 0
  store i8* %2, i8** %35, align 8
  %36 = getelementptr inbounds %struct.UCaseContext, %struct.UCaseContext* %8, i64 0, i32 3
  store i32 %25, i32* %36, align 8
  call fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32 %9, i32 %1, i8* %2, %struct.UCaseContext* nonnull %8, i32 0, i32 %25, %"class.icu_69::ByteSink"* dereferenceable(8) %4, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8
  %37 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*)***
  %38 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %38, i64 4
  %40 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %39, align 8
  call void %40(%"class.icu_69::ByteSink"* %4) #8
  %41 = load i32, i32* %6, align 4
  %42 = icmp slt i32 %41, 1
  %43 = and i1 %26, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %5, i32* dereferenceable(4) %6) #8
  br label %46

46:                                               ; preds = %7, %18, %31, %44
  ret void
}

declare i32 @ustrcase_getCaseLocale_69(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_697CaseMap11utf8ToUpperEPKcjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = tail call i32 @ustrcase_getCaseLocale_69(i8* %0) #8
  %9 = load i32, i32* %6, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %40

11:                                               ; preds = %7
  %12 = icmp eq i8* %2, null
  %13 = icmp ne i32 %3, 0
  %14 = and i1 %12, %13
  %15 = icmp slt i32 %3, -1
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  store i32 1, i32* %6, align 4
  br label %40

18:                                               ; preds = %11
  %19 = icmp eq i32 %3, -1
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = tail call i64 @strlen(i8* %2) #9
  %22 = trunc i64 %21 to i32
  br label %23

23:                                               ; preds = %20, %18
  %24 = phi i32 [ %22, %20 ], [ %3, %18 ]
  %25 = icmp ne %"class.icu_69::Edits"* %5, null
  %26 = and i32 %1, 8192
  %27 = icmp eq i32 %26, 0
  %28 = and i1 %27, %25
  br i1 %28, label %29, label %30

29:                                               ; preds = %23
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %5) #8
  br label %30

30:                                               ; preds = %29, %23
  tail call void @_ZL28ucasemap_internalUTF8ToUpperijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32 %8, i32 %1, %"class.icu_69::BreakIterator"* null, i8* %2, i32 %24, %"class.icu_69::ByteSink"* dereferenceable(8) %4, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %31 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*)***
  %32 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %32, i64 4
  %34 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %33, align 8
  tail call void %34(%"class.icu_69::ByteSink"* %4) #8
  %35 = load i32, i32* %6, align 4
  %36 = icmp slt i32 %35, 1
  %37 = and i1 %25, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = tail call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %5, i32* dereferenceable(4) %6) #8
  br label %40

40:                                               ; preds = %7, %17, %30, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_697CaseMap8utf8FoldEjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %38

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null
  %11 = icmp ne i32 %2, 0
  %12 = and i1 %10, %11
  %13 = icmp slt i32 %2, -1
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %5, align 4
  br label %38

16:                                               ; preds = %9
  %17 = icmp eq i32 %2, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = tail call i64 @strlen(i8* %1) #9
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %18, %16
  %22 = phi i32 [ %20, %18 ], [ %2, %16 ]
  %23 = icmp ne %"class.icu_69::Edits"* %4, null
  %24 = and i32 %0, 8192
  %25 = icmp eq i32 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %4) #8
  br label %28

28:                                               ; preds = %27, %21
  tail call fastcc void @_ZN12_GLOBAL__N_17toLowerEijPKhP12UCaseContextiiRN6icu_698ByteSinkEPNS4_5EditsER10UErrorCode(i32 -1, i32 %0, i8* %1, %struct.UCaseContext* null, i32 0, i32 %22, %"class.icu_69::ByteSink"* dereferenceable(8) %3, %"class.icu_69::Edits"* %4, i32* dereferenceable(4) %5) #8
  %29 = bitcast %"class.icu_69::ByteSink"* %3 to void (%"class.icu_69::ByteSink"*)***
  %30 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %30, i64 4
  %32 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %31, align 8
  tail call void %32(%"class.icu_69::ByteSink"* %3) #8
  %33 = load i32, i32* %5, align 4
  %34 = icmp slt i32 %33, 1
  %35 = and i1 %23, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = tail call signext i8 @_ZNK6icu_695Edits11copyErrorToER10UErrorCode(%"class.icu_69::Edits"* nonnull %4, i32* dereferenceable(4) %5) #8
  br label %38

38:                                               ; preds = %6, %15, %28, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_697CaseMap11utf8ToLowerEPKcjS2_iPciPNS_5EditsER10UErrorCode(i8*, i32, i8*, i32, i8*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = tail call i32 @ustrcase_getCaseLocale_69(i8* %0) #8
  %10 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 %9, i32 %1, %"class.icu_69::BreakIterator"* null, i8* %4, i32 %5, i8* %2, i32 %3, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL28ucasemap_internalUTF8ToLowerijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_697CaseMap11utf8ToUpperEPKcjS2_iPciPNS_5EditsER10UErrorCode(i8*, i32, i8*, i32, i8*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = tail call i32 @ustrcase_getCaseLocale_69(i8* %0) #8
  %10 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 %9, i32 %1, %"class.icu_69::BreakIterator"* null, i8* %4, i32 %5, i8* %2, i32 %3, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL28ucasemap_internalUTF8ToUpperijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_697CaseMap8utf8FoldEjPKciPciPNS_5EditsER10UErrorCode(i32, i8*, i32, i8*, i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = tail call i32 @_Z16ucasemap_mapUTF8ijPN6icu_6913BreakIteratorEPciPKciPFvijS1_PKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCodeESA_SC_(i32 1, i32 %0, %"class.icu_69::BreakIterator"* null, i8* %3, i32 %4, i8* %1, i32 %2, void (i32, i32, %"class.icu_69::BreakIterator"*, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* nonnull @_ZL25ucasemap_internalUTF8FoldijPN6icu_6913BreakIteratorEPKhiRNS_8ByteSinkEPNS_5EditsER10UErrorCode, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6)
  ret i32 %8
}

declare signext i8 @u_charType_69(i32) local_unnamed_addr #5

declare void @_ZN6icu_6912ByteSinkUtil23appendNonEmptyUnchangedEPKhiRNS_8ByteSinkEjPNS_5EditsE(i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), i32, %"class.icu_69::Edits"*) local_unnamed_addr #5

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #5

declare signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEiPKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i32, i16*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare %struct.UTrie2* @ucase_getTrie_69() local_unnamed_addr #5

declare i32 @ucase_toFullLower_69(i32, i32 (i8*, i8)*, i8*, i16**, i32) local_unnamed_addr #5

declare i32 @ucase_toFullFolding_69(i32, i16**, i32) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
