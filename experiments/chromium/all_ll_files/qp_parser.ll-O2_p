; ModuleID = '../../third_party/webrtc/modules/video_coding/utility/qp_parser.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/utility/qp_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::QpParser" = type { [3 x %"class.webrtc::QpParser::H264QpParser"] }
%"class.webrtc::QpParser::H264QpParser" = type { %"class.webrtc::Mutex", %"class.webrtc::H264BitstreamParser" }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::H264BitstreamParser" = type <{ %"class.webrtc::BitstreamParser", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.10", [4 x i8] }>
%"class.webrtc::BitstreamParser" = type { i32 (...)** }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.webrtc::SpsParser::SpsState" }
%"struct.webrtc::SpsParser::SpsState" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"struct.webrtc::PpsParser::PpsState" }
%"struct.webrtc::PpsParser::PpsState" = type { i8, i8, i8, i32, i32, i32, i32, i32 }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc8QpParser5ParseENS_14VideoCodecTypeEmPKhm(%"class.webrtc::QpParser"*, i32, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = icmp eq i8* %3, null
  %9 = icmp eq i64 %4, 0
  %10 = or i1 %8, %9
  %11 = icmp ugt i64 %2, 2
  %12 = or i1 %11, %10
  br i1 %12, label %37, label %13

13:                                               ; preds = %5
  switch i32 %1, label %37 [
    i32 1, label %14
    i32 2, label %20
    i32 4, label %26
  ]

14:                                               ; preds = %13
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #4
  store i32 -1, i32* %6, align 4
  %16 = call zeroext i1 @_ZN6webrtc3vp85GetQpEPKhmPi(i8* nonnull %3, i64 %4, i32* nonnull %6) #4
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #4
  br label %37

19:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #4
  br label %37

20:                                               ; preds = %13
  %21 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #4
  store i32 -1, i32* %7, align 4
  %22 = call zeroext i1 @_ZN6webrtc3vp95GetQpEPKhmPi(i8* nonnull %3, i64 %4, i32* nonnull %7) #4
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #4
  br label %37

25:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #4
  br label %37

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.webrtc::QpParser", %"class.webrtc::QpParser"* %0, i64 0, i32 0, i64 %2, i32 0, i32 0, i32 0
  %28 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %27) #4
  %29 = getelementptr inbounds %"class.webrtc::QpParser", %"class.webrtc::QpParser"* %0, i64 0, i32 0, i64 %2, i32 1
  tail call void @_ZN6webrtc19H264BitstreamParser14ParseBitstreamEN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::H264BitstreamParser"* %29, i8* nonnull %3, i64 %4) #4
  %30 = tail call i64 @_ZNK6webrtc19H264BitstreamParser14GetLastSliceQpEv(%"class.webrtc::H264BitstreamParser"* %29) #4
  %31 = trunc i64 %30 to i8
  %32 = icmp ne i8 %31, 0
  %33 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #4
  %34 = lshr i64 %30, 32
  %35 = trunc i64 %34 to i32
  %36 = zext i1 %32 to i64
  br label %37

37:                                               ; preds = %19, %25, %13, %5, %23, %17, %26
  %38 = phi i32 [ %35, %26 ], [ %24, %23 ], [ %18, %17 ], [ undef, %5 ], [ undef, %13 ], [ undef, %25 ], [ undef, %19 ]
  %39 = phi i64 [ %36, %26 ], [ 1, %23 ], [ 1, %17 ], [ 0, %5 ], [ 0, %13 ], [ 0, %25 ], [ 0, %19 ]
  %40 = zext i32 %38 to i64
  %41 = shl nuw i64 %40, 32
  %42 = or i64 %41, %39
  ret i64 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN6webrtc3vp85GetQpEPKhmPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN6webrtc3vp95GetQpEPKhmPi(i8*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc8QpParser12H264QpParser5ParseEPKhm(%"class.webrtc::QpParser::H264QpParser"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::QpParser::H264QpParser", %"class.webrtc::QpParser::H264QpParser"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #4
  %6 = getelementptr inbounds %"class.webrtc::QpParser::H264QpParser", %"class.webrtc::QpParser::H264QpParser"* %0, i64 0, i32 1
  %7 = icmp eq i64 %2, 0
  %8 = select i1 %7, i8* null, i8* %1
  tail call void @_ZN6webrtc19H264BitstreamParser14ParseBitstreamEN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::H264BitstreamParser"* %6, i8* %8, i64 %2) #4
  %9 = tail call i64 @_ZNK6webrtc19H264BitstreamParser14GetLastSliceQpEv(%"class.webrtc::H264BitstreamParser"* %6) #4
  %10 = trunc i64 %9 to i8
  %11 = and i64 %9, -4294967296
  %12 = icmp ne i8 %10, 0
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #4
  %14 = zext i1 %12 to i64
  %15 = or i64 %11, %14
  ret i64 %15
}

declare void @_ZN6webrtc19H264BitstreamParser14ParseBitstreamEN3rtc9ArrayViewIKhLln4711EEE(%"class.webrtc::H264BitstreamParser"*, i8*, i64) unnamed_addr #2

declare i64 @_ZNK6webrtc19H264BitstreamParser14GetLastSliceQpEv(%"class.webrtc::H264BitstreamParser"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
