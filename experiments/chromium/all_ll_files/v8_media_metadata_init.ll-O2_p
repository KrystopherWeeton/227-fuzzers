; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_media_metadata_init.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_media_metadata_init.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.83", i32, [4 x i8], %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.260", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.199", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i64 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.119" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.193", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { i64 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { float }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.202", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.158"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.294" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__cxx_atomic_impl.262" }
%"struct.std::__1::__cxx_atomic_impl.262" = type { %"struct.std::__1::__cxx_atomic_base_impl.263" }
%"struct.std::__1::__cxx_atomic_base_impl.263" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.361" }
%"struct.std::__1::atomic.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::MediaMetadataInit" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::MediaImage"* }
%"class.blink::MediaImage" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.27", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.77", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.264", %"class.std::__1::unique_ptr.269", %"class.blink::Persistent.275", %"class.blink::Persistent.279", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.10", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.27" = type { %"class.WTF::HashTable.28" }
%"class.WTF::HashTable.28" = type <{ %"struct.WTF::KeyValuePair.31"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.31" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.40", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.35", i8* }
%"class.WTF::HashMap.35" = type { %"class.WTF::HashTable.36" }
%"class.WTF::HashTable.36" = type <{ %"struct.WTF::KeyValuePair.39"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.39" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.40" = type { %"class.v8::PersistentValueMapBase.41" }
%"class.v8::PersistentValueMapBase.41" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.42", i8* }
%"class.WTF::HashMap.42" = type { %"class.WTF::HashTable.43" }
%"class.WTF::HashTable.43" = type <{ %"struct.WTF::KeyValuePair.46"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.46" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.47" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.WTF::Vector.67", i8, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.WTF::Vector.53"* }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.55", [32 x i8] }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.301, %"class.blink::Member.320", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.301 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.302", i32, i32, %"class.blink::Persistent.304" }
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.304" = type { %"class.blink::PersistentBase.305" }
%"class.blink::PersistentBase.305" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.310" }
%"class.WTF::HashMap.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.317" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.317" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.317" = type { %"class.v8::TracedReference.318" }
%"class.v8::TracedReference.318" = type { %"class.v8::BasicTracedReference.319" }
%"class.v8::BasicTracedReference.319" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.275" = type { %"class.blink::PersistentBase.276" }
%"class.blink::PersistentBase.276" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.279" = type { %"class.blink::PersistentBase.280" }
%"class.blink::PersistentBase.280" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.283", i64 }
%"class.blink::HeapVector.283" = type { %"class.WTF::Vector.286" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"struct.std::__1::pair.289"*, i32, i32 }
%"struct.std::__1::pair.289" = type { %"class.blink::UntracedMember", %"class.blink::Member.291" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.322" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.3", %"class.v8::Local", %"class.v8::Local.8", %"class.v8::Local.8", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.3" = type { %"class.v8::Object"* }
%"class.v8::Local.8" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::ExecutionContext" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.366 }
%union.anon.366 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10MediaImageEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MediaImageEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10MediaImageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZZN5blinkL30eternalV8MediaMetadataInitKeysEPN2v87IsolateEE5kKeys = internal constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [6 x i8] c"album\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"artist\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"artwork\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZZN5blinkL30eternalV8MediaMetadataInitKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.8 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.14 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MediaImageEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MediaImage>, WTF::VectorTraits<blink::Member<blink::MediaImage> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19V8MediaMetadataInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_17MediaMetadataInitERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::MediaMetadataInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = icmp eq %"class.v8::Value"* %1, null
  br i1 %10, label %608, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = add i64 %13, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i64 %13, -4294967296
  %21 = zext i32 %19 to i64
  %22 = or i64 %20, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 67
  br i1 %26, label %27, label %32

27:                                               ; preds = %16
  %28 = add i64 %13, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, 1
  switch i32 %31, label %32 [
    i32 5, label %608
    i32 3, label %608
  ]

32:                                               ; preds = %27, %16, %11
  %33 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %608

35:                                               ; preds = %32
  %36 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %37 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to %"class.blink::V8PerIsolateData"**
  %40 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %39, align 8
  %41 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %40, i8* bitcast ([4 x i8*]* @_ZZN5blinkL30eternalV8MediaMetadataInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.322"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.322"*)) #8
  %42 = extractvalue { i64, %"class.v8::Eternal"* } %41, 1
  %43 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #8
  %44 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %45 = bitcast %"class.v8::Eternal"* %42 to %"class.v8::Value"**
  %46 = load %"class.v8::Value"*, %"class.v8::Value"** %45, align 8
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %35
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  br label %607

55:                                               ; preds = %35
  %56 = bitcast %"class.v8::Value"* %47 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 3
  %59 = icmp eq i64 %58, 1
  br i1 %59, label %60, label %77

60:                                               ; preds = %55
  %61 = add i64 %57, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i64 %57, -4294967296
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 67
  br i1 %70, label %71, label %77

71:                                               ; preds = %60
  %72 = add i64 %57, 23
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, -2
  %76 = icmp eq i32 %75, 10
  br i1 %76, label %217, label %77

77:                                               ; preds = %60, %55, %71
  %78 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %78) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 152, i1 false)
  %79 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %47, %"class.v8::Value"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %83 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  store i64 0, i64* %83, align 8
  %84 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %84, label %85, label %195

85:                                               ; preds = %77
  %86 = load %"class.v8::Value"*, %"class.v8::Value"** %79, align 8
  %87 = icmp eq %"class.v8::Value"* %86, null
  br i1 %87, label %88, label %112, !prof !2

88:                                               ; preds = %85
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 2
  br label %137

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #8
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  call void @llvm.trap() #8
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %110

110:                                              ; preds = %93, %108
  %111 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 2
  br label %118

112:                                              ; preds = %85
  %113 = bitcast %"class.v8::Value"* %86 to %"class.v8::String"*
  %114 = load i32, i32* %80, align 8
  %115 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %113, i32 %114) #8
  %116 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 2
  %117 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %117, label %137, label %118

118:                                              ; preds = %110, %112
  %119 = phi %"class.WTF::String"* [ %111, %110 ], [ %116, %112 ]
  %120 = phi %"class.WTF::StringImpl"* [ %89, %110 ], [ %115, %112 ]
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #8
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !2

134:                                              ; preds = %125
  call void @llvm.trap() #8
  unreachable

135:                                              ; preds = %125
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %126, align 4
  br label %137

137:                                              ; preds = %91, %135, %118, %112
  %138 = phi i1 [ false, %135 ], [ false, %118 ], [ true, %112 ], [ true, %91 ]
  %139 = phi %"class.WTF::String"* [ %119, %135 ], [ %119, %118 ], [ %116, %112 ], [ %92, %91 ]
  %140 = phi %"class.WTF::StringImpl"* [ %120, %135 ], [ %120, %118 ], [ null, %112 ], [ null, %91 ]
  %141 = ptrtoint %"class.WTF::StringImpl"* %140 to i64
  %142 = bitcast %"class.WTF::String"* %139 to i64*
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %141, i64* %142, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #8
  br label %159

159:                                              ; preds = %137, %155, %158
  br i1 %138, label %173, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #8
  br label %173

173:                                              ; preds = %159, %169, %172
  %174 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  store i8* null, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %178, label %177

177:                                              ; preds = %173
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %175) #8
  br label %178

178:                                              ; preds = %177, %173
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #8
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %78) #8
  br label %217

195:                                              ; preds = %77
  %196 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  store i8* null, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %200, label %199

199:                                              ; preds = %195
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %197) #8
  br label %200

200:                                              ; preds = %199, %195
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #8
  br label %216

216:                                              ; preds = %200, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %78) #8
  br label %607

217:                                              ; preds = %194, %71
  %218 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 1, i32 0
  %219 = bitcast %"class.v8::Name"** %218 to %"class.v8::Value"**
  %220 = load %"class.v8::Value"*, %"class.v8::Value"** %219, align 8
  %221 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %220) #8
  %222 = icmp eq %"class.v8::Value"* %221, null
  br i1 %222, label %223, label %229

223:                                              ; preds = %217
  %224 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %225 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %226 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %226, i64 5
  %228 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %227, align 8
  call void %228(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %224) #8
  br label %607

229:                                              ; preds = %217
  %230 = bitcast %"class.v8::Value"* %221 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = and i64 %231, 3
  %233 = icmp eq i64 %232, 1
  br i1 %233, label %234, label %251

234:                                              ; preds = %229
  %235 = add i64 %231, -1
  %236 = inttoptr i64 %235 to i32*
  %237 = load i32, i32* %236, align 4
  %238 = and i64 %231, -4294967296
  %239 = zext i32 %237 to i64
  %240 = or i64 %238, %239
  %241 = add i64 %240, 7
  %242 = inttoptr i64 %241 to i16*
  %243 = load i16, i16* %242, align 2
  %244 = icmp eq i16 %243, 67
  br i1 %244, label %245, label %251

245:                                              ; preds = %234
  %246 = add i64 %231, 23
  %247 = inttoptr i64 %246 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = and i32 %248, -2
  %250 = icmp eq i32 %249, 10
  br i1 %250, label %391, label %251

251:                                              ; preds = %234, %229, %245
  %252 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %252) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 152, i1 false)
  %253 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %221, %"class.v8::Value"** %253, align 8
  %254 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %254, align 8
  %255 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %255, align 8
  %256 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %257 = bitcast %"class.std::__1::unique_ptr"* %256 to i64*
  store i64 0, i64* %257, align 8
  %258 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %258, label %259, label %369

259:                                              ; preds = %251
  %260 = load %"class.v8::Value"*, %"class.v8::Value"** %253, align 8
  %261 = icmp eq %"class.v8::Value"* %260, null
  br i1 %261, label %262, label %286, !prof !2

262:                                              ; preds = %259
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 3
  br label %311

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = zext i32 %274 to i33
  %276 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %275, i33 1) #8
  %277 = extractvalue { i33, i1 } %276, 1
  %278 = extractvalue { i33, i1 } %276, 0
  %279 = icmp slt i33 %278, 0
  %280 = or i1 %277, %279
  br i1 %280, label %281, label %282, !prof !2

281:                                              ; preds = %272
  call void @llvm.trap() #8
  unreachable

282:                                              ; preds = %272
  %283 = trunc i33 %278 to i32
  store i32 %283, i32* %273, align 4
  br label %284

284:                                              ; preds = %267, %282
  %285 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 3
  br label %292

286:                                              ; preds = %259
  %287 = bitcast %"class.v8::Value"* %260 to %"class.v8::String"*
  %288 = load i32, i32* %254, align 8
  %289 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %287, i32 %288) #8
  %290 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 3
  %291 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %291, label %311, label %292

292:                                              ; preds = %284, %286
  %293 = phi %"class.WTF::String"* [ %285, %284 ], [ %290, %286 ]
  %294 = phi %"class.WTF::StringImpl"* [ %263, %284 ], [ %289, %286 ]
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %311

299:                                              ; preds = %292
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i33
  %303 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %302, i33 1) #8
  %304 = extractvalue { i33, i1 } %303, 1
  %305 = extractvalue { i33, i1 } %303, 0
  %306 = icmp slt i33 %305, 0
  %307 = or i1 %304, %306
  br i1 %307, label %308, label %309, !prof !2

308:                                              ; preds = %299
  call void @llvm.trap() #8
  unreachable

309:                                              ; preds = %299
  %310 = trunc i33 %305 to i32
  store i32 %310, i32* %300, align 4
  br label %311

311:                                              ; preds = %265, %309, %292, %286
  %312 = phi i1 [ false, %309 ], [ false, %292 ], [ true, %286 ], [ true, %265 ]
  %313 = phi %"class.WTF::String"* [ %293, %309 ], [ %293, %292 ], [ %290, %286 ], [ %266, %265 ]
  %314 = phi %"class.WTF::StringImpl"* [ %294, %309 ], [ %294, %292 ], [ null, %286 ], [ null, %265 ]
  %315 = ptrtoint %"class.WTF::StringImpl"* %314 to i64
  %316 = bitcast %"class.WTF::String"* %313 to i64*
  %317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %313, i64 0, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  store i64 %315, i64* %316, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %311
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #8
  br label %333

333:                                              ; preds = %311, %329, %332
  br i1 %312, label %347, label %334

334:                                              ; preds = %333
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %314, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %314) #8
  br label %347

347:                                              ; preds = %333, %343, %346
  %348 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  store i8* null, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %347
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %349) #8
  br label %352

352:                                              ; preds = %351, %347
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #8
  br label %368

368:                                              ; preds = %352, %364, %367
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %252) #8
  br label %391

369:                                              ; preds = %251
  %370 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %371 = load i8*, i8** %370, align 8
  store i8* null, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %374, label %373

373:                                              ; preds = %369
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %371) #8
  br label %374

374:                                              ; preds = %373, %369
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %255, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #8
  br label %390

390:                                              ; preds = %374, %386, %389
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %252) #8
  br label %607

391:                                              ; preds = %368, %245
  %392 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 2, i32 0
  %393 = bitcast %"class.v8::Name"** %392 to %"class.v8::Value"**
  %394 = load %"class.v8::Value"*, %"class.v8::Value"** %393, align 8
  %395 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %394) #8
  %396 = icmp eq %"class.v8::Value"* %395, null
  br i1 %396, label %397, label %403

397:                                              ; preds = %391
  %398 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %399 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %400 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %400, i64 5
  %402 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %401, align 8
  call void %402(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %398) #8
  br label %607

403:                                              ; preds = %391
  %404 = bitcast %"class.v8::Value"* %395 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = and i64 %405, 3
  %407 = icmp eq i64 %406, 1
  br i1 %407, label %408, label %425

408:                                              ; preds = %403
  %409 = add i64 %405, -1
  %410 = inttoptr i64 %409 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = and i64 %405, -4294967296
  %413 = zext i32 %411 to i64
  %414 = or i64 %412, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load i16, i16* %416, align 2
  %418 = icmp eq i16 %417, 67
  br i1 %418, label %419, label %425

419:                                              ; preds = %408
  %420 = add i64 %405, 23
  %421 = inttoptr i64 %420 to i32*
  %422 = load i32, i32* %421, align 4
  %423 = and i32 %422, -2
  %424 = icmp eq i32 %423, 10
  br i1 %424, label %433, label %425

425:                                              ; preds = %408, %403, %419
  %426 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %426) #8
  %427 = bitcast %"class.blink::HeapVector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10MediaImageEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %8, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %395, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %428 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %429 = load i32, i32* %428, align 8
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %425
  call void @_ZN5blink17MediaMetadataInit10setArtworkERKNS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEE(%"class.blink::MediaMetadataInit"* %2, %"class.blink::HeapVector"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %426) #8
  br label %433

432:                                              ; preds = %425
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %426) #8
  br label %607

433:                                              ; preds = %431, %419
  %434 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 3, i32 0
  %435 = bitcast %"class.v8::Name"** %434 to %"class.v8::Value"**
  %436 = load %"class.v8::Value"*, %"class.v8::Value"** %435, align 8
  %437 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %436) #8
  %438 = icmp eq %"class.v8::Value"* %437, null
  br i1 %438, label %439, label %445

439:                                              ; preds = %433
  %440 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %441 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %442 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %442, i64 5
  %444 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %443, align 8
  call void %444(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %440) #8
  br label %607

445:                                              ; preds = %433
  %446 = bitcast %"class.v8::Value"* %437 to i64*
  %447 = load i64, i64* %446, align 8
  %448 = and i64 %447, 3
  %449 = icmp eq i64 %448, 1
  br i1 %449, label %450, label %467

450:                                              ; preds = %445
  %451 = add i64 %447, -1
  %452 = inttoptr i64 %451 to i32*
  %453 = load i32, i32* %452, align 4
  %454 = and i64 %447, -4294967296
  %455 = zext i32 %453 to i64
  %456 = or i64 %454, %455
  %457 = add i64 %456, 7
  %458 = inttoptr i64 %457 to i16*
  %459 = load i16, i16* %458, align 2
  %460 = icmp eq i16 %459, 67
  br i1 %460, label %461, label %467

461:                                              ; preds = %450
  %462 = add i64 %447, 23
  %463 = inttoptr i64 %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = and i32 %464, -2
  %466 = icmp eq i32 %465, 10
  br i1 %466, label %607, label %467

467:                                              ; preds = %450, %445, %461
  %468 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %468) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %468, i8 -86, i64 152, i1 false)
  %469 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %437, %"class.v8::Value"** %469, align 8
  %470 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %470, align 8
  %471 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %471, align 8
  %472 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %473 = bitcast %"class.std::__1::unique_ptr"* %472 to i64*
  store i64 0, i64* %473, align 8
  %474 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %474, label %475, label %585

475:                                              ; preds = %467
  %476 = load %"class.v8::Value"*, %"class.v8::Value"** %469, align 8
  %477 = icmp eq %"class.v8::Value"* %476, null
  br i1 %477, label %478, label %502, !prof !2

478:                                              ; preds = %475
  %479 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %480 = icmp eq %"class.WTF::StringImpl"* %479, null
  br i1 %480, label %481, label %483

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 5
  br label %527

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load atomic i32, i32* %484 monotonic, align 4
  %486 = and i32 %485, 2
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %500

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 0
  %490 = load i32, i32* %489, align 4
  %491 = zext i32 %490 to i33
  %492 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %491, i33 1) #8
  %493 = extractvalue { i33, i1 } %492, 1
  %494 = extractvalue { i33, i1 } %492, 0
  %495 = icmp slt i33 %494, 0
  %496 = or i1 %493, %495
  br i1 %496, label %497, label %498, !prof !2

497:                                              ; preds = %488
  call void @llvm.trap() #8
  unreachable

498:                                              ; preds = %488
  %499 = trunc i33 %494 to i32
  store i32 %499, i32* %489, align 4
  br label %500

500:                                              ; preds = %483, %498
  %501 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 5
  br label %508

502:                                              ; preds = %475
  %503 = bitcast %"class.v8::Value"* %476 to %"class.v8::String"*
  %504 = load i32, i32* %470, align 8
  %505 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %503, i32 %504) #8
  %506 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %2, i64 0, i32 5
  %507 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %507, label %527, label %508

508:                                              ; preds = %500, %502
  %509 = phi %"class.WTF::String"* [ %501, %500 ], [ %506, %502 ]
  %510 = phi %"class.WTF::StringImpl"* [ %479, %500 ], [ %505, %502 ]
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %512 = load atomic i32, i32* %511 monotonic, align 4
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %527

515:                                              ; preds = %508
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %517 = load i32, i32* %516, align 4
  %518 = zext i32 %517 to i33
  %519 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %518, i33 1) #8
  %520 = extractvalue { i33, i1 } %519, 1
  %521 = extractvalue { i33, i1 } %519, 0
  %522 = icmp slt i33 %521, 0
  %523 = or i1 %520, %522
  br i1 %523, label %524, label %525, !prof !2

524:                                              ; preds = %515
  call void @llvm.trap() #8
  unreachable

525:                                              ; preds = %515
  %526 = trunc i33 %521 to i32
  store i32 %526, i32* %516, align 4
  br label %527

527:                                              ; preds = %481, %525, %508, %502
  %528 = phi i1 [ false, %525 ], [ false, %508 ], [ true, %502 ], [ true, %481 ]
  %529 = phi %"class.WTF::String"* [ %509, %525 ], [ %509, %508 ], [ %506, %502 ], [ %482, %481 ]
  %530 = phi %"class.WTF::StringImpl"* [ %510, %525 ], [ %510, %508 ], [ null, %502 ], [ null, %481 ]
  %531 = ptrtoint %"class.WTF::StringImpl"* %530 to i64
  %532 = bitcast %"class.WTF::String"* %529 to i64*
  %533 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %529, i64 0, i32 0, i32 0
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %533, align 8
  store i64 %531, i64* %532, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %549, label %536

536:                                              ; preds = %527
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %542 = load i32, i32* %541, align 4
  br i1 %540, label %543, label %545

543:                                              ; preds = %536
  %544 = add i32 %542, -1
  store i32 %544, i32* %541, align 4
  br label %545

545:                                              ; preds = %543, %536
  %546 = phi i32 [ %544, %543 ], [ %542, %536 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %549

548:                                              ; preds = %545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #8
  br label %549

549:                                              ; preds = %527, %545, %548
  br i1 %528, label %563, label %550

550:                                              ; preds = %549
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %530, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load atomic i32, i32* %551 monotonic, align 4
  %553 = and i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %530, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  br i1 %554, label %557, label %559

557:                                              ; preds = %550
  %558 = add i32 %556, -1
  store i32 %558, i32* %555, align 4
  br label %559

559:                                              ; preds = %557, %550
  %560 = phi i32 [ %558, %557 ], [ %556, %550 ]
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %559
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %530) #8
  br label %563

563:                                              ; preds = %549, %559, %562
  %564 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %565 = load i8*, i8** %564, align 8
  store i8* null, i8** %564, align 8
  %566 = icmp eq i8* %565, null
  br i1 %566, label %568, label %567

567:                                              ; preds = %563
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %565) #8
  br label %568

568:                                              ; preds = %567, %563
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %584, label %571

571:                                              ; preds = %568
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %577 = load i32, i32* %576, align 4
  br i1 %575, label %578, label %580

578:                                              ; preds = %571
  %579 = add i32 %577, -1
  store i32 %579, i32* %576, align 4
  br label %580

580:                                              ; preds = %578, %571
  %581 = phi i32 [ %579, %578 ], [ %577, %571 ]
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %584

583:                                              ; preds = %580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #8
  br label %584

584:                                              ; preds = %568, %580, %583
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %468) #8
  br label %607

585:                                              ; preds = %467
  %586 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %587 = load i8*, i8** %586, align 8
  store i8* null, i8** %586, align 8
  %588 = icmp eq i8* %587, null
  br i1 %588, label %590, label %589

589:                                              ; preds = %585
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %587) #8
  br label %590

590:                                              ; preds = %589, %585
  %591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %592 = icmp eq %"class.WTF::StringImpl"* %591, null
  br i1 %592, label %606, label %593

593:                                              ; preds = %590
  %594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %595 = load atomic i32, i32* %594 monotonic, align 4
  %596 = and i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %591, i64 0, i32 0
  %599 = load i32, i32* %598, align 4
  br i1 %597, label %600, label %602

600:                                              ; preds = %593
  %601 = add i32 %599, -1
  store i32 %601, i32* %598, align 4
  br label %602

602:                                              ; preds = %600, %593
  %603 = phi i32 [ %601, %600 ], [ %599, %593 ]
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %606

605:                                              ; preds = %602
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %591) #8
  br label %606

606:                                              ; preds = %590, %602, %605
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %468) #8
  br label %607

607:                                              ; preds = %223, %390, %439, %606, %584, %461, %432, %397, %216, %49
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #8
  br label %608

608:                                              ; preds = %27, %27, %4, %607, %34
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #8
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #8
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #8
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #8
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_10MediaImageEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink17MediaMetadataInit10setArtworkERKNS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEE(%"class.blink::MediaMetadataInit"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink17MediaMetadataInit8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::MediaMetadataInit"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink21toV8MediaMetadataInitEPKNS_17MediaMetadataInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaMetadataInit"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21toV8MediaMetadataInitEPKNS_17MediaMetadataInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaMetadataInit"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %13 to %"class.blink::V8PerIsolateData"**
  %15 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %14, align 8
  %16 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %15, i8* bitcast ([4 x i8*]* @_ZZN5blinkL30eternalV8MediaMetadataInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.322"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.322"*)) #8
  %17 = extractvalue { i64, %"class.v8::Eternal"* } %16, 1
  %18 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %19 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  br label %47

30:                                               ; preds = %4
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %38, i64* %39, align 8
  br label %47

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  br label %47

47:                                               ; preds = %40, %36, %22
  %48 = phi %"class.WTF::StringView"* [ %5, %22 ], [ %6, %36 ], [ %6, %40 ]
  %49 = phi i32 [ %26, %22 ], [ 0, %36 ], [ %43, %40 ]
  %50 = phi i8* [ %23, %22 ], [ %31, %36 ], [ %31, %40 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 %49, i32* %51, align 8
  %52 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %48)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  %53 = bitcast %"class.v8::String"* %52 to %"class.v8::Value"*
  %54 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %17, i64 0, i32 0
  %55 = load %"class.v8::Name"*, %"class.v8::Name"** %54, align 8
  %56 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %18, %"class.v8::Name"* %55, %"class.v8::Value"* %53) #8
  %57 = trunc i16 %56 to i8
  %58 = icmp ne i8 %57, 0
  %59 = icmp ugt i16 %56, 255
  %60 = and i1 %59, %58
  br i1 %60, label %61, label %168

61:                                               ; preds = %47
  %62 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %0, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %73, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %72 = bitcast i8** %71 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %72, align 8
  br label %90

73:                                               ; preds = %61
  %74 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #8
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %80, align 8
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %82 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %81, i64* %82, align 8
  br label %90

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 1
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %89 = bitcast i8** %88 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %89, align 8
  br label %90

90:                                               ; preds = %83, %79, %65
  %91 = phi %"class.WTF::StringView"* [ %7, %65 ], [ %8, %79 ], [ %8, %83 ]
  %92 = phi i32 [ %69, %65 ], [ 0, %79 ], [ %86, %83 ]
  %93 = phi i8* [ %66, %65 ], [ %74, %79 ], [ %74, %83 ]
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %91, i64 0, i32 2
  store i32 %92, i32* %94, align 8
  %95 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %91)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #8
  %96 = bitcast %"class.v8::String"* %95 to %"class.v8::Value"*
  %97 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %17, i64 1, i32 0
  %98 = load %"class.v8::Name"*, %"class.v8::Name"** %97, align 8
  %99 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %18, %"class.v8::Name"* %98, %"class.v8::Value"* %96) #8
  %100 = trunc i16 %99 to i8
  %101 = icmp ne i8 %100, 0
  %102 = icmp ugt i16 %99, 255
  %103 = and i1 %102, %101
  br i1 %103, label %104, label %168

104:                                              ; preds = %90
  %105 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %0, i64 0, i32 1
  %106 = load i8, i8* %105, align 8, !range !3
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %0, i64 0, i32 4
  %110 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %109, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  br label %115

111:                                              ; preds = %104
  %112 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #8
  %113 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 16, i1 false)
  %114 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %9, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #8
  br label %115

115:                                              ; preds = %108, %111
  %116 = phi %"class.v8::Array"* [ %110, %108 ], [ %114, %111 ]
  %117 = bitcast %"class.v8::Array"* %116 to %"class.v8::Value"*
  %118 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %17, i64 2, i32 0
  %119 = load %"class.v8::Name"*, %"class.v8::Name"** %118, align 8
  %120 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %18, %"class.v8::Name"* %119, %"class.v8::Value"* %117) #8
  %121 = trunc i16 %120 to i8
  %122 = icmp ne i8 %121, 0
  %123 = icmp ugt i16 %120, 255
  %124 = and i1 %123, %122
  br i1 %124, label %125, label %168

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.blink::MediaMetadataInit", %"class.blink::MediaMetadataInit"* %0, i64 0, i32 5, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 1
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %136 = bitcast i8** %135 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %136, align 8
  br label %154

137:                                              ; preds = %125
  %138 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #8
  %139 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %140 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %144, align 8
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %145, i64* %146, align 8
  br label %154

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %148, align 8
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %153 = bitcast i8** %152 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %153, align 8
  br label %154

154:                                              ; preds = %147, %143, %129
  %155 = phi %"class.WTF::StringView"* [ %10, %129 ], [ %11, %143 ], [ %11, %147 ]
  %156 = phi i32 [ %133, %129 ], [ 0, %143 ], [ %150, %147 ]
  %157 = phi i8* [ %130, %129 ], [ %138, %143 ], [ %138, %147 ]
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %155, i64 0, i32 2
  store i32 %156, i32* %158, align 8
  %159 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %155)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #8
  %160 = bitcast %"class.v8::String"* %159 to %"class.v8::Value"*
  %161 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %17, i64 3, i32 0
  %162 = load %"class.v8::Name"*, %"class.v8::Name"** %161, align 8
  %163 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %18, %"class.v8::Name"* %162, %"class.v8::Value"* %160) #8
  %164 = trunc i16 %163 to i8
  %165 = icmp ne i8 %164, 0
  %166 = icmp ugt i16 %163, 255
  %167 = and i1 %166, %165
  br label %168

168:                                              ; preds = %90, %115, %154, %47
  %169 = phi i1 [ false, %47 ], [ false, %90 ], [ %167, %154 ], [ false, %115 ]
  ret i1 %169
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaMetadataInit"* @_ZN5blink17NativeValueTraitsINS_17MediaMetadataInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 56) #8
  %5 = bitcast i8* %4 to %"class.blink::MediaMetadataInit"*
  tail call void @_ZN5blink17MediaMetadataInitC1Ev(%"class.blink::MediaMetadataInit"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink19V8MediaMetadataInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_17MediaMetadataInitERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::MediaMetadataInit"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::MediaMetadataInit"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.322"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink17MediaMetadataInitC1Ev(%"class.blink::MediaMetadataInit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !4

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !5

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !5

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::MediaImage"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MediaImageEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::MediaImage"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %57 = call %"class.blink::MediaImage"* @_ZN5blink17NativeValueTraitsINS_10MediaImageEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::MediaImage"* %57, %"class.blink::MediaImage"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::MediaImage"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !2

65:                                               ; preds = %61
  %66 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 %67
  %69 = bitcast %"class.blink::Member"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::MediaImage"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::MediaImage"** nonnull dereferenceable(8) %7) #8
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_10MediaImageEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::MediaImage"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::MediaImage"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.blink::MediaImage"* @_ZN5blink17NativeValueTraitsINS_10MediaImageEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::MediaImage"* %24, %"class.blink::MediaImage"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::MediaImage"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %30
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::MediaImage"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::MediaImage"** nonnull dereferenceable(8) %6) #8
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.blink::MediaImage"* @_ZN5blink17NativeValueTraitsINS_10MediaImageEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MediaImageEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.14, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_10MediaImageEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10MediaImageEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10MediaImageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaImage"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaImage"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaImage"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::MediaImage"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::MediaImage"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MediaImageEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_10MediaImageEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_10MediaImageEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_10MediaImageEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_10MediaImageEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.366* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !5

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !5

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member"*, %"class.blink::Member"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  %46 = add i64 %43, 160
  br label %47

47:                                               ; preds = %41, %71
  %48 = phi i32 [ 0, %41 ], [ %72, %71 ]
  %49 = phi %"class.blink::Member"* [ %36, %41 ], [ %73, %71 ]
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::MediaImage"*, %"class.blink::MediaImage"** %50, align 8
  %52 = icmp eq %"class.blink::MediaImage"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::MediaImage", %"class.blink::MediaImage"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::MediaImage"* %51 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %56, i64 2
  %58 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %57, align 8
  %59 = call %"class.v8::Value"* %58(%"class.blink::IDLDictionaryBase"* nonnull %54, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %47, %53
  %61 = phi %"class.v8::Value"* [ %59, %53 ], [ %45, %47 ]
  %62 = ptrtoint %"class.v8::Value"* %61 to i64
  %63 = icmp eq %"class.v8::Value"* %61, null
  %64 = select i1 %63, i64 %46, i64 %62
  %65 = inttoptr i64 %64 to %"class.v8::Value"*
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %48, %"class.v8::Value"* %65) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71, !prof !6

71:                                               ; preds = %60
  %72 = add i32 %48, 1
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %74 = icmp eq %"class.blink::Member"* %73, %39
  br i1 %74, label %75, label %47

75:                                               ; preds = %71, %60, %31
  %76 = phi i64 [ %33, %31 ], [ 0, %60 ], [ %33, %71 ]
  %77 = load i8, i8* %5, align 8, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %83 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %82) #8
  %84 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %81, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %83, %"class.blink::RuntimeCallTimer"** %84, align 8
  store i8 0, i8* %5, align 8
  br label %85

85:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %86 = inttoptr i64 %76 to %"class.v8::Array"*
  ret %"class.v8::Array"* %86
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2146410443, i32 1073205}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 2002, i32 2000}
