; ModuleID = 'gen/third_party/blink/public/mojom/blob/blob.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/blob/blob.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter" = type { %"class.blink::mojom::blink::BlobReaderClient"* }
%"class.blink::mojom::blink::BlobReaderClient" = type { i32 (...)** }
%"class.blink::mojom::blink::BlobAsyncWaiter" = type { %"class.blink::mojom::blink::Blob"* }
%"class.blink::mojom::blink::Blob" = type { i32 (...)** }
%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting" = type { %"class.blink::mojom::blink::BlobReaderClient" }
%"class.blink::mojom::blink::BlobInterceptorForTesting" = type { %"class.blink::mojom::blink::Blob" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.3, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.5", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.2", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.4" }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.mojo::PendingReceiver.10" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.mojo::ScopedHandleBase.11" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::PendingReceiver.19" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.mojo::PendingRemote.20" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.21" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.22" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.mojo_base::BigBuffer" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional.27" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.32", %"class.std::__1::unique_ptr.33" }
%"class.mojo::ScopedHandleBase.32" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i8* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.51, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.44", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.46" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.51 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.53", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink5mojom5blink16BlobReaderClientD2Ev = comdat any

$_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink4BlobD2Ev = comdat any

$_ZN5blink5mojom5blink25BlobInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [13 x i8] c"ReadSideData\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"gen/third_party/blink/public/mojom/blob/blob.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"CaptureSnapshot\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"GetInternalUUID\00", align 1
@_ZTVN5blink5mojom5blink37BlobReaderClientInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::BlobReaderClient"*)* @_ZN5blink5mojom5blink16BlobReaderClientD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)* @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*, i64, i64)* @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTesting16OnCalculatedSizeEmm to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*, i32, i64)* @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTesting10OnCompleteEim to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink25BlobInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::Blob"*)* @_ZN5blink5mojom5blink4BlobD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting5CloneEN4mojo15PendingReceiverINS1_4BlobEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver.10"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting16AsDataPipeGetterEN4mojo15PendingReceiverIN7network5mojom5blink14DataPipeGetterEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting7ReadAllEN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEENS3_13PendingRemoteINS1_16BlobReaderClientEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting9ReadRangeEmmN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEENS3_13PendingRemoteINS1_16BlobReaderClientEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting4LoadEN4mojo15PendingReceiverIN7network5mojom5blink9URLLoaderEEERKN3WTF6StringERKN3net18HttpRequestHeadersENS3_13PendingRemoteINS7_15URLLoaderClientEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting12ReadSideDataEN4base12OnceCallbackIFvN4absl8optionalIN9mojo_base9BigBufferEEEEEE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::Blob"*, i64*, %"class.absl::optional.59"*)* @_ZN5blink5mojom5blink4Blob15CaptureSnapshotEPmPN4absl8optionalIN4base4TimeEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback.21"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting15CaptureSnapshotEN4base12OnceCallbackIFvmN4absl8optionalINS3_4TimeEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback.22"*)* @_ZN5blink5mojom5blink25BlobInterceptorForTesting15GetInternalUUIDEN4base12OnceCallbackIFvRKN3WTF6StringEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterC1EPNS1_16BlobReaderClientE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"*, %"class.blink::mojom::blink::BlobReaderClient"*), void (%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"*, %"class.blink::mojom::blink::BlobReaderClient"*)* @_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterC2EPNS1_16BlobReaderClientE
@_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"*), void (%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"*)* @_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterD2Ev
@_ZN5blink5mojom5blink15BlobAsyncWaiterC1EPNS1_4BlobE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobAsyncWaiter"*, %"class.blink::mojom::blink::Blob"*), void (%"class.blink::mojom::blink::BlobAsyncWaiter"*, %"class.blink::mojom::blink::Blob"*)* @_ZN5blink5mojom5blink15BlobAsyncWaiterC2EPNS1_4BlobE
@_ZN5blink5mojom5blink15BlobAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BlobAsyncWaiter"*), void (%"class.blink::mojom::blink::BlobAsyncWaiter"*)* @_ZN5blink5mojom5blink15BlobAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTesting16OnCalculatedSizeEmm(%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::BlobReaderClient"* %7(%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.blink::mojom::blink::BlobReaderClient"* %8 to void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)***
  %10 = load void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)**, void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)*, void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)** %10, i64 2
  %12 = load void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)*, void (%"class.blink::mojom::blink::BlobReaderClient"*, i64, i64)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::BlobReaderClient"* %8, i64 %1, i64 %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTesting10OnCompleteEim(%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*, i32, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)**, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)*, %"class.blink::mojom::blink::BlobReaderClient"* (%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::BlobReaderClient"* %7(%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"* %0) #11
  %9 = bitcast %"class.blink::mojom::blink::BlobReaderClient"* %8 to void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)***
  %10 = load void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)**, void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)*, void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)** %10, i64 3
  %12 = load void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)*, void (%"class.blink::mojom::blink::BlobReaderClient"*, i32, i64)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::BlobReaderClient"* %8, i32 %1, i64 %2) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterC2EPNS1_16BlobReaderClientE(%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"* nocapture, %"class.blink::mojom::blink::BlobReaderClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BlobReaderClientAsyncWaiter", %"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::BlobReaderClient"* %1, %"class.blink::mojom::blink::BlobReaderClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink27BlobReaderClientAsyncWaiterD2Ev(%"class.blink::mojom::blink::BlobReaderClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting5CloneEN4mojo15PendingReceiverINS1_4BlobEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::Blob"* %7(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #11
  %11 = bitcast %"class.blink::mojom::blink::Blob"* %8 to void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)***
  %12 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)** %12, i64 2
  %14 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver"*)** %13, align 8
  call void %14(%"class.blink::mojom::blink::Blob"* %8, %"class.mojo::PendingReceiver"* nonnull %3) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting16AsDataPipeGetterEN4mojo15PendingReceiverIN7network5mojom5blink14DataPipeGetterEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver.10"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver.10", align 8
  %4 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::Blob"* %7(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver.10", %"class.mojo::PendingReceiver.10"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver.10", %"class.mojo::PendingReceiver.10"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #11
  %11 = bitcast %"class.blink::mojom::blink::Blob"* %8 to void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)***
  %12 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)** %12, i64 3
  %14 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.10"*)** %13, align 8
  call void %14(%"class.blink::mojom::blink::Blob"* %8, %"class.mojo::PendingReceiver.10"* nonnull %3) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting7ReadAllEN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEENS3_13PendingRemoteINS1_16BlobReaderClientEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::ScopedHandleBase.11"* nocapture, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase.11", align 4
  %5 = alloca %"class.mojo::PendingRemote", align 4
  %6 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %7, i64 11
  %9 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::Blob"* %9(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase.11", %"class.mojo::ScopedHandleBase.11"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::ScopedHandleBase.11", %"class.mojo::ScopedHandleBase.11"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !2
  store i32 %13, i32* %11, align 4, !alias.scope !2
  store i32 0, i32* %12, align 4, !noalias !2
  %14 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %14, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %15) #11
  %16 = bitcast %"class.blink::mojom::blink::Blob"* %10 to void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)***
  %17 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)** %17, i64 4
  %19 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)** %18, align 8
  call void %19(%"class.blink::mojom::blink::Blob"* %10, %"class.mojo::ScopedHandleBase.11"* nonnull %4, %"class.mojo::PendingRemote"* nonnull %5) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %14) #11
  %20 = load i32, i32* %11, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = call i32 @MojoClose(i32 %20) #11
  br label %24

24:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting9ReadRangeEmmN4mojo16ScopedHandleBaseINS3_22DataPipeProducerHandleEEENS3_13PendingRemoteINS1_16BlobReaderClientEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, i64, i64, %"class.mojo::ScopedHandleBase.11"* nocapture, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::ScopedHandleBase.11", align 4
  %7 = alloca %"class.mojo::PendingRemote", align 4
  %8 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %9, i64 11
  %11 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::Blob"* %11(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %13 = getelementptr inbounds %"class.mojo::ScopedHandleBase.11", %"class.mojo::ScopedHandleBase.11"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::ScopedHandleBase.11", %"class.mojo::ScopedHandleBase.11"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !5
  store i32 %15, i32* %13, align 4, !alias.scope !5
  store i32 0, i32* %14, align 4, !noalias !5
  %16 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %16, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %17) #11
  %18 = bitcast %"class.blink::mojom::blink::Blob"* %12 to void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)***
  %19 = load void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)**, void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)** %19, i64 5
  %21 = load void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::Blob"*, i64, i64, %"class.mojo::ScopedHandleBase.11"*, %"class.mojo::PendingRemote"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::Blob"* %12, i64 %1, i64 %2, %"class.mojo::ScopedHandleBase.11"* nonnull %6, %"class.mojo::PendingRemote"* nonnull %7) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %16) #11
  %22 = load i32, i32* %13, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %5
  %25 = call i32 @MojoClose(i32 %22) #11
  br label %26

26:                                               ; preds = %5, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting4LoadEN4mojo15PendingReceiverIN7network5mojom5blink9URLLoaderEEERKN3WTF6StringERKN3net18HttpRequestHeadersENS3_13PendingRemoteINS7_15URLLoaderClientEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"* dereferenceable(8), %"class.net::HttpRequestHeaders"* dereferenceable(24), %"class.mojo::PendingRemote.20"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingReceiver.19", align 8
  %7 = alloca %"class.mojo::PendingRemote.20", align 4
  %8 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %9, i64 11
  %11 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::Blob"* %11(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver.19", %"class.mojo::PendingReceiver.19"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingReceiver.19", %"class.mojo::PendingReceiver.19"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %13, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %14) #11
  %15 = getelementptr inbounds %"class.mojo::PendingRemote.20", %"class.mojo::PendingRemote.20"* %7, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::PendingRemote.20", %"class.mojo::PendingRemote.20"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %15, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %16) #11
  %17 = bitcast %"class.blink::mojom::blink::Blob"* %12 to void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)***
  %18 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)** %18, i64 6
  %20 = load void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.mojo::PendingReceiver.19"*, %"class.WTF::String"*, %"class.net::HttpRequestHeaders"*, %"class.mojo::PendingRemote.20"*)** %19, align 8
  call void %20(%"class.blink::mojom::blink::Blob"* %12, %"class.mojo::PendingReceiver.19"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.net::HttpRequestHeaders"* dereferenceable(24) %3, %"class.mojo::PendingRemote.20"* nonnull %7) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %15) #11
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting12ReadSideDataEN4base12OnceCallbackIFvN4absl8optionalIN9mojo_base9BigBufferEEEEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::Blob"* %7(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::Blob"* %8 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)** %14, i64 7
  %16 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::Blob"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting15CaptureSnapshotEN4base12OnceCallbackIFvmN4absl8optionalINS3_4TimeEEEEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback.21"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.21", align 8
  %4 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::Blob"* %7(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.21"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.21"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::Blob"* %8 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)***
  %14 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)** %14, i64 9
  %16 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::Blob"* %8, %"class.base::OnceCallback.21"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTesting15GetInternalUUIDEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::mojom::blink::BlobInterceptorForTesting"*, %"class.base::OnceCallback.22"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.22", align 8
  %4 = bitcast %"class.blink::mojom::blink::BlobInterceptorForTesting"* %0 to %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)**, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %5, i64 11
  %7 = load %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)*, %"class.blink::mojom::blink::Blob"* (%"class.blink::mojom::blink::BlobInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::Blob"* %7(%"class.blink::mojom::blink::BlobInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.22"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.22"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::Blob"* %8 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)***
  %14 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)** %14, i64 10
  %16 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::Blob"* %8, %"class.base::OnceCallback.22"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink15BlobAsyncWaiterC2EPNS1_4BlobE(%"class.blink::mojom::blink::BlobAsyncWaiter"* nocapture, %"class.blink::mojom::blink::Blob"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BlobAsyncWaiter", %"class.blink::mojom::blink::BlobAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::Blob"* %1, %"class.blink::mojom::blink::Blob"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink15BlobAsyncWaiterD2Ev(%"class.blink::mojom::blink::BlobAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEE(%"class.blink::mojom::blink::BlobAsyncWaiter"* nocapture readonly, %"class.absl::optional"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint %"class.absl::optional"* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BlobAsyncWaiter", %"class.blink::mojom::blink::BlobAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::Blob"*, %"class.blink::mojom::blink::Blob"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !8
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !8
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !8
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !8
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !8
  %18 = bitcast %"class.blink::mojom::blink::Blob"* %9 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)** %19, i64 7
  %21 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::Blob"* %9, %"class.base::OnceCallback"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 93) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalIN4base4TimeEEE(%"class.blink::mojom::blink::BlobAsyncWaiter"* nocapture readonly, i64*, %"class.absl::optional.59"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.21", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i64* %1 to i64
  %8 = ptrtoint %"class.absl::optional.59"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::BlobAsyncWaiter", %"class.blink::mojom::blink::BlobAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::Blob"*, %"class.blink::mojom::blink::Blob"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #12, !noalias !13
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i64, %"class.absl::optional.59"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopES7_SC_EEEFvmSB_EE7RunOnceEPNS0_13BindStateBaseEmOSB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopES6_SB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !13
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !13
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !13
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !13
  %21 = bitcast %"class.base::OnceCallback.21"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !13
  %22 = bitcast %"class.blink::mojom::blink::Blob"* %11 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)***
  %23 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)** %23, i64 9
  %25 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.21"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::Blob"* %11, %"class.base::OnceCallback.21"* nonnull %5) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback.21", %"class.base::OnceCallback.21"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 112) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringE(%"class.blink::mojom::blink::BlobAsyncWaiter"* nocapture readonly, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.22", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint %"class.WTF::String"* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BlobAsyncWaiter", %"class.blink::mojom::blink::BlobAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::Blob"*, %"class.blink::mojom::blink::Blob"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !18
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !18
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !18
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !18
  %17 = bitcast %"class.base::OnceCallback.22"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !18
  %18 = bitcast %"class.blink::mojom::blink::Blob"* %9 to void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)***
  %19 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)**, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)** %19, i64 10
  %21 = load void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)*, void (%"class.blink::mojom::blink::Blob"*, %"class.base::OnceCallback.22"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::Blob"* %9, %"class.base::OnceCallback.22"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.22", %"class.base::OnceCallback.22"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 127) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink16BlobReaderClientD2Ev(%"class.blink::mojom::blink::BlobReaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink37BlobReaderClientInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BlobReaderClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink4BlobD2Ev(%"class.blink::mojom::blink::Blob"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink25BlobInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BlobInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare zeroext i1 @_ZN5blink5mojom5blink4Blob15CaptureSnapshotEPmPN4absl8optionalIN4base4TimeEEE(%"class.blink::mojom::blink::Blob"*, i64*, %"class.absl::optional.59"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @MojoClose(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.absl::optional"* dereferenceable(64)) #0 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.absl::optional"**
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #11
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %10 = load %"class.absl::optional"*, %"class.absl::optional"** %7, align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 64, i1 false) #11
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %16, %"class.mojo_base::BigBuffer"* dereferenceable(56) %15) #11
  store i8 1, i8* %8, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !23
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %19, label %23, label %21

21:                                               ; preds = %14
  %22 = call dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #11
  br label %30

23:                                               ; preds = %14
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #11
  store i8 1, i8* %17, align 8
  br label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !23
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %29) #11
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %24, %23, %21
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %9) #11
  %31 = load i8, i8* %8, align 8, !range !23
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %34) #11
  store i8 0, i8* %8, align 8
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

declare dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) local_unnamed_addr #5

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopES7_SC_EEEFvmSB_EE7RunOnceEPNS0_13BindStateBaseEmOSB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i64, %"class.absl::optional.59"* nocapture readonly dereferenceable(16)) #0 align 2 {
  %4 = alloca %"class.absl::optional_internal::optional_data_dtor_base.62", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i64**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.absl::optional.59"**
  %11 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %12 = load i64*, i64** %8, align 8
  %13 = load %"class.absl::optional.59"*, %"class.absl::optional.59"** %10, align 8
  %14 = getelementptr inbounds %"class.absl::optional.59", %"class.absl::optional.59"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.62", %"class.absl::optional_internal::optional_data_dtor_base.62"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %14, i64 16, i1 false) #11
  store i64 %1, i64* %12, align 8
  %16 = getelementptr inbounds %"class.absl::optional.59", %"class.absl::optional.59"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %15, i64 16, i1 false) #11
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %11) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopES6_SB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !24

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %31 = bitcast %"class.WTF::String"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %29, %44, %47
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter12ReadSideDataEPN4absl8optionalIN9mojo_base9BigBufferEEEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopERS7_RSC_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopERS7_RSC_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopERS5_RSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter15CaptureSnapshotEPmPN4absl8optionalINS_4TimeEEEE3$_1JPNS_7RunLoopERS5_RSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIZN5blink5mojom5blink15BlobAsyncWaiter15GetInternalUUIDEPN3WTF6StringEE3$_2JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!23 = !{i8 0, i8 2}
!24 = !{!"branch_weights", i32 1, i32 2000}
