; ModuleID = '../../third_party/freetype/src/src/autofit/autofit.c'
source_filename = "../../third_party/freetype/src/src/autofit/autofit.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AF_Blue_StringRec_ = type { i32, i16 }
%struct.AF_WritingSystemClassRec_ = type { i32, i64, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)*, void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)*, void (%struct.AF_StyleMetricsRec_*)*, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)*, i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)*, i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* }
%struct.AF_StyleMetricsRec_ = type { %struct.AF_StyleClassRec_*, %struct.AF_ScalerRec_, i8, %struct.AF_FaceGlobalsRec_* }
%struct.AF_StyleClassRec_ = type { i32, i32, i32, i32, i32 }
%struct.AF_ScalerRec_ = type { %struct.FT_FaceRec_*, i64, i64, i64, i64, i32, i32 }
%struct.AF_FaceGlobalsRec_ = type { %struct.FT_FaceRec_*, i64, i16*, %struct.hb_font_t*, %struct.hb_buffer_t*, i32, [87 x %struct.AF_StyleMetricsRec_*], i16, i64, i64, i64, i64, i64, %struct.AF_ModuleRec_* }
%struct.hb_font_t = type opaque
%struct.hb_buffer_t = type opaque
%struct.AF_ModuleRec_ = type { %struct.FT_ModuleRec_, i32, i32, i8, [8 x i32] }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.AF_GlyphHintsRec_ = type { %struct.FT_MemoryRec_*, i64, i64, i64, i64, i32, i32, %struct.AF_PointRec_*, i32, i32, %struct.AF_PointRec_**, [2 x %struct.AF_AxisHintsRec_], i32, i32, %struct.AF_StyleMetricsRec_*, i64, i64, %struct.anon.0 }
%struct.AF_PointRec_ = type { i16, i8, i8, i64, i64, i16, i16, i64, i64, i64, i64, %struct.AF_PointRec_*, %struct.AF_PointRec_* }
%struct.AF_AxisHintsRec_ = type { i32, i32, %struct.AF_SegmentRec_*, i32, i32, %struct.AF_EdgeRec_*, i32, %struct.anon }
%struct.AF_SegmentRec_ = type { i8, i8, i16, i16, i16, i16, i16, %struct.AF_EdgeRec_*, %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_*, i64, i64, %struct.AF_PointRec_*, %struct.AF_PointRec_* }
%struct.AF_EdgeRec_ = type { i16, i64, i64, i8, i8, i64, %struct.AF_WidthRec_*, %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_*, i32, %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_* }
%struct.AF_WidthRec_ = type { i64, i64, i64 }
%struct.anon = type { [18 x %struct.AF_SegmentRec_], [12 x %struct.AF_EdgeRec_] }
%struct.anon.0 = type { [8 x %struct.AF_PointRec_*], [96 x %struct.AF_PointRec_] }
%struct.AF_ScriptClassRec_ = type { i32, %struct.AF_Script_UniRangeRec_*, %struct.AF_Script_UniRangeRec_*, i8, i8* }
%struct.AF_Script_UniRangeRec_ = type { i32, i32 }
%struct.FT_AutoHinter_InterfaceRec_ = type { void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*)*, void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*, i8**, i64*)*, void (%struct.FT_AutoHinterRec_*, i8*)*, i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* }
%struct.FT_AutoHinterRec_ = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_PropertiesRec_ = type { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* }
%struct.AF_CJKMetricsRec_ = type { %struct.AF_StyleMetricsRec_, i32, [2 x %struct.AF_CJKAxisRec_] }
%struct.AF_CJKAxisRec_ = type { i64, i64, i32, [16 x %struct.AF_WidthRec_], i64, i64, i8, i8, i32, [266 x %struct.AF_CJKBlueRec_], i64, i64 }
%struct.AF_CJKBlueRec_ = type { %struct.AF_WidthRec_, %struct.AF_WidthRec_, i32 }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.AF_LatinMetricsRec_ = type { %struct.AF_StyleMetricsRec_, i32, [2 x %struct.AF_LatinAxisRec_] }
%struct.AF_LatinAxisRec_ = type { i64, i64, i32, [16 x %struct.AF_WidthRec_], i64, i64, i8, i32, [266 x %struct.AF_LatinBlueRec_], i64, i64 }
%struct.AF_LatinBlueRec_ = type { %struct.AF_WidthRec_, %struct.AF_WidthRec_, i64, i64, i32 }
%struct.AF_LoaderRec_ = type { %struct.FT_FaceRec_*, %struct.AF_FaceGlobalsRec_*, %struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*, i8, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.hb_face_t = type opaque
%struct.hb_language_impl_t = type opaque
%struct.hb_set_t = type opaque

@af_blue_strings = hidden constant [5531 x i8] c"\F0\9E\A4\8C \F0\9E\A4\85 \F0\9E\A4\88 \F0\9E\A4\8F \F0\9E\A4\94 \F0\9E\A4\9A\00\F0\9E\A4\82 \F0\9E\A4\96\00\F0\9E\A4\AC \F0\9E\A4\AE \F0\9E\A4\BB \F0\9E\A4\BC \F0\9E\A4\BE\00\F0\9E\A4\A4 \F0\9E\A4\A8 \F0\9E\A4\A9 \F0\9E\A4\AD \F0\9E\A4\B4 \F0\9E\A4\B8 \F0\9E\A4\BA \F0\9E\A5\80\00\D8\A7 \D8\A5 \D9\84 \D9\83 \D8\B7 \D8\B8\00\D8\AA \D8\AB \D8\B7 \D8\B8 \D9\83\00\D9\80\00\D4\B1 \D5\84 \D5\92 \D5\8D \D4\B2 \D4\B3 \D4\B4 \D5\95\00\D5\92 \D5\88 \D4\B4 \D5\83 \D5\87 \D5\8D \D5\8F \D5\95\00\D5\A5 \D5\A7 \D5\AB \D5\B4 \D5\BE \D6\86 \D5\B3\00\D5\A1 \D5\B5 \D6\82 \D5\BD \D5\A3 \D5\B7 \D6\80 \D6\85\00\D5\B0 \D5\B8 \D5\B3 \D5\A1 \D5\A5 \D5\AE \D5\BD \D6\85\00\D5\A2 \D5\A8 \D5\AB \D5\AC \D5\B2 \D5\BA \D6\83 \D6\81\00\F0\90\AC\80 \F0\90\AC\81 \F0\90\AC\90 \F0\90\AC\9B\00\F0\90\AC\80 \F0\90\AC\81\00\EA\9A\A7 \EA\9A\A8 \EA\9B\9B \EA\9B\89 \EA\9B\81 \EA\9B\88 \EA\9B\AB \EA\9B\AF\00\EA\9A\AD \EA\9A\B3 \EA\9A\B6 \EA\9B\AC \EA\9A\A2 \EA\9A\BD \EA\9B\AF \EA\9B\B2\00\E0\A6\85 \E0\A6\A1 \E0\A6\A4 \E0\A6\A8 \E0\A6\AC \E0\A6\AD \E0\A6\B2 \E0\A6\95\00\E0\A6\87 \E0\A6\9F \E0\A6\A0 \E0\A6\BF \E0\A7\80 \E0\A7\88 \E0\A7\97\00\E0\A6\93 \E0\A6\8F \E0\A6\A1 \E0\A6\A4 \E0\A6\A8 \E0\A6\AC \E0\A6\B2 \E0\A6\95\00\E1\9D\90 \E1\9D\88\00\E1\9D\85 \E1\9D\8A \E1\9D\8E\00\E1\9D\82 \E1\9D\83 \E1\9D\89 \E1\9D\8C\00\E1\9D\80 \E1\9D\83 \E1\9D\86 \E1\9D\89 \E1\9D\8B \E1\9D\8F \E1\9D\91\00\E1\97\9C \E1\96\B4 \E1\90\81 \E1\92\A3 \E1\91\AB \E1\91\8E \E1\94\91 \E1\97\B0\00\E1\97\B6 \E1\96\B5 \E1\92\A7 \E1\90\83 \E1\91\8C \E1\92\8D \E1\94\91 \E1\97\A2\00\E1\93\93 \E1\93\95 \E1\93\80 \E1\93\82 \E1\93\84 \E1\95\84 \E1\95\86 \E1\98\A3\00\E1\95\83 \E1\93\82 \E1\93\80 \E1\95\82 \E1\93\97 \E1\93\9A \E1\95\86 \E1\98\A3\00\E1\90\AA \E1\99\86 \E1\A3\98 \E1\90\A2 \E1\92\BE \E1\A3\97 \E1\94\86\00\E1\99\86 \E1\97\AE \E1\92\BB \E1\90\9E \E1\94\86 \E1\92\A1 \E1\92\A2 \E1\93\91\00\F0\90\8A\A7 \F0\90\8A\AB \F0\90\8A\AC \F0\90\8A\AD \F0\90\8A\B1 \F0\90\8A\BA \F0\90\8A\BC \F0\90\8A\BF\00\F0\90\8A\A3 \F0\90\8A\A7 \F0\90\8A\B7 \F0\90\8B\80 \F0\90\8A\AB \F0\90\8A\B8 \F0\90\8B\89\00\F0\91\84\83 \F0\91\84\85 \F0\91\84\89 \F0\91\84\99 \F0\91\84\97\00\F0\91\84\85 \F0\91\84\9B \F0\91\84\9D \F0\91\84\97 \F0\91\84\93\00\F0\91\84\96\F0\91\84\B3\F0\91\84\A2 \F0\91\84\98\F0\91\84\B3\F0\91\84\A2 \F0\91\84\99\F0\91\84\B3\F0\91\84\A2 \F0\91\84\A4\F0\91\84\B3\F0\91\84\A2 \F0\91\84\A5\F0\91\84\B3\F0\91\84\A2\00\E1\8F\86 \E1\8E\BB \E1\8E\AC \E1\8F\83 \E1\8E\A4 \E1\8F\A3 \E1\8E\A6 \E1\8F\95\00\EA\AE\92 \EA\AE\A4 \EA\AE\B6 \EA\AD\B4 \EA\AD\BE \EA\AE\97 \EA\AE\9D \EA\AE\BF\00\EA\AE\96 \EA\AD\BC \EA\AE\93 \EA\AE\A0 \EA\AE\B3 \EA\AD\B6 \EA\AE\A5 \EA\AE\BB\00\E1\8F\B8 \EA\AE\90 \EA\AD\B9 \EA\AD\BB\00\E2\B2\8C \E2\B2\8E \E2\B2\A0 \E2\B3\9E \E2\B2\9E \E2\B2\90 \E2\B2\A4 \E2\B3\8A\00\E2\B3\90 \E2\B3\98 \E2\B3\9E \E2\B2\8E \E2\B2\9E \E2\B2\90 \E2\B3\9C \E2\B2\B0\00\E2\B2\8D \E2\B2\8F \E2\B2\A1 \E2\B3\9F \E2\B2\9F \E2\B2\91 \E2\B2\A5 \E2\B3\8B\00\E2\B3\91 \E2\B3\99 \E2\B3\9F \E2\B2\8F \E2\B2\9F \E2\B2\91 \E2\B3\9D \E2\B3\92\00\F0\90\A0\8D \F0\90\A0\99 \F0\90\A0\B3 \F0\90\A0\B1 \F0\90\A0\85 \F0\90\A0\93 \F0\90\A0\A3 \F0\90\A0\A6\00\F0\90\A0\83 \F0\90\A0\8A \F0\90\A0\9B \F0\90\A0\A3 \F0\90\A0\B3 \F0\90\A0\B5 \F0\90\A0\90\00\F0\90\A0\88 \F0\90\A0\8F \F0\90\A0\96\00\D0\91 \D0\92 \D0\95 \D0\9F \D0\97 \D0\9E \D0\A1 \D0\AD\00\D0\91 \D0\92 \D0\95 \D0\A8 \D0\97 \D0\9E \D0\A1 \D0\AD\00\D1\85 \D0\BF \D0\BD \D1\88 \D0\B5 \D0\B7 \D0\BE \D1\81\00\D1\80 \D1\83 \D1\84\00\F0\90\90\82 \F0\90\90\84 \F0\90\90\8B \F0\90\90\97 \F0\90\90\91\00\F0\90\90\80 \F0\90\90\82 \F0\90\90\84 \F0\90\90\97 \F0\90\90\9B\00\F0\90\90\AA \F0\90\90\AC \F0\90\90\B3 \F0\90\90\BF \F0\90\90\B9\00\F0\90\90\A8 \F0\90\90\AA \F0\90\90\AC \F0\90\90\BF \F0\90\91\83\00\E0\A4\95 \E0\A4\A8 \E0\A4\AE \E0\A4\89 \E0\A4\9B \E0\A4\9F \E0\A4\A0 \E0\A4\A1\00\E0\A4\88 \E0\A4\90 \E0\A4\93 \E0\A4\94 \E0\A4\BF \E0\A5\80 \E0\A5\8B \E0\A5\8C\00\E0\A4\95 \E0\A4\AE \E0\A4\85 \E0\A4\86 \E0\A4\A5 \E0\A4\A7 \E0\A4\AD \E0\A4\B6\00\E0\A5\81 \E0\A5\83\00\E1\88\80 \E1\88\83 \E1\8B\98 \E1\8D\90 \E1\88\9B \E1\89\A0 \E1\8B\8B \E1\8B\90\00\E1\88\88 \E1\88\90 \E1\89\A0 \E1\8B\98 \E1\88\80 \E1\88\AA \E1\8B\90 \E1\8C\A8\00\E1\83\92 \E1\83\93 \E1\83\94 \E1\83\95 \E1\83\97 \E1\83\98 \E1\83\9D \E1\83\A6\00\E1\83\90 \E1\83\96 \E1\83\9B \E1\83\A1 \E1\83\A8 \E1\83\AB \E1\83\AE \E1\83\9E\00\E1\83\A1 \E1\83\AE \E1\83\A5 \E1\83\96 \E1\83\9B \E1\83\A8 \E1\83\A9 \E1\83\AC\00\E1\83\94 \E1\83\95 \E1\83\9F \E1\83\A2 \E1\83\A3 \E1\83\A4 \E1\83\A5 \E1\83\A7\00\E1\82\B1 \E1\82\A7 \E1\82\B9 \E1\82\BC \E1\82\A4 \E1\82\A5 \E1\82\B3 \E1\82\BA\00\E1\82\A4 \E1\82\A5 \E1\82\A7 \E1\82\A8 \E1\82\A6 \E1\82\B1 \E1\82\AA \E1\82\AB\00\E2\B4\81 \E2\B4\97 \E2\B4\82 \E2\B4\84 \E2\B4\85 \E2\B4\87 \E2\B4\94 \E2\B4\96\00\E2\B4\88 \E2\B4\8C \E2\B4\96 \E2\B4\8E \E2\B4\83 \E2\B4\86 \E2\B4\8B \E2\B4\A2\00\E2\B4\90 \E2\B4\91 \E2\B4\93 \E2\B4\95 \E2\B4\99 \E2\B4\9B \E2\B4\A1 \E2\B4\A3\00\E2\B4\84 \E2\B4\85 \E2\B4\94 \E2\B4\95 \E2\B4\81 \E2\B4\82 \E2\B4\98 \E2\B4\9D\00\E1\B2\9C \E1\B2\9F \E1\B2\B3 \E1\B2\B8 \E1\B2\92 \E1\B2\94 \E1\B2\9D \E1\B2\B4\00\E1\B2\98 \E1\B2\B2 \E1\B2\9D \E1\B2\A9 \E1\B2\9B \E1\B2\A8 \E1\B2\AF \E1\B2\BD\00\E2\B0\85 \E2\B0\94 \E2\B0\AA \E2\B0\84 \E2\B0\82 \E2\B0\8A \E2\B0\AB \E2\B0\8B\00\E2\B0\85 \E2\B0\84 \E2\B0\82 \E2\B0\AA \E2\B0\9E \E2\B0\A1 \E2\B0\8A \E2\B0\94\00\E2\B0\B5 \E2\B1\84 \E2\B1\9A \E2\B0\B4 \E2\B0\B2 \E2\B0\BA \E2\B1\9B \E2\B0\BB\00\E2\B0\B5 \E2\B0\B4 \E2\B0\B2 \E2\B1\9A \E2\B1\8E \E2\B1\91 \E2\B0\BA \E2\B1\84\00\F0\90\8C\B2 \F0\90\8C\B6 \F0\90\8D\80 \F0\90\8D\84 \F0\90\8C\B4 \F0\90\8D\83 \F0\90\8D\88 \F0\90\8C\BE\00\F0\90\8C\B6 \F0\90\8C\B4 \F0\90\8D\83 \F0\90\8D\88\00\CE\93 \CE\92 \CE\95 \CE\96 \CE\98 \CE\9F \CE\A9\00\CE\92 \CE\94 \CE\96 \CE\9E \CE\98 \CE\9F\00\CE\B2 \CE\B8 \CE\B4 \CE\B6 \CE\BB \CE\BE\00\CE\B1 \CE\B5 \CE\B9 \CE\BF \CF\80 \CF\83 \CF\84 \CF\89\00\CE\B2 \CE\B3 \CE\B7 \CE\BC \CF\81 \CF\86 \CF\87 \CF\88\00\E0\AA\A4 \E0\AA\A8 \E0\AA\8B \E0\AA\8C \E0\AA\9B \E0\AA\9F \E0\AA\B0 \E0\AB\A6\00\E0\AA\96 \E0\AA\97 \E0\AA\98 \E0\AA\9E \E0\AA\87 \E0\AA\88 \E0\AA\A0 \E0\AA\9C\00\E0\AA\88 \E0\AA\8A \E0\AA\BF \E0\AB\80 \E0\AA\B2\E0\AB\80 \E0\AA\B6\E0\AB\8D\E0\AA\9A\E0\AA\BF \E0\AA\9C\E0\AA\BF \E0\AA\B8\E0\AB\80\00\E0\AB\81 \E0\AB\83 \E0\AB\84 \E0\AA\96\E0\AB\81 \E0\AA\9B\E0\AB\83 \E0\AA\9B\E0\AB\84\00\E0\AB\A6 \E0\AB\A7 \E0\AB\A8 \E0\AB\A9 \E0\AB\AD\00\E0\A8\95 \E0\A8\97 \E0\A8\99 \E0\A8\9A \E0\A8\9C \E0\A8\A4 \E0\A8\A7 \E0\A8\B8\00\E0\A8\95 \E0\A8\97 \E0\A8\99 \E0\A8\9A \E0\A8\9C \E0\A8\A4 \E0\A8\A7 \E0\A8\B8\00\E0\A8\87 \E0\A8\88 \E0\A8\89 \E0\A8\8F \E0\A8\93 \E0\A9\B3 \E0\A8\BF \E0\A9\80\00\E0\A8\85 \E0\A8\8F \E0\A8\93 \E0\A8\97 \E0\A8\9C \E0\A8\A0 \E0\A8\B0 \E0\A8\B8\00\E0\A9\A6 \E0\A9\A7 \E0\A9\A8 \E0\A9\A9 \E0\A9\AD\00\D7\91 \D7\93 \D7\94 \D7\97 \D7\9A \D7\9B \D7\9D \D7\A1\00\D7\91 \D7\98 \D7\9B \D7\9D \D7\A1 \D7\A6\00\D7\A7 \D7\9A \D7\9F \D7\A3 \D7\A5\00\E0\B2\87 \E0\B2\8A \E0\B2\90 \E0\B2\A3 \E0\B2\B8\E0\B2\BE \E0\B2\A8\E0\B2\BE \E0\B2\A6\E0\B2\BE \E0\B2\B0\E0\B2\BE\00\E0\B2\85 \E0\B2\89 \E0\B2\8E \E0\B2\B2 \E0\B3\A6 \E0\B3\A8 \E0\B3\AC \E0\B3\AD\00\EA\A4\85 \EA\A4\8F \EA\A4\81 \EA\A4\8B \EA\A4\80 \EA\A4\8D\00\EA\A4\88 \EA\A4\98 \EA\A4\80 \EA\A4\8D \EA\A4\A2\00\EA\A4\96 \EA\A4\A1\00\EA\A4\91 \EA\A4\9C \EA\A4\9E\00\EA\A4\91\EA\A4\AC \EA\A4\9C\EA\A4\AD \EA\A4\94\EA\A4\AC\00\E1\9E\81 \E1\9E\91 \E1\9E\93 \E1\9E\A7 \E1\9E\A9 \E1\9E\B6\00\E1\9E\80\E1\9F\92\E1\9E\80 \E1\9E\80\E1\9F\92\E1\9E\81 \E1\9E\80\E1\9F\92\E1\9E\82 \E1\9E\80\E1\9F\92\E1\9E\90\00\E1\9E\81 \E1\9E\83 \E1\9E\85 \E1\9E\8B \E1\9E\94 \E1\9E\98 \E1\9E\99 \E1\9E\B2\00\E1\9E\8F\E1\9F\92\E1\9E\9A \E1\9E\9A\E1\9F\80 \E1\9E\B2\E1\9F\92\E1\9E\99 \E1\9E\A2\E1\9E\BF\00\E1\9E\93\E1\9F\92\E1\9E\8F\E1\9F\92\E1\9E\9A\E1\9F\83 \E1\9E\84\E1\9F\92\E1\9E\81\E1\9F\92\E1\9E\99 \E1\9E\80\E1\9F\92\E1\9E\94\E1\9F\80 \E1\9E\85\E1\9F\92\E1\9E\9A\E1\9F\80 \E1\9E\93\E1\9F\92\E1\9E\8F\E1\9E\BF \E1\9E\9B\E1\9F\92\E1\9E\94\E1\9E\BF\00\E1\A7\A0 \E1\A7\A1\00\E1\A7\B6 \E1\A7\B9\00\E0\BA\B2 \E0\BA\94 \E0\BA\AD \E0\BA\A1 \E0\BA\A5 \E0\BA\A7 \E0\BA\A3 \E0\BA\87\00\E0\BA\B2 \E0\BA\AD \E0\BA\9A \E0\BA\8D \E0\BA\A3 \E0\BA\AE \E0\BA\A7 \E0\BA\A2\00\E0\BA\9B \E0\BA\A2 \E0\BA\9F \E0\BA\9D\00\E0\BB\82 \E0\BB\84 \E0\BB\83\00\E0\BA\87 \E0\BA\8A \E0\BA\96 \E0\BA\BD \E0\BB\86 \E0\BA\AF\00T H E Z O C Q S\00H E Z L O C U S\00f i j k d b h\00u v x z o e s c\00n r x z o e s c\00p q g j y\00\E2\82\80 \E2\82\83 \E2\82\85 \E2\82\87 \E2\82\88\00\E2\82\80 \E2\82\81 \E2\82\82 \E2\82\83 \E2\82\88\00\E1\B5\A2 \E2\B1\BC \E2\82\95 \E2\82\96 \E2\82\97\00\E2\82\90 \E2\82\91 \E2\82\92 \E2\82\93 \E2\82\99 \E2\82\9B \E1\B5\A5 \E1\B5\A4 \E1\B5\A3\00\E1\B5\A6 \E1\B5\A7 \E1\B5\A8 \E1\B5\A9 \E2\82\9A\00\E2\81\B0 \C2\B3 \E2\81\B5 \E2\81\B7 \E1\B5\80 \E1\B4\B4 \E1\B4\B1 \E1\B4\BC\00\E2\81\B0 \C2\B9 \C2\B2 \C2\B3 \E1\B4\B1 \E1\B4\B8 \E1\B4\BC \E1\B5\81\00\E1\B5\87 \E1\B5\88 \E1\B5\8F \CA\B0 \CA\B2 \E1\B6\A0 \E2\81\B1\00\E1\B5\89 \E1\B5\92 \CA\B3 \CB\A2 \CB\A3 \E1\B6\9C \E1\B6\BB\00\E1\B5\96 \CA\B8 \E1\B5\8D\00\EA\93\A1 \EA\93\A7 \EA\93\B1 \EA\93\B6 \EA\93\A9 \EA\93\9A \EA\93\B5 \EA\93\B3\00\EA\93\95 \EA\93\9C \EA\93\9E \EA\93\A1 \EA\93\9B \EA\93\A2 \EA\93\B3 \EA\93\B4\00\E0\B4\92 \E0\B4\9F \E0\B4\A0 \E0\B4\B1 \E0\B4\9A \E0\B4\AA \E0\B4\9A\E0\B5\8D\E0\B4\9A \E0\B4\AA\E0\B5\8D\E0\B4\AA\00\E0\B4\9F \E0\B4\A0 \E0\B4\A7 \E0\B4\B6 \E0\B4\98 \E0\B4\9A \E0\B4\A5 \E0\B4\B2\00\F0\96\B9\80 \F0\96\B9\81 \F0\96\B9\82 \F0\96\B9\83 \F0\96\B9\8F \F0\96\B9\9A \F0\96\B9\9F\00\F0\96\B9\80 \F0\96\B9\81 \F0\96\B9\82 \F0\96\B9\83 \F0\96\B9\8F \F0\96\B9\9A \F0\96\B9\92 \F0\96\B9\93\00\F0\96\B9\A4 \F0\96\B9\AC \F0\96\B9\A7 \F0\96\B9\B4 \F0\96\B9\B6 \F0\96\B9\BE\00\F0\96\B9\A0 \F0\96\B9\A1 \F0\96\B9\A2 \F0\96\B9\B9 \F0\96\B9\B3 \F0\96\B9\AE\00\F0\96\B9\A0 \F0\96\B9\A1 \F0\96\B9\A2 \F0\96\B9\B3 \F0\96\B9\AD \F0\96\B9\BD\00\F0\96\B9\A5 \F0\96\B9\A8 \F0\96\B9\A9\00\F0\96\BA\80 \F0\96\BA\85 \F0\96\BA\88 \F0\96\BA\84 \F0\96\BA\8D\00\E1\A0\B3 \E1\A0\B4 \E1\A0\B6 \E1\A0\BD \E1\A1\82 \E1\A1\8A \E2\80\8D\E1\A1\A1\E2\80\8D \E2\80\8D\E1\A1\B3\E2\80\8D\00\E1\A1\83\00\E1\80\81 \E1\80\82 \E1\80\84 \E1\80\92 \E1\80\9D \E1\81\A5 \E1\81\8A \E1\81\8B\00\E1\80\84 \E1\80\8E \E1\80\92 \E1\80\95 \E1\80\97 \E1\80\9D \E1\81\8A \E1\81\8B\00\E1\80\A9 \E1\80\BC \E1\81\8D \E1\81\8F \E1\81\86 \E1\80\AB \E1\80\AD\00\E1\80\89 \E1\80\8A \E1\80\A5 \E1\80\A9 \E1\80\A8 \E1\81\82 \E1\81\85 \E1\81\89\00\DF\90 \DF\89 \DF\92 \DF\9F \DF\96 \DF\9C \DF\A0 \DF\A5\00\DF\80 \DF\98 \DF\A1 \DF\A0 \DF\A5\00\DF\8F \DF\9B \DF\8B\00\DF\8E \DF\8F \DF\9B \DF\8B\00\E1\B1\9B \E1\B1\9C \E1\B1\9D \E1\B1\A1 \E1\B1\A2 \E1\B1\A5\00\F0\90\B0\97 \F0\90\B0\98 \F0\90\B0\A7\00\F0\90\B0\89 \F0\90\B0\97 \F0\90\B0\A6 \F0\90\B0\A7\00\F0\90\92\BE \F0\90\93\8D \F0\90\93\92 \F0\90\93\93 \F0\90\92\BB \F0\90\93\82 \F0\90\92\B5 \F0\90\93\86\00\F0\90\92\B0 \F0\90\93\8D \F0\90\93\82 \F0\90\92\BF \F0\90\93\8E \F0\90\92\B9\00\F0\90\92\BC \F0\90\92\BD \F0\90\92\BE\00\F0\90\93\B5 \F0\90\93\B6 \F0\90\93\BA \F0\90\93\BB \F0\90\93\9D \F0\90\93\A3 \F0\90\93\AA \F0\90\93\AE\00\F0\90\93\98 \F0\90\93\9A \F0\90\93\A3 \F0\90\93\B5 \F0\90\93\A1 \F0\90\93\A7 \F0\90\93\AA \F0\90\93\B6\00\F0\90\93\A4 \F0\90\93\A6 \F0\90\93\B8 \F0\90\93\B9 \F0\90\93\9B\00\F0\90\93\A4 \F0\90\93\A5 \F0\90\93\A6\00\F0\90\92\86 \F0\90\92\89 \F0\90\92\90 \F0\90\92\92 \F0\90\92\98 \F0\90\92\9B \F0\90\92\A0 \F0\90\92\A3\00\F0\90\92\80 \F0\90\92\82 \F0\90\92\86 \F0\90\92\88 \F0\90\92\8A \F0\90\92\92 \F0\90\92\A0 \F0\90\92\A9\00\F0\90\B4\83 \F0\90\B4\80 \F0\90\B4\86 \F0\90\B4\96 \F0\90\B4\95\00\F0\90\B4\94 \F0\90\B4\96 \F0\90\B4\95 \F0\90\B4\91 \F0\90\B4\90\00\D9\80\00\EA\A2\9C \EA\A2\9E \EA\A2\B3 \EA\A2\82 \EA\A2\96 \EA\A2\92 \EA\A2\9D \EA\A2\9B\00\EA\A2\82 \EA\A2\A8 \EA\A2\BA \EA\A2\A4 \EA\A2\8E\00\F0\90\91\95 \F0\90\91\99\00\F0\90\91\94 \F0\90\91\96 \F0\90\91\97 \F0\90\91\B9 \F0\90\91\BB\00\F0\90\91\9F \F0\90\91\A3\00\F0\90\91\B1 \F0\90\91\B2 \F0\90\91\B3 \F0\90\91\B4 \F0\90\91\B8 \F0\90\91\BA \F0\90\91\BC\00\F0\90\91\B4 \F0\90\91\BB \F0\90\91\B9\00\E0\B6\89 \E0\B6\9A \E0\B6\9D \E0\B6\B3 \E0\B6\B4 \E0\B6\BA \E0\B6\BD \E0\B7\86\00\E0\B6\91 \E0\B6\94 \E0\B6\9D \E0\B6\A2 \E0\B6\A7 \E0\B6\AE \E0\B6\B0 \E0\B6\BB\00\E0\B6\AF \E0\B6\B3 \E0\B6\8B \E0\B6\BD \E0\B6\AD\E0\B7\96 \E0\B6\AD\E0\B7\94 \E0\B6\B6\E0\B7\94 \E0\B6\AF\E0\B7\94\00\E1\AE\8B \E1\AE\9E \E1\AE\AE \E1\AE\BD \E1\AE\B0 \E1\AE\88\00\E1\AE\84 \E1\AE\94 \E1\AE\95 \E1\AE\97 \E1\AE\B0 \E1\AE\86 \E1\AE\88 \E1\AE\89\00\E1\AE\BC \E1\B3\84\00\EA\AA\86 \EA\AA\94 \EA\AA\92 \EA\AA\96 \EA\AA\AB\00\EA\AA\89 \EA\AA\AB \EA\AA\AE\00\E0\AE\89 \E0\AE\92 \E0\AE\93 \E0\AE\B1 \E0\AE\88 \E0\AE\95 \E0\AE\99 \E0\AE\9A\00\E0\AE\95 \E0\AE\9A \E0\AE\B2 \E0\AE\B6 \E0\AE\89 \E0\AE\99 \E0\AE\9F \E0\AE\AA\00\E0\B0\87 \E0\B0\8C \E0\B0\99 \E0\B0\9E \E0\B0\A3 \E0\B0\B1 \E0\B1\AF\00\E0\B0\85 \E0\B0\95 \E0\B0\9A \E0\B0\B0 \E0\B0\BD \E0\B1\A8 \E0\B1\AC\00\E0\B8\9A \E0\B9\80 \E0\B9\81 \E0\B8\AD \E0\B8\81 \E0\B8\B2\00\E0\B8\9A \E0\B8\9B \E0\B8\A9 \E0\B8\AF \E0\B8\AD \E0\B8\A2 \E0\B8\AE\00\E0\B8\9B \E0\B8\9D \E0\B8\9F\00\E0\B9\82 \E0\B9\83 \E0\B9\84\00\E0\B8\8E \E0\B8\8F \E0\B8\A4 \E0\B8\A6\00\E0\B8\8D \E0\B8\90\00\E0\B9\90 \E0\B9\91 \E0\B9\93\00\E2\B5\94 \E2\B5\99 \E2\B5\9B \E2\B5\9E \E2\B4\B5 \E2\B4\BC \E2\B4\B9 \E2\B5\8E\00\EA\97\8D \EA\98\96 \EA\98\99 \EA\98\9C \EA\96\9C \EA\96\9D \EA\94\85 \EA\95\A2\00\EA\97\8D \EA\98\96 \EA\98\99 \EA\97\9E \EA\94\85 \EA\95\A2 \EA\96\9C \EA\94\86\00\E4\BB\96 \E4\BB\AC \E4\BD\A0 \E4\BE\86 \E5\80\91 \E5\88\B0 \E5\92\8C \E5\9C\B0 \E5\AF\B9 \E5\B0\8D \E5\B0\B1 \E5\B8\AD \E6\88\91 \E6\97\B6 \E6\99\82 \E6\9C\83 \E6\9D\A5 \E7\82\BA \E8\83\BD \E8\88\B0 \E8\AA\AA \E8\AF\B4 \E8\BF\99 \E9\80\99 \E9\BD\8A || \E4\B8\BB \E4\BA\9B \E5\9B\A0 \E5\AE\83 \E6\83\B3 \E6\84\8F \E7\90\86 \E7\94\9F \E7\95\B6 \E7\9C\8B \E7\9D\80 \E7\BD\AE \E8\80\85 \E8\87\AA \E8\91\97 \E8\A3\A1 \E8\BF\87 \E8\BF\98 \E8\BF\9B \E9\80\B2 \E9\81\8E \E9\81\93 \E9\82\84 \E9\87\8C \E9\9D\A2\00", align 16
@af_blue_stringsets = hidden local_unnamed_addr constant [265 x %struct.AF_Blue_StringRec_] [%struct.AF_Blue_StringRec_ { i32 0, i16 1 }, %struct.AF_Blue_StringRec_ { i32 30, i16 0 }, %struct.AF_Blue_StringRec_ { i32 40, i16 9 }, %struct.AF_Blue_StringRec_ { i32 65, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 105, i16 1 }, %struct.AF_Blue_StringRec_ { i32 123, i16 0 }, %struct.AF_Blue_StringRec_ { i32 138, i16 4 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 141, i16 1 }, %struct.AF_Blue_StringRec_ { i32 165, i16 0 }, %struct.AF_Blue_StringRec_ { i32 189, i16 1 }, %struct.AF_Blue_StringRec_ { i32 210, i16 9 }, %struct.AF_Blue_StringRec_ { i32 234, i16 0 }, %struct.AF_Blue_StringRec_ { i32 258, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 282, i16 1 }, %struct.AF_Blue_StringRec_ { i32 302, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 312, i16 1 }, %struct.AF_Blue_StringRec_ { i32 344, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 408, i16 1 }, %struct.AF_Blue_StringRec_ { i32 436, i16 1 }, %struct.AF_Blue_StringRec_ { i32 376, i16 13 }, %struct.AF_Blue_StringRec_ { i32 376, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 468, i16 1 }, %struct.AF_Blue_StringRec_ { i32 476, i16 1 }, %struct.AF_Blue_StringRec_ { i32 488, i16 9 }, %struct.AF_Blue_StringRec_ { i32 504, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 795, i16 1 }, %struct.AF_Blue_StringRec_ { i32 820, i16 0 }, %struct.AF_Blue_StringRec_ { i32 845, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 532, i16 1 }, %struct.AF_Blue_StringRec_ { i32 564, i16 0 }, %struct.AF_Blue_StringRec_ { i32 596, i16 9 }, %struct.AF_Blue_StringRec_ { i32 628, i16 0 }, %struct.AF_Blue_StringRec_ { i32 660, i16 1 }, %struct.AF_Blue_StringRec_ { i32 688, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 720, i16 1 }, %struct.AF_Blue_StringRec_ { i32 760, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 910, i16 1 }, %struct.AF_Blue_StringRec_ { i32 910, i16 0 }, %struct.AF_Blue_StringRec_ { i32 942, i16 1 }, %struct.AF_Blue_StringRec_ { i32 974, i16 9 }, %struct.AF_Blue_StringRec_ { i32 974, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1006, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1022, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1054, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1086, i16 9 }, %struct.AF_Blue_StringRec_ { i32 1118, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1150, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1190, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1225, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1225, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1240, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1264, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1288, i16 9 }, %struct.AF_Blue_StringRec_ { i32 1288, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1312, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1453, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1485, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1421, i16 13 }, %struct.AF_Blue_StringRec_ { i32 1421, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1517, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1321, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1346, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1371, i16 9 }, %struct.AF_Blue_StringRec_ { i32 1396, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1525, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1557, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1589, i16 9 }, %struct.AF_Blue_StringRec_ { i32 1621, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1653, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1685, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1909, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1941, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1717, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1749, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1781, i16 9 }, %struct.AF_Blue_StringRec_ { i32 1813, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1845, i16 1 }, %struct.AF_Blue_StringRec_ { i32 1877, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 1973, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2005, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2037, i16 9 }, %struct.AF_Blue_StringRec_ { i32 2069, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2101, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2141, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2161, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2182, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2200, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2218, i16 9 }, %struct.AF_Blue_StringRec_ { i32 2218, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2242, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2266, i16 9 }, %struct.AF_Blue_StringRec_ { i32 2298, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2330, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2380, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2413, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2497, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2465, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2433, i16 13 }, %struct.AF_Blue_StringRec_ { i32 2529, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2561, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2581, i16 17 }, %struct.AF_Blue_StringRec_ { i32 2605, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2623, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2638, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2682, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2714, i16 9 }, %struct.AF_Blue_StringRec_ { i32 2738, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2758, i16 1 }, %struct.AF_Blue_StringRec_ { i32 2766, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2778, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2799, i16 9 }, %struct.AF_Blue_StringRec_ { i32 2823, i16 2 }, %struct.AF_Blue_StringRec_ { i32 2863, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2895, i16 0 }, %struct.AF_Blue_StringRec_ { i32 2929, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3016, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3024, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3032, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3064, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3096, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3112, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3124, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3148, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3164, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3180, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3194, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3210, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3226, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3236, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3256, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3276, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3296, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3296, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3332, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3352, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3383, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3412, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3438, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3438, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3463, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3474, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3506, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3538, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3582, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3614, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3649, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3689, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3719, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3749, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3779, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3794, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3819, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3863, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3867, i16 9 }, %struct.AF_Blue_StringRec_ { i32 3899, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3931, i16 1 }, %struct.AF_Blue_StringRec_ { i32 3959, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 3991, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4015, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4030, i16 9 }, %struct.AF_Blue_StringRec_ { i32 4039, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4051, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4051, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4075, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4090, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4110, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4150, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4180, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4195, i16 9 }, %struct.AF_Blue_StringRec_ { i32 4235, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4275, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4300, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4315, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4355, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4395, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4420, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4445, i16 4 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4448, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4480, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4500, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4510, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4535, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4545, i16 9 }, %struct.AF_Blue_StringRec_ { i32 4580, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4595, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4627, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4659, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4703, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4727, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4759, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4799, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4831, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4767, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4787, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4863, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4891, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4919, i16 9 }, %struct.AF_Blue_StringRec_ { i32 4943, i16 0 }, %struct.AF_Blue_StringRec_ { i32 4971, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4983, i16 1 }, %struct.AF_Blue_StringRec_ { i32 4995, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5011, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5019, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5031, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5031, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5063, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5095, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5127, i16 1 }, %struct.AF_Blue_StringRec_ { i32 5329, i16 0 }, %struct.AF_Blue_StringRec_ { i32 5531, i16 0 }], align 16
@af_cjk_writing_system_class = hidden constant %struct.AF_WritingSystemClassRec_ { i32 2, i64 30768, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)* bitcast (i32 (%struct.AF_CJKMetricsRec_*, %struct.FT_FaceRec_*)* @af_cjk_metrics_init to i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)*), void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)* bitcast (void (%struct.AF_CJKMetricsRec_*, %struct.AF_ScalerRec_*)* @af_cjk_metrics_scale to void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)*), void (%struct.AF_StyleMetricsRec_*)* null, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)* bitcast (void (%struct.AF_CJKMetricsRec_*, i64*, i64*)* @af_cjk_get_standard_widths to void (%struct.AF_StyleMetricsRec_*, i64*, i64*)*), i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_CJKMetricsRec_*)* @af_cjk_hints_init to i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)*), i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_CJKMetricsRec_*)* @af_cjk_hints_apply to i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)*) }, align 8
@af_dummy_writing_system_class = hidden constant %struct.AF_WritingSystemClassRec_ { i32 0, i64 72, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)* null, void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)* null, void (%struct.AF_StyleMetricsRec_*)* null, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)* null, i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)* @af_dummy_hints_init, i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* @af_dummy_hints_apply }, align 8
@.str = private unnamed_addr constant [10 x i8] c"\F0\9E\A4\8C \F0\9E\A4\AE\00", align 1
@af_adlm_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 0, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_adlm_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_adlm_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"\D9\84 \D8\AD \D9\80\00", align 1
@af_arab_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 1, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_arab_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([20 x %struct.AF_Script_UniRangeRec_], [20 x %struct.AF_Script_UniRangeRec_]* @af_arab_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"\D5\BD \D5\8D\00", align 1
@af_armn_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 2, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_armn_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_armn_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0) }, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"\F0\90\AC\9A\00", align 1
@af_avst_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 3, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_avst_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_avst_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0) }, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"\EA\9B\81 \EA\9B\AF\00", align 1
@af_bamu_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 4, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_bamu_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_bamu_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0) }, align 8
@.str.5 = private unnamed_addr constant [8 x i8] c"\E0\A7\A6 \E0\A7\AA\00", align 1
@af_beng_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 5, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_beng_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_beng_nonbase_uniranges, i32 0, i32 0), i8 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0) }, align 8
@.str.6 = private unnamed_addr constant [8 x i8] c"\E1\9D\8B \E1\9D\8F\00", align 1
@af_buhd_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 6, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_buhd_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_buhd_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0) }, align 8
@.str.7 = private unnamed_addr constant [15 x i8] c"\F0\91\84\A4 \F0\91\84\89 \F0\91\84\9B\00", align 1
@af_cakm_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 7, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_cakm_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_cakm_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i32 0, i32 0) }, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"\E1\91\8C \E1\93\9A\00", align 1
@af_cans_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 8, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_cans_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_cans_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0) }, align 8
@.str.9 = private unnamed_addr constant [10 x i8] c"\F0\90\8A\AB \F0\90\8B\89\00", align 1
@af_cari_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 9, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_cari_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_cari_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0) }, align 8
@.str.10 = private unnamed_addr constant [12 x i8] c"\E1\8E\A4 \E1\8F\85 \EA\AE\95\00", align 1
@af_cher_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 10, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_cher_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_cher_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0) }, align 8
@.str.11 = private unnamed_addr constant [8 x i8] c"\E2\B2\9E \E2\B2\9F\00", align 1
@af_copt_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 11, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_copt_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_copt_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0) }, align 8
@.str.12 = private unnamed_addr constant [10 x i8] c"\F0\90\A0\85 \F0\90\A0\A3\00", align 1
@af_cprt_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 12, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_cprt_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_cprt_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0) }, align 8
@.str.13 = private unnamed_addr constant [6 x i8] c"\D0\BE \D0\9E\00", align 1
@af_cyrl_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 13, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([6 x %struct.AF_Script_UniRangeRec_], [6 x %struct.AF_Script_UniRangeRec_]* @af_cyrl_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([5 x %struct.AF_Script_UniRangeRec_], [5 x %struct.AF_Script_UniRangeRec_]* @af_cyrl_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0) }, align 8
@.str.14 = private unnamed_addr constant [12 x i8] c"\E0\A4\A0 \E0\A4\B5 \E0\A4\9F\00", align 1
@af_deva_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 14, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_deva_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([9 x %struct.AF_Script_UniRangeRec_], [9 x %struct.AF_Script_UniRangeRec_]* @af_deva_nonbase_uniranges, i32 0, i32 0), i8 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0) }, align 8
@.str.15 = private unnamed_addr constant [10 x i8] c"\F0\90\90\84 \F0\90\90\AC\00", align 1
@af_dsrt_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 15, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_dsrt_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_dsrt_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0) }, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"\E1\8B\90\00", align 1
@af_ethi_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 16, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([5 x %struct.AF_Script_UniRangeRec_], [5 x %struct.AF_Script_UniRangeRec_]* @af_ethi_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_ethi_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0) }, align 8
@.str.17 = private unnamed_addr constant [16 x i8] c"\E1\83\98 \E1\83\94 \E1\83\90 \E1\B2\BF\00", align 1
@af_geor_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 17, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_geor_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_geor_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0) }, align 8
@.str.18 = private unnamed_addr constant [12 x i8] c"\E1\82\B6 \E1\82\B1 \E2\B4\99\00", align 1
@af_geok_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 18, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_geok_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_geok_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0) }, align 8
@.str.19 = private unnamed_addr constant [8 x i8] c"\E2\B0\95 \E2\B1\85\00", align 1
@af_glag_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 19, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_glag_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_glag_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0) }, align 8
@.str.20 = private unnamed_addr constant [15 x i8] c"\F0\90\8C\B4 \F0\90\8C\BE \F0\90\8D\83\00", align 1
@af_goth_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 20, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_goth_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_goth_nonbase_uniranges, i32 0, i32 0), i8 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0) }, align 8
@.str.21 = private unnamed_addr constant [6 x i8] c"\CE\BF \CE\9F\00", align 1
@af_grek_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 21, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_grek_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([8 x %struct.AF_Script_UniRangeRec_], [8 x %struct.AF_Script_UniRangeRec_]* @af_grek_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0) }, align 8
@.str.22 = private unnamed_addr constant [8 x i8] c"\E0\AA\9F \E0\AB\A6\00", align 1
@af_gujr_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 22, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_gujr_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_gujr_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0) }, align 8
@.str.23 = private unnamed_addr constant [12 x i8] c"\E0\A8\A0 \E0\A8\B0 \E0\A9\A6\00", align 1
@af_guru_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 23, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_guru_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([6 x %struct.AF_Script_UniRangeRec_], [6 x %struct.AF_Script_UniRangeRec_]* @af_guru_nonbase_uniranges, i32 0, i32 0), i8 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0) }, align 8
@.str.24 = private unnamed_addr constant [3 x i8] c"\D7\9D\00", align 1
@af_hebr_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 24, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_hebr_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([6 x %struct.AF_Script_UniRangeRec_], [6 x %struct.AF_Script_UniRangeRec_]* @af_hebr_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0) }, align 8
@.str.25 = private unnamed_addr constant [8 x i8] c"\EA\A4\8D \EA\A4\80\00", align 1
@af_kali_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 25, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_kali_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_kali_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0) }, align 8
@.str.26 = private unnamed_addr constant [4 x i8] c"\E1\9F\A0\00", align 1
@af_khmr_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 26, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_khmr_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([5 x %struct.AF_Script_UniRangeRec_], [5 x %struct.AF_Script_UniRangeRec_]* @af_khmr_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0) }, align 8
@.str.27 = private unnamed_addr constant [8 x i8] c"\E1\A7\A1 \E1\A7\AA\00", align 1
@af_khms_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 27, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_khms_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_khms_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0) }, align 8
@.str.28 = private unnamed_addr constant [8 x i8] c"\E0\B3\A6 \E0\B2\AC\00", align 1
@af_knda_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 28, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_knda_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_knda_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0) }, align 8
@.str.29 = private unnamed_addr constant [4 x i8] c"\E0\BB\90\00", align 1
@af_lao_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 29, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_lao_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_lao_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0) }, align 8
@.str.30 = private unnamed_addr constant [6 x i8] c"o O 0\00", align 1
@af_latn_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 30, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([33 x %struct.AF_Script_UniRangeRec_], [33 x %struct.AF_Script_UniRangeRec_]* @af_latn_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([17 x %struct.AF_Script_UniRangeRec_], [17 x %struct.AF_Script_UniRangeRec_]* @af_latn_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0) }, align 8
@.str.31 = private unnamed_addr constant [8 x i8] c"\E2\82\92 \E2\82\80\00", align 1
@af_latb_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 31, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_latb_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_latb_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0) }, align 8
@.str.32 = private unnamed_addr constant [12 x i8] c"\E1\B5\92 \E1\B4\BC \E2\81\B0\00", align 1
@af_latp_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 32, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([14 x %struct.AF_Script_UniRangeRec_], [14 x %struct.AF_Script_UniRangeRec_]* @af_latp_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_latp_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0) }, align 8
@.str.33 = private unnamed_addr constant [4 x i8] c"\EA\93\B3\00", align 1
@af_lisu_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 33, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_lisu_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_lisu_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0) }, align 8
@.str.34 = private unnamed_addr constant [8 x i8] c"\E0\B4\A0 \E0\B4\B1\00", align 1
@af_mlym_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 34, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_mlym_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([5 x %struct.AF_Script_UniRangeRec_], [5 x %struct.AF_Script_UniRangeRec_]* @af_mlym_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0) }, align 8
@.str.35 = private unnamed_addr constant [15 x i8] c"\F0\96\B9\A1 \F0\96\B9\9B \F0\96\B9\AF\00", align 1
@af_medf_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 35, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_medf_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_medf_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, align 8
@.str.36 = private unnamed_addr constant [8 x i8] c"\E1\A1\82 \E1\A0\AA\00", align 1
@af_mong_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 36, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_mong_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_mong_nonbase_uniranges, i32 0, i32 0), i8 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0) }, align 8
@.str.37 = private unnamed_addr constant [12 x i8] c"\E1\80\9D \E1\80\84 \E1\80\82\00", align 1
@af_mymr_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 37, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_mymr_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([13 x %struct.AF_Script_UniRangeRec_], [13 x %struct.AF_Script_UniRangeRec_]* @af_mymr_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0) }, align 8
@.str.38 = private unnamed_addr constant [6 x i8] c"\DF\8B \DF\80\00", align 1
@af_nkoo_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 38, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_nkoo_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_nkoo_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0) }, align 8
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@af_none_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 39, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_none_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_none_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0) }, align 8
@.str.40 = private unnamed_addr constant [4 x i8] c"\E1\B1\9B\00", align 1
@af_olck_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 40, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_olck_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_olck_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0) }, align 8
@.str.41 = private unnamed_addr constant [5 x i8] c"\F0\90\B0\97\00", align 1
@af_orkh_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 41, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_orkh_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_orkh_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, align 8
@.str.42 = private unnamed_addr constant [10 x i8] c"\F0\90\93\82 \F0\90\93\AA\00", align 1
@af_osge_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 42, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_osge_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_osge_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0) }, align 8
@.str.43 = private unnamed_addr constant [10 x i8] c"\F0\90\92\86 \F0\90\92\A0\00", align 1
@af_osma_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 43, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_osma_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_osma_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0) }, align 8
@.str.44 = private unnamed_addr constant [5 x i8] c"\F0\90\B4\B0\00", align 1
@af_rohg_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 44, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_rohg_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_rohg_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0) }, align 8
@.str.45 = private unnamed_addr constant [8 x i8] c"\EA\A2\9D \EA\A3\90\00", align 1
@af_saur_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 45, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_saur_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_saur_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0) }, align 8
@.str.46 = private unnamed_addr constant [5 x i8] c"\F0\90\91\B4\00", align 1
@af_shaw_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 46, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_shaw_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_shaw_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0) }, align 8
@.str.47 = private unnamed_addr constant [4 x i8] c"\E0\B6\A7\00", align 1
@af_sinh_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 47, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_sinh_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_sinh_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0) }, align 8
@.str.48 = private unnamed_addr constant [4 x i8] c"\E1\AE\B0\00", align 1
@af_sund_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 48, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_sund_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_sund_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0) }, align 8
@.str.49 = private unnamed_addr constant [4 x i8] c"\E0\AF\A6\00", align 1
@af_taml_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 49, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_taml_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_taml_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0) }, align 8
@.str.50 = private unnamed_addr constant [8 x i8] c"\EA\AA\92 \EA\AA\AB\00", align 1
@af_tavt_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 50, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_tavt_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([6 x %struct.AF_Script_UniRangeRec_], [6 x %struct.AF_Script_UniRangeRec_]* @af_tavt_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0) }, align 8
@.str.51 = private unnamed_addr constant [8 x i8] c"\E0\B1\A6 \E0\B1\A7\00", align 1
@af_telu_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 51, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_telu_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([6 x %struct.AF_Script_UniRangeRec_], [6 x %struct.AF_Script_UniRangeRec_]* @af_telu_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0) }, align 8
@.str.52 = private unnamed_addr constant [4 x i8] c"\E2\B5\94\00", align 1
@af_tfng_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 52, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_tfng_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_tfng_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0) }, align 8
@.str.53 = private unnamed_addr constant [12 x i8] c"\E0\B8\B2 \E0\B9\85 \E0\B9\90\00", align 1
@af_thai_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 53, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_thai_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_thai_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0) }, align 8
@.str.54 = private unnamed_addr constant [12 x i8] c"\EA\98\93 \EA\96\9C \EA\96\B4\00", align 1
@af_vaii_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 54, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_vaii_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([1 x %struct.AF_Script_UniRangeRec_], [1 x %struct.AF_Script_UniRangeRec_]* @af_vaii_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i32 0, i32 0) }, align 8
@.str.55 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@af_limb_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 55, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_limb_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([4 x %struct.AF_Script_UniRangeRec_], [4 x %struct.AF_Script_UniRangeRec_]* @af_limb_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0) }, align 8
@af_orya_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 56, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_orya_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([7 x %struct.AF_Script_UniRangeRec_], [7 x %struct.AF_Script_UniRangeRec_]* @af_orya_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0) }, align 8
@af_sylo_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 57, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_sylo_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([5 x %struct.AF_Script_UniRangeRec_], [5 x %struct.AF_Script_UniRangeRec_]* @af_sylo_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0) }, align 8
@af_tibt_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 58, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([2 x %struct.AF_Script_UniRangeRec_], [2 x %struct.AF_Script_UniRangeRec_]* @af_tibt_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([10 x %struct.AF_Script_UniRangeRec_], [10 x %struct.AF_Script_UniRangeRec_]* @af_tibt_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i32 0, i32 0) }, align 8
@.str.56 = private unnamed_addr constant [8 x i8] c"\E7\94\B0 \E5\9B\97\00", align 1
@af_hani_script_class = hidden constant %struct.AF_ScriptClassRec_ { i32 59, %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([34 x %struct.AF_Script_UniRangeRec_], [34 x %struct.AF_Script_UniRangeRec_]* @af_hani_uniranges, i32 0, i32 0), %struct.AF_Script_UniRangeRec_* getelementptr inbounds ([3 x %struct.AF_Script_UniRangeRec_], [3 x %struct.AF_Script_UniRangeRec_]* @af_hani_nonbase_uniranges, i32 0, i32 0), i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0) }, align 8
@af_adlm_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 0, i32 1, i32 0, i32 0, i32 10 }, align 4
@af_arab_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 1, i32 1, i32 1, i32 5, i32 10 }, align 4
@af_armn_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 2, i32 1, i32 2, i32 9, i32 10 }, align 4
@af_avst_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 3, i32 1, i32 3, i32 16, i32 10 }, align 4
@af_bamu_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 4, i32 1, i32 4, i32 19, i32 10 }, align 4
@af_beng_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 5, i32 1, i32 5, i32 22, i32 10 }, align 4
@af_buhd_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 6, i32 1, i32 6, i32 27, i32 10 }, align 4
@af_cakm_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 7, i32 1, i32 7, i32 32, i32 10 }, align 4
@af_cans_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 8, i32 1, i32 8, i32 36, i32 10 }, align 4
@af_cari_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 9, i32 1, i32 9, i32 43, i32 10 }, align 4
@af_cher_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 10, i32 1, i32 10, i32 46, i32 10 }, align 4
@af_copt_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 11, i32 1, i32 11, i32 53, i32 10 }, align 4
@af_cprt_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 12, i32 1, i32 12, i32 58, i32 10 }, align 4
@af_cyrl_c2cp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 13, i32 1, i32 13, i32 63, i32 0 }, align 4
@af_cyrl_c2sc_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 14, i32 1, i32 13, i32 63, i32 1 }, align 4
@af_cyrl_ordn_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 15, i32 1, i32 13, i32 63, i32 2 }, align 4
@af_cyrl_pcap_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 16, i32 1, i32 13, i32 63, i32 3 }, align 4
@af_cyrl_sinf_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 17, i32 1, i32 13, i32 63, i32 5 }, align 4
@af_cyrl_smcp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 18, i32 1, i32 13, i32 63, i32 6 }, align 4
@af_cyrl_subs_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 19, i32 1, i32 13, i32 63, i32 7 }, align 4
@af_cyrl_sups_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 20, i32 1, i32 13, i32 63, i32 8 }, align 4
@af_cyrl_titl_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 21, i32 1, i32 13, i32 63, i32 9 }, align 4
@af_cyrl_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 22, i32 1, i32 13, i32 63, i32 10 }, align 4
@af_deva_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 23, i32 1, i32 14, i32 69, i32 10 }, align 4
@af_dsrt_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 24, i32 1, i32 15, i32 75, i32 10 }, align 4
@af_ethi_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 25, i32 1, i32 16, i32 80, i32 10 }, align 4
@af_geor_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 26, i32 1, i32 17, i32 83, i32 10 }, align 4
@af_geok_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 27, i32 1, i32 18, i32 90, i32 10 }, align 4
@af_glag_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 28, i32 1, i32 19, i32 97, i32 10 }, align 4
@af_goth_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 29, i32 1, i32 20, i32 102, i32 10 }, align 4
@af_grek_c2cp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 30, i32 1, i32 21, i32 105, i32 0 }, align 4
@af_grek_c2sc_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 31, i32 1, i32 21, i32 105, i32 1 }, align 4
@af_grek_ordn_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 32, i32 1, i32 21, i32 105, i32 2 }, align 4
@af_grek_pcap_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 33, i32 1, i32 21, i32 105, i32 3 }, align 4
@af_grek_sinf_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 34, i32 1, i32 21, i32 105, i32 5 }, align 4
@af_grek_smcp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 35, i32 1, i32 21, i32 105, i32 6 }, align 4
@af_grek_subs_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 36, i32 1, i32 21, i32 105, i32 7 }, align 4
@af_grek_sups_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 37, i32 1, i32 21, i32 105, i32 8 }, align 4
@af_grek_titl_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 38, i32 1, i32 21, i32 105, i32 9 }, align 4
@af_grek_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 39, i32 1, i32 21, i32 105, i32 10 }, align 4
@af_gujr_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 40, i32 1, i32 22, i32 112, i32 10 }, align 4
@af_guru_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 41, i32 1, i32 23, i32 118, i32 10 }, align 4
@af_hebr_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 42, i32 1, i32 24, i32 124, i32 10 }, align 4
@af_kali_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 43, i32 1, i32 25, i32 131, i32 10 }, align 4
@af_khmr_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 44, i32 1, i32 26, i32 137, i32 10 }, align 4
@af_khms_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 45, i32 1, i32 27, i32 143, i32 10 }, align 4
@af_knda_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 46, i32 1, i32 28, i32 128, i32 10 }, align 4
@af_lao_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 47, i32 1, i32 29, i32 146, i32 10 }, align 4
@af_latn_c2cp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 48, i32 1, i32 30, i32 152, i32 0 }, align 4
@af_latn_c2sc_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 49, i32 1, i32 30, i32 152, i32 1 }, align 4
@af_latn_ordn_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 50, i32 1, i32 30, i32 152, i32 2 }, align 4
@af_latn_pcap_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 51, i32 1, i32 30, i32 152, i32 3 }, align 4
@af_latn_sinf_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 52, i32 1, i32 30, i32 152, i32 5 }, align 4
@af_latn_smcp_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 53, i32 1, i32 30, i32 152, i32 6 }, align 4
@af_latn_subs_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 54, i32 1, i32 30, i32 152, i32 7 }, align 4
@af_latn_sups_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 55, i32 1, i32 30, i32 152, i32 8 }, align 4
@af_latn_titl_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 56, i32 1, i32 30, i32 152, i32 9 }, align 4
@af_latn_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 57, i32 1, i32 30, i32 152, i32 10 }, align 4
@af_latb_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 58, i32 1, i32 31, i32 159, i32 10 }, align 4
@af_latp_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 59, i32 1, i32 32, i32 166, i32 10 }, align 4
@af_lisu_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 60, i32 1, i32 33, i32 173, i32 10 }, align 4
@af_mlym_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 61, i32 1, i32 34, i32 176, i32 10 }, align 4
@af_medf_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 62, i32 1, i32 35, i32 179, i32 10 }, align 4
@af_mong_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 63, i32 1, i32 36, i32 187, i32 10 }, align 4
@af_mymr_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 64, i32 1, i32 37, i32 190, i32 10 }, align 4
@af_nkoo_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 65, i32 1, i32 38, i32 195, i32 10 }, align 4
@af_none_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 66, i32 0, i32 39, i32 200, i32 10 }, align 4
@af_olck_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 67, i32 1, i32 40, i32 201, i32 10 }, align 4
@af_orkh_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 68, i32 1, i32 41, i32 204, i32 10 }, align 4
@af_osge_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 69, i32 1, i32 42, i32 207, i32 10 }, align 4
@af_osma_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 70, i32 1, i32 43, i32 215, i32 10 }, align 4
@af_rohg_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 71, i32 1, i32 44, i32 218, i32 10 }, align 4
@af_saur_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 72, i32 1, i32 45, i32 222, i32 10 }, align 4
@af_shaw_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 73, i32 1, i32 46, i32 225, i32 10 }, align 4
@af_sinh_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 74, i32 1, i32 47, i32 231, i32 10 }, align 4
@af_sund_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 75, i32 1, i32 48, i32 235, i32 10 }, align 4
@af_taml_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 76, i32 1, i32 49, i32 239, i32 10 }, align 4
@af_tavt_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 77, i32 1, i32 50, i32 242, i32 10 }, align 4
@af_telu_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 78, i32 1, i32 51, i32 245, i32 10 }, align 4
@af_tfng_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 79, i32 1, i32 52, i32 256, i32 10 }, align 4
@af_thai_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 80, i32 1, i32 53, i32 248, i32 10 }, align 4
@af_vaii_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 81, i32 1, i32 54, i32 259, i32 10 }, align 4
@af_limb_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 82, i32 3, i32 55, i32 0, i32 10 }, align 4
@af_orya_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 83, i32 3, i32 56, i32 0, i32 10 }, align 4
@af_sylo_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 84, i32 3, i32 57, i32 0, i32 10 }, align 4
@af_tibt_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 85, i32 3, i32 58, i32 0, i32 10 }, align 4
@af_hani_dflt_style_class = hidden constant %struct.AF_StyleClassRec_ { i32 86, i32 2, i32 59, i32 262, i32 10 }, align 4
@af_latin_writing_system_class = hidden constant %struct.AF_WritingSystemClassRec_ { i32 1, i64 39280, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)* bitcast (i32 (%struct.AF_LatinMetricsRec_*, %struct.FT_FaceRec_*)* @af_latin_metrics_init to i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)*), void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)* bitcast (void (%struct.AF_LatinMetricsRec_*, %struct.AF_ScalerRec_*)* @af_latin_metrics_scale to void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)*), void (%struct.AF_StyleMetricsRec_*)* null, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)* bitcast (void (%struct.AF_LatinMetricsRec_*, i64*, i64*)* @af_latin_get_standard_widths to void (%struct.AF_StyleMetricsRec_*, i64*, i64*)*), i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_LatinMetricsRec_*)* @af_latin_hints_init to i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)*), i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_LatinMetricsRec_*)* @af_latin_hints_apply to i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)*) }, align 8
@af_indic_writing_system_class = hidden constant %struct.AF_WritingSystemClassRec_ { i32 3, i64 30768, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)* bitcast (i32 (%struct.AF_CJKMetricsRec_*, %struct.FT_FaceRec_*)* @af_indic_metrics_init to i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)*), void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)* bitcast (void (%struct.AF_CJKMetricsRec_*, %struct.AF_ScalerRec_*)* @af_indic_metrics_scale to void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)*), void (%struct.AF_StyleMetricsRec_*)* null, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)* bitcast (void (%struct.AF_CJKMetricsRec_*, i64*, i64*)* @af_indic_get_standard_widths to void (%struct.AF_StyleMetricsRec_*, i64*, i64*)*), i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_CJKMetricsRec_*)* @af_indic_hints_init to i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)*), i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* bitcast (i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_CJKMetricsRec_*)* @af_indic_hints_apply to i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)*) }, align 8
@af_writing_system_classes = hidden local_unnamed_addr constant [5 x %struct.AF_WritingSystemClassRec_*] [%struct.AF_WritingSystemClassRec_* @af_dummy_writing_system_class, %struct.AF_WritingSystemClassRec_* @af_latin_writing_system_class, %struct.AF_WritingSystemClassRec_* @af_cjk_writing_system_class, %struct.AF_WritingSystemClassRec_* @af_indic_writing_system_class, %struct.AF_WritingSystemClassRec_* null], align 16
@af_script_classes = hidden local_unnamed_addr constant [61 x %struct.AF_ScriptClassRec_*] [%struct.AF_ScriptClassRec_* @af_adlm_script_class, %struct.AF_ScriptClassRec_* @af_arab_script_class, %struct.AF_ScriptClassRec_* @af_armn_script_class, %struct.AF_ScriptClassRec_* @af_avst_script_class, %struct.AF_ScriptClassRec_* @af_bamu_script_class, %struct.AF_ScriptClassRec_* @af_beng_script_class, %struct.AF_ScriptClassRec_* @af_buhd_script_class, %struct.AF_ScriptClassRec_* @af_cakm_script_class, %struct.AF_ScriptClassRec_* @af_cans_script_class, %struct.AF_ScriptClassRec_* @af_cari_script_class, %struct.AF_ScriptClassRec_* @af_cher_script_class, %struct.AF_ScriptClassRec_* @af_copt_script_class, %struct.AF_ScriptClassRec_* @af_cprt_script_class, %struct.AF_ScriptClassRec_* @af_cyrl_script_class, %struct.AF_ScriptClassRec_* @af_deva_script_class, %struct.AF_ScriptClassRec_* @af_dsrt_script_class, %struct.AF_ScriptClassRec_* @af_ethi_script_class, %struct.AF_ScriptClassRec_* @af_geor_script_class, %struct.AF_ScriptClassRec_* @af_geok_script_class, %struct.AF_ScriptClassRec_* @af_glag_script_class, %struct.AF_ScriptClassRec_* @af_goth_script_class, %struct.AF_ScriptClassRec_* @af_grek_script_class, %struct.AF_ScriptClassRec_* @af_gujr_script_class, %struct.AF_ScriptClassRec_* @af_guru_script_class, %struct.AF_ScriptClassRec_* @af_hebr_script_class, %struct.AF_ScriptClassRec_* @af_kali_script_class, %struct.AF_ScriptClassRec_* @af_khmr_script_class, %struct.AF_ScriptClassRec_* @af_khms_script_class, %struct.AF_ScriptClassRec_* @af_knda_script_class, %struct.AF_ScriptClassRec_* @af_lao_script_class, %struct.AF_ScriptClassRec_* @af_latn_script_class, %struct.AF_ScriptClassRec_* @af_latb_script_class, %struct.AF_ScriptClassRec_* @af_latp_script_class, %struct.AF_ScriptClassRec_* @af_lisu_script_class, %struct.AF_ScriptClassRec_* @af_mlym_script_class, %struct.AF_ScriptClassRec_* @af_medf_script_class, %struct.AF_ScriptClassRec_* @af_mong_script_class, %struct.AF_ScriptClassRec_* @af_mymr_script_class, %struct.AF_ScriptClassRec_* @af_nkoo_script_class, %struct.AF_ScriptClassRec_* @af_none_script_class, %struct.AF_ScriptClassRec_* @af_olck_script_class, %struct.AF_ScriptClassRec_* @af_orkh_script_class, %struct.AF_ScriptClassRec_* @af_osge_script_class, %struct.AF_ScriptClassRec_* @af_osma_script_class, %struct.AF_ScriptClassRec_* @af_rohg_script_class, %struct.AF_ScriptClassRec_* @af_saur_script_class, %struct.AF_ScriptClassRec_* @af_shaw_script_class, %struct.AF_ScriptClassRec_* @af_sinh_script_class, %struct.AF_ScriptClassRec_* @af_sund_script_class, %struct.AF_ScriptClassRec_* @af_taml_script_class, %struct.AF_ScriptClassRec_* @af_tavt_script_class, %struct.AF_ScriptClassRec_* @af_telu_script_class, %struct.AF_ScriptClassRec_* @af_tfng_script_class, %struct.AF_ScriptClassRec_* @af_thai_script_class, %struct.AF_ScriptClassRec_* @af_vaii_script_class, %struct.AF_ScriptClassRec_* @af_limb_script_class, %struct.AF_ScriptClassRec_* @af_orya_script_class, %struct.AF_ScriptClassRec_* @af_sylo_script_class, %struct.AF_ScriptClassRec_* @af_tibt_script_class, %struct.AF_ScriptClassRec_* @af_hani_script_class, %struct.AF_ScriptClassRec_* null], align 16
@af_style_classes = hidden local_unnamed_addr constant [88 x %struct.AF_StyleClassRec_*] [%struct.AF_StyleClassRec_* @af_adlm_dflt_style_class, %struct.AF_StyleClassRec_* @af_arab_dflt_style_class, %struct.AF_StyleClassRec_* @af_armn_dflt_style_class, %struct.AF_StyleClassRec_* @af_avst_dflt_style_class, %struct.AF_StyleClassRec_* @af_bamu_dflt_style_class, %struct.AF_StyleClassRec_* @af_beng_dflt_style_class, %struct.AF_StyleClassRec_* @af_buhd_dflt_style_class, %struct.AF_StyleClassRec_* @af_cakm_dflt_style_class, %struct.AF_StyleClassRec_* @af_cans_dflt_style_class, %struct.AF_StyleClassRec_* @af_cari_dflt_style_class, %struct.AF_StyleClassRec_* @af_cher_dflt_style_class, %struct.AF_StyleClassRec_* @af_copt_dflt_style_class, %struct.AF_StyleClassRec_* @af_cprt_dflt_style_class, %struct.AF_StyleClassRec_* @af_cyrl_c2cp_style_class, %struct.AF_StyleClassRec_* @af_cyrl_c2sc_style_class, %struct.AF_StyleClassRec_* @af_cyrl_ordn_style_class, %struct.AF_StyleClassRec_* @af_cyrl_pcap_style_class, %struct.AF_StyleClassRec_* @af_cyrl_sinf_style_class, %struct.AF_StyleClassRec_* @af_cyrl_smcp_style_class, %struct.AF_StyleClassRec_* @af_cyrl_subs_style_class, %struct.AF_StyleClassRec_* @af_cyrl_sups_style_class, %struct.AF_StyleClassRec_* @af_cyrl_titl_style_class, %struct.AF_StyleClassRec_* @af_cyrl_dflt_style_class, %struct.AF_StyleClassRec_* @af_deva_dflt_style_class, %struct.AF_StyleClassRec_* @af_dsrt_dflt_style_class, %struct.AF_StyleClassRec_* @af_ethi_dflt_style_class, %struct.AF_StyleClassRec_* @af_geor_dflt_style_class, %struct.AF_StyleClassRec_* @af_geok_dflt_style_class, %struct.AF_StyleClassRec_* @af_glag_dflt_style_class, %struct.AF_StyleClassRec_* @af_goth_dflt_style_class, %struct.AF_StyleClassRec_* @af_grek_c2cp_style_class, %struct.AF_StyleClassRec_* @af_grek_c2sc_style_class, %struct.AF_StyleClassRec_* @af_grek_ordn_style_class, %struct.AF_StyleClassRec_* @af_grek_pcap_style_class, %struct.AF_StyleClassRec_* @af_grek_sinf_style_class, %struct.AF_StyleClassRec_* @af_grek_smcp_style_class, %struct.AF_StyleClassRec_* @af_grek_subs_style_class, %struct.AF_StyleClassRec_* @af_grek_sups_style_class, %struct.AF_StyleClassRec_* @af_grek_titl_style_class, %struct.AF_StyleClassRec_* @af_grek_dflt_style_class, %struct.AF_StyleClassRec_* @af_gujr_dflt_style_class, %struct.AF_StyleClassRec_* @af_guru_dflt_style_class, %struct.AF_StyleClassRec_* @af_hebr_dflt_style_class, %struct.AF_StyleClassRec_* @af_kali_dflt_style_class, %struct.AF_StyleClassRec_* @af_khmr_dflt_style_class, %struct.AF_StyleClassRec_* @af_khms_dflt_style_class, %struct.AF_StyleClassRec_* @af_knda_dflt_style_class, %struct.AF_StyleClassRec_* @af_lao_dflt_style_class, %struct.AF_StyleClassRec_* @af_latn_c2cp_style_class, %struct.AF_StyleClassRec_* @af_latn_c2sc_style_class, %struct.AF_StyleClassRec_* @af_latn_ordn_style_class, %struct.AF_StyleClassRec_* @af_latn_pcap_style_class, %struct.AF_StyleClassRec_* @af_latn_sinf_style_class, %struct.AF_StyleClassRec_* @af_latn_smcp_style_class, %struct.AF_StyleClassRec_* @af_latn_subs_style_class, %struct.AF_StyleClassRec_* @af_latn_sups_style_class, %struct.AF_StyleClassRec_* @af_latn_titl_style_class, %struct.AF_StyleClassRec_* @af_latn_dflt_style_class, %struct.AF_StyleClassRec_* @af_latb_dflt_style_class, %struct.AF_StyleClassRec_* @af_latp_dflt_style_class, %struct.AF_StyleClassRec_* @af_lisu_dflt_style_class, %struct.AF_StyleClassRec_* @af_mlym_dflt_style_class, %struct.AF_StyleClassRec_* @af_medf_dflt_style_class, %struct.AF_StyleClassRec_* @af_mong_dflt_style_class, %struct.AF_StyleClassRec_* @af_mymr_dflt_style_class, %struct.AF_StyleClassRec_* @af_nkoo_dflt_style_class, %struct.AF_StyleClassRec_* @af_none_dflt_style_class, %struct.AF_StyleClassRec_* @af_olck_dflt_style_class, %struct.AF_StyleClassRec_* @af_orkh_dflt_style_class, %struct.AF_StyleClassRec_* @af_osge_dflt_style_class, %struct.AF_StyleClassRec_* @af_osma_dflt_style_class, %struct.AF_StyleClassRec_* @af_rohg_dflt_style_class, %struct.AF_StyleClassRec_* @af_saur_dflt_style_class, %struct.AF_StyleClassRec_* @af_shaw_dflt_style_class, %struct.AF_StyleClassRec_* @af_sinh_dflt_style_class, %struct.AF_StyleClassRec_* @af_sund_dflt_style_class, %struct.AF_StyleClassRec_* @af_taml_dflt_style_class, %struct.AF_StyleClassRec_* @af_tavt_dflt_style_class, %struct.AF_StyleClassRec_* @af_telu_dflt_style_class, %struct.AF_StyleClassRec_* @af_tfng_dflt_style_class, %struct.AF_StyleClassRec_* @af_thai_dflt_style_class, %struct.AF_StyleClassRec_* @af_vaii_dflt_style_class, %struct.AF_StyleClassRec_* @af_limb_dflt_style_class, %struct.AF_StyleClassRec_* @af_orya_dflt_style_class, %struct.AF_StyleClassRec_* @af_sylo_dflt_style_class, %struct.AF_StyleClassRec_* @af_tibt_dflt_style_class, %struct.AF_StyleClassRec_* @af_hani_dflt_style_class, %struct.AF_StyleClassRec_* null], align 16
@af_autofitter_interface = hidden constant %struct.FT_AutoHinter_InterfaceRec_ { void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*)* null, void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*, i8**, i64*)* null, void (%struct.FT_AutoHinterRec_*, i8*)* null, i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* bitcast (i32 (%struct.AF_ModuleRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* @af_autofitter_load_glyph to i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*) }, align 8
@.str.57 = private unnamed_addr constant [11 x i8] c"autofitter\00", align 1
@autofit_module_class = hidden local_unnamed_addr constant %struct.FT_Module_Class_ { i64 4, i64 72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i32 0, i32 0), i64 65536, i64 131072, i8* bitcast (%struct.FT_AutoHinter_InterfaceRec_* @af_autofitter_interface to i8*), i32 (%struct.FT_ModuleRec_*)* @af_autofitter_init, void (%struct.FT_ModuleRec_*)* @af_autofitter_done, i8* (%struct.FT_ModuleRec_*, i8*)* @af_get_interface }, align 8
@af_adlm_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 125184, i32 125279 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_adlm_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 121156, i32 125258 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_arab_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1536, i32 1791 }, %struct.AF_Script_UniRangeRec_ { i32 1872, i32 2047 }, %struct.AF_Script_UniRangeRec_ { i32 2208, i32 2303 }, %struct.AF_Script_UniRangeRec_ { i32 64336, i32 65023 }, %struct.AF_Script_UniRangeRec_ { i32 65136, i32 65279 }, %struct.AF_Script_UniRangeRec_ { i32 126464, i32 126719 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_arab_nonbase_uniranges = hidden constant [20 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1536, i32 1541 }, %struct.AF_Script_UniRangeRec_ { i32 1552, i32 1562 }, %struct.AF_Script_UniRangeRec_ { i32 1611, i32 1631 }, %struct.AF_Script_UniRangeRec_ { i32 1648, i32 1648 }, %struct.AF_Script_UniRangeRec_ { i32 1750, i32 1756 }, %struct.AF_Script_UniRangeRec_ { i32 1759, i32 1764 }, %struct.AF_Script_UniRangeRec_ { i32 1767, i32 1768 }, %struct.AF_Script_UniRangeRec_ { i32 1770, i32 1773 }, %struct.AF_Script_UniRangeRec_ { i32 2260, i32 2273 }, %struct.AF_Script_UniRangeRec_ { i32 2259, i32 2303 }, %struct.AF_Script_UniRangeRec_ { i32 64434, i32 64449 }, %struct.AF_Script_UniRangeRec_ { i32 65136, i32 65136 }, %struct.AF_Script_UniRangeRec_ { i32 65138, i32 65138 }, %struct.AF_Script_UniRangeRec_ { i32 65140, i32 65140 }, %struct.AF_Script_UniRangeRec_ { i32 65142, i32 65142 }, %struct.AF_Script_UniRangeRec_ { i32 65144, i32 65144 }, %struct.AF_Script_UniRangeRec_ { i32 65146, i32 65146 }, %struct.AF_Script_UniRangeRec_ { i32 65148, i32 65148 }, %struct.AF_Script_UniRangeRec_ { i32 65150, i32 65150 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_armn_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1328, i32 1423 }, %struct.AF_Script_UniRangeRec_ { i32 64275, i32 64279 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_armn_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1369, i32 1375 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_avst_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 68352, i32 68415 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_avst_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 68409, i32 68415 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_bamu_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 42656, i32 42751 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_bamu_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 42736, i32 42737 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_beng_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2432, i32 2559 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_beng_nonbase_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2433, i32 2433 }, %struct.AF_Script_UniRangeRec_ { i32 2492, i32 2492 }, %struct.AF_Script_UniRangeRec_ { i32 2497, i32 2500 }, %struct.AF_Script_UniRangeRec_ { i32 2509, i32 2509 }, %struct.AF_Script_UniRangeRec_ { i32 2530, i32 2531 }, %struct.AF_Script_UniRangeRec_ { i32 2558, i32 2558 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_buhd_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 5952, i32 5983 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_buhd_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 5970, i32 5971 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cakm_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 69888, i32 69967 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cakm_nonbase_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 69888, i32 69890 }, %struct.AF_Script_UniRangeRec_ { i32 69927, i32 69940 }, %struct.AF_Script_UniRangeRec_ { i32 69958, i32 69958 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cans_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 5120, i32 5759 }, %struct.AF_Script_UniRangeRec_ { i32 6320, i32 6399 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cans_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_cari_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66208, i32 66271 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cari_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_cher_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 5024, i32 5119 }, %struct.AF_Script_UniRangeRec_ { i32 43888, i32 43967 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cher_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_copt_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 11392, i32 11519 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_copt_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 11503, i32 11505 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cprt_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 67584, i32 67647 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cprt_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_cyrl_uniranges = hidden constant [6 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1024, i32 1279 }, %struct.AF_Script_UniRangeRec_ { i32 1280, i32 1327 }, %struct.AF_Script_UniRangeRec_ { i32 11744, i32 11775 }, %struct.AF_Script_UniRangeRec_ { i32 42560, i32 42655 }, %struct.AF_Script_UniRangeRec_ { i32 7296, i32 7311 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_cyrl_nonbase_uniranges = hidden constant [5 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1155, i32 1161 }, %struct.AF_Script_UniRangeRec_ { i32 11744, i32 11775 }, %struct.AF_Script_UniRangeRec_ { i32 42607, i32 42623 }, %struct.AF_Script_UniRangeRec_ { i32 42654, i32 42655 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_deva_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2304, i32 2363 }, %struct.AF_Script_UniRangeRec_ { i32 2365, i32 2384 }, %struct.AF_Script_UniRangeRec_ { i32 2387, i32 2403 }, %struct.AF_Script_UniRangeRec_ { i32 2406, i32 2431 }, %struct.AF_Script_UniRangeRec_ { i32 8377, i32 8377 }, %struct.AF_Script_UniRangeRec_ { i32 43232, i32 43263 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_deva_nonbase_uniranges = hidden constant [9 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2304, i32 2306 }, %struct.AF_Script_UniRangeRec_ { i32 2362, i32 2362 }, %struct.AF_Script_UniRangeRec_ { i32 2369, i32 2376 }, %struct.AF_Script_UniRangeRec_ { i32 2381, i32 2381 }, %struct.AF_Script_UniRangeRec_ { i32 2387, i32 2391 }, %struct.AF_Script_UniRangeRec_ { i32 2402, i32 2403 }, %struct.AF_Script_UniRangeRec_ { i32 43232, i32 43249 }, %struct.AF_Script_UniRangeRec_ { i32 43263, i32 43263 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_dsrt_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66560, i32 66639 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_dsrt_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_ethi_uniranges = hidden constant [5 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4608, i32 4991 }, %struct.AF_Script_UniRangeRec_ { i32 4992, i32 5023 }, %struct.AF_Script_UniRangeRec_ { i32 11648, i32 11743 }, %struct.AF_Script_UniRangeRec_ { i32 43776, i32 43823 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_ethi_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4957, i32 4959 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_geor_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4304, i32 4351 }, %struct.AF_Script_UniRangeRec_ { i32 7312, i32 7359 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_geor_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_geok_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4256, i32 4301 }, %struct.AF_Script_UniRangeRec_ { i32 11520, i32 11565 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_geok_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_glag_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 11264, i32 11359 }, %struct.AF_Script_UniRangeRec_ { i32 122880, i32 122927 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_glag_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 122880, i32 122927 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_goth_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66352, i32 66383 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_goth_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_grek_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 880, i32 1023 }, %struct.AF_Script_UniRangeRec_ { i32 7936, i32 8191 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_grek_nonbase_uniranges = hidden constant [8 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 890, i32 890 }, %struct.AF_Script_UniRangeRec_ { i32 900, i32 901 }, %struct.AF_Script_UniRangeRec_ { i32 8125, i32 8129 }, %struct.AF_Script_UniRangeRec_ { i32 8141, i32 8143 }, %struct.AF_Script_UniRangeRec_ { i32 8157, i32 8159 }, %struct.AF_Script_UniRangeRec_ { i32 8173, i32 8175 }, %struct.AF_Script_UniRangeRec_ { i32 8189, i32 8190 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_gujr_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2688, i32 2815 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_gujr_nonbase_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2689, i32 2690 }, %struct.AF_Script_UniRangeRec_ { i32 2748, i32 2748 }, %struct.AF_Script_UniRangeRec_ { i32 2753, i32 2760 }, %struct.AF_Script_UniRangeRec_ { i32 2765, i32 2765 }, %struct.AF_Script_UniRangeRec_ { i32 2786, i32 2787 }, %struct.AF_Script_UniRangeRec_ { i32 2810, i32 2815 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_guru_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2560, i32 2687 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_guru_nonbase_uniranges = hidden constant [6 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2561, i32 2562 }, %struct.AF_Script_UniRangeRec_ { i32 2620, i32 2620 }, %struct.AF_Script_UniRangeRec_ { i32 2625, i32 2641 }, %struct.AF_Script_UniRangeRec_ { i32 2672, i32 2673 }, %struct.AF_Script_UniRangeRec_ { i32 2677, i32 2677 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_hebr_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1424, i32 1535 }, %struct.AF_Script_UniRangeRec_ { i32 64285, i32 64335 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_hebr_nonbase_uniranges = hidden constant [6 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1425, i32 1471 }, %struct.AF_Script_UniRangeRec_ { i32 1473, i32 1474 }, %struct.AF_Script_UniRangeRec_ { i32 1476, i32 1477 }, %struct.AF_Script_UniRangeRec_ { i32 1479, i32 1479 }, %struct.AF_Script_UniRangeRec_ { i32 64286, i32 64286 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_kali_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43264, i32 43311 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_kali_nonbase_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43302, i32 43309 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_knda_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3200, i32 3327 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_knda_nonbase_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3201, i32 3201 }, %struct.AF_Script_UniRangeRec_ { i32 3260, i32 3260 }, %struct.AF_Script_UniRangeRec_ { i32 3263, i32 3263 }, %struct.AF_Script_UniRangeRec_ { i32 3270, i32 3270 }, %struct.AF_Script_UniRangeRec_ { i32 3276, i32 3277 }, %struct.AF_Script_UniRangeRec_ { i32 3298, i32 3299 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_khmr_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6016, i32 6143 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_khmr_nonbase_uniranges = hidden constant [5 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6071, i32 6077 }, %struct.AF_Script_UniRangeRec_ { i32 6086, i32 6086 }, %struct.AF_Script_UniRangeRec_ { i32 6089, i32 6099 }, %struct.AF_Script_UniRangeRec_ { i32 6109, i32 6109 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_khms_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6624, i32 6655 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_khms_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_lao_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3712, i32 3839 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_lao_nonbase_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3761, i32 3761 }, %struct.AF_Script_UniRangeRec_ { i32 3764, i32 3772 }, %struct.AF_Script_UniRangeRec_ { i32 3784, i32 3789 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_latn_uniranges = hidden constant [33 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 32, i32 127 }, %struct.AF_Script_UniRangeRec_ { i32 160, i32 169 }, %struct.AF_Script_UniRangeRec_ { i32 171, i32 177 }, %struct.AF_Script_UniRangeRec_ { i32 180, i32 184 }, %struct.AF_Script_UniRangeRec_ { i32 187, i32 255 }, %struct.AF_Script_UniRangeRec_ { i32 256, i32 383 }, %struct.AF_Script_UniRangeRec_ { i32 384, i32 591 }, %struct.AF_Script_UniRangeRec_ { i32 592, i32 687 }, %struct.AF_Script_UniRangeRec_ { i32 697, i32 735 }, %struct.AF_Script_UniRangeRec_ { i32 741, i32 767 }, %struct.AF_Script_UniRangeRec_ { i32 768, i32 879 }, %struct.AF_Script_UniRangeRec_ { i32 6832, i32 6846 }, %struct.AF_Script_UniRangeRec_ { i32 7424, i32 7467 }, %struct.AF_Script_UniRangeRec_ { i32 7531, i32 7543 }, %struct.AF_Script_UniRangeRec_ { i32 7545, i32 7551 }, %struct.AF_Script_UniRangeRec_ { i32 7552, i32 7578 }, %struct.AF_Script_UniRangeRec_ { i32 7616, i32 7679 }, %struct.AF_Script_UniRangeRec_ { i32 7680, i32 7935 }, %struct.AF_Script_UniRangeRec_ { i32 8192, i32 8303 }, %struct.AF_Script_UniRangeRec_ { i32 8352, i32 8376 }, %struct.AF_Script_UniRangeRec_ { i32 8378, i32 8399 }, %struct.AF_Script_UniRangeRec_ { i32 8528, i32 8591 }, %struct.AF_Script_UniRangeRec_ { i32 11360, i32 11387 }, %struct.AF_Script_UniRangeRec_ { i32 11390, i32 11391 }, %struct.AF_Script_UniRangeRec_ { i32 11776, i32 11903 }, %struct.AF_Script_UniRangeRec_ { i32 42784, i32 42863 }, %struct.AF_Script_UniRangeRec_ { i32 42865, i32 42999 }, %struct.AF_Script_UniRangeRec_ { i32 43002, i32 43007 }, %struct.AF_Script_UniRangeRec_ { i32 43824, i32 43867 }, %struct.AF_Script_UniRangeRec_ { i32 43872, i32 43887 }, %struct.AF_Script_UniRangeRec_ { i32 64256, i32 64262 }, %struct.AF_Script_UniRangeRec_ { i32 119808, i32 120831 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_latn_nonbase_uniranges = hidden constant [17 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 94, i32 96 }, %struct.AF_Script_UniRangeRec_ { i32 126, i32 126 }, %struct.AF_Script_UniRangeRec_ { i32 168, i32 169 }, %struct.AF_Script_UniRangeRec_ { i32 174, i32 176 }, %struct.AF_Script_UniRangeRec_ { i32 180, i32 180 }, %struct.AF_Script_UniRangeRec_ { i32 184, i32 184 }, %struct.AF_Script_UniRangeRec_ { i32 188, i32 190 }, %struct.AF_Script_UniRangeRec_ { i32 697, i32 735 }, %struct.AF_Script_UniRangeRec_ { i32 741, i32 767 }, %struct.AF_Script_UniRangeRec_ { i32 768, i32 879 }, %struct.AF_Script_UniRangeRec_ { i32 6832, i32 6846 }, %struct.AF_Script_UniRangeRec_ { i32 7616, i32 7679 }, %struct.AF_Script_UniRangeRec_ { i32 8215, i32 8215 }, %struct.AF_Script_UniRangeRec_ { i32 8254, i32 8254 }, %struct.AF_Script_UniRangeRec_ { i32 42888, i32 42888 }, %struct.AF_Script_UniRangeRec_ { i32 43000, i32 43002 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_latb_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 7522, i32 7530 }, %struct.AF_Script_UniRangeRec_ { i32 8320, i32 8348 }, %struct.AF_Script_UniRangeRec_ { i32 11388, i32 11388 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_latb_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_latp_uniranges = hidden constant [14 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 170, i32 170 }, %struct.AF_Script_UniRangeRec_ { i32 178, i32 179 }, %struct.AF_Script_UniRangeRec_ { i32 185, i32 186 }, %struct.AF_Script_UniRangeRec_ { i32 688, i32 696 }, %struct.AF_Script_UniRangeRec_ { i32 736, i32 740 }, %struct.AF_Script_UniRangeRec_ { i32 7468, i32 7521 }, %struct.AF_Script_UniRangeRec_ { i32 7544, i32 7544 }, %struct.AF_Script_UniRangeRec_ { i32 7579, i32 7615 }, %struct.AF_Script_UniRangeRec_ { i32 8304, i32 8319 }, %struct.AF_Script_UniRangeRec_ { i32 11389, i32 11389 }, %struct.AF_Script_UniRangeRec_ { i32 42864, i32 42864 }, %struct.AF_Script_UniRangeRec_ { i32 43000, i32 43001 }, %struct.AF_Script_UniRangeRec_ { i32 43868, i32 43871 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_latp_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_lisu_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 42192, i32 42239 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_lisu_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_mlym_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3328, i32 3455 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_mlym_nonbase_uniranges = hidden constant [5 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3328, i32 3329 }, %struct.AF_Script_UniRangeRec_ { i32 3387, i32 3388 }, %struct.AF_Script_UniRangeRec_ { i32 3405, i32 3406 }, %struct.AF_Script_UniRangeRec_ { i32 3426, i32 3427 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_medf_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 93760, i32 93855 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_medf_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_mong_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6144, i32 6319 }, %struct.AF_Script_UniRangeRec_ { i32 71264, i32 71295 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_mong_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6277, i32 6278 }, %struct.AF_Script_UniRangeRec_ { i32 6313, i32 6313 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_mymr_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4096, i32 4255 }, %struct.AF_Script_UniRangeRec_ { i32 43488, i32 43519 }, %struct.AF_Script_UniRangeRec_ { i32 43616, i32 43647 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_mymr_nonbase_uniranges = hidden constant [13 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4141, i32 4144 }, %struct.AF_Script_UniRangeRec_ { i32 4146, i32 4151 }, %struct.AF_Script_UniRangeRec_ { i32 4154, i32 4154 }, %struct.AF_Script_UniRangeRec_ { i32 4157, i32 4158 }, %struct.AF_Script_UniRangeRec_ { i32 4184, i32 4185 }, %struct.AF_Script_UniRangeRec_ { i32 4190, i32 4192 }, %struct.AF_Script_UniRangeRec_ { i32 4209, i32 4212 }, %struct.AF_Script_UniRangeRec_ { i32 4226, i32 4226 }, %struct.AF_Script_UniRangeRec_ { i32 4229, i32 4230 }, %struct.AF_Script_UniRangeRec_ { i32 4237, i32 4237 }, %struct.AF_Script_UniRangeRec_ { i32 43493, i32 43493 }, %struct.AF_Script_UniRangeRec_ { i32 43644, i32 43644 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_nkoo_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 1984, i32 2047 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_nkoo_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2027, i32 2037 }, %struct.AF_Script_UniRangeRec_ { i32 2045, i32 2045 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_none_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_none_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_olck_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 7248, i32 7295 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_olck_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_orkh_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 68608, i32 68687 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_orkh_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_osge_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66736, i32 66815 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_osge_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_osma_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66688, i32 66735 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_osma_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_rohg_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 68864, i32 68927 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_rohg_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_saur_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43136, i32 43231 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_saur_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43136, i32 43137 }, %struct.AF_Script_UniRangeRec_ { i32 43188, i32 43205 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_shaw_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 66640, i32 66687 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_shaw_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_sinh_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3456, i32 3583 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_sinh_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3530, i32 3530 }, %struct.AF_Script_UniRangeRec_ { i32 3538, i32 3542 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_sund_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 7040, i32 7103 }, %struct.AF_Script_UniRangeRec_ { i32 7360, i32 7375 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_sund_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 7040, i32 7042 }, %struct.AF_Script_UniRangeRec_ { i32 7073, i32 7085 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_taml_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2944, i32 3071 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_taml_nonbase_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2946, i32 2946 }, %struct.AF_Script_UniRangeRec_ { i32 3008, i32 3010 }, %struct.AF_Script_UniRangeRec_ { i32 3021, i32 3021 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tavt_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43648, i32 43743 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tavt_nonbase_uniranges = hidden constant [6 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43696, i32 43696 }, %struct.AF_Script_UniRangeRec_ { i32 43698, i32 43700 }, %struct.AF_Script_UniRangeRec_ { i32 43703, i32 43704 }, %struct.AF_Script_UniRangeRec_ { i32 43710, i32 43711 }, %struct.AF_Script_UniRangeRec_ { i32 43713, i32 43713 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_telu_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3072, i32 3199 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_telu_nonbase_uniranges = hidden constant [6 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3072, i32 3072 }, %struct.AF_Script_UniRangeRec_ { i32 3076, i32 3076 }, %struct.AF_Script_UniRangeRec_ { i32 3134, i32 3136 }, %struct.AF_Script_UniRangeRec_ { i32 3142, i32 3158 }, %struct.AF_Script_UniRangeRec_ { i32 3170, i32 3171 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_thai_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3584, i32 3711 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_thai_nonbase_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3633, i32 3633 }, %struct.AF_Script_UniRangeRec_ { i32 3636, i32 3642 }, %struct.AF_Script_UniRangeRec_ { i32 3655, i32 3662 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tfng_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 11568, i32 11647 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tfng_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_vaii_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 42240, i32 42559 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_vaii_nonbase_uniranges = hidden constant [1 x %struct.AF_Script_UniRangeRec_] zeroinitializer, align 4
@af_limb_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6400, i32 6479 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_limb_nonbase_uniranges = hidden constant [4 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 6432, i32 6434 }, %struct.AF_Script_UniRangeRec_ { i32 6439, i32 6452 }, %struct.AF_Script_UniRangeRec_ { i32 6455, i32 6459 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_orya_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2816, i32 2943 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_orya_nonbase_uniranges = hidden constant [7 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 2817, i32 2818 }, %struct.AF_Script_UniRangeRec_ { i32 2876, i32 2876 }, %struct.AF_Script_UniRangeRec_ { i32 2879, i32 2879 }, %struct.AF_Script_UniRangeRec_ { i32 2881, i32 2884 }, %struct.AF_Script_UniRangeRec_ { i32 2893, i32 2902 }, %struct.AF_Script_UniRangeRec_ { i32 2914, i32 2915 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_sylo_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43008, i32 43055 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_sylo_nonbase_uniranges = hidden constant [5 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 43010, i32 43010 }, %struct.AF_Script_UniRangeRec_ { i32 43014, i32 43014 }, %struct.AF_Script_UniRangeRec_ { i32 43019, i32 43019 }, %struct.AF_Script_UniRangeRec_ { i32 43045, i32 43046 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tibt_uniranges = hidden constant [2 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3840, i32 4095 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_tibt_nonbase_uniranges = hidden constant [10 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 3864, i32 3865 }, %struct.AF_Script_UniRangeRec_ { i32 3893, i32 3893 }, %struct.AF_Script_UniRangeRec_ { i32 3895, i32 3895 }, %struct.AF_Script_UniRangeRec_ { i32 3897, i32 3897 }, %struct.AF_Script_UniRangeRec_ { i32 3902, i32 3903 }, %struct.AF_Script_UniRangeRec_ { i32 3953, i32 3966 }, %struct.AF_Script_UniRangeRec_ { i32 3968, i32 3972 }, %struct.AF_Script_UniRangeRec_ { i32 3974, i32 3975 }, %struct.AF_Script_UniRangeRec_ { i32 3981, i32 4028 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_hani_uniranges = hidden constant [34 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 4352, i32 4607 }, %struct.AF_Script_UniRangeRec_ { i32 11904, i32 12031 }, %struct.AF_Script_UniRangeRec_ { i32 12032, i32 12255 }, %struct.AF_Script_UniRangeRec_ { i32 12272, i32 12287 }, %struct.AF_Script_UniRangeRec_ { i32 12288, i32 12351 }, %struct.AF_Script_UniRangeRec_ { i32 12352, i32 12447 }, %struct.AF_Script_UniRangeRec_ { i32 12448, i32 12543 }, %struct.AF_Script_UniRangeRec_ { i32 12544, i32 12591 }, %struct.AF_Script_UniRangeRec_ { i32 12592, i32 12687 }, %struct.AF_Script_UniRangeRec_ { i32 12688, i32 12703 }, %struct.AF_Script_UniRangeRec_ { i32 12704, i32 12735 }, %struct.AF_Script_UniRangeRec_ { i32 12736, i32 12783 }, %struct.AF_Script_UniRangeRec_ { i32 12784, i32 12799 }, %struct.AF_Script_UniRangeRec_ { i32 13056, i32 13311 }, %struct.AF_Script_UniRangeRec_ { i32 13312, i32 19903 }, %struct.AF_Script_UniRangeRec_ { i32 19904, i32 19967 }, %struct.AF_Script_UniRangeRec_ { i32 19968, i32 40959 }, %struct.AF_Script_UniRangeRec_ { i32 43360, i32 43391 }, %struct.AF_Script_UniRangeRec_ { i32 44032, i32 55215 }, %struct.AF_Script_UniRangeRec_ { i32 55216, i32 55295 }, %struct.AF_Script_UniRangeRec_ { i32 63744, i32 64255 }, %struct.AF_Script_UniRangeRec_ { i32 65040, i32 65055 }, %struct.AF_Script_UniRangeRec_ { i32 65072, i32 65103 }, %struct.AF_Script_UniRangeRec_ { i32 65280, i32 65519 }, %struct.AF_Script_UniRangeRec_ { i32 110592, i32 110847 }, %struct.AF_Script_UniRangeRec_ { i32 110848, i32 110895 }, %struct.AF_Script_UniRangeRec_ { i32 119552, i32 119647 }, %struct.AF_Script_UniRangeRec_ { i32 131072, i32 173791 }, %struct.AF_Script_UniRangeRec_ { i32 173824, i32 177983 }, %struct.AF_Script_UniRangeRec_ { i32 177984, i32 178207 }, %struct.AF_Script_UniRangeRec_ { i32 178208, i32 183983 }, %struct.AF_Script_UniRangeRec_ { i32 183984, i32 191471 }, %struct.AF_Script_UniRangeRec_ { i32 194560, i32 195103 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@af_hani_nonbase_uniranges = hidden constant [3 x %struct.AF_Script_UniRangeRec_] [%struct.AF_Script_UniRangeRec_ { i32 12330, i32 12335 }, %struct.AF_Script_UniRangeRec_ { i32 12688, i32 12703 }, %struct.AF_Script_UniRangeRec_ zeroinitializer], align 16
@coverages = internal unnamed_addr constant [11 x i32*] [i32* getelementptr inbounds ([2 x i32], [2 x i32]* @petite_capitals_from_capitals_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @small_capitals_from_capitals_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ordinals_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @petite_capitals_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @ruby_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @scientific_inferiors_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @small_capitals_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @subscript_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @superscript_coverage, i32 0, i32 0), i32* getelementptr inbounds ([2 x i32], [2 x i32]* @titling_coverage, i32 0, i32 0), i32* null], align 16
@scripts = internal unnamed_addr constant [60 x i32] [i32 1097100397, i32 1098015074, i32 1098018158, i32 1098281844, i32 1113681269, i32 1113943655, i32 1114990692, i32 1130457965, i32 1130458739, i32 1130459753, i32 1130915186, i32 1131376756, i32 1131442804, i32 1132032620, i32 1147500129, i32 1148416628, i32 1165256809, i32 1197830002, i32 0, i32 1198285159, i32 1198486632, i32 1198679403, i32 1198877298, i32 1198879349, i32 1214603890, i32 1264675945, i32 1265134962, i32 0, i32 1265525857, i32 1281453935, i32 1281455214, i32 0, i32 0, i32 1281979253, i32 1298954605, i32 1298490470, i32 1299148391, i32 1299803506, i32 1315663727, i32 0, i32 1332503403, i32 1332898664, i32 1332963173, i32 1332964705, i32 1383032935, i32 1398895986, i32 1399349623, i32 1399418472, i32 1400204900, i32 1415671148, i32 1415673460, i32 1415933045, i32 1415999079, i32 1416126825, i32 1449224553, i32 1281977698, i32 1332902241, i32 1400466543, i32 1416192628, i32 1214344809], align 16
@features = internal unnamed_addr constant [11 x %struct.hb_feature_t*] [%struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @petite_capitals_from_capitals_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @small_capitals_from_capitals_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @ordinals_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @petite_capitals_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @ruby_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @scientific_inferiors_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @small_capitals_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @subscript_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @superscript_feature, i32 0, i32 0), %struct.hb_feature_t* getelementptr inbounds ([1 x %struct.hb_feature_t], [1 x %struct.hb_feature_t]* @titling_feature, i32 0, i32 0), %struct.hb_feature_t* null], align 16
@af_cjk_metrics_check_digits.digits = internal constant [20 x i8] c"0 1 2 3 4 5 6 7 8 9\00", align 16
@af_latin_metrics_check_digits.digits = internal constant [20 x i8] c"0 1 2 3 4 5 6 7 8 9\00", align 16
@__const.af_loader_embolden_glyph_in_slot.scale_down_matrix = private unnamed_addr constant %struct.FT_Matrix_ { i64 65536, i64 0, i64 0, i64 65536 }, align 8
@af_services = internal constant [2 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.178, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PropertiesRec_* @af_service_properties to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.178 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@af_service_properties = internal constant %struct.FT_Service_PropertiesRec_ { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* @af_property_set, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* @af_property_get }, align 8
@.str.179 = private unnamed_addr constant [16 x i8] c"fallback-script\00", align 1
@.str.180 = private unnamed_addr constant [15 x i8] c"default-script\00", align 1
@.str.181 = private unnamed_addr constant [18 x i8] c"increase-x-height\00", align 1
@.str.182 = private unnamed_addr constant [21 x i8] c"darkening-parameters\00", align 1
@.str.183 = private unnamed_addr constant [18 x i8] c"no-stem-darkening\00", align 1
@.str.184 = private unnamed_addr constant [20 x i8] c"glyph-to-script-map\00", align 1
@petite_capitals_from_capitals_coverage = internal constant [2 x i32] [i32 1664246640, i32 0], align 4
@small_capitals_from_capitals_coverage = internal constant [2 x i32] [i32 1664250723, i32 0], align 4
@ordinals_coverage = internal constant [2 x i32] [i32 1869767790, i32 0], align 4
@petite_capitals_coverage = internal constant [2 x i32] [i32 1885561200, i32 0], align 4
@ruby_coverage = internal constant [2 x i32] [i32 1920295545, i32 0], align 4
@scientific_inferiors_coverage = internal constant [2 x i32] [i32 1936289382, i32 0], align 4
@small_capitals_coverage = internal constant [2 x i32] [i32 1936548720, i32 0], align 4
@subscript_coverage = internal constant [2 x i32] [i32 1937072755, i32 0], align 4
@superscript_coverage = internal constant [2 x i32] [i32 1937076339, i32 0], align 4
@titling_coverage = internal constant [2 x i32] [i32 1953068140, i32 0], align 4
@petite_capitals_from_capitals_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1664246640, i32 1, i32 0, i32 -1 }], align 16
@small_capitals_from_capitals_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1664250723, i32 1, i32 0, i32 -1 }], align 16
@ordinals_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1869767790, i32 1, i32 0, i32 -1 }], align 16
@petite_capitals_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1885561200, i32 1, i32 0, i32 -1 }], align 16
@ruby_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1920295545, i32 1, i32 0, i32 -1 }], align 16
@scientific_inferiors_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1936289382, i32 1, i32 0, i32 -1 }], align 16
@small_capitals_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1936548720, i32 1, i32 0, i32 -1 }], align 16
@subscript_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1937072755, i32 1, i32 0, i32 -1 }], align 16
@superscript_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1937076339, i32 1, i32 0, i32 -1 }], align 16
@titling_feature = internal constant [1 x %struct.hb_feature_t] [%struct.hb_feature_t { i32 1953068140, i32 1, i32 0, i32 -1 }], align 16

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_cjk_metrics_init(%struct.AF_CJKMetricsRec_* nocapture, %struct.FT_FaceRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca [51 x i64], align 16
  %5 = alloca [51 x i64], align 16
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 23
  %8 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %10 = load i16, i16* %9, align 8
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %1, i32 1970170211) #10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %411

15:                                               ; preds = %2
  tail call fastcc void @af_cjk_metrics_init_widths(%struct.AF_CJKMetricsRec_* %0, %struct.FT_FaceRec_* %1)
  %16 = bitcast [51 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 408, i1 false) #10
  %17 = bitcast [51 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 408, i1 false) #10
  %18 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0
  %19 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0, i32 0
  %20 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %19, align 8
  %21 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [265 x %struct.AF_Blue_StringRec_], [265 x %struct.AF_Blue_StringRec_]* @af_blue_stringsets, i64 0, i64 %23
  %25 = tail call %struct.hb_buffer_t* @hb_buffer_create() #10
  %26 = bitcast %struct.hb_buffer_t* %25 to i8*
  %27 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %24, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 5531
  br i1 %29, label %410, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0
  %32 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1
  %33 = bitcast i32* %6 to i8*
  %34 = bitcast i32* %3 to i8*
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 21
  br label %36

36:                                               ; preds = %405, %30
  %37 = phi i32 [ %28, %30 ], [ %408, %405 ]
  %38 = phi %struct.AF_Blue_StringRec_* [ %24, %30 ], [ %406, %405 ]
  %39 = zext i32 %37 to i64
  %40 = getelementptr inbounds [5531 x i8], [5531 x i8]* @af_blue_strings, i64 0, i64 %39
  %41 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %38, i64 0, i32 1
  %42 = load i16, i16* %41, align 4
  %43 = and i16 %42, 2
  %44 = icmp eq i16 %43, 0
  %45 = select i1 %44, %struct.AF_CJKAxisRec_* %32, %struct.AF_CJKAxisRec_* %31
  %46 = load i8, i8* %40, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %308, label %48

48:                                               ; preds = %36, %301
  %49 = phi i32 [ %305, %301 ], [ 0, %36 ]
  %50 = phi i8* [ %304, %301 ], [ %40, %36 ]
  %51 = phi i32 [ %303, %301 ], [ 0, %36 ]
  %52 = phi i8 [ %302, %301 ], [ 1, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #10
  store i32 -1431655766, i32* %6, align 4
  br label %53

53:                                               ; preds = %56, %48
  %54 = phi i8* [ %50, %48 ], [ %57, %56 ]
  %55 = load i8, i8* %54, align 1
  switch i8 %55, label %60 [
    i8 32, label %56
    i8 124, label %58
  ]

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  br label %53

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  br label %301

60:                                               ; preds = %53
  %61 = call i8* @af_shaper_get_cluster(i8* %54, %struct.AF_StyleMetricsRec_* %18, i8* %26, i32* nonnull %6) #10
  %62 = load i32, i32* %6, align 4
  %63 = icmp ugt i32 %62, 1
  br i1 %63, label %301, label %64

64:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 -1431655766, i32* %3, align 4
  %65 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %25, i32* nonnull %3) #10
  %66 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %25, i32* nonnull %3) #10
  %67 = load i32, i32* %3, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  br label %301

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %65, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %301, label %74

74:                                               ; preds = %70
  %75 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %1, i32 %72, i32 1) #10
  %76 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %35, align 8
  %77 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %76, i64 0, i32 13, i32 0
  %78 = load i16, i16* %77, align 8
  %79 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %76, i64 0, i32 13, i32 2
  %80 = load %struct.FT_Vector_*, %struct.FT_Vector_** %79, align 8
  %81 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %76, i64 0, i32 13, i32 4
  %82 = load i16*, i16** %81, align 8
  %83 = icmp eq i32 %75, 0
  br i1 %83, label %84, label %301

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %76, i64 0, i32 13, i32 1
  %86 = load i16, i16* %85, align 2
  %87 = icmp slt i16 %86, 3
  br i1 %87, label %301, label %88

88:                                               ; preds = %84
  %89 = icmp sgt i16 %78, 0
  br i1 %89, label %90, label %290

90:                                               ; preds = %88
  %91 = sext i16 %78 to i64
  %92 = and i64 %91, 4294967295
  br label %93

93:                                               ; preds = %284, %90
  %94 = phi i64 [ 0, %90 ], [ %288, %284 ]
  %95 = phi i32 [ 0, %90 ], [ %285, %284 ]
  %96 = phi i32 [ -1, %90 ], [ %287, %284 ]
  %97 = phi i64 [ 0, %90 ], [ %286, %284 ]
  %98 = getelementptr inbounds i16, i16* %82, i64 %94
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i32
  %101 = icmp slt i32 %95, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %93
  %103 = add nsw i32 %100, 1
  br label %284

104:                                              ; preds = %93
  %105 = load i16, i16* %41, align 4
  %106 = zext i16 %105 to i32
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = and i32 %106, 1
  %110 = icmp ne i32 %109, 0
  %111 = sext i32 %95 to i64
  %112 = add nsw i32 %100, 1
  %113 = sext i32 %112 to i64
  %114 = sub nsw i64 %113, %111
  %115 = xor i64 %111, -1
  %116 = and i64 %114, 1
  %117 = icmp eq i64 %116, 0
  br i1 %108, label %201, label %118

118:                                              ; preds = %104
  br i1 %110, label %137, label %119

119:                                              ; preds = %118
  br i1 %117, label %129, label %120

120:                                              ; preds = %119
  %121 = icmp slt i32 %96, 0
  %122 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %111, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp slt i64 %123, %97
  %125 = or i1 %121, %124
  %126 = select i1 %125, i64 %123, i64 %97
  %127 = select i1 %125, i32 %95, i32 %96
  %128 = add nsw i64 %111, 1
  br label %129

129:                                              ; preds = %120, %119
  %130 = phi i64 [ %126, %120 ], [ undef, %119 ]
  %131 = phi i32 [ %127, %120 ], [ undef, %119 ]
  %132 = phi i64 [ %128, %120 ], [ %111, %119 ]
  %133 = phi i32 [ %127, %120 ], [ %96, %119 ]
  %134 = phi i64 [ %126, %120 ], [ %97, %119 ]
  %135 = sub nsw i64 0, %113
  %136 = icmp eq i64 %115, %135
  br i1 %136, label %284, label %178

137:                                              ; preds = %118
  br i1 %117, label %147, label %138

138:                                              ; preds = %137
  %139 = icmp slt i32 %96, 0
  %140 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %111, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = icmp sgt i64 %141, %97
  %143 = or i1 %139, %142
  %144 = select i1 %143, i64 %141, i64 %97
  %145 = select i1 %143, i32 %95, i32 %96
  %146 = add nsw i64 %111, 1
  br label %147

147:                                              ; preds = %138, %137
  %148 = phi i64 [ %144, %138 ], [ undef, %137 ]
  %149 = phi i32 [ %145, %138 ], [ undef, %137 ]
  %150 = phi i64 [ %146, %138 ], [ %111, %137 ]
  %151 = phi i32 [ %145, %138 ], [ %96, %137 ]
  %152 = phi i64 [ %144, %138 ], [ %97, %137 ]
  %153 = sub nsw i64 0, %113
  %154 = icmp eq i64 %115, %153
  br i1 %154, label %284, label %155

155:                                              ; preds = %147, %155
  %156 = phi i64 [ %176, %155 ], [ %150, %147 ]
  %157 = phi i32 [ %175, %155 ], [ %151, %147 ]
  %158 = phi i64 [ %174, %155 ], [ %152, %147 ]
  %159 = icmp slt i32 %157, 0
  %160 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %156, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp sgt i64 %161, %158
  %163 = or i1 %159, %162
  %164 = trunc i64 %156 to i32
  %165 = select i1 %163, i64 %161, i64 %158
  %166 = select i1 %163, i32 %164, i32 %157
  %167 = add nsw i64 %156, 1
  %168 = icmp slt i32 %166, 0
  %169 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %167, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = icmp sgt i64 %170, %165
  %172 = or i1 %168, %171
  %173 = trunc i64 %167 to i32
  %174 = select i1 %172, i64 %170, i64 %165
  %175 = select i1 %172, i32 %173, i32 %166
  %176 = add nsw i64 %156, 2
  %177 = icmp eq i64 %176, %113
  br i1 %177, label %284, label %155

178:                                              ; preds = %129, %178
  %179 = phi i64 [ %199, %178 ], [ %132, %129 ]
  %180 = phi i32 [ %198, %178 ], [ %133, %129 ]
  %181 = phi i64 [ %197, %178 ], [ %134, %129 ]
  %182 = icmp slt i32 %180, 0
  %183 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %179, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp slt i64 %184, %181
  %186 = or i1 %182, %185
  %187 = trunc i64 %179 to i32
  %188 = select i1 %186, i64 %184, i64 %181
  %189 = select i1 %186, i32 %187, i32 %180
  %190 = add nsw i64 %179, 1
  %191 = icmp slt i32 %189, 0
  %192 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %190, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = icmp slt i64 %193, %188
  %195 = or i1 %191, %194
  %196 = trunc i64 %190 to i32
  %197 = select i1 %195, i64 %193, i64 %188
  %198 = select i1 %195, i32 %196, i32 %189
  %199 = add nsw i64 %179, 2
  %200 = icmp eq i64 %199, %113
  br i1 %200, label %284, label %178

201:                                              ; preds = %104
  br i1 %110, label %220, label %202

202:                                              ; preds = %201
  br i1 %117, label %212, label %203

203:                                              ; preds = %202
  %204 = icmp slt i32 %96, 0
  %205 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %111, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = icmp slt i64 %206, %97
  %208 = or i1 %204, %207
  %209 = select i1 %208, i64 %206, i64 %97
  %210 = select i1 %208, i32 %95, i32 %96
  %211 = add nsw i64 %111, 1
  br label %212

212:                                              ; preds = %203, %202
  %213 = phi i64 [ %209, %203 ], [ undef, %202 ]
  %214 = phi i32 [ %210, %203 ], [ undef, %202 ]
  %215 = phi i64 [ %211, %203 ], [ %111, %202 ]
  %216 = phi i32 [ %210, %203 ], [ %96, %202 ]
  %217 = phi i64 [ %209, %203 ], [ %97, %202 ]
  %218 = sub nsw i64 0, %113
  %219 = icmp eq i64 %115, %218
  br i1 %219, label %284, label %261

220:                                              ; preds = %201
  br i1 %117, label %230, label %221

221:                                              ; preds = %220
  %222 = icmp slt i32 %96, 0
  %223 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %111, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = icmp sgt i64 %224, %97
  %226 = or i1 %222, %225
  %227 = select i1 %226, i64 %224, i64 %97
  %228 = select i1 %226, i32 %95, i32 %96
  %229 = add nsw i64 %111, 1
  br label %230

230:                                              ; preds = %221, %220
  %231 = phi i64 [ %227, %221 ], [ undef, %220 ]
  %232 = phi i32 [ %228, %221 ], [ undef, %220 ]
  %233 = phi i64 [ %229, %221 ], [ %111, %220 ]
  %234 = phi i32 [ %228, %221 ], [ %96, %220 ]
  %235 = phi i64 [ %227, %221 ], [ %97, %220 ]
  %236 = sub nsw i64 0, %113
  %237 = icmp eq i64 %115, %236
  br i1 %237, label %284, label %238

238:                                              ; preds = %230, %238
  %239 = phi i64 [ %259, %238 ], [ %233, %230 ]
  %240 = phi i32 [ %258, %238 ], [ %234, %230 ]
  %241 = phi i64 [ %257, %238 ], [ %235, %230 ]
  %242 = icmp slt i32 %240, 0
  %243 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %239, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = icmp sgt i64 %244, %241
  %246 = or i1 %242, %245
  %247 = trunc i64 %239 to i32
  %248 = select i1 %246, i64 %244, i64 %241
  %249 = select i1 %246, i32 %247, i32 %240
  %250 = add nsw i64 %239, 1
  %251 = icmp slt i32 %249, 0
  %252 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %250, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = icmp sgt i64 %253, %248
  %255 = or i1 %251, %254
  %256 = trunc i64 %250 to i32
  %257 = select i1 %255, i64 %253, i64 %248
  %258 = select i1 %255, i32 %256, i32 %249
  %259 = add nsw i64 %239, 2
  %260 = icmp eq i64 %259, %113
  br i1 %260, label %284, label %238

261:                                              ; preds = %212, %261
  %262 = phi i64 [ %282, %261 ], [ %215, %212 ]
  %263 = phi i32 [ %281, %261 ], [ %216, %212 ]
  %264 = phi i64 [ %280, %261 ], [ %217, %212 ]
  %265 = icmp slt i32 %263, 0
  %266 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %262, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = icmp slt i64 %267, %264
  %269 = or i1 %265, %268
  %270 = trunc i64 %262 to i32
  %271 = select i1 %269, i64 %267, i64 %264
  %272 = select i1 %269, i32 %270, i32 %263
  %273 = add nsw i64 %262, 1
  %274 = icmp slt i32 %272, 0
  %275 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %80, i64 %273, i32 1
  %276 = load i64, i64* %275, align 8
  %277 = icmp slt i64 %276, %271
  %278 = or i1 %274, %277
  %279 = trunc i64 %273 to i32
  %280 = select i1 %278, i64 %276, i64 %271
  %281 = select i1 %278, i32 %279, i32 %272
  %282 = add nsw i64 %262, 2
  %283 = icmp eq i64 %282, %113
  br i1 %283, label %284, label %261

284:                                              ; preds = %129, %178, %147, %155, %212, %261, %230, %238, %102
  %285 = phi i32 [ %103, %102 ], [ %112, %238 ], [ %112, %230 ], [ %112, %261 ], [ %112, %212 ], [ %112, %155 ], [ %112, %147 ], [ %112, %178 ], [ %112, %129 ]
  %286 = phi i64 [ %97, %102 ], [ %231, %230 ], [ %257, %238 ], [ %213, %212 ], [ %280, %261 ], [ %148, %147 ], [ %174, %155 ], [ %130, %129 ], [ %197, %178 ]
  %287 = phi i32 [ %96, %102 ], [ %232, %230 ], [ %258, %238 ], [ %214, %212 ], [ %281, %261 ], [ %149, %147 ], [ %175, %155 ], [ %131, %129 ], [ %198, %178 ]
  %288 = add nuw nsw i64 %94, 1
  %289 = icmp eq i64 %288, %92
  br i1 %289, label %290, label %93

290:                                              ; preds = %284, %88
  %291 = phi i64 [ 0, %88 ], [ %286, %284 ]
  %292 = icmp eq i8 %52, 0
  br i1 %292, label %297, label %293

293:                                              ; preds = %290
  %294 = add i32 %49, 1
  %295 = zext i32 %49 to i64
  %296 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %295
  store i64 %291, i64* %296, align 8
  br label %301

297:                                              ; preds = %290
  %298 = add i32 %51, 1
  %299 = zext i32 %51 to i64
  %300 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %299
  store i64 %291, i64* %300, align 8
  br label %301

301:                                              ; preds = %297, %293, %84, %74, %70, %69, %60, %58
  %302 = phi i8 [ 0, %58 ], [ %52, %60 ], [ %52, %70 ], [ %52, %74 ], [ %52, %84 ], [ 0, %297 ], [ %52, %293 ], [ %52, %69 ]
  %303 = phi i32 [ %51, %58 ], [ %51, %60 ], [ %51, %70 ], [ %51, %74 ], [ %51, %84 ], [ %298, %297 ], [ %51, %293 ], [ %51, %69 ]
  %304 = phi i8* [ %59, %58 ], [ %61, %60 ], [ %61, %70 ], [ %61, %74 ], [ %61, %84 ], [ %61, %297 ], [ %61, %293 ], [ %61, %69 ]
  %305 = phi i32 [ %49, %58 ], [ %49, %60 ], [ %49, %70 ], [ %49, %74 ], [ %49, %84 ], [ %49, %297 ], [ %294, %293 ], [ %49, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  %306 = load i8, i8* %304, align 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %308, label %48

308:                                              ; preds = %301, %36
  %309 = phi i32 [ 0, %36 ], [ %303, %301 ]
  %310 = phi i32 [ 0, %36 ], [ %305, %301 ]
  %311 = icmp eq i32 %310, 0
  %312 = or i32 %310, %309
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %405, label %314

314:                                              ; preds = %308
  %315 = icmp eq i32 %309, 0
  %316 = icmp ugt i32 %310, 1
  br i1 %316, label %317, label %338

317:                                              ; preds = %314
  %318 = zext i32 %310 to i64
  br label %319

319:                                              ; preds = %335, %317
  %320 = phi i64 [ 1, %317 ], [ %336, %335 ]
  %321 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %320
  %322 = load i64, i64* %321, align 8
  br label %323

323:                                              ; preds = %331, %319
  %324 = phi i64 [ %334, %331 ], [ %320, %319 ]
  %325 = trunc i64 %324 to i32
  %326 = add i32 %325, -1
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %327
  %329 = load i64, i64* %328, align 8
  %330 = icmp slt i64 %322, %329
  br i1 %330, label %331, label %335

331:                                              ; preds = %323
  %332 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %324
  store i64 %329, i64* %332, align 8
  store i64 %322, i64* %328, align 8
  %333 = icmp eq i32 %326, 0
  %334 = add nsw i64 %324, -1
  br i1 %333, label %335, label %323

335:                                              ; preds = %331, %323
  %336 = add nuw nsw i64 %320, 1
  %337 = icmp eq i64 %336, %318
  br i1 %337, label %338, label %319

338:                                              ; preds = %335, %314
  %339 = icmp ugt i32 %309, 1
  br i1 %339, label %340, label %361

340:                                              ; preds = %338
  %341 = zext i32 %309 to i64
  br label %342

342:                                              ; preds = %358, %340
  %343 = phi i64 [ 1, %340 ], [ %359, %358 ]
  %344 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %343
  %345 = load i64, i64* %344, align 8
  br label %346

346:                                              ; preds = %354, %342
  %347 = phi i64 [ %357, %354 ], [ %343, %342 ]
  %348 = trunc i64 %347 to i32
  %349 = add i32 %348, -1
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %350
  %352 = load i64, i64* %351, align 8
  %353 = icmp slt i64 %345, %352
  br i1 %353, label %354, label %358

354:                                              ; preds = %346
  %355 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %347
  store i64 %352, i64* %355, align 8
  store i64 %345, i64* %351, align 8
  %356 = icmp eq i32 %349, 0
  %357 = add nsw i64 %347, -1
  br i1 %356, label %358, label %346

358:                                              ; preds = %354, %346
  %359 = add nuw nsw i64 %343, 1
  %360 = icmp eq i64 %359, %341
  br i1 %360, label %361, label %342

361:                                              ; preds = %358, %338
  %362 = getelementptr inbounds %struct.AF_CJKAxisRec_, %struct.AF_CJKAxisRec_* %45, i64 0, i32 8
  %363 = load i32, i32* %362, align 4
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds %struct.AF_CJKAxisRec_, %struct.AF_CJKAxisRec_* %45, i64 0, i32 9, i64 %364, i32 0, i32 0
  %366 = getelementptr inbounds %struct.AF_CJKAxisRec_, %struct.AF_CJKAxisRec_* %45, i64 0, i32 9, i64 %364, i32 1, i32 0
  %367 = add i32 %363, 1
  store i32 %367, i32* %362, align 4
  br i1 %315, label %368, label %373

368:                                              ; preds = %361
  %369 = lshr i32 %310, 1
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %370
  %372 = load i64, i64* %371, align 8
  store i64 %372, i64* %366, align 8
  store i64 %372, i64* %365, align 8
  br label %399

373:                                              ; preds = %361
  br i1 %311, label %374, label %379

374:                                              ; preds = %373
  %375 = lshr i32 %309, 1
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %376
  %378 = load i64, i64* %377, align 8
  store i64 %378, i64* %366, align 8
  store i64 %378, i64* %365, align 8
  br label %399

379:                                              ; preds = %373
  %380 = lshr i32 %310, 1
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [51 x i64], [51 x i64]* %4, i64 0, i64 %381
  %383 = load i64, i64* %382, align 8
  store i64 %383, i64* %365, align 8
  %384 = lshr i32 %309, 1
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds [51 x i64], [51 x i64]* %5, i64 0, i64 %385
  %387 = load i64, i64* %386, align 8
  store i64 %387, i64* %366, align 8
  %388 = icmp eq i64 %387, %383
  br i1 %388, label %399, label %389

389:                                              ; preds = %379
  %390 = icmp slt i64 %387, %383
  %391 = load i16, i16* %41, align 4
  %392 = and i16 %391, 1
  %393 = zext i16 %392 to i32
  %394 = zext i1 %390 to i32
  %395 = icmp eq i32 %393, %394
  br i1 %395, label %399, label %396

396:                                              ; preds = %389
  %397 = add nsw i64 %387, %383
  %398 = sdiv i64 %397, 2
  store i64 %398, i64* %366, align 8
  store i64 %398, i64* %365, align 8
  br label %399

399:                                              ; preds = %396, %389, %379, %374, %368
  %400 = getelementptr inbounds %struct.AF_CJKAxisRec_, %struct.AF_CJKAxisRec_* %45, i64 0, i32 9, i64 %364, i32 2
  store i32 0, i32* %400, align 8
  %401 = load i16, i16* %41, align 4
  %402 = shl i16 %401, 1
  %403 = and i16 %402, 2
  %404 = zext i16 %403 to i32
  store i32 %404, i32* %400, align 8
  br label %405

405:                                              ; preds = %399, %308
  %406 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %38, i64 1
  %407 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %406, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  %409 = icmp eq i32 %408, 5531
  br i1 %409, label %410, label %36

410:                                              ; preds = %405, %15
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %25) #10
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %16) #10
  call fastcc void @af_cjk_metrics_check_digits(%struct.AF_CJKMetricsRec_* %0, %struct.FT_FaceRec_* %1)
  br label %411

411:                                              ; preds = %2, %410
  %412 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %1, %struct.FT_CharMapRec_* %8) #10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @af_cjk_metrics_scale(%struct.AF_CJKMetricsRec_* nocapture, %struct.AF_ScalerRec_* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.AF_ScalerRec_* %3 to i8*
  %5 = bitcast %struct.AF_ScalerRec_* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 48, i1 false)
  tail call fastcc void @af_cjk_metrics_scale_dim(%struct.AF_CJKMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 0)
  tail call fastcc void @af_cjk_metrics_scale_dim(%struct.AF_CJKMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @af_cjk_get_standard_widths(%struct.AF_CJKMetricsRec_* nocapture readonly, i64*, i64*) #1 {
  %4 = icmp eq i64* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 5
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %1, align 8
  br label %8

8:                                                ; preds = %3, %5
  %9 = icmp eq i64* %2, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @af_cjk_hints_init(%struct.AF_GlyphHintsRec_* nocapture, %struct.AF_CJKMetricsRec_*) #1 {
  %3 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0
  %4 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %3, %struct.AF_StyleMetricsRec_** %4, align 8
  %5 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0, i32 1, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 12
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 4
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0, i32 1, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  %23 = or i32 %21, 1
  %24 = icmp eq i32 %23, 3
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %21, 4
  %27 = or i1 %22, %26
  %28 = or i32 %25, 2
  %29 = select i1 %27, i32 %28, i32 %25
  %30 = or i32 %21, 2
  %31 = icmp eq i32 %30, 3
  %32 = or i32 %29, 4
  %33 = select i1 %31, i32 %29, i32 %32
  %34 = or i32 %33, 8
  %35 = select i1 %22, i32 %34, i32 %33
  %36 = or i32 %6, 4
  store i32 %36, i32* %7, align 8
  %37 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  store i32 %35, i32* %37, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_cjk_hints_apply(i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_CJKMetricsRec_*) #0 {
  %5 = tail call fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_* %1, %struct.FT_Outline_* %2)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %502

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = tail call fastcc i32 @af_cjk_hints_detect_features(%struct.AF_GlyphHintsRec_* %1, i32 0)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %502

15:                                               ; preds = %12
  tail call fastcc void @af_cjk_hints_compute_blue_edges(%struct.AF_GlyphHintsRec_* %1, %struct.AF_CJKMetricsRec_* %3, i32 0)
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %9, %7 ], [ %16, %15 ]
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = tail call fastcc i32 @af_cjk_hints_detect_features(%struct.AF_GlyphHintsRec_* %1, i32 1)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %502

24:                                               ; preds = %21
  tail call fastcc void @af_cjk_hints_compute_blue_edges(%struct.AF_GlyphHintsRec_* %1, %struct.AF_CJKMetricsRec_* %3, i32 1)
  br label %25

25:                                               ; preds = %17, %24
  %26 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 13
  br label %27

27:                                               ; preds = %461, %25
  %28 = phi i64 [ 0, %25 ], [ %462, %461 ]
  %29 = trunc i64 %28 to i32
  switch i32 %29, label %461 [
    i32 0, label %30
    i32 1, label %34
  ]

30:                                               ; preds = %27
  %31 = load i32, i32* %8, align 8
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %461

34:                                               ; preds = %27
  %35 = load i32, i32* %8, align 8
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %461

38:                                               ; preds = %30, %34
  %39 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %28, i32 5
  %40 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %39, align 8
  %41 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %28, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %43
  %45 = icmp sgt i32 %42, 0
  br i1 %45, label %48, label %190

46:                                               ; preds = %102
  %47 = icmp eq i64 %28, 1
  br label %106

48:                                               ; preds = %38, %102
  %49 = phi %struct.AF_EdgeRec_* [ %103, %102 ], [ null, %38 ]
  %50 = phi %struct.AF_EdgeRec_* [ %104, %102 ], [ %40, %38 ]
  %51 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %50, i64 0, i32 3
  %52 = load i8, i8* %51, align 8
  %53 = and i8 %52, 4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %102

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %50, i64 0, i32 6
  %57 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %56, align 8
  %58 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %50, i64 0, i32 7
  %59 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %58, align 8
  %60 = icmp eq %struct.AF_WidthRec_* %57, null
  br i1 %60, label %61, label %70

61:                                               ; preds = %55
  %62 = icmp eq %struct.AF_EdgeRec_* %59, null
  br i1 %62, label %102, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %59, i64 0, i32 6
  %65 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %64, align 8
  %66 = icmp eq %struct.AF_WidthRec_* %65, null
  br i1 %66, label %102, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %59, i64 0, i32 3
  %69 = load i8, i8* %68, align 8
  br label %72

70:                                               ; preds = %55
  %71 = icmp eq %struct.AF_EdgeRec_* %50, null
  br i1 %71, label %102, label %72

72:                                               ; preds = %70, %67
  %73 = phi i8 [ %52, %70 ], [ %69, %67 ]
  %74 = phi %struct.AF_EdgeRec_* [ %59, %70 ], [ %50, %67 ]
  %75 = phi %struct.AF_EdgeRec_* [ %50, %70 ], [ %59, %67 ]
  %76 = phi %struct.AF_WidthRec_* [ %57, %70 ], [ %65, %67 ]
  %77 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %76, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %75, i64 0, i32 2
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %75, i64 0, i32 3
  %81 = or i8 %73, 4
  store i8 %81, i8* %80, align 8
  %82 = icmp eq %struct.AF_EdgeRec_* %74, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %74, i64 0, i32 6
  %85 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %84, align 8
  %86 = icmp eq %struct.AF_WidthRec_* %85, null
  br i1 %86, label %87, label %99

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %74, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %75, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = sub nsw i64 %89, %91
  %93 = tail call fastcc i64 @af_cjk_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %29, i64 %92) #10
  %94 = add nsw i64 %93, %78
  %95 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %74, i64 0, i32 2
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %74, i64 0, i32 3
  %97 = load i8, i8* %96, align 8
  %98 = or i8 %97, 4
  store i8 %98, i8* %96, align 8
  br label %99

99:                                               ; preds = %87, %83, %72
  %100 = icmp eq %struct.AF_EdgeRec_* %49, null
  %101 = select i1 %100, %struct.AF_EdgeRec_* %50, %struct.AF_EdgeRec_* %49
  br label %102

102:                                              ; preds = %99, %70, %63, %61, %48
  %103 = phi %struct.AF_EdgeRec_* [ %101, %99 ], [ %49, %48 ], [ %49, %70 ], [ %49, %61 ], [ %49, %63 ]
  %104 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %50, i64 1
  %105 = icmp ult %struct.AF_EdgeRec_* %104, %44
  br i1 %105, label %48, label %46

106:                                              ; preds = %182, %46
  %107 = phi i64 [ 0, %46 ], [ %187, %182 ]
  %108 = phi i8 [ 0, %46 ], [ %186, %182 ]
  %109 = phi i32 [ 0, %46 ], [ %185, %182 ]
  %110 = phi i64 [ 0, %46 ], [ %184, %182 ]
  %111 = phi %struct.AF_EdgeRec_* [ %103, %46 ], [ %183, %182 ]
  %112 = phi %struct.AF_EdgeRec_* [ %40, %46 ], [ %188, %182 ]
  %113 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 3
  %114 = load i8, i8* %113, align 8
  %115 = and i8 %114, 4
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %182

117:                                              ; preds = %106
  %118 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 7
  %119 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %118, align 8
  %120 = icmp eq %struct.AF_EdgeRec_* %119, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = add nsw i32 %109, 1
  br label %182

123:                                              ; preds = %117
  %124 = icmp eq i8 %108, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = add nsw i64 %107, 64
  %129 = icmp slt i64 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = icmp slt i64 %132, %128
  br i1 %133, label %134, label %136

134:                                              ; preds = %130, %125
  %135 = add nsw i32 %109, 1
  br label %182

136:                                              ; preds = %130, %123
  %137 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 6
  %138 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %137, align 8
  %139 = icmp eq %struct.AF_WidthRec_* %138, null
  br i1 %139, label %152, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = sub nsw i64 %142, %144
  %146 = tail call fastcc i64 @af_cjk_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %29, i64 %145) #10
  %147 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %148, %146
  %150 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 2
  store i64 %149, i64* %150, align 8
  %151 = or i8 %114, 4
  store i8 %151, i8* %113, align 8
  br label %182

152:                                              ; preds = %136
  %153 = icmp ult %struct.AF_EdgeRec_* %119, %112
  br i1 %153, label %154, label %166

154:                                              ; preds = %152
  %155 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = sub nsw i64 %156, %158
  %160 = tail call fastcc i64 @af_cjk_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %29, i64 %159) #10
  %161 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = add nsw i64 %162, %160
  %164 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 0, i32 2
  store i64 %163, i64* %164, align 8
  %165 = or i8 %114, 4
  store i8 %165, i8* %113, align 8
  br label %182

166:                                              ; preds = %152
  %167 = icmp ne %struct.AF_EdgeRec_* %111, null
  %168 = or i1 %47, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = tail call fastcc i64 @af_hint_normal_stem(%struct.AF_GlyphHintsRec_* %1, %struct.AF_EdgeRec_* %112, %struct.AF_EdgeRec_* nonnull %119, i64 0, i32 0) #10
  br label %173

171:                                              ; preds = %166
  %172 = tail call fastcc i64 @af_hint_normal_stem(%struct.AF_GlyphHintsRec_* %1, %struct.AF_EdgeRec_* %112, %struct.AF_EdgeRec_* nonnull %119, i64 %110, i32 %29) #10
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi i64 [ %110, %171 ], [ %170, %169 ]
  %175 = load i8, i8* %113, align 8
  %176 = or i8 %175, 4
  store i8 %176, i8* %113, align 8
  %177 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 3
  %178 = load i8, i8* %177, align 8
  %179 = or i8 %178, 4
  store i8 %179, i8* %177, align 8
  %180 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %119, i64 0, i32 2
  %181 = load i64, i64* %180, align 8
  br label %182

182:                                              ; preds = %173, %154, %140, %134, %121, %106
  %183 = phi %struct.AF_EdgeRec_* [ %111, %134 ], [ %111, %140 ], [ %111, %154 ], [ %112, %173 ], [ %111, %121 ], [ %111, %106 ]
  %184 = phi i64 [ %110, %134 ], [ %110, %140 ], [ %110, %154 ], [ %174, %173 ], [ %110, %121 ], [ %110, %106 ]
  %185 = phi i32 [ %135, %134 ], [ %109, %140 ], [ %109, %154 ], [ %109, %173 ], [ %122, %121 ], [ %109, %106 ]
  %186 = phi i8 [ %108, %134 ], [ %108, %140 ], [ 1, %154 ], [ 1, %173 ], [ %108, %121 ], [ %108, %106 ]
  %187 = phi i64 [ %107, %134 ], [ %107, %140 ], [ %163, %154 ], [ %181, %173 ], [ %107, %121 ], [ %107, %106 ]
  %188 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %112, i64 1
  %189 = icmp ult %struct.AF_EdgeRec_* %188, %44
  br i1 %189, label %106, label %190

190:                                              ; preds = %182, %38
  %191 = phi i32 [ 0, %38 ], [ %185, %182 ]
  %192 = icmp eq i64 %28, 0
  br i1 %192, label %193, label %264

193:                                              ; preds = %190
  %194 = icmp eq i32 %42, 12
  switch i32 %42, label %264 [
    i32 6, label %197
    i32 12, label %195
  ]

195:                                              ; preds = %193
  %196 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 1
  br label %197

197:                                              ; preds = %193, %195
  %198 = phi i64 [ 5, %195 ], [ 2, %193 ]
  %199 = phi i64 [ 9, %195 ], [ 4, %193 ]
  %200 = phi %struct.AF_EdgeRec_* [ %196, %195 ], [ %40, %193 ]
  %201 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 1
  %202 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %198, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %200, i64 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = sub nsw i64 %203, %205
  %207 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %199, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = sub i64 %203, %208
  %210 = add i64 %209, %206
  %211 = icmp slt i64 %210, 0
  %212 = sub nsw i64 0, %210
  %213 = select i1 %211, i64 %212, i64 %210
  %214 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %200, i64 0, i32 7
  %215 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %214, align 8
  %216 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %200, i64 1
  %217 = icmp eq %struct.AF_EdgeRec_* %215, %216
  br i1 %217, label %218, label %264

218:                                              ; preds = %197
  %219 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 1
  %220 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %198, i32 7
  %221 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %220, align 8
  %222 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %219, i64 %198
  %223 = icmp eq %struct.AF_EdgeRec_* %221, %222
  br i1 %223, label %224, label %264

224:                                              ; preds = %218
  %225 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %199, i32 7
  %226 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %225, align 8
  %227 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %201, i64 %199
  %228 = icmp eq %struct.AF_EdgeRec_* %226, %227
  %229 = icmp slt i64 %213, 8
  %230 = and i1 %229, %228
  br i1 %230, label %231, label %264

231:                                              ; preds = %224
  %232 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %199, i32 2
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %198, i32 2
  %235 = load i64, i64* %234, align 8
  %236 = shl nsw i64 %235, 1
  %237 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %200, i64 0, i32 2
  %238 = load i64, i64* %237, align 8
  %239 = sub nsw i64 %236, %238
  %240 = sub nsw i64 %233, %239
  store i64 %239, i64* %232, align 8
  %241 = icmp eq %struct.AF_EdgeRec_* %226, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %231
  %243 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %226, i64 0, i32 2
  %244 = load i64, i64* %243, align 8
  %245 = sub nsw i64 %244, %240
  store i64 %245, i64* %243, align 8
  br label %246

246:                                              ; preds = %242, %231
  br i1 %194, label %247, label %254

247:                                              ; preds = %246
  %248 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 8, i32 2
  %249 = load i64, i64* %248, align 8
  %250 = sub nsw i64 %249, %240
  store i64 %250, i64* %248, align 8
  %251 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 11, i32 2
  %252 = load i64, i64* %251, align 8
  %253 = sub nsw i64 %252, %240
  store i64 %253, i64* %251, align 8
  br label %254

254:                                              ; preds = %247, %246
  %255 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %40, i64 %199, i32 3
  %256 = load i8, i8* %255, align 8
  %257 = or i8 %256, 4
  store i8 %257, i8* %255, align 8
  %258 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %225, align 8
  %259 = icmp eq %struct.AF_EdgeRec_* %258, null
  br i1 %259, label %264, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %258, i64 0, i32 3
  %262 = load i8, i8* %261, align 8
  %263 = or i8 %262, 4
  store i8 %263, i8* %261, align 8
  br label %264

264:                                              ; preds = %260, %254, %224, %218, %197, %193, %190
  %265 = icmp eq i32 %191, 0
  %266 = xor i1 %45, true
  %267 = or i1 %265, %266
  br i1 %267, label %378, label %268

268:                                              ; preds = %264, %291
  %269 = phi i32 [ %292, %291 ], [ %191, %264 ]
  %270 = phi %struct.AF_EdgeRec_* [ %293, %291 ], [ %40, %264 ]
  %271 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %270, i64 0, i32 3
  %272 = load i8, i8* %271, align 8
  %273 = and i8 %272, 4
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %291

275:                                              ; preds = %268
  %276 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %270, i64 0, i32 8
  %277 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %276, align 8
  %278 = icmp eq %struct.AF_EdgeRec_* %277, null
  br i1 %278, label %291, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %277, i64 0, i32 2
  %281 = load i64, i64* %280, align 8
  %282 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %270, i64 0, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %277, i64 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = add i64 %283, %281
  %287 = sub i64 %286, %285
  %288 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %270, i64 0, i32 2
  store i64 %287, i64* %288, align 8
  %289 = or i8 %272, 4
  store i8 %289, i8* %271, align 8
  %290 = add nsw i32 %269, -1
  br label %291

291:                                              ; preds = %279, %275, %268
  %292 = phi i32 [ %269, %268 ], [ %290, %279 ], [ %269, %275 ]
  %293 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %270, i64 1
  %294 = icmp ult %struct.AF_EdgeRec_* %293, %44
  br i1 %294, label %268, label %295

295:                                              ; preds = %291
  %296 = icmp ne i32 %292, 0
  %297 = and i1 %45, %296
  br i1 %297, label %298, label %378

298:                                              ; preds = %295, %375
  %299 = phi %struct.AF_EdgeRec_* [ %376, %375 ], [ %40, %295 ]
  %300 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 3
  %301 = load i8, i8* %300, align 8
  %302 = and i8 %301, 4
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %375

304:                                              ; preds = %298, %308
  %305 = phi %struct.AF_EdgeRec_* [ %306, %308 ], [ %299, %298 ]
  %306 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %305, i64 -1
  %307 = icmp ult %struct.AF_EdgeRec_* %306, %40
  br i1 %307, label %313, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %305, i64 -1, i32 3
  %310 = load i8, i8* %309, align 8
  %311 = and i8 %310, 4
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %304, label %313

313:                                              ; preds = %308, %304
  %314 = phi i1 [ false, %308 ], [ true, %304 ]
  %315 = phi i1 [ true, %308 ], [ false, %304 ]
  br label %316

316:                                              ; preds = %320, %313
  %317 = phi %struct.AF_EdgeRec_* [ %299, %313 ], [ %318, %320 ]
  %318 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %317, i64 1
  %319 = icmp ult %struct.AF_EdgeRec_* %318, %44
  br i1 %319, label %320, label %325

320:                                              ; preds = %316
  %321 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %317, i64 1, i32 3
  %322 = load i8, i8* %321, align 8
  %323 = and i8 %322, 4
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %316, label %326

325:                                              ; preds = %316
  br i1 %315, label %326, label %375

326:                                              ; preds = %320, %325
  %327 = phi i1 [ false, %325 ], [ true, %320 ]
  br i1 %314, label %328, label %338

328:                                              ; preds = %326
  %329 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %317, i64 1, i32 2
  %330 = load i64, i64* %329, align 8
  %331 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 1
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %317, i64 1, i32 1
  %334 = load i64, i64* %333, align 8
  %335 = add i64 %332, %330
  %336 = sub i64 %335, %334
  %337 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 2
  store i64 %336, i64* %337, align 8
  br label %375

338:                                              ; preds = %326
  br i1 %327, label %349, label %339

339:                                              ; preds = %338
  %340 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %305, i64 -1, i32 2
  %341 = load i64, i64* %340, align 8
  %342 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 1
  %343 = load i64, i64* %342, align 8
  %344 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %305, i64 -1, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = add i64 %343, %341
  %347 = sub i64 %346, %345
  %348 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 2
  store i64 %347, i64* %348, align 8
  br label %375

349:                                              ; preds = %338
  %350 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %318, i64 0, i32 0
  %351 = load i16, i16* %350, align 8
  %352 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %306, i64 0, i32 0
  %353 = load i16, i16* %352, align 8
  %354 = sext i16 %353 to i32
  %355 = icmp eq i16 %351, %353
  %356 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %305, i64 -1, i32 2
  %357 = load i64, i64* %356, align 8
  br i1 %355, label %358, label %360

358:                                              ; preds = %349
  %359 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 2
  store i64 %357, i64* %359, align 8
  br label %375

360:                                              ; preds = %349
  %361 = sext i16 %351 to i32
  %362 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 0
  %363 = load i16, i16* %362, align 8
  %364 = sext i16 %363 to i32
  %365 = sub nsw i32 %364, %354
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %317, i64 1, i32 2
  %368 = load i64, i64* %367, align 8
  %369 = sub nsw i64 %368, %357
  %370 = sub nsw i32 %361, %354
  %371 = sext i32 %370 to i64
  %372 = tail call i64 @FT_MulDiv(i64 %366, i64 %369, i64 %371) #10
  %373 = add nsw i64 %372, %357
  %374 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 0, i32 2
  store i64 %373, i64* %374, align 8
  br label %375

375:                                              ; preds = %360, %358, %339, %328, %325, %298
  %376 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %299, i64 1
  %377 = icmp ult %struct.AF_EdgeRec_* %376, %44
  br i1 %377, label %298, label %378

378:                                              ; preds = %375, %264, %295
  %379 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %39, align 8
  %380 = load i32, i32* %41, align 8
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %379, i64 %381
  br i1 %192, label %383, label %387

383:                                              ; preds = %378
  %384 = load i32, i32* %26, align 4
  %385 = trunc i32 %384 to i8
  %386 = and i8 %385, 1
  br label %394

387:                                              ; preds = %378
  %388 = icmp eq i64 %28, 1
  br i1 %388, label %389, label %394

389:                                              ; preds = %387
  %390 = load i32, i32* %26, align 4
  %391 = lshr i32 %390, 1
  %392 = trunc i32 %391 to i8
  %393 = and i8 %392, 1
  br label %394

394:                                              ; preds = %389, %387, %383
  %395 = phi i8 [ 0, %387 ], [ %393, %389 ], [ %386, %383 ]
  %396 = icmp sgt i32 %380, 0
  br i1 %396, label %397, label %460

397:                                              ; preds = %394
  %398 = icmp eq i8 %395, 0
  %399 = select i1 %192, i16 4, i16 8
  %400 = select i1 %192, i16 4, i16 8
  br label %401

401:                                              ; preds = %457, %397
  %402 = phi %struct.AF_EdgeRec_* [ %379, %397 ], [ %458, %457 ]
  %403 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %402, i64 0, i32 10
  %404 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %403, align 8
  %405 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %402, i64 0, i32 2
  br i1 %398, label %428, label %406

406:                                              ; preds = %401, %423
  %407 = phi %struct.AF_SegmentRec_* [ %425, %423 ], [ %404, %401 ]
  %408 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %407, i64 0, i32 13
  %409 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %407, i64 0, i32 14
  br label %410

410:                                              ; preds = %410, %406
  %411 = phi %struct.AF_PointRec_** [ %408, %406 ], [ %422, %410 ]
  %412 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %411, align 8
  %413 = load i64, i64* %405, align 8
  %414 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %412, i64 0, i32 8
  %415 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %412, i64 0, i32 7
  %416 = select i1 %192, i64* %415, i64* %414
  store i64 %413, i64* %416, align 8
  %417 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %412, i64 0, i32 0
  %418 = load i16, i16* %417, align 8
  %419 = or i16 %418, %399
  store i16 %419, i16* %417, align 8
  %420 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %409, align 8
  %421 = icmp eq %struct.AF_PointRec_* %412, %420
  %422 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %412, i64 0, i32 11
  br i1 %421, label %423, label %410

423:                                              ; preds = %410
  %424 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %407, i64 0, i32 8
  %425 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %424, align 8
  %426 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %403, align 8
  %427 = icmp eq %struct.AF_SegmentRec_* %425, %426
  br i1 %427, label %457, label %406

428:                                              ; preds = %401
  %429 = load i64, i64* %405, align 8
  %430 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %402, i64 0, i32 1
  %431 = load i64, i64* %430, align 8
  %432 = sub nsw i64 %429, %431
  br label %433

433:                                              ; preds = %452, %428
  %434 = phi %struct.AF_SegmentRec_* [ %404, %428 ], [ %454, %452 ]
  %435 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %434, i64 0, i32 13
  %436 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %434, i64 0, i32 14
  br label %437

437:                                              ; preds = %437, %433
  %438 = phi %struct.AF_PointRec_** [ %435, %433 ], [ %451, %437 ]
  %439 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %438, align 8
  %440 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %439, i64 0, i32 8
  %441 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %439, i64 0, i32 7
  %442 = select i1 %192, i64* %441, i64* %440
  %443 = select i1 %192, i64* %441, i64* %440
  %444 = load i64, i64* %442, align 8
  %445 = add nsw i64 %444, %432
  store i64 %445, i64* %443, align 8
  %446 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %439, i64 0, i32 0
  %447 = load i16, i16* %446, align 8
  %448 = or i16 %447, %400
  store i16 %448, i16* %446, align 8
  %449 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %436, align 8
  %450 = icmp eq %struct.AF_PointRec_* %439, %449
  %451 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %439, i64 0, i32 11
  br i1 %450, label %452, label %437

452:                                              ; preds = %437
  %453 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %434, i64 0, i32 8
  %454 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %453, align 8
  %455 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %403, align 8
  %456 = icmp eq %struct.AF_SegmentRec_* %454, %455
  br i1 %456, label %457, label %433

457:                                              ; preds = %423, %452
  %458 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %402, i64 1
  %459 = icmp ult %struct.AF_EdgeRec_* %458, %382
  br i1 %459, label %401, label %460

460:                                              ; preds = %457, %394
  tail call fastcc void @af_glyph_hints_align_strong_points(%struct.AF_GlyphHintsRec_* %1, i32 %29)
  tail call fastcc void @af_glyph_hints_align_weak_points(%struct.AF_GlyphHintsRec_* %1, i32 %29)
  br label %461

461:                                              ; preds = %30, %27, %34, %460
  %462 = add nuw nsw i64 %28, 1
  %463 = icmp eq i64 %462, 2
  br i1 %463, label %464, label %27

464:                                              ; preds = %461
  %465 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 7
  %466 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %465, align 8
  %467 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 6
  %468 = load i32, i32* %467, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %466, i64 %469
  %471 = icmp sgt i32 %468, 0
  br i1 %471, label %472, label %502

472:                                              ; preds = %464
  %473 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 3
  %474 = load i8*, i8** %473, align 8
  %475 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  %476 = load %struct.FT_Vector_*, %struct.FT_Vector_** %475, align 8
  br label %477

477:                                              ; preds = %496, %472
  %478 = phi i8* [ %500, %496 ], [ %474, %472 ]
  %479 = phi %struct.FT_Vector_* [ %499, %496 ], [ %476, %472 ]
  %480 = phi %struct.AF_PointRec_* [ %498, %496 ], [ %466, %472 ]
  %481 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %480, i64 0, i32 7
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %479, i64 0, i32 0
  store i64 %482, i64* %483, align 8
  %484 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %480, i64 0, i32 8
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %479, i64 0, i32 1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %480, i64 0, i32 0
  %488 = load i16, i16* %487, align 8
  %489 = zext i16 %488 to i32
  %490 = and i32 %489, 1
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %496

492:                                              ; preds = %477
  %493 = and i32 %489, 2
  %494 = icmp eq i32 %493, 0
  %495 = select i1 %494, i8 1, i8 2
  br label %496

496:                                              ; preds = %492, %477
  %497 = phi i8 [ 0, %477 ], [ %495, %492 ]
  store i8 %497, i8* %478, align 1
  %498 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %480, i64 1
  %499 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %479, i64 1
  %500 = getelementptr inbounds i8, i8* %478, i64 1
  %501 = icmp ult %struct.AF_PointRec_* %498, %470
  br i1 %501, label %477, label %502

502:                                              ; preds = %496, %464, %21, %12, %4
  %503 = phi i32 [ %5, %4 ], [ %22, %21 ], [ %13, %12 ], [ 0, %464 ], [ 0, %496 ]
  ret i32 %503
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @af_dummy_hints_init(%struct.AF_GlyphHintsRec_* nocapture, %struct.AF_StyleMetricsRec_*) #1 {
  %3 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %1, %struct.AF_StyleMetricsRec_** %3, align 8
  %4 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 1, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 12
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 1, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 1, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 1, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 4
  store i64 %17, i64* %18, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_dummy_hints_apply(i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_* nocapture readnone) #0 {
  %5 = tail call fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_* %1, %struct.FT_Outline_* %2)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %45

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 7
  %9 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %8, align 8
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %9, i64 %12
  %14 = icmp sgt i32 %11, 0
  br i1 %14, label %15, label %45

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  %19 = load %struct.FT_Vector_*, %struct.FT_Vector_** %18, align 8
  br label %20

20:                                               ; preds = %39, %15
  %21 = phi i8* [ %43, %39 ], [ %17, %15 ]
  %22 = phi %struct.FT_Vector_* [ %42, %39 ], [ %19, %15 ]
  %23 = phi %struct.AF_PointRec_* [ %41, %39 ], [ %9, %15 ]
  %24 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %23, i64 0, i32 7
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %23, i64 0, i32 8
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 0, i32 1
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %23, i64 0, i32 0
  %31 = load i16, i16* %30, align 8
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %20
  %36 = and i32 %32, 2
  %37 = icmp eq i32 %36, 0
  %38 = select i1 %37, i8 1, i8 2
  br label %39

39:                                               ; preds = %35, %20
  %40 = phi i8 [ 0, %20 ], [ %38, %35 ]
  store i8 %40, i8* %21, align 1
  %41 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %23, i64 1
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 1
  %43 = getelementptr inbounds i8, i8* %21, i64 1
  %44 = icmp ult %struct.AF_PointRec_* %41, %13
  br i1 %44, label %20, label %45

45:                                               ; preds = %39, %7, %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_indic_metrics_init(%struct.AF_CJKMetricsRec_* nocapture, %struct.FT_FaceRec_*) #0 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 23
  %4 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 8
  %9 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %1, i32 1970170211) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  store %struct.FT_CharMapRec_* null, %struct.FT_CharMapRec_** %3, align 8
  br label %13

12:                                               ; preds = %2
  tail call fastcc void @af_cjk_metrics_init_widths(%struct.AF_CJKMetricsRec_* %0, %struct.FT_FaceRec_* %1)
  tail call fastcc void @af_cjk_metrics_check_digits(%struct.AF_CJKMetricsRec_* %0, %struct.FT_FaceRec_* %1)
  br label %13

13:                                               ; preds = %12, %11
  %14 = tail call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %1, %struct.FT_CharMapRec_* %4) #10
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @af_indic_metrics_scale(%struct.AF_CJKMetricsRec_* nocapture, %struct.AF_ScalerRec_* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.AF_ScalerRec_* %3 to i8*
  %5 = bitcast %struct.AF_ScalerRec_* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 48, i1 false) #10
  tail call fastcc void @af_cjk_metrics_scale_dim(%struct.AF_CJKMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 0) #10
  tail call fastcc void @af_cjk_metrics_scale_dim(%struct.AF_CJKMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @af_indic_get_standard_widths(%struct.AF_CJKMetricsRec_* nocapture readonly, i64*, i64*) #1 {
  %4 = icmp eq i64* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 5
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %1, align 8
  br label %8

8:                                                ; preds = %3, %5
  %9 = icmp eq i64* %2, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @af_indic_hints_init(%struct.AF_GlyphHintsRec_* nocapture, %struct.AF_CJKMetricsRec_*) #1 {
  %3 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0
  %4 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %3, %struct.AF_StyleMetricsRec_** %4, align 8
  %5 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0, i32 1, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 12
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 1, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 4
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 0, i32 1, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  %23 = or i32 %21, 1
  %24 = icmp eq i32 %23, 3
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %21, 4
  %27 = or i1 %22, %26
  %28 = or i32 %25, 2
  %29 = select i1 %27, i32 %28, i32 %25
  %30 = or i32 %21, 2
  %31 = icmp eq i32 %30, 3
  %32 = or i32 %29, 4
  %33 = select i1 %31, i32 %29, i32 %32
  %34 = or i32 %33, 8
  %35 = select i1 %22, i32 %34, i32 %33
  %36 = or i32 %6, 4
  store i32 %36, i32* %7, align 8
  %37 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  store i32 %35, i32* %37, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_indic_hints_apply(i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_CJKMetricsRec_*) #0 {
  %5 = tail call i32 @af_cjk_hints_apply(i32 %0, %struct.AF_GlyphHintsRec_* %1, %struct.FT_Outline_* %2, %struct.AF_CJKMetricsRec_* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_latin_metrics_init(%struct.AF_LatinMetricsRec_*, %struct.FT_FaceRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [51 x i64], align 16
  %7 = alloca [51 x i64], align 16
  %8 = alloca i32, align 4
  %9 = alloca [10 x %struct.AF_LatinBlueRec_*], align 16
  %10 = alloca i32, align 4
  %11 = alloca [1 x %struct.AF_GlyphHintsRec_], align 16
  %12 = alloca [1 x %struct.AF_LatinMetricsRec_], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 23
  %16 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 1
  store i32 %19, i32* %20, align 8
  %21 = tail call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %1, i32 1970170211) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %1082

23:                                               ; preds = %2
  %24 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12920, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 12920, i1 false) #10
  %25 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %27 = bitcast %struct.FT_MemoryRec_** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 1
  %30 = bitcast i64* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 5168, i1 false) #10
  %31 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %11 to i64*
  store i64 %28, i64* %31, align 16
  %32 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 2
  store i32 0, i32* %33, align 8
  %34 = bitcast [1 x %struct.AF_LatinMetricsRec_]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 39280, i8* nonnull %34) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 39280, i1 false) #10
  %35 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0
  %36 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 0
  %37 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %36, align 8
  %38 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [61 x %struct.AF_ScriptClassRec_*], [61 x %struct.AF_ScriptClassRec_*]* @af_script_classes, i64 0, i64 %40
  %42 = load %struct.AF_ScriptClassRec_*, %struct.AF_ScriptClassRec_** %41, align 8
  %43 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %42, i64 0, i32 4
  %44 = load i8*, i8** %43, align 8
  %45 = tail call %struct.hb_buffer_t* @hb_buffer_create() #10
  %46 = bitcast %struct.hb_buffer_t* %45 to i8*
  %47 = load i8, i8* %44, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %23
  %50 = bitcast i32* %13 to i8*
  %51 = bitcast i32* %10 to i8*
  br label %52

52:                                               ; preds = %79, %49
  %53 = phi i8 [ %47, %49 ], [ %80, %79 ]
  %54 = phi i8* [ %44, %49 ], [ %63, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #10
  store i32 -1431655766, i32* %13, align 4
  %55 = icmp eq i8 %53, 32
  br i1 %55, label %56, label %61

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %58, %56 ], [ %54, %52 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 32
  br i1 %60, label %56, label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %54, %52 ], [ %58, %56 ]
  %63 = call i8* @af_shaper_get_cluster(i8* %62, %struct.AF_StyleMetricsRec_* %35, i8* %46, i32* nonnull %13) #10
  %64 = load i32, i32* %13, align 4
  %65 = icmp ugt i32 %64, 1
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #10
  store i32 -1431655766, i32* %10, align 4
  %67 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %45, i32* nonnull %10) #10
  %68 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %45, i32* nonnull %10) #10
  %69 = load i32, i32* %10, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #10
  br label %79

72:                                               ; preds = %66
  %73 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %67, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #10
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #10
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %45) #10
  %77 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %1, i32 %74, i32 1) #10
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %158

79:                                               ; preds = %72, %71, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #10
  %80 = load i8, i8* %63, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %52

82:                                               ; preds = %79, %23
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %45) #10
  br label %158

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 21
  %85 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %84, align 8
  %86 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %85, i64 0, i32 13, i32 1
  %87 = load i16, i16* %86, align 2
  %88 = icmp slt i16 %87, 1
  br i1 %88, label %158, label %89

89:                                               ; preds = %83
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 0, i64 39280, i1 false) #10
  %90 = load i32, i32* %20, align 8
  %91 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 1
  store i32 %90, i32* %91, align 8
  %92 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0, i32 1, i32 1
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 65536>, <2 x i64>* %93, align 8
  %94 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0, i32 1, i32 3
  %95 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0, i32 1, i32 0
  %96 = bitcast i64* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #10
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %95, align 8
  %97 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0, i32 1, i32 5
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0, i32 1, i32 6
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds [1 x %struct.AF_LatinMetricsRec_], [1 x %struct.AF_LatinMetricsRec_]* %12, i64 0, i64 0, i32 0
  %100 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %99, %struct.AF_StyleMetricsRec_** %100, align 16
  %101 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 12
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %85, i64 0, i32 13
  %103 = call fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_* nonnull %25, %struct.FT_Outline_* %102) #10
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %158

105:                                              ; preds = %89
  %106 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #10
  store i32 0, i32* %14, align 4
  %107 = call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* nonnull %25, i32 0) #10
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %157

109:                                              ; preds = %105
  call fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* nonnull %25, i32 0, %struct.AF_WidthRec_* null, i32 0) #10
  %110 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 11, i64 0, i32 2
  %111 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %110, align 8
  %112 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 11, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %111, i64 %114
  %116 = icmp sgt i32 %113, 0
  br i1 %116, label %117, label %149

117:                                              ; preds = %109, %145
  %118 = phi i32 [ %146, %145 ], [ 0, %109 ]
  %119 = phi %struct.AF_SegmentRec_* [ %147, %145 ], [ %111, %109 ]
  %120 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %119, i64 0, i32 9
  %121 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %120, align 8
  %122 = icmp eq %struct.AF_SegmentRec_* %121, null
  br i1 %122, label %145, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 9
  %125 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %124, align 8
  %126 = icmp eq %struct.AF_SegmentRec_* %125, %119
  %127 = icmp ugt %struct.AF_SegmentRec_* %121, %119
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %145

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %119, i64 0, i32 2
  %131 = load i16, i16* %130, align 2
  %132 = sext i16 %131 to i64
  %133 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 2
  %134 = load i16, i16* %133, align 2
  %135 = sext i16 %134 to i64
  %136 = sub nsw i64 %132, %135
  %137 = icmp ult i32 %118, 16
  br i1 %137, label %138, label %145

138:                                              ; preds = %129
  %139 = icmp slt i64 %136, 0
  %140 = sub nsw i64 0, %136
  %141 = select i1 %139, i64 %140, i64 %136
  %142 = add nuw nsw i32 %118, 1
  store i32 %142, i32* %14, align 4
  %143 = zext i32 %118 to i64
  %144 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 %143, i32 0
  store i64 %141, i64* %144, align 8
  br label %145

145:                                              ; preds = %138, %129, %123, %117
  %146 = phi i32 [ %118, %129 ], [ %142, %138 ], [ %118, %117 ], [ %118, %123 ]
  %147 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %119, i64 1
  %148 = icmp ult %struct.AF_SegmentRec_* %147, %115
  br i1 %148, label %117, label %149

149:                                              ; preds = %145, %109
  %150 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 0
  %151 = load i32, i32* %91, align 8
  %152 = udiv i32 %151, 100
  %153 = zext i32 %152 to i64
  call fastcc void @af_sort_and_quantize_widths(i32* nonnull %14, %struct.AF_WidthRec_* %150, i64 %153) #10
  %154 = load i32, i32* %14, align 4
  store i32 %154, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #10
  store i32 0, i32* %14, align 4
  %155 = call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* nonnull %25, i32 1) #10
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %185, label %157

157:                                              ; preds = %149, %105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  br label %158

158:                                              ; preds = %225, %157, %89, %83, %82, %76
  %159 = load i32, i32* %32, align 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 0, i32 0
  %163 = load i64, i64* %162, align 8
  br label %169

164:                                              ; preds = %158
  %165 = load i32, i32* %20, align 8
  %166 = zext i32 %165 to i64
  %167 = mul nuw nsw i64 %166, 50
  %168 = lshr i64 %167, 11
  br label %169

169:                                              ; preds = %164, %161
  %170 = phi i64 [ %163, %161 ], [ %168, %164 ]
  %171 = sdiv i64 %170, 5
  %172 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 4
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 5
  store i64 %170, i64* %173, align 8
  %174 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 6
  store i8 0, i8* %174, align 8
  %175 = load i32, i32* %33, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 0, i32 0
  %179 = load i64, i64* %178, align 8
  br label %231

180:                                              ; preds = %169
  %181 = load i32, i32* %20, align 8
  %182 = zext i32 %181 to i64
  %183 = mul nuw nsw i64 %182, 50
  %184 = lshr i64 %183, 11
  br label %231

185:                                              ; preds = %149
  call fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* nonnull %25, i32 0, %struct.AF_WidthRec_* null, i32 1) #10
  %186 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 11, i64 1, i32 2
  %187 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %186, align 8
  %188 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %11, i64 0, i64 0, i32 11, i64 1, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %187, i64 %190
  %192 = icmp sgt i32 %189, 0
  br i1 %192, label %193, label %225

193:                                              ; preds = %185, %221
  %194 = phi i32 [ %222, %221 ], [ 0, %185 ]
  %195 = phi %struct.AF_SegmentRec_* [ %223, %221 ], [ %187, %185 ]
  %196 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %195, i64 0, i32 9
  %197 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %196, align 8
  %198 = icmp eq %struct.AF_SegmentRec_* %197, null
  br i1 %198, label %221, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %197, i64 0, i32 9
  %201 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %200, align 8
  %202 = icmp eq %struct.AF_SegmentRec_* %201, %195
  %203 = icmp ugt %struct.AF_SegmentRec_* %197, %195
  %204 = and i1 %203, %202
  br i1 %204, label %205, label %221

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %195, i64 0, i32 2
  %207 = load i16, i16* %206, align 2
  %208 = sext i16 %207 to i64
  %209 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %197, i64 0, i32 2
  %210 = load i16, i16* %209, align 2
  %211 = sext i16 %210 to i64
  %212 = sub nsw i64 %208, %211
  %213 = icmp ult i32 %194, 16
  br i1 %213, label %214, label %221

214:                                              ; preds = %205
  %215 = icmp slt i64 %212, 0
  %216 = sub nsw i64 0, %212
  %217 = select i1 %215, i64 %216, i64 %212
  %218 = add nuw nsw i32 %194, 1
  store i32 %218, i32* %14, align 4
  %219 = zext i32 %194 to i64
  %220 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 %219, i32 0
  store i64 %217, i64* %220, align 8
  br label %221

221:                                              ; preds = %214, %205, %199, %193
  %222 = phi i32 [ %218, %214 ], [ %194, %205 ], [ %194, %199 ], [ %194, %193 ]
  %223 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %195, i64 1
  %224 = icmp ult %struct.AF_SegmentRec_* %223, %191
  br i1 %224, label %193, label %225

225:                                              ; preds = %221, %185
  %226 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 0
  %227 = load i32, i32* %91, align 8
  %228 = udiv i32 %227, 100
  %229 = zext i32 %228 to i64
  call fastcc void @af_sort_and_quantize_widths(i32* nonnull %14, %struct.AF_WidthRec_* %226, i64 %229) #10
  %230 = load i32, i32* %14, align 4
  store i32 %230, i32* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  br label %158

231:                                              ; preds = %177, %180
  %232 = phi i64 [ %179, %177 ], [ %184, %180 ]
  %233 = sdiv i64 %232, 5
  %234 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 4
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 5
  store i64 %232, i64* %235, align 8
  %236 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 6
  store i8 0, i8* %236, align 8
  call void @llvm.lifetime.end.p0i8(i64 39280, i8* nonnull %34) #10
  call fastcc void @af_glyph_hints_done(%struct.AF_GlyphHintsRec_* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 12920, i8* nonnull %24) #10
  %237 = bitcast [51 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %237) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %237, i8 -86, i64 408, i1 false) #10
  %238 = bitcast [51 x i64]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %238) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %238, i8 -86, i64 408, i1 false) #10
  %239 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %36, align 8
  %240 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %239, i64 0, i32 3
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [265 x %struct.AF_Blue_StringRec_], [265 x %struct.AF_Blue_StringRec_]* @af_blue_stringsets, i64 0, i64 %242
  %244 = load i32, i32* %20, align 8
  %245 = udiv i32 %244, 14
  %246 = zext i32 %245 to i64
  %247 = call %struct.hb_buffer_t* @hb_buffer_create() #10
  %248 = bitcast %struct.hb_buffer_t* %247 to i8*
  %249 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %243, i64 0, i32 0
  %250 = load i32, i32* %249, align 8
  %251 = icmp eq i32 %250, 5531
  br i1 %251, label %876, label %252

252:                                              ; preds = %231
  %253 = bitcast i32* %8 to i8*
  %254 = bitcast i32* %5 to i8*
  %255 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 21
  %256 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 7
  br label %257

257:                                              ; preds = %871, %252
  %258 = phi i32 [ %250, %252 ], [ %874, %871 ]
  %259 = phi %struct.AF_Blue_StringRec_* [ %243, %252 ], [ %872, %871 ]
  %260 = zext i32 %258 to i64
  %261 = getelementptr inbounds [5531 x i8], [5531 x i8]* @af_blue_strings, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %753, label %264

264:                                              ; preds = %257
  %265 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %259, i64 0, i32 1
  br label %266

266:                                              ; preds = %746, %264
  %267 = phi i8 [ %262, %264 ], [ %751, %746 ]
  %268 = phi i64 [ 0, %264 ], [ %750, %746 ]
  %269 = phi i64 [ 0, %264 ], [ %749, %746 ]
  %270 = phi i8* [ %261, %264 ], [ %281, %746 ]
  %271 = phi i32 [ 0, %264 ], [ %748, %746 ]
  %272 = phi i32 [ 0, %264 ], [ %747, %746 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #10
  store i32 -1431655766, i32* %8, align 4
  %273 = icmp eq i8 %267, 32
  br i1 %273, label %274, label %279

274:                                              ; preds = %266, %274
  %275 = phi i8* [ %276, %274 ], [ %270, %266 ]
  %276 = getelementptr inbounds i8, i8* %275, i64 1
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, 32
  br i1 %278, label %274, label %279

279:                                              ; preds = %274, %266
  %280 = phi i8* [ %270, %266 ], [ %276, %274 ]
  %281 = call i8* @af_shaper_get_cluster(i8* %280, %struct.AF_StyleMetricsRec_* %35, i8* %248, i32* nonnull %8) #10
  %282 = load i32, i32* %8, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %746, label %284

284:                                              ; preds = %279
  %285 = load i16, i16* %265, align 4
  %286 = and i16 %285, 1
  %287 = icmp eq i16 %286, 0
  %288 = select i1 %287, i64 2147483647, i64 -2147483648
  %289 = zext i32 %282 to i64
  br label %290

290:                                              ; preds = %728, %284
  %291 = phi i64 [ 0, %284 ], [ %733, %728 ]
  %292 = phi i8 [ 0, %284 ], [ %732, %728 ]
  %293 = phi i64 [ %288, %284 ], [ %731, %728 ]
  %294 = phi i64 [ %268, %284 ], [ %730, %728 ]
  %295 = phi i64 [ %269, %284 ], [ %729, %728 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %254) #10
  store i32 -1431655766, i32* %5, align 4
  %296 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %247, i32* nonnull %5) #10
  %297 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %247, i32* nonnull %5) #10
  %298 = load i32, i32* %5, align 4
  %299 = zext i32 %298 to i64
  %300 = icmp ult i64 %291, %299
  br i1 %300, label %302, label %301

301:                                              ; preds = %290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %254) #10
  br label %728

302:                                              ; preds = %290
  %303 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %297, i64 %291, i32 3
  %304 = load i32, i32* %303, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %296, i64 %291, i32 0
  %307 = load i32, i32* %306, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %254) #10
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %728, label %309

309:                                              ; preds = %302
  %310 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %1, i32 %307, i32 1) #10
  %311 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %255, align 8
  %312 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %311, i64 0, i32 13, i32 0
  %313 = load i16, i16* %312, align 8
  %314 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %311, i64 0, i32 13, i32 2
  %315 = load %struct.FT_Vector_*, %struct.FT_Vector_** %314, align 8
  %316 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %311, i64 0, i32 13, i32 3
  %317 = load i8*, i8** %316, align 8
  %318 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %311, i64 0, i32 13, i32 4
  %319 = load i16*, i16** %318, align 8
  %320 = icmp eq i32 %310, 0
  br i1 %320, label %321, label %728

321:                                              ; preds = %309
  %322 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %311, i64 0, i32 13, i32 1
  %323 = load i16, i16* %322, align 2
  %324 = icmp slt i16 %323, 3
  br i1 %324, label %728, label %325

325:                                              ; preds = %321
  %326 = icmp sgt i16 %313, 0
  br i1 %326, label %327, label %424

327:                                              ; preds = %325
  %328 = sext i16 %313 to i64
  %329 = and i64 %328, 4294967295
  br label %330

330:                                              ; preds = %412, %327
  %331 = phi i64 [ 0, %327 ], [ %420, %412 ]
  %332 = phi i32 [ 0, %327 ], [ %413, %412 ]
  %333 = phi i64 [ 0, %327 ], [ %419, %412 ]
  %334 = phi i32 [ 0, %327 ], [ %418, %412 ]
  %335 = phi i32 [ 0, %327 ], [ %417, %412 ]
  %336 = phi i32 [ -1, %327 ], [ %416, %412 ]
  %337 = phi i64 [ %294, %327 ], [ %415, %412 ]
  %338 = phi i64 [ %295, %327 ], [ %414, %412 ]
  %339 = getelementptr inbounds i16, i16* %319, i64 %331
  %340 = load i16, i16* %339, align 2
  %341 = sext i16 %340 to i32
  %342 = icmp slt i32 %332, %341
  br i1 %342, label %345, label %343

343:                                              ; preds = %330
  %344 = add nsw i32 %341, 1
  br label %412

345:                                              ; preds = %330
  %346 = load i16, i16* %265, align 4
  %347 = and i16 %346, 3
  %348 = icmp eq i16 %347, 0
  %349 = sext i32 %332 to i64
  %350 = add nsw i32 %341, 1
  %351 = sext i32 %350 to i64
  br i1 %348, label %378, label %352

352:                                              ; preds = %345, %371
  %353 = phi i64 [ %376, %371 ], [ %349, %345 ]
  %354 = phi i64 [ %375, %371 ], [ %333, %345 ]
  %355 = phi i32 [ %374, %371 ], [ %336, %345 ]
  %356 = phi i64 [ %373, %371 ], [ %337, %345 ]
  %357 = phi i64 [ %372, %371 ], [ %338, %345 ]
  %358 = icmp slt i32 %355, 0
  %359 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %353, i32 1
  %360 = load i64, i64* %359, align 8
  %361 = icmp sgt i64 %360, %354
  %362 = or i1 %358, %361
  %363 = add nsw i64 %360, %305
  br i1 %362, label %364, label %368

364:                                              ; preds = %352
  %365 = icmp sgt i64 %357, %363
  %366 = select i1 %365, i64 %357, i64 %363
  %367 = trunc i64 %353 to i32
  br label %371

368:                                              ; preds = %352
  %369 = icmp slt i64 %356, %363
  %370 = select i1 %369, i64 %356, i64 %363
  br label %371

371:                                              ; preds = %368, %364
  %372 = phi i64 [ %366, %364 ], [ %357, %368 ]
  %373 = phi i64 [ %356, %364 ], [ %370, %368 ]
  %374 = phi i32 [ %367, %364 ], [ %355, %368 ]
  %375 = phi i64 [ %360, %364 ], [ %354, %368 ]
  %376 = add nsw i64 %353, 1
  %377 = icmp eq i64 %376, %351
  br i1 %377, label %404, label %352

378:                                              ; preds = %345, %397
  %379 = phi i64 [ %402, %397 ], [ %349, %345 ]
  %380 = phi i64 [ %401, %397 ], [ %333, %345 ]
  %381 = phi i32 [ %400, %397 ], [ %336, %345 ]
  %382 = phi i64 [ %399, %397 ], [ %337, %345 ]
  %383 = phi i64 [ %398, %397 ], [ %338, %345 ]
  %384 = icmp slt i32 %381, 0
  %385 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %379, i32 1
  %386 = load i64, i64* %385, align 8
  %387 = icmp slt i64 %386, %380
  %388 = or i1 %384, %387
  %389 = add nsw i64 %386, %305
  br i1 %388, label %390, label %394

390:                                              ; preds = %378
  %391 = icmp slt i64 %382, %389
  %392 = select i1 %391, i64 %382, i64 %389
  %393 = trunc i64 %379 to i32
  br label %397

394:                                              ; preds = %378
  %395 = icmp sgt i64 %383, %389
  %396 = select i1 %395, i64 %383, i64 %389
  br label %397

397:                                              ; preds = %394, %390
  %398 = phi i64 [ %383, %390 ], [ %396, %394 ]
  %399 = phi i64 [ %392, %390 ], [ %382, %394 ]
  %400 = phi i32 [ %393, %390 ], [ %381, %394 ]
  %401 = phi i64 [ %386, %390 ], [ %380, %394 ]
  %402 = add nsw i64 %379, 1
  %403 = icmp eq i64 %402, %351
  br i1 %403, label %404, label %378

404:                                              ; preds = %371, %397
  %405 = phi i64 [ %398, %397 ], [ %372, %371 ]
  %406 = phi i64 [ %399, %397 ], [ %373, %371 ]
  %407 = phi i32 [ %400, %397 ], [ %374, %371 ]
  %408 = phi i64 [ %401, %397 ], [ %375, %371 ]
  %409 = icmp eq i32 %407, %336
  %410 = select i1 %409, i32 %335, i32 %332
  %411 = select i1 %409, i32 %334, i32 %341
  br label %412

412:                                              ; preds = %343, %404
  %413 = phi i32 [ %344, %343 ], [ %350, %404 ]
  %414 = phi i64 [ %338, %343 ], [ %405, %404 ]
  %415 = phi i64 [ %337, %343 ], [ %406, %404 ]
  %416 = phi i32 [ %336, %343 ], [ %407, %404 ]
  %417 = phi i32 [ %335, %343 ], [ %410, %404 ]
  %418 = phi i32 [ %334, %343 ], [ %411, %404 ]
  %419 = phi i64 [ %333, %343 ], [ %408, %404 ]
  %420 = add nuw nsw i64 %331, 1
  %421 = icmp eq i64 %420, %329
  br i1 %421, label %422, label %330

422:                                              ; preds = %412
  %423 = icmp sgt i32 %416, -1
  br i1 %423, label %429, label %424

424:                                              ; preds = %422, %325
  %425 = phi i64 [ %419, %422 ], [ 0, %325 ]
  %426 = phi i64 [ %415, %422 ], [ %294, %325 ]
  %427 = phi i64 [ %414, %422 ], [ %295, %325 ]
  %428 = load i16, i16* %265, align 4
  br label %712

429:                                              ; preds = %422
  %430 = sext i32 %416 to i64
  %431 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %430, i32 0
  %432 = load i64, i64* %431, align 8
  %433 = getelementptr inbounds i8, i8* %317, i64 %430
  %434 = load i8, i8* %433, align 1
  %435 = and i8 %434, 3
  %436 = icmp eq i8 %435, 1
  %437 = select i1 %436, i32 %416, i32 -1
  br label %438

438:                                              ; preds = %462, %429
  %439 = phi i32 [ %416, %429 ], [ %444, %462 ]
  %440 = phi i32 [ %437, %429 ], [ %468, %462 ]
  %441 = phi i32 [ %437, %429 ], [ %470, %462 ]
  %442 = icmp sgt i32 %439, %417
  %443 = add nsw i32 %439, -1
  %444 = select i1 %442, i32 %443, i32 %418
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %445, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = sub nsw i64 %447, %419
  %449 = icmp slt i64 %448, 0
  %450 = sub nsw i64 0, %448
  %451 = select i1 %449, i64 %450, i64 %448
  %452 = icmp sgt i64 %451, 5
  br i1 %452, label %453, label %462

453:                                              ; preds = %438
  %454 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %445, i32 0
  %455 = load i64, i64* %454, align 8
  %456 = sub nsw i64 %455, %432
  %457 = icmp slt i64 %456, 0
  %458 = sub nsw i64 0, %456
  %459 = select i1 %457, i64 %458, i64 %456
  %460 = mul nsw i64 %451, 20
  %461 = icmp sgt i64 %459, %460
  br i1 %461, label %462, label %472

462:                                              ; preds = %453, %438
  %463 = getelementptr inbounds i8, i8* %317, i64 %445
  %464 = load i8, i8* %463, align 1
  %465 = and i8 %464, 3
  %466 = icmp eq i8 %465, 1
  %467 = icmp slt i32 %441, 0
  %468 = select i1 %466, i32 %444, i32 %440
  %469 = and i1 %467, %466
  %470 = select i1 %469, i32 %444, i32 %441
  %471 = icmp eq i32 %444, %416
  br i1 %471, label %472, label %438

472:                                              ; preds = %462, %453
  %473 = phi i32 [ %439, %453 ], [ %416, %462 ]
  %474 = phi i32 [ %440, %453 ], [ %468, %462 ]
  %475 = phi i32 [ %441, %453 ], [ %470, %462 ]
  br label %476

476:                                              ; preds = %501, %472
  %477 = phi i32 [ %416, %472 ], [ %482, %501 ]
  %478 = phi i32 [ %474, %472 ], [ %508, %501 ]
  %479 = phi i32 [ %475, %472 ], [ %509, %501 ]
  %480 = icmp slt i32 %477, %418
  %481 = add nsw i32 %477, 1
  %482 = select i1 %480, i32 %481, i32 %417
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %483
  %485 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %483, i32 1
  %486 = load i64, i64* %485, align 8
  %487 = sub nsw i64 %486, %419
  %488 = icmp slt i64 %487, 0
  %489 = sub nsw i64 0, %487
  %490 = select i1 %488, i64 %489, i64 %487
  %491 = icmp sgt i64 %490, 5
  br i1 %491, label %492, label %501

492:                                              ; preds = %476
  %493 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %484, i64 0, i32 0
  %494 = load i64, i64* %493, align 8
  %495 = sub nsw i64 %494, %432
  %496 = icmp slt i64 %495, 0
  %497 = sub nsw i64 0, %495
  %498 = select i1 %496, i64 %497, i64 %495
  %499 = mul nsw i64 %490, 20
  %500 = icmp sgt i64 %498, %499
  br i1 %500, label %501, label %511

501:                                              ; preds = %492, %476
  %502 = getelementptr inbounds i8, i8* %317, i64 %483
  %503 = load i8, i8* %502, align 1
  %504 = and i8 %503, 3
  %505 = icmp eq i8 %504, 1
  %506 = icmp slt i32 %478, 0
  %507 = and i1 %506, %505
  %508 = select i1 %507, i32 %482, i32 %478
  %509 = select i1 %505, i32 %482, i32 %479
  %510 = icmp eq i32 %482, %416
  br i1 %510, label %511, label %476

511:                                              ; preds = %501, %492
  %512 = phi i32 [ %477, %492 ], [ %416, %501 ]
  %513 = phi i32 [ %478, %492 ], [ %508, %501 ]
  %514 = phi i32 [ %479, %492 ], [ %509, %501 ]
  %515 = load i16, i16* %265, align 4
  %516 = and i16 %515, 16
  %517 = icmp eq i16 %516, 0
  br i1 %517, label %676, label %518

518:                                              ; preds = %511
  %519 = load i32, i32* %20, align 8
  %520 = udiv i32 %519, 25
  %521 = zext i32 %520 to i64
  %522 = sext i32 %512 to i64
  %523 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %522, i32 0
  %524 = load i64, i64* %523, align 8
  %525 = sext i32 %473 to i64
  %526 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %525, i32 0
  %527 = load i64, i64* %526, align 8
  %528 = sub nsw i64 %524, %527
  %529 = icmp slt i64 %528, 0
  %530 = sub nsw i64 0, %528
  %531 = select i1 %529, i64 %530, i64 %528
  %532 = icmp slt i64 %531, %521
  br i1 %532, label %533, label %676

533:                                              ; preds = %518
  %534 = sub i32 2, %473
  %535 = add i32 %534, %512
  %536 = sub nsw i32 %418, %417
  %537 = icmp sgt i32 %535, %536
  br i1 %537, label %676, label %538

538:                                              ; preds = %533, %538
  %539 = phi i32 [ %542, %538 ], [ %416, %533 ]
  %540 = icmp sgt i32 %539, %417
  %541 = add nsw i32 %539, -1
  %542 = select i1 %540, i32 %541, i32 %418
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %543, i32 0
  %545 = load i64, i64* %544, align 8
  %546 = icmp ne i64 %545, %432
  %547 = icmp eq i32 %542, %416
  %548 = or i1 %546, %547
  br i1 %548, label %549, label %538

549:                                              ; preds = %538
  %550 = lshr i32 %519, 2
  %551 = zext i32 %550 to i64
  br i1 %547, label %728, label %552

552:                                              ; preds = %549
  %553 = icmp slt i64 %545, %432
  br label %554

554:                                              ; preds = %671, %552
  %555 = phi i32 [ %512, %552 ], [ %572, %671 ]
  %556 = phi i32 [ %512, %552 ], [ %578, %671 ]
  %557 = phi i8 [ 0, %552 ], [ %672, %671 ]
  %558 = phi i32 [ 0, %552 ], [ %673, %671 ]
  %559 = phi i32 [ 0, %552 ], [ %674, %671 ]
  %560 = icmp eq i8 %557, 0
  br i1 %560, label %563, label %561

561:                                              ; preds = %554
  %562 = sext i32 %555 to i64
  br label %570

563:                                              ; preds = %554
  %564 = sext i32 %556 to i64
  %565 = getelementptr inbounds i8, i8* %317, i64 %564
  %566 = load i8, i8* %565, align 1
  %567 = and i8 %566, 3
  %568 = icmp eq i8 %567, 1
  %569 = select i1 %568, i32 %556, i32 -1
  br label %570

570:                                              ; preds = %563, %561
  %571 = phi i64 [ %562, %561 ], [ %564, %563 ]
  %572 = phi i32 [ %555, %561 ], [ %556, %563 ]
  %573 = phi i8 [ %557, %561 ], [ 1, %563 ]
  %574 = phi i32 [ %558, %561 ], [ %569, %563 ]
  %575 = phi i32 [ %559, %561 ], [ %569, %563 ]
  %576 = icmp slt i32 %556, %418
  %577 = add nsw i32 %556, 1
  %578 = select i1 %576, i32 %577, i32 %417
  %579 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %571
  %580 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %571, i32 1
  %581 = load i64, i64* %580, align 8
  %582 = sub nsw i64 %419, %581
  %583 = icmp slt i64 %582, 0
  %584 = sub nsw i64 0, %582
  %585 = select i1 %583, i64 %584, i64 %582
  %586 = icmp sgt i64 %585, %551
  br i1 %586, label %671, label %587

587:                                              ; preds = %570
  %588 = sext i32 %578 to i64
  %589 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %588
  %590 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %588, i32 1
  %591 = load i64, i64* %590, align 8
  %592 = sub nsw i64 %591, %581
  %593 = icmp slt i64 %592, 0
  %594 = sub nsw i64 0, %592
  %595 = select i1 %593, i64 %594, i64 %592
  %596 = icmp sgt i64 %595, 5
  br i1 %596, label %603, label %597

597:                                              ; preds = %587
  %598 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %579, i64 0, i32 0
  %599 = load i64, i64* %598, align 8
  %600 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %589, i64 0, i32 0
  %601 = load i64, i64* %600, align 8
  %602 = sub nsw i64 %601, %599
  br label %614

603:                                              ; preds = %587
  %604 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %589, i64 0, i32 0
  %605 = load i64, i64* %604, align 8
  %606 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %579, i64 0, i32 0
  %607 = load i64, i64* %606, align 8
  %608 = sub nsw i64 %605, %607
  %609 = icmp slt i64 %608, 0
  %610 = sub nsw i64 0, %608
  %611 = select i1 %609, i64 %610, i64 %608
  %612 = mul nsw i64 %595, 20
  %613 = icmp sgt i64 %611, %612
  br i1 %613, label %614, label %671

614:                                              ; preds = %603, %597
  %615 = phi i64 [ %602, %597 ], [ %608, %603 ]
  %616 = phi i64 [ %601, %597 ], [ %605, %603 ]
  %617 = phi i64 [ %599, %597 ], [ %607, %603 ]
  %618 = getelementptr inbounds i8, i8* %317, i64 %588
  %619 = load i8, i8* %618, align 1
  %620 = and i8 %619, 3
  %621 = icmp eq i8 %620, 1
  %622 = icmp slt i32 %574, 0
  %623 = and i1 %622, %621
  %624 = select i1 %623, i32 %578, i32 %574
  %625 = select i1 %621, i32 %578, i32 %575
  %626 = icmp sle i64 %616, %617
  %627 = xor i1 %553, %626
  br i1 %627, label %628, label %671

628:                                              ; preds = %614
  %629 = icmp slt i64 %615, 0
  %630 = sub nsw i64 0, %615
  %631 = select i1 %629, i64 %630, i64 %615
  %632 = icmp slt i64 %631, %521
  br i1 %632, label %671, label %633

633:                                              ; preds = %628
  %634 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %484, i64 0, i32 0
  %635 = mul nsw i64 %595, 20
  br label %636

636:                                              ; preds = %662, %633
  %637 = phi i32 [ %642, %662 ], [ %578, %633 ]
  %638 = phi i32 [ %669, %662 ], [ %624, %633 ]
  %639 = phi i32 [ %642, %662 ], [ %625, %633 ]
  %640 = icmp slt i32 %637, %418
  %641 = add nsw i32 %637, 1
  %642 = select i1 %640, i32 %641, i32 %417
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %643, i32 1
  %645 = load i64, i64* %644, align 8
  %646 = sub nsw i64 %645, %581
  %647 = icmp slt i64 %646, 0
  %648 = sub nsw i64 0, %646
  %649 = select i1 %647, i64 %648, i64 %646
  %650 = icmp sgt i64 %649, 5
  br i1 %650, label %651, label %662

651:                                              ; preds = %636
  %652 = load i64, i64* %634, align 8
  %653 = sub nsw i64 %652, %617
  %654 = icmp slt i64 %653, 0
  %655 = sub nsw i64 0, %653
  %656 = select i1 %654, i64 %655, i64 %653
  %657 = icmp sgt i64 %656, %635
  br i1 %657, label %662, label %658

658:                                              ; preds = %651
  %659 = icmp sgt i32 %642, %417
  %660 = add nsw i32 %642, -1
  %661 = select i1 %659, i32 %660, i32 %418
  br label %676

662:                                              ; preds = %651, %636
  %663 = getelementptr inbounds i8, i8* %317, i64 %643
  %664 = load i8, i8* %663, align 1
  %665 = and i8 %664, 3
  %666 = icmp eq i8 %665, 1
  %667 = icmp slt i32 %638, 0
  %668 = and i1 %667, %666
  %669 = select i1 %668, i32 %642, i32 %638
  %670 = icmp eq i32 %642, %473
  br i1 %670, label %676, label %636

671:                                              ; preds = %628, %614, %603, %570
  %672 = phi i8 [ 0, %570 ], [ 0, %603 ], [ %573, %628 ], [ %573, %614 ]
  %673 = phi i32 [ %574, %570 ], [ %574, %603 ], [ %624, %628 ], [ %624, %614 ]
  %674 = phi i32 [ %575, %570 ], [ %575, %603 ], [ %625, %628 ], [ %625, %614 ]
  %675 = icmp eq i32 %578, %473
  br i1 %675, label %676, label %554

676:                                              ; preds = %671, %662, %658, %533, %518, %511
  %677 = phi i64 [ %419, %511 ], [ %419, %518 ], [ %419, %533 ], [ %581, %658 ], [ %581, %662 ], [ %419, %671 ]
  %678 = phi i32 [ %473, %511 ], [ %473, %518 ], [ %473, %533 ], [ %572, %658 ], [ %572, %662 ], [ %473, %671 ]
  %679 = phi i32 [ %512, %511 ], [ %512, %518 ], [ %512, %533 ], [ %661, %658 ], [ %473, %662 ], [ %512, %671 ]
  %680 = phi i32 [ %513, %511 ], [ %513, %518 ], [ %513, %533 ], [ %638, %658 ], [ %669, %662 ], [ %513, %671 ]
  %681 = phi i32 [ %514, %511 ], [ %514, %518 ], [ %514, %533 ], [ %639, %658 ], [ %473, %662 ], [ %514, %671 ]
  %682 = add nsw i64 %677, %305
  %683 = or i32 %681, %680
  %684 = icmp sgt i32 %683, -1
  br i1 %684, label %685, label %697

685:                                              ; preds = %676
  %686 = sext i32 %681 to i64
  %687 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %686, i32 0
  %688 = load i64, i64* %687, align 8
  %689 = sext i32 %680 to i64
  %690 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %315, i64 %689, i32 0
  %691 = load i64, i64* %690, align 8
  %692 = sub nsw i64 %688, %691
  %693 = icmp slt i64 %692, 0
  %694 = sub nsw i64 0, %692
  %695 = select i1 %693, i64 %694, i64 %692
  %696 = icmp sgt i64 %695, %246
  br i1 %696, label %712, label %697

697:                                              ; preds = %685, %676
  %698 = sext i32 %678 to i64
  %699 = getelementptr inbounds i8, i8* %317, i64 %698
  %700 = load i8, i8* %699, align 1
  %701 = and i8 %700, 3
  %702 = icmp eq i8 %701, 1
  br i1 %702, label %703, label %709

703:                                              ; preds = %697
  %704 = sext i32 %679 to i64
  %705 = getelementptr inbounds i8, i8* %317, i64 %704
  %706 = load i8, i8* %705, align 1
  %707 = and i8 %706, 3
  %708 = icmp eq i8 %707, 1
  br i1 %708, label %712, label %709

709:                                              ; preds = %703, %697
  %710 = and i16 %515, 4
  %711 = icmp eq i16 %710, 0
  br i1 %711, label %712, label %728

712:                                              ; preds = %709, %703, %685, %424
  %713 = phi i64 [ %426, %424 ], [ %415, %703 ], [ %415, %709 ], [ %415, %685 ]
  %714 = phi i64 [ %427, %424 ], [ %414, %703 ], [ %414, %709 ], [ %414, %685 ]
  %715 = phi i16 [ %428, %424 ], [ %515, %703 ], [ %515, %709 ], [ %515, %685 ]
  %716 = phi i64 [ %425, %424 ], [ %682, %703 ], [ %682, %709 ], [ %682, %685 ]
  %717 = phi i8 [ 0, %424 ], [ 0, %703 ], [ 1, %709 ], [ 0, %685 ]
  %718 = and i16 %715, 1
  %719 = icmp eq i16 %718, 0
  br i1 %719, label %724, label %720

720:                                              ; preds = %712
  %721 = icmp sgt i64 %716, %293
  %722 = select i1 %721, i64 %716, i64 %293
  %723 = select i1 %721, i8 %717, i8 %292
  br label %728

724:                                              ; preds = %712
  %725 = icmp slt i64 %716, %293
  %726 = select i1 %725, i64 %716, i64 %293
  %727 = select i1 %725, i8 %717, i8 %292
  br label %728

728:                                              ; preds = %724, %720, %709, %549, %321, %309, %302, %301
  %729 = phi i64 [ %295, %302 ], [ %295, %309 ], [ %295, %321 ], [ %714, %724 ], [ %714, %720 ], [ %295, %301 ], [ %414, %709 ], [ %414, %549 ]
  %730 = phi i64 [ %294, %302 ], [ %294, %309 ], [ %294, %321 ], [ %713, %724 ], [ %713, %720 ], [ %294, %301 ], [ %415, %709 ], [ %415, %549 ]
  %731 = phi i64 [ %293, %302 ], [ %293, %309 ], [ %293, %321 ], [ %726, %724 ], [ %722, %720 ], [ %293, %301 ], [ %293, %709 ], [ %293, %549 ]
  %732 = phi i8 [ %292, %302 ], [ %292, %309 ], [ %292, %321 ], [ %727, %724 ], [ %723, %720 ], [ %292, %301 ], [ %292, %709 ], [ %292, %549 ]
  %733 = add nuw nsw i64 %291, 1
  %734 = icmp eq i64 %733, %289
  br i1 %734, label %735, label %290

735:                                              ; preds = %728
  switch i64 %731, label %736 [
    i64 -2147483648, label %746
    i64 2147483647, label %746
  ]

736:                                              ; preds = %735
  %737 = icmp eq i8 %732, 0
  br i1 %737, label %742, label %738

738:                                              ; preds = %736
  %739 = add i32 %271, 1
  %740 = zext i32 %271 to i64
  %741 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %740
  store i64 %731, i64* %741, align 8
  br label %746

742:                                              ; preds = %736
  %743 = add i32 %272, 1
  %744 = zext i32 %272 to i64
  %745 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %744
  store i64 %731, i64* %745, align 8
  br label %746

746:                                              ; preds = %742, %738, %735, %735, %279
  %747 = phi i32 [ %272, %279 ], [ %272, %735 ], [ %272, %738 ], [ %743, %742 ], [ %272, %735 ]
  %748 = phi i32 [ %271, %279 ], [ %271, %735 ], [ %739, %738 ], [ %271, %742 ], [ %271, %735 ]
  %749 = phi i64 [ %269, %279 ], [ %729, %735 ], [ %729, %738 ], [ %729, %742 ], [ %729, %735 ]
  %750 = phi i64 [ %268, %279 ], [ %730, %735 ], [ %730, %738 ], [ %730, %742 ], [ %730, %735 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #10
  %751 = load i8, i8* %281, align 1
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %753, label %266

753:                                              ; preds = %746, %257
  %754 = phi i32 [ 0, %257 ], [ %747, %746 ]
  %755 = phi i32 [ 0, %257 ], [ %748, %746 ]
  %756 = phi i64 [ 0, %257 ], [ %749, %746 ]
  %757 = phi i64 [ 0, %257 ], [ %750, %746 ]
  %758 = icmp eq i32 %755, 0
  %759 = or i32 %755, %754
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %871, label %761

761:                                              ; preds = %753
  %762 = icmp eq i32 %754, 0
  %763 = icmp ugt i32 %755, 1
  br i1 %763, label %764, label %785

764:                                              ; preds = %761
  %765 = zext i32 %755 to i64
  br label %766

766:                                              ; preds = %782, %764
  %767 = phi i64 [ 1, %764 ], [ %783, %782 ]
  %768 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %767
  %769 = load i64, i64* %768, align 8
  br label %770

770:                                              ; preds = %778, %766
  %771 = phi i64 [ %781, %778 ], [ %767, %766 ]
  %772 = trunc i64 %771 to i32
  %773 = add i32 %772, -1
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %774
  %776 = load i64, i64* %775, align 8
  %777 = icmp slt i64 %769, %776
  br i1 %777, label %778, label %782

778:                                              ; preds = %770
  %779 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %771
  store i64 %776, i64* %779, align 8
  store i64 %769, i64* %775, align 8
  %780 = icmp eq i32 %773, 0
  %781 = add nsw i64 %771, -1
  br i1 %780, label %782, label %770

782:                                              ; preds = %778, %770
  %783 = add nuw nsw i64 %767, 1
  %784 = icmp eq i64 %783, %765
  br i1 %784, label %785, label %766

785:                                              ; preds = %782, %761
  %786 = icmp ugt i32 %754, 1
  br i1 %786, label %787, label %808

787:                                              ; preds = %785
  %788 = zext i32 %754 to i64
  br label %789

789:                                              ; preds = %805, %787
  %790 = phi i64 [ 1, %787 ], [ %806, %805 ]
  %791 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %790
  %792 = load i64, i64* %791, align 8
  br label %793

793:                                              ; preds = %801, %789
  %794 = phi i64 [ %804, %801 ], [ %790, %789 ]
  %795 = trunc i64 %794 to i32
  %796 = add i32 %795, -1
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %797
  %799 = load i64, i64* %798, align 8
  %800 = icmp slt i64 %792, %799
  br i1 %800, label %801, label %805

801:                                              ; preds = %793
  %802 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %794
  store i64 %799, i64* %802, align 8
  store i64 %792, i64* %798, align 8
  %803 = icmp eq i32 %796, 0
  %804 = add nsw i64 %794, -1
  br i1 %803, label %805, label %793

805:                                              ; preds = %801, %793
  %806 = add nuw nsw i64 %790, 1
  %807 = icmp eq i64 %806, %788
  br i1 %807, label %808, label %789

808:                                              ; preds = %805, %785
  %809 = load i32, i32* %256, align 4
  %810 = zext i32 %809 to i64
  %811 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %810, i32 0, i32 0
  %812 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %810, i32 1, i32 0
  %813 = add i32 %809, 1
  store i32 %813, i32* %256, align 4
  br i1 %762, label %814, label %819

814:                                              ; preds = %808
  %815 = lshr i32 %755, 1
  %816 = zext i32 %815 to i64
  %817 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %816
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %812, align 8
  store i64 %818, i64* %811, align 8
  br label %841

819:                                              ; preds = %808
  %820 = lshr i32 %754, 1
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds [51 x i64], [51 x i64]* %6, i64 0, i64 %821
  %823 = load i64, i64* %822, align 8
  br i1 %758, label %824, label %825

824:                                              ; preds = %819
  store i64 %823, i64* %812, align 8
  store i64 %823, i64* %811, align 8
  br label %841

825:                                              ; preds = %819
  store i64 %823, i64* %811, align 8
  %826 = lshr i32 %755, 1
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds [51 x i64], [51 x i64]* %7, i64 0, i64 %827
  %829 = load i64, i64* %828, align 8
  store i64 %829, i64* %812, align 8
  %830 = icmp eq i64 %829, %823
  br i1 %830, label %841, label %831

831:                                              ; preds = %825
  %832 = icmp sgt i64 %829, %823
  %833 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %259, i64 0, i32 1
  %834 = load i16, i16* %833, align 4
  %835 = and i16 %834, 3
  %836 = icmp ne i16 %835, 0
  %837 = xor i1 %832, %836
  br i1 %837, label %838, label %841

838:                                              ; preds = %831
  %839 = add nsw i64 %829, %823
  %840 = sdiv i64 %839, 2
  store i64 %840, i64* %812, align 8
  store i64 %840, i64* %811, align 8
  br label %841

841:                                              ; preds = %838, %831, %825, %824, %814
  %842 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %810, i32 2
  store i64 %756, i64* %842, align 8
  %843 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %810, i32 3
  store i64 %757, i64* %843, align 8
  %844 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %810, i32 4
  store i32 0, i32* %844, align 8
  %845 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %259, i64 0, i32 1
  %846 = load i16, i16* %845, align 4
  %847 = shl i16 %846, 1
  %848 = and i16 %847, 2
  %849 = zext i16 %848 to i32
  store i32 %849, i32* %844, align 8
  %850 = load i16, i16* %845, align 4
  %851 = and i16 %850, 2
  %852 = icmp eq i16 %851, 0
  br i1 %852, label %856, label %853

853:                                              ; preds = %841
  %854 = or i32 %849, 4
  store i32 %854, i32* %844, align 8
  %855 = load i16, i16* %845, align 4
  br label %856

856:                                              ; preds = %853, %841
  %857 = phi i32 [ %849, %841 ], [ %854, %853 ]
  %858 = phi i16 [ %850, %841 ], [ %855, %853 ]
  %859 = and i16 %858, 4
  %860 = icmp eq i16 %859, 0
  br i1 %860, label %864, label %861

861:                                              ; preds = %856
  %862 = or i32 %857, 8
  store i32 %862, i32* %844, align 8
  %863 = load i16, i16* %845, align 4
  br label %864

864:                                              ; preds = %861, %856
  %865 = phi i32 [ %857, %856 ], [ %862, %861 ]
  %866 = phi i16 [ %858, %856 ], [ %863, %861 ]
  %867 = and i16 %866, 8
  %868 = icmp eq i16 %867, 0
  br i1 %868, label %871, label %869

869:                                              ; preds = %864
  %870 = or i32 %865, 16
  store i32 %870, i32* %844, align 8
  br label %871

871:                                              ; preds = %869, %864, %753
  %872 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %259, i64 1
  %873 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %872, i64 0, i32 0
  %874 = load i32, i32* %873, align 4
  %875 = icmp eq i32 %874, 5531
  br i1 %875, label %876, label %257

876:                                              ; preds = %871, %231
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %247) #10
  %877 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 7
  %878 = load i32, i32* %877, align 4
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %1018, label %880

880:                                              ; preds = %876
  %881 = bitcast [10 x %struct.AF_LatinBlueRec_*]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %881) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %881, i8 -86, i64 80, i1 false) #10
  %882 = zext i32 %878 to i64
  %883 = icmp ult i32 %878, 4
  br i1 %883, label %931, label %884

884:                                              ; preds = %880
  %885 = and i64 %882, 4294967292
  %886 = add nsw i64 %885, -4
  %887 = lshr exact i64 %886, 2
  %888 = add nuw nsw i64 %887, 1
  %889 = and i64 %888, 1
  %890 = icmp eq i64 %886, 0
  br i1 %890, label %917, label %891

891:                                              ; preds = %884
  %892 = sub nuw nsw i64 %888, %889
  br label %893

893:                                              ; preds = %893, %891
  %894 = phi i64 [ 0, %891 ], [ %913, %893 ]
  %895 = phi <2 x i64> [ <i64 0, i64 1>, %891 ], [ %914, %893 ]
  %896 = phi i64 [ %892, %891 ], [ %915, %893 ]
  %897 = add <2 x i64> %895, <i64 2, i64 2>
  %898 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %895
  %899 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %897
  %900 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %894
  %901 = bitcast %struct.AF_LatinBlueRec_** %900 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %898, <2 x %struct.AF_LatinBlueRec_*>* %901, align 16
  %902 = getelementptr inbounds %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %900, i64 2
  %903 = bitcast %struct.AF_LatinBlueRec_** %902 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %899, <2 x %struct.AF_LatinBlueRec_*>* %903, align 16
  %904 = or i64 %894, 4
  %905 = add <2 x i64> %895, <i64 4, i64 4>
  %906 = add <2 x i64> %895, <i64 6, i64 6>
  %907 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %905
  %908 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %906
  %909 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %904
  %910 = bitcast %struct.AF_LatinBlueRec_** %909 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %907, <2 x %struct.AF_LatinBlueRec_*>* %910, align 16
  %911 = getelementptr inbounds %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %909, i64 2
  %912 = bitcast %struct.AF_LatinBlueRec_** %911 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %908, <2 x %struct.AF_LatinBlueRec_*>* %912, align 16
  %913 = add i64 %894, 8
  %914 = add <2 x i64> %895, <i64 8, i64 8>
  %915 = add i64 %896, -2
  %916 = icmp eq i64 %915, 0
  br i1 %916, label %917, label %893, !llvm.loop !2

917:                                              ; preds = %893, %884
  %918 = phi i64 [ 0, %884 ], [ %913, %893 ]
  %919 = phi <2 x i64> [ <i64 0, i64 1>, %884 ], [ %914, %893 ]
  %920 = icmp eq i64 %889, 0
  br i1 %920, label %929, label %921

921:                                              ; preds = %917
  %922 = add <2 x i64> %919, <i64 2, i64 2>
  %923 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %919
  %924 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, <2 x i64> %922
  %925 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %918
  %926 = bitcast %struct.AF_LatinBlueRec_** %925 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %923, <2 x %struct.AF_LatinBlueRec_*>* %926, align 16
  %927 = getelementptr inbounds %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %925, i64 2
  %928 = bitcast %struct.AF_LatinBlueRec_** %927 to <2 x %struct.AF_LatinBlueRec_*>*
  store <2 x %struct.AF_LatinBlueRec_*> %924, <2 x %struct.AF_LatinBlueRec_*>* %928, align 16
  br label %929

929:                                              ; preds = %917, %921
  %930 = icmp eq i64 %885, %882
  br i1 %930, label %939, label %931

931:                                              ; preds = %929, %880
  %932 = phi i64 [ 0, %880 ], [ %885, %929 ]
  br label %933

933:                                              ; preds = %931, %933
  %934 = phi i64 [ %937, %933 ], [ %932, %931 ]
  %935 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %934
  %936 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %934
  store %struct.AF_LatinBlueRec_* %935, %struct.AF_LatinBlueRec_** %936, align 8
  %937 = add nuw nsw i64 %934, 1
  %938 = icmp eq i64 %937, %882
  br i1 %938, label %939, label %933, !llvm.loop !4

939:                                              ; preds = %933, %929
  %940 = icmp ugt i32 %878, 1
  br i1 %940, label %941, label %982

941:                                              ; preds = %939, %979
  %942 = phi i64 [ %980, %979 ], [ 1, %939 ]
  %943 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %942
  %944 = load %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %943, align 8
  br label %945

945:                                              ; preds = %970, %941
  %946 = phi i64 [ %978, %970 ], [ %942, %941 ]
  %947 = phi %struct.AF_LatinBlueRec_* [ %977, %970 ], [ %944, %941 ]
  %948 = trunc i64 %946 to i32
  %949 = add i32 %948, -1
  %950 = zext i32 %949 to i64
  %951 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %950
  %952 = load %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %951, align 8
  %953 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %952, i64 0, i32 4
  %954 = load i32, i32* %953, align 8
  %955 = and i32 %954, 6
  %956 = icmp eq i32 %955, 0
  %957 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %952, i64 0, i32 0, i32 0
  %958 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %952, i64 0, i32 1, i32 0
  %959 = select i1 %956, i64* %958, i64* %957
  %960 = load i64, i64* %959, align 8
  %961 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %947, i64 0, i32 4
  %962 = load i32, i32* %961, align 8
  %963 = and i32 %962, 6
  %964 = icmp eq i32 %963, 0
  %965 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %947, i64 0, i32 0, i32 0
  %966 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %947, i64 0, i32 1, i32 0
  %967 = select i1 %964, i64* %966, i64* %965
  %968 = load i64, i64* %967, align 8
  %969 = icmp slt i64 %968, %960
  br i1 %969, label %970, label %979

970:                                              ; preds = %945
  %971 = ptrtoint %struct.AF_LatinBlueRec_* %952 to i64
  %972 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %946
  %973 = bitcast %struct.AF_LatinBlueRec_** %972 to i64*
  %974 = load i64, i64* %973, align 8
  %975 = bitcast %struct.AF_LatinBlueRec_** %951 to i64*
  store i64 %971, i64* %973, align 8
  store i64 %974, i64* %975, align 8
  %976 = icmp eq i32 %949, 0
  %977 = inttoptr i64 %974 to %struct.AF_LatinBlueRec_*
  %978 = add nsw i64 %946, -1
  br i1 %976, label %979, label %945

979:                                              ; preds = %970, %945
  %980 = add nuw nsw i64 %942, 1
  %981 = icmp eq i64 %980, %882
  br i1 %981, label %982, label %941

982:                                              ; preds = %979, %939
  %983 = icmp eq i32 %878, 1
  br i1 %983, label %1044, label %984

984:                                              ; preds = %982
  %985 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 0
  %986 = load %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %985, align 16
  br label %987

987:                                              ; preds = %1013, %984
  %988 = phi i32 [ %878, %984 ], [ %1014, %1013 ]
  %989 = phi %struct.AF_LatinBlueRec_* [ %986, %984 ], [ %1000, %1013 ]
  %990 = phi i64 [ 0, %984 ], [ %998, %1013 ]
  %991 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %989, i64 0, i32 4
  %992 = load i32, i32* %991, align 8
  %993 = and i32 %992, 6
  %994 = icmp eq i32 %993, 0
  %995 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %989, i64 0, i32 1, i32 0
  %996 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %989, i64 0, i32 0, i32 0
  %997 = select i1 %994, i64* %996, i64* %995
  %998 = add nuw nsw i64 %990, 1
  %999 = getelementptr inbounds [10 x %struct.AF_LatinBlueRec_*], [10 x %struct.AF_LatinBlueRec_*]* %9, i64 0, i64 %998
  %1000 = load %struct.AF_LatinBlueRec_*, %struct.AF_LatinBlueRec_** %999, align 8
  %1001 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %1000, i64 0, i32 4
  %1002 = load i32, i32* %1001, align 8
  %1003 = and i32 %1002, 6
  %1004 = icmp eq i32 %1003, 0
  %1005 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %1000, i64 0, i32 1, i32 0
  %1006 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %1000, i64 0, i32 0, i32 0
  %1007 = select i1 %1004, i64* %1006, i64* %1005
  %1008 = load i64, i64* %997, align 8
  %1009 = load i64, i64* %1007, align 8
  %1010 = icmp sgt i64 %1008, %1009
  br i1 %1010, label %1011, label %1013

1011:                                             ; preds = %987
  store i64 %1009, i64* %997, align 8
  %1012 = load i32, i32* %877, align 4
  br label %1013

1013:                                             ; preds = %1011, %987
  %1014 = phi i32 [ %1012, %1011 ], [ %988, %987 ]
  %1015 = add i32 %1014, -1
  %1016 = zext i32 %1015 to i64
  %1017 = icmp ult i64 %998, %1016
  br i1 %1017, label %987, label %1044

1018:                                             ; preds = %876
  %1019 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 3
  %1020 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %1019, align 8
  %1021 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %1020, i64 0, i32 2
  %1022 = load i16*, i16** %1021, align 8
  %1023 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %1020, i64 0, i32 1
  %1024 = load i64, i64* %1023, align 8
  %1025 = icmp sgt i64 %1024, 0
  br i1 %1025, label %1026, label %1043

1026:                                             ; preds = %1018
  %1027 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %239, i64 0, i32 0
  br label %1028

1028:                                             ; preds = %1039, %1026
  %1029 = phi i64 [ %1024, %1026 ], [ %1040, %1039 ]
  %1030 = phi i64 [ 0, %1026 ], [ %1041, %1039 ]
  %1031 = getelementptr inbounds i16, i16* %1022, i64 %1030
  %1032 = load i16, i16* %1031, align 2
  %1033 = and i16 %1032, 16383
  %1034 = zext i16 %1033 to i32
  %1035 = load i32, i32* %1027, align 4
  %1036 = icmp eq i32 %1035, %1034
  br i1 %1036, label %1037, label %1039

1037:                                             ; preds = %1028
  store i16 66, i16* %1031, align 2
  %1038 = load i64, i64* %1023, align 8
  br label %1039

1039:                                             ; preds = %1037, %1028
  %1040 = phi i64 [ %1029, %1028 ], [ %1038, %1037 ]
  %1041 = add nuw nsw i64 %1030, 1
  %1042 = icmp slt i64 %1041, %1040
  br i1 %1042, label %1028, label %1043

1043:                                             ; preds = %1039, %1018
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %238) #10
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %237) #10
  br label %1082

1044:                                             ; preds = %1013, %982
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %881) #10
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %238) #10
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %237) #10
  %1045 = call %struct.hb_buffer_t* @hb_buffer_create() #10
  %1046 = bitcast %struct.hb_buffer_t* %1045 to i8*
  %1047 = bitcast i32* %4 to i8*
  %1048 = bitcast i32* %3 to i8*
  br label %1049

1049:                                             ; preds = %1074, %1044
  %1050 = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @af_latin_metrics_check_digits.digits, i64 0, i64 0), %1044 ], [ %1053, %1074 ]
  %1051 = phi i64 [ 0, %1044 ], [ %1076, %1074 ]
  %1052 = phi i8 [ 0, %1044 ], [ %1075, %1074 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1047) #10
  store i32 -1431655766, i32* %4, align 4
  %1053 = call i8* @af_shaper_get_cluster(i8* %1050, %struct.AF_StyleMetricsRec_* %35, i8* %1046, i32* nonnull %4) #10
  %1054 = load i32, i32* %4, align 4
  %1055 = icmp ugt i32 %1054, 1
  br i1 %1055, label %1074, label %1056

1056:                                             ; preds = %1049
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1048) #10
  store i32 -1431655766, i32* %3, align 4
  %1057 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %1045, i32* nonnull %3) #10
  %1058 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %1045, i32* nonnull %3) #10
  %1059 = load i32, i32* %3, align 4
  %1060 = icmp eq i32 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1056
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1048) #10
  br label %1074

1062:                                             ; preds = %1056
  %1063 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %1058, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %1057, i64 0, i32 0
  %1067 = load i32, i32* %1066, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1048) #10
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1074, label %1069

1069:                                             ; preds = %1062
  %1070 = icmp eq i8 %1052, 0
  br i1 %1070, label %1074, label %1071

1071:                                             ; preds = %1069
  %1072 = icmp eq i64 %1051, %1065
  br i1 %1072, label %1074, label %1073

1073:                                             ; preds = %1071
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1047) #10
  br label %1079

1074:                                             ; preds = %1071, %1069, %1062, %1061, %1049
  %1075 = phi i8 [ %1052, %1049 ], [ %1052, %1062 ], [ %1052, %1061 ], [ %1052, %1071 ], [ 1, %1069 ]
  %1076 = phi i64 [ %1051, %1049 ], [ %1051, %1062 ], [ %1051, %1061 ], [ %1051, %1071 ], [ %1065, %1069 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1047) #10
  %1077 = load i8, i8* %1053, align 1
  %1078 = icmp eq i8 %1077, 0
  br i1 %1078, label %1079, label %1049

1079:                                             ; preds = %1074, %1073
  %1080 = phi i8 [ 0, %1073 ], [ 1, %1074 ]
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %1045) #10
  %1081 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 2
  store i8 %1080, i8* %1081, align 8
  br label %1082

1082:                                             ; preds = %1043, %2, %1079
  %1083 = phi i32 [ 0, %2 ], [ 0, %1079 ], [ -1, %1043 ]
  %1084 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %1, %struct.FT_CharMapRec_* %16) #10
  ret i32 %1083
}

; Function Attrs: nounwind ssp uwtable
define internal void @af_latin_metrics_scale(%struct.AF_LatinMetricsRec_*, %struct.AF_ScalerRec_* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 5
  store i32 %4, i32* %6, align 8
  %7 = bitcast %struct.AF_ScalerRec_* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.AF_ScalerRec_* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 6
  store i32 %11, i32* %12, align 4
  tail call fastcc void @af_latin_metrics_scale_dim(%struct.AF_LatinMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 0)
  tail call fastcc void @af_latin_metrics_scale_dim(%struct.AF_LatinMetricsRec_* %0, %struct.AF_ScalerRec_* %1, i32 1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @af_latin_get_standard_widths(%struct.AF_LatinMetricsRec_* nocapture readonly, i64*, i64*) #1 {
  %4 = icmp eq i64* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 5
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %1, align 8
  br label %8

8:                                                ; preds = %3, %5
  %9 = icmp eq i64* %2, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %8, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @af_latin_hints_init(%struct.AF_GlyphHintsRec_* nocapture, %struct.AF_LatinMetricsRec_*) #1 {
  %3 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 0
  %6 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %5, %struct.AF_StyleMetricsRec_** %6, align 8
  %7 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 0, i32 1, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 12
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 2, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 2, i64 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 2, i64 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 4
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %1, i64 0, i32 0, i32 1, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 2
  %25 = or i32 %23, 1
  %26 = icmp eq i32 %25, 3
  %27 = zext i1 %26 to i32
  %28 = icmp eq i32 %23, 4
  %29 = or i1 %24, %28
  %30 = or i32 %27, 2
  %31 = select i1 %29, i32 %30, i32 %27
  %32 = or i32 %23, 2
  %33 = icmp eq i32 %32, 3
  %34 = or i32 %31, 4
  %35 = select i1 %33, i32 %31, i32 %34
  %36 = or i32 %35, 8
  %37 = select i1 %24, i32 %36, i32 %35
  br i1 %33, label %43, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38, %2
  %44 = or i32 %8, 1
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i32 [ %44, %43 ], [ %8, %38 ]
  store i32 %46, i32* %9, align 8
  %47 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  store i32 %37, i32* %47, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_latin_hints_apply(i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_LatinMetricsRec_*) #0 {
  %5 = tail call fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_* %1, %struct.FT_Outline_* %2)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %815

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 0, i32 3, i64 0
  %16 = tail call fastcc i32 @af_latin_hints_detect_features(%struct.AF_GlyphHintsRec_* %1, i32 %14, %struct.AF_WidthRec_* %15, i32 0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %815

18:                                               ; preds = %12
  %19 = load i32, i32* %8, align 8
  br label %20

20:                                               ; preds = %18, %7
  %21 = phi i32 [ %19, %18 ], [ %9, %7 ]
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %171

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 3, i64 0
  %28 = tail call fastcc i32 @af_latin_hints_detect_features(%struct.AF_GlyphHintsRec_* %1, i32 %26, %struct.AF_WidthRec_* %27, i32 1)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %815

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 0, i32 3
  %32 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %31, align 8
  %33 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %32, i64 0, i32 2
  %34 = load i16*, i16** %33, align 8
  %35 = zext i32 %0 to i64
  %36 = getelementptr inbounds i16, i16* %34, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = and i16 %37, 16384
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %171

40:                                               ; preds = %30
  %41 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 1, i32 5
  %42 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %41, align 8
  %43 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 1, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %42, i64 %45
  %47 = icmp sgt i32 %44, 0
  br i1 %47, label %48, label %171

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 1
  %52 = shl i64 %50, 32
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 7
  %55 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 1, i32 6
  br label %56

56:                                               ; preds = %168, %48
  %57 = phi %struct.AF_EdgeRec_* [ %42, %48 ], [ %169, %168 ]
  %58 = load i32, i32* %51, align 8
  %59 = udiv i32 %58, 40
  %60 = zext i32 %59 to i64
  %61 = mul nsw i64 %53, %60
  %62 = ashr i64 %61, 63
  %63 = add nsw i64 %61, 32768
  %64 = add nsw i64 %63, %62
  %65 = shl i64 %64, 16
  %66 = ashr i64 %65, 32
  %67 = load i32, i32* %54, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %168, label %69

69:                                               ; preds = %56
  %70 = icmp slt i64 %66, 32
  %71 = select i1 %70, i64 %66, i64 32
  %72 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %57, i64 0, i32 4
  %73 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %57, i64 0, i32 0
  %74 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %57, i64 0, i32 3
  %75 = zext i32 %67 to i64
  br label %76

76:                                               ; preds = %154, %69
  %77 = phi i64 [ 0, %69 ], [ %158, %154 ]
  %78 = phi i64 [ %71, %69 ], [ %157, %154 ]
  %79 = phi i8 [ 0, %69 ], [ %156, %154 ]
  %80 = phi %struct.AF_WidthRec_* [ null, %69 ], [ %155, %154 ]
  %81 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 8, i64 %77
  %82 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 8, i64 %77, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %154, label %86

86:                                               ; preds = %76
  %87 = and i32 %83, 6
  %88 = icmp ne i32 %87, 0
  %89 = lshr i32 %83, 3
  %90 = trunc i32 %89 to i8
  %91 = and i8 %90, 1
  %92 = load i8, i8* %72, align 1
  %93 = sext i8 %92 to i32
  %94 = load i32, i32* %55, align 8
  %95 = icmp ne i32 %94, %93
  %96 = xor i1 %88, %95
  %97 = icmp eq i8 %91, 0
  %98 = and i1 %97, %96
  br i1 %98, label %154, label %99

99:                                               ; preds = %86
  %100 = load i16, i16* %73, align 8
  %101 = sext i16 %100 to i64
  %102 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %81, i64 0, i32 0
  %103 = getelementptr inbounds %struct.AF_LatinBlueRec_, %struct.AF_LatinBlueRec_* %81, i64 0, i32 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = sub nsw i64 %101, %104
  %106 = icmp slt i64 %105, 0
  %107 = sub nsw i64 0, %105
  %108 = select i1 %106, i64 %107, i64 %105
  %109 = shl i64 %108, 32
  %110 = ashr exact i64 %109, 32
  %111 = mul nsw i64 %110, %53
  %112 = ashr i64 %111, 63
  %113 = add nsw i64 %111, 32768
  %114 = add nsw i64 %113, %112
  %115 = lshr i64 %114, 16
  %116 = trunc i64 %115 to i32
  %117 = shl i64 %115, 32
  %118 = ashr exact i64 %117, 32
  %119 = icmp sgt i64 %78, %118
  %120 = select i1 %119, %struct.AF_WidthRec_* %102, %struct.AF_WidthRec_* %80
  %121 = select i1 %119, i8 %91, i8 %79
  %122 = select i1 %119, i64 %118, i64 %78
  %123 = load i8, i8* %74, align 8
  %124 = and i8 %123, 1
  %125 = icmp eq i8 %124, 0
  %126 = icmp eq i32 %116, 0
  %127 = or i1 %125, %126
  %128 = icmp ne i8 %91, 0
  %129 = or i1 %128, %127
  %130 = xor i1 %129, true
  %131 = icmp sgt i64 %104, %101
  %132 = xor i1 %88, %131
  %133 = and i1 %132, %130
  br i1 %133, label %134, label %154

134:                                              ; preds = %99
  %135 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %3, i64 0, i32 2, i64 1, i32 8, i64 %77, i32 1
  %136 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %135, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = sub nsw i64 %101, %137
  %139 = icmp slt i64 %138, 0
  %140 = sub nsw i64 0, %138
  %141 = select i1 %139, i64 %140, i64 %138
  %142 = shl i64 %141, 32
  %143 = ashr exact i64 %142, 32
  %144 = mul nsw i64 %143, %53
  %145 = ashr i64 %144, 63
  %146 = add nsw i64 %144, 32768
  %147 = add nsw i64 %146, %145
  %148 = shl i64 %147, 16
  %149 = ashr i64 %148, 32
  %150 = icmp sgt i64 %122, %149
  %151 = select i1 %150, %struct.AF_WidthRec_* %135, %struct.AF_WidthRec_* %120
  %152 = select i1 %150, i8 %91, i8 %121
  %153 = select i1 %150, i64 %149, i64 %122
  br label %154

154:                                              ; preds = %134, %99, %86, %76
  %155 = phi %struct.AF_WidthRec_* [ %80, %76 ], [ %80, %86 ], [ %120, %99 ], [ %151, %134 ]
  %156 = phi i8 [ %79, %76 ], [ %79, %86 ], [ %121, %99 ], [ %152, %134 ]
  %157 = phi i64 [ %78, %76 ], [ %78, %86 ], [ %122, %99 ], [ %153, %134 ]
  %158 = add nuw nsw i64 %77, 1
  %159 = icmp eq i64 %158, %75
  br i1 %159, label %160, label %76

160:                                              ; preds = %154
  %161 = icmp eq %struct.AF_WidthRec_* %155, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %57, i64 0, i32 6
  store %struct.AF_WidthRec_* %155, %struct.AF_WidthRec_** %163, align 8
  %164 = icmp eq i8 %156, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = load i8, i8* %74, align 8
  %167 = or i8 %166, 8
  store i8 %167, i8* %74, align 8
  br label %168

168:                                              ; preds = %165, %162, %160, %56
  %169 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %57, i64 1
  %170 = icmp ult %struct.AF_EdgeRec_* %169, %46
  br i1 %170, label %56, label %171

171:                                              ; preds = %168, %40, %30, %20
  %172 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 14
  br label %173

173:                                              ; preds = %774, %171
  %174 = phi i64 [ 0, %171 ], [ %775, %774 ]
  %175 = trunc i64 %174 to i32
  switch i32 %175, label %774 [
    i32 0, label %176
    i32 1, label %180
  ]

176:                                              ; preds = %173
  %177 = load i32, i32* %8, align 8
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %184, label %774

180:                                              ; preds = %173
  %181 = load i32, i32* %8, align 8
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %774

184:                                              ; preds = %176, %180
  %185 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %174, i32 5
  %186 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %185, align 8
  %187 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %174, i32 3
  %188 = load i32, i32* %187, align 8
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %189
  %191 = icmp eq i64 %174, 1
  br i1 %191, label %192, label %287

192:                                              ; preds = %184
  %193 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %172, align 8
  %194 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %193, i64 0, i32 0
  %195 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %194, align 8
  %196 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %195, i64 0, i32 2
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [61 x %struct.AF_ScriptClassRec_*], [61 x %struct.AF_ScriptClassRec_*]* @af_script_classes, i64 0, i64 %198
  %200 = load %struct.AF_ScriptClassRec_*, %struct.AF_ScriptClassRec_** %199, align 8
  %201 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %200, i64 0, i32 3
  %202 = load i8, i8* %201, align 8
  %203 = zext i8 %202 to i32
  %204 = icmp sgt i32 %188, 0
  br i1 %204, label %205, label %716

205:                                              ; preds = %192, %283
  %206 = phi %struct.AF_EdgeRec_* [ %284, %283 ], [ null, %192 ]
  %207 = phi %struct.AF_EdgeRec_* [ %285, %283 ], [ %186, %192 ]
  %208 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %207, i64 0, i32 3
  %209 = load i8, i8* %208, align 8
  %210 = and i8 %209, 4
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %283

212:                                              ; preds = %205
  %213 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %207, i64 0, i32 7
  %214 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %213, align 8
  %215 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %207, i64 0, i32 6
  %216 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %215, align 8
  %217 = icmp ne %struct.AF_WidthRec_* %216, null
  %218 = icmp ne %struct.AF_EdgeRec_* %214, null
  %219 = and i1 %218, %217
  br i1 %219, label %220, label %237

220:                                              ; preds = %212
  %221 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %214, i64 0, i32 6
  %222 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %221, align 8
  %223 = icmp eq %struct.AF_WidthRec_* %222, null
  br i1 %223, label %248, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %214, i64 0, i32 3
  %226 = load i8, i8* %225, align 8
  %227 = and i8 %226, 8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %224
  store %struct.AF_WidthRec_* null, %struct.AF_WidthRec_** %221, align 8
  %230 = and i8 %226, -9
  store i8 %230, i8* %225, align 8
  %231 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %215, align 8
  br label %237

232:                                              ; preds = %224
  %233 = and i8 %209, 8
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %248, label %235

235:                                              ; preds = %232
  store %struct.AF_WidthRec_* null, %struct.AF_WidthRec_** %215, align 8
  %236 = and i8 %209, -9
  store i8 %236, i8* %208, align 8
  br label %237

237:                                              ; preds = %235, %229, %212
  %238 = phi %struct.AF_WidthRec_* [ %231, %229 ], [ null, %235 ], [ %216, %212 ]
  %239 = icmp ne %struct.AF_WidthRec_* %238, null
  %240 = xor i1 %218, true
  %241 = or i1 %239, %240
  %242 = select i1 %239, %struct.AF_EdgeRec_* %207, %struct.AF_EdgeRec_* null
  %243 = select i1 %239, %struct.AF_EdgeRec_* %214, %struct.AF_EdgeRec_* null
  br i1 %241, label %248, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %214, i64 0, i32 6
  %246 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %245, align 8
  %247 = icmp eq %struct.AF_WidthRec_* %246, null
  br i1 %247, label %283, label %248

248:                                              ; preds = %244, %237, %232, %220
  %249 = phi %struct.AF_WidthRec_* [ %238, %237 ], [ %246, %244 ], [ %216, %220 ], [ %216, %232 ]
  %250 = phi %struct.AF_EdgeRec_* [ %242, %237 ], [ %214, %244 ], [ %207, %220 ], [ %207, %232 ]
  %251 = phi %struct.AF_EdgeRec_* [ %243, %237 ], [ %207, %244 ], [ %214, %220 ], [ %214, %232 ]
  %252 = icmp eq %struct.AF_EdgeRec_* %250, null
  br i1 %252, label %283, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %249, i64 0, i32 2
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %250, i64 0, i32 2
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %250, i64 0, i32 3
  %258 = load i8, i8* %257, align 8
  %259 = or i8 %258, 4
  store i8 %259, i8* %257, align 8
  %260 = icmp eq %struct.AF_EdgeRec_* %251, null
  br i1 %260, label %280, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %251, i64 0, i32 6
  %263 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %262, align 8
  %264 = icmp eq %struct.AF_WidthRec_* %263, null
  br i1 %264, label %265, label %280

265:                                              ; preds = %261
  %266 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %251, i64 0, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %250, i64 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = sub nsw i64 %267, %269
  %271 = sub nsw i64 %255, %269
  %272 = zext i8 %259 to i32
  %273 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %251, i64 0, i32 3
  %274 = load i8, i8* %273, align 8
  %275 = zext i8 %274 to i32
  %276 = tail call fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 1, i64 %270, i64 %271, i32 %272, i32 %275) #10
  %277 = add nsw i64 %276, %255
  %278 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %251, i64 0, i32 2
  store i64 %277, i64* %278, align 8
  %279 = or i8 %274, 4
  store i8 %279, i8* %273, align 8
  br label %280

280:                                              ; preds = %265, %261, %253
  %281 = icmp eq %struct.AF_EdgeRec_* %206, null
  %282 = select i1 %281, %struct.AF_EdgeRec_* %207, %struct.AF_EdgeRec_* %206
  br label %283

283:                                              ; preds = %280, %248, %244, %205
  %284 = phi %struct.AF_EdgeRec_* [ %282, %280 ], [ %206, %205 ], [ %206, %248 ], [ %206, %244 ]
  %285 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %207, i64 1
  %286 = icmp ult %struct.AF_EdgeRec_* %285, %190
  br i1 %286, label %205, label %287

287:                                              ; preds = %283, %184
  %288 = phi i32 [ 0, %184 ], [ %203, %283 ]
  %289 = phi %struct.AF_EdgeRec_* [ null, %184 ], [ %284, %283 ]
  %290 = icmp sgt i32 %188, 0
  br i1 %290, label %291, label %491

291:                                              ; preds = %287
  %292 = icmp eq i32 %288, 0
  br label %293

293:                                              ; preds = %486, %291
  %294 = phi i32 [ 0, %291 ], [ %488, %486 ]
  %295 = phi %struct.AF_EdgeRec_* [ %289, %291 ], [ %487, %486 ]
  %296 = phi %struct.AF_EdgeRec_* [ %186, %291 ], [ %489, %486 ]
  %297 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 3
  %298 = load i8, i8* %297, align 8
  %299 = zext i8 %298 to i32
  %300 = and i32 %299, 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %486

302:                                              ; preds = %293
  %303 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 7
  %304 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %303, align 8
  %305 = icmp eq %struct.AF_EdgeRec_* %304, null
  br i1 %305, label %306, label %308

306:                                              ; preds = %302
  %307 = add nsw i32 %294, 1
  br label %486

308:                                              ; preds = %302
  %309 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 6
  %310 = load %struct.AF_WidthRec_*, %struct.AF_WidthRec_** %309, align 8
  %311 = icmp eq %struct.AF_WidthRec_* %310, null
  br i1 %311, label %328, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 1
  %316 = load i64, i64* %315, align 8
  %317 = sub nsw i64 %314, %316
  %318 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 2
  %319 = load i64, i64* %318, align 8
  %320 = sub nsw i64 %319, %316
  %321 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 3
  %322 = load i8, i8* %321, align 8
  %323 = zext i8 %322 to i32
  %324 = tail call fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %175, i64 %317, i64 %320, i32 %323, i32 %299) #10
  %325 = add nsw i64 %324, %319
  %326 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  store i64 %325, i64* %326, align 8
  %327 = or i8 %298, 4
  store i8 %327, i8* %297, align 8
  br label %486

328:                                              ; preds = %308
  %329 = icmp eq %struct.AF_EdgeRec_* %295, null
  br i1 %329, label %330, label %387

330:                                              ; preds = %328
  %331 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 1
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 1
  %334 = load i64, i64* %333, align 8
  %335 = sub nsw i64 %332, %334
  %336 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 3
  %337 = load i8, i8* %336, align 8
  %338 = zext i8 %337 to i32
  %339 = tail call fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %175, i64 %335, i64 0, i32 %299, i32 %338) #10
  %340 = icmp slt i64 %339, 65
  %341 = icmp slt i64 %339, 96
  br i1 %341, label %342, label %369

342:                                              ; preds = %330
  %343 = select i1 %340, i64 32, i64 26
  %344 = select i1 %340, i64 32, i64 38
  %345 = ashr i64 %335, 1
  %346 = add nsw i64 %345, %334
  %347 = add nsw i64 %346, 32
  %348 = and i64 %347, -64
  %349 = sub nsw i64 %348, %344
  %350 = sub nsw i64 %346, %349
  %351 = icmp slt i64 %350, 0
  %352 = sub nsw i64 0, %350
  %353 = select i1 %351, i64 %352, i64 %350
  %354 = or i64 %348, %343
  %355 = sub nsw i64 %346, %354
  %356 = icmp slt i64 %355, 0
  %357 = sub nsw i64 0, %355
  %358 = select i1 %356, i64 %357, i64 %355
  %359 = icmp slt i64 %353, %358
  %360 = select i1 %359, i64 %349, i64 %354
  %361 = sdiv i64 %339, 2
  %362 = sub nsw i64 %360, %361
  %363 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  store i64 %362, i64* %363, align 8
  %364 = add nsw i64 %362, %339
  %365 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 2
  store i64 %364, i64* %365, align 8
  %366 = load i8, i8* %297, align 8
  %367 = load i64, i64* %333, align 8
  %368 = load i64, i64* %363, align 8
  br label %373

369:                                              ; preds = %330
  %370 = add nsw i64 %334, 32
  %371 = and i64 %370, -64
  %372 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  store i64 %371, i64* %372, align 8
  br label %373

373:                                              ; preds = %369, %342
  %374 = phi i64 [ %371, %369 ], [ %368, %342 ]
  %375 = phi i64 [ %334, %369 ], [ %367, %342 ]
  %376 = phi i8 [ %298, %369 ], [ %366, %342 ]
  %377 = or i8 %376, 4
  store i8 %377, i8* %297, align 8
  %378 = load i64, i64* %331, align 8
  %379 = sub nsw i64 %378, %375
  %380 = sub nsw i64 %374, %375
  %381 = zext i8 %377 to i32
  %382 = load i8, i8* %336, align 8
  %383 = zext i8 %382 to i32
  %384 = tail call fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %175, i64 %379, i64 %380, i32 %381, i32 %383) #10
  %385 = add nsw i64 %384, %374
  %386 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 2
  store i64 %385, i64* %386, align 8
  br label %486

387:                                              ; preds = %328
  %388 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %295, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 1
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %295, i64 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = sub nsw i64 %391, %393
  %395 = add nsw i64 %394, %389
  %396 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 1
  %397 = load i64, i64* %396, align 8
  %398 = sub nsw i64 %397, %391
  %399 = ashr i64 %398, 1
  %400 = add nsw i64 %399, %395
  %401 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 3
  %402 = load i8, i8* %401, align 8
  %403 = zext i8 %402 to i32
  %404 = tail call fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* %1, i32 %175, i64 %398, i64 0, i32 %299, i32 %403) #10
  %405 = and i32 %403, 4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %411, label %407

407:                                              ; preds = %387
  %408 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 2
  %409 = load i64, i64* %408, align 8
  %410 = sub nsw i64 %409, %404
  br label %456

411:                                              ; preds = %387
  %412 = icmp slt i64 %404, 96
  br i1 %412, label %413, label %435

413:                                              ; preds = %411
  %414 = add nsw i64 %400, 32
  %415 = and i64 %414, -64
  %416 = icmp slt i64 %404, 65
  %417 = select i1 %416, i64 32, i64 38
  %418 = select i1 %416, i64 32, i64 26
  %419 = sub nsw i64 %415, %417
  %420 = sub nsw i64 %400, %419
  %421 = icmp slt i64 %420, 0
  %422 = sub nsw i64 0, %420
  %423 = select i1 %421, i64 %422, i64 %420
  %424 = or i64 %415, %418
  %425 = sub nsw i64 %400, %424
  %426 = icmp slt i64 %425, 0
  %427 = sub nsw i64 0, %425
  %428 = select i1 %426, i64 %427, i64 %425
  %429 = icmp slt i64 %423, %428
  %430 = select i1 %429, i64 %419, i64 %424
  %431 = sdiv i64 %404, 2
  %432 = sub nsw i64 %430, %431
  %433 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  store i64 %432, i64* %433, align 8
  %434 = add nsw i64 %430, %431
  br label %456

435:                                              ; preds = %411
  %436 = add i64 %395, 32
  %437 = and i64 %436, -64
  %438 = lshr i64 %404, 1
  %439 = add nsw i64 %437, %438
  %440 = sub i64 %439, %400
  %441 = icmp slt i64 %440, 0
  %442 = sub nsw i64 0, %440
  %443 = select i1 %441, i64 %442, i64 %440
  %444 = add i64 %436, %398
  %445 = and i64 %444, -64
  %446 = sub nsw i64 %445, %404
  %447 = sub i64 %438, %400
  %448 = add i64 %446, %447
  %449 = icmp slt i64 %448, 0
  %450 = sub nsw i64 0, %448
  %451 = select i1 %449, i64 %450, i64 %448
  %452 = icmp slt i64 %443, %451
  %453 = select i1 %452, i64 %437, i64 %446
  %454 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add nsw i64 %453, %404
  br label %456

456:                                              ; preds = %435, %413, %407
  %457 = phi %struct.AF_EdgeRec_* [ %304, %435 ], [ %304, %413 ], [ %296, %407 ]
  %458 = phi i64 [ %455, %435 ], [ %434, %413 ], [ %410, %407 ]
  %459 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %457, i64 0, i32 2
  store i64 %458, i64* %459, align 8
  %460 = load i8, i8* %297, align 8
  %461 = or i8 %460, 4
  store i8 %461, i8* %297, align 8
  %462 = load i8, i8* %401, align 8
  %463 = or i8 %462, 4
  store i8 %463, i8* %401, align 8
  %464 = icmp ugt %struct.AF_EdgeRec_* %296, %186
  br i1 %464, label %465, label %486

465:                                              ; preds = %456
  %466 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 0, i32 2
  %467 = load i64, i64* %466, align 8
  %468 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 -1, i32 2
  %469 = load i64, i64* %468, align 8
  br i1 %292, label %472, label %470

470:                                              ; preds = %465
  %471 = icmp sgt i64 %467, %469
  br i1 %471, label %474, label %486

472:                                              ; preds = %465
  %473 = icmp slt i64 %467, %469
  br i1 %473, label %474, label %486

474:                                              ; preds = %472, %470
  %475 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %303, align 8
  %476 = icmp eq %struct.AF_EdgeRec_* %475, null
  br i1 %476, label %486, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %475, i64 0, i32 2
  %479 = load i64, i64* %478, align 8
  %480 = sub nsw i64 %479, %469
  %481 = icmp slt i64 %480, 0
  %482 = sub nsw i64 0, %480
  %483 = select i1 %481, i64 %482, i64 %480
  %484 = icmp sgt i64 %483, 16
  br i1 %484, label %485, label %486

485:                                              ; preds = %477
  store i64 %469, i64* %466, align 8
  br label %486

486:                                              ; preds = %485, %477, %474, %472, %470, %456, %373, %312, %306, %293
  %487 = phi %struct.AF_EdgeRec_* [ %295, %312 ], [ %295, %306 ], [ %295, %293 ], [ %296, %373 ], [ %295, %474 ], [ %295, %477 ], [ %295, %485 ], [ %295, %472 ], [ %295, %470 ], [ %295, %456 ]
  %488 = phi i32 [ %294, %312 ], [ %307, %306 ], [ %294, %293 ], [ %294, %373 ], [ %294, %474 ], [ %294, %477 ], [ %294, %485 ], [ %294, %472 ], [ %294, %470 ], [ %294, %456 ]
  %489 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %296, i64 1
  %490 = icmp ult %struct.AF_EdgeRec_* %489, %190
  br i1 %490, label %293, label %491

491:                                              ; preds = %486, %287
  %492 = phi i1 [ false, %287 ], [ true, %486 ]
  %493 = phi %struct.AF_EdgeRec_* [ %289, %287 ], [ %487, %486 ]
  %494 = phi i32 [ 0, %287 ], [ %488, %486 ]
  %495 = icmp eq i64 %174, 0
  br i1 %495, label %496, label %552

496:                                              ; preds = %491
  %497 = icmp eq i32 %188, 12
  switch i32 %188, label %552 [
    i32 6, label %500
    i32 12, label %498
  ]

498:                                              ; preds = %496
  %499 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 1
  br label %500

500:                                              ; preds = %496, %498
  %501 = phi i64 [ 5, %498 ], [ 2, %496 ]
  %502 = phi i64 [ 9, %498 ], [ 4, %496 ]
  %503 = phi %struct.AF_EdgeRec_* [ %499, %498 ], [ %186, %496 ]
  %504 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %501, i32 1
  %505 = load i64, i64* %504, align 8
  %506 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %503, i64 0, i32 1
  %507 = load i64, i64* %506, align 8
  %508 = sub nsw i64 %505, %507
  %509 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %502, i32 1
  %510 = load i64, i64* %509, align 8
  %511 = sub i64 %505, %510
  %512 = add i64 %511, %508
  %513 = icmp slt i64 %512, 0
  %514 = sub nsw i64 0, %512
  %515 = select i1 %513, i64 %514, i64 %512
  %516 = icmp slt i64 %515, 8
  br i1 %516, label %517, label %552

517:                                              ; preds = %500
  %518 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %502, i32 2
  %519 = load i64, i64* %518, align 8
  %520 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %501, i32 2
  %521 = load i64, i64* %520, align 8
  %522 = shl nsw i64 %521, 1
  %523 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %503, i64 0, i32 2
  %524 = load i64, i64* %523, align 8
  %525 = sub nsw i64 %522, %524
  %526 = sub nsw i64 %519, %525
  store i64 %525, i64* %518, align 8
  %527 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %502, i32 7
  %528 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %527, align 8
  %529 = icmp eq %struct.AF_EdgeRec_* %528, null
  br i1 %529, label %534, label %530

530:                                              ; preds = %517
  %531 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %528, i64 0, i32 2
  %532 = load i64, i64* %531, align 8
  %533 = sub nsw i64 %532, %526
  store i64 %533, i64* %531, align 8
  br label %534

534:                                              ; preds = %530, %517
  br i1 %497, label %535, label %542

535:                                              ; preds = %534
  %536 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 8, i32 2
  %537 = load i64, i64* %536, align 8
  %538 = sub nsw i64 %537, %526
  store i64 %538, i64* %536, align 8
  %539 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 11, i32 2
  %540 = load i64, i64* %539, align 8
  %541 = sub nsw i64 %540, %526
  store i64 %541, i64* %539, align 8
  br label %542

542:                                              ; preds = %535, %534
  %543 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %186, i64 %502, i32 3
  %544 = load i8, i8* %543, align 8
  %545 = or i8 %544, 4
  store i8 %545, i8* %543, align 8
  %546 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %527, align 8
  %547 = icmp eq %struct.AF_EdgeRec_* %546, null
  br i1 %547, label %552, label %548

548:                                              ; preds = %542
  %549 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %546, i64 0, i32 3
  %550 = load i8, i8* %549, align 8
  %551 = or i8 %550, 4
  store i8 %551, i8* %549, align 8
  br label %552

552:                                              ; preds = %548, %542, %500, %496, %491
  %553 = icmp ne i32 %494, 0
  %554 = icmp eq %struct.AF_EdgeRec_* %493, null
  %555 = or i1 %554, %553
  %556 = and i1 %492, %555
  br i1 %556, label %557, label %716

557:                                              ; preds = %552
  %558 = icmp eq i32 %288, 0
  br label %559

559:                                              ; preds = %712, %557
  %560 = phi %struct.AF_EdgeRec_* [ %493, %557 ], [ %713, %712 ]
  %561 = phi %struct.AF_EdgeRec_* [ %186, %557 ], [ %714, %712 ]
  %562 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 3
  %563 = load i8, i8* %562, align 8
  %564 = and i8 %563, 4
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %566, label %712

566:                                              ; preds = %559
  %567 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 8
  %568 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %567, align 8
  %569 = icmp eq %struct.AF_EdgeRec_* %568, null
  br i1 %569, label %586, label %570

570:                                              ; preds = %566
  %571 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %568, i64 0, i32 1
  %572 = load i64, i64* %571, align 8
  %573 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 1
  %574 = load i64, i64* %573, align 8
  %575 = sub nsw i64 %572, %574
  %576 = icmp slt i64 %575, 0
  %577 = sub nsw i64 0, %575
  %578 = select i1 %576, i64 %577, i64 %575
  %579 = icmp slt i64 %578, 80
  br i1 %579, label %580, label %586

580:                                              ; preds = %570
  %581 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %568, i64 0, i32 2
  %582 = load i64, i64* %581, align 8
  %583 = sub i64 %574, %572
  %584 = add i64 %583, %582
  %585 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  store i64 %584, i64* %585, align 8
  br label %653

586:                                              ; preds = %570, %566
  %587 = icmp eq %struct.AF_EdgeRec_* %560, null
  br i1 %587, label %588, label %594

588:                                              ; preds = %586
  %589 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 1
  %590 = load i64, i64* %589, align 8
  %591 = add nsw i64 %590, 32
  %592 = and i64 %591, -64
  %593 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  store i64 %592, i64* %593, align 8
  br label %653

594:                                              ; preds = %586, %598
  %595 = phi %struct.AF_EdgeRec_* [ %596, %598 ], [ %561, %586 ]
  %596 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %595, i64 -1
  %597 = icmp ult %struct.AF_EdgeRec_* %596, %186
  br i1 %597, label %603, label %598

598:                                              ; preds = %594
  %599 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %595, i64 -1, i32 3
  %600 = load i8, i8* %599, align 8
  %601 = and i8 %600, 4
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %594, label %603

603:                                              ; preds = %598, %594
  %604 = phi i1 [ true, %598 ], [ false, %594 ]
  br label %605

605:                                              ; preds = %609, %603
  %606 = phi %struct.AF_EdgeRec_* [ %561, %603 ], [ %607, %609 ]
  %607 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %606, i64 1
  %608 = icmp ult %struct.AF_EdgeRec_* %607, %190
  br i1 %608, label %609, label %641

609:                                              ; preds = %605
  %610 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %606, i64 1, i32 3
  %611 = load i8, i8* %610, align 8
  %612 = and i8 %611, 4
  %613 = icmp eq i8 %612, 0
  br i1 %613, label %605, label %614

614:                                              ; preds = %609
  %615 = icmp ult %struct.AF_EdgeRec_* %596, %561
  %616 = and i1 %615, %604
  %617 = icmp ugt %struct.AF_EdgeRec_* %607, %561
  %618 = and i1 %616, %617
  br i1 %618, label %619, label %641

619:                                              ; preds = %614
  %620 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %606, i64 1, i32 1
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %595, i64 -1, i32 1
  %623 = load i64, i64* %622, align 8
  %624 = icmp eq i64 %621, %623
  %625 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %595, i64 -1, i32 2
  %626 = load i64, i64* %625, align 8
  br i1 %624, label %627, label %629

627:                                              ; preds = %619
  %628 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  store i64 %626, i64* %628, align 8
  br label %653

629:                                              ; preds = %619
  %630 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 1
  %631 = load i64, i64* %630, align 8
  %632 = sub nsw i64 %631, %623
  %633 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %606, i64 1, i32 2
  %634 = load i64, i64* %633, align 8
  %635 = sub nsw i64 %634, %626
  %636 = sub nsw i64 %621, %623
  %637 = tail call i64 @FT_MulDiv(i64 %632, i64 %635, i64 %636) #10
  %638 = add nsw i64 %637, %626
  %639 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  store i64 %638, i64* %639, align 8
  %640 = load i8, i8* %562, align 8
  br label %653

641:                                              ; preds = %605, %614
  %642 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %560, i64 0, i32 2
  %643 = load i64, i64* %642, align 8
  %644 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 1
  %645 = load i64, i64* %644, align 8
  %646 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %560, i64 0, i32 1
  %647 = load i64, i64* %646, align 8
  %648 = add i64 %645, 16
  %649 = sub i64 %648, %647
  %650 = and i64 %649, -32
  %651 = add nsw i64 %650, %643
  %652 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  store i64 %651, i64* %652, align 8
  br label %653

653:                                              ; preds = %641, %629, %627, %588, %580
  %654 = phi i64 [ %584, %580 ], [ %592, %588 ], [ %638, %629 ], [ %626, %627 ], [ %651, %641 ]
  %655 = phi i8 [ %563, %580 ], [ %563, %588 ], [ %640, %629 ], [ %563, %627 ], [ %563, %641 ]
  %656 = phi %struct.AF_EdgeRec_* [ %560, %580 ], [ %561, %588 ], [ %560, %629 ], [ %560, %627 ], [ %560, %641 ]
  %657 = or i8 %655, 4
  store i8 %657, i8* %562, align 8
  %658 = icmp ugt %struct.AF_EdgeRec_* %561, %186
  br i1 %658, label %659, label %680

659:                                              ; preds = %653
  %660 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  %661 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 -1, i32 2
  %662 = load i64, i64* %661, align 8
  br i1 %558, label %665, label %663

663:                                              ; preds = %659
  %664 = icmp sgt i64 %654, %662
  br i1 %664, label %667, label %680

665:                                              ; preds = %659
  %666 = icmp slt i64 %654, %662
  br i1 %666, label %667, label %680

667:                                              ; preds = %665, %663
  %668 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 7
  %669 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %668, align 8
  %670 = icmp eq %struct.AF_EdgeRec_* %669, null
  br i1 %670, label %680, label %671

671:                                              ; preds = %667
  %672 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %669, i64 0, i32 2
  %673 = load i64, i64* %672, align 8
  %674 = sub nsw i64 %673, %662
  %675 = icmp slt i64 %674, 0
  %676 = sub nsw i64 0, %674
  %677 = select i1 %675, i64 %676, i64 %674
  %678 = icmp sgt i64 %677, 16
  br i1 %678, label %679, label %680

679:                                              ; preds = %671
  store i64 %662, i64* %660, align 8
  br label %680

680:                                              ; preds = %679, %671, %667, %665, %663, %653
  %681 = phi i64 [ %654, %667 ], [ %654, %671 ], [ %662, %679 ], [ %654, %665 ], [ %654, %663 ], [ %654, %653 ]
  %682 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 1
  %683 = icmp ult %struct.AF_EdgeRec_* %682, %190
  br i1 %683, label %684, label %712

684:                                              ; preds = %680
  %685 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 1, i32 3
  %686 = load i8, i8* %685, align 8
  %687 = and i8 %686, 4
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %712, label %689

689:                                              ; preds = %684
  %690 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 2
  %691 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 1, i32 2
  %692 = load i64, i64* %691, align 8
  br i1 %558, label %695, label %693

693:                                              ; preds = %689
  %694 = icmp slt i64 %681, %692
  br i1 %694, label %697, label %712

695:                                              ; preds = %689
  %696 = icmp sgt i64 %681, %692
  br i1 %696, label %697, label %712

697:                                              ; preds = %695, %693
  %698 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 0, i32 7
  %699 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %698, align 8
  %700 = icmp eq %struct.AF_EdgeRec_* %699, null
  br i1 %700, label %712, label %701

701:                                              ; preds = %697
  %702 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %699, i64 0, i32 2
  %703 = load i64, i64* %702, align 8
  %704 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 -1, i32 2
  %705 = load i64, i64* %704, align 8
  %706 = sub nsw i64 %703, %705
  %707 = icmp slt i64 %706, 0
  %708 = sub nsw i64 0, %706
  %709 = select i1 %707, i64 %708, i64 %706
  %710 = icmp sgt i64 %709, 16
  br i1 %710, label %711, label %712

711:                                              ; preds = %701
  store i64 %692, i64* %690, align 8
  br label %712

712:                                              ; preds = %711, %701, %697, %695, %693, %684, %680, %559
  %713 = phi %struct.AF_EdgeRec_* [ %560, %559 ], [ %656, %697 ], [ %656, %684 ], [ %656, %701 ], [ %656, %711 ], [ %656, %695 ], [ %656, %693 ], [ %656, %680 ]
  %714 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %561, i64 1
  %715 = icmp ult %struct.AF_EdgeRec_* %714, %190
  br i1 %715, label %559, label %716

716:                                              ; preds = %712, %192, %552
  %717 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %174, i32 2
  %718 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %717, align 8
  %719 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 11, i64 %174, i32 0
  %720 = load i32, i32* %719, align 8
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %718, i64 %721
  %723 = icmp eq i64 %174, 0
  %724 = icmp sgt i32 %720, 0
  br i1 %723, label %726, label %725

725:                                              ; preds = %716
  br i1 %724, label %750, label %773

726:                                              ; preds = %716
  br i1 %724, label %727, label %773

727:                                              ; preds = %726, %747
  %728 = phi %struct.AF_SegmentRec_* [ %748, %747 ], [ %718, %726 ]
  %729 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %728, i64 0, i32 7
  %730 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %729, align 8
  %731 = icmp eq %struct.AF_EdgeRec_* %730, null
  br i1 %731, label %747, label %732

732:                                              ; preds = %727
  %733 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %728, i64 0, i32 13
  %734 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %728, i64 0, i32 14
  %735 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %734, align 8
  %736 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %730, i64 0, i32 2
  br label %737

737:                                              ; preds = %737, %732
  %738 = phi %struct.AF_PointRec_** [ %733, %732 ], [ %746, %737 ]
  %739 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %738, align 8
  %740 = load i64, i64* %736, align 8
  %741 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %739, i64 0, i32 7
  store i64 %740, i64* %741, align 8
  %742 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %739, i64 0, i32 0
  %743 = load i16, i16* %742, align 8
  %744 = or i16 %743, 4
  store i16 %744, i16* %742, align 8
  %745 = icmp eq %struct.AF_PointRec_* %739, %735
  %746 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %739, i64 0, i32 11
  br i1 %745, label %747, label %737

747:                                              ; preds = %737, %727
  %748 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %728, i64 1
  %749 = icmp ult %struct.AF_SegmentRec_* %748, %722
  br i1 %749, label %727, label %773

750:                                              ; preds = %725, %770
  %751 = phi %struct.AF_SegmentRec_* [ %771, %770 ], [ %718, %725 ]
  %752 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %751, i64 0, i32 7
  %753 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %752, align 8
  %754 = icmp eq %struct.AF_EdgeRec_* %753, null
  br i1 %754, label %770, label %755

755:                                              ; preds = %750
  %756 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %751, i64 0, i32 13
  %757 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %751, i64 0, i32 14
  %758 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %757, align 8
  %759 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %753, i64 0, i32 2
  br label %760

760:                                              ; preds = %760, %755
  %761 = phi %struct.AF_PointRec_** [ %756, %755 ], [ %769, %760 ]
  %762 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %761, align 8
  %763 = load i64, i64* %759, align 8
  %764 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %762, i64 0, i32 8
  store i64 %763, i64* %764, align 8
  %765 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %762, i64 0, i32 0
  %766 = load i16, i16* %765, align 8
  %767 = or i16 %766, 8
  store i16 %767, i16* %765, align 8
  %768 = icmp eq %struct.AF_PointRec_* %762, %758
  %769 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %762, i64 0, i32 11
  br i1 %768, label %770, label %760

770:                                              ; preds = %760, %750
  %771 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %751, i64 1
  %772 = icmp ult %struct.AF_SegmentRec_* %771, %722
  br i1 %772, label %750, label %773

773:                                              ; preds = %770, %747, %725, %726
  tail call fastcc void @af_glyph_hints_align_strong_points(%struct.AF_GlyphHintsRec_* %1, i32 %175)
  tail call fastcc void @af_glyph_hints_align_weak_points(%struct.AF_GlyphHintsRec_* %1, i32 %175)
  br label %774

774:                                              ; preds = %176, %173, %180, %773
  %775 = add nuw nsw i64 %174, 1
  %776 = icmp eq i64 %775, 2
  br i1 %776, label %777, label %173

777:                                              ; preds = %774
  %778 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 7
  %779 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %778, align 8
  %780 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %1, i64 0, i32 6
  %781 = load i32, i32* %780, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %779, i64 %782
  %784 = icmp sgt i32 %781, 0
  br i1 %784, label %785, label %815

785:                                              ; preds = %777
  %786 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 3
  %787 = load i8*, i8** %786, align 8
  %788 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  %789 = load %struct.FT_Vector_*, %struct.FT_Vector_** %788, align 8
  br label %790

790:                                              ; preds = %809, %785
  %791 = phi i8* [ %813, %809 ], [ %787, %785 ]
  %792 = phi %struct.FT_Vector_* [ %812, %809 ], [ %789, %785 ]
  %793 = phi %struct.AF_PointRec_* [ %811, %809 ], [ %779, %785 ]
  %794 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %793, i64 0, i32 7
  %795 = load i64, i64* %794, align 8
  %796 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %792, i64 0, i32 0
  store i64 %795, i64* %796, align 8
  %797 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %793, i64 0, i32 8
  %798 = load i64, i64* %797, align 8
  %799 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %792, i64 0, i32 1
  store i64 %798, i64* %799, align 8
  %800 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %793, i64 0, i32 0
  %801 = load i16, i16* %800, align 8
  %802 = zext i16 %801 to i32
  %803 = and i32 %802, 1
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %809

805:                                              ; preds = %790
  %806 = and i32 %802, 2
  %807 = icmp eq i32 %806, 0
  %808 = select i1 %807, i8 1, i8 2
  br label %809

809:                                              ; preds = %805, %790
  %810 = phi i8 [ 0, %790 ], [ %808, %805 ]
  store i8 %810, i8* %791, align 1
  %811 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %793, i64 1
  %812 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %792, i64 1
  %813 = getelementptr inbounds i8, i8* %791, i64 1
  %814 = icmp ult %struct.AF_PointRec_* %811, %783
  br i1 %814, label %790, label %815

815:                                              ; preds = %809, %777, %24, %12, %4
  %816 = phi i32 [ %5, %4 ], [ %28, %24 ], [ %16, %12 ], [ 0, %777 ], [ 0, %809 ]
  ret i32 %816
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_autofitter_load_glyph(%struct.AF_ModuleRec_*, %struct.FT_GlyphSlotRec_* nocapture readonly, %struct.FT_SizeRec_* nocapture readnone, i32, i32) #0 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.FT_Matrix_, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.AF_ScalerRec_, align 8
  %11 = alloca %struct.FT_Matrix_, align 8
  %12 = alloca %struct.FT_BBox_, align 16
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.FT_Vector_*
  %15 = alloca [1 x %struct.AF_GlyphHintsRec_], align 16
  %16 = alloca [1 x %struct.AF_LoaderRec_], align 16
  %17 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %0, i64 0, i32 0, i32 1
  %18 = bitcast %struct.FT_LibraryRec_** %17 to i64**
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 8
  %21 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12920, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 12920, i1 false)
  %22 = bitcast [1 x %struct.AF_LoaderRec_]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %22) #10
  %23 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0
  %24 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 1
  %25 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 5168, i1 false) #10
  %26 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %15 to i64*
  store i64 %20, i64* %26, align 16
  %27 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 120, i1 false) #10
  %28 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 2
  store %struct.AF_GlyphHintsRec_* %23, %struct.AF_GlyphHintsRec_** %28, align 16
  %29 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 1
  %30 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 22
  %32 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %31, align 8
  %33 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %32, i64 0, i32 3
  %34 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 21
  %36 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 21
  %38 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %38, i64 0, i32 0
  %40 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %39, align 8
  %41 = bitcast %struct.AF_ScalerRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 48, i1 false) #10
  %42 = icmp eq %struct.FT_SizeRec_* %32, null
  br i1 %42, label %610, label %43

43:                                               ; preds = %5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 48, i1 false) #10
  %44 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %34, i64 0, i32 2
  %45 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %34, i64 0, i32 2, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = lshr i32 %4, 16
  %50 = and i32 %49, 15
  br label %57

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %34, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %4, 16
  %55 = and i32 %54, 15
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %64, label %57

57:                                               ; preds = %51, %48
  %58 = phi i32 [ %50, %48 ], [ %55, %51 ]
  %59 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %34, i64 0, i32 1
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %32, i64 0, i32 2
  %61 = bitcast %struct.FT_Size_Metrics_* %44 to i8*
  %62 = bitcast %struct.FT_Size_Metrics_* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 56, i1 false) #10
  %63 = load i64, i64* %45, align 8
  br label %64

64:                                               ; preds = %57, %51
  %65 = phi i32 [ %53, %51 ], [ %58, %57 ]
  %66 = phi i64 [ %46, %51 ], [ %63, %57 ]
  %67 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 0
  store %struct.FT_FaceRec_* %30, %struct.FT_FaceRec_** %67, align 8
  %68 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 1
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 3
  %70 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %34, i64 0, i32 2, i32 3
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 2
  store i64 %71, i64* %72, align 8
  %73 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %73, align 8
  %74 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 5
  store i32 %65, i32* %74, align 8
  %75 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %10, i64 0, i32 6
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 0
  store %struct.FT_FaceRec_* %30, %struct.FT_FaceRec_** %76, align 16
  %77 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 28
  %78 = bitcast %struct.FT_Generic_* %77 to %struct.AF_FaceGlobalsRec_**
  %79 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %78, align 8
  %80 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 1
  store %struct.AF_FaceGlobalsRec_* %79, %struct.AF_FaceGlobalsRec_** %80, align 8
  %81 = icmp eq %struct.AF_FaceGlobalsRec_* %79, null
  br i1 %81, label %82, label %91

82:                                               ; preds = %64
  %83 = call fastcc i32 @af_face_globals_new(%struct.FT_FaceRec_* %30, %struct.AF_FaceGlobalsRec_** %80, %struct.AF_ModuleRec_* %0) #10
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %610

85:                                               ; preds = %82
  %86 = bitcast %struct.AF_FaceGlobalsRec_** %80 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %struct.FT_Generic_* %77 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 28, i32 1
  store void (i8*)* bitcast (void (%struct.AF_FaceGlobalsRec_*)* @af_face_globals_free to void (i8*)*), void (i8*)** %89, align 8
  %90 = inttoptr i64 %87 to %struct.AF_FaceGlobalsRec_*
  br label %91

91:                                               ; preds = %85, %64
  %92 = phi %struct.AF_FaceGlobalsRec_* [ %79, %64 ], [ %90, %85 ]
  %93 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #10
  store i32 0, i32* %9, align 4
  %94 = zext i32 %3 to i64
  %95 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %92, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = icmp ugt i64 %96, %94
  br i1 %97, label %99, label %98

98:                                               ; preds = %91
  store i32 6, i32* %9, align 4
  br label %161

99:                                               ; preds = %91
  %100 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %92, i64 0, i32 2
  %101 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %92, i64 0, i32 0
  %102 = load i16*, i16** %100, align 8
  %103 = getelementptr inbounds i16, i16* %102, i64 %94
  %104 = load i16, i16* %103, align 2
  %105 = and i16 %104, 16383
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %92, i64 0, i32 6, i64 %106
  %108 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %107, align 8
  %109 = icmp eq %struct.AF_StyleMetricsRec_* %108, null
  br i1 %109, label %120, label %165

110:                                              ; preds = %155
  %111 = load i16*, i16** %100, align 8
  %112 = getelementptr inbounds i16, i16* %111, i64 %94
  %113 = load i16, i16* %112, align 2
  %114 = and i16 %113, 16383
  %115 = zext i16 %114 to i64
  %116 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %92, i64 0, i32 6, i64 %115
  %117 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %116, align 8
  %118 = icmp eq %struct.AF_StyleMetricsRec_* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #10
  br label %610

120:                                              ; preds = %99, %110
  %121 = phi %struct.AF_StyleMetricsRec_** [ %116, %110 ], [ %107, %99 ]
  %122 = phi i64 [ %115, %110 ], [ %106, %99 ]
  %123 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %122
  %124 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %123, align 8
  %125 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [5 x %struct.AF_WritingSystemClassRec_*], [5 x %struct.AF_WritingSystemClassRec_*]* @af_writing_system_classes, i64 0, i64 %127
  %129 = load %struct.AF_WritingSystemClassRec_*, %struct.AF_WritingSystemClassRec_** %128, align 8
  %130 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %101, align 8
  %131 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %130, i64 0, i32 25
  %132 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %131, align 8
  %133 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %129, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %132, i64 %134, i32* nonnull %9) #10
  %136 = bitcast i8* %135 to %struct.AF_StyleMetricsRec_*
  %137 = load i32, i32* %9, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %161

139:                                              ; preds = %120
  %140 = bitcast i8* %135 to %struct.AF_StyleClassRec_**
  store %struct.AF_StyleClassRec_* %124, %struct.AF_StyleClassRec_** %140, align 8
  %141 = getelementptr inbounds i8, i8* %135, i64 64
  %142 = bitcast i8* %141 to %struct.AF_FaceGlobalsRec_**
  store %struct.AF_FaceGlobalsRec_* %92, %struct.AF_FaceGlobalsRec_** %142, align 8
  %143 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %129, i64 0, i32 2
  %144 = load i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)*, i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)** %143, align 8
  %145 = icmp eq i32 (%struct.AF_StyleMetricsRec_*, %struct.FT_FaceRec_*)* %144, null
  br i1 %145, label %158, label %146

146:                                              ; preds = %139
  %147 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %101, align 8
  %148 = call i32 %144(%struct.AF_StyleMetricsRec_* %136, %struct.FT_FaceRec_* %147) #10
  store i32 %148, i32* %9, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %129, i64 0, i32 4
  %152 = load void (%struct.AF_StyleMetricsRec_*)*, void (%struct.AF_StyleMetricsRec_*)** %151, align 8
  %153 = icmp eq void (%struct.AF_StyleMetricsRec_*)* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void %152(%struct.AF_StyleMetricsRec_* %136) #10
  br label %155

155:                                              ; preds = %154, %150
  call void @ft_mem_free(%struct.FT_MemoryRec_* %132, i8* %135) #10
  %156 = load i32, i32* %9, align 4
  %157 = icmp eq i32 %156, -1
  br i1 %157, label %110, label %163

158:                                              ; preds = %146, %139
  %159 = bitcast i8* %135 to %struct.AF_StyleMetricsRec_*
  %160 = bitcast %struct.AF_StyleMetricsRec_** %121 to i8**
  store i8* %135, i8** %160, align 8
  br label %165

161:                                              ; preds = %120, %98
  %162 = phi i32 [ 6, %98 ], [ %137, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #10
  br label %610

163:                                              ; preds = %155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #10
  %164 = icmp eq i32 %156, 0
  br i1 %164, label %167, label %610

165:                                              ; preds = %99, %158
  %166 = phi %struct.AF_StyleMetricsRec_* [ %159, %158 ], [ %108, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #10
  br label %167

167:                                              ; preds = %165, %163
  %168 = phi %struct.AF_StyleMetricsRec_* [ null, %163 ], [ %166, %165 ]
  %169 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %168, i64 0, i32 0
  %170 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %169, align 8
  %171 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %170, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds [5 x %struct.AF_WritingSystemClassRec_*], [5 x %struct.AF_WritingSystemClassRec_*]* @af_writing_system_classes, i64 0, i64 %173
  %175 = load %struct.AF_WritingSystemClassRec_*, %struct.AF_WritingSystemClassRec_** %174, align 8
  %176 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 3
  store %struct.AF_StyleMetricsRec_* %168, %struct.AF_StyleMetricsRec_** %176, align 8
  %177 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %175, i64 0, i32 3
  %178 = load void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)*, void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)** %177, align 8
  %179 = icmp eq void (%struct.AF_StyleMetricsRec_*, %struct.AF_ScalerRec_*)* %178, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %167
  call void %178(%struct.AF_StyleMetricsRec_* %168, %struct.AF_ScalerRec_* nonnull %10) #10
  br label %184

181:                                              ; preds = %167
  %182 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %168, i64 0, i32 1
  %183 = bitcast %struct.AF_ScalerRec_* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* nonnull align 8 %41, i64 48, i1 false) #10
  br label %184

184:                                              ; preds = %181, %180
  %185 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %175, i64 0, i32 6
  %186 = load i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)*, i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)** %185, align 8
  %187 = icmp eq i32 (%struct.AF_GlyphHintsRec_*, %struct.AF_StyleMetricsRec_*)* %186, null
  br i1 %187, label %191, label %188

188:                                              ; preds = %184
  %189 = call i32 %186(%struct.AF_GlyphHintsRec_* nonnull %23, %struct.AF_StyleMetricsRec_* %168) #10
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %610

191:                                              ; preds = %188, %184
  %192 = and i32 %4, -10246
  %193 = or i32 %192, 10241
  %194 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %30, i32 %3, i32 %193) #10
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %610

196:                                              ; preds = %191
  %197 = load i32, i32* %74, align 8
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %315

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 30
  %201 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %200, align 8
  %202 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %201, i64 0, i32 5
  %203 = load i8, i8* %202, align 8
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %211, label %205

205:                                              ; preds = %199
  %206 = icmp slt i8 %203, 0
  br i1 %206, label %207, label %315

207:                                              ; preds = %205
  %208 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %0, i64 0, i32 3
  %209 = load i8, i8* %208, align 8
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %211, label %315

211:                                              ; preds = %207, %199
  %212 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %35, align 8
  %213 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %80, align 8
  %214 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %31, align 8
  %215 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %214, i64 0, i32 3
  %216 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %215, align 8
  %217 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #10
  store i64 0, i64* %6, align 8
  %218 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #10
  store i64 0, i64* %7, align 8
  %219 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %216, i64 0, i32 2, i32 0
  %220 = load i16, i16* %219, align 8
  %221 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 7
  %222 = load i16, i16* %221, align 8
  %223 = icmp ne i16 %220, %222
  %224 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %30, i64 0, i32 13
  %225 = load i16, i16* %224, align 8
  %226 = zext i16 %225 to i64
  %227 = shl nuw nsw i64 %226, 16
  %228 = bitcast %struct.FT_Matrix_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %228) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %228, i8* align 8 bitcast (%struct.FT_Matrix_* @__const.af_loader_embolden_glyph_in_slot.scale_down_matrix to i8*), i64 32, i1 false) #10
  %229 = icmp eq i16 %225, 0
  br i1 %229, label %314, label %230

230:                                              ; preds = %211
  %231 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %169, align 8
  %232 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %231, i64 0, i32 1
  %233 = load i32, i32* %232, align 4
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds [5 x %struct.AF_WritingSystemClassRec_*], [5 x %struct.AF_WritingSystemClassRec_*]* @af_writing_system_classes, i64 0, i64 %234
  %236 = load %struct.AF_WritingSystemClassRec_*, %struct.AF_WritingSystemClassRec_** %235, align 8
  %237 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %236, i64 0, i32 5
  %238 = load void (%struct.AF_StyleMetricsRec_*, i64*, i64*)*, void (%struct.AF_StyleMetricsRec_*, i64*, i64*)** %237, align 8
  %239 = icmp eq void (%struct.AF_StyleMetricsRec_*, i64*, i64*)* %238, null
  br i1 %239, label %314, label %240

240:                                              ; preds = %230
  call void %238(%struct.AF_StyleMetricsRec_* %168, i64* nonnull %7, i64* nonnull %6) #10
  %241 = load i64, i64* %6, align 8
  br i1 %223, label %248, label %242

242:                                              ; preds = %240
  %243 = icmp sgt i64 %241, 0
  br i1 %243, label %244, label %271

244:                                              ; preds = %242
  %245 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 8
  %246 = load i64, i64* %245, align 8
  %247 = icmp eq i64 %241, %246
  br i1 %247, label %271, label %248

248:                                              ; preds = %244, %240
  %249 = call fastcc i64 @af_loader_compute_darkening(%struct.AF_LoaderRec_* nonnull %27, %struct.FT_FaceRec_* %30, i64 %241) #10
  %250 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %216, i64 0, i32 2, i32 2
  %251 = load i64, i64* %250, align 8
  %252 = shl i64 %249, 32
  %253 = ashr exact i64 %252, 32
  %254 = shl i64 %251, 32
  %255 = ashr exact i64 %254, 32
  %256 = mul nsw i64 %255, %253
  %257 = ashr i64 %256, 63
  %258 = add nsw i64 %256, 32768
  %259 = add nsw i64 %258, %257
  %260 = lshr i64 %259, 16
  %261 = load i64, i64* %6, align 8
  %262 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 8
  store i64 %261, i64* %262, align 8
  %263 = load i16, i16* %219, align 8
  store i16 %263, i16* %221, align 8
  %264 = add nuw nsw i64 %260, 32768
  %265 = lshr i64 %264, 16
  %266 = shl i64 %265, 48
  %267 = ashr exact i64 %266, 48
  %268 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 10
  store i64 %267, i64* %268, align 8
  br i1 %223, label %269, label %271

269:                                              ; preds = %248
  %270 = load i64, i64* %7, align 8
  br label %278

271:                                              ; preds = %248, %244, %242
  %272 = load i64, i64* %7, align 8
  %273 = icmp sgt i64 %272, 0
  br i1 %273, label %274, label %304

274:                                              ; preds = %271
  %275 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 9
  %276 = load i64, i64* %275, align 8
  %277 = icmp eq i64 %272, %276
  br i1 %277, label %304, label %278

278:                                              ; preds = %274, %269
  %279 = phi i64 [ %270, %269 ], [ %272, %274 ]
  %280 = call fastcc i64 @af_loader_compute_darkening(%struct.AF_LoaderRec_* nonnull %27, %struct.FT_FaceRec_* %30, i64 %279) #10
  %281 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %216, i64 0, i32 2, i32 3
  %282 = load i64, i64* %281, align 8
  %283 = shl i64 %280, 32
  %284 = ashr exact i64 %283, 32
  %285 = shl i64 %282, 32
  %286 = ashr exact i64 %285, 32
  %287 = mul nsw i64 %286, %284
  %288 = ashr i64 %287, 63
  %289 = add nsw i64 %287, 32768
  %290 = add nsw i64 %289, %288
  %291 = lshr i64 %290, 16
  %292 = load i64, i64* %7, align 8
  %293 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 9
  store i64 %292, i64* %293, align 8
  %294 = load i16, i16* %219, align 8
  store i16 %294, i16* %221, align 8
  %295 = add nuw nsw i64 %291, 32768
  %296 = lshr i64 %295, 16
  %297 = shl i64 %296, 48
  %298 = ashr exact i64 %297, 48
  %299 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 11
  store i64 %298, i64* %299, align 8
  %300 = add nsw i64 %227, -524288
  %301 = sub i64 %300, %280
  %302 = call i64 @FT_DivFix(i64 %301, i64 %227) #10
  %303 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 12
  store i64 %302, i64* %303, align 8
  br label %304

304:                                              ; preds = %278, %274, %271
  %305 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %212, i64 0, i32 13
  %306 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 10
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 11
  %309 = load i64, i64* %308, align 8
  %310 = call i32 @FT_Outline_EmboldenXY(%struct.FT_Outline_* %305, i64 %307, i64 %309) #10
  %311 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %213, i64 0, i32 12
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %8, i64 0, i32 3
  store i64 %312, i64* %313, align 8
  call void @FT_Outline_Transform(%struct.FT_Outline_* %305, %struct.FT_Matrix_* nonnull %8) #10
  br label %314

314:                                              ; preds = %304, %230, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %228) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #10
  br label %315

315:                                              ; preds = %314, %207, %205, %196
  %316 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %38, i64 0, i32 2
  %317 = load i8, i8* %316, align 4
  %318 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 4
  store i8 %317, i8* %318, align 16
  %319 = icmp eq i8 %317, 0
  br i1 %319, label %334, label %320

320:                                              ; preds = %315
  %321 = bitcast %struct.FT_Matrix_* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %321) #10
  %322 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 5
  %323 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %38, i64 0, i32 3
  %324 = bitcast %struct.FT_Matrix_* %322 to i8*
  %325 = bitcast %struct.FT_Matrix_* %323 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %321, i8 -86, i64 32, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* align 8 %325, i64 32, i1 false) #10
  %326 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 6
  %327 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %38, i64 0, i32 4
  %328 = bitcast %struct.FT_Vector_* %326 to i8*
  %329 = bitcast %struct.FT_Vector_* %327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 %329, i64 16, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %321, i8* align 8 %324, i64 32, i1 false) #10
  %330 = call i32 @FT_Matrix_Invert(%struct.FT_Matrix_* nonnull %11) #10
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %320
  call void @FT_Vector_Transform(%struct.FT_Vector_* %326, %struct.FT_Matrix_* nonnull %11) #10
  br label %333

333:                                              ; preds = %332, %320
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %321) #10
  br label %334

334:                                              ; preds = %333, %315
  %335 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 9
  %336 = load i32, i32* %335, align 8
  %337 = icmp eq i32 %336, 1869968492
  br i1 %337, label %338, label %467

338:                                              ; preds = %334
  %339 = load i8, i8* %318, align 16
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %347, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 13
  %343 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 6, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 6, i32 1
  %346 = load i64, i64* %345, align 8
  call void @FT_Outline_Translate(%struct.FT_Outline_* %342, i64 %344, i64 %346) #10
  br label %347

347:                                              ; preds = %341, %338
  %348 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 2
  %349 = load i64, i64* %348, align 16
  %350 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 7, i32 0
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 4
  %352 = load i64, i64* %351, align 16
  %353 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 7, i32 1
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 4
  %355 = load i64, i64* %354, align 8
  %356 = load i64, i64* %24, align 8
  %357 = shl i64 %355, 32
  %358 = ashr exact i64 %357, 32
  %359 = shl i64 %356, 32
  %360 = ashr exact i64 %359, 32
  %361 = mul nsw i64 %360, %358
  %362 = ashr i64 %361, 63
  %363 = add nsw i64 %361, 32768
  %364 = add nsw i64 %363, %362
  %365 = shl i64 %364, 16
  %366 = ashr i64 %365, 32
  %367 = add nsw i64 %366, %349
  %368 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 8, i32 0
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 8, i32 1
  store i64 %352, i64* %369, align 8
  %370 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 13, i32 1
  %371 = load i16, i16* %370, align 2
  %372 = icmp eq i16 %371, 0
  br i1 %372, label %467, label %373

373:                                              ; preds = %347
  %374 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %175, i64 0, i32 7
  %375 = load i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)*, i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)** %374, align 8
  %376 = icmp eq i32 (i32, %struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*, %struct.AF_StyleMetricsRec_*)* %375, null
  br i1 %376, label %381, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %40, i64 0, i32 5, i32 0
  %379 = call i32 %375(i32 %3, %struct.AF_GlyphHintsRec_* nonnull %23, %struct.FT_Outline_* %378, %struct.AF_StyleMetricsRec_* %168) #10
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %610

381:                                              ; preds = %377, %373
  %382 = load i32, i32* %74, align 8
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %456, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 11, i64 0, i32 3
  %386 = load i32, i32* %385, align 8
  %387 = icmp sgt i32 %386, 1
  br i1 %387, label %388, label %440

388:                                              ; preds = %384
  %389 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 12
  %390 = load i32, i32* %389, align 8
  %391 = and i32 %390, 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %440

393:                                              ; preds = %388
  %394 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 11, i64 0, i32 5
  %395 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %394, align 8
  %396 = sext i32 %386 to i64
  %397 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %395, i64 %396
  %398 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %397, i64 -1
  %399 = load i64, i64* %368, align 8
  %400 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %398, i64 0, i32 1
  %401 = load i64, i64* %400, align 8
  %402 = sub nsw i64 %399, %401
  %403 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %395, i64 0, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %395, i64 0, i32 2
  %406 = load i64, i64* %405, align 8
  %407 = sub nsw i64 %406, %404
  %408 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %398, i64 0, i32 2
  %409 = load i64, i64* %408, align 8
  %410 = add nsw i64 %409, %402
  %411 = icmp slt i64 %404, 24
  %412 = add nsw i64 %407, -8
  %413 = select i1 %411, i64 %412, i64 %407
  %414 = icmp slt i64 %402, 24
  %415 = add nsw i64 %410, 8
  %416 = select i1 %414, i64 %415, i64 %410
  %417 = add nsw i64 %413, 32
  %418 = and i64 %417, -64
  store i64 %418, i64* %350, align 8
  %419 = add nsw i64 %416, 32
  %420 = and i64 %419, -64
  store i64 %420, i64* %368, align 8
  %421 = icmp sge i64 %418, %406
  %422 = icmp sgt i64 %404, 0
  %423 = and i1 %422, %421
  br i1 %423, label %424, label %426

424:                                              ; preds = %393
  %425 = add nsw i64 %418, -64
  store i64 %425, i64* %350, align 8
  br label %426

426:                                              ; preds = %424, %393
  %427 = phi i64 [ %425, %424 ], [ %418, %393 ]
  %428 = load i64, i64* %408, align 8
  %429 = icmp sle i64 %420, %428
  %430 = icmp sgt i64 %402, 0
  %431 = and i1 %430, %429
  br i1 %431, label %432, label %434

432:                                              ; preds = %426
  %433 = add nsw i64 %420, 64
  store i64 %433, i64* %368, align 8
  br label %434

434:                                              ; preds = %432, %426
  %435 = phi i64 [ %433, %432 ], [ %420, %426 ]
  %436 = sub nsw i64 %427, %413
  %437 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 18
  store i64 %436, i64* %437, align 8
  %438 = sub nsw i64 %435, %416
  %439 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 19
  store i64 %438, i64* %439, align 8
  br label %467

440:                                              ; preds = %388, %384
  %441 = load i64, i64* %350, align 8
  %442 = load i64, i64* %368, align 8
  %443 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %15, i64 0, i64 0, i32 15
  %444 = bitcast i64* %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8
  %446 = insertelement <2 x i64> undef, i64 %441, i32 0
  %447 = insertelement <2 x i64> %446, i64 %442, i32 1
  %448 = add <2 x i64> %447, <i64 32, i64 32>
  %449 = add <2 x i64> %448, %445
  %450 = and <2 x i64> %449, <i64 -64, i64 -64>
  %451 = extractelement <2 x i64> %450, i32 0
  store i64 %451, i64* %350, align 8
  %452 = extractelement <2 x i64> %450, i32 1
  store i64 %452, i64* %368, align 8
  %453 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 18
  %454 = sub nsw <2 x i64> %450, %447
  %455 = bitcast i64* %453 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %455, align 8
  br label %467

456:                                              ; preds = %381
  %457 = load i64, i64* %350, align 8
  %458 = load i64, i64* %368, align 8
  %459 = add nsw i64 %457, 32
  %460 = and i64 %459, -64
  store i64 %460, i64* %350, align 8
  %461 = add nsw i64 %458, 32
  %462 = and i64 %461, -64
  store i64 %462, i64* %368, align 8
  %463 = sub nsw i64 %460, %457
  %464 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 18
  store i64 %463, i64* %464, align 8
  %465 = sub nsw i64 %462, %458
  %466 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 19
  store i64 %465, i64* %466, align 8
  br label %467

467:                                              ; preds = %456, %440, %434, %347, %334
  %468 = phi i32 [ 0, %347 ], [ 0, %456 ], [ 0, %440 ], [ 0, %434 ], [ 7, %334 ]
  %469 = bitcast %struct.FT_BBox_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %469) #10
  %470 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %12, i64 0, i32 2
  %471 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %469, i8 -86, i64 32, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %471) #10
  %472 = getelementptr inbounds <2 x i64>, <2 x i64>* %13, i64 0, i64 0
  %473 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %14, i64 0, i32 1
  %474 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 5
  %475 = load i64, i64* %474, align 8
  %476 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 2
  %477 = load i64, i64* %476, align 8
  %478 = sub nsw i64 %475, %477
  %479 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 6
  %480 = load i64, i64* %479, align 8
  %481 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 3
  %482 = load i64, i64* %481, align 8
  %483 = sub nsw i64 %480, %482
  %484 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %168, i64 0, i32 1, i32 1
  %485 = load i64, i64* %484, align 8
  %486 = shl i64 %478, 32
  %487 = ashr exact i64 %486, 32
  %488 = shl i64 %485, 32
  %489 = ashr exact i64 %488, 32
  %490 = mul nsw i64 %489, %487
  %491 = ashr i64 %490, 63
  %492 = add nsw i64 %490, 32768
  %493 = add nsw i64 %492, %491
  %494 = shl i64 %493, 16
  %495 = ashr i64 %494, 32
  store i64 %495, i64* %472, align 16
  %496 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %168, i64 0, i32 1, i32 2
  %497 = load i64, i64* %496, align 8
  %498 = shl i64 %483, 32
  %499 = ashr exact i64 %498, 32
  %500 = shl i64 %497, 32
  %501 = ashr exact i64 %500, 32
  %502 = mul nsw i64 %501, %499
  %503 = ashr i64 %502, 63
  %504 = add nsw i64 %502, 32768
  %505 = add nsw i64 %504, %503
  %506 = shl i64 %505, 16
  %507 = ashr i64 %506, 32
  store i64 %507, i64* %473, align 8
  %508 = load i8, i8* %318, align 16
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %513, label %510

510:                                              ; preds = %467
  %511 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %40, i64 0, i32 5, i32 0
  %512 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 5
  call void @FT_Outline_Transform(%struct.FT_Outline_* %511, %struct.FT_Matrix_* %512) #10
  call void @FT_Vector_Transform(%struct.FT_Vector_* nonnull %14, %struct.FT_Matrix_* %512) #10
  br label %513

513:                                              ; preds = %510, %467
  %514 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 7, i32 0
  %515 = load i64, i64* %514, align 8
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %520, label %517

517:                                              ; preds = %513
  %518 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %40, i64 0, i32 5, i32 0
  %519 = sub nsw i64 0, %515
  call void @FT_Outline_Translate(%struct.FT_Outline_* %518, i64 %519, i64 0) #10
  br label %520

520:                                              ; preds = %517, %513
  %521 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %40, i64 0, i32 5, i32 0
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %521, %struct.FT_BBox_* nonnull %12) #10
  %522 = bitcast %struct.FT_BBox_* %12 to <2 x i64>*
  %523 = load <2 x i64>, <2 x i64>* %522, align 16
  %524 = and <2 x i64> %523, <i64 -64, i64 -64>
  %525 = bitcast %struct.FT_BBox_* %12 to <2 x i64>*
  store <2 x i64> %524, <2 x i64>* %525, align 16
  %526 = bitcast i64* %470 to <2 x i64>*
  %527 = load <2 x i64>, <2 x i64>* %526, align 16
  %528 = add nsw <2 x i64> %527, <i64 63, i64 63>
  %529 = and <2 x i64> %528, <i64 -64, i64 -64>
  %530 = bitcast i64* %470 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %530, align 16
  %531 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 0
  %532 = sub nsw <2 x i64> %529, %524
  %533 = bitcast i64* %531 to <2 x i64>*
  store <2 x i64> %532, <2 x i64>* %533, align 8
  %534 = extractelement <2 x i64> %524, i32 0
  store i64 %534, i64* %476, align 8
  %535 = extractelement <2 x i64> %529, i32 1
  store i64 %535, i64* %481, align 8
  %536 = load <2 x i64>, <2 x i64>* %13, align 16
  %537 = shufflevector <2 x i64> %524, <2 x i64> %529, <2 x i32> <i32 0, i32 3>
  %538 = add nsw <2 x i64> %536, %537
  %539 = and <2 x i64> %538, <i64 -64, i64 -64>
  %540 = bitcast i64* %474 to <2 x i64>*
  store <2 x i64> %539, <2 x i64>* %540, align 8
  %541 = load i32, i32* %74, align 8
  %542 = icmp eq i32 %541, 1
  br i1 %542, label %581, label %543

543:                                              ; preds = %520
  %544 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 1
  %545 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %544, align 8
  %546 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %545, i64 0, i32 2
  %547 = load i64, i64* %546, align 8
  %548 = and i64 %547, 4
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %550, label %565

550:                                              ; preds = %543
  %551 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %80, align 8
  %552 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %551, i64 0, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = icmp ugt i64 %553, %94
  br i1 %554, label %555, label %581

555:                                              ; preds = %550
  %556 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %551, i64 0, i32 2
  %557 = load i16*, i16** %556, align 8
  %558 = getelementptr inbounds i16, i16* %557, i64 %94
  %559 = load i16, i16* %558, align 2
  %560 = icmp sgt i16 %559, -1
  br i1 %560, label %581, label %561

561:                                              ; preds = %555
  %562 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %168, i64 0, i32 2
  %563 = load i8, i8* %562, align 8
  %564 = icmp eq i8 %563, 0
  br i1 %564, label %581, label %565

565:                                              ; preds = %561, %543
  %566 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 4
  %567 = load i64, i64* %566, align 8
  %568 = load i64, i64* %484, align 8
  %569 = shl i64 %567, 32
  %570 = ashr exact i64 %569, 32
  %571 = shl i64 %568, 32
  %572 = ashr exact i64 %571, 32
  %573 = mul nsw i64 %572, %570
  %574 = ashr i64 %573, 63
  %575 = add nsw i64 %573, 32768
  %576 = add nsw i64 %575, %574
  %577 = shl i64 %576, 16
  %578 = ashr i64 %577, 32
  store i64 %578, i64* %566, align 8
  %579 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 18
  %580 = bitcast i64* %579 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %580, i8 0, i64 16, i1 false) #10
  br label %590

581:                                              ; preds = %561, %555, %550, %520
  %582 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 4
  %583 = load i64, i64* %582, align 8
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %590, label %585

585:                                              ; preds = %581
  %586 = getelementptr inbounds [1 x %struct.AF_LoaderRec_], [1 x %struct.AF_LoaderRec_]* %16, i64 0, i64 0, i32 8, i32 0
  %587 = load i64, i64* %586, align 8
  %588 = load i64, i64* %514, align 8
  %589 = sub nsw i64 %587, %588
  store i64 %589, i64* %582, align 8
  br label %590

590:                                              ; preds = %585, %581, %565
  %591 = phi i64 [ 0, %581 ], [ %589, %585 ], [ %578, %565 ]
  %592 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 7
  %593 = load i64, i64* %592, align 8
  %594 = load i64, i64* %496, align 8
  %595 = shl i64 %593, 32
  %596 = ashr exact i64 %595, 32
  %597 = shl i64 %594, 32
  %598 = ashr exact i64 %597, 32
  %599 = mul nsw i64 %598, %596
  %600 = ashr i64 %599, 63
  %601 = add nsw i64 %599, 32768
  %602 = add nsw i64 %601, %600
  %603 = shl i64 %602, 16
  %604 = ashr i64 %603, 32
  %605 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 5, i32 4
  %606 = add nsw i64 %591, 32
  %607 = and i64 %606, -64
  store i64 %607, i64* %605, align 8
  %608 = add nsw i64 %604, 32
  %609 = and i64 %608, -64
  store i64 %609, i64* %592, align 8
  store i32 1869968492, i32* %335, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %471) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %469) #10
  br label %610

610:                                              ; preds = %5, %82, %119, %161, %163, %188, %191, %377, %590
  %611 = phi i32 [ 36, %5 ], [ %156, %163 ], [ %189, %188 ], [ %194, %191 ], [ %468, %590 ], [ %379, %377 ], [ %83, %82 ], [ %162, %161 ], [ -1, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 24, i1 false) #10
  call fastcc void @af_glyph_hints_done(%struct.AF_GlyphHintsRec_* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 12920, i8* nonnull %21) #10
  ret i32 %611
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @af_autofitter_init(%struct.FT_ModuleRec_* nocapture) #2 {
  %2 = bitcast %struct.FT_ModuleRec_* %0 to %struct.AF_ModuleRec_*
  %3 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1
  %4 = bitcast %struct.FT_ModuleRec_* %3 to i32*
  store i32 86, i32* %4, align 8
  %5 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %2, i64 0, i32 2
  store i32 30, i32* %5, align 4
  %6 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1, i32 1
  %7 = bitcast %struct.FT_LibraryRec_** %6 to i8*
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %2, i64 0, i32 4, i64 0
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 500, i32 400, i32 1000, i32 275>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %2, i64 0, i32 4, i64 4
  %11 = bitcast i32* %10 to <4 x i32>*
  store <4 x i32> <i32 1667, i32 275, i32 2333, i32 0>, <4 x i32>* %11, align 4
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @af_autofitter_done(%struct.FT_ModuleRec_* nocapture) #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @af_get_interface(%struct.FT_ModuleRec_* nocapture readnone, i8*) #0 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([2 x %struct.FT_ServiceDescRec_], [2 x %struct.FT_ServiceDescRec_]* @af_services, i64 0, i64 0), i8* %1) #10
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @af_shaper_get_coverage(%struct.AF_FaceGlobalsRec_* readonly, %struct.AF_StyleClassRec_* readonly, i16*, i8 zeroext) local_unnamed_addr #0 {
  %5 = alloca [4 x i32], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [3 x i32], align 4
  %9 = alloca i32, align 4
  %10 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 -1431655766, i32* %6, align 4
  %12 = icmp ne %struct.AF_FaceGlobalsRec_* %0, null
  %13 = icmp ne %struct.AF_StyleClassRec_* %1, null
  %14 = and i1 %12, %13
  %15 = icmp ne i16* %2, null
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %186

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 3
  %19 = load %struct.hb_font_t*, %struct.hb_font_t** %18, align 8
  %20 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %19) #10
  %21 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [11 x i32*], [11 x i32*]* @coverages, i64 0, i64 %23
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [60 x i32], [60 x i32]* @scripts, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #10
  store i32 3, i32* %7, align 4
  %32 = bitcast [3 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #10
  %33 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 0
  store i32 -1431655766, i32* %33, align 4
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  store i32 -1431655766, i32* %34, align 4
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  store i32 -1431655766, i32* %35, align 4
  call void @hb_ot_tags_from_script_and_language(i32 %30, %struct.hb_language_impl_t* null, i32* nonnull %7, i32* nonnull %33, i32* null, i32* null) #10
  %36 = load i32, i32* %7, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* %33, align 4
  %39 = select i1 %37, i32 0, i32 %38
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  store i32 %39, i32* %40, align 16
  %41 = icmp ugt i32 %36, 1
  %42 = load i32, i32* %34, align 4
  %43 = select i1 %41, i32 %42, i32 0
  %44 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  store i32 %43, i32* %44, align 4
  %45 = icmp ugt i32 %36, 2
  %46 = load i32, i32* %35, align 4
  %47 = select i1 %45, i32 %46, i32 0
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  store i32 %47, i32* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #10
  %49 = icmp eq i8 %3, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %17
  %51 = icmp eq i32 %39, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  store i32 1145457748, i32* %40, align 16
  br label %58

53:                                               ; preds = %50
  switch i32 %43, label %55 [
    i32 0, label %54
    i32 1145457748, label %58
  ]

54:                                               ; preds = %53
  store i32 1145457748, i32* %44, align 4
  br label %58

55:                                               ; preds = %53
  store i32 1145457748, i32* %48, align 8
  br label %58

56:                                               ; preds = %17
  %57 = icmp eq i32 %39, 1145457748
  br i1 %57, label %181, label %58

58:                                               ; preds = %53, %56, %52, %55, %54
  %59 = call %struct.hb_set_t* @hb_set_create() #10
  call void @hb_ot_layout_collect_lookups(%struct.hb_face_t* %20, i32 1196643650, i32* nonnull %40, i32* null, i32* %25, %struct.hb_set_t* %59) #10
  %60 = call i32 @hb_set_is_empty(%struct.hb_set_t* %59) #10
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %181

62:                                               ; preds = %58
  %63 = call %struct.hb_set_t* @hb_set_create() #10
  store i32 -1, i32* %6, align 4
  %64 = call i32 @hb_set_next(%struct.hb_set_t* %59, i32* nonnull %6) #10
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %62, %66
  %67 = load i32, i32* %6, align 4
  call void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t* %20, i32 1196643650, i32 %67, %struct.hb_set_t* null, %struct.hb_set_t* null, %struct.hb_set_t* null, %struct.hb_set_t* %63) #10
  %68 = call i32 @hb_set_next(%struct.hb_set_t* %59, i32* nonnull %6) #10
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %66

70:                                               ; preds = %66, %62
  %71 = call %struct.hb_set_t* @hb_set_create() #10
  call void @hb_ot_layout_collect_lookups(%struct.hb_face_t* %20, i32 1196445523, i32* nonnull %40, i32* null, i32* %25, %struct.hb_set_t* %71) #10
  %72 = call %struct.hb_set_t* @hb_set_create() #10
  store i32 -1, i32* %6, align 4
  %73 = call i32 @hb_set_next(%struct.hb_set_t* %71, i32* nonnull %6) #10
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %70, %75
  %76 = load i32, i32* %6, align 4
  call void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t* %20, i32 1196445523, i32 %76, %struct.hb_set_t* null, %struct.hb_set_t* %72, %struct.hb_set_t* null, %struct.hb_set_t* null) #10
  %77 = call i32 @hb_set_next(%struct.hb_set_t* %71, i32* nonnull %6) #10
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %70
  %80 = load i32, i32* %21, align 4
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %159, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %1, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [265 x %struct.AF_Blue_StringRec_], [265 x %struct.AF_Blue_StringRec_]* @af_blue_stringsets, i64 0, i64 %85
  %87 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 5531
  br i1 %89, label %181, label %90

90:                                               ; preds = %82
  %91 = bitcast i32* %9 to i8*
  %92 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 0
  br label %93

93:                                               ; preds = %90, %147
  %94 = phi i32 [ %88, %90 ], [ %151, %147 ]
  %95 = phi i8 [ 0, %90 ], [ %148, %147 ]
  %96 = phi %struct.AF_Blue_StringRec_* [ %86, %90 ], [ %149, %147 ]
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds [5531 x i8], [5531 x i8]* @af_blue_strings, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %147, label %101

101:                                              ; preds = %93, %143
  %102 = phi i8 [ %145, %143 ], [ %99, %93 ]
  %103 = phi i8* [ %131, %143 ], [ %98, %93 ]
  %104 = phi i8 [ %144, %143 ], [ %95, %93 ]
  %105 = getelementptr inbounds i8, i8* %103, i64 1
  %106 = zext i8 %102 to i32
  %107 = icmp slt i8 %102, 0
  br i1 %107, label %108, label %130

108:                                              ; preds = %101
  %109 = icmp ult i8 %102, -32
  br i1 %109, label %114, label %110

110:                                              ; preds = %108
  %111 = icmp ult i8 %102, -16
  %112 = select i1 %111, i32 15, i32 7
  %113 = select i1 %111, i32 2, i32 3
  br label %114

114:                                              ; preds = %110, %108
  %115 = phi i32 [ 31, %108 ], [ %112, %110 ]
  %116 = phi i32 [ 1, %108 ], [ %113, %110 ]
  %117 = add nsw i32 %116, -1
  %118 = zext i32 %117 to i64
  %119 = and i32 %115, %106
  %120 = shl nuw nsw i32 %119, 6
  %121 = load i8, i8* %105, align 1
  %122 = and i8 %121, 63
  %123 = zext i8 %122 to i32
  %124 = or i32 %120, %123
  %125 = icmp eq i32 %116, 1
  br i1 %125, label %126, label %188

126:                                              ; preds = %196, %188, %114
  %127 = phi i32 [ %124, %114 ], [ %194, %188 ], [ %202, %196 ]
  %128 = getelementptr i8, i8* %103, i64 2
  %129 = getelementptr i8, i8* %128, i64 %118
  br label %130

130:                                              ; preds = %126, %101
  %131 = phi i8* [ %105, %101 ], [ %129, %126 ]
  %132 = phi i32 [ %106, %101 ], [ %127, %126 ]
  store i32 -1, i32* %6, align 4
  %133 = zext i32 %132 to i64
  br label %134

134:                                              ; preds = %137, %130
  %135 = call i32 @hb_set_next(%struct.hb_set_t* %59, i32* nonnull %6) #10
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %143, label %137

137:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #10
  store i32 -1431655766, i32* %9, align 4
  %138 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %92, align 8
  %139 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %138, i64 %133) #10
  store i32 %139, i32* %9, align 4
  %140 = load i32, i32* %6, align 4
  %141 = call i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t* %20, i32 %140, i32* nonnull %9, i32 1, i32 1) #10
  %142 = icmp eq i32 %141, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #10
  br i1 %142, label %134, label %143

143:                                              ; preds = %134, %137
  %144 = phi i8 [ 1, %137 ], [ %104, %134 ]
  %145 = load i8, i8* %131, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %101

147:                                              ; preds = %143, %93
  %148 = phi i8 [ %95, %93 ], [ %144, %143 ]
  %149 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %96, i64 1
  %150 = getelementptr inbounds %struct.AF_Blue_StringRec_, %struct.AF_Blue_StringRec_* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 5531
  br i1 %152, label %153, label %93

153:                                              ; preds = %147
  %154 = icmp eq i8 %148, 0
  br i1 %154, label %181, label %155

155:                                              ; preds = %153
  %156 = load i32, i32* %21, align 4
  %157 = icmp eq i32 %156, 10
  br i1 %157, label %159, label %158

158:                                              ; preds = %155
  call void @hb_set_subtract(%struct.hb_set_t* %63, %struct.hb_set_t* %72) #10
  br label %159

159:                                              ; preds = %79, %155, %158
  store i32 -1, i32* %6, align 4
  %160 = call i32 @hb_set_next(%struct.hb_set_t* %63, i32* nonnull %6) #10
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %181, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 1
  %164 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %1, i64 0, i32 0
  br label %165

165:                                              ; preds = %162, %178
  %166 = load i32, i32* %6, align 4
  %167 = load i64, i64* %163, align 8
  %168 = trunc i64 %167 to i32
  %169 = icmp ult i32 %166, %168
  br i1 %169, label %170, label %178

170:                                              ; preds = %165
  %171 = zext i32 %166 to i64
  %172 = getelementptr inbounds i16, i16* %2, i64 %171
  %173 = load i16, i16* %172, align 2
  %174 = icmp eq i16 %173, 16383
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = load i32, i32* %164, align 4
  %177 = trunc i32 %176 to i16
  store i16 %177, i16* %172, align 2
  br label %178

178:                                              ; preds = %170, %175, %165
  %179 = call i32 @hb_set_next(%struct.hb_set_t* %63, i32* nonnull %6) #10
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %165

181:                                              ; preds = %178, %82, %159, %153, %58, %56
  %182 = phi %struct.hb_set_t* [ %59, %58 ], [ %59, %153 ], [ null, %56 ], [ %59, %159 ], [ %59, %82 ], [ %59, %178 ]
  %183 = phi %struct.hb_set_t* [ null, %58 ], [ %63, %153 ], [ null, %56 ], [ %63, %159 ], [ %63, %82 ], [ %63, %178 ]
  %184 = phi %struct.hb_set_t* [ null, %58 ], [ %71, %153 ], [ null, %56 ], [ %71, %159 ], [ %71, %82 ], [ %71, %178 ]
  %185 = phi %struct.hb_set_t* [ null, %58 ], [ %72, %153 ], [ null, %56 ], [ %72, %159 ], [ %72, %82 ], [ %72, %178 ]
  call void @hb_set_destroy(%struct.hb_set_t* %182) #10
  call void @hb_set_destroy(%struct.hb_set_t* %183) #10
  call void @hb_set_destroy(%struct.hb_set_t* %184) #10
  call void @hb_set_destroy(%struct.hb_set_t* %185) #10
  br label %186

186:                                              ; preds = %4, %181
  %187 = phi i32 [ 0, %181 ], [ 6, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %187

188:                                              ; preds = %114
  %189 = getelementptr inbounds i8, i8* %103, i64 2
  %190 = shl nuw nsw i32 %124, 6
  %191 = load i8, i8* %189, align 1
  %192 = and i8 %191, 63
  %193 = zext i8 %192 to i32
  %194 = or i32 %190, %193
  %195 = icmp eq i32 %116, 2
  br i1 %195, label %126, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds i8, i8* %103, i64 3
  %198 = shl nuw nsw i32 %194, 6
  %199 = load i8, i8* %197, align 1
  %200 = and i8 %199, 63
  %201 = zext i8 %200 to i32
  %202 = or i32 %198, %201
  br label %126
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t*) local_unnamed_addr #5

declare void @hb_ot_tags_from_script_and_language(i32, %struct.hb_language_impl_t*, i32*, i32*, i32*, i32*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %struct.hb_set_t* @hb_set_create() local_unnamed_addr #5

declare void @hb_ot_layout_collect_lookups(%struct.hb_face_t*, i32, i32*, i32*, i32*, %struct.hb_set_t*) local_unnamed_addr #5

declare i32 @hb_set_is_empty(%struct.hb_set_t*) local_unnamed_addr #5

declare i32 @hb_set_next(%struct.hb_set_t*, i32*) local_unnamed_addr #5

declare void @hb_ot_layout_lookup_collect_glyphs(%struct.hb_face_t*, i32, i32, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*, %struct.hb_set_t*) local_unnamed_addr #5

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #5

declare i32 @hb_ot_layout_lookup_would_substitute(%struct.hb_face_t*, i32, i32*, i32, i32) local_unnamed_addr #5

declare void @hb_set_subtract(%struct.hb_set_t*, %struct.hb_set_t*) local_unnamed_addr #5

declare void @hb_set_destroy(%struct.hb_set_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @af_shaper_buf_create(%struct.FT_FaceRec_* nocapture readnone) local_unnamed_addr #0 {
  %2 = tail call %struct.hb_buffer_t* @hb_buffer_create() #10
  %3 = bitcast %struct.hb_buffer_t* %2 to i8*
  ret i8* %3
}

declare %struct.hb_buffer_t* @hb_buffer_create() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @af_shaper_buf_destroy(%struct.FT_FaceRec_* nocapture readnone, i8*) local_unnamed_addr #0 {
  %3 = bitcast i8* %1 to %struct.hb_buffer_t*
  tail call void @hb_buffer_destroy(%struct.hb_buffer_t* %3) #10
  ret void
}

declare void @hb_buffer_destroy(%struct.hb_buffer_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @af_shaper_get_cluster(i8*, %struct.AF_StyleMetricsRec_* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 3
  %8 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %7, align 8
  %9 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %8, i64 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 13
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %1, i64 0, i32 0
  %15 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %14, align 8
  %16 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [11 x %struct.hb_feature_t*], [11 x %struct.hb_feature_t*]* @features, i64 0, i64 %18
  %20 = load %struct.hb_feature_t*, %struct.hb_feature_t** %19, align 8
  %21 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %8, i64 0, i32 3
  %22 = load %struct.hb_font_t*, %struct.hb_font_t** %21, align 8
  tail call void @hb_font_set_scale(%struct.hb_font_t* %22, i32 %13, i32 %13) #10
  br label %23

23:                                               ; preds = %23, %4
  %24 = phi i8* [ %0, %4 ], [ %27, %23 ]
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 32
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  br i1 %26, label %23, label %28

28:                                               ; preds = %23
  %29 = bitcast i8* %2 to %struct.hb_buffer_t*
  %30 = and i8 %25, -33
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %28, %44
  %33 = phi i8* [ %45, %44 ], [ %24, %28 ]
  %34 = phi i8 [ %46, %44 ], [ %25, %28 ]
  %35 = getelementptr inbounds i8, i8* %33, i64 1
  %36 = icmp slt i8 %34, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = icmp ult i8 %34, -32
  %39 = icmp ult i8 %34, -16
  %40 = select i1 %39, i64 1, i64 2
  %41 = select i1 %38, i64 0, i64 %40
  %42 = getelementptr i8, i8* %33, i64 2
  %43 = getelementptr i8, i8* %42, i64 %41
  br label %44

44:                                               ; preds = %37, %32
  %45 = phi i8* [ %35, %32 ], [ %43, %37 ]
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, -33
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %32

49:                                               ; preds = %44, %28
  %50 = phi i8* [ %24, %28 ], [ %45, %44 ]
  %51 = ptrtoint i8* %50 to i64
  %52 = ptrtoint i8* %24 to i64
  %53 = sub i64 %51, %52
  %54 = trunc i64 %53 to i32
  tail call void @hb_buffer_clear_contents(%struct.hb_buffer_t* %29) #10
  tail call void @hb_buffer_add_utf8(%struct.hb_buffer_t* %29, i8* %24, i32 %54, i32 0, i32 %54) #10
  tail call void @hb_buffer_guess_segment_properties(%struct.hb_buffer_t* %29) #10
  %55 = icmp ne i32 %17, 10
  %56 = zext i1 %55 to i32
  tail call void @hb_shape(%struct.hb_font_t* %22, %struct.hb_buffer_t* %29, %struct.hb_feature_t* %20, i32 %56) #10
  br i1 %55, label %57, label %91

57:                                               ; preds = %49
  %58 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %7, align 8
  %59 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %58, i64 0, i32 4
  %60 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %59, align 8
  %61 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #10
  store i32 -1431655766, i32* %5, align 4
  %62 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #10
  store i32 -1431655766, i32* %6, align 4
  tail call void @hb_buffer_clear_contents(%struct.hb_buffer_t* %60) #10
  tail call void @hb_buffer_add_utf8(%struct.hb_buffer_t* %60, i8* %24, i32 %54, i32 0, i32 %54) #10
  tail call void @hb_buffer_guess_segment_properties(%struct.hb_buffer_t* %60) #10
  tail call void @hb_shape(%struct.hb_font_t* %22, %struct.hb_buffer_t* %60, %struct.hb_feature_t* null, i32 0) #10
  %63 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %29, i32* nonnull %5) #10
  %64 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %60, i32* nonnull %6) #10
  %65 = load i32, i32* %5, align 4
  %66 = load i32, i32* %6, align 4
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %68, label %90

68:                                               ; preds = %57
  %69 = icmp eq i32 %65, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %68
  %71 = zext i32 %65 to i64
  br label %72

72:                                               ; preds = %80, %70
  %73 = phi i64 [ 0, %70 ], [ %81, %80 ]
  %74 = phi i32 [ 0, %70 ], [ %82, %80 ]
  %75 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %63, i64 %73, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %64, i64 %73, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %72
  %81 = add nuw nsw i64 %73, 1
  %82 = add nuw i32 %74, 1
  %83 = icmp eq i64 %81, %71
  br i1 %83, label %86, label %72

84:                                               ; preds = %72
  %85 = trunc i64 %73 to i32
  br label %86

86:                                               ; preds = %80, %84, %68
  %87 = phi i32 [ 0, %68 ], [ %85, %84 ], [ %82, %80 ]
  %88 = icmp eq i32 %87, %65
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @hb_buffer_clear_contents(%struct.hb_buffer_t* %29) #10
  br label %90

90:                                               ; preds = %86, %89, %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #10
  br label %91

91:                                               ; preds = %90, %49
  %92 = call i32 @hb_buffer_get_length(%struct.hb_buffer_t* %29) #10
  store i32 %92, i32* %3, align 4
  ret i8* %50
}

declare void @hb_font_set_scale(%struct.hb_font_t*, i32, i32) local_unnamed_addr #5

declare void @hb_buffer_clear_contents(%struct.hb_buffer_t*) local_unnamed_addr #5

declare void @hb_buffer_add_utf8(%struct.hb_buffer_t*, i8*, i32, i32, i32) local_unnamed_addr #5

declare void @hb_buffer_guess_segment_properties(%struct.hb_buffer_t*) local_unnamed_addr #5

declare void @hb_shape(%struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32) local_unnamed_addr #5

declare %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t*, i32*) local_unnamed_addr #5

declare i32 @hb_buffer_get_length(%struct.hb_buffer_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @af_shaper_get_elem(%struct.AF_StyleMetricsRec_* nocapture readnone, i8*, i32, i64*, i64*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i8* %1 to %struct.hb_buffer_t*
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 -1431655766, i32* %6, align 4
  %9 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %7, i32* nonnull %6) #10
  %10 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %7, i32* nonnull %6) #10
  %11 = load i32, i32* %6, align 4
  %12 = icmp ugt i32 %11, %2
  br i1 %12, label %13, label %31

13:                                               ; preds = %5
  %14 = icmp eq i64* %3, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = zext i32 %2 to i64
  %17 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %10, i64 %16, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  store i64 %19, i64* %3, align 8
  br label %20

20:                                               ; preds = %13, %15
  %21 = icmp eq i64* %4, null
  %22 = zext i32 %2 to i64
  br i1 %21, label %27, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %10, i64 %22, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  store i64 %26, i64* %4, align 8
  br label %27

27:                                               ; preds = %20, %23
  %28 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %9, i64 %22, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %5, %27
  %32 = phi i64 [ %30, %27 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret i64 %32
}

declare %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t*, i32*) local_unnamed_addr #5

declare i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_cjk_metrics_init_widths(%struct.AF_CJKMetricsRec_* nocapture, %struct.FT_FaceRec_*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [1 x %struct.AF_GlyphHintsRec_], align 16
  %5 = alloca [1 x %struct.AF_CJKMetricsRec_], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12920, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 12920, i1 false)
  %9 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %11 = bitcast %struct.FT_MemoryRec_** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 1
  %14 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 5168, i1 false) #10
  %15 = bitcast [1 x %struct.AF_GlyphHintsRec_]* %4 to i64*
  store i64 %12, i64* %15, align 16
  %16 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 2
  store i32 0, i32* %17, align 8
  %18 = bitcast [1 x %struct.AF_CJKMetricsRec_]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 30768, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 30768, i1 false)
  %19 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0
  %20 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0, i32 0
  %21 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %20, align 8
  %22 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [61 x %struct.AF_ScriptClassRec_*], [61 x %struct.AF_ScriptClassRec_*]* @af_script_classes, i64 0, i64 %24
  %26 = load %struct.AF_ScriptClassRec_*, %struct.AF_ScriptClassRec_** %25, align 8
  %27 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %26, i64 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = tail call %struct.hb_buffer_t* @hb_buffer_create() #10
  %30 = bitcast %struct.hb_buffer_t* %29 to i8*
  %31 = load i8, i8* %28, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %2
  %34 = bitcast i32* %6 to i8*
  %35 = bitcast i32* %3 to i8*
  br label %36

36:                                               ; preds = %33, %63
  %37 = phi i8 [ %31, %33 ], [ %64, %63 ]
  %38 = phi i8* [ %28, %33 ], [ %47, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 -1431655766, i32* %6, align 4
  %39 = icmp eq i8 %37, 32
  br i1 %39, label %40, label %45

40:                                               ; preds = %36, %40
  %41 = phi i8* [ %42, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 32
  br i1 %44, label %40, label %45

45:                                               ; preds = %40, %36
  %46 = phi i8* [ %38, %36 ], [ %42, %40 ]
  %47 = call i8* @af_shaper_get_cluster(i8* %46, %struct.AF_StyleMetricsRec_* %19, i8* %30, i32* nonnull %6)
  %48 = load i32, i32* %6, align 4
  %49 = icmp ugt i32 %48, 1
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #10
  store i32 -1431655766, i32* %3, align 4
  %51 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %29, i32* nonnull %3) #10
  %52 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %29, i32* nonnull %3) #10
  %53 = load i32, i32* %3, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #10
  br label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %51, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %29) #10
  %61 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %1, i32 %58, i32 1) #10
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %143

63:                                               ; preds = %56, %55, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  %64 = load i8, i8* %47, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %36

66:                                               ; preds = %63, %2
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %29) #10
  br label %143

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 21
  %69 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %68, align 8
  %70 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %69, i64 0, i32 13, i32 1
  %71 = load i16, i16* %70, align 2
  %72 = icmp slt i16 %71, 1
  br i1 %72, label %143, label %73

73:                                               ; preds = %67
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 30768, i1 false)
  %74 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 1
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0, i32 1, i32 1
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 65536>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0, i32 1, i32 3
  %80 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0, i32 1, i32 0
  %81 = bitcast i64* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false)
  store %struct.FT_FaceRec_* %1, %struct.FT_FaceRec_** %80, align 8
  %82 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0, i32 1, i32 5
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0, i32 1, i32 6
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds [1 x %struct.AF_CJKMetricsRec_], [1 x %struct.AF_CJKMetricsRec_]* %5, i64 0, i64 0, i32 0
  %85 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 14
  store %struct.AF_StyleMetricsRec_* %84, %struct.AF_StyleMetricsRec_** %85, align 16
  %86 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 12
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %69, i64 0, i32 13
  %88 = call fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_* nonnull %9, %struct.FT_Outline_* %87)
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %143

90:                                               ; preds = %73
  %91 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #10
  store i32 0, i32* %7, align 4
  %92 = call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* nonnull %9, i32 0)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %142

94:                                               ; preds = %90
  call fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* nonnull %9, i32 0, %struct.AF_WidthRec_* null, i32 0)
  %95 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 11, i64 0, i32 2
  %96 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %95, align 8
  %97 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 11, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %96, i64 %99
  %101 = icmp sgt i32 %98, 0
  br i1 %101, label %102, label %134

102:                                              ; preds = %94, %130
  %103 = phi i32 [ %131, %130 ], [ 0, %94 ]
  %104 = phi %struct.AF_SegmentRec_* [ %132, %130 ], [ %96, %94 ]
  %105 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %104, i64 0, i32 9
  %106 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %105, align 8
  %107 = icmp eq %struct.AF_SegmentRec_* %106, null
  br i1 %107, label %130, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %106, i64 0, i32 9
  %110 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %109, align 8
  %111 = icmp eq %struct.AF_SegmentRec_* %110, %104
  %112 = icmp ugt %struct.AF_SegmentRec_* %106, %104
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %130

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %104, i64 0, i32 2
  %116 = load i16, i16* %115, align 2
  %117 = sext i16 %116 to i64
  %118 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %106, i64 0, i32 2
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i64
  %121 = sub nsw i64 %117, %120
  %122 = icmp ult i32 %103, 16
  br i1 %122, label %123, label %130

123:                                              ; preds = %114
  %124 = icmp slt i64 %121, 0
  %125 = sub nsw i64 0, %121
  %126 = select i1 %124, i64 %125, i64 %121
  %127 = add nuw nsw i32 %103, 1
  store i32 %127, i32* %7, align 4
  %128 = zext i32 %103 to i64
  %129 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 %128, i32 0
  store i64 %126, i64* %129, align 8
  br label %130

130:                                              ; preds = %114, %123, %102, %108
  %131 = phi i32 [ %103, %114 ], [ %127, %123 ], [ %103, %102 ], [ %103, %108 ]
  %132 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %104, i64 1
  %133 = icmp ult %struct.AF_SegmentRec_* %132, %100
  br i1 %133, label %102, label %134

134:                                              ; preds = %130, %94
  %135 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 0
  %136 = load i32, i32* %76, align 8
  %137 = udiv i32 %136, 100
  %138 = zext i32 %137 to i64
  call fastcc void @af_sort_and_quantize_widths(i32* nonnull %7, %struct.AF_WidthRec_* %135, i64 %138)
  %139 = load i32, i32* %7, align 4
  store i32 %139, i32* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #10
  store i32 0, i32* %7, align 4
  %140 = call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* nonnull %9, i32 1)
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %177, label %142

142:                                              ; preds = %134, %90
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #10
  br label %143

143:                                              ; preds = %217, %66, %142, %73, %60, %67
  %144 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 1
  %145 = load i32, i32* %16, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 3, i64 0, i32 0
  %149 = load i64, i64* %148, align 8
  br label %155

150:                                              ; preds = %143
  %151 = load i32, i32* %144, align 8
  %152 = zext i32 %151 to i64
  %153 = mul nuw nsw i64 %152, 50
  %154 = lshr i64 %153, 11
  br label %155

155:                                              ; preds = %150, %147
  %156 = phi i64 [ %149, %147 ], [ %154, %150 ]
  %157 = sdiv i64 %156, 5
  %158 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 4
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 5
  store i64 %156, i64* %159, align 8
  %160 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 0, i32 6
  store i8 0, i8* %160, align 8
  %161 = load i32, i32* %17, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 0, i32 0
  %165 = load i64, i64* %164, align 8
  br label %171

166:                                              ; preds = %155
  %167 = load i32, i32* %144, align 8
  %168 = zext i32 %167 to i64
  %169 = mul nuw nsw i64 %168, 50
  %170 = lshr i64 %169, 11
  br label %171

171:                                              ; preds = %166, %163
  %172 = phi i64 [ %165, %163 ], [ %170, %166 ]
  %173 = sdiv i64 %172, 5
  %174 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 4
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 5
  store i64 %172, i64* %175, align 8
  %176 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 6
  store i8 0, i8* %176, align 8
  call void @llvm.lifetime.end.p0i8(i64 30768, i8* nonnull %18) #10
  call fastcc void @af_glyph_hints_done(%struct.AF_GlyphHintsRec_* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 12920, i8* nonnull %8) #10
  ret void

177:                                              ; preds = %134
  call fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* nonnull %9, i32 0, %struct.AF_WidthRec_* null, i32 1)
  %178 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 11, i64 1, i32 2
  %179 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %178, align 8
  %180 = getelementptr inbounds [1 x %struct.AF_GlyphHintsRec_], [1 x %struct.AF_GlyphHintsRec_]* %4, i64 0, i64 0, i32 11, i64 1, i32 0
  %181 = load i32, i32* %180, align 8
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %179, i64 %182
  %184 = icmp sgt i32 %181, 0
  br i1 %184, label %185, label %217

185:                                              ; preds = %177, %213
  %186 = phi i32 [ %214, %213 ], [ 0, %177 ]
  %187 = phi %struct.AF_SegmentRec_* [ %215, %213 ], [ %179, %177 ]
  %188 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %187, i64 0, i32 9
  %189 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %188, align 8
  %190 = icmp eq %struct.AF_SegmentRec_* %189, null
  br i1 %190, label %213, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %189, i64 0, i32 9
  %193 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %192, align 8
  %194 = icmp eq %struct.AF_SegmentRec_* %193, %187
  %195 = icmp ugt %struct.AF_SegmentRec_* %189, %187
  %196 = and i1 %195, %194
  br i1 %196, label %197, label %213

197:                                              ; preds = %191
  %198 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %187, i64 0, i32 2
  %199 = load i16, i16* %198, align 2
  %200 = sext i16 %199 to i64
  %201 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %189, i64 0, i32 2
  %202 = load i16, i16* %201, align 2
  %203 = sext i16 %202 to i64
  %204 = sub nsw i64 %200, %203
  %205 = icmp ult i32 %186, 16
  br i1 %205, label %206, label %213

206:                                              ; preds = %197
  %207 = icmp slt i64 %204, 0
  %208 = sub nsw i64 0, %204
  %209 = select i1 %207, i64 %208, i64 %204
  %210 = add nuw nsw i32 %186, 1
  store i32 %210, i32* %7, align 4
  %211 = zext i32 %186 to i64
  %212 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 %211, i32 0
  store i64 %209, i64* %212, align 8
  br label %213

213:                                              ; preds = %206, %197, %191, %185
  %214 = phi i32 [ %210, %206 ], [ %186, %197 ], [ %186, %191 ], [ %186, %185 ]
  %215 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %187, i64 1
  %216 = icmp ult %struct.AF_SegmentRec_* %215, %183
  br i1 %216, label %185, label %217

217:                                              ; preds = %213, %177
  %218 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 1, i32 3, i64 0
  %219 = load i32, i32* %76, align 8
  %220 = udiv i32 %219, 100
  %221 = zext i32 %220 to i64
  call fastcc void @af_sort_and_quantize_widths(i32* nonnull %7, %struct.AF_WidthRec_* %218, i64 %221)
  %222 = load i32, i32* %7, align 4
  store i32 %222, i32* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #10
  br label %143
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_cjk_metrics_check_digits(%struct.AF_CJKMetricsRec_* nocapture, %struct.FT_FaceRec_* nocapture readnone) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = tail call %struct.hb_buffer_t* @hb_buffer_create() #10
  %6 = bitcast %struct.hb_buffer_t* %5 to i8*
  %7 = bitcast i32* %4 to i8*
  %8 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0
  %9 = bitcast i32* %3 to i8*
  br label %10

10:                                               ; preds = %2, %35
  %11 = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @af_cjk_metrics_check_digits.digits, i64 0, i64 0), %2 ], [ %14, %35 ]
  %12 = phi i64 [ 0, %2 ], [ %37, %35 ]
  %13 = phi i8 [ 0, %2 ], [ %36, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 -1431655766, i32* %4, align 4
  %14 = call i8* @af_shaper_get_cluster(i8* %11, %struct.AF_StyleMetricsRec_* %8, i8* %6, i32* nonnull %4)
  %15 = load i32, i32* %4, align 4
  %16 = icmp ugt i32 %15, 1
  br i1 %16, label %35, label %17

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %3, align 4
  %18 = call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %5, i32* nonnull %3) #10
  %19 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %5, i32* nonnull %3) #10
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  br label %35

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %19, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = icmp eq i8 %13, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = icmp eq i64 %12, %26
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  br label %40

35:                                               ; preds = %32, %30, %22, %23, %10
  %36 = phi i8 [ %13, %10 ], [ %13, %23 ], [ %13, %22 ], [ %13, %32 ], [ 1, %30 ]
  %37 = phi i64 [ %12, %10 ], [ %12, %23 ], [ %12, %22 ], [ %12, %32 ], [ %26, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  %38 = load i8, i8* %14, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %10

40:                                               ; preds = %35, %34
  %41 = phi i8 [ 0, %34 ], [ 1, %35 ]
  call void @hb_buffer_destroy(%struct.hb_buffer_t* %5) #10
  %42 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 0, i32 2
  store i8 %41, i8* %42, align 8
  ret void
}

declare i32 @FT_Set_Charmap(%struct.FT_FaceRec_*, %struct.FT_CharMapRec_*) local_unnamed_addr #5

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_glyph_hints_reload(%struct.AF_GlyphHintsRec_*, %struct.FT_Outline_*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 0
  %14 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %13, align 8
  %15 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 6
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 9
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 0
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 0
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 3
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 0
  %22 = load i16, i16* %21, align 8
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = icmp ult i16 %22, 9
  br i1 %26, label %27, label %33

27:                                               ; preds = %2
  %28 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %29 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %28, align 8
  %30 = icmp eq %struct.AF_PointRec_** %29, null
  br i1 %30, label %31, label %53

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 0, i64 0
  store %struct.AF_PointRec_** %32, %struct.AF_PointRec_*** %28, align 8
  store i32 8, i32* %24, align 8
  br label %53

33:                                               ; preds = %2
  %34 = icmp ult i32 %25, %23
  br i1 %34, label %35, label %53

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %37 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %36, align 8
  %38 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 0, i64 0
  %39 = icmp eq %struct.AF_PointRec_** %37, %38
  %40 = bitcast %struct.AF_PointRec_** %37 to i8*
  br i1 %39, label %41, label %42

41:                                               ; preds = %35
  store %struct.AF_PointRec_** null, %struct.AF_PointRec_*** %36, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = phi i8* [ null, %41 ], [ %40, %35 ]
  %44 = add nsw i32 %23, 3
  %45 = and i32 %44, -4
  %46 = zext i32 %25 to i64
  %47 = zext i32 %45 to i64
  %48 = bitcast %struct.AF_PointRec_*** %36 to i8**
  %49 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %14, i64 8, i64 %46, i64 %47, i8* %43, i32* nonnull %3) #10
  store i8* %49, i8** %48, align 8
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %529

52:                                               ; preds = %42
  store i32 %45, i32* %24, align 8
  br label %53

53:                                               ; preds = %27, %33, %52, %31
  %54 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 1
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i32
  %57 = add nsw i32 %56, 2
  %58 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = icmp ult i32 %57, 97
  br i1 %60, label %61, label %67

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %63 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %62, align 8
  %64 = icmp eq %struct.AF_PointRec_* %63, null
  br i1 %64, label %65, label %87

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 1, i64 0
  store %struct.AF_PointRec_* %66, %struct.AF_PointRec_** %62, align 8
  store i32 96, i32* %58, align 8
  br label %87

67:                                               ; preds = %53
  %68 = icmp ugt i32 %57, %59
  br i1 %68, label %69, label %87

69:                                               ; preds = %67
  %70 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %71 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %70, align 8
  %72 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 1, i64 0
  %73 = icmp eq %struct.AF_PointRec_* %71, %72
  %74 = bitcast %struct.AF_PointRec_* %71 to i8*
  br i1 %73, label %75, label %76

75:                                               ; preds = %69
  store %struct.AF_PointRec_* null, %struct.AF_PointRec_** %70, align 8
  br label %76

76:                                               ; preds = %75, %69
  %77 = phi i8* [ null, %75 ], [ %74, %69 ]
  %78 = add nsw i32 %56, 11
  %79 = and i32 %78, -8
  %80 = zext i32 %59 to i64
  %81 = zext i32 %79 to i64
  %82 = bitcast %struct.AF_PointRec_** %70 to i8**
  %83 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %14, i64 80, i64 %80, i64 %81, i8* %77, i32* nonnull %3) #10
  store i8* %83, i8** %82, align 8
  %84 = load i32, i32* %3, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %529

86:                                               ; preds = %76
  store i32 %79, i32* %58, align 8
  br label %87

87:                                               ; preds = %61, %67, %86, %65
  %88 = load i16, i16* %54, align 2
  %89 = sext i16 %88 to i32
  store i32 %89, i32* %15, align 4
  %90 = load i16, i16* %21, align 8
  %91 = sext i16 %90 to i32
  store i32 %91, i32* %16, align 4
  %92 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 6
  store i32 2, i32* %92, align 8
  %93 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 6
  store i32 -1, i32* %93, align 8
  %94 = call i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* %1) #10
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %97

96:                                               ; preds = %87
  store i32 -2, i32* %92, align 8
  store i32 1, i32* %93, align 8
  br label %97

97:                                               ; preds = %96, %87
  store i64 %6, i64* %5, align 8
  store i64 %8, i64* %7, align 8
  store i64 %10, i64* %9, align 8
  store i64 %12, i64* %11, align 8
  %98 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 15
  %99 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %100 = bitcast i64* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false)
  %101 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %99, align 8
  %102 = load i32, i32* %15, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %529, label %104

104:                                              ; preds = %97
  %105 = sext i32 %102 to i64
  %106 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 %105
  %107 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %108 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %107, align 8
  %109 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %108, i64 0, i32 1, i32 0
  %110 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %109, align 8
  %111 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %110, i64 0, i32 13
  %112 = load i16, i16* %111, align 8
  %113 = zext i16 %112 to i32
  %114 = mul nuw nsw i32 %113, 20
  %115 = lshr i32 %114, 11
  %116 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 2
  %117 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 4
  %118 = load i16*, i16** %117, align 8
  %119 = load i16, i16* %118, align 2
  %120 = sext i16 %119 to i64
  %121 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 %120
  %122 = icmp sgt i32 %102, 0
  br i1 %122, label %123, label %243

123:                                              ; preds = %104
  %124 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 3
  %125 = load i8*, i8** %124, align 8
  %126 = load %struct.FT_Vector_*, %struct.FT_Vector_** %116, align 8
  %127 = shl i64 %6, 32
  %128 = ashr exact i64 %127, 32
  %129 = shl i64 %8, 32
  %130 = ashr exact i64 %129, 32
  %131 = zext i32 %115 to i64
  br label %132

132:                                              ; preds = %123, %232
  %133 = phi i32 [ 0, %123 ], [ %236, %232 ]
  %134 = phi %struct.AF_PointRec_* [ %121, %123 ], [ %235, %232 ]
  %135 = phi %struct.AF_PointRec_* [ %121, %123 ], [ %234, %232 ]
  %136 = phi i16 [ %119, %123 ], [ %233, %232 ]
  %137 = phi i8* [ %125, %123 ], [ %239, %232 ]
  %138 = phi %struct.FT_Vector_* [ %126, %123 ], [ %238, %232 ]
  %139 = phi %struct.AF_PointRec_* [ %101, %123 ], [ %237, %232 ]
  %140 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 1
  store i8 4, i8* %140, align 2
  %141 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 2
  store i8 4, i8* %141, align 1
  %142 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %138, i64 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i16
  %145 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 5
  store i16 %144, i16* %145, align 8
  %146 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %138, i64 0, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = trunc i64 %147 to i16
  %149 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 6
  store i16 %148, i16* %149, align 2
  %150 = load i64, i64* %142, align 8
  %151 = shl i64 %150, 32
  %152 = ashr exact i64 %151, 32
  %153 = mul nsw i64 %152, %128
  %154 = ashr i64 %153, 63
  %155 = add nsw i64 %153, 32768
  %156 = add nsw i64 %155, %154
  %157 = shl i64 %156, 16
  %158 = ashr i64 %157, 32
  %159 = add nsw i64 %158, %10
  %160 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 7
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 3
  store i64 %159, i64* %161, align 8
  %162 = load i64, i64* %146, align 8
  %163 = shl i64 %162, 32
  %164 = ashr exact i64 %163, 32
  %165 = mul nsw i64 %164, %130
  %166 = ashr i64 %165, 63
  %167 = add nsw i64 %165, 32768
  %168 = add nsw i64 %167, %166
  %169 = shl i64 %168, 16
  %170 = ashr i64 %169, 32
  %171 = add nsw i64 %170, %12
  %172 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 8
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 4
  store i64 %171, i64* %173, align 8
  %174 = load %struct.FT_Vector_*, %struct.FT_Vector_** %116, align 8
  %175 = sext i16 %136 to i64
  %176 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %174, i64 %175, i32 0
  %177 = load i64, i64* %176, align 8
  %178 = trunc i64 %177 to i16
  %179 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %135, i64 0, i32 5
  store i16 %178, i16* %179, align 8
  %180 = load %struct.FT_Vector_*, %struct.FT_Vector_** %116, align 8
  %181 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %180, i64 %175, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i16
  %184 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %135, i64 0, i32 6
  store i16 %183, i16* %184, align 2
  %185 = load i8, i8* %137, align 1
  %186 = and i8 %185, 3
  %187 = icmp eq i8 %186, 2
  %188 = select i1 %187, i16 2, i16 0
  %189 = icmp eq i8 %186, 0
  %190 = select i1 %189, i16 1, i16 %188
  %191 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 0
  store i16 %190, i16* %191, align 8
  %192 = load i16, i16* %145, align 8
  %193 = sext i16 %192 to i64
  %194 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %134, i64 0, i32 5
  %195 = load i16, i16* %194, align 8
  %196 = sext i16 %195 to i64
  %197 = sub nsw i64 %193, %196
  %198 = load i16, i16* %149, align 2
  %199 = sext i16 %198 to i64
  %200 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %134, i64 0, i32 6
  %201 = load i16, i16* %200, align 2
  %202 = sext i16 %201 to i64
  %203 = sub nsw i64 %199, %202
  %204 = icmp slt i64 %197, 0
  %205 = sub nsw i64 0, %197
  %206 = select i1 %204, i64 %205, i64 %197
  %207 = icmp slt i64 %203, 0
  %208 = sub nsw i64 0, %203
  %209 = select i1 %207, i64 %208, i64 %203
  %210 = add nuw nsw i64 %209, %206
  %211 = icmp slt i64 %210, %131
  br i1 %211, label %212, label %216

212:                                              ; preds = %132
  %213 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %134, i64 0, i32 0
  %214 = load i16, i16* %213, align 8
  %215 = or i16 %214, 32
  store i16 %215, i16* %213, align 8
  br label %216

216:                                              ; preds = %212, %132
  %217 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 0, i32 12
  store %struct.AF_PointRec_* %134, %struct.AF_PointRec_** %217, align 8
  %218 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %134, i64 0, i32 11
  store %struct.AF_PointRec_* %139, %struct.AF_PointRec_** %218, align 8
  %219 = icmp eq %struct.AF_PointRec_* %139, %135
  br i1 %219, label %220, label %232

220:                                              ; preds = %216
  %221 = add nsw i32 %133, 1
  %222 = load i16, i16* %21, align 8
  %223 = sext i16 %222 to i32
  %224 = icmp slt i32 %221, %223
  br i1 %224, label %225, label %232

225:                                              ; preds = %220
  %226 = load i16*, i16** %117, align 8
  %227 = sext i32 %221 to i64
  %228 = getelementptr inbounds i16, i16* %226, i64 %227
  %229 = load i16, i16* %228, align 2
  %230 = sext i16 %229 to i64
  %231 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 %230
  br label %232

232:                                              ; preds = %220, %225, %216
  %233 = phi i16 [ %229, %225 ], [ %136, %220 ], [ %136, %216 ]
  %234 = phi %struct.AF_PointRec_* [ %231, %225 ], [ %135, %220 ], [ %135, %216 ]
  %235 = phi %struct.AF_PointRec_* [ %231, %225 ], [ %135, %220 ], [ %139, %216 ]
  %236 = phi i32 [ %221, %225 ], [ %221, %220 ], [ %133, %216 ]
  %237 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %139, i64 1
  %238 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %138, i64 1
  %239 = getelementptr inbounds i8, i8* %137, i64 1
  %240 = icmp ult %struct.AF_PointRec_* %237, %106
  br i1 %240, label %132, label %241

241:                                              ; preds = %232
  %242 = load i16*, i16** %117, align 8
  br label %243

243:                                              ; preds = %241, %104
  %244 = phi i16* [ %242, %241 ], [ %118, %104 ]
  %245 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %246 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %245, align 8
  %247 = load i32, i32* %16, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %246, i64 %248
  %250 = icmp sgt i32 %247, 0
  br i1 %250, label %251, label %276

251:                                              ; preds = %243, %251
  %252 = phi i32 [ %261, %251 ], [ 0, %243 ]
  %253 = phi i16* [ %263, %251 ], [ %244, %243 ]
  %254 = phi %struct.AF_PointRec_** [ %262, %251 ], [ %246, %243 ]
  %255 = shl i32 %252, 16
  %256 = ashr exact i32 %255, 16
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 %257
  store %struct.AF_PointRec_* %258, %struct.AF_PointRec_** %254, align 8
  %259 = load i16, i16* %253, align 2
  %260 = sext i16 %259 to i32
  %261 = add nsw i32 %260, 1
  %262 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %254, i64 1
  %263 = getelementptr inbounds i16, i16* %253, i64 1
  %264 = icmp ult %struct.AF_PointRec_** %262, %249
  br i1 %264, label %251, label %265

265:                                              ; preds = %251
  %266 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %245, align 8
  %267 = load i32, i32* %16, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %266, i64 %268
  %270 = icmp sgt i32 %267, 0
  br i1 %270, label %271, label %276

271:                                              ; preds = %265
  %272 = shl nuw nsw i32 %115, 1
  %273 = add nsw i32 %272, -1
  %274 = sext i32 %273 to i64
  %275 = zext i32 %115 to i64
  br label %277

276:                                              ; preds = %398, %243, %265
  br i1 %122, label %402, label %529

277:                                              ; preds = %271, %398
  %278 = phi %struct.AF_PointRec_** [ %266, %271 ], [ %399, %398 ]
  %279 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %278, align 8
  br label %280

280:                                              ; preds = %285, %277
  %281 = phi %struct.AF_PointRec_* [ %279, %277 ], [ %283, %285 ]
  %282 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %281, i64 0, i32 12
  %283 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %282, align 8
  %284 = icmp eq %struct.AF_PointRec_* %283, %279
  br i1 %284, label %308, label %285

285:                                              ; preds = %280
  %286 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %281, i64 0, i32 5
  %287 = load i16, i16* %286, align 8
  %288 = sext i16 %287 to i64
  %289 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %283, i64 0, i32 5
  %290 = load i16, i16* %289, align 8
  %291 = sext i16 %290 to i64
  %292 = sub nsw i64 %288, %291
  %293 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %281, i64 0, i32 6
  %294 = load i16, i16* %293, align 2
  %295 = sext i16 %294 to i64
  %296 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %283, i64 0, i32 6
  %297 = load i16, i16* %296, align 2
  %298 = sext i16 %297 to i64
  %299 = sub nsw i64 %295, %298
  %300 = icmp slt i64 %292, 0
  %301 = sub nsw i64 0, %292
  %302 = select i1 %300, i64 %301, i64 %292
  %303 = icmp slt i64 %299, 0
  %304 = sub nsw i64 0, %299
  %305 = select i1 %303, i64 %304, i64 %299
  %306 = add nuw nsw i64 %305, %302
  %307 = icmp slt i64 %306, %274
  br i1 %307, label %280, label %308

308:                                              ; preds = %285, %280
  %309 = ptrtoint %struct.AF_PointRec_* %281 to i64
  %310 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %281, i64 0, i32 9
  %311 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %281, i64 0, i32 10
  %312 = bitcast i64* %310 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %312, i8 0, i64 16, i1 false)
  br label %313

313:                                              ; preds = %393, %308
  %314 = phi %struct.AF_PointRec_* [ %281, %308 ], [ %319, %393 ]
  %315 = phi %struct.AF_PointRec_* [ %281, %308 ], [ %394, %393 ]
  %316 = phi i64 [ 0, %308 ], [ %395, %393 ]
  %317 = phi i64 [ 0, %308 ], [ %396, %393 ]
  %318 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %314, i64 0, i32 11
  %319 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %318, align 8
  %320 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 5
  %321 = load i16, i16* %320, align 8
  %322 = sext i16 %321 to i64
  %323 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %314, i64 0, i32 5
  %324 = load i16, i16* %323, align 8
  %325 = sext i16 %324 to i64
  %326 = sub nsw i64 %322, %325
  %327 = add nsw i64 %326, %316
  %328 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 6
  %329 = load i16, i16* %328, align 2
  %330 = sext i16 %329 to i64
  %331 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %314, i64 0, i32 6
  %332 = load i16, i16* %331, align 2
  %333 = sext i16 %332 to i64
  %334 = sub nsw i64 %330, %333
  %335 = add nsw i64 %334, %317
  %336 = icmp slt i64 %327, 0
  %337 = sub nsw i64 0, %327
  %338 = select i1 %336, i64 %337, i64 %327
  %339 = icmp slt i64 %335, 0
  %340 = sub nsw i64 0, %335
  %341 = select i1 %339, i64 %340, i64 %335
  %342 = add nuw nsw i64 %341, %338
  %343 = icmp slt i64 %342, %275
  br i1 %343, label %344, label %348

344:                                              ; preds = %313
  %345 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 0
  %346 = load i16, i16* %345, align 8
  %347 = or i16 %346, 16
  store i16 %347, i16* %345, align 8
  br label %393

348:                                              ; preds = %313
  %349 = ptrtoint %struct.AF_PointRec_* %319 to i64
  %350 = ptrtoint %struct.AF_PointRec_* %315 to i64
  %351 = sub i64 %349, %350
  %352 = sdiv exact i64 %351, 80
  %353 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %315, i64 0, i32 9
  store i64 %352, i64* %353, align 8
  %354 = sub nsw i64 0, %352
  %355 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 10
  store i64 %354, i64* %355, align 8
  %356 = icmp slt i64 %335, %327
  %357 = icmp sge i64 %335, %337
  br i1 %356, label %362, label %358

358:                                              ; preds = %348
  %359 = select i1 %357, i64 %335, i64 %337
  %360 = select i1 %357, i64 %327, i64 %335
  %361 = select i1 %357, i8 2, i8 -1
  br label %366

362:                                              ; preds = %348
  %363 = select i1 %357, i64 %327, i64 %340
  %364 = select i1 %357, i64 %335, i64 %327
  %365 = select i1 %357, i8 1, i8 -2
  br label %366

366:                                              ; preds = %358, %362
  %367 = phi i64 [ %359, %358 ], [ %363, %362 ]
  %368 = phi i64 [ %360, %358 ], [ %364, %362 ]
  %369 = phi i8 [ %361, %358 ], [ %365, %362 ]
  %370 = icmp slt i64 %368, 0
  %371 = sub nsw i64 0, %368
  %372 = select i1 %370, i64 %371, i64 %368
  %373 = mul nsw i64 %372, 14
  %374 = icmp sgt i64 %367, %373
  %375 = select i1 %374, i8 %369, i8 4
  %376 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %315, i64 0, i32 2
  store i8 %375, i8* %376, align 1
  %377 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %315, i64 0, i32 11
  %378 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %377, align 8
  %379 = icmp eq %struct.AF_PointRec_* %378, %319
  br i1 %379, label %387, label %380

380:                                              ; preds = %366, %380
  %381 = phi %struct.AF_PointRec_* [ %385, %380 ], [ %378, %366 ]
  %382 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %381, i64 0, i32 1
  store i8 %375, i8* %382, align 2
  %383 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %381, i64 0, i32 2
  store i8 %375, i8* %383, align 1
  %384 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %381, i64 0, i32 11
  %385 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %384, align 8
  %386 = icmp eq %struct.AF_PointRec_* %385, %319
  br i1 %386, label %387, label %380

387:                                              ; preds = %380, %366
  %388 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 1
  store i8 %375, i8* %388, align 2
  %389 = sub i64 %309, %349
  %390 = sdiv exact i64 %389, 80
  %391 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %319, i64 0, i32 9
  store i64 %390, i64* %391, align 8
  %392 = sub nsw i64 0, %390
  store i64 %392, i64* %311, align 8
  br label %393

393:                                              ; preds = %387, %344
  %394 = phi %struct.AF_PointRec_* [ %315, %344 ], [ %319, %387 ]
  %395 = phi i64 [ %327, %344 ], [ 0, %387 ]
  %396 = phi i64 [ %335, %344 ], [ 0, %387 ]
  %397 = icmp eq %struct.AF_PointRec_* %319, %281
  br i1 %397, label %398, label %313

398:                                              ; preds = %393
  %399 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %278, i64 1
  %400 = icmp ult %struct.AF_PointRec_** %399, %269
  br i1 %400, label %277, label %276

401:                                              ; preds = %456
  br i1 %122, label %459, label %529

402:                                              ; preds = %276, %456
  %403 = phi %struct.AF_PointRec_* [ %457, %456 ], [ %101, %276 ]
  %404 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 0
  %405 = load i16, i16* %404, align 8
  %406 = and i16 %405, 16
  %407 = icmp eq i16 %406, 0
  br i1 %407, label %408, label %456

408:                                              ; preds = %402
  %409 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 1
  %410 = load i8, i8* %409, align 2
  %411 = icmp eq i8 %410, 4
  br i1 %411, label %412, label %456

412:                                              ; preds = %408
  %413 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 2
  %414 = load i8, i8* %413, align 1
  %415 = icmp eq i8 %414, 4
  br i1 %415, label %416, label %456

416:                                              ; preds = %412
  %417 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 9
  %418 = load i64, i64* %417, align 8
  %419 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 10
  %420 = load i64, i64* %419, align 8
  %421 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 5
  %422 = load i16, i16* %421, align 8
  %423 = sext i16 %422 to i32
  %424 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %420, i32 5
  %425 = load i16, i16* %424, align 8
  %426 = sext i16 %425 to i32
  %427 = sub nsw i32 %423, %426
  %428 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 0, i32 6
  %429 = load i16, i16* %428, align 2
  %430 = sext i16 %429 to i32
  %431 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %418, i32 5
  %432 = load i16, i16* %431, align 8
  %433 = sext i16 %432 to i32
  %434 = sub nsw i32 %433, %423
  %435 = xor i32 %434, %427
  %436 = icmp sgt i32 %435, -1
  br i1 %436, label %437, label %456

437:                                              ; preds = %416
  %438 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %418, i32 6
  %439 = load i16, i16* %438, align 2
  %440 = sext i16 %439 to i32
  %441 = sub nsw i32 %440, %430
  %442 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %420, i32 6
  %443 = load i16, i16* %442, align 2
  %444 = sext i16 %443 to i32
  %445 = sub nsw i32 %430, %444
  %446 = xor i32 %445, %441
  %447 = icmp sgt i32 %446, -1
  br i1 %447, label %448, label %456

448:                                              ; preds = %437
  %449 = or i16 %405, 16
  store i16 %449, i16* %404, align 8
  %450 = sub i64 %418, %420
  %451 = mul i64 %450, 80
  %452 = sdiv exact i64 %451, 80
  %453 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %420, i32 9
  store i64 %452, i64* %453, align 8
  %454 = sub nsw i64 0, %452
  %455 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 %418, i32 10
  store i64 %454, i64* %455, align 8
  br label %456

456:                                              ; preds = %416, %437, %448, %402, %408, %412
  %457 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %403, i64 1
  %458 = icmp ult %struct.AF_PointRec_* %457, %106
  br i1 %458, label %402, label %401

459:                                              ; preds = %401, %526
  %460 = phi %struct.AF_PointRec_* [ %527, %526 ], [ %101, %401 ]
  %461 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 0
  %462 = load i16, i16* %461, align 8
  %463 = zext i16 %462 to i32
  %464 = and i32 %463, 16
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %526

466:                                              ; preds = %459
  %467 = and i32 %463, 3
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %472, label %469

469:                                              ; preds = %513, %478, %466, %521
  %470 = phi i16 [ %520, %513 ], [ %462, %478 ], [ %462, %466 ], [ %462, %521 ]
  %471 = or i16 %470, 16
  store i16 %471, i16* %461, align 8
  br label %526

472:                                              ; preds = %466
  %473 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 1
  %476 = load i8, i8* %475, align 2
  %477 = icmp eq i8 %474, %476
  br i1 %477, label %478, label %521

478:                                              ; preds = %472
  %479 = icmp eq i8 %474, 4
  br i1 %479, label %480, label %469

480:                                              ; preds = %478
  %481 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 9
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 10
  %484 = load i64, i64* %483, align 8
  %485 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 5
  %486 = load i16, i16* %485, align 8
  %487 = sext i16 %486 to i32
  %488 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %484, i32 5
  %489 = load i16, i16* %488, align 8
  %490 = sext i16 %489 to i32
  %491 = sub nsw i32 %487, %490
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 0, i32 6
  %494 = load i16, i16* %493, align 2
  %495 = sext i16 %494 to i32
  %496 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %484, i32 6
  %497 = load i16, i16* %496, align 2
  %498 = sext i16 %497 to i32
  %499 = sub nsw i32 %495, %498
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %482, i32 5
  %502 = load i16, i16* %501, align 8
  %503 = sext i16 %502 to i32
  %504 = sub nsw i32 %503, %487
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %482, i32 6
  %507 = load i16, i16* %506, align 2
  %508 = sext i16 %507 to i32
  %509 = sub nsw i32 %508, %495
  %510 = sext i32 %509 to i64
  %511 = call i32 @ft_corner_is_flat(i64 %492, i64 %500, i64 %505, i64 %510) #10
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %526, label %513

513:                                              ; preds = %480
  %514 = sub i64 %482, %484
  %515 = mul i64 %514, 80
  %516 = sdiv exact i64 %515, 80
  %517 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %484, i32 9
  store i64 %516, i64* %517, align 8
  %518 = sub nsw i64 0, %516
  %519 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 %482, i32 10
  store i64 %518, i64* %519, align 8
  %520 = load i16, i16* %461, align 8
  br label %469

521:                                              ; preds = %472
  %522 = sext i8 %474 to i32
  %523 = sext i8 %476 to i32
  %524 = sub nsw i32 0, %522
  %525 = icmp eq i32 %523, %524
  br i1 %525, label %469, label %526

526:                                              ; preds = %480, %459, %469, %521
  %527 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %460, i64 1
  %528 = icmp ult %struct.AF_PointRec_* %527, %106
  br i1 %528, label %459, label %529

529:                                              ; preds = %526, %276, %401, %42, %76, %97
  %530 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  ret i32 %530
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_*, i32) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [47 x i8], align 1
  %5 = alloca { i64, %struct.AF_PointRec_*, %struct.AF_PointRec_* }, align 8
  %6 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %7 = bitcast %struct.AF_StyleMetricsRec_** %6 to %struct.AF_LatinMetricsRec_**
  %8 = load %struct.AF_LatinMetricsRec_*, %struct.AF_LatinMetricsRec_** %7, align 8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 0
  %11 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %10, align 8
  %12 = getelementptr inbounds [47 x i8], [47 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 47, i8* nonnull %12)
  %13 = bitcast { i64, %struct.AF_PointRec_*, %struct.AF_PointRec_* }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %15 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %14, align 8
  %16 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %15, i64 %18
  %20 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %8, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = udiv i32 %21, 14
  %23 = zext i32 %22 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 47, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false)
  %24 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 6
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 0
  %27 = sub nsw i32 0, %25
  %28 = select i1 %26, i32 %27, i32 %25
  %29 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 0
  store i32 0, i32* %29, align 8
  %30 = icmp eq i32 %1, 0
  %31 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %32 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %31, align 8
  %33 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 6
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %32, i64 %35
  %37 = icmp sgt i32 %34, 0
  br i1 %30, label %39, label %38

38:                                               ; preds = %2
  br i1 %37, label %52, label %64

39:                                               ; preds = %2
  br i1 %37, label %40, label %64

40:                                               ; preds = %39, %40
  %41 = phi %struct.AF_PointRec_* [ %50, %40 ], [ %32, %39 ]
  %42 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %41, i64 0, i32 5
  %43 = load i16, i16* %42, align 8
  %44 = sext i16 %43 to i64
  %45 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %41, i64 0, i32 9
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %41, i64 0, i32 6
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i64
  %49 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %41, i64 0, i32 10
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %41, i64 1
  %51 = icmp ult %struct.AF_PointRec_* %50, %36
  br i1 %51, label %40, label %64

52:                                               ; preds = %38, %52
  %53 = phi %struct.AF_PointRec_* [ %62, %52 ], [ %32, %38 ]
  %54 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %53, i64 0, i32 6
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i64
  %57 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %53, i64 0, i32 9
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %53, i64 0, i32 5
  %59 = load i16, i16* %58, align 8
  %60 = sext i16 %59 to i64
  %61 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %53, i64 0, i32 10
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %53, i64 1
  %63 = icmp ult %struct.AF_PointRec_* %62, %36
  br i1 %63, label %52, label %64

64:                                               ; preds = %52, %40, %38, %39
  %65 = icmp sgt i32 %17, 0
  br i1 %65, label %66, label %477

66:                                               ; preds = %64
  %67 = bitcast i32* %3 to i8*
  %68 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 1
  %69 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 2
  %70 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 7, i32 0, i64 0
  %71 = bitcast %struct.AF_SegmentRec_** %69 to i8**
  %72 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 0
  br label %73

73:                                               ; preds = %66, %474
  %74 = phi i32 [ %28, %66 ], [ %122, %474 ]
  %75 = phi %struct.AF_PointRec_** [ %15, %66 ], [ %475, %474 ]
  %76 = phi %struct.AF_SegmentRec_* [ null, %66 ], [ %338, %474 ]
  %77 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %75, align 8
  %78 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %77, i64 0, i32 12
  %79 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %78, align 8
  %80 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp slt i32 %82, 0
  %84 = sub nsw i32 0, %82
  %85 = select i1 %83, i32 %84, i32 %82
  %86 = icmp eq i32 %85, %28
  br i1 %86, label %87, label %118

87:                                               ; preds = %73
  %88 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %77, i64 0, i32 2
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp slt i32 %90, 0
  %92 = sub nsw i32 0, %90
  %93 = select i1 %91, i32 %92, i32 %90
  %94 = icmp eq i32 %93, %28
  br i1 %94, label %95, label %118

95:                                               ; preds = %87
  %96 = sext i8 %81 to i32
  %97 = icmp slt i32 %96, 0
  %98 = sub nsw i32 0, %96
  %99 = select i1 %97, i32 %98, i32 %96
  %100 = icmp eq i32 %99, %28
  br i1 %100, label %105, label %101

101:                                              ; preds = %108, %95
  %102 = phi %struct.AF_PointRec_* [ %79, %95 ], [ %110, %108 ]
  %103 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %102, i64 0, i32 11
  %104 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %103, align 8
  br label %118

105:                                              ; preds = %95, %108
  %106 = phi %struct.AF_PointRec_* [ %110, %108 ], [ %79, %95 ]
  %107 = icmp eq %struct.AF_PointRec_* %106, %77
  br i1 %107, label %118, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %106, i64 0, i32 12
  %110 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %109, align 8
  %111 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %110, i64 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = sext i8 %112 to i32
  %114 = icmp slt i32 %113, 0
  %115 = sub nsw i32 0, %113
  %116 = select i1 %114, i32 %115, i32 %113
  %117 = icmp eq i32 %116, %28
  br i1 %117, label %105, label %101

118:                                              ; preds = %105, %101, %87, %73
  %119 = phi %struct.AF_PointRec_* [ %104, %101 ], [ %77, %87 ], [ %77, %73 ], [ %77, %105 ]
  br label %120

120:                                              ; preds = %457, %118
  %121 = phi %struct.AF_SegmentRec_* [ %76, %118 ], [ %458, %457 ]
  %122 = phi i32 [ %74, %118 ], [ %459, %457 ]
  %123 = phi %struct.AF_PointRec_* [ %119, %118 ], [ %471, %457 ]
  %124 = phi i32 [ 0, %118 ], [ %460, %457 ]
  %125 = phi i64 [ 32000, %118 ], [ %461, %457 ]
  %126 = phi i64 [ -32000, %118 ], [ %462, %457 ]
  %127 = phi i64 [ 32000, %118 ], [ %463, %457 ]
  %128 = phi i64 [ -32000, %118 ], [ %464, %457 ]
  %129 = phi i16 [ 0, %118 ], [ %465, %457 ]
  %130 = phi i16 [ 0, %118 ], [ %466, %457 ]
  %131 = phi i64 [ 32000, %118 ], [ %467, %457 ]
  %132 = phi i64 [ -32000, %118 ], [ %468, %457 ]
  %133 = phi i8 [ 0, %118 ], [ %361, %457 ]
  %134 = phi %struct.AF_SegmentRec_* [ null, %118 ], [ %469, %457 ]
  %135 = phi i64 [ 32000, %118 ], [ %349, %457 ]
  %136 = phi i64 [ -32000, %118 ], [ %350, %457 ]
  %137 = phi i64 [ 32000, %118 ], [ %351, %457 ]
  %138 = phi i64 [ -32000, %118 ], [ %352, %457 ]
  %139 = phi i16 [ 0, %118 ], [ %353, %457 ]
  %140 = phi i16 [ 0, %118 ], [ %354, %457 ]
  %141 = phi i64 [ 32000, %118 ], [ %355, %457 ]
  %142 = phi i64 [ -32000, %118 ], [ %356, %457 ]
  %143 = icmp eq i32 %124, 0
  br i1 %143, label %337, label %144

144:                                              ; preds = %120
  %145 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 9
  %146 = load i64, i64* %145, align 8
  %147 = icmp slt i64 %146, %125
  %148 = select i1 %147, i64 %146, i64 %125
  %149 = icmp sgt i64 %146, %126
  %150 = select i1 %149, i64 %146, i64 %126
  %151 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 10
  %152 = load i64, i64* %151, align 8
  %153 = icmp slt i64 %152, %127
  br i1 %153, label %154, label %157

154:                                              ; preds = %144
  %155 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 0
  %156 = load i16, i16* %155, align 8
  br label %157

157:                                              ; preds = %154, %144
  %158 = phi i64 [ %152, %154 ], [ %127, %144 ]
  %159 = phi i16 [ %156, %154 ], [ %129, %144 ]
  %160 = icmp sgt i64 %152, %128
  %161 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 0
  %162 = load i16, i16* %161, align 8
  %163 = select i1 %160, i64 %152, i64 %128
  %164 = select i1 %160, i16 %162, i16 %130
  %165 = and i16 %162, 3
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %167, label %172

167:                                              ; preds = %157
  %168 = icmp slt i64 %152, %131
  %169 = select i1 %168, i64 %152, i64 %131
  %170 = icmp sgt i64 %152, %132
  %171 = select i1 %170, i64 %152, i64 %132
  br label %172

172:                                              ; preds = %167, %157
  %173 = phi i64 [ %131, %157 ], [ %169, %167 ]
  %174 = phi i64 [ %132, %157 ], [ %171, %167 ]
  %175 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 2
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp ne i32 %122, %177
  %179 = icmp eq %struct.AF_PointRec_* %123, %119
  %180 = or i1 %179, %178
  br i1 %180, label %181, label %337

181:                                              ; preds = %172
  %182 = icmp eq %struct.AF_SegmentRec_* %134, null
  br i1 %182, label %189, label %183

183:                                              ; preds = %181
  %184 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 13
  %185 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %184, align 8
  %186 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 14
  %187 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %186, align 8
  %188 = icmp eq %struct.AF_PointRec_* %185, %187
  br i1 %188, label %216, label %189

189:                                              ; preds = %183, %181
  %190 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 14
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %190, align 8
  %191 = add nsw i64 %148, %150
  %192 = lshr i64 %191, 1
  %193 = trunc i64 %192 to i16
  %194 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 2
  store i16 %193, i16* %194, align 2
  %195 = sub nsw i64 %150, %148
  %196 = lshr i64 %195, 1
  %197 = trunc i64 %196 to i16
  %198 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 3
  store i16 %197, i16* %198, align 4
  %199 = or i16 %164, %159
  %200 = and i16 %199, 3
  %201 = icmp ne i16 %200, 0
  %202 = sub nsw i64 %174, %173
  %203 = icmp slt i64 %202, %23
  %204 = and i1 %201, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %189
  %206 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 0
  %207 = load i8, i8* %206, align 8
  %208 = or i8 %207, 1
  store i8 %208, i8* %206, align 8
  br label %209

209:                                              ; preds = %189, %205
  %210 = trunc i64 %158 to i16
  %211 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 4
  store i16 %210, i16* %211, align 2
  %212 = trunc i64 %163 to i16
  %213 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 5
  store i16 %212, i16* %213, align 8
  %214 = sub i16 %212, %210
  %215 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 6
  store i16 %214, i16* %215, align 2
  br label %337

216:                                              ; preds = %183
  %217 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %185, i64 0, i32 1
  %218 = load i8, i8* %217, align 2
  %219 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 1
  %220 = load i8, i8* %219, align 2
  %221 = icmp eq i8 %218, %220
  br i1 %221, label %222, label %262

222:                                              ; preds = %216
  %223 = icmp slt i64 %135, %148
  %224 = select i1 %223, i64 %135, i64 %148
  %225 = icmp sgt i64 %136, %150
  %226 = select i1 %225, i64 %136, i64 %150
  %227 = icmp slt i64 %137, %158
  %228 = select i1 %227, i64 %137, i64 %158
  %229 = select i1 %227, i16 %139, i16 %159
  %230 = icmp sgt i64 %138, %163
  %231 = select i1 %230, i64 %138, i64 %163
  %232 = select i1 %230, i16 %140, i16 %164
  %233 = icmp slt i64 %141, %173
  %234 = select i1 %233, i64 %141, i64 %173
  %235 = icmp sgt i64 %142, %174
  %236 = select i1 %235, i64 %142, i64 %174
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %186, align 8
  %237 = add nsw i64 %224, %226
  %238 = lshr i64 %237, 1
  %239 = trunc i64 %238 to i16
  %240 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 2
  store i16 %239, i16* %240, align 2
  %241 = sub nsw i64 %226, %224
  %242 = lshr i64 %241, 1
  %243 = trunc i64 %242 to i16
  %244 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 3
  store i16 %243, i16* %244, align 4
  %245 = or i16 %232, %229
  %246 = and i16 %245, 3
  %247 = icmp ne i16 %246, 0
  %248 = sub nsw i64 %236, %234
  %249 = icmp slt i64 %248, %23
  %250 = and i1 %247, %249
  %251 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 0
  %252 = load i8, i8* %251, align 8
  %253 = and i8 %252, -2
  %254 = or i8 %252, 1
  %255 = select i1 %250, i8 %254, i8 %253
  store i8 %255, i8* %251, align 8
  %256 = trunc i64 %228 to i16
  %257 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 4
  store i16 %256, i16* %257, align 2
  %258 = trunc i64 %231 to i16
  %259 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 5
  store i16 %258, i16* %259, align 8
  %260 = sub i16 %258, %256
  %261 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 6
  store i16 %260, i16* %261, align 2
  br label %318

262:                                              ; preds = %216
  %263 = sub nsw i64 %138, %137
  %264 = icmp slt i64 %263, 0
  %265 = sub nsw i64 0, %263
  %266 = select i1 %264, i64 %265, i64 %263
  %267 = sub nsw i64 %163, %158
  %268 = icmp slt i64 %267, 0
  %269 = sub nsw i64 0, %267
  %270 = select i1 %268, i64 %269, i64 %267
  %271 = icmp sgt i64 %266, %270
  br i1 %271, label %272, label %285

272:                                              ; preds = %262
  %273 = icmp slt i64 %148, %135
  %274 = select i1 %273, i64 %148, i64 %135
  %275 = icmp sgt i64 %150, %136
  %276 = select i1 %275, i64 %150, i64 %136
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %186, align 8
  %277 = add nsw i64 %274, %276
  %278 = lshr i64 %277, 1
  %279 = trunc i64 %278 to i16
  %280 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 2
  store i16 %279, i16* %280, align 2
  %281 = sub nsw i64 %276, %274
  %282 = lshr i64 %281, 1
  %283 = trunc i64 %282 to i16
  %284 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 3
  store i16 %283, i16* %284, align 4
  br label %318

285:                                              ; preds = %262
  %286 = icmp slt i64 %135, %148
  %287 = select i1 %286, i64 %135, i64 %148
  %288 = icmp sgt i64 %136, %150
  %289 = select i1 %288, i64 %136, i64 %150
  %290 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 14
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %290, align 8
  %291 = add nsw i64 %287, %289
  %292 = lshr i64 %291, 1
  %293 = trunc i64 %292 to i16
  %294 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 2
  store i16 %293, i16* %294, align 2
  %295 = sub nsw i64 %289, %287
  %296 = lshr i64 %295, 1
  %297 = trunc i64 %296 to i16
  %298 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 3
  store i16 %297, i16* %298, align 4
  %299 = or i16 %164, %159
  %300 = and i16 %299, 3
  %301 = icmp ne i16 %300, 0
  %302 = sub nsw i64 %174, %173
  %303 = icmp slt i64 %302, %23
  %304 = and i1 %301, %303
  br i1 %304, label %305, label %309

305:                                              ; preds = %285
  %306 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 0
  %307 = load i8, i8* %306, align 8
  %308 = or i8 %307, 1
  store i8 %308, i8* %306, align 8
  br label %309

309:                                              ; preds = %285, %305
  %310 = trunc i64 %158 to i16
  %311 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 4
  store i16 %310, i16* %311, align 2
  %312 = trunc i64 %163 to i16
  %313 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 5
  store i16 %312, i16* %313, align 8
  %314 = sub i16 %312, %310
  %315 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 6
  store i16 %314, i16* %315, align 2
  %316 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %121, i64 0, i32 0
  %317 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %134, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* align 8 %316, i64 80, i1 false)
  br label %318

318:                                              ; preds = %272, %309, %222
  %319 = phi i64 [ %224, %222 ], [ %148, %272 ], [ %287, %309 ]
  %320 = phi i64 [ %226, %222 ], [ %150, %272 ], [ %289, %309 ]
  %321 = phi i64 [ %228, %222 ], [ %158, %272 ], [ %158, %309 ]
  %322 = phi i64 [ %231, %222 ], [ %163, %272 ], [ %163, %309 ]
  %323 = phi i16 [ %229, %222 ], [ %159, %272 ], [ %159, %309 ]
  %324 = phi i16 [ %232, %222 ], [ %164, %272 ], [ %164, %309 ]
  %325 = phi i64 [ %234, %222 ], [ %173, %272 ], [ %173, %309 ]
  %326 = phi i64 [ %236, %222 ], [ %174, %272 ], [ %174, %309 ]
  %327 = phi i64 [ %135, %222 ], [ %274, %272 ], [ %287, %309 ]
  %328 = phi i64 [ %136, %222 ], [ %276, %272 ], [ %289, %309 ]
  %329 = phi i64 [ %137, %222 ], [ %137, %272 ], [ %158, %309 ]
  %330 = phi i64 [ %138, %222 ], [ %138, %272 ], [ %163, %309 ]
  %331 = phi i16 [ %139, %222 ], [ %139, %272 ], [ %159, %309 ]
  %332 = phi i16 [ %140, %222 ], [ %140, %272 ], [ %164, %309 ]
  %333 = phi i64 [ %141, %222 ], [ %141, %272 ], [ %173, %309 ]
  %334 = phi i64 [ %142, %222 ], [ %142, %272 ], [ %174, %309 ]
  %335 = load i32, i32* %29, align 8
  %336 = add nsw i32 %335, -1
  store i32 %336, i32* %29, align 8
  br label %337

337:                                              ; preds = %209, %318, %172, %120
  %338 = phi %struct.AF_SegmentRec_* [ %121, %120 ], [ %121, %172 ], [ null, %318 ], [ null, %209 ]
  %339 = phi i32 [ 0, %120 ], [ %124, %172 ], [ 0, %318 ], [ 0, %209 ]
  %340 = phi i64 [ %125, %120 ], [ %148, %172 ], [ %319, %318 ], [ %148, %209 ]
  %341 = phi i64 [ %126, %120 ], [ %150, %172 ], [ %320, %318 ], [ %150, %209 ]
  %342 = phi i64 [ %127, %120 ], [ %158, %172 ], [ %321, %318 ], [ %158, %209 ]
  %343 = phi i64 [ %128, %120 ], [ %163, %172 ], [ %322, %318 ], [ %163, %209 ]
  %344 = phi i16 [ %129, %120 ], [ %159, %172 ], [ %323, %318 ], [ %159, %209 ]
  %345 = phi i16 [ %130, %120 ], [ %164, %172 ], [ %324, %318 ], [ %164, %209 ]
  %346 = phi i64 [ %131, %120 ], [ %173, %172 ], [ %325, %318 ], [ %173, %209 ]
  %347 = phi i64 [ %132, %120 ], [ %174, %172 ], [ %326, %318 ], [ %174, %209 ]
  %348 = phi %struct.AF_SegmentRec_* [ %134, %120 ], [ %134, %172 ], [ %134, %318 ], [ %121, %209 ]
  %349 = phi i64 [ %135, %120 ], [ %135, %172 ], [ %327, %318 ], [ %148, %209 ]
  %350 = phi i64 [ %136, %120 ], [ %136, %172 ], [ %328, %318 ], [ %150, %209 ]
  %351 = phi i64 [ %137, %120 ], [ %137, %172 ], [ %329, %318 ], [ %158, %209 ]
  %352 = phi i64 [ %138, %120 ], [ %138, %172 ], [ %330, %318 ], [ %163, %209 ]
  %353 = phi i16 [ %139, %120 ], [ %139, %172 ], [ %331, %318 ], [ %159, %209 ]
  %354 = phi i16 [ %140, %120 ], [ %140, %172 ], [ %332, %318 ], [ %164, %209 ]
  %355 = phi i64 [ %141, %120 ], [ %141, %172 ], [ %333, %318 ], [ %173, %209 ]
  %356 = phi i64 [ %142, %120 ], [ %142, %172 ], [ %334, %318 ], [ %174, %209 ]
  %357 = icmp eq %struct.AF_PointRec_* %123, %119
  br i1 %357, label %358, label %360

358:                                              ; preds = %337
  %359 = icmp eq i8 %133, 0
  br i1 %359, label %360, label %474

360:                                              ; preds = %358, %337
  %361 = phi i8 [ %133, %337 ], [ 1, %358 ]
  %362 = icmp eq i32 %339, 0
  br i1 %362, label %363, label %457

363:                                              ; preds = %360
  %364 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 2
  %365 = load i8, i8* %364, align 1
  %366 = sext i8 %365 to i32
  %367 = icmp slt i32 %366, 0
  %368 = sub nsw i32 0, %366
  %369 = select i1 %367, i32 %368, i32 %366
  %370 = icmp eq i32 %369, %28
  br i1 %370, label %375, label %371

371:                                              ; preds = %363
  %372 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 12
  %373 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %372, align 8
  %374 = icmp eq %struct.AF_PointRec_* %123, %373
  br i1 %374, label %375, label %457

375:                                              ; preds = %371, %363
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #10
  store i32 0, i32* %3, align 4
  %376 = load i32, i32* %29, align 8
  %377 = icmp slt i32 %376, 18
  br i1 %377, label %378, label %382

378:                                              ; preds = %375
  %379 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %69, align 8
  %380 = icmp eq %struct.AF_SegmentRec_* %379, null
  br i1 %380, label %381, label %413

381:                                              ; preds = %378
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %69, align 8
  store i32 18, i32* %68, align 4
  br label %413

382:                                              ; preds = %375
  %383 = load i32, i32* %68, align 4
  %384 = icmp slt i32 %376, %383
  br i1 %384, label %413, label %385

385:                                              ; preds = %382
  %386 = icmp sgt i32 %383, 26843544
  br i1 %386, label %387, label %388

387:                                              ; preds = %385
  store i32 64, i32* %3, align 4
  br label %472

388:                                              ; preds = %385
  %389 = ashr i32 %383, 2
  %390 = add nsw i32 %389, 4
  %391 = add nsw i32 %390, %383
  %392 = icmp slt i32 %390, 0
  %393 = icmp sgt i32 %391, 26843545
  %394 = or i1 %392, %393
  %395 = select i1 %394, i32 26843545, i32 %391
  %396 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %69, align 8
  %397 = icmp eq %struct.AF_SegmentRec_* %396, %70
  br i1 %397, label %398, label %404

398:                                              ; preds = %388
  %399 = sext i32 %395 to i64
  %400 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %11, i64 80, i64 0, i64 %399, i8* null, i32* nonnull %3) #10
  store i8* %400, i8** %71, align 8
  %401 = load i32, i32* %3, align 4
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %472

403:                                              ; preds = %398
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %72, i64 1440, i1 false) #10
  br label %411

404:                                              ; preds = %388
  %405 = sext i32 %383 to i64
  %406 = sext i32 %395 to i64
  %407 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %396, i64 0, i32 0
  %408 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %11, i64 80, i64 %405, i64 %406, i8* %407, i32* nonnull %3) #10
  store i8* %408, i8** %71, align 8
  %409 = load i32, i32* %3, align 4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %472

411:                                              ; preds = %404, %403
  store i32 %395, i32* %68, align 4
  %412 = load i32, i32* %29, align 8
  br label %413

413:                                              ; preds = %411, %382, %381, %378
  %414 = phi i32 [ %412, %411 ], [ %376, %378 ], [ %376, %382 ], [ %376, %381 ]
  %415 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %69, align 8
  %416 = add nsw i32 %414, 1
  store i32 %416, i32* %29, align 8
  %417 = sext i32 %414 to i64
  %418 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #10
  %419 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %418, i64 0, i32 0
  store i8 0, i8* %419, align 8
  %420 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %420, i8* nonnull align 1 %12, i64 47, i1 false)
  %421 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 11
  store i64 32000, i64* %421, align 8
  %422 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 12
  %423 = bitcast i64* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %423, i8* nonnull align 8 %13, i64 24, i1 false)
  store i8 %365, i8* %420, align 1
  %424 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 13
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %424, align 8
  %425 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 14
  store %struct.AF_PointRec_* %123, %struct.AF_PointRec_** %425, align 8
  %426 = icmp eq %struct.AF_SegmentRec_* %348, null
  %427 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %418, i64 -1
  %428 = select i1 %426, %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_* %427
  %429 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 9
  %430 = load i64, i64* %429, align 8
  %431 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 10
  %432 = load i64, i64* %431, align 8
  %433 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 0
  %434 = load i16, i16* %433, align 8
  %435 = and i16 %434, 3
  %436 = icmp eq i16 %435, 0
  %437 = select i1 %436, i64 %432, i64 32000
  %438 = select i1 %436, i64 %432, i64 -32000
  %439 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 12
  %440 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %439, align 8
  %441 = icmp eq %struct.AF_PointRec_* %123, %440
  br i1 %441, label %442, label %457

442:                                              ; preds = %413
  %443 = trunc i64 %430 to i16
  %444 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 2
  store i16 %443, i16* %444, align 2
  %445 = load i16, i16* %433, align 8
  %446 = and i16 %445, 3
  %447 = icmp eq i16 %446, 0
  br i1 %447, label %449, label %448

448:                                              ; preds = %442
  store i8 1, i8* %419, align 8
  br label %449

449:                                              ; preds = %442, %448
  %450 = load i64, i64* %431, align 8
  %451 = trunc i64 %450 to i16
  %452 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 4
  store i16 %451, i16* %452, align 2
  %453 = load i64, i64* %431, align 8
  %454 = trunc i64 %453 to i16
  %455 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 5
  store i16 %454, i16* %455, align 8
  %456 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %415, i64 %417, i32 6
  store i16 0, i16* %456, align 2
  br label %457

457:                                              ; preds = %371, %449, %413, %360
  %458 = phi %struct.AF_SegmentRec_* [ null, %449 ], [ %418, %413 ], [ %338, %371 ], [ %338, %360 ]
  %459 = phi i32 [ %366, %449 ], [ %366, %413 ], [ %122, %371 ], [ %122, %360 ]
  %460 = phi i32 [ 0, %449 ], [ 1, %413 ], [ 0, %371 ], [ %339, %360 ]
  %461 = phi i64 [ %430, %449 ], [ %430, %413 ], [ %340, %371 ], [ %340, %360 ]
  %462 = phi i64 [ %430, %449 ], [ %430, %413 ], [ %341, %371 ], [ %341, %360 ]
  %463 = phi i64 [ %432, %449 ], [ %432, %413 ], [ %342, %371 ], [ %342, %360 ]
  %464 = phi i64 [ %432, %449 ], [ %432, %413 ], [ %343, %371 ], [ %343, %360 ]
  %465 = phi i16 [ %434, %449 ], [ %434, %413 ], [ %344, %371 ], [ %344, %360 ]
  %466 = phi i16 [ %434, %449 ], [ %434, %413 ], [ %345, %371 ], [ %345, %360 ]
  %467 = phi i64 [ %437, %449 ], [ %437, %413 ], [ %346, %371 ], [ %346, %360 ]
  %468 = phi i64 [ %438, %449 ], [ %438, %413 ], [ %347, %371 ], [ %347, %360 ]
  %469 = phi %struct.AF_SegmentRec_* [ %428, %449 ], [ %428, %413 ], [ %348, %371 ], [ %348, %360 ]
  %470 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %123, i64 0, i32 11
  %471 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %470, align 8
  br label %120

472:                                              ; preds = %398, %404, %387
  %473 = phi i32 [ 64, %387 ], [ %409, %404 ], [ %401, %398 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #10
  br label %548

474:                                              ; preds = %358
  %475 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %75, i64 1
  %476 = icmp ult %struct.AF_PointRec_** %475, %19
  br i1 %476, label %73, label %477

477:                                              ; preds = %474, %64
  %478 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 2
  %479 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %478, align 8
  %480 = icmp eq %struct.AF_SegmentRec_* %479, null
  br i1 %480, label %548, label %481

481:                                              ; preds = %477
  %482 = load i32, i32* %29, align 8
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %479, i64 %483
  %485 = icmp sgt i32 %482, 0
  br i1 %485, label %486, label %548

486:                                              ; preds = %481, %545
  %487 = phi %struct.AF_SegmentRec_* [ %546, %545 ], [ %479, %481 ]
  %488 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 13
  %489 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %488, align 8
  %490 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 14
  %491 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %490, align 8
  %492 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %489, i64 0, i32 10
  %493 = load i64, i64* %492, align 8
  %494 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %491, i64 0, i32 10
  %495 = load i64, i64* %494, align 8
  %496 = icmp slt i64 %493, %495
  %497 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %489, i64 0, i32 12
  %498 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %497, align 8
  %499 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %498, i64 0, i32 10
  %500 = load i64, i64* %499, align 8
  br i1 %496, label %501, label %523

501:                                              ; preds = %486
  %502 = icmp sgt i64 %493, %500
  br i1 %502, label %503, label %510

503:                                              ; preds = %501
  %504 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 6
  %505 = load i16, i16* %504, align 2
  %506 = sub nsw i64 %493, %500
  %507 = lshr i64 %506, 1
  %508 = trunc i64 %507 to i16
  %509 = add i16 %505, %508
  store i16 %509, i16* %504, align 2
  br label %510

510:                                              ; preds = %503, %501
  %511 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %491, i64 0, i32 11
  %512 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %511, align 8
  %513 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %512, i64 0, i32 10
  %514 = load i64, i64* %513, align 8
  %515 = icmp sgt i64 %514, %495
  br i1 %515, label %516, label %545

516:                                              ; preds = %510
  %517 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 6
  %518 = load i16, i16* %517, align 2
  %519 = sub nsw i64 %514, %495
  %520 = lshr i64 %519, 1
  %521 = trunc i64 %520 to i16
  %522 = add i16 %518, %521
  store i16 %522, i16* %517, align 2
  br label %545

523:                                              ; preds = %486
  %524 = icmp sgt i64 %500, %493
  br i1 %524, label %525, label %532

525:                                              ; preds = %523
  %526 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 6
  %527 = load i16, i16* %526, align 2
  %528 = sub nsw i64 %500, %493
  %529 = lshr i64 %528, 1
  %530 = trunc i64 %529 to i16
  %531 = add i16 %527, %530
  store i16 %531, i16* %526, align 2
  br label %532

532:                                              ; preds = %525, %523
  %533 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %491, i64 0, i32 11
  %534 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %533, align 8
  %535 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %534, i64 0, i32 10
  %536 = load i64, i64* %535, align 8
  %537 = icmp sgt i64 %495, %536
  br i1 %537, label %538, label %545

538:                                              ; preds = %532
  %539 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 0, i32 6
  %540 = load i16, i16* %539, align 2
  %541 = sub nsw i64 %495, %536
  %542 = lshr i64 %541, 1
  %543 = trunc i64 %542 to i16
  %544 = add i16 %540, %543
  store i16 %544, i16* %539, align 2
  br label %545

545:                                              ; preds = %532, %538, %510, %516
  %546 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %487, i64 1
  %547 = icmp ult %struct.AF_SegmentRec_* %546, %484
  br i1 %547, label %486, label %548

548:                                              ; preds = %545, %477, %481, %472
  %549 = phi i32 [ %473, %472 ], [ 0, %481 ], [ 0, %477 ], [ 0, %545 ]
  call void @llvm.lifetime.end.p0i8(i64 47, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  ret i32 %549
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* nocapture readonly, i32, %struct.AF_WidthRec_* nocapture readonly, i32) unnamed_addr #1 {
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %5, i32 2
  %7 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %6, align 8
  %8 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %5, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %7, i64 %10
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = add i32 %1, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %2, i64 %15, i32 0
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %4, %13
  %19 = phi i64 [ %17, %13 ], [ 0, %4 ]
  %20 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %21 = bitcast %struct.AF_StyleMetricsRec_** %20 to %struct.AF_LatinMetricsRec_**
  %22 = load %struct.AF_LatinMetricsRec_*, %struct.AF_LatinMetricsRec_** %21, align 8
  %23 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = lshr i64 %25, 8
  %27 = icmp eq i64 %26, 0
  %28 = select i1 %27, i64 1, i64 %26
  %29 = mul nuw nsw i64 %25, 6000
  %30 = lshr i64 %29, 11
  %31 = icmp sgt i32 %9, 0
  br i1 %31, label %32, label %132

32:                                               ; preds = %18
  %33 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %5, i32 6
  %34 = icmp eq i64 %19, 0
  br label %36

35:                                               ; preds = %112
  br i1 %31, label %115, label %132

36:                                               ; preds = %32, %112
  %37 = phi %struct.AF_SegmentRec_* [ %7, %32 ], [ %113, %112 ]
  %38 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = load i32, i32* %33, align 8
  %42 = icmp eq i32 %41, %40
  br i1 %42, label %43, label %112

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 2
  %45 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 4
  %46 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 5
  %47 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 11
  %48 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 0, i32 9
  br label %49

49:                                               ; preds = %110, %43
  %50 = phi i8 [ %39, %43 ], [ %111, %110 ]
  %51 = phi %struct.AF_SegmentRec_* [ %7, %43 ], [ %108, %110 ]
  %52 = load i16, i16* %44, align 2
  %53 = sext i16 %52 to i64
  %54 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = sext i16 %55 to i64
  %57 = sext i8 %50 to i32
  %58 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = sub nsw i32 0, %60
  %62 = icmp eq i32 %57, %61
  %63 = icmp sgt i16 %55, %52
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %107

65:                                               ; preds = %49
  %66 = load i16, i16* %45, align 2
  %67 = load i16, i16* %46, align 8
  %68 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 4
  %69 = load i16, i16* %68, align 2
  %70 = icmp slt i16 %66, %69
  %71 = select i1 %70, i16 %69, i16 %66
  %72 = sext i16 %71 to i64
  %73 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 5
  %74 = load i16, i16* %73, align 8
  %75 = icmp sgt i16 %67, %74
  %76 = select i1 %75, i16 %74, i16 %67
  %77 = sext i16 %76 to i64
  %78 = sub nsw i64 %77, %72
  %79 = icmp slt i64 %78, %28
  br i1 %79, label %107, label %80

80:                                               ; preds = %65
  %81 = sub nsw i64 %56, %53
  br i1 %34, label %94, label %82

82:                                               ; preds = %80
  %83 = shl nsw i64 %81, 10
  %84 = sdiv i64 %83, %19
  %85 = add nsw i64 %84, -1024
  %86 = icmp sgt i64 %85, 10000
  br i1 %86, label %94, label %87

87:                                               ; preds = %82
  %88 = icmp sgt i64 %85, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %87
  %90 = mul nsw i64 %85, %85
  %91 = trunc i64 %90 to i32
  %92 = udiv i32 %91, 3000
  %93 = zext i32 %92 to i64
  br label %94

94:                                               ; preds = %80, %89, %82, %87
  %95 = phi i64 [ %93, %89 ], [ 32000, %82 ], [ 0, %87 ], [ %81, %80 ]
  %96 = sdiv i64 %30, %78
  %97 = add nsw i64 %96, %95
  %98 = load i64, i64* %47, align 8
  %99 = icmp slt i64 %97, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %94
  store i64 %97, i64* %47, align 8
  store %struct.AF_SegmentRec_* %51, %struct.AF_SegmentRec_** %48, align 8
  br label %101

101:                                              ; preds = %100, %94
  %102 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 11
  %103 = load i64, i64* %102, align 8
  %104 = icmp slt i64 %97, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  store i64 %97, i64* %102, align 8
  %106 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 0, i32 9
  store %struct.AF_SegmentRec_* %37, %struct.AF_SegmentRec_** %106, align 8
  br label %107

107:                                              ; preds = %65, %105, %101, %49
  %108 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 1
  %109 = icmp ult %struct.AF_SegmentRec_* %108, %11
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = load i8, i8* %38, align 1
  br label %49

112:                                              ; preds = %107, %36
  %113 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %37, i64 1
  %114 = icmp ult %struct.AF_SegmentRec_* %113, %11
  br i1 %114, label %36, label %35

115:                                              ; preds = %35, %129
  %116 = phi %struct.AF_SegmentRec_* [ %130, %129 ], [ %7, %35 ]
  %117 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %116, i64 0, i32 9
  %118 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %117, align 8
  %119 = icmp eq %struct.AF_SegmentRec_* %118, null
  br i1 %119, label %129, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %118, i64 0, i32 9
  %122 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %121, align 8
  %123 = icmp eq %struct.AF_SegmentRec_* %122, %116
  br i1 %123, label %129, label %124

124:                                              ; preds = %120
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %117, align 8
  %125 = bitcast %struct.AF_SegmentRec_** %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %116, i64 0, i32 10
  %128 = bitcast %struct.AF_SegmentRec_** %127 to i64*
  store i64 %126, i64* %128, align 8
  br label %129

129:                                              ; preds = %120, %115, %124
  %130 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %116, i64 1
  %131 = icmp ult %struct.AF_SegmentRec_* %130, %11
  br i1 %131, label %115, label %132

132:                                              ; preds = %129, %18, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_sort_and_quantize_widths(i32* nocapture, %struct.AF_WidthRec_* nocapture, i64) unnamed_addr #0 {
  %4 = load i32, i32* %0, align 4
  switch i32 %4, label %5 [
    i32 1, label %149
    i32 0, label %147
  ]

5:                                                ; preds = %3, %29
  %6 = phi i32 [ %31, %29 ], [ 1, %3 ]
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %7, i32 0
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %5, %19
  %11 = phi i32 [ %13, %19 ], [ %6, %5 ]
  %12 = zext i32 %11 to i64
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %14
  %16 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %9, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %12
  %21 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %12, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  %24 = bitcast %struct.AF_WidthRec_* %20 to i8*
  %25 = bitcast %struct.AF_WidthRec_* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false)
  store i64 %9, i64* %16, align 8
  %26 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %14, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %27, align 8
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %10

29:                                               ; preds = %19, %10
  %30 = load i32, i32* %0, align 4
  %31 = add nuw i32 %6, 1
  %32 = icmp ult i32 %31, %30
  br i1 %32, label %5, label %33

33:                                               ; preds = %29
  %34 = icmp ugt i32 %30, 1
  br i1 %34, label %35, label %147

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  br label %40

38:                                               ; preds = %119
  %39 = icmp ugt i32 %120, 1
  br i1 %39, label %126, label %147

40:                                               ; preds = %35, %119
  %41 = phi i32 [ %120, %119 ], [ %30, %35 ]
  %42 = phi i64 [ %123, %119 ], [ %37, %35 ]
  %43 = phi i32 [ %122, %119 ], [ 0, %35 ]
  %44 = phi i32 [ %124, %119 ], [ 1, %35 ]
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %45, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub nsw i64 %47, %42
  %49 = icmp sgt i64 %48, %2
  %50 = add i32 %41, -1
  %51 = icmp eq i32 %44, %50
  %52 = or i1 %51, %49
  br i1 %52, label %53, label %119

53:                                               ; preds = %40
  %54 = xor i1 %49, true
  %55 = and i1 %51, %54
  %56 = zext i1 %55 to i32
  %57 = add nuw i32 %44, %56
  %58 = icmp ult i32 %43, %57
  %59 = zext i32 %43 to i64
  br i1 %58, label %60, label %106

60:                                               ; preds = %53
  %61 = zext i32 %57 to i64
  %62 = sub nsw i64 %61, %59
  %63 = xor i64 %59, -1
  %64 = add nsw i64 %63, %61
  %65 = and i64 %62, 3
  %66 = icmp ult i64 %64, 3
  br i1 %66, label %91, label %67

67:                                               ; preds = %60
  %68 = sub nsw i64 %62, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ %59, %67 ], [ %88, %69 ]
  %71 = phi i64 [ 0, %67 ], [ %87, %69 ]
  %72 = phi i64 [ %68, %67 ], [ %89, %69 ]
  %73 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %70, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add nsw i64 %74, %71
  store i64 0, i64* %73, align 8
  %76 = add nuw nsw i64 %70, 1
  %77 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %76, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, %75
  store i64 0, i64* %77, align 8
  %80 = add nuw nsw i64 %70, 2
  %81 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %80, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add nsw i64 %82, %79
  store i64 0, i64* %81, align 8
  %84 = add nuw nsw i64 %70, 3
  %85 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %84, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add nsw i64 %86, %83
  store i64 0, i64* %85, align 8
  %88 = add nuw nsw i64 %70, 4
  %89 = add i64 %72, -4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %69

91:                                               ; preds = %69, %60
  %92 = phi i64 [ undef, %60 ], [ %87, %69 ]
  %93 = phi i64 [ %59, %60 ], [ %88, %69 ]
  %94 = phi i64 [ 0, %60 ], [ %87, %69 ]
  %95 = icmp eq i64 %65, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %91, %96
  %97 = phi i64 [ %103, %96 ], [ %93, %91 ]
  %98 = phi i64 [ %102, %96 ], [ %94, %91 ]
  %99 = phi i64 [ %104, %96 ], [ %65, %91 ]
  %100 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %97, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add nsw i64 %101, %98
  store i64 0, i64* %100, align 8
  %103 = add nuw nsw i64 %97, 1
  %104 = add i64 %99, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %96, !llvm.loop !6

106:                                              ; preds = %91, %96, %53
  %107 = phi i64 [ 0, %53 ], [ %92, %91 ], [ %102, %96 ]
  %108 = phi i64 [ %59, %53 ], [ %61, %96 ], [ %61, %91 ]
  %109 = sdiv i64 %107, %108
  %110 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %59, i32 0
  store i64 %109, i64* %110, align 8
  %111 = load i32, i32* %0, align 4
  %112 = add i32 %111, -1
  %113 = icmp ult i32 %57, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %106
  %115 = add nuw i32 %57, 1
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %116, i32 0
  %118 = load i64, i64* %117, align 8
  br label %119

119:                                              ; preds = %40, %114, %106
  %120 = phi i32 [ %111, %114 ], [ %111, %106 ], [ %41, %40 ]
  %121 = phi i32 [ %57, %114 ], [ %57, %106 ], [ %44, %40 ]
  %122 = phi i32 [ %115, %114 ], [ %43, %106 ], [ %43, %40 ]
  %123 = phi i64 [ %118, %114 ], [ %42, %106 ], [ %42, %40 ]
  %124 = add i32 %121, 1
  %125 = icmp ult i32 %124, %120
  br i1 %125, label %40, label %38

126:                                              ; preds = %38, %141
  %127 = phi i32 [ %142, %141 ], [ %120, %38 ]
  %128 = phi i64 [ %144, %141 ], [ 1, %38 ]
  %129 = phi i32 [ %143, %141 ], [ 1, %38 ]
  %130 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %128
  %131 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %130, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %141, label %134

134:                                              ; preds = %126
  %135 = add i32 %129, 1
  %136 = zext i32 %129 to i64
  %137 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %1, i64 %136
  %138 = bitcast %struct.AF_WidthRec_* %137 to i8*
  %139 = bitcast %struct.AF_WidthRec_* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 24, i1 false)
  %140 = load i32, i32* %0, align 4
  br label %141

141:                                              ; preds = %126, %134
  %142 = phi i32 [ %140, %134 ], [ %127, %126 ]
  %143 = phi i32 [ %135, %134 ], [ %129, %126 ]
  %144 = add nuw nsw i64 %128, 1
  %145 = zext i32 %142 to i64
  %146 = icmp ult i64 %144, %145
  br i1 %146, label %126, label %147

147:                                              ; preds = %141, %3, %33, %38
  %148 = phi i32 [ 1, %38 ], [ 1, %33 ], [ 1, %3 ], [ %143, %141 ]
  store i32 %148, i32* %0, align 4
  br label %149

149:                                              ; preds = %3, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_glyph_hints_done(%struct.AF_GlyphHintsRec_*) unnamed_addr #0 {
  %2 = icmp eq %struct.AF_GlyphHintsRec_* %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = icmp eq %struct.FT_MemoryRec_* %5, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 2
  %11 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %10, align 8
  %12 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 7, i32 0, i64 0
  %13 = icmp eq %struct.AF_SegmentRec_* %11, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %11, i64 0, i32 0
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %15) #10
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %10, align 8
  br label %16

16:                                               ; preds = %7, %14
  %17 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 3
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 4
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 5
  %20 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %19, align 8
  %21 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 0, i32 7, i32 1, i64 0
  %22 = icmp eq %struct.AF_EdgeRec_* %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = bitcast %struct.AF_EdgeRec_* %20 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %24) #10
  store %struct.AF_EdgeRec_* null, %struct.AF_EdgeRec_** %19, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 2
  %29 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %28, align 8
  %30 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 7, i32 0, i64 0
  %31 = icmp eq %struct.AF_SegmentRec_* %29, %30
  br i1 %31, label %49, label %47

32:                                               ; preds = %58
  %33 = bitcast %struct.AF_PointRec_** %60 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %33) #10
  store %struct.AF_PointRec_** null, %struct.AF_PointRec_*** %59, align 8
  br label %34

34:                                               ; preds = %58, %32
  %35 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 8
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 9
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %38 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %37, align 8
  %39 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 1, i64 0
  %40 = icmp eq %struct.AF_PointRec_* %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = bitcast %struct.AF_PointRec_* %38 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %42) #10
  store %struct.AF_PointRec_* null, %struct.AF_PointRec_** %37, align 8
  br label %43

43:                                               ; preds = %34, %41
  %44 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 5
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 6
  store i32 0, i32* %45, align 4
  store %struct.FT_MemoryRec_* null, %struct.FT_MemoryRec_** %4, align 8
  br label %46

46:                                               ; preds = %1, %3, %43
  ret void

47:                                               ; preds = %25
  %48 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %29, i64 0, i32 0
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %48) #10
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %28, align 8
  br label %49

49:                                               ; preds = %47, %25
  %50 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 3
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 4
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 5
  %53 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %52, align 8
  %54 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 1, i32 7, i32 1, i64 0
  %55 = icmp eq %struct.AF_EdgeRec_* %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  %57 = bitcast %struct.AF_EdgeRec_* %53 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %5, i8* %57) #10
  store %struct.AF_EdgeRec_* null, %struct.AF_EdgeRec_** %52, align 8
  br label %58

58:                                               ; preds = %56, %49
  %59 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %60 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %59, align 8
  %61 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 17, i32 0, i64 0
  %62 = icmp eq %struct.AF_PointRec_** %60, %61
  br i1 %62, label %34, label %32
}

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #5

declare i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_*) local_unnamed_addr #5

declare hidden i32 @ft_corner_is_flat(i64, i64, i64, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_cjk_metrics_scale_dim(%struct.AF_CJKMetricsRec_* nocapture, %struct.AF_ScalerRec_* nocapture readonly, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 1
  %6 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 3
  %7 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 2
  %8 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 4
  %9 = select i1 %4, i64* %6, i64* %8
  %10 = select i1 %4, i64* %5, i64* %7
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = zext i32 %2 to i64
  %14 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 10
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %11
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 11
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %12
  br i1 %20, label %111, label %21

21:                                               ; preds = %17, %3
  store i64 %11, i64* %14, align 8
  %22 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 11
  store i64 %12, i64* %22, align 8
  %23 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 0
  store i64 %11, i64* %23, align 8
  %24 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 1
  store i64 %12, i64* %24, align 8
  %25 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %111, label %28

28:                                               ; preds = %21
  %29 = shl i64 %11, 32
  %30 = ashr exact i64 %29, 32
  br label %31

31:                                               ; preds = %28, %106
  %32 = phi i32 [ %26, %28 ], [ %107, %106 ]
  %33 = phi i64 [ 0, %28 ], [ %108, %106 ]
  %34 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = shl i64 %35, 32
  %37 = ashr exact i64 %36, 32
  %38 = mul nsw i64 %37, %30
  %39 = ashr i64 %38, 63
  %40 = add nsw i64 %38, 32768
  %41 = add nsw i64 %40, %39
  %42 = shl i64 %41, 16
  %43 = ashr i64 %42, 32
  %44 = add nsw i64 %43, %12
  %45 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 0, i32 1
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 0, i32 2
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 1, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = shl i64 %48, 32
  %50 = ashr exact i64 %49, 32
  %51 = mul nsw i64 %50, %30
  %52 = ashr i64 %51, 63
  %53 = add nsw i64 %51, 32768
  %54 = add nsw i64 %53, %52
  %55 = shl i64 %54, 16
  %56 = ashr i64 %55, 32
  %57 = add nsw i64 %56, %12
  %58 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 1, i32 1
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 1, i32 2
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9, i64 %33, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, -2
  store i32 %62, i32* %60, align 8
  %63 = sub nsw i64 %35, %48
  %64 = shl i64 %63, 32
  %65 = ashr exact i64 %64, 32
  %66 = mul nsw i64 %65, %30
  %67 = ashr i64 %66, 63
  %68 = add nsw i64 %66, 32768
  %69 = add nsw i64 %68, %67
  %70 = lshr i64 %69, 16
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 48
  %73 = icmp ult i32 %72, 97
  br i1 %73, label %74, label %106

74:                                               ; preds = %31
  %75 = add nsw i64 %44, 32
  %76 = and i64 %75, -64
  store i64 %76, i64* %46, align 8
  %77 = tail call i64 @FT_DivFix(i64 %76, i64 %11) #10
  %78 = load i64, i64* %47, align 8
  %79 = sub nsw i64 %77, %78
  %80 = icmp slt i64 %79, 0
  %81 = sub nsw i64 0, %79
  %82 = select i1 %80, i64 %81, i64 %79
  %83 = shl i64 %82, 32
  %84 = ashr exact i64 %83, 32
  %85 = mul nsw i64 %84, %30
  %86 = ashr i64 %85, 63
  %87 = add nsw i64 %85, 32768
  %88 = add nsw i64 %87, %86
  %89 = lshr i64 %88, 16
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %90, 32
  br i1 %91, label %97, label %92

92:                                               ; preds = %74
  %93 = shl i64 %89, 32
  %94 = ashr exact i64 %93, 32
  %95 = add nuw nsw i64 %94, 32
  %96 = and i64 %95, -64
  br label %97

97:                                               ; preds = %74, %92
  %98 = phi i64 [ %96, %92 ], [ 0, %74 ]
  %99 = sub nsw i64 0, %98
  %100 = select i1 %80, i64 %99, i64 %98
  %101 = load i64, i64* %46, align 8
  %102 = sub nsw i64 %101, %100
  store i64 %102, i64* %59, align 8
  %103 = load i32, i32* %60, align 8
  %104 = or i32 %103, 1
  store i32 %104, i32* %60, align 8
  %105 = load i32, i32* %25, align 4
  br label %106

106:                                              ; preds = %97, %31
  %107 = phi i32 [ %105, %97 ], [ %32, %31 ]
  %108 = add nuw nsw i64 %33, 1
  %109 = zext i32 %107 to i64
  %110 = icmp ult i64 %108, %109
  br i1 %110, label %31, label %111

111:                                              ; preds = %106, %21, %17
  ret void
}

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_cjk_hints_detect_features(%struct.AF_GlyphHintsRec_*, i32) unnamed_addr #0 {
  %3 = alloca %struct.AF_EdgeRec_*, align 8
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 2
  %6 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %5, align 8
  %7 = icmp eq %struct.AF_SegmentRec_* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %6, i64 %11
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi %struct.AF_SegmentRec_* [ %12, %8 ], [ null, %2 ]
  %15 = tail call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* %0, i32 %1) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %533

17:                                               ; preds = %13
  %18 = icmp ult %struct.AF_SegmentRec_* %6, %14
  br i1 %18, label %19, label %50

19:                                               ; preds = %17, %47
  %20 = phi %struct.AF_SegmentRec_* [ %48, %47 ], [ %6, %17 ]
  %21 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %20, i64 0, i32 13
  %22 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %21, align 8
  %23 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %20, i64 0, i32 14
  %24 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %23, align 8
  %25 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %22, i64 0, i32 0
  %26 = load i16, i16* %25, align 8
  %27 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %20, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, -2
  store i8 %29, i8* %27, align 8
  %30 = icmp eq %struct.AF_PointRec_* %22, %24
  br i1 %30, label %47, label %31

31:                                               ; preds = %19
  %32 = and i16 %26, 3
  br label %33

33:                                               ; preds = %43, %31
  %34 = phi i16 [ %32, %31 ], [ %40, %43 ]
  %35 = phi %struct.AF_PointRec_* [ %22, %31 ], [ %37, %43 ]
  %36 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 11
  %37 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %36, align 8
  %38 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %37, i64 0, i32 0
  %39 = load i16, i16* %38, align 8
  %40 = and i16 %39, 3
  %41 = or i16 %40, %34
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %33
  %44 = icmp eq %struct.AF_PointRec_* %37, %24
  br i1 %44, label %45, label %33

45:                                               ; preds = %43
  %46 = or i8 %28, 1
  store i8 %46, i8* %27, align 8
  br label %47

47:                                               ; preds = %33, %45, %19
  %48 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %20, i64 1
  %49 = icmp ult %struct.AF_SegmentRec_* %48, %14
  br i1 %49, label %19, label %50

50:                                               ; preds = %47, %17
  %51 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %5, align 8
  %52 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %51, i64 %54
  %56 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %59 = bitcast %struct.AF_StyleMetricsRec_** %58 to %struct.AF_LatinMetricsRec_**
  %60 = load %struct.AF_LatinMetricsRec_*, %struct.AF_LatinMetricsRec_** %59, align 8
  %61 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = lshr i32 %62, 8
  %64 = zext i32 %63 to i64
  %65 = icmp eq i32 %1, 0
  %66 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  %67 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  %68 = select i1 %65, i64* %66, i64* %67
  %69 = load i64, i64* %68, align 8
  %70 = tail call i64 @FT_DivFix(i64 192, i64 %69) #10
  %71 = icmp sgt i32 %53, 0
  br i1 %71, label %72, label %260

72:                                               ; preds = %50, %149
  %73 = phi %struct.AF_SegmentRec_* [ %150, %149 ], [ %51, %50 ]
  %74 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = icmp eq i32 %57, %76
  br i1 %77, label %78, label %149

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 2
  %80 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 4
  %81 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 5
  %82 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 11
  %83 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 12
  %84 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 0, i32 9
  br label %85

85:                                               ; preds = %146, %78
  %86 = phi %struct.AF_SegmentRec_* [ %51, %78 ], [ %147, %146 ]
  %87 = icmp eq %struct.AF_SegmentRec_* %86, %73
  br i1 %87, label %146, label %88

88:                                               ; preds = %85
  %89 = load i8, i8* %74, align 1
  %90 = sext i8 %89 to i32
  %91 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = sub nsw i32 0, %93
  %95 = icmp eq i32 %90, %94
  br i1 %95, label %96, label %146

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 2
  %98 = load i16, i16* %97, align 2
  %99 = sext i16 %98 to i64
  %100 = load i16, i16* %79, align 2
  %101 = sext i16 %100 to i64
  %102 = sub nsw i64 %99, %101
  %103 = icmp slt i64 %102, 0
  br i1 %103, label %146, label %104

104:                                              ; preds = %96
  %105 = load i16, i16* %80, align 2
  %106 = load i16, i16* %81, align 8
  %107 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 4
  %108 = load i16, i16* %107, align 2
  %109 = icmp slt i16 %105, %108
  %110 = select i1 %109, i16 %108, i16 %105
  %111 = sext i16 %110 to i64
  %112 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 5
  %113 = load i16, i16* %112, align 8
  %114 = icmp sgt i16 %106, %113
  %115 = select i1 %114, i16 %113, i16 %106
  %116 = sext i16 %115 to i64
  %117 = sub nsw i64 %116, %111
  %118 = icmp slt i64 %117, %64
  br i1 %118, label %146, label %119

119:                                              ; preds = %104
  %120 = shl nsw i64 %102, 3
  %121 = load i64, i64* %82, align 8
  %122 = mul nsw i64 %121, 9
  %123 = icmp slt i64 %120, %122
  br i1 %123, label %124, label %131

124:                                              ; preds = %119
  %125 = mul nsw i64 %121, 7
  %126 = icmp slt i64 %120, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = load i64, i64* %83, align 8
  %129 = icmp slt i64 %128, %117
  br i1 %129, label %130, label %131

130:                                              ; preds = %127, %124
  store i64 %102, i64* %82, align 8
  store i64 %117, i64* %83, align 8
  store %struct.AF_SegmentRec_* %86, %struct.AF_SegmentRec_** %84, align 8
  br label %131

131:                                              ; preds = %130, %127, %119
  %132 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 11
  %133 = load i64, i64* %132, align 8
  %134 = mul nsw i64 %133, 9
  %135 = icmp slt i64 %120, %134
  br i1 %135, label %136, label %146

136:                                              ; preds = %131
  %137 = mul nsw i64 %133, 7
  %138 = icmp slt i64 %120, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 12
  %141 = load i64, i64* %140, align 8
  %142 = icmp slt i64 %141, %117
  br i1 %142, label %143, label %146

143:                                              ; preds = %139, %136
  store i64 %102, i64* %132, align 8
  %144 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 12
  store i64 %117, i64* %144, align 8
  %145 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 0, i32 9
  store %struct.AF_SegmentRec_* %73, %struct.AF_SegmentRec_** %145, align 8
  br label %146

146:                                              ; preds = %143, %139, %131, %104, %96, %88, %85
  %147 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %86, i64 1
  %148 = icmp ult %struct.AF_SegmentRec_* %147, %55
  br i1 %148, label %85, label %149

149:                                              ; preds = %146, %72
  %150 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %73, i64 1
  %151 = icmp ult %struct.AF_SegmentRec_* %150, %55
  br i1 %151, label %72, label %152

152:                                              ; preds = %149, %231
  %153 = phi %struct.AF_SegmentRec_* [ %232, %231 ], [ %51, %149 ]
  %154 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %153, i64 0, i32 9
  %155 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %154, align 8
  %156 = icmp eq %struct.AF_SegmentRec_* %155, null
  br i1 %156, label %231, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %155, i64 0, i32 9
  %159 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %158, align 8
  %160 = icmp eq %struct.AF_SegmentRec_* %159, %153
  br i1 %160, label %161, label %231

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %155, i64 0, i32 2
  %163 = load i16, i16* %162, align 2
  %164 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %153, i64 0, i32 2
  %165 = load i16, i16* %164, align 2
  %166 = icmp sgt i16 %163, %165
  br i1 %166, label %167, label %231

167:                                              ; preds = %161
  %168 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %153, i64 0, i32 11
  %169 = load i64, i64* %168, align 8
  %170 = icmp slt i64 %169, %70
  br i1 %170, label %171, label %231

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %153, i64 0, i32 12
  br label %173

173:                                              ; preds = %229, %171
  %174 = phi i16 [ %165, %171 ], [ %230, %229 ]
  %175 = phi %struct.AF_SegmentRec_* [ %51, %171 ], [ %227, %229 ]
  %176 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %175, i64 0, i32 2
  %177 = load i16, i16* %176, align 2
  %178 = icmp sgt i16 %177, %174
  %179 = icmp eq %struct.AF_SegmentRec_* %153, %175
  %180 = or i1 %179, %178
  br i1 %180, label %226, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %175, i64 0, i32 9
  %183 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %182, align 8
  %184 = icmp eq %struct.AF_SegmentRec_* %183, null
  br i1 %184, label %226, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %183, i64 0, i32 9
  %187 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %186, align 8
  %188 = icmp eq %struct.AF_SegmentRec_* %187, %175
  br i1 %188, label %189, label %226

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %183, i64 0, i32 2
  %191 = load i16, i16* %190, align 2
  %192 = load i16, i16* %162, align 2
  %193 = icmp slt i16 %191, %192
  br i1 %193, label %226, label %194

194:                                              ; preds = %189
  %195 = icmp eq i16 %174, %177
  %196 = icmp eq i16 %192, %191
  %197 = and i1 %195, %196
  br i1 %197, label %226, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %175, i64 0, i32 11
  %200 = load i64, i64* %199, align 8
  %201 = load i64, i64* %168, align 8
  %202 = icmp sgt i64 %200, %201
  %203 = shl nsw i64 %201, 2
  %204 = icmp sgt i64 %203, %200
  %205 = and i1 %202, %204
  br i1 %205, label %206, label %226

206:                                              ; preds = %198
  %207 = load i64, i64* %172, align 8
  %208 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %175, i64 0, i32 12
  %209 = load i64, i64* %208, align 8
  %210 = mul nsw i64 %209, 3
  %211 = icmp slt i64 %207, %210
  br i1 %211, label %225, label %212

212:                                              ; preds = %206, %222
  %213 = phi %struct.AF_SegmentRec_* [ %223, %222 ], [ %51, %206 ]
  %214 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %213, i64 0, i32 9
  %215 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %214, align 8
  %216 = icmp eq %struct.AF_SegmentRec_* %215, %175
  br i1 %216, label %219, label %217

217:                                              ; preds = %212
  %218 = icmp eq %struct.AF_SegmentRec_* %215, %183
  br i1 %218, label %219, label %222

219:                                              ; preds = %217, %212
  %220 = phi %struct.AF_SegmentRec_* [ %155, %212 ], [ %153, %217 ]
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %214, align 8
  %221 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %213, i64 0, i32 10
  store %struct.AF_SegmentRec_* %220, %struct.AF_SegmentRec_** %221, align 8
  br label %222

222:                                              ; preds = %219, %217
  %223 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %213, i64 1
  %224 = icmp ult %struct.AF_SegmentRec_* %223, %55
  br i1 %224, label %212, label %226

225:                                              ; preds = %206
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %158, align 8
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %154, align 8
  br label %231

226:                                              ; preds = %222, %198, %194, %189, %185, %181, %173
  %227 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %175, i64 1
  %228 = icmp ult %struct.AF_SegmentRec_* %227, %55
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load i16, i16* %164, align 2
  br label %173

231:                                              ; preds = %226, %225, %167, %161, %157, %152
  %232 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %153, i64 1
  %233 = icmp ult %struct.AF_SegmentRec_* %232, %55
  br i1 %233, label %152, label %234

234:                                              ; preds = %231, %257
  %235 = phi %struct.AF_SegmentRec_* [ %258, %257 ], [ %51, %231 ]
  %236 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %235, i64 0, i32 9
  %237 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %236, align 8
  %238 = icmp eq %struct.AF_SegmentRec_* %237, null
  br i1 %238, label %257, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %237, i64 0, i32 9
  %241 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %240, align 8
  %242 = icmp eq %struct.AF_SegmentRec_* %241, %235
  br i1 %242, label %257, label %243

243:                                              ; preds = %239
  store %struct.AF_SegmentRec_* null, %struct.AF_SegmentRec_** %236, align 8
  %244 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %237, i64 0, i32 11
  %245 = load i64, i64* %244, align 8
  %246 = icmp slt i64 %245, %70
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %235, i64 0, i32 11
  %249 = load i64, i64* %248, align 8
  %250 = shl nsw i64 %245, 2
  %251 = icmp slt i64 %249, %250
  br i1 %251, label %252, label %257

252:                                              ; preds = %247, %243
  %253 = bitcast %struct.AF_SegmentRec_** %240 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %235, i64 0, i32 10
  %256 = bitcast %struct.AF_SegmentRec_** %255 to i64*
  store i64 %254, i64* %256, align 8
  br label %257

257:                                              ; preds = %252, %247, %239, %234
  %258 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %235, i64 1
  %259 = icmp ult %struct.AF_SegmentRec_* %258, %55
  br i1 %259, label %234, label %260

260:                                              ; preds = %257, %50
  %261 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4
  %262 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 0
  %263 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %262, align 8
  %264 = bitcast %struct.AF_StyleMetricsRec_** %58 to %struct.AF_CJKMetricsRec_**
  %265 = load %struct.AF_CJKMetricsRec_*, %struct.AF_CJKMetricsRec_** %264, align 8
  %266 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %5, align 8
  %267 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %261, i64 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %266, i64 %269
  %271 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 3
  store i32 0, i32* %271, align 8
  %272 = load i64, i64* %68, align 8
  %273 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %265, i64 0, i32 2, i64 %4, i32 4
  %274 = load i64, i64* %273, align 8
  %275 = shl i64 %274, 32
  %276 = ashr exact i64 %275, 32
  %277 = shl i64 %272, 32
  %278 = ashr exact i64 %277, 32
  %279 = mul nsw i64 %276, %278
  %280 = ashr i64 %279, 63
  %281 = add nsw i64 %279, 32768
  %282 = add nsw i64 %281, %280
  %283 = lshr i64 %282, 16
  %284 = trunc i64 %283 to i32
  %285 = icmp sgt i32 %284, 16
  br i1 %285, label %286, label %288

286:                                              ; preds = %260
  %287 = tail call i64 @FT_DivFix(i64 16, i64 %272) #10
  br label %288

288:                                              ; preds = %286, %260
  %289 = phi i64 [ %287, %286 ], [ %274, %260 ]
  %290 = icmp sgt i32 %268, 0
  br i1 %290, label %291, label %413

291:                                              ; preds = %288
  %292 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 5
  %293 = bitcast %struct.AF_EdgeRec_** %3 to i8*
  %294 = bitcast %struct.AF_EdgeRec_** %3 to i8**
  br label %295

295:                                              ; preds = %410, %291
  %296 = phi %struct.AF_SegmentRec_* [ %266, %291 ], [ %411, %410 ]
  %297 = load i32, i32* %271, align 8
  %298 = icmp sgt i32 %297, 0
  br i1 %298, label %299, label %368

299:                                              ; preds = %295
  %300 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %292, align 8
  %301 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 1
  %302 = load i8, i8* %301, align 1
  %303 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 2
  %304 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 9
  %305 = sext i32 %297 to i64
  br label %306

306:                                              ; preds = %361, %299
  %307 = phi i64 [ 0, %299 ], [ %364, %361 ]
  %308 = phi i64 [ 65535, %299 ], [ %363, %361 ]
  %309 = phi %struct.AF_EdgeRec_* [ null, %299 ], [ %362, %361 ]
  %310 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %300, i64 %307
  %311 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %300, i64 %307, i32 4
  %312 = load i8, i8* %311, align 1
  %313 = icmp eq i8 %312, %302
  br i1 %313, label %314, label %361

314:                                              ; preds = %306
  %315 = load i16, i16* %303, align 2
  %316 = sext i16 %315 to i64
  %317 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %310, i64 0, i32 0
  %318 = load i16, i16* %317, align 8
  %319 = sext i16 %318 to i64
  %320 = sub nsw i64 %316, %319
  %321 = icmp slt i64 %320, 0
  %322 = sub nsw i64 0, %320
  %323 = select i1 %321, i64 %322, i64 %320
  %324 = icmp slt i64 %323, %289
  %325 = icmp slt i64 %323, %308
  %326 = and i1 %324, %325
  br i1 %326, label %327, label %361

327:                                              ; preds = %314
  %328 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %304, align 8
  %329 = icmp eq %struct.AF_SegmentRec_* %328, null
  br i1 %329, label %360, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %300, i64 %307, i32 10
  %332 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %331, align 8
  %333 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %328, i64 0, i32 2
  br label %334

334:                                              ; preds = %352, %330
  %335 = phi %struct.AF_SegmentRec_* [ %332, %330 ], [ %355, %352 ]
  %336 = phi i64 [ 0, %330 ], [ %353, %352 ]
  %337 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %335, i64 0, i32 9
  %338 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %337, align 8
  %339 = icmp eq %struct.AF_SegmentRec_* %338, null
  br i1 %339, label %352, label %340

340:                                              ; preds = %334
  %341 = load i16, i16* %333, align 2
  %342 = sext i16 %341 to i32
  %343 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %338, i64 0, i32 2
  %344 = load i16, i16* %343, align 2
  %345 = sext i16 %344 to i32
  %346 = icmp sgt i16 %341, %344
  %347 = sub nsw i32 %342, %345
  %348 = sub nsw i32 %345, %342
  %349 = select i1 %346, i32 %347, i32 %348
  %350 = sext i32 %349 to i64
  %351 = icmp sgt i64 %289, %350
  br i1 %351, label %352, label %357

352:                                              ; preds = %340, %334
  %353 = phi i64 [ %350, %340 ], [ %336, %334 ]
  %354 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %335, i64 0, i32 8
  %355 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %354, align 8
  %356 = icmp eq %struct.AF_SegmentRec_* %355, %332
  br i1 %356, label %357, label %334

357:                                              ; preds = %352, %340
  %358 = phi i64 [ %353, %352 ], [ %350, %340 ]
  %359 = icmp slt i64 %358, %289
  br i1 %359, label %360, label %361

360:                                              ; preds = %357, %327
  br label %361

361:                                              ; preds = %360, %357, %314, %306
  %362 = phi %struct.AF_EdgeRec_* [ %309, %306 ], [ %309, %314 ], [ %310, %360 ], [ %309, %357 ]
  %363 = phi i64 [ %308, %306 ], [ %308, %314 ], [ %323, %360 ], [ %308, %357 ]
  %364 = add nuw nsw i64 %307, 1
  %365 = icmp eq i64 %364, %305
  br i1 %365, label %366, label %306

366:                                              ; preds = %361
  %367 = icmp eq %struct.AF_EdgeRec_* %362, null
  br i1 %367, label %368, label %400

368:                                              ; preds = %366, %295
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #10
  store %struct.AF_EdgeRec_* inttoptr (i64 -6148914691236517206 to %struct.AF_EdgeRec_*), %struct.AF_EdgeRec_** %3, align 8
  %369 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 2
  %370 = load i16, i16* %369, align 2
  %371 = sext i16 %370 to i32
  %372 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 1
  %373 = load i8, i8* %372, align 1
  %374 = sext i8 %373 to i32
  %375 = call fastcc i32 @af_axis_hints_new_edge(%struct.AF_AxisHintsRec_* %261, i32 %371, i32 %374, i8 zeroext 0, %struct.FT_MemoryRec_* %263, %struct.AF_EdgeRec_** nonnull %3) #10
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %409

377:                                              ; preds = %368
  %378 = load i8*, i8** %294, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %378, i8 0, i64 72, i1 false) #10
  %379 = getelementptr inbounds i8, i8* %378, i64 72
  %380 = bitcast i8* %379 to %struct.AF_SegmentRec_**
  store %struct.AF_SegmentRec_* %296, %struct.AF_SegmentRec_** %380, align 8
  %381 = getelementptr inbounds i8, i8* %378, i64 80
  %382 = bitcast i8* %381 to %struct.AF_SegmentRec_**
  store %struct.AF_SegmentRec_* %296, %struct.AF_SegmentRec_** %382, align 8
  %383 = load i8, i8* %372, align 1
  %384 = getelementptr inbounds i8, i8* %378, i64 25
  store i8 %383, i8* %384, align 1
  %385 = load i16, i16* %369, align 2
  %386 = bitcast i8* %378 to i16*
  store i16 %385, i16* %386, align 8
  %387 = load i16, i16* %369, align 2
  %388 = sext i16 %387 to i64
  %389 = mul nsw i64 %278, %388
  %390 = ashr i64 %389, 63
  %391 = add nsw i64 %389, 32768
  %392 = add nsw i64 %391, %390
  %393 = shl i64 %392, 16
  %394 = ashr i64 %393, 32
  %395 = getelementptr inbounds i8, i8* %378, i64 8
  %396 = bitcast i8* %395 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds i8, i8* %378, i64 16
  %398 = bitcast i8* %397 to i64*
  store i64 %394, i64* %398, align 8
  %399 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 8
  store %struct.AF_SegmentRec_* %296, %struct.AF_SegmentRec_** %399, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #10
  br label %410

400:                                              ; preds = %366
  %401 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %362, i64 0, i32 10
  %402 = bitcast %struct.AF_SegmentRec_** %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 0, i32 8
  %405 = bitcast %struct.AF_SegmentRec_** %404 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %362, i64 0, i32 11
  %407 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %406, align 8
  %408 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %407, i64 0, i32 8
  store %struct.AF_SegmentRec_* %296, %struct.AF_SegmentRec_** %408, align 8
  store %struct.AF_SegmentRec_* %296, %struct.AF_SegmentRec_** %406, align 8
  br label %410

409:                                              ; preds = %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #10
  br label %533

410:                                              ; preds = %400, %377
  %411 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %296, i64 1
  %412 = icmp ult %struct.AF_SegmentRec_* %411, %270
  br i1 %412, label %295, label %413

413:                                              ; preds = %410, %288
  %414 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 5
  %415 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %414, align 8
  %416 = load i32, i32* %271, align 8
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %415, i64 %417
  %419 = icmp sgt i32 %416, 0
  br i1 %419, label %420, label %533

420:                                              ; preds = %413, %432
  %421 = phi %struct.AF_EdgeRec_* [ %433, %432 ], [ %415, %413 ]
  %422 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %421, i64 0, i32 10
  %423 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %422, align 8
  %424 = icmp eq %struct.AF_SegmentRec_* %423, null
  br i1 %424, label %432, label %425

425:                                              ; preds = %420, %425
  %426 = phi %struct.AF_SegmentRec_* [ %429, %425 ], [ %423, %420 ]
  %427 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %426, i64 0, i32 7
  store %struct.AF_EdgeRec_* %421, %struct.AF_EdgeRec_** %427, align 8
  %428 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %426, i64 0, i32 8
  %429 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %428, align 8
  %430 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %422, align 8
  %431 = icmp eq %struct.AF_SegmentRec_* %429, %430
  br i1 %431, label %432, label %425

432:                                              ; preds = %425, %420
  %433 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %421, i64 1
  %434 = icmp ult %struct.AF_EdgeRec_* %433, %418
  br i1 %434, label %420, label %435

435:                                              ; preds = %432, %530
  %436 = phi %struct.AF_EdgeRec_* [ %531, %530 ], [ %415, %432 ]
  %437 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 10
  %438 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %437, align 8
  %439 = icmp eq %struct.AF_SegmentRec_* %438, null
  br i1 %439, label %514, label %440

440:                                              ; preds = %435
  %441 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 7
  %442 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 8
  %443 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 0
  br label %444

444:                                              ; preds = %509, %440
  %445 = phi %struct.AF_SegmentRec_* [ %510, %509 ], [ %438, %440 ]
  %446 = phi %struct.AF_SegmentRec_* [ %512, %509 ], [ %438, %440 ]
  %447 = phi i32 [ %453, %509 ], [ 0, %440 ]
  %448 = phi i32 [ %456, %509 ], [ 0, %440 ]
  %449 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %446, i64 0, i32 0
  %450 = load i8, i8* %449, align 8
  %451 = and i8 %450, 1
  %452 = zext i8 %451 to i32
  %453 = add nuw nsw i32 %447, %452
  %454 = xor i8 %451, 1
  %455 = zext i8 %454 to i32
  %456 = add nuw nsw i32 %448, %455
  %457 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %446, i64 0, i32 10
  %458 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %457, align 8
  %459 = icmp eq %struct.AF_SegmentRec_* %458, null
  br i1 %459, label %464, label %460

460:                                              ; preds = %444
  %461 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %458, i64 0, i32 7
  %462 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %461, align 8
  %463 = icmp ne %struct.AF_EdgeRec_* %462, %436
  br label %464

464:                                              ; preds = %460, %444
  %465 = phi i1 [ false, %444 ], [ %463, %460 ]
  %466 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %446, i64 0, i32 9
  %467 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %466, align 8
  %468 = icmp ne %struct.AF_SegmentRec_* %467, null
  %469 = or i1 %465, %468
  br i1 %469, label %470, label %509

470:                                              ; preds = %464
  %471 = select i1 %465, %struct.AF_EdgeRec_** %442, %struct.AF_EdgeRec_** %441
  %472 = select i1 %465, %struct.AF_SegmentRec_** %457, %struct.AF_SegmentRec_** %466
  %473 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %472, align 8
  %474 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %471, align 8
  %475 = icmp eq %struct.AF_EdgeRec_* %474, null
  br i1 %475, label %498, label %476

476:                                              ; preds = %470
  %477 = load i16, i16* %443, align 8
  %478 = sext i16 %477 to i64
  %479 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %474, i64 0, i32 0
  %480 = load i16, i16* %479, align 8
  %481 = sext i16 %480 to i64
  %482 = sub nsw i64 %478, %481
  %483 = icmp slt i64 %482, 0
  %484 = sub nsw i64 0, %482
  %485 = select i1 %483, i64 %484, i64 %482
  %486 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %446, i64 0, i32 2
  %487 = load i16, i16* %486, align 2
  %488 = sext i16 %487 to i32
  %489 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %473, i64 0, i32 2
  %490 = load i16, i16* %489, align 2
  %491 = sext i16 %490 to i32
  %492 = icmp sgt i16 %487, %490
  %493 = sub nsw i32 %488, %491
  %494 = sub nsw i32 %491, %488
  %495 = select i1 %492, i32 %493, i32 %494
  %496 = sext i32 %495 to i64
  %497 = icmp sgt i64 %485, %496
  br i1 %497, label %498, label %501

498:                                              ; preds = %470, %476
  %499 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %473, i64 0, i32 7
  %500 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %499, align 8
  br label %501

501:                                              ; preds = %498, %476
  %502 = phi %struct.AF_EdgeRec_* [ %474, %476 ], [ %500, %498 ]
  br i1 %465, label %503, label %508

503:                                              ; preds = %501
  store %struct.AF_EdgeRec_* %502, %struct.AF_EdgeRec_** %442, align 8
  %504 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %502, i64 0, i32 3
  %505 = load i8, i8* %504, align 8
  %506 = or i8 %505, 2
  store i8 %506, i8* %504, align 8
  %507 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %437, align 8
  br label %509

508:                                              ; preds = %501
  store %struct.AF_EdgeRec_* %502, %struct.AF_EdgeRec_** %441, align 8
  br label %509

509:                                              ; preds = %508, %503, %464
  %510 = phi %struct.AF_SegmentRec_* [ %507, %503 ], [ %445, %508 ], [ %445, %464 ]
  %511 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %446, i64 0, i32 8
  %512 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %511, align 8
  %513 = icmp eq %struct.AF_SegmentRec_* %512, %510
  br i1 %513, label %514, label %444

514:                                              ; preds = %509, %435
  %515 = phi i32 [ 0, %435 ], [ %453, %509 ]
  %516 = phi i32 [ 0, %435 ], [ %456, %509 ]
  %517 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 3
  %518 = icmp sgt i32 %515, 0
  %519 = icmp sge i32 %515, %516
  %520 = and i1 %518, %519
  %521 = zext i1 %520 to i8
  store i8 %521, i8* %517, align 8
  %522 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 8
  %523 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %522, align 8
  %524 = icmp eq %struct.AF_EdgeRec_* %523, null
  br i1 %524, label %530, label %525

525:                                              ; preds = %514
  %526 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 0, i32 7
  %527 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %526, align 8
  %528 = icmp eq %struct.AF_EdgeRec_* %527, null
  br i1 %528, label %530, label %529

529:                                              ; preds = %525
  store %struct.AF_EdgeRec_* null, %struct.AF_EdgeRec_** %522, align 8
  br label %530

530:                                              ; preds = %529, %525, %514
  %531 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %436, i64 1
  %532 = icmp ult %struct.AF_EdgeRec_* %531, %418
  br i1 %532, label %435, label %533

533:                                              ; preds = %530, %413, %409, %13
  %534 = phi i32 [ %15, %13 ], [ %375, %409 ], [ 0, %413 ], [ 0, %530 ]
  ret i32 %534
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @af_cjk_hints_compute_blue_edges(%struct.AF_GlyphHintsRec_* nocapture readonly, %struct.AF_CJKMetricsRec_*, i32) unnamed_addr #1 {
  %4 = zext i32 %2 to i64
  %5 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 5
  %6 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %5, align 8
  %7 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %6, i64 %9
  %11 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 %4, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = udiv i32 %14, 40
  %16 = zext i32 %15 to i64
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = mul nsw i64 %18, %16
  %20 = ashr i64 %19, 63
  %21 = add nsw i64 %19, 32768
  %22 = add nsw i64 %21, %20
  %23 = shl i64 %22, 16
  %24 = ashr i64 %23, 32
  %25 = icmp slt i64 %24, 32
  %26 = select i1 %25, i64 %24, i64 32
  %27 = icmp sgt i32 %8, 0
  br i1 %27, label %28, label %104

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 %4, i32 8
  %30 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %4, i32 6
  br label %31

31:                                               ; preds = %28, %101
  %32 = phi %struct.AF_EdgeRec_* [ %6, %28 ], [ %102, %101 ]
  %33 = load i32, i32* %29, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %101, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %32, i64 0, i32 4
  %37 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %32, i64 0, i32 0
  %38 = zext i32 %33 to i64
  br label %39

39:                                               ; preds = %35, %92
  %40 = phi i64 [ 0, %35 ], [ %95, %92 ]
  %41 = phi i64 [ %26, %35 ], [ %94, %92 ]
  %42 = phi %struct.AF_WidthRec_* [ null, %35 ], [ %93, %92 ]
  %43 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 %4, i32 9, i64 %40
  %44 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 %4, i32 9, i64 %40, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %92, label %48

48:                                               ; preds = %39
  %49 = load i8, i8* %36, align 1
  %50 = sext i8 %49 to i32
  %51 = load i32, i32* %30, align 8
  %52 = icmp eq i32 %51, %50
  %53 = and i32 %45, 2
  %54 = icmp ne i32 %53, 0
  %55 = xor i1 %54, %52
  br i1 %55, label %56, label %92

56:                                               ; preds = %48
  %57 = load i16, i16* %37, align 8
  %58 = sext i16 %57 to i64
  %59 = getelementptr inbounds %struct.AF_CJKBlueRec_, %struct.AF_CJKBlueRec_* %43, i64 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = sub nsw i64 %58, %60
  %62 = icmp slt i64 %61, 0
  %63 = sub nsw i64 0, %61
  %64 = select i1 %62, i64 %63, i64 %61
  %65 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %1, i64 0, i32 2, i64 %4, i32 9, i64 %40, i32 1
  %66 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %65, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = sub nsw i64 %58, %67
  %69 = icmp slt i64 %68, 0
  %70 = sub nsw i64 0, %68
  %71 = select i1 %69, i64 %70, i64 %68
  %72 = icmp sgt i64 %64, %71
  %73 = getelementptr inbounds %struct.AF_CJKBlueRec_, %struct.AF_CJKBlueRec_* %43, i64 0, i32 0
  %74 = select i1 %72, %struct.AF_WidthRec_* %65, %struct.AF_WidthRec_* %73
  %75 = getelementptr inbounds %struct.AF_WidthRec_, %struct.AF_WidthRec_* %74, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = sub nsw i64 %58, %76
  %78 = icmp slt i64 %77, 0
  %79 = sub nsw i64 0, %77
  %80 = select i1 %78, i64 %79, i64 %77
  %81 = shl i64 %80, 32
  %82 = ashr exact i64 %81, 32
  %83 = mul nsw i64 %82, %18
  %84 = ashr i64 %83, 63
  %85 = add nsw i64 %83, 32768
  %86 = add nsw i64 %85, %84
  %87 = shl i64 %86, 16
  %88 = ashr i64 %87, 32
  %89 = icmp sgt i64 %41, %88
  %90 = select i1 %89, %struct.AF_WidthRec_* %74, %struct.AF_WidthRec_* %42
  %91 = select i1 %89, i64 %88, i64 %41
  br label %92

92:                                               ; preds = %48, %56, %39
  %93 = phi %struct.AF_WidthRec_* [ %42, %39 ], [ %42, %48 ], [ %90, %56 ]
  %94 = phi i64 [ %41, %39 ], [ %41, %48 ], [ %91, %56 ]
  %95 = add nuw nsw i64 %40, 1
  %96 = icmp ult i64 %95, %38
  br i1 %96, label %39, label %97

97:                                               ; preds = %92
  %98 = icmp eq %struct.AF_WidthRec_* %93, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %32, i64 0, i32 6
  store %struct.AF_WidthRec_* %93, %struct.AF_WidthRec_** %100, align 8
  br label %101

101:                                              ; preds = %31, %97, %99
  %102 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %32, i64 1
  %103 = icmp ult %struct.AF_EdgeRec_* %102, %10
  br i1 %103, label %31, label %104

104:                                              ; preds = %101, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_glyph_hints_align_strong_points(%struct.AF_GlyphHintsRec_* nocapture readonly, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %4 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %3, align 8
  %5 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %4, i64 %7
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 5
  %11 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %10, align 8
  %12 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = icmp eq i32 %1, 0
  %16 = select i1 %15, i32 4, i32 8
  %17 = icmp sgt i32 %13, 0
  %18 = icmp sgt i32 %6, 0
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %153

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %14
  %22 = or i32 %16, 16
  %23 = icmp eq i32 %1, 1
  %24 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 0, i32 0
  %25 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 0, i32 2
  %26 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 0, i32 1
  %27 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %21, i64 -1
  %28 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %27, i64 0, i32 0
  %29 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %27, i64 0, i32 2
  %30 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %27, i64 0, i32 1
  %31 = icmp slt i32 %13, 9
  %32 = trunc i32 %16 to i16
  %33 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %14, i32 0
  br label %34

34:                                               ; preds = %20, %150
  %35 = phi %struct.AF_PointRec_* [ %4, %20 ], [ %151, %150 ]
  %36 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 0
  %37 = load i16, i16* %36, align 8
  %38 = zext i16 %37 to i32
  %39 = and i32 %22, %38
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %150

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 6
  %43 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 4
  %44 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 5
  %45 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 3
  %46 = select i1 %23, i16* %42, i16* %44
  %47 = select i1 %23, i64* %43, i64* %45
  %48 = load i16, i16* %46, align 2
  %49 = load i64, i64* %47, align 8
  %50 = sext i16 %48 to i64
  %51 = load i16, i16* %24, align 8
  %52 = icmp slt i16 %51, %48
  br i1 %52, label %58, label %53

53:                                               ; preds = %41
  %54 = load i64, i64* %25, align 8
  %55 = load i64, i64* %26, align 8
  %56 = add i64 %54, %49
  %57 = sub i64 %56, %55
  br label %143

58:                                               ; preds = %41
  %59 = load i16, i16* %28, align 8
  %60 = icmp slt i16 %48, %59
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %29, align 8
  %63 = load i64, i64* %30, align 8
  %64 = add i64 %62, %49
  %65 = sub i64 %64, %63
  br label %143

66:                                               ; preds = %58
  br i1 %31, label %67, label %86

67:                                               ; preds = %66
  %68 = icmp slt i16 %51, %48
  br i1 %68, label %69, label %79

69:                                               ; preds = %67, %75
  %70 = phi i64 [ %71, %75 ], [ 0, %67 ]
  %71 = add nuw nsw i64 %70, 1
  %72 = icmp eq i64 %71, %14
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load i16, i16* %33, align 8
  br label %79

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %71, i32 0
  %77 = load i16, i16* %76, align 8
  %78 = icmp slt i16 %77, %48
  br i1 %78, label %69, label %79

79:                                               ; preds = %75, %67, %73
  %80 = phi i16 [ %74, %73 ], [ %51, %67 ], [ %77, %75 ]
  %81 = phi i64 [ %14, %73 ], [ 0, %67 ], [ %71, %75 ]
  %82 = icmp eq i16 %80, %48
  br i1 %82, label %83, label %105

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %81, i32 2
  %85 = load i64, i64* %84, align 8
  br label %143

86:                                               ; preds = %66, %101
  %87 = phi i64 [ %103, %101 ], [ %14, %66 ]
  %88 = phi i64 [ %102, %101 ], [ 0, %66 ]
  %89 = add nsw i64 %87, %88
  %90 = ashr i64 %89, 1
  %91 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %90, i32 0
  %92 = load i16, i16* %91, align 8
  %93 = icmp slt i16 %48, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %86
  %95 = icmp sgt i16 %48, %92
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = add nsw i64 %90, 1
  br label %101

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %90, i32 2
  %100 = load i64, i64* %99, align 8
  br label %143

101:                                              ; preds = %86, %96
  %102 = phi i64 [ %97, %96 ], [ %88, %86 ]
  %103 = phi i64 [ %87, %96 ], [ %90, %86 ]
  %104 = icmp slt i64 %102, %103
  br i1 %104, label %86, label %105

105:                                              ; preds = %101, %79
  %106 = phi i64 [ %81, %79 ], [ %102, %101 ]
  %107 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %106
  %108 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %107, i64 -1
  %109 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %108, i64 0, i32 5
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %126

112:                                              ; preds = %105
  %113 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %11, i64 %106, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %108, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = sub nsw i64 %114, %116
  %118 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %107, i64 0, i32 0
  %119 = load i16, i16* %118, align 8
  %120 = sext i16 %119 to i64
  %121 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %108, i64 0, i32 0
  %122 = load i16, i16* %121, align 8
  %123 = sext i16 %122 to i64
  %124 = sub nsw i64 %120, %123
  %125 = tail call i64 @FT_DivFix(i64 %117, i64 %124) #10
  store i64 %125, i64* %109, align 8
  br label %126

126:                                              ; preds = %112, %105
  %127 = phi i64 [ %125, %112 ], [ %110, %105 ]
  %128 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %108, i64 0, i32 2
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %108, i64 0, i32 0
  %131 = load i16, i16* %130, align 8
  %132 = sext i16 %131 to i64
  %133 = sub nsw i64 %50, %132
  %134 = shl i64 %127, 32
  %135 = ashr exact i64 %134, 32
  %136 = mul nsw i64 %135, %133
  %137 = ashr i64 %136, 63
  %138 = add nsw i64 %136, 32768
  %139 = add nsw i64 %138, %137
  %140 = shl i64 %139, 16
  %141 = ashr i64 %140, 32
  %142 = add nsw i64 %141, %129
  br label %143

143:                                              ; preds = %126, %98, %83, %61, %53
  %144 = phi i64 [ %57, %53 ], [ %65, %61 ], [ %142, %126 ], [ %85, %83 ], [ %100, %98 ]
  %145 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 8
  %146 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 0, i32 7
  %147 = select i1 %15, i64* %146, i64* %145
  store i64 %144, i64* %147, align 8
  %148 = load i16, i16* %36, align 8
  %149 = or i16 %148, %32
  store i16 %149, i16* %36, align 8
  br label %150

150:                                              ; preds = %34, %143
  %151 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %35, i64 1
  %152 = icmp ult %struct.AF_PointRec_* %151, %8
  br i1 %152, label %34, label %153

153:                                              ; preds = %150, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_glyph_hints_align_weak_points(%struct.AF_GlyphHintsRec_* nocapture readonly, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 7
  %4 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %3, align 8
  %5 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %4, i64 %7
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 10
  %10 = load %struct.AF_PointRec_**, %struct.AF_PointRec_*** %9, align 8
  %11 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %10, i64 %13
  %15 = icmp eq i32 %1, 0
  %16 = icmp sgt i32 %6, 0
  br i1 %15, label %18, label %17

17:                                               ; preds = %2
  br i1 %16, label %29, label %39

18:                                               ; preds = %2
  br i1 %16, label %19, label %39

19:                                               ; preds = %18, %19
  %20 = phi %struct.AF_PointRec_* [ %27, %19 ], [ %4, %18 ]
  %21 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %20, i64 0, i32 7
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %20, i64 0, i32 9
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %20, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %20, i64 0, i32 10
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %20, i64 1
  %28 = icmp ult %struct.AF_PointRec_* %27, %8
  br i1 %28, label %19, label %39

29:                                               ; preds = %17, %29
  %30 = phi %struct.AF_PointRec_* [ %37, %29 ], [ %4, %17 ]
  %31 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %30, i64 0, i32 8
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %30, i64 0, i32 9
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %30, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %30, i64 0, i32 10
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %30, i64 1
  %38 = icmp ult %struct.AF_PointRec_* %37, %8
  br i1 %38, label %29, label %39

39:                                               ; preds = %29, %19, %17, %18
  %40 = phi i32 [ 4, %18 ], [ 8, %17 ], [ 4, %19 ], [ 8, %29 ]
  %41 = icmp sgt i32 %12, 0
  br i1 %41, label %42, label %127

42:                                               ; preds = %39, %124
  %43 = phi %struct.AF_PointRec_** [ %125, %124 ], [ %10, %39 ]
  %44 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %43, align 8
  %45 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %44, i64 0, i32 12
  %46 = load %struct.AF_PointRec_*, %struct.AF_PointRec_** %45, align 8
  %47 = icmp ugt %struct.AF_PointRec_* %44, %46
  br i1 %47, label %124, label %48

48:                                               ; preds = %42, %55
  %49 = phi %struct.AF_PointRec_* [ %56, %55 ], [ %44, %42 ]
  %50 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 0, i32 0
  %51 = load i16, i16* %50, align 8
  %52 = zext i16 %51 to i32
  %53 = and i32 %40, %52
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 1
  %57 = icmp ugt %struct.AF_PointRec_* %56, %46
  br i1 %57, label %124, label %48

58:                                               ; preds = %48, %84
  %59 = phi %struct.AF_PointRec_* [ %76, %84 ], [ %49, %48 ]
  %60 = icmp ult %struct.AF_PointRec_* %59, %46
  br i1 %60, label %61, label %71

61:                                               ; preds = %58, %68
  %62 = phi %struct.AF_PointRec_* [ %69, %68 ], [ %59, %58 ]
  %63 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %62, i64 1, i32 0
  %64 = load i16, i16* %63, align 8
  %65 = zext i16 %64 to i32
  %66 = and i32 %40, %65
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %62, i64 1
  %70 = icmp ult %struct.AF_PointRec_* %69, %46
  br i1 %70, label %61, label %71

71:                                               ; preds = %68, %61, %58
  %72 = phi %struct.AF_PointRec_* [ %59, %58 ], [ %62, %61 ], [ %69, %68 ]
  %73 = phi i1 [ false, %58 ], [ true, %61 ], [ false, %68 ]
  br label %74

74:                                               ; preds = %78, %71
  %75 = phi %struct.AF_PointRec_* [ %72, %71 ], [ %76, %78 ]
  %76 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %75, i64 1
  %77 = icmp ugt %struct.AF_PointRec_* %76, %46
  br i1 %77, label %86, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %76, i64 0, i32 0
  %80 = load i16, i16* %79, align 8
  %81 = zext i16 %80 to i32
  %82 = and i32 %40, %81
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %74, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %72, i64 1
  tail call fastcc void @af_iup_interp(%struct.AF_PointRec_* %85, %struct.AF_PointRec_* %75, %struct.AF_PointRec_* %72, %struct.AF_PointRec_* %76)
  br label %58

86:                                               ; preds = %74
  %87 = icmp eq %struct.AF_PointRec_* %72, %49
  br i1 %87, label %88, label %117

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 0, i32 9
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 0, i32 10
  %92 = load i64, i64* %91, align 8
  %93 = sub nsw i64 %90, %92
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %124, label %95

95:                                               ; preds = %88
  %96 = icmp ult %struct.AF_PointRec_* %44, %49
  br i1 %96, label %100, label %97

97:                                               ; preds = %100, %95
  %98 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 1
  %99 = icmp ugt %struct.AF_PointRec_* %98, %46
  br i1 %99, label %124, label %108

100:                                              ; preds = %95, %100
  %101 = phi %struct.AF_PointRec_* [ %106, %100 ], [ %44, %95 ]
  %102 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 0, i32 10
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i64 %103, %93
  %105 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 0, i32 9
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %101, i64 1
  %107 = icmp ult %struct.AF_PointRec_* %106, %49
  br i1 %107, label %100, label %97

108:                                              ; preds = %97, %108
  %109 = phi %struct.AF_PointRec_* [ %115, %108 ], [ %98, %97 ]
  %110 = phi %struct.AF_PointRec_* [ %109, %108 ], [ %49, %97 ]
  %111 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %110, i64 1, i32 10
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, %93
  %114 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %110, i64 1, i32 9
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %109, i64 1
  %116 = icmp ugt %struct.AF_PointRec_* %115, %46
  br i1 %116, label %124, label %108

117:                                              ; preds = %86
  br i1 %73, label %118, label %120

118:                                              ; preds = %117
  %119 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %72, i64 1
  tail call fastcc void @af_iup_interp(%struct.AF_PointRec_* %119, %struct.AF_PointRec_* %46, %struct.AF_PointRec_* %72, %struct.AF_PointRec_* %49)
  br label %120

120:                                              ; preds = %118, %117
  %121 = icmp ugt %struct.AF_PointRec_* %49, %4
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %49, i64 -1
  tail call fastcc void @af_iup_interp(%struct.AF_PointRec_* %44, %struct.AF_PointRec_* %123, %struct.AF_PointRec_* %72, %struct.AF_PointRec_* %49)
  br label %124

124:                                              ; preds = %55, %108, %42, %97, %88, %122, %120
  %125 = getelementptr inbounds %struct.AF_PointRec_*, %struct.AF_PointRec_** %43, i64 1
  %126 = icmp ult %struct.AF_PointRec_** %125, %14
  br i1 %126, label %42, label %127

127:                                              ; preds = %124, %39
  br i1 %15, label %129, label %128

128:                                              ; preds = %127
  br i1 %16, label %137, label %144

129:                                              ; preds = %127
  br i1 %16, label %130, label %144

130:                                              ; preds = %129, %130
  %131 = phi %struct.AF_PointRec_* [ %135, %130 ], [ %4, %129 ]
  %132 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %131, i64 0, i32 9
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %131, i64 0, i32 7
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %131, i64 1
  %136 = icmp ult %struct.AF_PointRec_* %135, %8
  br i1 %136, label %130, label %144

137:                                              ; preds = %128, %137
  %138 = phi %struct.AF_PointRec_* [ %142, %137 ], [ %4, %128 ]
  %139 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %138, i64 0, i32 9
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %138, i64 0, i32 8
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %138, i64 1
  %143 = icmp ult %struct.AF_PointRec_* %142, %8
  br i1 %143, label %137, label %144

144:                                              ; preds = %137, %130, %128, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_axis_hints_new_edge(%struct.AF_AxisHintsRec_*, i32, i32, i8 zeroext, %struct.FT_MemoryRec_*, %struct.AF_EdgeRec_** nocapture) unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 12
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 5
  %14 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %13, align 8
  %15 = icmp eq %struct.AF_EdgeRec_* %14, null
  br i1 %15, label %16, label %61

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 7, i32 1, i64 0
  store %struct.AF_EdgeRec_* %17, %struct.AF_EdgeRec_** %13, align 8
  %18 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 4
  store i32 12, i32* %18, align 4
  br label %61

19:                                               ; preds = %6
  %20 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %10, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 5
  %25 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %24, align 8
  %26 = sext i32 %10 to i64
  %27 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %25, i64 %26
  br label %68

28:                                               ; preds = %19
  %29 = icmp sgt i32 %21, 24403222
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  store i32 64, i32* %7, align 4
  br label %99

31:                                               ; preds = %28
  %32 = ashr i32 %21, 2
  %33 = add nsw i32 %32, 4
  %34 = add nsw i32 %33, %21
  %35 = icmp slt i32 %33, 0
  %36 = icmp sgt i32 %34, 24403223
  %37 = or i1 %35, %36
  %38 = select i1 %37, i32 24403223, i32 %34
  %39 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 5
  %40 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %39, align 8
  %41 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 7, i32 1, i64 0
  %42 = icmp eq %struct.AF_EdgeRec_* %40, %41
  br i1 %42, label %43, label %51

43:                                               ; preds = %31
  %44 = sext i32 %38 to i64
  %45 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %4, i64 88, i64 0, i64 %44, i8* null, i32* nonnull %7) #10
  %46 = bitcast %struct.AF_EdgeRec_** %39 to i8**
  store i8* %45, i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %99

49:                                               ; preds = %43
  %50 = bitcast %struct.AF_EdgeRec_* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %50, i64 1056, i1 false)
  br label %59

51:                                               ; preds = %31
  %52 = sext i32 %21 to i64
  %53 = sext i32 %38 to i64
  %54 = bitcast %struct.AF_EdgeRec_* %40 to i8*
  %55 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %4, i64 88, i64 %52, i64 %53, i8* %54, i32* nonnull %7) #10
  %56 = bitcast %struct.AF_EdgeRec_** %39 to i8**
  store i8* %55, i8** %56, align 8
  %57 = load i32, i32* %7, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %99

59:                                               ; preds = %49, %51
  store i32 %38, i32* %20, align 4
  %60 = load i32, i32* %9, align 8
  br label %61

61:                                               ; preds = %59, %12, %16
  %62 = phi i32 [ %60, %59 ], [ %10, %12 ], [ %10, %16 ]
  %63 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 5
  %64 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %63, align 8
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %64, i64 %65
  %67 = icmp sgt i32 %62, 0
  br i1 %67, label %68, label %95

68:                                               ; preds = %23, %61
  %69 = phi %struct.AF_EdgeRec_* [ %27, %23 ], [ %66, %61 ]
  %70 = phi %struct.AF_EdgeRec_* [ %25, %23 ], [ %64, %61 ]
  %71 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %0, i64 0, i32 6
  %72 = icmp eq i8 %3, 0
  br label %73

73:                                               ; preds = %68, %88
  %74 = phi %struct.AF_EdgeRec_* [ %69, %68 ], [ %75, %88 ]
  %75 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %74, i64 -1
  %76 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %75, i64 0, i32 0
  %77 = load i16, i16* %76, align 8
  %78 = sext i16 %77 to i32
  br i1 %72, label %81, label %79

79:                                               ; preds = %73
  %80 = icmp sgt i32 %78, %1
  br i1 %80, label %92, label %83

81:                                               ; preds = %73
  %82 = icmp slt i32 %78, %1
  br i1 %82, label %92, label %83

83:                                               ; preds = %81, %79
  %84 = icmp eq i32 %78, %1
  br i1 %84, label %85, label %88

85:                                               ; preds = %83
  %86 = load i32, i32* %71, align 8
  %87 = icmp eq i32 %86, %2
  br i1 %87, label %92, label %88

88:                                               ; preds = %85, %83
  %89 = bitcast %struct.AF_EdgeRec_* %74 to i8*
  %90 = bitcast %struct.AF_EdgeRec_* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 88, i1 false)
  %91 = icmp ugt %struct.AF_EdgeRec_* %75, %70
  br i1 %91, label %73, label %92

92:                                               ; preds = %85, %79, %81, %88
  %93 = phi %struct.AF_EdgeRec_* [ %75, %88 ], [ %74, %81 ], [ %74, %79 ], [ %74, %85 ]
  %94 = load i32, i32* %9, align 8
  br label %95

95:                                               ; preds = %92, %61
  %96 = phi i32 [ %62, %61 ], [ %94, %92 ]
  %97 = phi %struct.AF_EdgeRec_* [ %66, %61 ], [ %93, %92 ]
  %98 = add nsw i32 %96, 1
  store i32 %98, i32* %9, align 8
  br label %99

99:                                               ; preds = %51, %43, %30, %95
  %100 = phi i32 [ 0, %95 ], [ 64, %30 ], [ %47, %43 ], [ %57, %51 ]
  %101 = phi %struct.AF_EdgeRec_* [ %97, %95 ], [ null, %30 ], [ null, %43 ], [ null, %51 ]
  store %struct.AF_EdgeRec_* %101, %struct.AF_EdgeRec_** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret i32 %100
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i64 @af_hint_normal_stem(%struct.AF_GlyphHintsRec_* nocapture readonly, %struct.AF_EdgeRec_* nocapture, %struct.AF_EdgeRec_* nocapture, i64, i32) unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = icmp eq i32 %4, 1
  %22 = select i1 %21, i64 55, i64 49
  br label %26

23:                                               ; preds = %15, %10
  %24 = icmp eq i32 %4, 1
  %25 = select i1 %24, i64 61, i64 59
  br label %26

26:                                               ; preds = %23, %20, %5
  %27 = phi i64 [ 64, %5 ], [ %22, %20 ], [ %25, %23 ]
  %28 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %2, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %1, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = sub nsw i64 %29, %31
  %33 = tail call fastcc i64 @af_cjk_compute_stem_width(%struct.AF_GlyphHintsRec_* %0, i32 %4, i64 %32)
  %34 = add nsw i64 %31, %29
  %35 = sdiv i64 %34, 2
  %36 = add nsw i64 %35, %3
  %37 = sdiv i64 %33, -2
  %38 = add i64 %36, %37
  %39 = add nsw i64 %38, %33
  %40 = and i64 %38, 63
  %41 = and i64 %39, 63
  %42 = sub nuw nsw i64 64, %40
  %43 = sub nuw nsw i64 64, %41
  %44 = icmp eq i64 %40, 0
  %45 = icmp eq i64 %41, 0
  %46 = or i1 %44, %45
  br i1 %46, label %94, label %47

47:                                               ; preds = %26
  %48 = icmp sgt i64 %33, %27
  br i1 %48, label %55, label %49

49:                                               ; preds = %47
  %50 = icmp slt i64 %41, %33
  br i1 %50, label %51, label %94

51:                                               ; preds = %49
  %52 = icmp ugt i64 %42, %41
  %53 = sub nsw i64 0, %41
  %54 = select i1 %52, i64 %53, i64 %42
  br label %94

55:                                               ; preds = %47
  %56 = icmp ult i64 %27, 64
  br i1 %56, label %57, label %65

57:                                               ; preds = %55
  %58 = icmp ult i64 %40, %27
  %59 = icmp ugt i64 %27, %42
  %60 = and i1 %58, %59
  %61 = icmp ugt i64 %27, %41
  %62 = and i1 %61, %60
  %63 = icmp ult i64 %43, %27
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %94

65:                                               ; preds = %57, %55
  %66 = and i64 %33, 63
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = icmp ugt i64 %42, %66
  %70 = icmp ugt i64 %41, %66
  %71 = and i1 %69, %70
  br i1 %71, label %74, label %94

72:                                               ; preds = %65
  %73 = sub nuw nsw i64 64, %27
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi i64 [ %73, %72 ], [ %66, %68 ]
  %76 = sub nsw i64 %27, %42
  %77 = sub nsw i64 %42, %75
  %78 = sub nsw i64 %27, %41
  %79 = sub nsw i64 %41, %75
  %80 = icmp sgt i64 %76, %77
  %81 = sub nsw i64 0, %76
  %82 = select i1 %80, i64 %77, i64 %81
  %83 = icmp sgt i64 %79, %78
  %84 = sub nsw i64 0, %79
  %85 = select i1 %83, i64 %78, i64 %84
  %86 = icmp slt i64 %82, 0
  %87 = sub nsw i64 0, %82
  %88 = select i1 %86, i64 %87, i64 %82
  %89 = icmp slt i64 %85, 0
  %90 = sub nsw i64 0, %85
  %91 = select i1 %89, i64 %90, i64 %85
  %92 = icmp sgt i64 %88, %91
  %93 = select i1 %92, i64 %85, i64 %82
  br label %94

94:                                               ; preds = %51, %74, %57, %68, %49, %26
  %95 = phi i64 [ 0, %26 ], [ 0, %49 ], [ 0, %57 ], [ 0, %68 ], [ %93, %74 ], [ %54, %51 ]
  br i1 %9, label %96, label %101

96:                                               ; preds = %94
  %97 = icmp sgt i64 %95, 14
  br i1 %97, label %101, label %98

98:                                               ; preds = %96
  %99 = icmp sgt i64 %95, -14
  %100 = select i1 %99, i64 %95, i64 -14
  br label %101

101:                                              ; preds = %98, %96, %94
  %102 = phi i64 [ %95, %94 ], [ 14, %96 ], [ %100, %98 ]
  %103 = add nsw i64 %102, %38
  %104 = icmp sgt i64 %29, %31
  %105 = add nsw i64 %103, %33
  %106 = select i1 %104, i64 %103, i64 %105
  %107 = select i1 %104, i64 %105, i64 %103
  %108 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %1, i64 0, i32 2
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %2, i64 0, i32 2
  store i64 %107, i64* %109, align 8
  ret i64 %102
}

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i64 @af_cjk_compute_stem_width(%struct.AF_GlyphHintsRec_* nocapture readonly, i32, i64) unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %5 = bitcast %struct.AF_StyleMetricsRec_** %4 to %struct.AF_CJKMetricsRec_**
  %6 = load %struct.AF_CJKMetricsRec_*, %struct.AF_CJKMetricsRec_** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = icmp eq i32 %1, 1
  %9 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %162, label %13

13:                                               ; preds = %3
  %14 = icmp slt i64 %2, 0
  %15 = sub nsw i64 0, %2
  %16 = select i1 %14, i64 %15, i64 %2
  br i1 %8, label %17, label %20

17:                                               ; preds = %13
  %18 = and i32 %10, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %59

20:                                               ; preds = %13
  %21 = and i32 %10, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %59

23:                                               ; preds = %17, %20
  %24 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 3, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sub nsw i64 %16, %29
  %31 = icmp slt i64 %30, 0
  %32 = sub nsw i64 0, %30
  %33 = select i1 %31, i64 %32, i64 %30
  %34 = icmp slt i64 %33, 40
  br i1 %34, label %35, label %38

35:                                               ; preds = %27
  %36 = icmp sgt i64 %29, 48
  %37 = select i1 %36, i64 %29, i64 48
  br label %157

38:                                               ; preds = %23, %27
  %39 = icmp slt i64 %16, 54
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = sub nsw i64 54, %16
  %42 = sdiv i64 %41, 2
  %43 = add nsw i64 %42, %16
  br label %157

44:                                               ; preds = %38
  %45 = icmp slt i64 %16, 192
  br i1 %45, label %46, label %157

46:                                               ; preds = %44
  %47 = and i64 %16, 63
  %48 = and i64 %16, 9223372036854775744
  %49 = icmp ult i64 %47, 10
  br i1 %49, label %157, label %50

50:                                               ; preds = %46
  %51 = icmp ult i64 %47, 22
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = or i64 %48, 10
  br label %157

54:                                               ; preds = %50
  %55 = add nsw i64 %47, -42
  %56 = icmp ult i64 %55, 12
  %57 = or i64 %48, 54
  %58 = select i1 %56, i64 %57, i64 %16
  br label %157

59:                                               ; preds = %17, %20
  %60 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = add nuw nsw i64 %16, 32
  %65 = and i64 %64, 9223372036854775744
  br label %119

66:                                               ; preds = %59
  %67 = zext i32 %61 to i64
  %68 = and i64 %67, 1
  %69 = icmp eq i32 %61, 1
  br i1 %69, label %99, label %70

70:                                               ; preds = %66
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %96, %72 ]
  %74 = phi i64 [ %16, %70 ], [ %95, %72 ]
  %75 = phi i64 [ 98, %70 ], [ %94, %72 ]
  %76 = phi i64 [ %71, %70 ], [ %97, %72 ]
  %77 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 3, i64 %73, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = sub nsw i64 %16, %78
  %80 = icmp slt i64 %79, 0
  %81 = sub nsw i64 0, %79
  %82 = select i1 %80, i64 %81, i64 %79
  %83 = icmp slt i64 %82, %75
  %84 = select i1 %83, i64 %82, i64 %75
  %85 = select i1 %83, i64 %78, i64 %74
  %86 = or i64 %73, 1
  %87 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 3, i64 %86, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = sub nsw i64 %16, %88
  %90 = icmp slt i64 %89, 0
  %91 = sub nsw i64 0, %89
  %92 = select i1 %90, i64 %91, i64 %89
  %93 = icmp slt i64 %92, %84
  %94 = select i1 %93, i64 %92, i64 %84
  %95 = select i1 %93, i64 %88, i64 %85
  %96 = add nuw nsw i64 %73, 2
  %97 = add i64 %76, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %72

99:                                               ; preds = %72, %66
  %100 = phi i64 [ undef, %66 ], [ %95, %72 ]
  %101 = phi i64 [ 0, %66 ], [ %96, %72 ]
  %102 = phi i64 [ %16, %66 ], [ %95, %72 ]
  %103 = phi i64 [ 98, %66 ], [ %94, %72 ]
  %104 = icmp eq i64 %68, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.AF_CJKMetricsRec_, %struct.AF_CJKMetricsRec_* %6, i64 0, i32 2, i64 %7, i32 3, i64 %101, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = sub nsw i64 %16, %107
  %109 = icmp slt i64 %108, 0
  %110 = sub nsw i64 0, %108
  %111 = select i1 %109, i64 %110, i64 %108
  %112 = icmp slt i64 %111, %103
  %113 = select i1 %112, i64 %107, i64 %102
  br label %114

114:                                              ; preds = %99, %105
  %115 = phi i64 [ %100, %99 ], [ %113, %105 ]
  %116 = add nsw i64 %115, 32
  %117 = and i64 %116, -64
  %118 = icmp sgt i64 %115, %16
  br i1 %118, label %125, label %119

119:                                              ; preds = %114, %63
  %120 = phi i64 [ %65, %63 ], [ %117, %114 ]
  %121 = phi i64 [ %16, %63 ], [ %115, %114 ]
  %122 = or i64 %120, 48
  %123 = icmp sgt i64 %122, %16
  %124 = select i1 %123, i64 %121, i64 %16
  br label %129

125:                                              ; preds = %114
  %126 = add nsw i64 %117, -48
  %127 = icmp slt i64 %126, %16
  %128 = select i1 %127, i64 %115, i64 %16
  br label %129

129:                                              ; preds = %125, %119
  %130 = phi i64 [ %124, %119 ], [ %128, %125 ]
  br i1 %8, label %131, label %136

131:                                              ; preds = %129
  %132 = icmp sgt i64 %130, 63
  br i1 %132, label %133, label %157

133:                                              ; preds = %131
  %134 = add nuw nsw i64 %130, 16
  %135 = and i64 %134, -64
  br label %157

136:                                              ; preds = %129
  %137 = and i32 %10, 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %136
  %140 = icmp slt i64 %130, 64
  br i1 %140, label %157, label %141

141:                                              ; preds = %139
  %142 = add nuw nsw i64 %130, 32
  %143 = and i64 %142, -64
  br label %157

144:                                              ; preds = %136
  %145 = icmp slt i64 %130, 48
  br i1 %145, label %146, label %149

146:                                              ; preds = %144
  %147 = add nsw i64 %130, 64
  %148 = ashr i64 %147, 1
  br label %157

149:                                              ; preds = %144
  %150 = icmp slt i64 %130, 128
  br i1 %150, label %151, label %154

151:                                              ; preds = %149
  %152 = add nuw nsw i64 %130, 22
  %153 = and i64 %152, -64
  br label %157

154:                                              ; preds = %149
  %155 = add nuw nsw i64 %130, 32
  %156 = and i64 %155, -64
  br label %157

157:                                              ; preds = %54, %139, %131, %52, %46, %44, %40, %141, %151, %154, %146, %133, %35
  %158 = phi i64 [ %135, %133 ], [ %143, %141 ], [ %148, %146 ], [ %153, %151 ], [ %156, %154 ], [ %37, %35 ], [ %43, %40 ], [ %16, %44 ], [ %53, %52 ], [ %16, %46 ], [ 64, %131 ], [ 64, %139 ], [ %58, %54 ]
  %159 = icmp sgt i64 %2, -1
  %160 = sub nsw i64 0, %158
  %161 = select i1 %159, i64 %158, i64 %160
  br label %162

162:                                              ; preds = %3, %157
  %163 = phi i64 [ %161, %157 ], [ %2, %3 ]
  ret i64 %163
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_iup_interp(%struct.AF_PointRec_*, %struct.AF_PointRec_* readnone, %struct.AF_PointRec_* nocapture readonly, %struct.AF_PointRec_* nocapture readonly) unnamed_addr #0 {
  %5 = icmp ugt %struct.AF_PointRec_* %0, %1
  br i1 %5, label %76, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %2, i64 0, i32 10
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %3, i64 0, i32 10
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %8, %10
  %12 = select i1 %11, %struct.AF_PointRec_* %3, %struct.AF_PointRec_* %2
  %13 = select i1 %11, %struct.AF_PointRec_* %2, %struct.AF_PointRec_* %3
  %14 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %12, i64 0, i32 10
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %13, i64 0, i32 10
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %12, i64 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %13, i64 0, i32 9
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %19, %15
  %23 = sub nsw i64 %21, %17
  %24 = icmp eq i64 %21, %19
  %25 = icmp eq i64 %17, %15
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %43

27:                                               ; preds = %6, %38
  %28 = phi %struct.AF_PointRec_* [ %41, %38 ], [ %0, %6 ]
  %29 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %28, i64 0, i32 10
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, %15
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = add nsw i64 %30, %22
  br label %38

34:                                               ; preds = %27
  %35 = icmp slt i64 %30, %17
  %36 = add nsw i64 %30, %23
  %37 = select i1 %35, i64 %19, i64 %36
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i64 [ %33, %32 ], [ %37, %34 ]
  %40 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %28, i64 0, i32 9
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %28, i64 1
  %42 = icmp ugt %struct.AF_PointRec_* %41, %1
  br i1 %42, label %76, label %27

43:                                               ; preds = %6
  %44 = sub nsw i64 %21, %19
  %45 = sub nsw i64 %17, %15
  %46 = tail call i64 @FT_DivFix(i64 %44, i64 %45) #10
  %47 = shl i64 %46, 32
  %48 = ashr exact i64 %47, 32
  br label %49

49:                                               ; preds = %43, %71
  %50 = phi %struct.AF_PointRec_* [ %0, %43 ], [ %74, %71 ]
  %51 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %50, i64 0, i32 10
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, %15
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = add nsw i64 %52, %22
  br label %71

56:                                               ; preds = %49
  %57 = icmp slt i64 %52, %17
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = add nsw i64 %52, %23
  br label %71

60:                                               ; preds = %56
  %61 = sub nsw i64 %52, %15
  %62 = shl i64 %61, 32
  %63 = ashr exact i64 %62, 32
  %64 = mul nsw i64 %63, %48
  %65 = ashr i64 %64, 63
  %66 = add nsw i64 %64, 32768
  %67 = add nsw i64 %66, %65
  %68 = shl i64 %67, 16
  %69 = ashr i64 %68, 32
  %70 = add nsw i64 %69, %19
  br label %71

71:                                               ; preds = %58, %60, %54
  %72 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %70, %60 ]
  %73 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %50, i64 0, i32 9
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %struct.AF_PointRec_, %struct.AF_PointRec_* %50, i64 1
  %75 = icmp ugt %struct.AF_PointRec_* %74, %1
  br i1 %75, label %76, label %49

76:                                               ; preds = %71, %38, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @af_latin_metrics_scale_dim(%struct.AF_LatinMetricsRec_*, %struct.AF_ScalerRec_* nocapture readonly, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 1
  %6 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 3
  %7 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 2
  %8 = getelementptr inbounds %struct.AF_ScalerRec_, %struct.AF_ScalerRec_* %1, i64 0, i32 4
  %9 = select i1 %4, i64* %6, i64* %8
  %10 = select i1 %4, i64* %5, i64* %7
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = zext i32 %2 to i64
  %14 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 9
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %11
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 10
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %12
  br i1 %20, label %304, label %21

21:                                               ; preds = %17, %3
  store i64 %11, i64* %14, align 8
  %22 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 10
  store i64 %12, i64* %22, align 8
  %23 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %150, label %26

26:                                               ; preds = %21
  %27 = zext i32 %24 to i64
  br label %30

28:                                               ; preds = %30
  %29 = icmp ult i64 %36, %27
  br i1 %29, label %30, label %150

30:                                               ; preds = %26, %28
  %31 = phi i64 [ 0, %26 ], [ %36, %28 ]
  %32 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %31, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 16
  %35 = icmp eq i32 %34, 0
  %36 = add nuw nsw i64 %31, 1
  br i1 %35, label %28, label %37

37:                                               ; preds = %30
  %38 = and i64 %31, 4294967295
  %39 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %38
  %40 = icmp eq %struct.AF_LatinBlueRec_* %39, null
  br i1 %40, label %150, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %38, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = shl i64 %43, 32
  %45 = ashr exact i64 %44, 32
  %46 = shl i64 %11, 32
  %47 = ashr exact i64 %46, 32
  %48 = mul nsw i64 %45, %47
  %49 = ashr i64 %48, 63
  %50 = add nsw i64 %48, 32768
  %51 = add nsw i64 %50, %49
  %52 = shl i64 %51, 16
  %53 = ashr i64 %52, 32
  %54 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 0
  %55 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %55, i64 0, i32 22
  %57 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %56, align 8
  %58 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %57, i64 0, i32 2, i32 0
  %59 = load i16, i16* %58, align 8
  %60 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 3
  %61 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %60, align 8
  %62 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %61, i64 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %41
  %66 = zext i16 %59 to i32
  %67 = icmp uge i32 %63, %66
  %68 = icmp ugt i16 %59, 5
  %69 = and i1 %68, %67
  %70 = select i1 %69, i64 52, i64 40
  br label %71

71:                                               ; preds = %65, %41
  %72 = phi i64 [ 40, %41 ], [ %70, %65 ]
  %73 = add nsw i64 %72, %53
  %74 = and i64 %73, -64
  %75 = icmp ne i64 %74, %53
  %76 = icmp eq i32 %2, 1
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %150

78:                                               ; preds = %71
  %79 = tail call i64 @FT_MulDiv(i64 %11, i64 %74, i64 %53) #10
  %80 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = load i32, i32* %23, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %132, label %85

85:                                               ; preds = %78
  %86 = zext i32 %83 to i64
  %87 = and i64 %86, 1
  %88 = icmp eq i32 %83, 1
  br i1 %88, label %117, label %89

89:                                               ; preds = %85
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %114, %91 ]
  %93 = phi i64 [ %82, %89 ], [ %113, %91 ]
  %94 = phi i64 [ %90, %89 ], [ %115, %91 ]
  %95 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %92, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = icmp sgt i64 %93, %96
  %98 = select i1 %97, i64 %93, i64 %96
  %99 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %92, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = sub nsw i64 0, %100
  %102 = icmp sgt i64 %98, %101
  %103 = select i1 %102, i64 %98, i64 %101
  %104 = or i64 %92, 1
  %105 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %104, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp sgt i64 %103, %106
  %108 = select i1 %107, i64 %103, i64 %106
  %109 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %104, i32 3
  %110 = load i64, i64* %109, align 8
  %111 = sub nsw i64 0, %110
  %112 = icmp sgt i64 %108, %111
  %113 = select i1 %112, i64 %108, i64 %111
  %114 = add nuw nsw i64 %92, 2
  %115 = add i64 %94, -2
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %91

117:                                              ; preds = %91, %85
  %118 = phi i64 [ undef, %85 ], [ %113, %91 ]
  %119 = phi i64 [ 0, %85 ], [ %114, %91 ]
  %120 = phi i64 [ %82, %85 ], [ %113, %91 ]
  %121 = icmp eq i64 %87, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %119, i32 2
  %124 = load i64, i64* %123, align 8
  %125 = icmp sgt i64 %120, %124
  %126 = select i1 %125, i64 %120, i64 %124
  %127 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 1, i32 8, i64 %119, i32 3
  %128 = load i64, i64* %127, align 8
  %129 = sub nsw i64 0, %128
  %130 = icmp sgt i64 %126, %129
  %131 = select i1 %130, i64 %126, i64 %129
  br label %132

132:                                              ; preds = %122, %117, %78
  %133 = phi i64 [ %82, %78 ], [ %118, %117 ], [ %131, %122 ]
  %134 = sub nsw i64 %79, %11
  %135 = shl i64 %133, 32
  %136 = ashr exact i64 %135, 32
  %137 = shl i64 %134, 32
  %138 = ashr exact i64 %137, 32
  %139 = mul nsw i64 %136, %138
  %140 = ashr i64 %139, 63
  %141 = add nsw i64 %139, 32768
  %142 = add nsw i64 %141, %140
  %143 = lshr i64 %142, 16
  %144 = trunc i64 %143 to i32
  %145 = icmp slt i32 %144, 0
  %146 = sub nsw i32 0, %144
  %147 = select i1 %145, i32 %146, i32 %144
  %148 = icmp ult i32 %147, 128
  %149 = select i1 %148, i64 %79, i64 %11
  br label %150

150:                                              ; preds = %28, %21, %71, %132, %37
  %151 = phi i64 [ %11, %37 ], [ %149, %132 ], [ %11, %71 ], [ %11, %21 ], [ %11, %28 ]
  %152 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 0
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 1
  store i64 %12, i64* %153, align 8
  br i1 %4, label %154, label %157

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 1
  store i64 %151, i64* %155, align 8
  %156 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 3
  br label %160

157:                                              ; preds = %150
  %158 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 2
  store i64 %151, i64* %158, align 8
  %159 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 0, i32 1, i32 4
  br label %160

160:                                              ; preds = %154, %157
  %161 = phi i64* [ %156, %154 ], [ %159, %157 ]
  store i64 %12, i64* %161, align 8
  %162 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 2
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 0
  %165 = shl i64 %151, 32
  %166 = ashr exact i64 %165, 32
  br i1 %164, label %185, label %167

167:                                              ; preds = %160
  %168 = zext i32 %163 to i64
  br label %169

169:                                              ; preds = %167, %169
  %170 = phi i64 [ 0, %167 ], [ %183, %169 ]
  %171 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 3, i64 %170, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = shl i64 %172, 32
  %174 = ashr exact i64 %173, 32
  %175 = mul nsw i64 %174, %166
  %176 = ashr i64 %175, 63
  %177 = add nsw i64 %175, 32768
  %178 = add nsw i64 %177, %176
  %179 = shl i64 %178, 16
  %180 = ashr i64 %179, 32
  %181 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 3, i64 %170, i32 1
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 3, i64 %170, i32 2
  store i64 %180, i64* %182, align 8
  %183 = add nuw nsw i64 %170, 1
  %184 = icmp ult i64 %183, %168
  br i1 %184, label %169, label %185

185:                                              ; preds = %169, %160
  %186 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 5
  %187 = load i64, i64* %186, align 8
  %188 = shl i64 %187, 32
  %189 = ashr exact i64 %188, 32
  %190 = mul nsw i64 %189, %166
  %191 = ashr i64 %190, 63
  %192 = add nsw i64 %190, 32768
  %193 = add nsw i64 %192, %191
  %194 = lshr i64 %193, 16
  %195 = trunc i64 %194 to i32
  %196 = icmp slt i32 %195, 40
  %197 = zext i1 %196 to i8
  %198 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 6
  store i8 %197, i8* %198, align 8
  %199 = icmp eq i32 %2, 1
  br i1 %199, label %200, label %304

200:                                              ; preds = %185
  %201 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 7
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %304, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %210

206:                                              ; preds = %268
  %207 = icmp eq i32 %202, 0
  br i1 %207, label %304, label %208

208:                                              ; preds = %206
  %209 = zext i32 %202 to i64
  br label %271

210:                                              ; preds = %204, %268
  %211 = phi i64 [ 0, %204 ], [ %269, %268 ]
  %212 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = shl i64 %213, 32
  %215 = ashr exact i64 %214, 32
  %216 = mul nsw i64 %215, %166
  %217 = ashr i64 %216, 63
  %218 = add nsw i64 %216, 32768
  %219 = add nsw i64 %218, %217
  %220 = shl i64 %219, 16
  %221 = ashr i64 %220, 32
  %222 = add nsw i64 %221, %12
  %223 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 0, i32 1
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 0, i32 2
  store i64 %222, i64* %224, align 8
  %225 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 1, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = shl i64 %226, 32
  %228 = ashr exact i64 %227, 32
  %229 = mul nsw i64 %228, %166
  %230 = ashr i64 %229, 63
  %231 = add nsw i64 %229, 32768
  %232 = add nsw i64 %231, %230
  %233 = shl i64 %232, 16
  %234 = ashr i64 %233, 32
  %235 = add nsw i64 %234, %12
  %236 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 1, i32 1
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 1, i32 2
  store i64 %235, i64* %237, align 8
  %238 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %211, i32 4
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, -2
  store i32 %240, i32* %238, align 8
  %241 = sub nsw i64 %213, %226
  %242 = shl i64 %241, 32
  %243 = ashr exact i64 %242, 32
  %244 = mul nsw i64 %243, %166
  %245 = ashr i64 %244, 63
  %246 = add nsw i64 %244, 32768
  %247 = add nsw i64 %246, %245
  %248 = lshr i64 %247, 16
  %249 = trunc i64 %248 to i32
  %250 = shl i64 %248, 32
  %251 = ashr exact i64 %250, 32
  %252 = add i32 %249, 48
  %253 = icmp ult i32 %252, 97
  br i1 %253, label %254, label %268

254:                                              ; preds = %210
  %255 = icmp slt i32 %249, 0
  %256 = sub nsw i64 0, %251
  %257 = select i1 %255, i64 %256, i64 %251
  %258 = icmp slt i64 %257, 32
  %259 = icmp slt i64 %257, 48
  %260 = select i1 %259, i64 32, i64 64
  %261 = select i1 %258, i64 0, i64 %260
  %262 = sub nsw i64 0, %261
  %263 = select i1 %255, i64 %262, i64 %261
  %264 = add nsw i64 %222, 32
  %265 = and i64 %264, -64
  store i64 %265, i64* %224, align 8
  %266 = sub nsw i64 %265, %263
  store i64 %266, i64* %237, align 8
  %267 = or i32 %239, 1
  store i32 %267, i32* %238, align 8
  br label %268

268:                                              ; preds = %254, %210
  %269 = add nuw nsw i64 %211, 1
  %270 = icmp ult i64 %269, %205
  br i1 %270, label %210, label %206

271:                                              ; preds = %301, %208
  %272 = phi i64 [ 0, %208 ], [ %302, %301 ]
  %273 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %272, i32 4
  %274 = load i32, i32* %273, align 8
  %275 = and i32 %274, 5
  %276 = icmp eq i32 %275, 5
  br i1 %276, label %277, label %301

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %272, i32 1, i32 2
  %279 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %272, i32 0, i32 2
  br label %280

280:                                              ; preds = %298, %277
  %281 = phi i64 [ 0, %277 ], [ %299, %298 ]
  %282 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %281, i32 4
  %283 = load i32, i32* %282, align 8
  %284 = and i32 %283, 5
  %285 = icmp eq i32 %284, 1
  br i1 %285, label %286, label %298

286:                                              ; preds = %280
  %287 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %281, i32 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = load i64, i64* %278, align 8
  %290 = icmp sgt i64 %288, %289
  br i1 %290, label %298, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %0, i64 0, i32 2, i64 %13, i32 8, i64 %281, i32 1, i32 2
  %293 = load i64, i64* %292, align 8
  %294 = load i64, i64* %279, align 8
  %295 = icmp slt i64 %293, %294
  br i1 %295, label %298, label %296

296:                                              ; preds = %291
  %297 = and i32 %274, -2
  store i32 %297, i32* %273, align 8
  br label %301

298:                                              ; preds = %280, %291, %286
  %299 = add nuw nsw i64 %281, 1
  %300 = icmp eq i64 %299, %209
  br i1 %300, label %301, label %280

301:                                              ; preds = %298, %271, %296
  %302 = add nuw nsw i64 %272, 1
  %303 = icmp eq i64 %302, %209
  br i1 %303, label %304, label %271

304:                                              ; preds = %301, %200, %206, %185, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_latin_hints_detect_features(%struct.AF_GlyphHintsRec_*, i32, %struct.AF_WidthRec_* nocapture readonly, i32) unnamed_addr #0 {
  %5 = alloca %struct.AF_EdgeRec_*, align 8
  %6 = tail call fastcc i32 @af_latin_hints_compute_segments(%struct.AF_GlyphHintsRec_* %0, i32 %3)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %331

8:                                                ; preds = %4
  tail call fastcc void @af_latin_hints_link_segments(%struct.AF_GlyphHintsRec_* %0, i32 %1, %struct.AF_WidthRec_* %2, i32 %3)
  %9 = zext i32 %3 to i64
  %10 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9
  %11 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 0
  %12 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  %13 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %14 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %13, align 8
  %15 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %14, i64 1, i32 1
  %16 = bitcast %struct.AF_ScalerRec_* %15 to [2 x %struct.AF_LatinAxisRec_]*
  %17 = getelementptr inbounds %struct.AF_StyleMetricsRec_, %struct.AF_StyleMetricsRec_* %14, i64 0, i32 0
  %18 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %17, align 8
  %19 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [61 x %struct.AF_ScriptClassRec_*], [61 x %struct.AF_ScriptClassRec_*]* @af_script_classes, i64 0, i64 %21
  %23 = load %struct.AF_ScriptClassRec_*, %struct.AF_ScriptClassRec_** %22, align 8
  %24 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 2
  %25 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %24, align 8
  %26 = getelementptr inbounds %struct.AF_AxisHintsRec_, %struct.AF_AxisHintsRec_* %10, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %25, i64 %28
  %30 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 3
  store i32 0, i32* %30, align 8
  %31 = icmp eq i32 %3, 0
  %32 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 1
  %33 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 3
  %34 = select i1 %31, i64* %32, i64* %33
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i32 %3, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %8
  %38 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %23, i64 0, i32 3
  %39 = load i8, i8* %38, align 8
  br label %40

40:                                               ; preds = %37, %8
  %41 = phi i8 [ %39, %37 ], [ 0, %8 ]
  br i1 %31, label %42, label %45

42:                                               ; preds = %40
  %43 = load i64, i64* %33, align 8
  %44 = tail call i64 @FT_DivFix(i64 64, i64 %43) #10
  br label %45

45:                                               ; preds = %42, %40
  %46 = phi i64 [ %44, %42 ], [ 0, %40 ]
  %47 = tail call i64 @FT_DivFix(i64 32, i64 %35) #10
  %48 = getelementptr inbounds [2 x %struct.AF_LatinAxisRec_], [2 x %struct.AF_LatinAxisRec_]* %16, i64 0, i64 %9, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = shl i64 %49, 32
  %51 = ashr exact i64 %50, 32
  %52 = shl i64 %35, 32
  %53 = ashr exact i64 %52, 32
  %54 = mul nsw i64 %51, %53
  %55 = ashr i64 %54, 63
  %56 = add nsw i64 %54, 32768
  %57 = add nsw i64 %56, %55
  %58 = shl i64 %57, 16
  %59 = ashr i64 %58, 32
  %60 = icmp slt i64 %59, 16
  %61 = select i1 %60, i64 %59, i64 16
  %62 = tail call i64 @FT_DivFix(i64 %61, i64 %35) #10
  %63 = icmp sgt i32 %27, 0
  br i1 %63, label %64, label %209

64:                                               ; preds = %45
  %65 = mul nsw i64 %46, 3
  %66 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 5
  %67 = bitcast %struct.AF_EdgeRec_** %5 to i8*
  %68 = bitcast %struct.AF_EdgeRec_** %5 to i8**
  br label %69

69:                                               ; preds = %164, %64
  %70 = phi %struct.AF_SegmentRec_* [ %25, %64 ], [ %165, %164 ]
  %71 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 6
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i64
  %74 = icmp sgt i64 %46, %73
  br i1 %74, label %164, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 3
  %77 = load i16, i16* %76, align 4
  %78 = sext i16 %77 to i64
  %79 = icmp slt i64 %47, %78
  br i1 %79, label %164, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 4
  br i1 %83, label %164, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 10
  %86 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %85, align 8
  %87 = icmp eq %struct.AF_SegmentRec_* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = sext i16 %72 to i32
  %90 = shl nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = icmp sgt i64 %65, %91
  br i1 %92, label %164, label %93

93:                                               ; preds = %88, %84
  %94 = load i32, i32* %30, align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %123

96:                                               ; preds = %93
  %97 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %66, align 8
  %98 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 2
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i64
  %101 = sext i32 %94 to i64
  br label %102

102:                                              ; preds = %117, %96
  %103 = phi i64 [ 0, %96 ], [ %118, %117 ]
  %104 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %97, i64 %103
  %105 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %104, i64 0, i32 0
  %106 = load i16, i16* %105, align 8
  %107 = sext i16 %106 to i64
  %108 = sub nsw i64 %100, %107
  %109 = icmp slt i64 %108, 0
  %110 = sub nsw i64 0, %108
  %111 = select i1 %109, i64 %110, i64 %108
  %112 = icmp slt i64 %111, %62
  br i1 %112, label %113, label %117

113:                                              ; preds = %102
  %114 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %97, i64 %103, i32 4
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, %82
  br i1 %116, label %120, label %117

117:                                              ; preds = %113, %102
  %118 = add nuw nsw i64 %103, 1
  %119 = icmp eq i64 %118, %101
  br i1 %119, label %123, label %102

120:                                              ; preds = %113
  %121 = and i64 %103, 4294967295
  %122 = icmp eq %struct.AF_EdgeRec_* %104, null
  br i1 %122, label %123, label %154

123:                                              ; preds = %117, %120, %93
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  store %struct.AF_EdgeRec_* inttoptr (i64 -6148914691236517206 to %struct.AF_EdgeRec_*), %struct.AF_EdgeRec_** %5, align 8
  %124 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 2
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = load i8, i8* %81, align 1
  %128 = sext i8 %127 to i32
  %129 = call fastcc i32 @af_axis_hints_new_edge(%struct.AF_AxisHintsRec_* %10, i32 %126, i32 %128, i8 zeroext %41, %struct.FT_MemoryRec_* %12, %struct.AF_EdgeRec_** nonnull %5) #10
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %163

131:                                              ; preds = %123
  %132 = load i8*, i8** %68, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 72, i1 false) #10
  %133 = getelementptr inbounds i8, i8* %132, i64 72
  %134 = bitcast i8* %133 to %struct.AF_SegmentRec_**
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %134, align 8
  %135 = getelementptr inbounds i8, i8* %132, i64 80
  %136 = bitcast i8* %135 to %struct.AF_SegmentRec_**
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %136, align 8
  %137 = load i8, i8* %81, align 1
  %138 = getelementptr inbounds i8, i8* %132, i64 25
  store i8 %137, i8* %138, align 1
  %139 = load i16, i16* %124, align 2
  %140 = bitcast i8* %132 to i16*
  store i16 %139, i16* %140, align 8
  %141 = load i16, i16* %124, align 2
  %142 = sext i16 %141 to i64
  %143 = mul nsw i64 %53, %142
  %144 = ashr i64 %143, 63
  %145 = add nsw i64 %143, 32768
  %146 = add nsw i64 %145, %144
  %147 = shl i64 %146, 16
  %148 = ashr i64 %147, 32
  %149 = getelementptr inbounds i8, i8* %132, i64 8
  %150 = bitcast i8* %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = getelementptr inbounds i8, i8* %132, i64 16
  %152 = bitcast i8* %151 to i64*
  store i64 %148, i64* %152, align 8
  %153 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 8
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %153, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  br label %164

154:                                              ; preds = %120
  %155 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %97, i64 %121, i32 10
  %156 = bitcast %struct.AF_SegmentRec_** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 0, i32 8
  %159 = bitcast %struct.AF_SegmentRec_** %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %97, i64 %121, i32 11
  %161 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %160, align 8
  %162 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %161, i64 0, i32 8
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %162, align 8
  store %struct.AF_SegmentRec_* %70, %struct.AF_SegmentRec_** %160, align 8
  br label %164

163:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  br label %331

164:                                              ; preds = %154, %131, %88, %80, %75, %69
  %165 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %70, i64 1
  %166 = icmp ult %struct.AF_SegmentRec_* %165, %29
  br i1 %166, label %69, label %167

167:                                              ; preds = %164, %206
  %168 = phi %struct.AF_SegmentRec_* [ %207, %206 ], [ %25, %164 ]
  %169 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %168, i64 0, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 4
  br i1 %171, label %172, label %206

172:                                              ; preds = %167
  %173 = load i32, i32* %30, align 8
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %175, label %206

175:                                              ; preds = %172
  %176 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %66, align 8
  %177 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %168, i64 0, i32 2
  %178 = load i16, i16* %177, align 2
  %179 = sext i16 %178 to i64
  %180 = sext i32 %173 to i64
  br label %183

181:                                              ; preds = %183
  %182 = icmp eq i64 %194, %180
  br i1 %182, label %206, label %183

183:                                              ; preds = %181, %175
  %184 = phi i64 [ 0, %175 ], [ %194, %181 ]
  %185 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %176, i64 %184
  %186 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %185, i64 0, i32 0
  %187 = load i16, i16* %186, align 8
  %188 = sext i16 %187 to i64
  %189 = sub nsw i64 %179, %188
  %190 = icmp slt i64 %189, 0
  %191 = sub nsw i64 0, %189
  %192 = select i1 %190, i64 %191, i64 %189
  %193 = icmp slt i64 %192, %62
  %194 = add nuw nsw i64 %184, 1
  br i1 %193, label %195, label %181

195:                                              ; preds = %183
  %196 = icmp eq %struct.AF_EdgeRec_* %185, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %176, i64 %184, i32 10
  %199 = bitcast %struct.AF_SegmentRec_** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %168, i64 0, i32 8
  %202 = bitcast %struct.AF_SegmentRec_** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %176, i64 %184, i32 11
  %204 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %203, align 8
  %205 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %204, i64 0, i32 8
  store %struct.AF_SegmentRec_* %168, %struct.AF_SegmentRec_** %205, align 8
  store %struct.AF_SegmentRec_* %168, %struct.AF_SegmentRec_** %203, align 8
  br label %206

206:                                              ; preds = %181, %197, %195, %172, %167
  %207 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %168, i64 1
  %208 = icmp ult %struct.AF_SegmentRec_* %207, %29
  br i1 %208, label %167, label %209

209:                                              ; preds = %206, %45
  %210 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 11, i64 %9, i32 5
  %211 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %210, align 8
  %212 = icmp eq %struct.AF_EdgeRec_* %211, null
  br i1 %212, label %331, label %213

213:                                              ; preds = %209
  %214 = load i32, i32* %30, align 8
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %211, i64 %215
  %217 = icmp sgt i32 %214, 0
  br i1 %217, label %218, label %331

218:                                              ; preds = %213, %230
  %219 = phi %struct.AF_EdgeRec_* [ %231, %230 ], [ %211, %213 ]
  %220 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %219, i64 0, i32 10
  %221 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %220, align 8
  %222 = icmp eq %struct.AF_SegmentRec_* %221, null
  br i1 %222, label %230, label %223

223:                                              ; preds = %218, %223
  %224 = phi %struct.AF_SegmentRec_* [ %227, %223 ], [ %221, %218 ]
  %225 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %224, i64 0, i32 7
  store %struct.AF_EdgeRec_* %219, %struct.AF_EdgeRec_** %225, align 8
  %226 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %224, i64 0, i32 8
  %227 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %226, align 8
  %228 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %220, align 8
  %229 = icmp eq %struct.AF_SegmentRec_* %227, %228
  br i1 %229, label %230, label %223

230:                                              ; preds = %223, %218
  %231 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %219, i64 1
  %232 = icmp ult %struct.AF_EdgeRec_* %231, %216
  br i1 %232, label %218, label %233

233:                                              ; preds = %230, %328
  %234 = phi %struct.AF_EdgeRec_* [ %329, %328 ], [ %211, %230 ]
  %235 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 0, i32 10
  %236 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %235, align 8
  %237 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 0, i32 7
  %238 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 0, i32 8
  %239 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 0, i32 0
  br label %240

240:                                              ; preds = %311, %233
  %241 = phi %struct.AF_SegmentRec_* [ %236, %233 ], [ %312, %311 ]
  %242 = phi %struct.AF_SegmentRec_* [ %236, %233 ], [ %314, %311 ]
  %243 = phi i32 [ 0, %233 ], [ %249, %311 ]
  %244 = phi i32 [ 0, %233 ], [ %252, %311 ]
  %245 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %242, i64 0, i32 0
  %246 = load i8, i8* %245, align 8
  %247 = and i8 %246, 1
  %248 = zext i8 %247 to i32
  %249 = add nuw nsw i32 %243, %248
  %250 = xor i8 %247, 1
  %251 = zext i8 %250 to i32
  %252 = add nuw nsw i32 %244, %251
  %253 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %242, i64 0, i32 10
  %254 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %253, align 8
  %255 = icmp eq %struct.AF_SegmentRec_* %254, null
  br i1 %255, label %262, label %256

256:                                              ; preds = %240
  %257 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %254, i64 0, i32 7
  %258 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %257, align 8
  %259 = icmp ne %struct.AF_EdgeRec_* %258, null
  %260 = icmp ne %struct.AF_EdgeRec_* %258, %234
  %261 = and i1 %260, %259
  br label %262

262:                                              ; preds = %256, %240
  %263 = phi i1 [ false, %240 ], [ %261, %256 ]
  %264 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %242, i64 0, i32 9
  %265 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %264, align 8
  %266 = icmp eq %struct.AF_SegmentRec_* %265, null
  br i1 %266, label %272, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %265, i64 0, i32 7
  %269 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %268, align 8
  %270 = icmp ne %struct.AF_EdgeRec_* %269, null
  %271 = or i1 %263, %270
  br i1 %271, label %273, label %311

272:                                              ; preds = %262
  br i1 %263, label %273, label %311

273:                                              ; preds = %272, %267
  %274 = select i1 %263, %struct.AF_EdgeRec_** %238, %struct.AF_EdgeRec_** %237
  %275 = select i1 %263, %struct.AF_SegmentRec_** %253, %struct.AF_SegmentRec_** %264
  %276 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %275, align 8
  %277 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %274, align 8
  %278 = icmp eq %struct.AF_EdgeRec_* %277, null
  br i1 %278, label %300, label %279

279:                                              ; preds = %273
  %280 = load i16, i16* %239, align 8
  %281 = sext i16 %280 to i64
  %282 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %277, i64 0, i32 0
  %283 = load i16, i16* %282, align 8
  %284 = sext i16 %283 to i64
  %285 = sub nsw i64 %281, %284
  %286 = icmp slt i64 %285, 0
  %287 = sub nsw i64 0, %285
  %288 = select i1 %286, i64 %287, i64 %285
  %289 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %242, i64 0, i32 2
  %290 = load i16, i16* %289, align 2
  %291 = sext i16 %290 to i64
  %292 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %276, i64 0, i32 2
  %293 = load i16, i16* %292, align 2
  %294 = sext i16 %293 to i64
  %295 = sub nsw i64 %291, %294
  %296 = icmp slt i64 %295, 0
  %297 = sub nsw i64 0, %295
  %298 = select i1 %296, i64 %297, i64 %295
  %299 = icmp slt i64 %298, %288
  br i1 %299, label %300, label %303

300:                                              ; preds = %273, %279
  %301 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %276, i64 0, i32 7
  %302 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %301, align 8
  br label %303

303:                                              ; preds = %300, %279
  %304 = phi %struct.AF_EdgeRec_* [ %277, %279 ], [ %302, %300 ]
  br i1 %263, label %305, label %310

305:                                              ; preds = %303
  store %struct.AF_EdgeRec_* %304, %struct.AF_EdgeRec_** %238, align 8
  %306 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %304, i64 0, i32 3
  %307 = load i8, i8* %306, align 8
  %308 = or i8 %307, 2
  store i8 %308, i8* %306, align 8
  %309 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %235, align 8
  br label %311

310:                                              ; preds = %303
  store %struct.AF_EdgeRec_* %304, %struct.AF_EdgeRec_** %237, align 8
  br label %311

311:                                              ; preds = %310, %305, %272, %267
  %312 = phi %struct.AF_SegmentRec_* [ %309, %305 ], [ %241, %310 ], [ %241, %267 ], [ %241, %272 ]
  %313 = getelementptr inbounds %struct.AF_SegmentRec_, %struct.AF_SegmentRec_* %242, i64 0, i32 8
  %314 = load %struct.AF_SegmentRec_*, %struct.AF_SegmentRec_** %313, align 8
  %315 = icmp eq %struct.AF_SegmentRec_* %314, %312
  br i1 %315, label %316, label %240

316:                                              ; preds = %311
  %317 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 0, i32 3
  %318 = icmp ne i32 %249, 0
  %319 = icmp uge i32 %249, %252
  %320 = and i1 %318, %319
  %321 = zext i1 %320 to i8
  store i8 %321, i8* %317, align 8
  %322 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %238, align 8
  %323 = icmp eq %struct.AF_EdgeRec_* %322, null
  br i1 %323, label %328, label %324

324:                                              ; preds = %316
  %325 = load %struct.AF_EdgeRec_*, %struct.AF_EdgeRec_** %237, align 8
  %326 = icmp eq %struct.AF_EdgeRec_* %325, null
  br i1 %326, label %328, label %327

327:                                              ; preds = %324
  store %struct.AF_EdgeRec_* null, %struct.AF_EdgeRec_** %238, align 8
  br label %328

328:                                              ; preds = %327, %324, %316
  %329 = getelementptr inbounds %struct.AF_EdgeRec_, %struct.AF_EdgeRec_* %234, i64 1
  %330 = icmp ult %struct.AF_EdgeRec_* %329, %216
  br i1 %330, label %233, label %331

331:                                              ; preds = %328, %213, %209, %163, %4
  %332 = phi i32 [ %6, %4 ], [ %129, %163 ], [ 0, %213 ], [ 0, %209 ], [ 0, %328 ]
  ret i32 %332
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc i64 @af_latin_compute_stem_width(%struct.AF_GlyphHintsRec_* nocapture readonly, i32, i64, i64, i32, i32) unnamed_addr #6 {
  %7 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 14
  %8 = bitcast %struct.AF_StyleMetricsRec_** %7 to %struct.AF_LatinMetricsRec_**
  %9 = load %struct.AF_LatinMetricsRec_*, %struct.AF_LatinMetricsRec_** %8, align 8
  %10 = zext i32 %1 to i64
  %11 = icmp eq i32 %1, 1
  %12 = getelementptr inbounds %struct.AF_GlyphHintsRec_, %struct.AF_GlyphHintsRec_* %0, i64 0, i32 13
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %217, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 6
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %217

20:                                               ; preds = %16
  %21 = icmp slt i64 %2, 0
  %22 = sub nsw i64 0, %2
  %23 = select i1 %21, i64 %22, i64 %2
  br i1 %11, label %24, label %27

24:                                               ; preds = %20
  %25 = and i32 %13, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %104

27:                                               ; preds = %20
  %28 = and i32 %13, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %104

30:                                               ; preds = %24
  %31 = and i32 %5, 2
  %32 = icmp ne i32 %31, 0
  %33 = icmp slt i64 %23, 192
  %34 = and i1 %33, %32
  br i1 %34, label %212, label %35

35:                                               ; preds = %27, %30
  %36 = and i32 %4, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i64 %23, 80
  %39 = select i1 %38, i64 64, i64 %23
  %40 = icmp sgt i64 %23, 56
  %41 = select i1 %40, i64 %23, i64 56
  %42 = select i1 %37, i64 %41, i64 %39
  %43 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %212, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 3, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %42, %48
  %50 = icmp slt i64 %49, 0
  %51 = sub nsw i64 0, %49
  %52 = select i1 %50, i64 %51, i64 %49
  %53 = icmp slt i64 %52, 40
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = icmp sgt i64 %48, 48
  %56 = select i1 %55, i64 %48, i64 48
  br label %212

57:                                               ; preds = %46
  %58 = icmp slt i64 %42, 192
  br i1 %58, label %59, label %71

59:                                               ; preds = %57
  %60 = and i64 %42, 63
  %61 = and i64 %42, 9223372036854775744
  %62 = icmp ult i64 %60, 10
  br i1 %62, label %212, label %63

63:                                               ; preds = %59
  %64 = icmp ult i64 %60, 32
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = or i64 %61, 10
  br label %212

67:                                               ; preds = %63
  %68 = icmp ult i64 %60, 54
  %69 = or i64 %61, 54
  %70 = select i1 %68, i64 %69, i64 %42
  br label %212

71:                                               ; preds = %57
  %72 = icmp sgt i64 %2, 0
  %73 = icmp sgt i64 %3, 0
  %74 = and i1 %72, %73
  %75 = and i64 %3, %2
  %76 = icmp slt i64 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %99

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 0, i32 1, i32 0
  %80 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %79, align 8
  %81 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %80, i64 0, i32 22
  %82 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %81, align 8
  %83 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %82, i64 0, i32 2, i32 0
  %84 = load i16, i16* %83, align 8
  %85 = zext i16 %84 to i64
  %86 = icmp ult i16 %84, 10
  br i1 %86, label %94, label %87

87:                                               ; preds = %78
  %88 = icmp ult i16 %84, 30
  br i1 %88, label %89, label %99

89:                                               ; preds = %87
  %90 = sub nsw i64 30, %85
  %91 = and i64 %90, 4294967295
  %92 = mul nsw i64 %91, %3
  %93 = sdiv i64 %92, 20
  br label %94

94:                                               ; preds = %78, %89
  %95 = phi i64 [ %93, %89 ], [ %3, %78 ]
  %96 = icmp slt i64 %95, 0
  %97 = sub nsw i64 0, %95
  %98 = select i1 %96, i64 %95, i64 %97
  br label %99

99:                                               ; preds = %94, %87, %71
  %100 = phi i64 [ 0, %71 ], [ 0, %87 ], [ %98, %94 ]
  %101 = add nuw i64 %42, 32
  %102 = add i64 %101, %100
  %103 = and i64 %102, -64
  br label %212

104:                                              ; preds = %24, %27
  %105 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  %109 = add nuw nsw i64 %23, 32
  %110 = and i64 %109, 9223372036854775744
  br label %164

111:                                              ; preds = %104
  %112 = zext i32 %106 to i64
  %113 = and i64 %112, 1
  %114 = icmp eq i32 %106, 1
  br i1 %114, label %144, label %115

115:                                              ; preds = %111
  %116 = sub nsw i64 %112, %113
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i64 [ 0, %115 ], [ %141, %117 ]
  %119 = phi i64 [ %23, %115 ], [ %140, %117 ]
  %120 = phi i64 [ 98, %115 ], [ %139, %117 ]
  %121 = phi i64 [ %116, %115 ], [ %142, %117 ]
  %122 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 3, i64 %118, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = sub nsw i64 %23, %123
  %125 = icmp slt i64 %124, 0
  %126 = sub nsw i64 0, %124
  %127 = select i1 %125, i64 %126, i64 %124
  %128 = icmp slt i64 %127, %120
  %129 = select i1 %128, i64 %127, i64 %120
  %130 = select i1 %128, i64 %123, i64 %119
  %131 = or i64 %118, 1
  %132 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 3, i64 %131, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = sub nsw i64 %23, %133
  %135 = icmp slt i64 %134, 0
  %136 = sub nsw i64 0, %134
  %137 = select i1 %135, i64 %136, i64 %134
  %138 = icmp slt i64 %137, %129
  %139 = select i1 %138, i64 %137, i64 %129
  %140 = select i1 %138, i64 %133, i64 %130
  %141 = add nuw nsw i64 %118, 2
  %142 = add i64 %121, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %117

144:                                              ; preds = %117, %111
  %145 = phi i64 [ undef, %111 ], [ %140, %117 ]
  %146 = phi i64 [ 0, %111 ], [ %141, %117 ]
  %147 = phi i64 [ %23, %111 ], [ %140, %117 ]
  %148 = phi i64 [ 98, %111 ], [ %139, %117 ]
  %149 = icmp eq i64 %113, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %struct.AF_LatinMetricsRec_, %struct.AF_LatinMetricsRec_* %9, i64 0, i32 2, i64 %10, i32 3, i64 %146, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = sub nsw i64 %23, %152
  %154 = icmp slt i64 %153, 0
  %155 = sub nsw i64 0, %153
  %156 = select i1 %154, i64 %155, i64 %153
  %157 = icmp slt i64 %156, %148
  %158 = select i1 %157, i64 %152, i64 %147
  br label %159

159:                                              ; preds = %144, %150
  %160 = phi i64 [ %145, %144 ], [ %158, %150 ]
  %161 = add nsw i64 %160, 32
  %162 = and i64 %161, -64
  %163 = icmp sgt i64 %160, %23
  br i1 %163, label %170, label %164

164:                                              ; preds = %159, %108
  %165 = phi i64 [ %110, %108 ], [ %162, %159 ]
  %166 = phi i64 [ %23, %108 ], [ %160, %159 ]
  %167 = or i64 %165, 48
  %168 = icmp sgt i64 %167, %23
  %169 = select i1 %168, i64 %166, i64 %23
  br label %174

170:                                              ; preds = %159
  %171 = add nsw i64 %162, -48
  %172 = icmp slt i64 %171, %23
  %173 = select i1 %172, i64 %160, i64 %23
  br label %174

174:                                              ; preds = %170, %164
  %175 = phi i64 [ %169, %164 ], [ %173, %170 ]
  br i1 %11, label %176, label %181

176:                                              ; preds = %174
  %177 = icmp sgt i64 %175, 63
  br i1 %177, label %178, label %212

178:                                              ; preds = %176
  %179 = add nuw nsw i64 %175, 16
  %180 = and i64 %179, -64
  br label %212

181:                                              ; preds = %174
  %182 = and i32 %13, 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %181
  %185 = icmp slt i64 %175, 64
  br i1 %185, label %212, label %186

186:                                              ; preds = %184
  %187 = add nuw nsw i64 %175, 32
  %188 = and i64 %187, -64
  br label %212

189:                                              ; preds = %181
  %190 = icmp slt i64 %175, 48
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = add nsw i64 %175, 64
  %193 = ashr i64 %192, 1
  br label %212

194:                                              ; preds = %189
  %195 = icmp slt i64 %175, 128
  br i1 %195, label %196, label %209

196:                                              ; preds = %194
  %197 = add nuw nsw i64 %175, 22
  %198 = and i64 %197, -64
  %199 = sub nsw i64 %198, %23
  %200 = icmp slt i64 %199, 0
  %201 = sub nsw i64 0, %199
  %202 = select i1 %200, i64 %201, i64 %199
  %203 = icmp sgt i64 %202, 15
  br i1 %203, label %204, label %212

204:                                              ; preds = %196
  %205 = icmp slt i64 %23, 48
  br i1 %205, label %206, label %212

206:                                              ; preds = %204
  %207 = add nuw nsw i64 %23, 64
  %208 = lshr i64 %207, 1
  br label %212

209:                                              ; preds = %194
  %210 = add nuw nsw i64 %175, 32
  %211 = and i64 %210, -64
  br label %212

212:                                              ; preds = %67, %178, %191, %209, %186, %176, %184, %204, %206, %196, %54, %59, %65, %99, %35, %30
  %213 = phi i64 [ %23, %30 ], [ %42, %35 ], [ %56, %54 ], [ %66, %65 ], [ %103, %99 ], [ %42, %59 ], [ %180, %178 ], [ %188, %186 ], [ %193, %191 ], [ %211, %209 ], [ 64, %176 ], [ 64, %184 ], [ %208, %206 ], [ %23, %204 ], [ %198, %196 ], [ %70, %67 ]
  %214 = icmp sgt i64 %2, -1
  %215 = sub nsw i64 0, %213
  %216 = select i1 %214, i64 %213, i64 %215
  br label %217

217:                                              ; preds = %6, %16, %212
  %218 = phi i64 [ %216, %212 ], [ %2, %16 ], [ %2, %6 ]
  ret i64 %218
}

declare i32 @FT_Matrix_Invert(%struct.FT_Matrix_*) local_unnamed_addr #5

declare void @FT_Vector_Transform(%struct.FT_Vector_*, %struct.FT_Matrix_*) local_unnamed_addr #5

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #5

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #5

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @af_face_globals_new(%struct.FT_FaceRec_*, %struct.AF_FaceGlobalsRec_** nocapture, %struct.AF_ModuleRec_*) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 -1431655766, i32* %6, align 4
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 1
  %13 = add i64 %12, 800
  %14 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %9, i64 %13, i32* nonnull %6) #10
  %15 = load i32, i32* %6, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %356

17:                                               ; preds = %3
  %18 = bitcast i8* %14 to %struct.AF_FaceGlobalsRec_*
  %19 = bitcast i8* %14 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %0, %struct.FT_FaceRec_** %19, align 8
  %20 = load i64, i64* %10, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %14, i64 800
  %24 = getelementptr inbounds i8, i8* %14, i64 16
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 792
  %27 = bitcast i8* %26 to %struct.AF_ModuleRec_**
  store %struct.AF_ModuleRec_* %2, %struct.AF_ModuleRec_** %27, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 744
  %29 = bitcast i8* %28 to i16*
  store i16 0, i16* %29, align 8
  %30 = getelementptr inbounds i8, i8* %14, i64 752
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false)
  %31 = call %struct.hb_font_t* @hb_ft_font_create(%struct.FT_FaceRec_* %0, void (i8*)* null) #10
  %32 = getelementptr inbounds i8, i8* %14, i64 24
  %33 = bitcast i8* %32 to %struct.hb_font_t**
  store %struct.hb_font_t* %31, %struct.hb_font_t** %33, align 8
  %34 = call %struct.hb_buffer_t* @hb_buffer_create() #10
  %35 = getelementptr inbounds i8, i8* %14, i64 32
  %36 = bitcast i8* %35 to %struct.hb_buffer_t**
  store %struct.hb_buffer_t* %34, %struct.hb_buffer_t** %36, align 8
  %37 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %19, align 8
  %38 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %37, i64 0, i32 23
  %39 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %38, align 8
  %40 = bitcast i8* %24 to i16**
  %41 = load i16*, i16** %40, align 8
  %42 = load i64, i64* %22, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %17, %45
  %46 = phi i64 [ %48, %45 ], [ 0, %17 ]
  %47 = getelementptr inbounds i16, i16* %41, i64 %46
  store i16 16383, i16* %47, align 2
  %48 = add nuw nsw i64 %46, 1
  %49 = load i64, i64* %22, align 8
  %50 = and i64 %49, 4294967295
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %17
  %53 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %37, i32 1970170211) #10
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %229

55:                                               ; preds = %52
  %56 = bitcast i32* %4 to i8*
  %57 = bitcast i32* %5 to i8*
  br label %58

58:                                               ; preds = %191, %55
  %59 = phi i64 [ 0, %55 ], [ %193, %191 ]
  %60 = phi %struct.AF_StyleClassRec_* [ @af_adlm_dflt_style_class, %55 ], [ %196, %191 ]
  %61 = phi i32 [ -1, %55 ], [ %192, %191 ]
  %62 = phi i32 [ 0, %55 ], [ %194, %191 ]
  %63 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %60, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [61 x %struct.AF_ScriptClassRec_*], [61 x %struct.AF_ScriptClassRec_*]* @af_script_classes, i64 0, i64 %65
  %67 = load %struct.AF_ScriptClassRec_*, %struct.AF_ScriptClassRec_** %66, align 8
  %68 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %67, i64 0, i32 1
  %69 = load %struct.AF_Script_UniRangeRec_*, %struct.AF_Script_UniRangeRec_** %68, align 8
  %70 = icmp eq %struct.AF_Script_UniRangeRec_* %69, null
  br i1 %70, label %191, label %71

71:                                               ; preds = %58
  %72 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %60, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 10
  br i1 %74, label %75, label %189

75:                                               ; preds = %71
  %76 = load %struct.AF_ModuleRec_*, %struct.AF_ModuleRec_** %27, align 8
  %77 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %64, %78
  %80 = trunc i64 %59 to i32
  %81 = select i1 %79, i32 %80, i32 %61
  %82 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %69, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %133, label %85

85:                                               ; preds = %75
  %86 = trunc i32 %62 to i16
  br label %87

87:                                               ; preds = %128, %85
  %88 = phi i32 [ %83, %85 ], [ %131, %128 ]
  %89 = phi %struct.AF_Script_UniRangeRec_* [ %69, %85 ], [ %129, %128 ]
  %90 = zext i32 %88 to i64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #10
  store i32 -1431655766, i32* %4, align 4
  %91 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 %90) #10
  store i32 %91, i32* %4, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = zext i32 %91 to i64
  %95 = load i64, i64* %22, align 8
  %96 = icmp ugt i64 %95, %94
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = getelementptr inbounds i16, i16* %41, i64 %94
  %99 = load i16, i16* %98, align 2
  %100 = and i16 %99, 16383
  %101 = icmp eq i16 %100, 16383
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  store i16 %86, i16* %98, align 2
  br label %103

103:                                              ; preds = %102, %97, %93, %87
  %104 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %89, i64 0, i32 1
  %105 = call i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* %37, i64 %90, i32* nonnull %4) #10
  %106 = load i32, i32* %4, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %128, label %108

108:                                              ; preds = %103, %124
  %109 = phi i32 [ %126, %124 ], [ %106, %103 ]
  %110 = phi i64 [ %125, %124 ], [ %105, %103 ]
  %111 = load i32, i32* %104, align 4
  %112 = zext i32 %111 to i64
  %113 = icmp ugt i64 %110, %112
  br i1 %113, label %128, label %114

114:                                              ; preds = %108
  %115 = zext i32 %109 to i64
  %116 = load i64, i64* %22, align 8
  %117 = icmp ugt i64 %116, %115
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = getelementptr inbounds i16, i16* %41, i64 %115
  %120 = load i16, i16* %119, align 2
  %121 = and i16 %120, 16383
  %122 = icmp eq i16 %121, 16383
  br i1 %122, label %123, label %124

123:                                              ; preds = %118
  store i16 %86, i16* %119, align 2
  br label %124

124:                                              ; preds = %123, %118, %114
  %125 = call i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* %37, i64 %110, i32* nonnull %4) #10
  %126 = load i32, i32* %4, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %108

128:                                              ; preds = %124, %108, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #10
  %129 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %89, i64 1
  %130 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %129, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %87

133:                                              ; preds = %128, %75
  %134 = getelementptr inbounds %struct.AF_ScriptClassRec_, %struct.AF_ScriptClassRec_* %67, i64 0, i32 2
  %135 = load %struct.AF_Script_UniRangeRec_*, %struct.AF_Script_UniRangeRec_** %134, align 8
  %136 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %191, label %139

139:                                              ; preds = %133
  %140 = trunc i32 %62 to i16
  br label %141

141:                                              ; preds = %184, %139
  %142 = phi i32 [ %137, %139 ], [ %187, %184 ]
  %143 = phi %struct.AF_Script_UniRangeRec_* [ %135, %139 ], [ %185, %184 ]
  %144 = zext i32 %142 to i64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #10
  store i32 -1431655766, i32* %5, align 4
  %145 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 %144) #10
  store i32 %145, i32* %5, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %141
  %148 = zext i32 %145 to i64
  %149 = load i64, i64* %22, align 8
  %150 = icmp ugt i64 %149, %148
  br i1 %150, label %151, label %158

151:                                              ; preds = %147
  %152 = getelementptr inbounds i16, i16* %41, i64 %148
  %153 = load i16, i16* %152, align 2
  %154 = and i16 %153, 16383
  %155 = icmp eq i16 %154, %140
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = or i16 %153, 16384
  store i16 %157, i16* %152, align 2
  br label %158

158:                                              ; preds = %156, %151, %147, %141
  %159 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %143, i64 0, i32 1
  %160 = call i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* %37, i64 %144, i32* nonnull %5) #10
  %161 = load i32, i32* %5, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %184, label %163

163:                                              ; preds = %158, %180
  %164 = phi i32 [ %182, %180 ], [ %161, %158 ]
  %165 = phi i64 [ %181, %180 ], [ %160, %158 ]
  %166 = load i32, i32* %159, align 4
  %167 = zext i32 %166 to i64
  %168 = icmp ugt i64 %165, %167
  br i1 %168, label %184, label %169

169:                                              ; preds = %163
  %170 = zext i32 %164 to i64
  %171 = load i64, i64* %22, align 8
  %172 = icmp ugt i64 %171, %170
  br i1 %172, label %173, label %180

173:                                              ; preds = %169
  %174 = getelementptr inbounds i16, i16* %41, i64 %170
  %175 = load i16, i16* %174, align 2
  %176 = and i16 %175, 16383
  %177 = icmp eq i16 %176, %140
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = or i16 %175, 16384
  store i16 %179, i16* %174, align 2
  br label %180

180:                                              ; preds = %178, %173, %169
  %181 = call i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* %37, i64 %165, i32* nonnull %5) #10
  %182 = load i32, i32* %5, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %163

184:                                              ; preds = %180, %163, %158
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #10
  %185 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %143, i64 1
  %186 = getelementptr inbounds %struct.AF_Script_UniRangeRec_, %struct.AF_Script_UniRangeRec_* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %191, label %141

189:                                              ; preds = %71
  %190 = call i32 @af_shaper_get_coverage(%struct.AF_FaceGlobalsRec_* %18, %struct.AF_StyleClassRec_* %60, i16* %41, i8 zeroext 0) #10
  br label %191

191:                                              ; preds = %184, %189, %133, %58
  %192 = phi i32 [ %61, %58 ], [ %61, %189 ], [ %81, %133 ], [ %81, %184 ]
  %193 = add nuw nsw i64 %59, 1
  %194 = add nuw nsw i32 %62, 1
  %195 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %193
  %196 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %195, align 8
  %197 = icmp eq i64 %193, 87
  br i1 %197, label %198, label %58

198:                                              ; preds = %191, %206
  %199 = phi i64 [ %207, %206 ], [ 0, %191 ]
  %200 = phi %struct.AF_StyleClassRec_* [ %209, %206 ], [ @af_adlm_dflt_style_class, %191 ]
  %201 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %200, i64 0, i32 4
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 10
  br i1 %203, label %204, label %206

204:                                              ; preds = %198
  %205 = call i32 @af_shaper_get_coverage(%struct.AF_FaceGlobalsRec_* %18, %struct.AF_StyleClassRec_* %200, i16* %41, i8 zeroext 0) #10
  br label %206

206:                                              ; preds = %204, %198
  %207 = add nuw nsw i64 %199, 1
  %208 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %207
  %209 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %208, align 8
  %210 = icmp eq i64 %207, 87
  br i1 %210, label %211, label %198

211:                                              ; preds = %206
  %212 = zext i32 %192 to i64
  %213 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %212
  %214 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %213, align 8
  %215 = call i32 @af_shaper_get_coverage(%struct.AF_FaceGlobalsRec_* %18, %struct.AF_StyleClassRec_* %214, i16* %41, i8 zeroext 1) #10
  %216 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 48) #10
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %211
  %219 = zext i32 %216 to i64
  %220 = load i64, i64* %22, align 8
  %221 = icmp ugt i64 %220, %219
  br i1 %221, label %222, label %226

222:                                              ; preds = %218
  %223 = getelementptr inbounds i16, i16* %41, i64 %219
  %224 = load i16, i16* %223, align 2
  %225 = or i16 %224, -32768
  store i16 %225, i16* %223, align 2
  br label %226

226:                                              ; preds = %222, %218, %211
  %227 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 49) #10
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %264, label %256

229:                                              ; preds = %348, %344, %341, %52
  %230 = load %struct.AF_ModuleRec_*, %struct.AF_ModuleRec_** %27, align 8
  %231 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %230, i64 0, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 16383
  br i1 %233, label %352, label %234

234:                                              ; preds = %229
  %235 = load i64, i64* %22, align 8
  %236 = icmp sgt i64 %235, 0
  br i1 %236, label %237, label %352

237:                                              ; preds = %234, %252
  %238 = phi i64 [ %253, %252 ], [ %235, %234 ]
  %239 = phi i64 [ %254, %252 ], [ 0, %234 ]
  %240 = getelementptr inbounds i16, i16* %41, i64 %239
  %241 = load i16, i16* %240, align 2
  %242 = and i16 %241, 16383
  %243 = icmp eq i16 %242, 16383
  br i1 %243, label %244, label %252

244:                                              ; preds = %237
  %245 = and i16 %241, -16384
  store i16 %245, i16* %240, align 2
  %246 = load %struct.AF_ModuleRec_*, %struct.AF_ModuleRec_** %27, align 8
  %247 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %246, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = trunc i32 %248 to i16
  %250 = or i16 %245, %249
  store i16 %250, i16* %240, align 2
  %251 = load i64, i64* %22, align 8
  br label %252

252:                                              ; preds = %244, %237
  %253 = phi i64 [ %238, %237 ], [ %251, %244 ]
  %254 = add nuw nsw i64 %239, 1
  %255 = icmp slt i64 %254, %253
  br i1 %255, label %237, label %352

256:                                              ; preds = %226
  %257 = zext i32 %227 to i64
  %258 = load i64, i64* %22, align 8
  %259 = icmp ugt i64 %258, %257
  br i1 %259, label %260, label %264

260:                                              ; preds = %256
  %261 = getelementptr inbounds i16, i16* %41, i64 %257
  %262 = load i16, i16* %261, align 2
  %263 = or i16 %262, -32768
  store i16 %263, i16* %261, align 2
  br label %264

264:                                              ; preds = %260, %256, %226
  %265 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 50) #10
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %264
  %268 = zext i32 %265 to i64
  %269 = load i64, i64* %22, align 8
  %270 = icmp ugt i64 %269, %268
  br i1 %270, label %271, label %275

271:                                              ; preds = %267
  %272 = getelementptr inbounds i16, i16* %41, i64 %268
  %273 = load i16, i16* %272, align 2
  %274 = or i16 %273, -32768
  store i16 %274, i16* %272, align 2
  br label %275

275:                                              ; preds = %271, %267, %264
  %276 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 51) #10
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %286, label %278

278:                                              ; preds = %275
  %279 = zext i32 %276 to i64
  %280 = load i64, i64* %22, align 8
  %281 = icmp ugt i64 %280, %279
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = getelementptr inbounds i16, i16* %41, i64 %279
  %284 = load i16, i16* %283, align 2
  %285 = or i16 %284, -32768
  store i16 %285, i16* %283, align 2
  br label %286

286:                                              ; preds = %282, %278, %275
  %287 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 52) #10
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %297, label %289

289:                                              ; preds = %286
  %290 = zext i32 %287 to i64
  %291 = load i64, i64* %22, align 8
  %292 = icmp ugt i64 %291, %290
  br i1 %292, label %293, label %297

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %41, i64 %290
  %295 = load i16, i16* %294, align 2
  %296 = or i16 %295, -32768
  store i16 %296, i16* %294, align 2
  br label %297

297:                                              ; preds = %293, %289, %286
  %298 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 53) #10
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %308, label %300

300:                                              ; preds = %297
  %301 = zext i32 %298 to i64
  %302 = load i64, i64* %22, align 8
  %303 = icmp ugt i64 %302, %301
  br i1 %303, label %304, label %308

304:                                              ; preds = %300
  %305 = getelementptr inbounds i16, i16* %41, i64 %301
  %306 = load i16, i16* %305, align 2
  %307 = or i16 %306, -32768
  store i16 %307, i16* %305, align 2
  br label %308

308:                                              ; preds = %304, %300, %297
  %309 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 54) #10
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %319, label %311

311:                                              ; preds = %308
  %312 = zext i32 %309 to i64
  %313 = load i64, i64* %22, align 8
  %314 = icmp ugt i64 %313, %312
  br i1 %314, label %315, label %319

315:                                              ; preds = %311
  %316 = getelementptr inbounds i16, i16* %41, i64 %312
  %317 = load i16, i16* %316, align 2
  %318 = or i16 %317, -32768
  store i16 %318, i16* %316, align 2
  br label %319

319:                                              ; preds = %315, %311, %308
  %320 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 55) #10
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %319
  %323 = zext i32 %320 to i64
  %324 = load i64, i64* %22, align 8
  %325 = icmp ugt i64 %324, %323
  br i1 %325, label %326, label %330

326:                                              ; preds = %322
  %327 = getelementptr inbounds i16, i16* %41, i64 %323
  %328 = load i16, i16* %327, align 2
  %329 = or i16 %328, -32768
  store i16 %329, i16* %327, align 2
  br label %330

330:                                              ; preds = %326, %322, %319
  %331 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 56) #10
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %341, label %333

333:                                              ; preds = %330
  %334 = zext i32 %331 to i64
  %335 = load i64, i64* %22, align 8
  %336 = icmp ugt i64 %335, %334
  br i1 %336, label %337, label %341

337:                                              ; preds = %333
  %338 = getelementptr inbounds i16, i16* %41, i64 %334
  %339 = load i16, i16* %338, align 2
  %340 = or i16 %339, -32768
  store i16 %340, i16* %338, align 2
  br label %341

341:                                              ; preds = %337, %333, %330
  %342 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %37, i64 57) #10
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %229, label %344

344:                                              ; preds = %341
  %345 = zext i32 %342 to i64
  %346 = load i64, i64* %22, align 8
  %347 = icmp ugt i64 %346, %345
  br i1 %347, label %348, label %229

348:                                              ; preds = %344
  %349 = getelementptr inbounds i16, i16* %41, i64 %345
  %350 = load i16, i16* %349, align 2
  %351 = or i16 %350, -32768
  store i16 %351, i16* %349, align 2
  br label %229

352:                                              ; preds = %252, %229, %234
  %353 = call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %37, %struct.FT_CharMapRec_* %39) #10
  store i32 0, i32* %6, align 4
  %354 = getelementptr inbounds i8, i8* %14, i64 40
  %355 = bitcast i8* %354 to i32*
  store i32 0, i32* %355, align 8
  br label %356

356:                                              ; preds = %3, %352
  %357 = phi i32 [ %15, %3 ], [ 0, %352 ]
  %358 = bitcast %struct.AF_FaceGlobalsRec_** %1 to i8**
  store i8* %14, i8** %358, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  ret i32 %357
}

; Function Attrs: nounwind ssp uwtable
define internal void @af_face_globals_free(%struct.AF_FaceGlobalsRec_*) #0 {
  %2 = icmp eq %struct.AF_FaceGlobalsRec_* %0, null
  br i1 %2, label %39, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  br label %8

8:                                                ; preds = %30, %3
  %9 = phi i64 [ 0, %3 ], [ %31, %30 ]
  %10 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 6, i64 %9
  %11 = load %struct.AF_StyleMetricsRec_*, %struct.AF_StyleMetricsRec_** %10, align 8
  %12 = icmp eq %struct.AF_StyleMetricsRec_* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = bitcast %struct.AF_StyleMetricsRec_* %11 to i8*
  %15 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %9
  %16 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %15, align 8
  %17 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [5 x %struct.AF_WritingSystemClassRec_*], [5 x %struct.AF_WritingSystemClassRec_*]* @af_writing_system_classes, i64 0, i64 %19
  %21 = load %struct.AF_WritingSystemClassRec_*, %struct.AF_WritingSystemClassRec_** %20, align 8
  %22 = getelementptr inbounds %struct.AF_WritingSystemClassRec_, %struct.AF_WritingSystemClassRec_* %21, i64 0, i32 4
  %23 = load void (%struct.AF_StyleMetricsRec_*)*, void (%struct.AF_StyleMetricsRec_*)** %22, align 8
  %24 = icmp eq void (%struct.AF_StyleMetricsRec_*)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %13
  tail call void %23(%struct.AF_StyleMetricsRec_* nonnull %11) #10
  %26 = bitcast %struct.AF_StyleMetricsRec_** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %13, %25
  %29 = phi i8* [ %27, %25 ], [ %14, %13 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %29) #10
  store %struct.AF_StyleMetricsRec_* null, %struct.AF_StyleMetricsRec_** %10, align 8
  br label %30

30:                                               ; preds = %8, %28
  %31 = add nuw nsw i64 %9, 1
  %32 = icmp eq i64 %31, 87
  br i1 %32, label %33, label %8

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 3
  %35 = load %struct.hb_font_t*, %struct.hb_font_t** %34, align 8
  tail call void @hb_font_destroy(%struct.hb_font_t* %35) #10
  %36 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %0, i64 0, i32 4
  %37 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %36, align 8
  tail call void @hb_buffer_destroy(%struct.hb_buffer_t* %37) #10
  %38 = bitcast %struct.AF_FaceGlobalsRec_* %0 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* nonnull %38) #10
  br label %39

39:                                               ; preds = %1, %33
  ret void
}

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #5

declare %struct.hb_font_t* @hb_ft_font_create(%struct.FT_FaceRec_*, void (i8*)*) local_unnamed_addr #5

declare i64 @FT_Get_Next_Char(%struct.FT_FaceRec_*, i64, i32*) local_unnamed_addr #5

declare void @hb_font_destroy(%struct.hb_font_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @af_loader_compute_darkening(%struct.AF_LoaderRec_* nocapture readonly, %struct.FT_FaceRec_* nocapture readonly, i64) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AF_LoaderRec_, %struct.AF_LoaderRec_* %0, i64 0, i32 1
  %5 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %4, align 8
  %6 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %5, i64 0, i32 13
  %7 = load %struct.AF_ModuleRec_*, %struct.AF_ModuleRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 22
  %9 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %9, i64 0, i32 2, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = icmp ult i16 %11, 4
  %13 = zext i16 %11 to i64
  %14 = shl nuw nsw i64 %13, 16
  %15 = select i1 %12, i64 262144, i64 %14
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i64
  %19 = shl nuw nsw i64 %18, 16
  %20 = tail call i64 @FT_DivFix(i64 65536000, i64 %19) #10
  %21 = icmp slt i64 %20, 655
  br i1 %21, label %154, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 4
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 6
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %7, i64 0, i32 4, i64 7
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i64 %2, 1
  br i1 %39, label %52, label %40

40:                                               ; preds = %22
  %41 = trunc i64 %2 to i32
  %42 = shl i32 %41, 16
  %43 = sext i32 %42 to i64
  %44 = shl i64 %20, 32
  %45 = ashr exact i64 %44, 32
  %46 = mul nsw i64 %45, %43
  %47 = ashr i64 %46, 63
  %48 = or i64 %46, 32768
  %49 = add nsw i64 %48, %47
  %50 = shl i64 %49, 16
  %51 = ashr i64 %50, 32
  br label %52

52:                                               ; preds = %22, %40
  %53 = phi i64 [ %51, %40 ], [ 4915200, %22 ]
  %54 = trunc i64 %53 to i32
  %55 = tail call i32 @llvm.ctlz.i32(i32 %54, i1 true), !range !8
  %56 = xor i32 %55, 31
  %57 = trunc i64 %15 to i32
  %58 = tail call i32 @llvm.ctlz.i32(i32 %57, i1 true), !range !8
  %59 = xor i32 %58, 31
  %60 = add nuw nsw i32 %56, %59
  %61 = icmp ugt i32 %60, 45
  br i1 %61, label %62, label %65

62:                                               ; preds = %52
  %63 = shl i32 %36, 16
  %64 = zext i32 %63 to i64
  br label %74

65:                                               ; preds = %52
  %66 = shl nuw i64 %15, 32
  %67 = ashr exact i64 %66, 32
  %68 = mul nsw i64 %53, %67
  %69 = ashr i64 %68, 63
  %70 = or i64 %68, 32768
  %71 = add nsw i64 %70, %69
  %72 = shl i64 %71, 16
  %73 = ashr i64 %72, 32
  br label %74

74:                                               ; preds = %65, %62
  %75 = phi i64 [ %64, %62 ], [ %73, %65 ]
  %76 = shl i32 %24, 16
  %77 = zext i32 %76 to i64
  %78 = icmp slt i64 %75, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = shl i32 %26, 16
  %81 = zext i32 %80 to i64
  %82 = tail call i64 @FT_DivFix(i64 %81, i64 %15) #10
  br label %151

83:                                               ; preds = %74
  %84 = shl i32 %28, 16
  %85 = zext i32 %84 to i64
  %86 = icmp slt i64 %75, %85
  br i1 %86, label %87, label %103

87:                                               ; preds = %83
  %88 = sub nsw i32 %28, %24
  %89 = tail call i64 @FT_DivFix(i64 %77, i64 %15) #10
  %90 = icmp eq i32 %88, 0
  br i1 %90, label %107, label %91

91:                                               ; preds = %87
  %92 = sub nsw i64 %53, %89
  %93 = sub nsw i32 %30, %26
  %94 = shl i64 %92, 32
  %95 = ashr exact i64 %94, 32
  %96 = sext i32 %93 to i64
  %97 = sext i32 %88 to i64
  %98 = tail call i64 @FT_MulDiv(i64 %95, i64 %96, i64 %97) #10
  %99 = shl i32 %26, 16
  %100 = zext i32 %99 to i64
  %101 = tail call i64 @FT_DivFix(i64 %100, i64 %15) #10
  %102 = add nsw i64 %101, %98
  br label %151

103:                                              ; preds = %83
  %104 = shl i32 %32, 16
  %105 = zext i32 %104 to i64
  %106 = icmp slt i64 %75, %105
  br i1 %106, label %107, label %126

107:                                              ; preds = %87, %103
  %108 = sub nsw i32 %32, %28
  %109 = tail call i64 @FT_DivFix(i64 %85, i64 %15) #10
  %110 = icmp eq i32 %108, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = shl i32 %32, 16
  %113 = zext i32 %112 to i64
  br label %130

114:                                              ; preds = %107
  %115 = sub nsw i64 %53, %109
  %116 = sub nsw i32 %34, %30
  %117 = shl i64 %115, 32
  %118 = ashr exact i64 %117, 32
  %119 = sext i32 %116 to i64
  %120 = sext i32 %108 to i64
  %121 = tail call i64 @FT_MulDiv(i64 %118, i64 %119, i64 %120) #10
  %122 = shl i32 %30, 16
  %123 = zext i32 %122 to i64
  %124 = tail call i64 @FT_DivFix(i64 %123, i64 %15) #10
  %125 = add nsw i64 %124, %121
  br label %151

126:                                              ; preds = %103
  %127 = shl i32 %36, 16
  %128 = zext i32 %127 to i64
  %129 = icmp slt i64 %75, %128
  br i1 %129, label %130, label %147

130:                                              ; preds = %111, %126
  %131 = phi i64 [ %113, %111 ], [ %105, %126 ]
  %132 = sub nsw i32 %36, %32
  %133 = tail call i64 @FT_DivFix(i64 %131, i64 %15) #10
  %134 = icmp eq i32 %132, 0
  br i1 %134, label %147, label %135

135:                                              ; preds = %130
  %136 = sub nsw i64 %53, %133
  %137 = sub nsw i32 %38, %34
  %138 = shl i64 %136, 32
  %139 = ashr exact i64 %138, 32
  %140 = sext i32 %137 to i64
  %141 = sext i32 %132 to i64
  %142 = tail call i64 @FT_MulDiv(i64 %139, i64 %140, i64 %141) #10
  %143 = shl i32 %34, 16
  %144 = zext i32 %143 to i64
  %145 = tail call i64 @FT_DivFix(i64 %144, i64 %15) #10
  %146 = add nsw i64 %145, %142
  br label %151

147:                                              ; preds = %130, %126
  %148 = shl i32 %38, 16
  %149 = zext i32 %148 to i64
  %150 = tail call i64 @FT_DivFix(i64 %149, i64 %15) #10
  br label %151

151:                                              ; preds = %135, %114, %91, %147, %79
  %152 = phi i64 [ %82, %79 ], [ %150, %147 ], [ %102, %91 ], [ %125, %114 ], [ %146, %135 ]
  %153 = tail call i64 @FT_DivFix(i64 %152, i64 %20) #10
  br label %154

154:                                              ; preds = %3, %151
  %155 = phi i64 [ %153, %151 ], [ 0, %3 ]
  ret i64 %155
}

declare i32 @FT_Outline_EmboldenXY(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_property_set(%struct.FT_ModuleRec_*, i8* nocapture readonly, i8*, i8 zeroext) #0 {
  %5 = alloca %struct.AF_FaceGlobalsRec_*, align 8
  %6 = alloca [8 x i32], align 16
  %7 = alloca i8*, align 8
  %8 = bitcast %struct.FT_ModuleRec_* %0 to %struct.AF_ModuleRec_*
  %9 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.179, i64 0, i64 0)) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %4
  %12 = icmp eq i8 %3, 0
  br i1 %12, label %13, label %176

13:                                               ; preds = %11
  %14 = bitcast i8* %2 to i32*
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %237, %13
  %17 = phi i64 [ 0, %13 ], [ %238, %237 ]
  %18 = phi %struct.AF_StyleClassRec_* [ @af_adlm_dflt_style_class, %13 ], [ %240, %237 ]
  %19 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %15
  br i1 %21, label %22, label %31

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %18, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %233, %22
  %27 = phi i64 [ %17, %22 ], [ %32, %233 ]
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1
  %30 = bitcast %struct.FT_ModuleRec_* %29 to i32*
  store i32 %28, i32* %30, align 8
  ret i32 0

31:                                               ; preds = %22, %16
  %32 = or i64 %17, 1
  %33 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %32
  %34 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %33, align 8
  %35 = icmp eq i64 %32, 87
  br i1 %35, label %176, label %229

36:                                               ; preds = %4
  %37 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.180, i64 0, i64 0)) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = icmp eq i8 %3, 0
  br i1 %40, label %41, label %176

41:                                               ; preds = %39
  %42 = bitcast i8* %2 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %8, i64 0, i32 2
  store i32 %43, i32* %44, align 4
  br label %176

45:                                               ; preds = %36
  %46 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.181, i64 0, i64 0)) #11
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %79

48:                                               ; preds = %45
  %49 = icmp eq i8 %3, 0
  br i1 %49, label %50, label %176

50:                                               ; preds = %48
  %51 = bitcast i8* %2 to %struct.FT_FaceRec_**
  %52 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %51, align 8
  %53 = bitcast %struct.AF_FaceGlobalsRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  store %struct.AF_FaceGlobalsRec_* inttoptr (i64 -6148914691236517206 to %struct.AF_FaceGlobalsRec_*), %struct.AF_FaceGlobalsRec_** %5, align 8
  %54 = icmp eq %struct.FT_FaceRec_* %52, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %52, i64 0, i32 28
  %57 = bitcast %struct.FT_Generic_* %56 to %struct.AF_FaceGlobalsRec_**
  %58 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %57, align 8
  store %struct.AF_FaceGlobalsRec_* %58, %struct.AF_FaceGlobalsRec_** %5, align 8
  %59 = icmp eq %struct.AF_FaceGlobalsRec_* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = ptrtoint %struct.AF_FaceGlobalsRec_* %58 to i64
  br label %72

62:                                               ; preds = %55
  %63 = call fastcc i32 @af_face_globals_new(%struct.FT_FaceRec_* nonnull %52, %struct.AF_FaceGlobalsRec_** nonnull %5, %struct.AF_ModuleRec_* %8) #10
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %62
  %66 = bitcast %struct.AF_FaceGlobalsRec_** %5 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %struct.FT_Generic_* %56 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %52, i64 0, i32 28, i32 1
  store void (i8*)* bitcast (void (%struct.AF_FaceGlobalsRec_*)* @af_face_globals_free to void (i8*)*), void (i8*)** %69, align 8
  br label %72

70:                                               ; preds = %50, %62
  %71 = phi i32 [ 35, %50 ], [ %63, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %176

72:                                               ; preds = %65, %60
  %73 = phi i64 [ %67, %65 ], [ %61, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  %74 = getelementptr inbounds i8, i8* %2, i64 8
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = inttoptr i64 %73 to %struct.AF_FaceGlobalsRec_*
  %78 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %77, i64 0, i32 5
  store i32 %76, i32* %78, align 8
  br label %176

79:                                               ; preds = %45
  %80 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i64 0, i64 0)) #11
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %161

82:                                               ; preds = %79
  %83 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #10
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %85 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %86 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %87 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %88 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %89 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %91 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %92 = icmp eq i8 %3, 0
  %93 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 -86, i64 32, i1 false)
  br i1 %92, label %115, label %94

94:                                               ; preds = %82
  %95 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %96 = call i64 @strtol(i8* %2, i8** nonnull %7, i32 10) #10
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %84, align 16
  %98 = load i8*, i8** %7, align 8
  %99 = load i8, i8* %98, align 1
  %100 = icmp ne i8 %99, 44
  %101 = icmp eq i8* %98, %2
  %102 = or i1 %101, %100
  br i1 %102, label %112, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds i8, i8* %98, i64 1
  %105 = call i64 @strtol(i8* %104, i8** nonnull %7, i32 10) #10
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %85, align 4
  %107 = load i8*, i8** %7, align 8
  %108 = load i8, i8* %107, align 1
  %109 = icmp ne i8 %108, 44
  %110 = icmp eq i8* %104, %107
  %111 = or i1 %110, %109
  br i1 %111, label %112, label %178

112:                                              ; preds = %94, %103, %178, %187, %196, %205, %214, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #10
  br label %159

113:                                              ; preds = %223, %223
  %114 = icmp eq i8* %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #10
  br i1 %114, label %159, label %117

115:                                              ; preds = %82
  %116 = bitcast i8* %2 to i32*
  br label %117

117:                                              ; preds = %113, %115
  %118 = phi i32* [ %84, %113 ], [ %116, %115 ]
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = getelementptr inbounds i32, i32* %118, i64 4
  %122 = bitcast i32* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4
  %124 = extractelement <4 x i32> %123, i32 0
  %125 = extractelement <4 x i32> %123, i32 1
  %126 = extractelement <4 x i32> %123, i32 2
  %127 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = or <4 x i32> %120, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = or <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = or i32 %131, %124
  %133 = or i32 %132, %125
  %134 = or i32 %133, %126
  %135 = extractelement <4 x i32> %123, i32 3
  %136 = or i32 %134, %135
  %137 = icmp slt i32 %136, 0
  %138 = extractelement <4 x i32> %120, i32 0
  %139 = extractelement <4 x i32> %120, i32 2
  %140 = icmp sgt i32 %138, %139
  %141 = or i1 %140, %137
  %142 = icmp sgt i32 %139, %124
  %143 = or i1 %142, %141
  br i1 %143, label %159, label %144

144:                                              ; preds = %117
  %145 = icmp sgt i32 %124, %126
  %146 = shufflevector <4 x i32> %123, <4 x i32> %120, <4 x i32> <i32 3, i32 1, i32 7, i32 5>
  %147 = icmp sgt <4 x i32> %146, <i32 500, i32 500, i32 500, i32 500>
  %148 = shufflevector <4 x i1> %147, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %149 = or <4 x i1> %147, %148
  %150 = shufflevector <4 x i1> %149, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %151 = or <4 x i1> %149, %150
  %152 = extractelement <4 x i1> %151, i32 0
  %153 = or i1 %152, %145
  br i1 %153, label %159, label %154

154:                                              ; preds = %144
  %155 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %8, i64 0, i32 4, i64 0
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %8, i64 0, i32 4, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %158, align 4
  br label %159

159:                                              ; preds = %113, %112, %117, %144, %154
  %160 = phi i32 [ 0, %154 ], [ 6, %113 ], [ 6, %144 ], [ 6, %117 ], [ 6, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #10
  br label %176

161:                                              ; preds = %79
  %162 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i64 0, i64 0)) #11
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %176

164:                                              ; preds = %161
  %165 = icmp eq i8 %3, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %164
  %167 = tail call i64 @strtol(i8* nocapture %2, i8** null, i32 10) #10
  %168 = icmp ne i64 %167, 0
  %169 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1, i32 1
  %170 = bitcast %struct.FT_LibraryRec_** %169 to i8*
  %171 = zext i1 %168 to i8
  store i8 %171, i8* %170, align 8
  br label %176

172:                                              ; preds = %164
  %173 = load i8, i8* %2, align 1
  %174 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1, i32 1
  %175 = bitcast %struct.FT_LibraryRec_** %174 to i8*
  store i8 %173, i8* %175, align 8
  br label %176

176:                                              ; preds = %31, %48, %72, %70, %161, %166, %172, %41, %39, %11, %159
  %177 = phi i32 [ %160, %159 ], [ 6, %11 ], [ 0, %41 ], [ 6, %39 ], [ 0, %172 ], [ 0, %166 ], [ 12, %161 ], [ 6, %48 ], [ %71, %70 ], [ 0, %72 ], [ 6, %31 ]
  ret i32 %177

178:                                              ; preds = %103
  %179 = getelementptr inbounds i8, i8* %107, i64 1
  %180 = call i64 @strtol(i8* %179, i8** nonnull %7, i32 10) #10
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %86, align 8
  %182 = load i8*, i8** %7, align 8
  %183 = load i8, i8* %182, align 1
  %184 = icmp ne i8 %183, 44
  %185 = icmp eq i8* %179, %182
  %186 = or i1 %185, %184
  br i1 %186, label %112, label %187

187:                                              ; preds = %178
  %188 = getelementptr inbounds i8, i8* %182, i64 1
  %189 = call i64 @strtol(i8* %188, i8** nonnull %7, i32 10) #10
  %190 = trunc i64 %189 to i32
  store i32 %190, i32* %87, align 4
  %191 = load i8*, i8** %7, align 8
  %192 = load i8, i8* %191, align 1
  %193 = icmp ne i8 %192, 44
  %194 = icmp eq i8* %188, %191
  %195 = or i1 %194, %193
  br i1 %195, label %112, label %196

196:                                              ; preds = %187
  %197 = getelementptr inbounds i8, i8* %191, i64 1
  %198 = call i64 @strtol(i8* %197, i8** nonnull %7, i32 10) #10
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %88, align 16
  %200 = load i8*, i8** %7, align 8
  %201 = load i8, i8* %200, align 1
  %202 = icmp ne i8 %201, 44
  %203 = icmp eq i8* %197, %200
  %204 = or i1 %203, %202
  br i1 %204, label %112, label %205

205:                                              ; preds = %196
  %206 = getelementptr inbounds i8, i8* %200, i64 1
  %207 = call i64 @strtol(i8* %206, i8** nonnull %7, i32 10) #10
  %208 = trunc i64 %207 to i32
  store i32 %208, i32* %89, align 4
  %209 = load i8*, i8** %7, align 8
  %210 = load i8, i8* %209, align 1
  %211 = icmp ne i8 %210, 44
  %212 = icmp eq i8* %206, %209
  %213 = or i1 %212, %211
  br i1 %213, label %112, label %214

214:                                              ; preds = %205
  %215 = getelementptr inbounds i8, i8* %209, i64 1
  %216 = call i64 @strtol(i8* %215, i8** nonnull %7, i32 10) #10
  %217 = trunc i64 %216 to i32
  store i32 %217, i32* %90, align 8
  %218 = load i8*, i8** %7, align 8
  %219 = load i8, i8* %218, align 1
  %220 = icmp ne i8 %219, 44
  %221 = icmp eq i8* %215, %218
  %222 = or i1 %221, %220
  br i1 %222, label %112, label %223

223:                                              ; preds = %214
  %224 = getelementptr inbounds i8, i8* %218, i64 1
  %225 = call i64 @strtol(i8* %224, i8** nonnull %7, i32 10) #10
  %226 = trunc i64 %225 to i32
  store i32 %226, i32* %91, align 4
  %227 = load i8*, i8** %7, align 8
  %228 = load i8, i8* %227, align 1
  switch i8 %228, label %112 [
    i8 0, label %113
    i8 32, label %113
  ]

229:                                              ; preds = %31
  %230 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %34, i64 0, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %15
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %34, i64 0, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 10
  br i1 %236, label %26, label %237

237:                                              ; preds = %233, %229
  %238 = add nuw nsw i64 %17, 2
  %239 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %238
  %240 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %239, align 16
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @af_property_get(%struct.FT_ModuleRec_*, i8* nocapture readonly, i8* nocapture) #0 {
  %4 = alloca %struct.AF_FaceGlobalsRec_*, align 8
  %5 = alloca %struct.AF_FaceGlobalsRec_*, align 8
  %6 = bitcast %struct.FT_ModuleRec_* %0 to %struct.AF_ModuleRec_*
  %7 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1
  %8 = bitcast %struct.FT_ModuleRec_* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.184, i64 0, i64 0)) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %44

14:                                               ; preds = %3
  %15 = bitcast i8* %2 to %struct.FT_FaceRec_**
  %16 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %15, align 8
  %17 = bitcast %struct.AF_FaceGlobalsRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store %struct.AF_FaceGlobalsRec_* inttoptr (i64 -6148914691236517206 to %struct.AF_FaceGlobalsRec_*), %struct.AF_FaceGlobalsRec_** %5, align 8
  %18 = icmp eq %struct.FT_FaceRec_* %16, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %16, i64 0, i32 28
  %21 = bitcast %struct.FT_Generic_* %20 to %struct.AF_FaceGlobalsRec_**
  %22 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %21, align 8
  store %struct.AF_FaceGlobalsRec_* %22, %struct.AF_FaceGlobalsRec_** %5, align 8
  %23 = icmp eq %struct.AF_FaceGlobalsRec_* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = ptrtoint %struct.AF_FaceGlobalsRec_* %22 to i64
  br label %36

26:                                               ; preds = %19
  %27 = call fastcc i32 @af_face_globals_new(%struct.FT_FaceRec_* nonnull %16, %struct.AF_FaceGlobalsRec_** nonnull %5, %struct.AF_ModuleRec_* %6) #10
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = bitcast %struct.AF_FaceGlobalsRec_** %5 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.FT_Generic_* %20 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %16, i64 0, i32 28, i32 1
  store void (i8*)* bitcast (void (%struct.AF_FaceGlobalsRec_*)* @af_face_globals_free to void (i8*)*), void (i8*)** %33, align 8
  br label %36

34:                                               ; preds = %14, %26
  %35 = phi i32 [ 35, %14 ], [ %27, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %137

36:                                               ; preds = %29, %24
  %37 = phi i64 [ %31, %29 ], [ %25, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %38 = inttoptr i64 %37 to %struct.AF_FaceGlobalsRec_*
  %39 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %38, i64 0, i32 2
  %40 = bitcast i16** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds i8, i8* %2, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %41, i64* %43, align 8
  br label %137

44:                                               ; preds = %3
  %45 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.179, i64 0, i64 0)) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %44
  %48 = bitcast i8* %2 to i32*
  %49 = zext i32 %9 to i64
  %50 = getelementptr inbounds [88 x %struct.AF_StyleClassRec_*], [88 x %struct.AF_StyleClassRec_*]* @af_style_classes, i64 0, i64 %49
  %51 = load %struct.AF_StyleClassRec_*, %struct.AF_StyleClassRec_** %50, align 8
  %52 = getelementptr inbounds %struct.AF_StyleClassRec_, %struct.AF_StyleClassRec_* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %48, align 4
  br label %137

54:                                               ; preds = %44
  %55 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.180, i64 0, i64 0)) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = bitcast i8* %2 to i32*
  store i32 %11, i32* %58, align 4
  br label %137

59:                                               ; preds = %54
  %60 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.181, i64 0, i64 0)) #11
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %91

62:                                               ; preds = %59
  %63 = bitcast i8* %2 to %struct.FT_FaceRec_**
  %64 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %63, align 8
  %65 = bitcast %struct.AF_FaceGlobalsRec_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  store %struct.AF_FaceGlobalsRec_* inttoptr (i64 -6148914691236517206 to %struct.AF_FaceGlobalsRec_*), %struct.AF_FaceGlobalsRec_** %4, align 8
  %66 = icmp eq %struct.FT_FaceRec_* %64, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %64, i64 0, i32 28
  %69 = bitcast %struct.FT_Generic_* %68 to %struct.AF_FaceGlobalsRec_**
  %70 = load %struct.AF_FaceGlobalsRec_*, %struct.AF_FaceGlobalsRec_** %69, align 8
  store %struct.AF_FaceGlobalsRec_* %70, %struct.AF_FaceGlobalsRec_** %4, align 8
  %71 = icmp eq %struct.AF_FaceGlobalsRec_* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = ptrtoint %struct.AF_FaceGlobalsRec_* %70 to i64
  br label %84

74:                                               ; preds = %67
  %75 = call fastcc i32 @af_face_globals_new(%struct.FT_FaceRec_* nonnull %64, %struct.AF_FaceGlobalsRec_** nonnull %4, %struct.AF_ModuleRec_* %6) #10
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %74
  %78 = bitcast %struct.AF_FaceGlobalsRec_** %4 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %struct.FT_Generic_* %68 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %64, i64 0, i32 28, i32 1
  store void (i8*)* bitcast (void (%struct.AF_FaceGlobalsRec_*)* @af_face_globals_free to void (i8*)*), void (i8*)** %81, align 8
  br label %84

82:                                               ; preds = %62, %74
  %83 = phi i32 [ 35, %62 ], [ %75, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  br label %137

84:                                               ; preds = %77, %72
  %85 = phi i64 [ %79, %77 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  %86 = inttoptr i64 %85 to %struct.AF_FaceGlobalsRec_*
  %87 = getelementptr inbounds %struct.AF_FaceGlobalsRec_, %struct.AF_FaceGlobalsRec_* %86, i64 0, i32 5
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds i8, i8* %2, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 %88, i32* %90, align 8
  br label %137

91:                                               ; preds = %59
  %92 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i64 0, i64 0)) #11
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %130

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %6, i64 0, i32 4, i64 0
  %96 = bitcast i8* %2 to i32*
  %97 = load i32, i32* %95, align 4
  store i32 %97, i32* %96, align 4
  %98 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1, i32 2
  %99 = bitcast %struct.FT_MemoryRec_** %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds i8, i8* %2, i64 4
  %102 = bitcast i8* %101 to i32*
  store i32 %100, i32* %102, align 4
  %103 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %6, i64 0, i32 4, i64 2
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds i8, i8* %2, i64 8
  %106 = bitcast i8* %105 to i32*
  store i32 %104, i32* %106, align 4
  %107 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2
  %108 = bitcast %struct.FT_ModuleRec_* %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds i8, i8* %2, i64 12
  %111 = bitcast i8* %110 to i32*
  store i32 %109, i32* %111, align 4
  %112 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %6, i64 0, i32 4, i64 4
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds i8, i8* %2, i64 16
  %115 = bitcast i8* %114 to i32*
  store i32 %113, i32* %115, align 4
  %116 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %117 = bitcast %struct.FT_LibraryRec_** %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds i8, i8* %2, i64 20
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 4
  %121 = getelementptr inbounds %struct.AF_ModuleRec_, %struct.AF_ModuleRec_* %6, i64 0, i32 4, i64 6
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds i8, i8* %2, i64 24
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 4
  %125 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %126 = bitcast %struct.FT_MemoryRec_** %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds i8, i8* %2, i64 28
  %129 = bitcast i8* %128 to i32*
  store i32 %127, i32* %129, align 4
  br label %137

130:                                              ; preds = %91
  %131 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i64 0, i64 0)) #11
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %130
  %134 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 1, i32 1
  %135 = bitcast %struct.FT_LibraryRec_** %134 to i8*
  %136 = load i8, i8* %135, align 8
  store i8 %136, i8* %2, align 1
  br label %137

137:                                              ; preds = %84, %82, %36, %34, %130, %133, %94, %57, %47
  %138 = phi i32 [ 0, %133 ], [ 0, %94 ], [ 0, %57 ], [ 0, %47 ], [ 12, %130 ], [ %35, %34 ], [ 0, %36 ], [ %83, %82 ], [ 0, %84 ]
  ret i32 %138
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{i32 0, i32 33}
