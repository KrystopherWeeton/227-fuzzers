; ModuleID = '../../third_party/breakpad/breakpad/src/common/linux/elf_core_dump.cc'
source_filename = "../../third_party/breakpad/breakpad/src/common/linux/elf_core_dump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.google_breakpad::ElfCoreDump::Note" = type { %"class.google_breakpad::MemoryRange" }
%"class.google_breakpad::MemoryRange" = type { i8*, i64 }
%"class.google_breakpad::ElfCoreDump" = type <{ %"class.google_breakpad::MemoryRange", i32, [4 x i8] }>
%struct.Elf64_Nhdr = type { i32, i32, i32 }
%struct.Elf64_Ehdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }

@_ZN15google_breakpad11ElfCoreDump4NoteC1Ev = hidden unnamed_addr alias void (%"class.google_breakpad::ElfCoreDump::Note"*), void (%"class.google_breakpad::ElfCoreDump::Note"*)* @_ZN15google_breakpad11ElfCoreDump4NoteC2Ev
@_ZN15google_breakpad11ElfCoreDump4NoteC1ERKNS_11MemoryRangeE = hidden unnamed_addr alias void (%"class.google_breakpad::ElfCoreDump::Note"*, %"class.google_breakpad::MemoryRange"*), void (%"class.google_breakpad::ElfCoreDump::Note"*, %"class.google_breakpad::MemoryRange"*)* @_ZN15google_breakpad11ElfCoreDump4NoteC2ERKNS_11MemoryRangeE
@_ZN15google_breakpad11ElfCoreDumpC1Ev = hidden unnamed_addr alias void (%"class.google_breakpad::ElfCoreDump"*), void (%"class.google_breakpad::ElfCoreDump"*)* @_ZN15google_breakpad11ElfCoreDumpC2Ev
@_ZN15google_breakpad11ElfCoreDumpC1ERKNS_11MemoryRangeE = hidden unnamed_addr alias void (%"class.google_breakpad::ElfCoreDump"*, %"class.google_breakpad::MemoryRange"*), void (%"class.google_breakpad::ElfCoreDump"*, %"class.google_breakpad::MemoryRange"*)* @_ZN15google_breakpad11ElfCoreDumpC2ERKNS_11MemoryRangeE
@_ZN15google_breakpad11ElfCoreDumpD1Ev = hidden unnamed_addr alias void (%"class.google_breakpad::ElfCoreDump"*), void (%"class.google_breakpad::ElfCoreDump"*)* @_ZN15google_breakpad11ElfCoreDumpD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDump4NoteC2Ev(%"class.google_breakpad::ElfCoreDump::Note"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDump4NoteC2ERKNS_11MemoryRangeE(%"class.google_breakpad::ElfCoreDump::Note"* nocapture, %"class.google_breakpad::MemoryRange"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to i8*
  %4 = bitcast %"class.google_breakpad::MemoryRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15google_breakpad11ElfCoreDump4Note7IsValidEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  %8 = icmp ne %struct.Elf64_Nhdr* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Elf64_Nhdr* @_ZNK15google_breakpad11ElfCoreDump4Note9GetHeaderEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.Elf64_Nhdr* [ %7, %5 ], [ null, %1 ]
  ret %struct.Elf64_Nhdr* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15google_breakpad11ElfCoreDump4Note7GetTypeEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Nhdr* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %5, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK15google_breakpad11ElfCoreDump4Note7GetNameEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Nhdr* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %3, 13
  %14 = add nuw nsw i64 %12, 12
  %15 = icmp ugt i64 %14, %3
  %16 = or i1 %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 1
  %19 = bitcast %struct.Elf64_Nhdr* %18 to i8*
  br label %20

20:                                               ; preds = %17, %9, %1, %5
  %21 = phi i8* [ null, %5 ], [ null, %1 ], [ %19, %17 ], [ null, %9 ]
  %22 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %12, %17 ], [ 0, %9 ]
  %23 = insertvalue { i8*, i64 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1
  ret { i8*, i64 } %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK15google_breakpad11ElfCoreDump4Note14GetDescriptionEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Nhdr* %7, null
  %9 = bitcast %struct.Elf64_Nhdr* %7 to i8*
  br i1 %8, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = add nuw nsw i64 %13, 15
  %15 = and i64 %14, 8589934588
  %16 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = icmp ule i64 %3, %15
  %20 = add nuw nsw i64 %15, %18
  %21 = icmp ugt i64 %20, %3
  %22 = or i1 %19, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %9, i64 %15
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i64 0, i64 %18
  br label %27

27:                                               ; preds = %23, %10, %1, %5
  %28 = phi i8* [ null, %5 ], [ null, %1 ], [ %24, %23 ], [ null, %10 ]
  %29 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %26, %23 ], [ 0, %10 ]
  %30 = insertvalue { i8*, i64 } undef, i8* %28, 0
  %31 = insertvalue { i8*, i64 } %30, i64 %29, 1
  ret { i8*, i64 } %31
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN15google_breakpad11ElfCoreDump4Note11AlignedSizeEm(i64) local_unnamed_addr #4 align 2 {
  %2 = add i64 %0, 3
  %3 = and i64 %2, -4
  ret i64 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK15google_breakpad11ElfCoreDump4Note11GetNextNoteEv(%"class.google_breakpad::ElfCoreDump::Note"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump::Note", %"class.google_breakpad::ElfCoreDump::Note"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 11
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump::Note"* %0 to %struct.Elf64_Nhdr**
  %7 = load %struct.Elf64_Nhdr*, %struct.Elf64_Nhdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Nhdr* %7, null
  %9 = bitcast %struct.Elf64_Nhdr* %7 to i8*
  br i1 %8, label %28, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = add nuw nsw i64 %13, 15
  %15 = and i64 %14, 8589934588
  %16 = getelementptr inbounds %struct.Elf64_Nhdr, %struct.Elf64_Nhdr* %7, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = add nuw nsw i64 %18, 3
  %20 = add nuw nsw i64 %19, %15
  %21 = and i64 %20, 17179869180
  %22 = icmp ugt i64 %3, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %10
  %24 = sub i64 %3, %21
  %25 = getelementptr inbounds i8, i8* %9, i64 %21
  %26 = icmp eq i8* %25, null
  %27 = select i1 %26, i64 0, i64 %24
  br label %28

28:                                               ; preds = %23, %10, %1, %5
  %29 = phi i8* [ null, %5 ], [ null, %1 ], [ %25, %23 ], [ null, %10 ]
  %30 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %27, %23 ], [ 0, %10 ]
  %31 = insertvalue { i8*, i64 } undef, i8* %29, 0
  %32 = insertvalue { i8*, i64 } %31, i64 %30, 1
  ret { i8*, i64 } %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDumpC2Ev(%"class.google_breakpad::ElfCoreDump"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #6
  %3 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDumpC2ERKNS_11MemoryRangeE(%"class.google_breakpad::ElfCoreDump"* nocapture, %"class.google_breakpad::MemoryRange"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to i8*
  %4 = bitcast %"class.google_breakpad::MemoryRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 1
  store i32 -1, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDumpD2Ev(%"class.google_breakpad::ElfCoreDump"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @close(i32 %3) #6
  store i32 -1, i32* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare i32 @close(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDump10SetContentERKNS_11MemoryRangeE(%"class.google_breakpad::ElfCoreDump"* nocapture, %"class.google_breakpad::MemoryRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to i8*
  %4 = bitcast %"class.google_breakpad::MemoryRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad11ElfCoreDump10SetProcMemEi(%"class.google_breakpad::ElfCoreDump"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @close(i32 %4) #6
  br label %8

8:                                                ; preds = %2, %6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15google_breakpad11ElfCoreDump7IsValidEv(%"class.google_breakpad::ElfCoreDump"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 63
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %7 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Ehdr* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 127
  br i1 %12, label %13, label %37

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 69
  br i1 %16, label %17, label %37

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 2
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 76
  br i1 %20, label %21, label %37

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 3
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 70
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 4
  %27 = load i8, i8* %26, align 4
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 1
  %35 = load i16, i16* %34, align 8
  %36 = icmp eq i16 %35, 4
  br label %37

37:                                               ; preds = %1, %5, %33, %29, %25, %21, %17, %13, %9
  %38 = phi i1 [ false, %29 ], [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ %36, %33 ], [ false, %1 ]
  ret i1 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Elf64_Ehdr* @_ZNK15google_breakpad11ElfCoreDump9GetHeaderEv(%"class.google_breakpad::ElfCoreDump"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 63
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %7 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.Elf64_Ehdr* [ %7, %5 ], [ null, %1 ]
  ret %struct.Elf64_Ehdr* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Elf64_Phdr* @_ZNK15google_breakpad11ElfCoreDump16GetProgramHeaderEj(%"class.google_breakpad::ElfCoreDump"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 63
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %8 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %7, align 8
  %9 = icmp eq %struct.Elf64_Ehdr* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %8, i64 0, i32 5
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %8, i64 0, i32 9
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i64
  %16 = zext i32 %1 to i64
  %17 = mul nuw nsw i64 %15, %16
  %18 = add i64 %17, %12
  %19 = icmp ugt i64 %4, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %10
  %21 = add i64 %18, %15
  %22 = icmp uge i64 %21, %18
  %23 = icmp ule i64 %21, %4
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %8, i64 0, i32 0, i64 %18
  %27 = bitcast i8* %26 to %struct.Elf64_Phdr*
  br label %28

28:                                               ; preds = %25, %20, %10, %2, %6
  %29 = phi %struct.Elf64_Phdr* [ null, %6 ], [ null, %2 ], [ %27, %25 ], [ null, %20 ], [ null, %10 ]
  ret %struct.Elf64_Phdr* %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.Elf64_Phdr* @_ZNK15google_breakpad11ElfCoreDump27GetFirstProgramHeaderOfTypeEj(%"class.google_breakpad::ElfCoreDump"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 63
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %8 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %7, align 8
  %9 = icmp eq %struct.Elf64_Ehdr* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %8, i64 0, i32 10
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %16 = zext i16 %12 to i64
  br label %19

17:                                               ; preds = %41
  %18 = icmp eq i64 %46, %16
  br i1 %18, label %47, label %19

19:                                               ; preds = %17, %14
  %20 = phi i64 [ 0, %14 ], [ %46, %17 ]
  br i1 %5, label %21, label %41

21:                                               ; preds = %19
  %22 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %15, align 8
  %23 = icmp eq %struct.Elf64_Ehdr* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %22, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %22, i64 0, i32 9
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i64
  %30 = mul nuw nsw i64 %20, %29
  %31 = add i64 %30, %26
  %32 = icmp ugt i64 %4, %31
  br i1 %32, label %33, label %41

33:                                               ; preds = %24
  %34 = add i64 %31, %29
  %35 = icmp uge i64 %34, %31
  %36 = icmp ule i64 %34, %4
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %22, i64 0, i32 0, i64 %31
  %40 = bitcast i8* %39 to %struct.Elf64_Phdr*
  br label %41

41:                                               ; preds = %19, %21, %24, %33, %38
  %42 = phi %struct.Elf64_Phdr* [ null, %21 ], [ null, %19 ], [ %40, %38 ], [ null, %33 ], [ null, %24 ]
  %43 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, %1
  %46 = add nuw nsw i64 %20, 1
  br i1 %45, label %47, label %17

47:                                               ; preds = %41, %17, %2, %6, %10
  %48 = phi %struct.Elf64_Phdr* [ null, %10 ], [ null, %6 ], [ null, %2 ], [ %42, %41 ], [ null, %17 ]
  ret %struct.Elf64_Phdr* %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15google_breakpad11ElfCoreDump21GetProgramHeaderCountEv(%"class.google_breakpad::ElfCoreDump"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 63
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %7 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Ehdr* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 10
  %11 = load i16, i16* %10, align 8
  %12 = zext i16 %11 to i32
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad11ElfCoreDump8CopyDataEPvmm(%"class.google_breakpad::ElfCoreDump"* nocapture readonly, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 63
  br i1 %7, label %8, label %74

8:                                                ; preds = %4
  %9 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %10 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %9, align 8
  %11 = icmp eq %struct.Elf64_Ehdr* %10, null
  br i1 %11, label %74, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %10, i64 0, i32 10
  %14 = load i16, i16* %13, align 8
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %74, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %18 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 0
  %19 = zext i16 %14 to i64
  br label %20

20:                                               ; preds = %70, %16
  %21 = phi i64 [ 0, %16 ], [ %71, %70 ]
  br i1 %7, label %22, label %42

22:                                               ; preds = %20
  %23 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %17, align 8
  %24 = icmp eq %struct.Elf64_Ehdr* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %23, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %23, i64 0, i32 9
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i64
  %31 = mul nuw nsw i64 %21, %30
  %32 = add i64 %31, %27
  %33 = icmp ugt i64 %6, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %25
  %35 = add i64 %32, %30
  %36 = icmp uge i64 %35, %32
  %37 = icmp ule i64 %35, %6
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %23, i64 0, i32 0, i64 %32
  %41 = bitcast i8* %40 to %struct.Elf64_Phdr*
  br label %42

42:                                               ; preds = %20, %22, %25, %34, %39
  %43 = phi %struct.Elf64_Phdr* [ null, %22 ], [ null, %20 ], [ %41, %39 ], [ null, %34 ], [ null, %25 ]
  %44 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %70

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %43, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %2, %49
  %51 = icmp ugt i64 %49, %2
  br i1 %51, label %70, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %43, i64 0, i32 5
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %50, %54
  br i1 %55, label %56, label %70

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %43, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, %50
  %60 = icmp ugt i64 %6, %59
  br i1 %60, label %61, label %70

61:                                               ; preds = %56
  %62 = add i64 %59, %3
  %63 = icmp uge i64 %62, %59
  %64 = icmp ule i64 %62, %6
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %61
  %67 = load i8*, i8** %18, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 %59
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %56, %61, %66, %42, %47, %52
  %71 = add nuw nsw i64 %21, 1
  %72 = icmp eq i64 %71, %19
  br i1 %72, label %74, label %20

73:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %68, i64 %3, i1 false)
  br label %81

74:                                               ; preds = %70, %4, %8, %12
  %75 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = tail call i64 @pread64(i32 %76, i8* %1, i64 %3, i64 %2) #6
  %80 = icmp sge i64 %79, %3
  br label %81

81:                                               ; preds = %73, %74, %78
  %82 = phi i1 [ %80, %78 ], [ true, %73 ], [ false, %74 ]
  ret i1 %82
}

declare i64 @pread64(i32, i8*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZNK15google_breakpad11ElfCoreDump12GetFirstNoteEv(%"class.google_breakpad::ElfCoreDump"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.google_breakpad::ElfCoreDump", %"class.google_breakpad::ElfCoreDump"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 63
  br i1 %4, label %5, label %58

5:                                                ; preds = %1
  %6 = bitcast %"class.google_breakpad::ElfCoreDump"* %0 to %struct.Elf64_Ehdr**
  %7 = load %struct.Elf64_Ehdr*, %struct.Elf64_Ehdr** %6, align 8
  %8 = icmp eq %struct.Elf64_Ehdr* %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 10
  %11 = load i16, i16* %10, align 8
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %58, label %13

13:                                               ; preds = %9
  %14 = zext i16 %11 to i64
  %15 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 9
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i64
  br label %22

20:                                               ; preds = %35
  %21 = icmp eq i64 %40, %14
  br i1 %21, label %58, label %22

22:                                               ; preds = %20, %13
  %23 = phi i64 [ 0, %13 ], [ %40, %20 ]
  %24 = mul nuw nsw i64 %23, %19
  %25 = add i64 %24, %16
  %26 = icmp ugt i64 %3, %25
  br i1 %26, label %27, label %35

27:                                               ; preds = %22
  %28 = add i64 %25, %19
  %29 = icmp uge i64 %28, %25
  %30 = icmp ule i64 %28, %3
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 %25
  %34 = bitcast i8* %33 to %struct.Elf64_Phdr*
  br label %35

35:                                               ; preds = %32, %27, %22
  %36 = phi %struct.Elf64_Phdr* [ %34, %32 ], [ null, %27 ], [ null, %22 ]
  %37 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 4
  %40 = add nuw nsw i64 %23, 1
  br i1 %39, label %41, label %20

41:                                               ; preds = %35
  %42 = icmp eq %struct.Elf64_Phdr* %36, null
  br i1 %42, label %58, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %36, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %36, i64 0, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = icmp ugt i64 %3, %45
  br i1 %48, label %49, label %58

49:                                               ; preds = %43
  %50 = add i64 %47, %45
  %51 = icmp uge i64 %50, %45
  %52 = icmp ule i64 %50, %3
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 %45
  %56 = icmp eq i8* %55, null
  %57 = select i1 %56, i64 0, i64 %47
  br label %58

58:                                               ; preds = %20, %54, %49, %43, %1, %5, %9, %41
  %59 = phi i8* [ null, %41 ], [ null, %9 ], [ null, %5 ], [ null, %1 ], [ %55, %54 ], [ null, %49 ], [ null, %43 ], [ null, %20 ]
  %60 = phi i64 [ 0, %41 ], [ 0, %9 ], [ 0, %5 ], [ 0, %1 ], [ %57, %54 ], [ 0, %49 ], [ 0, %43 ], [ 0, %20 ]
  %61 = insertvalue { i8*, i64 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i64 } %61, i64 %60, 1
  ret { i8*, i64 } %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
