; ModuleID = 'gen/content/common/web_ui.mojom-test-utils.cc'
source_filename = "gen/content/common/web_ui.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::mojom::WebUIHostAsyncWaiter" = type { %"class.content::mojom::WebUIHost"* }
%"class.content::mojom::WebUIHost" = type { i32 (...)** }
%"class.content::mojom::WebUIAsyncWaiter" = type { %"class.content::mojom::WebUI"* }
%"class.content::mojom::WebUI" = type { i32 (...)** }
%"class.content::mojom::WebUIHostInterceptorForTesting" = type { %"class.content::mojom::WebUIHost" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.content::mojom::WebUIInterceptorForTesting" = type { %"class.content::mojom::WebUI" }

$_ZN7content5mojom9WebUIHostD2Ev = comdat any

$_ZN7content5mojom30WebUIHostInterceptorForTestingD0Ev = comdat any

$_ZN7content5mojom5WebUID2Ev = comdat any

$_ZN7content5mojom26WebUIInterceptorForTestingD0Ev = comdat any

@_ZTVN7content5mojom30WebUIHostInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::mojom::WebUIHost"*)* @_ZN7content5mojom9WebUIHostD2Ev to i8*), i8* bitcast (void (%"class.content::mojom::WebUIHostInterceptorForTesting"*)* @_ZN7content5mojom30WebUIHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.content::mojom::WebUIHostInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)* @_ZN7content5mojom30WebUIHostInterceptorForTesting4SendERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4base5ValueE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7content5mojom26WebUIInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::mojom::WebUI"*)* @_ZN7content5mojom5WebUID2Ev to i8*), i8* bitcast (void (%"class.content::mojom::WebUIInterceptorForTesting"*)* @_ZN7content5mojom26WebUIInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.content::mojom::WebUIInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN7content5mojom26WebUIInterceptorForTesting11SetPropertyERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7content5mojom20WebUIHostAsyncWaiterC1EPNS0_9WebUIHostE = hidden unnamed_addr alias void (%"class.content::mojom::WebUIHostAsyncWaiter"*, %"class.content::mojom::WebUIHost"*), void (%"class.content::mojom::WebUIHostAsyncWaiter"*, %"class.content::mojom::WebUIHost"*)* @_ZN7content5mojom20WebUIHostAsyncWaiterC2EPNS0_9WebUIHostE
@_ZN7content5mojom20WebUIHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.content::mojom::WebUIHostAsyncWaiter"*), void (%"class.content::mojom::WebUIHostAsyncWaiter"*)* @_ZN7content5mojom20WebUIHostAsyncWaiterD2Ev
@_ZN7content5mojom16WebUIAsyncWaiterC1EPNS0_5WebUIE = hidden unnamed_addr alias void (%"class.content::mojom::WebUIAsyncWaiter"*, %"class.content::mojom::WebUI"*), void (%"class.content::mojom::WebUIAsyncWaiter"*, %"class.content::mojom::WebUI"*)* @_ZN7content5mojom16WebUIAsyncWaiterC2EPNS0_5WebUIE
@_ZN7content5mojom16WebUIAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.content::mojom::WebUIAsyncWaiter"*), void (%"class.content::mojom::WebUIAsyncWaiter"*)* @_ZN7content5mojom16WebUIAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom30WebUIHostInterceptorForTesting4SendERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4base5ValueE(%"class.content::mojom::WebUIHostInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Value", align 8
  %5 = bitcast %"class.content::mojom::WebUIHostInterceptorForTesting"* %0 to %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)***
  %6 = load %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)**, %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)*, %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)*, %"class.content::mojom::WebUIHost"* (%"class.content::mojom::WebUIHostInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.content::mojom::WebUIHost"* %8(%"class.content::mojom::WebUIHostInterceptorForTesting"* %0) #6
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %4, %"class.base::Value"* dereferenceable(32) %2) #6
  %10 = bitcast %"class.content::mojom::WebUIHost"* %9 to void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)***
  %11 = load void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)**, void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*, void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)** %11, i64 2
  %13 = load void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)*, void (%"class.content::mojom::WebUIHost"*, %"class.std::__1::basic_string"*, %"class.base::Value"*)** %12, align 8
  call void %13(%"class.content::mojom::WebUIHost"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::Value"* nonnull %4) #6
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content5mojom20WebUIHostAsyncWaiterC2EPNS0_9WebUIHostE(%"class.content::mojom::WebUIHostAsyncWaiter"* nocapture, %"class.content::mojom::WebUIHost"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.content::mojom::WebUIHostAsyncWaiter", %"class.content::mojom::WebUIHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.content::mojom::WebUIHost"* %1, %"class.content::mojom::WebUIHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content5mojom20WebUIHostAsyncWaiterD2Ev(%"class.content::mojom::WebUIHostAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom26WebUIInterceptorForTesting11SetPropertyERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.content::mojom::WebUIInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.content::mojom::WebUIInterceptorForTesting"* %0 to %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)***
  %5 = load %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)**, %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)*, %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)*, %"class.content::mojom::WebUI"* (%"class.content::mojom::WebUIInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.content::mojom::WebUI"* %7(%"class.content::mojom::WebUIInterceptorForTesting"* %0) #6
  %9 = bitcast %"class.content::mojom::WebUI"* %8 to void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %10, i64 2
  %12 = load void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::WebUI"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.content::mojom::WebUI"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content5mojom16WebUIAsyncWaiterC2EPNS0_5WebUIE(%"class.content::mojom::WebUIAsyncWaiter"* nocapture, %"class.content::mojom::WebUI"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.content::mojom::WebUIAsyncWaiter", %"class.content::mojom::WebUIAsyncWaiter"* %0, i64 0, i32 0
  store %"class.content::mojom::WebUI"* %1, %"class.content::mojom::WebUI"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content5mojom16WebUIAsyncWaiterD2Ev(%"class.content::mojom::WebUIAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom9WebUIHostD2Ev(%"class.content::mojom::WebUIHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom30WebUIHostInterceptorForTestingD0Ev(%"class.content::mojom::WebUIHostInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom5WebUID2Ev(%"class.content::mojom::WebUI"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom26WebUIInterceptorForTestingD0Ev(%"class.content::mojom::WebUIInterceptorForTesting"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
