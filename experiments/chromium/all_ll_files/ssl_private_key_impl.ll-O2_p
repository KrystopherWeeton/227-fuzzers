; ModuleID = '../../content/browser/ssl_private_key_impl.cc'
source_filename = "../../content/browser/ssl_private_key_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SSLPrivateKeyImpl" = type { %"class.network::mojom::SSLPrivateKey", %class.scoped_refptr }
%"class.network::mojom::SSLPrivateKey" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::SSLPrivateKey"* }
%"class.net::SSLPrivateKey" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.4" = type { %"class.base::internal::CallbackBase" }

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS6_9allocatorIhEEEEEEEN3net5ErrorESC_EJNS0_17UnretainedWrapperIS4_EESE_EEEFvSG_SC_EE7RunOnceEPNS0_13BindStateBaseESG_SC_ = comdat any

$_ZN4base8internal9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS5_9allocatorIhEEEEEEEN3net5ErrorESB_EJNS0_17UnretainedWrapperIS3_EESD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN7content17SSLPrivateKeyImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SSLPrivateKeyImpl"*)* @_ZN7content17SSLPrivateKeyImplD2Ev to i8*), i8* bitcast (void (%"class.content::SSLPrivateKeyImpl"*)* @_ZN7content17SSLPrivateKeyImplD0Ev to i8*), i8* bitcast (void (%"class.content::SSLPrivateKeyImpl"*, i16, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)* @_ZN7content17SSLPrivateKeyImpl4SignEtRKNSt3__16vectorIhNS1_9allocatorIhEEEEN4base12OnceCallbackIFviS7_EEE to i8*)] }, align 8

@_ZN7content17SSLPrivateKeyImplC1E13scoped_refptrIN3net13SSLPrivateKeyEE = hidden unnamed_addr alias void (%"class.content::SSLPrivateKeyImpl"*, %"class.net::SSLPrivateKey"*), void (%"class.content::SSLPrivateKeyImpl"*, %"class.net::SSLPrivateKey"*)* @_ZN7content17SSLPrivateKeyImplC2E13scoped_refptrIN3net13SSLPrivateKeyEE
@_ZN7content17SSLPrivateKeyImplD1Ev = hidden unnamed_addr alias void (%"class.content::SSLPrivateKeyImpl"*), void (%"class.content::SSLPrivateKeyImpl"*)* @_ZN7content17SSLPrivateKeyImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17SSLPrivateKeyImplC2E13scoped_refptrIN3net13SSLPrivateKeyEE(%"class.content::SSLPrivateKeyImpl"* nocapture, %"class.net::SSLPrivateKey"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::SSLPrivateKey"* %1 to i64
  %4 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content17SSLPrivateKeyImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17SSLPrivateKeyImplD2Ev(%"class.content::SSLPrivateKeyImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content17SSLPrivateKeyImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %3, align 8
  %5 = icmp eq %"class.net::SSLPrivateKey"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::SSLPrivateKey", %"class.net::SSLPrivateKey"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::SSLPrivateKey"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::SSLPrivateKey"*)***
  %15 = load void (%"class.net::SSLPrivateKey"*)**, void (%"class.net::SSLPrivateKey"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %15, i64 4
  %17 = load void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %16, align 8
  tail call void %17(%"class.net::SSLPrivateKey"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17SSLPrivateKeyImplD0Ev(%"class.content::SSLPrivateKeyImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content17SSLPrivateKeyImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %3, align 8
  %5 = icmp eq %"class.net::SSLPrivateKey"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::SSLPrivateKey", %"class.net::SSLPrivateKey"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::SSLPrivateKey"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::SSLPrivateKey"*)***
  %15 = load void (%"class.net::SSLPrivateKey"*)**, void (%"class.net::SSLPrivateKey"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %15, i64 4
  %17 = load void (%"class.net::SSLPrivateKey"*)*, void (%"class.net::SSLPrivateKey"*)** %16, align 8
  tail call void %17(%"class.net::SSLPrivateKey"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.content::SSLPrivateKeyImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17SSLPrivateKeyImpl4SignEtRKNSt3__16vectorIhNS1_9allocatorIhEEEEN4base12OnceCallbackIFviS7_EEE(%"class.content::SSLPrivateKeyImpl"*, i16 zeroext, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.4", align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = getelementptr inbounds %"class.content::SSLPrivateKeyImpl", %"class.content::SSLPrivateKeyImpl"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.net::SSLPrivateKey"*, %"class.net::SSLPrivateKey"** %12, align 8
  %14 = inttoptr i64 %7 to i8*
  %15 = ptrtoint %"class.content::SSLPrivateKeyImpl"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 64) #7, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS6_9allocatorIhEEEEEEEN3net5ErrorESC_EJNS0_17UnretainedWrapperIS4_EESE_EEEFvSG_SC_EE7RunOnceEPNS0_13BindStateBaseESG_SC_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS5_9allocatorIhEEEEEEEN3net5ErrorESB_EJNS0_17UnretainedWrapperIS3_EESD_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)* @_ZN7content17SSLPrivateKeyImpl8CallbackEN4base12OnceCallbackIFviRKNSt3__16vectorIhNS3_9allocatorIhEEEEEEEN3net5ErrorES9_ to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !2
  %22 = getelementptr inbounds i8, i8* %16, i64 56
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !2
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8, !noalias !2
  %27 = bitcast %"class.base::OnceCallback.4"* %5 to i8**
  store i8* %16, i8** %27, align 8, !alias.scope !2
  %28 = bitcast %"class.net::SSLPrivateKey"* %13 to void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)***
  %29 = load void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)**, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)*, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)** %29, i64 2
  %31 = load void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)*, void (%"class.net::SSLPrivateKey"*, i16, i64, i8*, %"class.base::OnceCallback.4"*)** %30, align 8
  call void %31(%"class.net::SSLPrivateKey"* %13, i16 zeroext %1, i64 %11, i8* %14, %"class.base::OnceCallback.4"* nonnull %5) #6
  %32 = getelementptr inbounds %"class.base::OnceCallback.4", %"class.base::OnceCallback.4"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content17SSLPrivateKeyImpl8CallbackEN4base12OnceCallbackIFviRKNSt3__16vectorIhNS3_9allocatorIhEEEEEEEN3net5ErrorES9_(%"class.content::SSLPrivateKeyImpl"* nocapture readnone, %"class.base::OnceCallback"* nocapture, i32, %"class.std::__1::vector"* dereferenceable(24)) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, i32 %2, %"class.std::__1::vector"* dereferenceable(24) %3) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS6_9allocatorIhEEEEEEEN3net5ErrorESC_EJNS0_17UnretainedWrapperIS4_EESE_EEEFvSG_SC_EE7RunOnceEPNS0_13BindStateBaseESG_SC_(%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %10 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds i8, i8* %8, i64 %14
  %17 = bitcast i8* %16 to %"class.content::SSLPrivateKeyImpl"*
  %18 = and i64 %11, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %3
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %11, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)**
  %26 = load void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)*, void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)** %25, align 8
  br label %29

27:                                               ; preds = %3
  %28 = inttoptr i64 %11 to void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.content::SSLPrivateKeyImpl"*, %"class.base::OnceCallback"*, i32, %"class.std::__1::vector"*)* [ %26, %20 ], [ %28, %27 ]
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.base::internal::BindStateBase"**
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  call void %30(%"class.content::SSLPrivateKeyImpl"* %17, %"class.base::OnceCallback"* nonnull %4, i32 %1, %"class.std::__1::vector"* dereferenceable(24) %2) #6
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS5_9allocatorIhEEEEEEEN3net5ErrorESB_EJNS0_17UnretainedWrapperIS3_EESD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content17SSLPrivateKeyImplEFvNS2_IFviRKNSt3__16vectorIhNS5_9allocatorIhEEEEEEEN3net5ErrorESB_EJNS0_17UnretainedWrapperIS4_EESD_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content17SSLPrivateKeyImplEFvNS2_IFviRKNSt3__16vectorIhNS5_9allocatorIhEEEEEEEN3net5ErrorESB_EJNS0_17UnretainedWrapperIS4_EESD_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS4_9allocatorIhEEEEEEEN3net5ErrorESA_EJNS_8internal17UnretainedWrapperIS2_EESC_EEENS3_INSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN7content17SSLPrivateKeyImplEFvNS_12OnceCallbackIFviRKNSt3__16vectorIhNS4_9allocatorIhEEEEEEEN3net5ErrorESA_EJNS_8internal17UnretainedWrapperIS2_EESC_EEENS3_INSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
