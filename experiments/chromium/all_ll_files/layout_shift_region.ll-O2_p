; ModuleID = '../../third_party/blink/renderer/core/layout/layout_shift_region.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_shift_region.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LayoutShiftRegion" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::(anonymous namespace)::SweepEvent" = type { i32, i32, %"struct.blink::(anonymous namespace)::Segment" }
%"struct.blink::(anonymous namespace)::Segment" = type { i32, i32 }
%"struct.std::__1::__less.22" = type { i8 }
%"class.blink::(anonymous namespace)::BasicIntervals" = type { %"class.WTF::Vector.0", %"class.WTF::HashMap" }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { i32*, i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ i64, i32, [4 x i8] }>
%"class.blink::(anonymous namespace)::SegmentTree" = type { %"class.blink::(anonymous namespace)::BasicIntervals"*, %"class.WTF::Vector.7" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, i32, i32 }
%"struct.blink::(anonymous namespace)::SegmentTree::Node" = type { i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"struct.blink::(anonymous namespace)::SweepEvent"*, i32, i32 }

$_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKl = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERKijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_ = comdat any

$_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIljEEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<long, unsigned int>]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_111SegmentTree4NodeEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::SegmentTree::Node]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_110SweepEventEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::(anonymous namespace)::SweepEvent]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink17LayoutShiftRegion4AreaEv(%"class.blink::LayoutShiftRegion"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"struct.blink::(anonymous namespace)::SweepEvent", align 4
  %9 = alloca %"struct.blink::(anonymous namespace)::SweepEvent", align 4
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.std::__1::__less.22", align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.blink::(anonymous namespace)::BasicIntervals", align 8
  %20 = alloca %"class.blink::(anonymous namespace)::SegmentTree", align 8
  %21 = alloca %"class.WTF::Vector.12", align 8
  %22 = getelementptr inbounds %"class.blink::LayoutShiftRegion", %"class.blink::LayoutShiftRegion"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %33 [
    i32 0, label %477
    i32 1, label %24
  ]

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.blink::LayoutShiftRegion", %"class.blink::LayoutShiftRegion"* %0, i64 0, i32 0
  %26 = tail call dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 0) #5
  %27 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %26, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, %28
  %32 = sext i32 %31 to i64
  br label %477

33:                                               ; preds = %1
  %34 = bitcast %"class.blink::(anonymous namespace)::BasicIntervals"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 40, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 36, i1 false) #5
  %35 = getelementptr inbounds %"class.blink::LayoutShiftRegion", %"class.blink::LayoutShiftRegion"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %35, align 8
  %37 = zext i32 %23 to i64
  %38 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %36, i64 %37
  %39 = bitcast i32* %13 to i8*
  %40 = bitcast i32* %14 to i8*
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 0
  %46 = bitcast i32* %17 to i8*
  %47 = bitcast i32* %18 to i8*
  br label %76

48:                                               ; preds = %117
  %49 = load i32*, i32** %44, align 8
  %50 = load i32, i32* %42, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = getelementptr inbounds %"struct.std::__1::__less.22", %"struct.std::__1::__less.22"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #5
  call void @_ZNSt3__16__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_(i32* %49, i32* %52, %"struct.std::__1::__less.22"* nonnull dereferenceable(1) %15) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #5
  %54 = load i32*, i32** %44, align 8
  %55 = load i32, i32* %42, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i32, i32* %54, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %122, label %59

59:                                               ; preds = %48
  %60 = bitcast i32* %16 to i8*
  br label %61

61:                                               ; preds = %73, %59
  %62 = phi i32 [ 0, %59 ], [ %64, %73 ]
  %63 = phi i32* [ %54, %59 ], [ %74, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #5
  %64 = add i32 %62, 1
  store i32 %62, i32* %16, align 4
  %65 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERKijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %41, i32* dereferenceable(4) %63, i32* nonnull dereferenceable(4) %16) #5
  %66 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %65, 1
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  %70 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %65, 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 1
  %72 = load i32, i32* %16, align 4
  store i32 %72, i32* %71, align 4
  br label %73

73:                                               ; preds = %69, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #5
  %74 = getelementptr inbounds i32, i32* %63, i64 1
  %75 = icmp eq i32* %74, %57
  br i1 %75, label %120, label %61

76:                                               ; preds = %117, %33
  %77 = phi %"class.blink::IntRect"* [ %36, %33 ], [ %118, %117 ]
  %78 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %77, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #5
  store i32 %79, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #5
  store i32 0, i32* %14, align 4
  %80 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %41, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14) #5
  %81 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %80, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #5
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %96, label %84

84:                                               ; preds = %76
  %85 = load i32, i32* %42, align 4
  %86 = load i32, i32* %43, align 8
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %95, label %88, !prof !2

88:                                               ; preds = %84
  %89 = load i32*, i32** %44, align 8
  %90 = zext i32 %85 to i64
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = load i32, i32* %13, align 4
  store i32 %92, i32* %91, align 4
  %93 = load i32, i32* %42, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %42, align 4
  br label %96

95:                                               ; preds = %84
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.0"* nonnull %45, i32* nonnull dereferenceable(4) %13) #5
  br label %96

96:                                               ; preds = %95, %88, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #5
  %97 = load i32, i32* %78, align 4
  %98 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %77, i64 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #5
  store i32 %100, i32* %17, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #5
  store i32 0, i32* %18, align 4
  %101 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"* %41, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %18) #5
  %102 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %101, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #5
  %103 = and i8 %102, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %96
  %106 = load i32, i32* %42, align 4
  %107 = load i32, i32* %43, align 8
  %108 = icmp eq i32 %106, %107
  br i1 %108, label %116, label %109, !prof !2

109:                                              ; preds = %105
  %110 = load i32*, i32** %44, align 8
  %111 = zext i32 %106 to i64
  %112 = getelementptr inbounds i32, i32* %110, i64 %111
  %113 = load i32, i32* %17, align 4
  store i32 %113, i32* %112, align 4
  %114 = load i32, i32* %42, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %42, align 4
  br label %117

116:                                              ; preds = %105
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.0"* nonnull %45, i32* nonnull dereferenceable(4) %17) #5
  br label %117

117:                                              ; preds = %116, %109, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #5
  %118 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %77, i64 1
  %119 = icmp eq %"class.blink::IntRect"* %118, %38
  br i1 %119, label %48, label %76

120:                                              ; preds = %73
  %121 = load i32, i32* %42, align 4
  br label %122

122:                                              ; preds = %120, %48
  %123 = phi i32 [ %121, %120 ], [ 0, %48 ]
  %124 = bitcast %"class.blink::(anonymous namespace)::SegmentTree"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #5
  %125 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %20, i64 0, i32 0
  %126 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %20, i64 0, i32 1, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %20, i64 0, i32 1
  %128 = bitcast %"class.WTF::Vector.7"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false) #5
  store %"class.blink::(anonymous namespace)::BasicIntervals"* %19, %"class.blink::(anonymous namespace)::BasicIntervals"** %125, align 8
  %129 = add i32 %123, -1
  br label %130

130:                                              ; preds = %130, %122
  %131 = phi i32 [ 1, %122 ], [ %133, %130 ]
  %132 = icmp ult i32 %131, %129
  %133 = shl i32 %131, 1
  br i1 %132, label %130, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %20, i64 0, i32 1, i32 0, i32 0, i32 2
  %137 = add i32 %133, -1
  %138 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %127, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::(anonymous namespace)::SegmentTree::Node"* null, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %138, align 8
  store i32 0, i32* %126, align 8
  %139 = zext i32 %137 to i64
  %140 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #5
  %141 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %141, align 8
  %142 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #5
  %143 = icmp ugt i32 %137, 268173312
  br i1 %143, label %145, label %144

144:                                              ; preds = %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #5
  store i8* null, i8** %141, align 8
  br label %154

145:                                              ; preds = %134
  %146 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %139) #5
  %147 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %146, i8* %147) #5
  %148 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #5
  store i8* %149, i8** %141, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %11) #5
  %153 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #5
  br label %154

154:                                              ; preds = %151, %145, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #5
  %155 = shl nuw nsw i64 %139, 3
  %156 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %155) #5
  %157 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %156, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_111SegmentTree4NodeEEEPKcv, i64 0, i64 0)) #5
  %158 = bitcast %"class.WTF::Vector.7"* %127 to i64*
  %159 = ptrtoint i8* %157 to i64
  store atomic i64 %159, i64* %158 monotonic, align 8
  %160 = lshr i64 %156, 3
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %126, align 8
  %162 = bitcast i8* %157 to %"struct.blink::(anonymous namespace)::SegmentTree::Node"*
  store i32 %137, i32* %136, align 4
  %163 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %162, i64 %139
  %164 = getelementptr %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %163, i64 -1, i32 0
  %165 = ptrtoint i32* %164 to i64
  %166 = sub i64 8, %159
  %167 = add i64 %166, %165
  %168 = and i64 %167, -8
  call void @llvm.memset.p0i8.i64(i8* align 4 %157, i8 0, i64 %168, i1 false) #5
  %169 = bitcast %"class.WTF::Vector.12"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #5
  %170 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %21, i64 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %21, i64 0, i32 0, i32 0, i32 1
  %172 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %21, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 16, i1 false) #5
  %173 = load i32, i32* %22, align 4
  %174 = shl i32 %173, 1
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %179, label %176

176:                                              ; preds = %154
  %177 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %21, i64 0, i32 0, i32 0
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_110SweepEventENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.14"* nonnull %177, i32 %174) #5
  %178 = load i32, i32* %22, align 4
  br label %179

179:                                              ; preds = %176, %154
  %180 = phi i32 [ %173, %154 ], [ %178, %176 ]
  %181 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %35, align 8
  %182 = zext i32 %180 to i64
  %183 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %181, i64 %182
  %184 = icmp eq i32 %180, 0
  br i1 %184, label %369, label %185

185:                                              ; preds = %179
  %186 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %8 to i8*
  %187 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %8, i64 0, i32 0
  %188 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %8, i64 0, i32 1
  %189 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %8, i64 0, i32 2, i32 0
  %190 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %8, i64 0, i32 2, i32 1
  %191 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %9 to i8*
  %192 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %9, i64 0, i32 0
  %193 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %9, i64 0, i32 1
  %194 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %9, i64 0, i32 2, i32 0
  %195 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %9, i64 0, i32 2, i32 1
  %196 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 1, i32 0, i32 0
  %197 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 1, i32 0, i32 1
  br label %198

198:                                              ; preds = %366, %185
  %199 = phi %"class.blink::IntRect"* [ %181, %185 ], [ %367, %366 ]
  %200 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %199, i64 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %199, i64 0, i32 1, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, %201
  %205 = sext i32 %201 to i64
  %206 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %196, align 8
  %207 = icmp eq %"struct.WTF::KeyValuePair"* %206, null
  br i1 %207, label %333, label %208

208:                                              ; preds = %198
  %209 = load i32, i32* %197, align 8
  %210 = add i32 %209, -1
  %211 = zext i32 %210 to i64
  %212 = shl nsw i64 %205, 32
  %213 = xor i64 %212, -1
  %214 = add i64 %213, %205
  %215 = lshr i64 %214, 22
  %216 = xor i64 %215, %214
  %217 = shl i64 %216, 13
  %218 = xor i64 %217, -1
  %219 = add i64 %216, %218
  %220 = lshr i64 %219, 8
  %221 = xor i64 %220, %219
  %222 = mul i64 %221, 9
  %223 = lshr i64 %222, 15
  %224 = xor i64 %223, %222
  %225 = shl i64 %224, 27
  %226 = xor i64 %225, -1
  %227 = add i64 %224, %226
  %228 = lshr i64 %227, 31
  %229 = xor i64 %228, %227
  %230 = trunc i64 %229 to i32
  %231 = and i32 %210, %230
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %232
  %234 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %233, i64 0, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = icmp eq i64 %235, %205
  br i1 %236, label %265, label %237

237:                                              ; preds = %208
  %238 = xor i32 %230, -1
  %239 = lshr i32 %230, 23
  %240 = add i32 %239, %238
  %241 = shl i32 %240, 12
  %242 = xor i32 %241, %240
  %243 = lshr i32 %242, 7
  %244 = xor i32 %243, %242
  %245 = shl i32 %244, 2
  %246 = xor i32 %245, %244
  %247 = lshr i32 %246, 20
  %248 = xor i32 %247, %246
  %249 = or i32 %248, 1
  %250 = zext i32 %249 to i64
  br label %251

251:                                              ; preds = %256, %237
  %252 = phi i64 [ %235, %237 ], [ %263, %256 ]
  %253 = phi i64 [ %232, %237 ], [ %260, %256 ]
  %254 = phi i64 [ 0, %237 ], [ %258, %256 ]
  %255 = icmp eq i64 %252, 9223372036854775807
  br i1 %255, label %271, label %256

256:                                              ; preds = %251
  %257 = icmp eq i64 %254, 0
  %258 = select i1 %257, i64 %250, i64 %254
  %259 = add i64 %258, %253
  %260 = and i64 %259, %211
  %261 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %260
  %262 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %261, i64 0, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = icmp eq i64 %263, %205
  br i1 %264, label %265, label %251

265:                                              ; preds = %256, %208
  %266 = phi %"struct.WTF::KeyValuePair"* [ %233, %208 ], [ %261, %256 ]
  %267 = icmp eq %"struct.WTF::KeyValuePair"* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %266, i64 0, i32 1
  %270 = load i32, i32* %269, align 4
  br label %271

271:                                              ; preds = %251, %268, %265
  %272 = phi i32 [ %270, %268 ], [ 0, %265 ], [ 0, %251 ]
  %273 = sext i32 %204 to i64
  %274 = shl nsw i64 %273, 32
  %275 = xor i64 %274, -1
  %276 = add i64 %275, %273
  %277 = lshr i64 %276, 22
  %278 = xor i64 %277, %276
  %279 = shl i64 %278, 13
  %280 = xor i64 %279, -1
  %281 = add i64 %278, %280
  %282 = lshr i64 %281, 8
  %283 = xor i64 %282, %281
  %284 = mul i64 %283, 9
  %285 = lshr i64 %284, 15
  %286 = xor i64 %285, %284
  %287 = shl i64 %286, 27
  %288 = xor i64 %287, -1
  %289 = add i64 %286, %288
  %290 = lshr i64 %289, 31
  %291 = xor i64 %290, %289
  %292 = trunc i64 %291 to i32
  %293 = and i32 %210, %292
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %294
  %296 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %295, i64 0, i32 0
  %297 = load i64, i64* %296, align 8
  %298 = icmp eq i64 %297, %273
  br i1 %298, label %327, label %299

299:                                              ; preds = %271
  %300 = xor i32 %292, -1
  %301 = lshr i32 %292, 23
  %302 = add i32 %301, %300
  %303 = shl i32 %302, 12
  %304 = xor i32 %303, %302
  %305 = lshr i32 %304, 7
  %306 = xor i32 %305, %304
  %307 = shl i32 %306, 2
  %308 = xor i32 %307, %306
  %309 = lshr i32 %308, 20
  %310 = xor i32 %309, %308
  %311 = or i32 %310, 1
  %312 = zext i32 %311 to i64
  br label %313

313:                                              ; preds = %318, %299
  %314 = phi i64 [ %297, %299 ], [ %325, %318 ]
  %315 = phi i64 [ %294, %299 ], [ %322, %318 ]
  %316 = phi i64 [ 0, %299 ], [ %320, %318 ]
  %317 = icmp eq i64 %314, 9223372036854775807
  br i1 %317, label %333, label %318

318:                                              ; preds = %313
  %319 = icmp eq i64 %316, 0
  %320 = select i1 %319, i64 %312, i64 %316
  %321 = add i64 %320, %315
  %322 = and i64 %321, %211
  %323 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %206, i64 %322
  %324 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %323, i64 0, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, %273
  br i1 %326, label %327, label %313

327:                                              ; preds = %318, %271
  %328 = phi %"struct.WTF::KeyValuePair"* [ %295, %271 ], [ %323, %318 ]
  %329 = icmp eq %"struct.WTF::KeyValuePair"* %328, null
  br i1 %329, label %333, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %328, i64 0, i32 1
  %332 = load i32, i32* %331, align 4
  br label %333

333:                                              ; preds = %313, %330, %327, %198
  %334 = phi i32 [ %272, %330 ], [ %272, %327 ], [ 0, %198 ], [ %272, %313 ]
  %335 = phi i32 [ %332, %330 ], [ 0, %327 ], [ 0, %198 ], [ 0, %313 ]
  %336 = add i32 %335, -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #5
  %337 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %199, i64 0, i32 0, i32 0
  %338 = load i32, i32* %337, align 4
  store i32 %338, i32* %187, align 4
  store i32 0, i32* %188, align 4
  store i32 %334, i32* %189, align 4
  store i32 %336, i32* %190, align 4
  %339 = load i32, i32* %172, align 4
  %340 = load i32, i32* %171, align 8
  %341 = icmp eq i32 %339, %340
  br i1 %341, label %348, label %342, !prof !2

342:                                              ; preds = %333
  %343 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %170, align 8
  %344 = zext i32 %339 to i64
  %345 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %343, i64 %344
  %346 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %345 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %346, i8* nonnull align 4 %186, i64 16, i1 false) #5
  %347 = add i32 %339, 1
  store i32 %347, i32* %172, align 4
  br label %351

348:                                              ; preds = %333
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.12"* nonnull %21, %"struct.blink::(anonymous namespace)::SweepEvent"* nonnull dereferenceable(16) %8) #5
  %349 = load i32, i32* %172, align 4
  %350 = load i32, i32* %171, align 8
  br label %351

351:                                              ; preds = %348, %342
  %352 = phi i32 [ %340, %342 ], [ %350, %348 ]
  %353 = phi i32 [ %347, %342 ], [ %349, %348 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #5
  %354 = load i32, i32* %337, align 4
  %355 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %199, i64 0, i32 1, i32 0
  %356 = load i32, i32* %355, align 4
  %357 = add nsw i32 %356, %354
  store i32 %357, i32* %192, align 4
  store i32 1, i32* %193, align 4
  store i32 %334, i32* %194, align 4
  store i32 %336, i32* %195, align 4
  %358 = icmp eq i32 %353, %352
  br i1 %358, label %365, label %359, !prof !2

359:                                              ; preds = %351
  %360 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %170, align 8
  %361 = zext i32 %353 to i64
  %362 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %360, i64 %361
  %363 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %362 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %363, i8* nonnull align 4 %191, i64 16, i1 false) #5
  %364 = add i32 %353, 1
  store i32 %364, i32* %172, align 4
  br label %366

365:                                              ; preds = %351
  call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.12"* nonnull %21, %"struct.blink::(anonymous namespace)::SweepEvent"* nonnull dereferenceable(16) %9) #5
  br label %366

366:                                              ; preds = %365, %359
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #5
  %367 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %199, i64 1
  %368 = icmp eq %"class.blink::IntRect"* %367, %183
  br i1 %368, label %369, label %198

369:                                              ; preds = %366, %179
  %370 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %170, align 8
  %371 = load i32, i32* %172, align 4
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %370, i64 %372
  call fastcc void @"_ZNSt3__16__sortIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEvT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %370, %"struct.blink::(anonymous namespace)::SweepEvent"* %373) #5
  %374 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #5
  %375 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %375, align 8
  %376 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #5
  %377 = icmp eq i32 %371, 0
  br i1 %377, label %378, label %388

378:                                              ; preds = %369
  %379 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  %380 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %379, i8* %380) #5
  %381 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %382 = load i8*, i8** %381, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #5
  store i8* %382, i8** %375, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %387, label %384

384:                                              ; preds = %378
  %385 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %385) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %6) #5
  %386 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %385) #5
  br label %387

387:                                              ; preds = %384, %378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #5
  br label %445

388:                                              ; preds = %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #5
  %389 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %370, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  %391 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %392 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %393 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  %394 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %395 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %396

396:                                              ; preds = %442, %388
  %397 = phi i32 [ %390, %388 ], [ %444, %442 ]
  %398 = phi i64 [ 0, %388 ], [ %426, %442 ]
  %399 = phi i32 [ %390, %388 ], [ %425, %442 ]
  %400 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %370, %388 ], [ %440, %442 ]
  %401 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %400, i64 0, i32 0
  %402 = icmp sgt i32 %397, %399
  br i1 %402, label %403, label %424

403:                                              ; preds = %396
  %404 = sub nsw i32 %397, %399
  %405 = sext i32 %404 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %391) #5
  %406 = load i32, i32* %136, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %393) #5
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %409, label %408

408:                                              ; preds = %403
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #5
  store i8* null, i8** %392, align 8
  br label %416

409:                                              ; preds = %403
  %410 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  %411 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %410, i8* %411) #5
  %412 = load i8*, i8** %394, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #5
  store i8* %412, i8** %392, align 8
  %413 = icmp eq i8* %412, null
  br i1 %413, label %416, label %414

414:                                              ; preds = %409
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %395) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %3) #5
  %415 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %395) #5
  br label %416

416:                                              ; preds = %414, %409, %408
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %391) #5
  %417 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %135, align 8
  %418 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %417, i64 0, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = zext i32 %419 to i64
  %421 = mul nsw i64 %420, %405
  %422 = add i64 %421, %398
  %423 = load i32, i32* %401, align 4
  br label %424

424:                                              ; preds = %416, %396
  %425 = phi i32 [ %423, %416 ], [ %399, %396 ]
  %426 = phi i64 [ %422, %416 ], [ %398, %396 ]
  %427 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %400, i64 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %428, 0
  %430 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %400, i64 0, i32 2
  %431 = bitcast %"struct.blink::(anonymous namespace)::Segment"* %430 to i64*
  %432 = load i64, i64* %431, align 4
  %433 = load %"class.blink::(anonymous namespace)::BasicIntervals"*, %"class.blink::(anonymous namespace)::BasicIntervals"** %125, align 8
  %434 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %433, i64 0, i32 0, i32 0, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = add i32 %435, -2
  %437 = zext i32 %436 to i64
  %438 = shl nuw i64 %437, 32
  %439 = select i1 %429, i32 1, i32 -1
  call fastcc void @_ZN5blink12_GLOBAL__N_111SegmentTree5VisitEjNS0_7SegmentES2_i(%"class.blink::(anonymous namespace)::SegmentTree"* nonnull %20, i32 0, i64 %438, i64 %432, i32 %439) #5
  %440 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %400, i64 1
  %441 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %440, %373
  br i1 %441, label %445, label %442

442:                                              ; preds = %424
  %443 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %440, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br label %396

445:                                              ; preds = %424, %387
  %446 = phi i64 [ 0, %387 ], [ %426, %424 ]
  %447 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %370, null
  %448 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %370 to i8*
  br i1 %447, label %452, label %449, !prof !3

449:                                              ; preds = %445
  br i1 %377, label %451, label %450, !prof !2

450:                                              ; preds = %449
  store i32 0, i32* %172, align 4
  br label %451

451:                                              ; preds = %450, %449
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %448) #5
  store %"struct.blink::(anonymous namespace)::SweepEvent"* null, %"struct.blink::(anonymous namespace)::SweepEvent"** %170, align 8
  br label %452

452:                                              ; preds = %451, %445
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #5
  %453 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %135, align 8
  %454 = icmp eq %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %453, null
  %455 = bitcast %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %453 to i8*
  br i1 %454, label %461, label %456, !prof !3

456:                                              ; preds = %452
  %457 = load i32, i32* %136, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %460, label %459, !prof !2

459:                                              ; preds = %456
  store i32 0, i32* %136, align 4
  br label %460

460:                                              ; preds = %459, %456
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %455) #5
  store %"struct.blink::(anonymous namespace)::SegmentTree::Node"* null, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %135, align 8
  br label %461

461:                                              ; preds = %460, %452
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #5
  %462 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %19, i64 0, i32 1, i32 0, i32 0
  %463 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %462, align 8
  %464 = icmp eq %"struct.WTF::KeyValuePair"* %463, null
  br i1 %464, label %467, label %465, !prof !3

465:                                              ; preds = %461
  %466 = bitcast %"struct.WTF::KeyValuePair"* %463 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %466) #5
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %462, align 8
  br label %467

467:                                              ; preds = %465, %461
  %468 = load i32*, i32** %44, align 8
  %469 = icmp eq i32* %468, null
  %470 = bitcast i32* %468 to i8*
  br i1 %469, label %476, label %471, !prof !3

471:                                              ; preds = %467
  %472 = load i32, i32* %42, align 4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %475, label %474, !prof !2

474:                                              ; preds = %471
  store i32 0, i32* %42, align 4
  br label %475

475:                                              ; preds = %474, %471
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %470) #5
  store i32* null, i32** %44, align 8
  br label %476

476:                                              ; preds = %467, %475
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #5
  br label %477

477:                                              ; preds = %1, %476, %24
  %478 = phi i64 [ %32, %24 ], [ %446, %476 ], [ 0, %1 ]
  ret i64 %478
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 9223372036854775807
  br i1 %42, label %88, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i64 [ %41, %43 ], [ %73, %64 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i64 %58, %17
  br i1 %63, label %105, label %64

64:                                               ; preds = %57
  %65 = icmp eq i64 %58, 9223372036854775806
  %66 = select i1 %65, %"struct.WTF::KeyValuePair"* %59, %"struct.WTF::KeyValuePair"* %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 9223372036854775807
  br i1 %74, label %75, label %57

75:                                               ; preds = %64
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %76, label %88, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  store i64 9223372036854775807, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i32, i32* %1, align 4
  %87 = sext i32 %86 to i64
  br label %88

88:                                               ; preds = %10, %75, %77
  %89 = phi i64 [ %17, %75 ], [ %87, %77 ], [ %17, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %71, %75 ], [ %66, %77 ], [ %39, %10 ]
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 1
  %93 = load i32, i32* %2, align 4
  store i32 %93, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %88
  %104 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %90)
  br label %105

105:                                              ; preds = %57, %88, %103
  %106 = phi i8 [ 1, %88 ], [ 1, %103 ], [ 0, %57 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %90, %88 ], [ %104, %103 ], [ %59, %57 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIljEEEEPKcv, i64 0, i64 0)) #5
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %54, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %52, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 0
  store i64 9223372036854775807, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  store i32 0, i32* %47, align 8
  %48 = or i64 %44, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 0
  store i64 9223372036854775807, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %48, i32 1
  store i32 0, i32* %50, align 8
  %51 = add nuw nsw i64 %44, 2
  %52 = add i64 %45, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %43

54:                                               ; preds = %43, %38
  %55 = phi i64 [ 0, %38 ], [ %51, %43 ]
  %56 = icmp eq i64 %39, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 0
  store i64 9223372036854775807, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %55, i32 1
  store i32 0, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54, %31
  %61 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #5
  ret %"struct.WTF::KeyValuePair"* %61
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %65
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %66, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %69, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %67, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #5
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %65
  %43 = phi i64 [ %66, %65 ], [ %23, %21 ]
  %44 = phi i32 [ %67, %65 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %68, %65 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %69, %65 ], [ null, %21 ]
  %47 = phi i32 [ %70, %65 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = or i64 %51, 1
  %53 = icmp eq i64 %52, 9223372036854775807
  br i1 %53, label %65, label %54

54:                                               ; preds = %42
  %55 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable"* nonnull %5, i64* dereferenceable(8) %50) #5
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %55, 0
  %57 = bitcast %"struct.WTF::KeyValuePair"* %56 to i8*
  %58 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #5
  %59 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %48
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, %3
  %62 = select i1 %61, %"struct.WTF::KeyValuePair"* %56, %"struct.WTF::KeyValuePair"* %46
  %63 = load i32, i32* %12, align 8
  %64 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  br label %65

65:                                               ; preds = %42, %54
  %66 = phi i64 [ %43, %42 ], [ %64, %54 ]
  %67 = phi i32 [ %44, %42 ], [ %63, %54 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %59, %54 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %62, %54 ]
  %70 = add i32 %47, 1
  %71 = icmp eq i32 %70, %67
  br i1 %71, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 9223372036854775807
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, 9223372036854775806
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 9223372036854775807
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %83
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.0"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #5
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #5
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #5
  %47 = bitcast %"class.WTF::Vector.0"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #5
  %51 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #5
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #5
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #5
  %87 = bitcast %"class.WTF::Vector.0"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #5
  %91 = bitcast %"class.WTF::Vector.0"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZNSt3__16__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.22"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISB_S5_SC_EERKijEENS_18HashTableAddResultISD_S2_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %17
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 9223372036854775807
  br i1 %42, label %88, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i64 [ %41, %43 ], [ %73, %64 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i64 %58, %17
  br i1 %63, label %105, label %64

64:                                               ; preds = %57
  %65 = icmp eq i64 %58, 9223372036854775806
  %66 = select i1 %65, %"struct.WTF::KeyValuePair"* %59, %"struct.WTF::KeyValuePair"* %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 9223372036854775807
  br i1 %74, label %75, label %57

75:                                               ; preds = %64
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %76, label %88, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  store i64 9223372036854775807, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i32, i32* %1, align 4
  %87 = sext i32 %86 to i64
  br label %88

88:                                               ; preds = %10, %75, %77
  %89 = phi i64 [ %17, %75 ], [ %87, %77 ], [ %17, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %71, %75 ], [ %66, %77 ], [ %39, %10 ]
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 1
  %93 = load i32, i32* %2, align 4
  store i32 %93, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %88
  %104 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIljEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIlEENS_10HashTraitsIjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %90)
  br label %105

105:                                              ; preds = %57, %88, %103
  %106 = phi i8 [ 1, %88 ], [ 1, %103 ], [ 0, %57 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %90, %88 ], [ %104, %103 ], [ %59, %57 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_110SweepEventENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.14"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = zext i32 %1 to i64
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = icmp ugt i32 %1, 134086656
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %6) #5
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %13, i8* %14) #5
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %4) #5
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #5
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  %22 = shl nuw nsw i64 %6, 4
  %23 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %22) #5
  %24 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12_GLOBAL__N_110SweepEventEEEPKcv, i64 0, i64 0)) #5
  %25 = bitcast %"class.WTF::VectorBufferBase.14"* %0 to i64*
  %26 = ptrtoint i8* %24 to i64
  store atomic i64 %26, i64* %25 monotonic, align 8
  %27 = lshr i64 %23, 4
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.WTF::VectorBufferBase.14", %"class.WTF::VectorBufferBase.14"* %0, i64 0, i32 1
  store i32 %28, i32* %29, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.12"* nocapture, %"struct.blink::(anonymous namespace)::SweepEvent"* dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %6, align 8
  %8 = icmp ugt %"struct.blink::(anonymous namespace)::SweepEvent"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::(anonymous namespace)::SweepEvent"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.12"* %0, i32 %5) #5
  %14 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i64
  %17 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 4
  tail call fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.12"* %0, i32 %5) #5
  %20 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %23, i64 %26
  %28 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %27 to i8*
  %29 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 16, i1 false) #5
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF6VectorIN5blink12_GLOBAL__N_110SweepEventELj0ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.12"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::VectorBufferBase.14", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 2
  %7 = add i32 %5, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp ugt i32 %10, %1
  %12 = select i1 %11, i32 %10, i32 %1
  %13 = icmp ult i32 %5, %12
  br i1 %13, label %14, label %45, !prof !3

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %15, align 8
  %17 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_110SweepEventENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.14"* %19, i32 %12) #5
  br label %45

20:                                               ; preds = %14
  %21 = bitcast %"class.WTF::VectorBufferBase.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #5
  %22 = getelementptr inbounds %"class.WTF::VectorBufferBase.14", %"class.WTF::VectorBufferBase.14"* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::VectorBufferBase.14", %"class.WTF::VectorBufferBase.14"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false) #5
  store %"struct.blink::(anonymous namespace)::SweepEvent"* null, %"struct.blink::(anonymous namespace)::SweepEvent"** %22, align 8
  store i32 0, i32* %23, align 8
  call fastcc void @_ZN3WTF16VectorBufferBaseIN5blink12_GLOBAL__N_110SweepEventENS_18PartitionAllocatorEE23AllocateBufferNoBarrierEj(%"class.WTF::VectorBufferBase.14"* nonnull %3, i32 %12) #5
  %24 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %22, align 8
  %25 = bitcast i32* %23 to i64*
  %26 = load i64, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #5
  %27 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %24 to i64
  %28 = load %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"** %15, align 8
  %29 = icmp ne %"struct.blink::(anonymous namespace)::SweepEvent"* %24, null
  %30 = icmp ne %"struct.blink::(anonymous namespace)::SweepEvent"* %28, null
  %31 = and i1 %29, %30
  %32 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %28 to i8*
  br i1 %31, label %33, label %41, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 4
  %38 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* nonnull align 4 %32, i64 %37, i1 false) #5
  %39 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %33, %20
  %42 = phi i8* [ %40, %33 ], [ %32, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #5
  %43 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %27, i64* %43 monotonic, align 8
  %44 = trunc i64 %26 to i32
  store i32 %44, i32* %4, align 8
  br label %45

45:                                               ; preds = %2, %18, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEvT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %439, %2
  %4 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %1, %2 ], [ %410, %439 ]
  %5 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %0, %2 ], [ %30, %439 ]
  %6 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %4 to i64
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %7, i64 0, i32 0
  %9 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %7 to i8*
  %10 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  %12 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  %13 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %7 to i8*
  %14 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  %16 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  %17 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %7 to i8*
  %18 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  %20 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %7, i64 0, i32 0
  %22 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %7 to i8*
  %23 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  %26 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %4 to i64
  br label %27

27:                                               ; preds = %448, %3
  %28 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %5, %3 ], [ %449, %448 ]
  br label %29

29:                                               ; preds = %331, %27
  %30 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %28, %27 ], [ %320, %331 ]
  %31 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i64
  %32 = sub i64 %6, %31
  %33 = ashr exact i64 %32, 4
  switch i64 %33, label %124 [
    i64 0, label %452
    i64 1, label %452
    i64 2, label %34
    i64 3, label %53
    i64 4, label %113
    i64 5, label %118
  ]

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1
  %36 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %37, %39
  br i1 %40, label %41, label %452

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  %49 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 16, i1 false) #5
  store i32 %39, i32* %36, align 4
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  store i32 %43, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  store i32 %45, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  store i32 %47, i32* %52, align 4
  br label %452

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %55 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %57, %59
  %61 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %55, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, %57
  br i1 %60, label %88, label %64

64:                                               ; preds = %53
  br i1 %63, label %65, label %452

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %54 to i8*
  %73 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 16, i1 false) #5
  store i32 %57, i32* %61, align 4
  %74 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  store i32 %67, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  store i32 %69, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  store i32 %71, i32* %76, align 4
  %77 = load i32, i32* %56, align 4
  %78 = load i32, i32* %58, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %452

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %72, i64 16, i1 false) #5
  store i32 %78, i32* %56, align 4
  store i32 %82, i32* %66, align 4
  store i32 %84, i32* %68, align 4
  store i32 %86, i32* %70, align 4
  br label %452

88:                                               ; preds = %53
  %89 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  br i1 %63, label %96, label %101

96:                                               ; preds = %88
  %97 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %97, i64 16, i1 false) #5
  store i32 %59, i32* %61, align 4
  %98 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  store i32 %90, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  store i32 %92, i32* %99, align 4
  %100 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  store i32 %94, i32* %100, align 4
  br label %452

101:                                              ; preds = %88
  %102 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %102, i64 16, i1 false) #5
  store i32 %59, i32* %56, align 4
  %103 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 1
  store i32 %90, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 0
  store i32 %92, i32* %104, align 4
  %105 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 1
  store i32 %94, i32* %105, align 4
  %106 = load i32, i32* %61, align 4
  %107 = icmp slt i32 %106, %59
  br i1 %107, label %108, label %452

108:                                              ; preds = %101
  %109 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 16, i1 false) #5
  store i32 %59, i32* %61, align 4
  %110 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 1
  store i32 %90, i32* %110, align 4
  %111 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 0
  store i32 %92, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1, i32 2, i32 1
  store i32 %94, i32* %112, align 4
  br label %452

113:                                              ; preds = %29
  %114 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %115 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2
  %116 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1
  %117 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %30, %"struct.blink::(anonymous namespace)::SweepEvent"* %114, %"struct.blink::(anonymous namespace)::SweepEvent"* %115, %"struct.blink::(anonymous namespace)::SweepEvent"* %116)
  br label %452

118:                                              ; preds = %29
  %119 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %120 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2
  %121 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 3
  %122 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 -1
  %123 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %30, %"struct.blink::(anonymous namespace)::SweepEvent"* %119, %"struct.blink::(anonymous namespace)::SweepEvent"* %120, %"struct.blink::(anonymous namespace)::SweepEvent"* %121, %"struct.blink::(anonymous namespace)::SweepEvent"* %122)
  br label %452

124:                                              ; preds = %29
  %125 = icmp slt i64 %32, 496
  br i1 %125, label %126, label %224

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2
  %128 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %129 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %128, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %130, %132
  %134 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, %130
  br i1 %133, label %160, label %137

137:                                              ; preds = %126
  br i1 %136, label %138, label %184

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %128 to i8*
  %146 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 16, i1 false) #5
  store i32 %130, i32* %134, align 4
  %147 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 1
  store i32 %140, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 0
  store i32 %142, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 1
  store i32 %144, i32* %149, align 4
  %150 = load i32, i32* %129, align 4
  %151 = icmp slt i32 %150, %132
  br i1 %151, label %152, label %184

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %145, i64 16, i1 false) #5
  store i32 %132, i32* %129, align 4
  store i32 %154, i32* %139, align 4
  store i32 %156, i32* %141, align 4
  store i32 %158, i32* %143, align 4
  br label %184

160:                                              ; preds = %126
  %161 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  br i1 %136, label %168, label %173

168:                                              ; preds = %160
  %169 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %169, i64 16, i1 false) #5
  store i32 %132, i32* %134, align 4
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 1
  store i32 %162, i32* %170, align 4
  %171 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 0
  store i32 %164, i32* %171, align 4
  %172 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 1
  store i32 %166, i32* %172, align 4
  br label %184

173:                                              ; preds = %160
  %174 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %174, i64 16, i1 false) #5
  store i32 %132, i32* %129, align 4
  %175 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 1
  store i32 %162, i32* %175, align 4
  %176 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 0
  store i32 %164, i32* %176, align 4
  %177 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1, i32 2, i32 1
  store i32 %166, i32* %177, align 4
  %178 = icmp slt i32 %135, %132
  br i1 %178, label %179, label %184

179:                                              ; preds = %173
  %180 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %180, i64 16, i1 false) #5
  store i32 %132, i32* %134, align 4
  %181 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 1
  store i32 %162, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 0
  store i32 %164, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 2, i32 2, i32 1
  store i32 %166, i32* %183, align 4
  br label %184

184:                                              ; preds = %179, %173, %168, %152, %138, %137
  %185 = phi i32 [ %135, %137 ], [ %130, %138 ], [ %130, %152 ], [ %132, %168 ], [ %135, %173 ], [ %132, %179 ]
  %186 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 3
  %187 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %186, %4
  br i1 %187, label %452, label %188

188:                                              ; preds = %184, %222
  %189 = phi i32 [ %223, %222 ], [ %185, %184 ]
  %190 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %220, %222 ], [ %186, %184 ]
  %191 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %190, %222 ], [ %127, %184 ]
  %192 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %190, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %193, %189
  br i1 %194, label %195, label %219

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %190, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %190, i64 0, i32 2, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %190, i64 0, i32 2, i32 1
  %201 = load i32, i32* %200, align 4
  br label %202

202:                                              ; preds = %208, %195
  %203 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %190, %195 ], [ %204, %208 ]
  %204 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %191, %195 ], [ %209, %208 ]
  %205 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %203 to i8*
  %206 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %205, i8* align 4 %206, i64 16, i1 false) #5
  %207 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %204, %30
  br i1 %207, label %213, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %204, i64 -1
  %210 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %209, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp slt i32 %193, %211
  br i1 %212, label %202, label %213

213:                                              ; preds = %208, %202
  %214 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %30, %202 ], [ %204, %208 ]
  %215 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %214, i64 0, i32 0
  store i32 %193, i32* %215, align 4
  %216 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %214, i64 0, i32 1
  store i32 %197, i32* %216, align 4
  %217 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %214, i64 0, i32 2, i32 0
  store i32 %199, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %214, i64 0, i32 2, i32 1
  store i32 %201, i32* %218, align 4
  br label %219

219:                                              ; preds = %213, %188
  %220 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %190, i64 1
  %221 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %220, %4
  br i1 %221, label %452, label %222

222:                                              ; preds = %219
  %223 = load i32, i32* %192, align 4
  br label %188

224:                                              ; preds = %124
  %225 = icmp sgt i64 %32, 15984
  %226 = sdiv i64 %33, 2
  %227 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226
  br i1 %225, label %228, label %233

228:                                              ; preds = %224
  %229 = sdiv i64 %33, 4
  %230 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %229
  %231 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %227, i64 %229
  %232 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %30, %"struct.blink::(anonymous namespace)::SweepEvent"* %230, %"struct.blink::(anonymous namespace)::SweepEvent"* %227, %"struct.blink::(anonymous namespace)::SweepEvent"* %231, %"struct.blink::(anonymous namespace)::SweepEvent"* %7)
  br label %278

233:                                              ; preds = %224
  %234 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp slt i32 %235, %237
  %239 = load i32, i32* %8, align 4
  %240 = icmp slt i32 %239, %235
  br i1 %238, label %261, label %241

241:                                              ; preds = %233
  br i1 %240, label %242, label %278

242:                                              ; preds = %241
  %243 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 2, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 2, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %9, i64 16, i1 false) #5
  store i32 %235, i32* %8, align 4
  store i32 %244, i32* %10, align 4
  store i32 %246, i32* %11, align 4
  store i32 %248, i32* %12, align 4
  %250 = load i32, i32* %234, align 4
  %251 = load i32, i32* %236, align 4
  %252 = icmp slt i32 %250, %251
  br i1 %252, label %253, label %278

253:                                              ; preds = %242
  %254 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %260, i8* align 4 %249, i64 16, i1 false) #5
  store i32 %251, i32* %234, align 4
  store i32 %255, i32* %243, align 4
  store i32 %257, i32* %245, align 4
  store i32 %259, i32* %247, align 4
  br label %278

261:                                              ; preds = %233
  %262 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  br i1 %240, label %269, label %270

269:                                              ; preds = %261
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %17, i64 16, i1 false) #5
  store i32 %237, i32* %8, align 4
  store i32 %263, i32* %18, align 4
  store i32 %265, i32* %19, align 4
  store i32 %267, i32* %20, align 4
  br label %278

270:                                              ; preds = %261
  %271 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %227 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %271, i64 16, i1 false) #5
  store i32 %237, i32* %234, align 4
  %272 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 1
  store i32 %263, i32* %272, align 4
  %273 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 2, i32 0
  store i32 %265, i32* %273, align 4
  %274 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 %226, i32 2, i32 1
  store i32 %267, i32* %274, align 4
  %275 = load i32, i32* %8, align 4
  %276 = icmp slt i32 %275, %237
  br i1 %276, label %277, label %278

277:                                              ; preds = %270
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %13, i64 16, i1 false) #5
  store i32 %237, i32* %8, align 4
  store i32 %263, i32* %14, align 4
  store i32 %265, i32* %15, align 4
  store i32 %267, i32* %16, align 4
  br label %278

278:                                              ; preds = %277, %270, %269, %253, %242, %241, %228
  %279 = phi i32 [ %232, %228 ], [ 1, %269 ], [ 0, %241 ], [ 2, %253 ], [ 1, %242 ], [ 2, %277 ], [ 1, %270 ]
  %280 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %227, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %364, label %285

285:                                              ; preds = %278, %346
  %286 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %287, %346 ], [ %7, %278 ]
  %287 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %286, i64 -1
  %288 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %30, %287
  br i1 %288, label %289, label %346

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %291 = load i32, i32* %21, align 4
  %292 = icmp slt i32 %281, %291
  br i1 %292, label %312, label %293

293:                                              ; preds = %289
  %294 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %290, %7
  br i1 %294, label %452, label %295

295:                                              ; preds = %293, %309
  %296 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %310, %309 ], [ %290, %293 ]
  %297 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = icmp slt i32 %281, %298
  br i1 %299, label %300, label %309

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 0, i32 2, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 0, i32 2, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %296 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %307, i8* align 4 %22, i64 16, i1 false) #5
  store i32 %298, i32* %21, align 4
  store i32 %302, i32* %23, align 4
  store i32 %304, i32* %24, align 4
  store i32 %306, i32* %25, align 4
  %308 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 1
  br label %312

309:                                              ; preds = %295
  %310 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %296, i64 1
  %311 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %310, %7
  br i1 %311, label %452, label %295

312:                                              ; preds = %300, %289
  %313 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %290, %289 ], [ %308, %300 ]
  %314 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %313, %7
  br i1 %314, label %452, label %315

315:                                              ; preds = %312, %333
  %316 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %324, %333 ], [ %313, %312 ]
  %317 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %327, %333 ], [ %7, %312 ]
  %318 = load i32, i32* %280, align 4
  br label %319

319:                                              ; preds = %319, %315
  %320 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %316, %315 ], [ %324, %319 ]
  %321 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  %323 = icmp slt i32 %318, %322
  %324 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %320, i64 1
  br i1 %323, label %325, label %319

325:                                              ; preds = %319, %325
  %326 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %327, %325 ], [ %317, %319 ]
  %327 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %326, i64 -1
  %328 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %327, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %318, %329
  br i1 %330, label %325, label %331

331:                                              ; preds = %325
  %332 = icmp ult %"struct.blink::(anonymous namespace)::SweepEvent"* %320, %327
  br i1 %332, label %333, label %29

333:                                              ; preds = %331
  %334 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %327, i64 0, i32 0
  %335 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %320, i64 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %320, i64 0, i32 2, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %320, i64 0, i32 2, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %320 to i8*
  %342 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %327 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 16, i1 false) #5
  store i32 %322, i32* %334, align 4
  %343 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %326, i64 -1, i32 1
  store i32 %336, i32* %343, align 4
  %344 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %326, i64 -1, i32 2, i32 0
  store i32 %338, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %326, i64 -1, i32 2, i32 1
  store i32 %340, i32* %345, align 4
  br label %315

346:                                              ; preds = %285
  %347 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %287, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = icmp slt i32 %348, %283
  br i1 %349, label %350, label %285

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %287, i64 0, i32 0
  %352 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 1
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 0, i32 2, i32 1
  %357 = load i32, i32* %356, align 4
  %358 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i8*
  %359 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %287 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 16, i1 false) #5
  store i32 %281, i32* %351, align 4
  %360 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %286, i64 -1, i32 1
  store i32 %353, i32* %360, align 4
  %361 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %286, i64 -1, i32 2, i32 0
  store i32 %355, i32* %361, align 4
  %362 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %286, i64 -1, i32 2, i32 1
  store i32 %357, i32* %362, align 4
  %363 = add i32 %279, 1
  br label %364

364:                                              ; preds = %278, %350
  %365 = phi i32 [ %363, %350 ], [ %279, %278 ]
  %366 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %287, %350 ], [ %7, %278 ]
  %367 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %30 to i64
  %368 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %30, i64 1
  %369 = icmp ult %"struct.blink::(anonymous namespace)::SweepEvent"* %368, %366
  br i1 %369, label %370, label %407

370:                                              ; preds = %364, %391
  %371 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %406, %391 ], [ %227, %364 ]
  %372 = phi i32 [ %404, %391 ], [ %365, %364 ]
  %373 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %382, %391 ], [ %368, %364 ]
  %374 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %385, %391 ], [ %366, %364 ]
  %375 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %371, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br label %377

377:                                              ; preds = %377, %370
  %378 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %373, %370 ], [ %382, %377 ]
  %379 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %378, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = icmp slt i32 %380, %376
  %382 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %378, i64 1
  br i1 %381, label %377, label %383

383:                                              ; preds = %377, %383
  %384 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %385, %383 ], [ %374, %377 ]
  %385 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %384, i64 -1
  %386 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  %388 = icmp slt i32 %387, %376
  br i1 %388, label %389, label %383

389:                                              ; preds = %383
  %390 = icmp ugt %"struct.blink::(anonymous namespace)::SweepEvent"* %378, %385
  br i1 %390, label %407, label %391

391:                                              ; preds = %389
  %392 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %385, i64 0, i32 0
  %393 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %378, i64 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %378, i64 0, i32 2, i32 0
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %378, i64 0, i32 2, i32 1
  %398 = load i32, i32* %397, align 4
  %399 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %378 to i8*
  %400 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %385 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 16, i1 false) #5
  store i32 %380, i32* %392, align 4
  %401 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %384, i64 -1, i32 1
  store i32 %394, i32* %401, align 4
  %402 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %384, i64 -1, i32 2, i32 0
  store i32 %396, i32* %402, align 4
  %403 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %384, i64 -1, i32 2, i32 1
  store i32 %398, i32* %403, align 4
  %404 = add i32 %372, 1
  %405 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %371, %378
  %406 = select i1 %405, %"struct.blink::(anonymous namespace)::SweepEvent"* %385, %"struct.blink::(anonymous namespace)::SweepEvent"* %371
  br label %370

407:                                              ; preds = %389, %364
  %408 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %227, %364 ], [ %371, %389 ]
  %409 = phi i32 [ %365, %364 ], [ %372, %389 ]
  %410 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %368, %364 ], [ %378, %389 ]
  %411 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %410, %408
  br i1 %411, label %431, label %412

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %408, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp slt i32 %414, %416
  br i1 %417, label %418, label %431

418:                                              ; preds = %412
  %419 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 0, i32 2, i32 0
  %422 = load i32, i32* %421, align 4
  %423 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 0, i32 2, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %410 to i8*
  %426 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %408 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %425, i8* align 4 %426, i64 16, i1 false) #5
  store i32 %416, i32* %413, align 4
  %427 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %408, i64 0, i32 1
  store i32 %420, i32* %427, align 4
  %428 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %408, i64 0, i32 2, i32 0
  store i32 %422, i32* %428, align 4
  %429 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %408, i64 0, i32 2, i32 1
  store i32 %424, i32* %429, align 4
  %430 = add i32 %409, 1
  br label %431

431:                                              ; preds = %407, %418, %412
  %432 = phi i32 [ %430, %418 ], [ %409, %412 ], [ %409, %407 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %441

434:                                              ; preds = %431
  %435 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEbT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %30, %"struct.blink::(anonymous namespace)::SweepEvent"* %410)
  %436 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 1
  %437 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEbT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %436, %"struct.blink::(anonymous namespace)::SweepEvent"* %4)
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  br i1 %435, label %452, label %439

439:                                              ; preds = %438, %450
  br label %3

440:                                              ; preds = %434
  br i1 %435, label %448, label %441

441:                                              ; preds = %440, %431
  %442 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %410 to i64
  %443 = sub i64 %442, %367
  %444 = sub i64 %26, %442
  %445 = icmp slt i64 %443, %444
  br i1 %445, label %446, label %450

446:                                              ; preds = %441
  tail call fastcc void @"_ZNSt3__16__sortIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEvT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %30, %"struct.blink::(anonymous namespace)::SweepEvent"* %410)
  %447 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 1
  br label %448

448:                                              ; preds = %446, %440
  %449 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %436, %440 ], [ %447, %446 ]
  br label %27

450:                                              ; preds = %441
  %451 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %410, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEvT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %451, %"struct.blink::(anonymous namespace)::SweepEvent"* %4)
  br label %439

452:                                              ; preds = %438, %312, %29, %29, %293, %309, %219, %184, %108, %101, %96, %80, %65, %64, %34, %41, %113, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* nocapture, %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"* nocapture) unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %6, %8
  %10 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  br i1 %9, label %38, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %63

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i8*
  %22 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false) #5
  store i32 %6, i32* %10, align 4
  %23 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 1
  store i32 %16, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 0
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 1
  store i32 %20, i32* %25, align 4
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %63

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %21, i64 16, i1 false) #5
  store i32 %27, i32* %5, align 4
  store i32 %31, i32* %15, align 4
  store i32 %33, i32* %17, align 4
  store i32 %35, i32* %19, align 4
  %37 = load i32, i32* %10, align 4
  br label %63

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  br i1 %12, label %46, label %51

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 16, i1 false) #5
  store i32 %8, i32* %10, align 4
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 1
  store i32 %40, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 0
  store i32 %42, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 1
  store i32 %44, i32* %50, align 4
  br label %63

51:                                               ; preds = %38
  %52 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %52, i64 16, i1 false) #5
  store i32 %8, i32* %5, align 4
  %53 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 1
  store i32 %40, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 0
  store i32 %42, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 1
  store i32 %44, i32* %55, align 4
  %56 = load i32, i32* %10, align 4
  %57 = icmp slt i32 %56, %8
  br i1 %57, label %58, label %63

58:                                               ; preds = %51
  %59 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %59, i64 16, i1 false) #5
  store i32 %8, i32* %10, align 4
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 1
  store i32 %40, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 0
  store i32 %42, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 1
  store i32 %44, i32* %62, align 4
  br label %63

63:                                               ; preds = %13, %14, %29, %46, %51, %58
  %64 = phi i32 [ %8, %46 ], [ %11, %13 ], [ %37, %29 ], [ %6, %14 ], [ %8, %58 ], [ %56, %51 ]
  %65 = phi i32 [ 1, %46 ], [ 0, %13 ], [ 2, %29 ], [ 1, %14 ], [ 2, %58 ], [ 1, %51 ]
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, %64
  br i1 %68, label %69, label %106

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %2 to i8*
  %77 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 16, i1 false) #5
  store i32 %64, i32* %66, align 4
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 1
  store i32 %71, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 2, i32 0
  store i32 %73, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 2, i32 1
  store i32 %75, i32* %80, align 4
  %81 = add nuw nsw i32 %65, 1
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %5, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %85, label %106

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %76, i64 16, i1 false) #5
  store i32 %83, i32* %10, align 4
  store i32 %87, i32* %70, align 4
  store i32 %89, i32* %72, align 4
  store i32 %91, i32* %74, align 4
  %93 = add nuw nsw i32 %65, 2
  %94 = load i32, i32* %5, align 4
  %95 = load i32, i32* %7, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %97, label %106

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %92, i64 16, i1 false) #5
  store i32 %95, i32* %5, align 4
  store i32 %99, i32* %86, align 4
  store i32 %101, i32* %88, align 4
  store i32 %103, i32* %90, align 4
  %105 = add nuw nsw i32 %65, 3
  br label %106

106:                                              ; preds = %69, %97, %85, %63
  %107 = phi i32 [ %105, %97 ], [ %93, %85 ], [ %81, %69 ], [ %65, %63 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* nocapture, %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"* nocapture, %"struct.blink::(anonymous namespace)::SweepEvent"* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %0, %"struct.blink::(anonymous namespace)::SweepEvent"* %1, %"struct.blink::(anonymous namespace)::SweepEvent"* %2, %"struct.blink::(anonymous namespace)::SweepEvent"* %3)
  %7 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %64

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %3, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %3 to i8*
  %20 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false) #5
  store i32 %10, i32* %7, align 4
  %21 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 0, i32 1
  store i32 %14, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 0, i32 2, i32 0
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %4, i64 0, i32 2, i32 1
  store i32 %18, i32* %23, align 4
  %24 = add i32 %6, 1
  %25 = load i32, i32* %9, align 4
  %26 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %29, label %64

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %2, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %19, i64 16, i1 false) #5
  store i32 %27, i32* %9, align 4
  store i32 %31, i32* %13, align 4
  store i32 %33, i32* %15, align 4
  store i32 %35, i32* %17, align 4
  %37 = add i32 %6, 2
  %38 = load i32, i32* %26, align 4
  %39 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %64

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %36, i64 16, i1 false) #5
  store i32 %40, i32* %26, align 4
  store i32 %44, i32* %30, align 4
  store i32 %46, i32* %32, align 4
  store i32 %48, i32* %34, align 4
  %50 = add i32 %6, 3
  %51 = load i32, i32* %39, align 4
  %52 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %49, i64 16, i1 false) #5
  store i32 %53, i32* %39, align 4
  store i32 %57, i32* %43, align 4
  store i32 %59, i32* %45, align 4
  store i32 %61, i32* %47, align 4
  %63 = add i32 %6, 4
  br label %64

64:                                               ; preds = %12, %42, %55, %29, %5
  %65 = phi i32 [ %63, %55 ], [ %50, %42 ], [ %37, %29 ], [ %24, %12 ], [ %6, %5 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEbT0_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"*, %"struct.blink::(anonymous namespace)::SweepEvent"*) unnamed_addr #0 {
  %3 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %1 to i64
  %4 = ptrtoint %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 4
  switch i64 %6, label %97 [
    i64 0, label %203
    i64 1, label %203
    i64 2, label %7
    i64 3, label %26
    i64 4, label %86
    i64 5, label %91
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %203

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  %22 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false) #5
  store i32 %12, i32* %9, align 4
  %23 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 1
  store i32 %16, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 0
  store i32 %18, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 1
  store i32 %20, i32* %25, align 4
  br label %203

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1
  %28 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1
  %29 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %30, %32
  %34 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %28, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %30
  br i1 %33, label %61, label %37

37:                                               ; preds = %26
  br i1 %36, label %38, label %203

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %27 to i8*
  %46 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 16, i1 false) #5
  store i32 %30, i32* %34, align 4
  %47 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 1
  store i32 %40, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 0
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 1
  store i32 %44, i32* %49, align 4
  %50 = load i32, i32* %29, align 4
  %51 = load i32, i32* %31, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %203

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %45, i64 16, i1 false) #5
  store i32 %51, i32* %29, align 4
  store i32 %55, i32* %39, align 4
  store i32 %57, i32* %41, align 4
  store i32 %59, i32* %43, align 4
  br label %203

61:                                               ; preds = %26
  %62 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  br i1 %36, label %69, label %74

69:                                               ; preds = %61
  %70 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %70, i64 16, i1 false) #5
  store i32 %32, i32* %34, align 4
  %71 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 1
  store i32 %63, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 0
  store i32 %65, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 1
  store i32 %67, i32* %73, align 4
  br label %203

74:                                               ; preds = %61
  %75 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %75, i64 16, i1 false) #5
  store i32 %32, i32* %29, align 4
  %76 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 1
  store i32 %63, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 0
  store i32 %65, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 1
  store i32 %67, i32* %78, align 4
  %79 = load i32, i32* %34, align 4
  %80 = icmp slt i32 %79, %32
  br i1 %80, label %81, label %203

81:                                               ; preds = %74
  %82 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %75, i8* align 4 %82, i64 16, i1 false) #5
  store i32 %32, i32* %34, align 4
  %83 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 1
  store i32 %63, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 0
  store i32 %65, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1, i32 2, i32 1
  store i32 %67, i32* %85, align 4
  br label %203

86:                                               ; preds = %2
  %87 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1
  %88 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2
  %89 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %0, %"struct.blink::(anonymous namespace)::SweepEvent"* %87, %"struct.blink::(anonymous namespace)::SweepEvent"* %88, %"struct.blink::(anonymous namespace)::SweepEvent"* %89)
  br label %203

91:                                               ; preds = %2
  %92 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1
  %93 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2
  %94 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 3
  %95 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %1, i64 -1
  %96 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink12_GLOBAL__N_17Sweeper14InitEventQueueERN3WTF6VectorINS2_10SweepEventELj0ENS4_18PartitionAllocatorEEERKNS2_14BasicIntervalsEE3$_0PS6_EEjT0_SG_SG_SG_SG_T_"(%"struct.blink::(anonymous namespace)::SweepEvent"* %0, %"struct.blink::(anonymous namespace)::SweepEvent"* %92, %"struct.blink::(anonymous namespace)::SweepEvent"* %93, %"struct.blink::(anonymous namespace)::SweepEvent"* %94, %"struct.blink::(anonymous namespace)::SweepEvent"* %95)
  br label %203

97:                                               ; preds = %2
  %98 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2
  %99 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1
  %100 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %101, %103
  %105 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, %101
  br i1 %104, label %131, label %108

108:                                              ; preds = %97
  br i1 %107, label %109, label %155

109:                                              ; preds = %108
  %110 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %99 to i8*
  %117 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 16, i1 false) #5
  store i32 %101, i32* %105, align 4
  %118 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 1
  store i32 %111, i32* %118, align 4
  %119 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 0
  store i32 %113, i32* %119, align 4
  %120 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 1
  store i32 %115, i32* %120, align 4
  %121 = load i32, i32* %100, align 4
  %122 = icmp slt i32 %121, %103
  br i1 %122, label %123, label %155

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %116, i64 16, i1 false) #5
  store i32 %103, i32* %100, align 4
  store i32 %125, i32* %110, align 4
  store i32 %127, i32* %112, align 4
  store i32 %129, i32* %114, align 4
  br label %155

131:                                              ; preds = %97
  %132 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 0, i32 2, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %0 to i8*
  br i1 %107, label %139, label %144

139:                                              ; preds = %131
  %140 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %140, i64 16, i1 false) #5
  store i32 %103, i32* %105, align 4
  %141 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 1
  store i32 %133, i32* %141, align 4
  %142 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 0
  store i32 %135, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 1
  store i32 %137, i32* %143, align 4
  br label %155

144:                                              ; preds = %131
  %145 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %145, i64 16, i1 false) #5
  store i32 %103, i32* %100, align 4
  %146 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 1
  store i32 %133, i32* %146, align 4
  %147 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 0
  store i32 %135, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 1, i32 2, i32 1
  store i32 %137, i32* %148, align 4
  %149 = icmp slt i32 %106, %103
  br i1 %149, label %150, label %155

150:                                              ; preds = %144
  %151 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %151, i64 16, i1 false) #5
  store i32 %103, i32* %105, align 4
  %152 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 1
  store i32 %133, i32* %152, align 4
  %153 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 0
  store i32 %135, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 2, i32 2, i32 1
  store i32 %137, i32* %154, align 4
  br label %155

155:                                              ; preds = %108, %109, %123, %139, %144, %150
  %156 = phi i32 [ %106, %108 ], [ %101, %109 ], [ %101, %123 ], [ %103, %139 ], [ %106, %144 ], [ %103, %150 ]
  %157 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %0, i64 3
  %158 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %157, %1
  br i1 %158, label %203, label %159

159:                                              ; preds = %155, %197
  %160 = phi i32 [ %199, %197 ], [ %156, %155 ]
  %161 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %195, %197 ], [ %157, %155 ]
  %162 = phi i32 [ %194, %197 ], [ 0, %155 ]
  %163 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %161, %197 ], [ %98, %155 ]
  %164 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp slt i32 %165, %160
  br i1 %166, label %167, label %193

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 0, i32 2, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 0, i32 2, i32 1
  %173 = load i32, i32* %172, align 4
  br label %174

174:                                              ; preds = %180, %167
  %175 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %161, %167 ], [ %176, %180 ]
  %176 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %163, %167 ], [ %181, %180 ]
  %177 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %175 to i8*
  %178 = bitcast %"struct.blink::(anonymous namespace)::SweepEvent"* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 16, i1 false)
  %179 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %176, %0
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %176, i64 -1
  %182 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %181, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %165, %183
  br i1 %184, label %174, label %185

185:                                              ; preds = %174, %180
  %186 = phi %"struct.blink::(anonymous namespace)::SweepEvent"* [ %0, %174 ], [ %176, %180 ]
  %187 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %186, i64 0, i32 0
  store i32 %165, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %186, i64 0, i32 1
  store i32 %169, i32* %188, align 4
  %189 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %186, i64 0, i32 2, i32 0
  store i32 %171, i32* %189, align 4
  %190 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %186, i64 0, i32 2, i32 1
  store i32 %173, i32* %190, align 4
  %191 = add i32 %162, 1
  %192 = icmp eq i32 %191, 8
  br i1 %192, label %200, label %193

193:                                              ; preds = %185, %159
  %194 = phi i32 [ %191, %185 ], [ %162, %159 ]
  %195 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 1
  %196 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %195, %1
  br i1 %196, label %203, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br label %159

200:                                              ; preds = %185
  %201 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SweepEvent", %"struct.blink::(anonymous namespace)::SweepEvent"* %161, i64 1
  %202 = icmp eq %"struct.blink::(anonymous namespace)::SweepEvent"* %201, %1
  br label %203

203:                                              ; preds = %193, %200, %155, %81, %74, %69, %53, %38, %37, %7, %14, %2, %2, %91, %86
  %204 = phi i1 [ true, %91 ], [ true, %86 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %37 ], [ true, %38 ], [ true, %53 ], [ true, %69 ], [ true, %74 ], [ true, %81 ], [ true, %155 ], [ %202, %200 ], [ true, %193 ]
  ret i1 %204
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_111SegmentTree5VisitEjNS0_7SegmentES2_i(%"class.blink::(anonymous namespace)::SegmentTree"* readonly, i32, i64, i64, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckOpResult", align 8
  %16 = alloca %"class.logging::CheckOpResult", align 8
  %17 = alloca %"class.logging::CheckError", align 8
  %18 = trunc i64 %2 to i32
  %19 = lshr i64 %2, 32
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %3 to i32
  %22 = lshr i64 %3, 32
  %23 = trunc i64 %22 to i32
  %24 = bitcast %"class.logging::CheckOpResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #5
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %16, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.logging::CheckOpResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  %29 = icmp ugt i32 %27, %1
  br i1 %29, label %30, label %31

30:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  store i8* null, i8** %25, align 8
  br label %40

31:                                               ; preds = %5
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %33 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %27) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %32, i8* %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %15, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  store i8* %35, i8** %25, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.logging::CheckError"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %17, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %16) #5
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %17) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  br label %40

40:                                               ; preds = %30, %31, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #5
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %41, align 8
  %43 = zext i32 %1 to i64
  %44 = icmp eq i32 %18, %21
  %45 = icmp eq i32 %20, %23
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %42, i64 %43, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, %4
  store i32 %50, i32* %48, align 4
  br label %82

51:                                               ; preds = %40
  %52 = add i32 %20, %18
  %53 = lshr i32 %52, 1
  %54 = add nuw i32 %53, 1
  %55 = icmp ult i32 %53, %21
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = shl i32 %1, 1
  %58 = or i32 %57, 1
  %59 = icmp ult i32 %53, %23
  %60 = select i1 %59, i32 %53, i32 %23
  %61 = zext i32 %53 to i64
  %62 = shl nuw nsw i64 %61, 32
  %63 = and i64 %2, 4294967295
  %64 = or i64 %62, %63
  %65 = zext i32 %60 to i64
  %66 = shl nuw nsw i64 %65, 32
  %67 = and i64 %3, 4294967295
  %68 = or i64 %66, %67
  call fastcc void @_ZN5blink12_GLOBAL__N_111SegmentTree5VisitEjNS0_7SegmentES2_i(%"class.blink::(anonymous namespace)::SegmentTree"* %0, i32 %58, i64 %64, i64 %68, i32 %4)
  br label %69

69:                                               ; preds = %51, %56
  %70 = icmp ult i32 %53, %23
  br i1 %70, label %71, label %82

71:                                               ; preds = %69
  %72 = shl i32 %1, 1
  %73 = add i32 %72, 2
  %74 = icmp ugt i32 %54, %21
  %75 = select i1 %74, i32 %54, i32 %21
  %76 = and i64 %2, -4294967296
  %77 = zext i32 %54 to i64
  %78 = or i64 %76, %77
  %79 = and i64 %3, -4294967296
  %80 = zext i32 %75 to i64
  %81 = or i64 %79, %80
  call fastcc void @_ZN5blink12_GLOBAL__N_111SegmentTree5VisitEjNS0_7SegmentES2_i(%"class.blink::(anonymous namespace)::SegmentTree"* %0, i32 %73, i64 %78, i64 %81, i32 %4)
  br label %82

82:                                               ; preds = %69, %71, %47
  %83 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #5
  %84 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  %85 = load i32, i32* %26, align 4
  %86 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #5
  %87 = icmp ugt i32 %85, %1
  br i1 %87, label %88, label %89

88:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #5
  store i8* null, i8** %84, align 8
  br label %98

89:                                               ; preds = %82
  %90 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %91 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %85) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %90, i8* %91) #5
  %92 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #5
  store i8* %93, i8** %84, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %13) #5
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #5
  br label %98

98:                                               ; preds = %95, %89, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #5
  %99 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %41, align 8
  %100 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %99, i64 %43, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::(anonymous namespace)::SegmentTree", %"class.blink::(anonymous namespace)::SegmentTree"* %0, i64 0, i32 0
  %105 = load %"class.blink::(anonymous namespace)::BasicIntervals"*, %"class.blink::(anonymous namespace)::BasicIntervals"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::(anonymous namespace)::BasicIntervals", %"class.blink::(anonymous namespace)::BasicIntervals"* %105, i64 0, i32 0
  %107 = add i32 %20, 1
  %108 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %106, i32 %107) #5
  %109 = load i32, i32* %108, align 4
  %110 = call dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %106, i32 %18) #5
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 %109, %111
  br label %160

113:                                              ; preds = %98
  %114 = icmp ugt i32 %20, %18
  br i1 %114, label %115, label %160

115:                                              ; preds = %113
  %116 = shl i32 %1, 1
  %117 = or i32 %116, 1
  %118 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #5
  %119 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  %120 = load i32, i32* %26, align 4
  %121 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #5
  %122 = icmp ult i32 %117, %120
  br i1 %122, label %123, label %124

123:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #5
  store i8* null, i8** %119, align 8
  br label %133

124:                                              ; preds = %115
  %125 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %117) #5
  %126 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %120) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %125, i8* %126) #5
  %127 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #5
  store i8* %128, i8** %119, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %11) #5
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #5
  br label %133

133:                                              ; preds = %130, %124, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #5
  %134 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %41, align 8
  %135 = zext i32 %117 to i64
  %136 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %134, i64 %135, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %116, 2
  %139 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #5
  %140 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %141 = load i32, i32* %26, align 4
  %142 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #5
  %143 = icmp ult i32 %138, %141
  br i1 %143, label %144, label %145

144:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #5
  store i8* null, i8** %140, align 8
  br label %154

145:                                              ; preds = %133
  %146 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %138) #5
  %147 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %141) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %146, i8* %147) #5
  %148 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %149 = load i8*, i8** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #5
  store i8* %149, i8** %140, align 8
  %150 = icmp eq i8* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %8) #5
  %153 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #5
  br label %154

154:                                              ; preds = %151, %145, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #5
  %155 = load %"struct.blink::(anonymous namespace)::SegmentTree::Node"*, %"struct.blink::(anonymous namespace)::SegmentTree::Node"** %41, align 8
  %156 = zext i32 %138 to i64
  %157 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %155, i64 %156, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, %137
  br label %160

160:                                              ; preds = %103, %113, %154
  %161 = phi i32 [ %112, %103 ], [ %159, %154 ], [ 0, %113 ]
  %162 = getelementptr inbounds %"struct.blink::(anonymous namespace)::SegmentTree::Node", %"struct.blink::(anonymous namespace)::SegmentTree::Node"* %42, i64 %43, i32 1
  store i32 %161, i32* %162, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::IntRect"* @_ZNK3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %24, i64 %25
  ret %"class.blink::IntRect"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
