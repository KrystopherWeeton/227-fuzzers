; ModuleID = '../../v8/src/ast/modules.cc'
source_filename = "../../v8/src/ast/modules.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest" = type { %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i32, i32 }
%"class.v8::internal::AstRawString" = type <{ %union.anon, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::ImportAssertions" = type { %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.6" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.15" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.9" }
%"class.std::__1::__tree.9" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::set.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.30", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.658", %"class.std::__1::unique_ptr.679", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.689", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.823", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.836", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.846", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.857", %"struct.std::__1::atomic.183", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.932", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.975"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.984", i32, i8, i8, i32, i32, %"class.std::__1::vector.990", %"class.std::__1::vector.990", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.997", i64, %"class.std::__1::unordered_map.998", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.554", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.191", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1054", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1092", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1126", %"class.std::__1::vector.1130", %"class.std::__1::vector.1130", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.24", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.28", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.28" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.59", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.177", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.192", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.196", %"class.std::__1::vector.196", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.487", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"class.std::__1::shared_ptr.511", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.516", %"class.std::__1::unique_ptr.542", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.548", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.561", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.361", i8, [7 x i8], %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.593", %"class.std::__1::unordered_map.567", %"class.std::__1::unordered_map.617", %"class.std::__1::vector.645", i8, %"class.std::__1::unique_ptr.652", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i64 }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.134" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.128" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.68", %"class.std::__1::vector.68", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.70" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.75" }
%"class.std::__1::__hash_table.75" = type <{ %"class.std::__1::unique_ptr.76", %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.93", [4 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base.79"** }
%"struct.std::__1::__hash_node_base.79" = type { %"struct.std::__1::__hash_node_base.79"* }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__bucket_list_deallocator.81" }
%"class.std::__1::__bucket_list_deallocator.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::__hash_node_base.79" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.54", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.109"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.117", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.54", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.98", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__cxx_atomic_impl.100" }
%"struct.std::__1::__cxx_atomic_impl.100" = type { %"struct.std::__1::__cxx_atomic_base_impl.101" }
%"struct.std::__1::__cxx_atomic_base_impl.101" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.104" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.121", i8, [7 x i8] }>
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { i64*, i64*, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair.136"*, %"struct.std::__1::pair.136"*, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::pair.136" = type { i32, i64 }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::pair.136"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.142" }
%"class.std::__1::unordered_map.142" = type { %"class.std::__1::__hash_table.143" }
%"class.std::__1::__hash_table.143" = type <{ %"class.std::__1::unique_ptr.144", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", [4 x i8] }>
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146", %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base.147"** }
%"struct.std::__1::__hash_node_base.147" = type { %"struct.std::__1::__hash_node_base.147"* }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.std::__1::__bucket_list_deallocator.149" }
%"class.std::__1::__bucket_list_deallocator.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::__hash_node_base.147" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.170", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.172" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1059", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.1069", %"class.std::__1::unique_ptr.505", %"class.std::__1::vector.1075", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1059" = type { %"struct.std::__1::__atomic_base.1060" }
%"struct.std::__1::__atomic_base.1060" = type { %"struct.std::__1::__cxx_atomic_impl.1061" }
%"struct.std::__1::__cxx_atomic_impl.1061" = type { %"struct.std::__1::__cxx_atomic_base_impl.1062" }
%"struct.std::__1::__cxx_atomic_base_impl.1062" = type { i32 }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.816" }
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i64**, i64**, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i64** }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.816", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"struct.std::__1::pair.1077"*, %"struct.std::__1::pair.1077"*, %"class.std::__1::__compressed_pair.1078" }
%"struct.std::__1::pair.1077" = type opaque
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::pair.1077"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.183", %"struct.std::__1::atomic.187", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.191" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.198" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.std::__1::vector.318", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.212", %"class.std::__1::vector.213", %"class.std::__1::vector.220", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.212" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.215" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.std::__1::unique_ptr.222"*, %"class.std::__1::unique_ptr.222"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::unique_ptr.222" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::unique_ptr.222"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.228", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.230", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.242" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.228" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.230" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.242" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.244", i8, i64 }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.260" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.212"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.260" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.287" }
%"class.std::__1::unordered_map.287" = type { %"class.std::__1::__hash_table.288" }
%"class.std::__1::__hash_table.288" = type <{ %"class.std::__1::unique_ptr.289", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.307", [4 x i8] }>
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291", %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.292"** }
%"struct.std::__1::__hash_node_base.292" = type { %"struct.std::__1::__hash_node_base.292"* }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.std::__1::__bucket_list_deallocator.294" }
%"class.std::__1::__bucket_list_deallocator.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base.292" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"struct.std::__1::pair.320"*, %"struct.std::__1::pair.320"*, %"class.std::__1::__compressed_pair.321" }
%"struct.std::__1::pair.320" = type opaque
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::pair.320"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.326", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.311"], [3 x %"class.std::__1::vector.311"], i8, %"struct.std::__1::atomic.183", [6 x i8], %"class.std::__1::vector.311", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.336"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.311", %"class.std::__1::vector.311", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.336" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.361", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.354"], %"class.std::__1::unique_ptr.326" }
%"class.std::__1::vector.354" = type { %"class.std::__1::__vector_base.355" }
%"class.std::__1::__vector_base.355" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.393", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.397", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.402" }
%"struct.std::__1::atomic.393" = type { %"struct.std::__1::__atomic_base.394" }
%"struct.std::__1::__atomic_base.394" = type { %"struct.std::__1::__cxx_atomic_impl.395" }
%"struct.std::__1::__cxx_atomic_impl.395" = type { %"struct.std::__1::__cxx_atomic_base_impl.396" }
%"struct.std::__1::__cxx_atomic_base_impl.396" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.397" = type { %"struct.std::__1::__atomic_base.398" }
%"struct.std::__1::__atomic_base.398" = type { %"struct.std::__1::__cxx_atomic_impl.399" }
%"struct.std::__1::__cxx_atomic_impl.399" = type { %"struct.std::__1::__cxx_atomic_base_impl.400" }
%"struct.std::__1::__cxx_atomic_base_impl.400" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.326", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.183", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.432", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.432" = type { %"class.std::__1::__hash_table.433" }
%"class.std::__1::__hash_table.433" = type <{ %"class.std::__1::unique_ptr.434", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.452", [4 x i8] }>
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436", %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.std::__1::__hash_node_base.437"** }
%"struct.std::__1::__hash_node_base.437" = type { %"struct.std::__1::__hash_node_base.437"* }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.std::__1::__bucket_list_deallocator.439" }
%"class.std::__1::__bucket_list_deallocator.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.437" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.468" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.511" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.512", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.6", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.512" = type { %"struct.std::__1::__atomic_base.513" }
%"struct.std::__1::__atomic_base.513" = type { %"struct.std::__1::__cxx_atomic_impl.514" }
%"struct.std::__1::__cxx_atomic_impl.514" = type { %"struct.std::__1::__cxx_atomic_base_impl.515" }
%"struct.std::__1::__cxx_atomic_base_impl.515" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.516" = type { %"class.std::__1::__hash_table.517" }
%"class.std::__1::__hash_table.517" = type <{ %"class.std::__1::unique_ptr.518", %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.533", %"class.std::__1::__compressed_pair.536", [4 x i8] }>
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520", %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.521"** }
%"struct.std::__1::__hash_node_base.521" = type { %"struct.std::__1::__hash_node_base.521"* }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.std::__1::__bucket_list_deallocator.523" }
%"class.std::__1::__bucket_list_deallocator.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::__hash_node_base.521" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.554", %"class.std::__1::vector.554" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.593" = type { %"class.std::__1::__hash_table.594" }
%"class.std::__1::__hash_table.594" = type <{ %"class.std::__1::unique_ptr.595", %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.613", [4 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597", %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.598"** }
%"struct.std::__1::__hash_node_base.598" = type { %"struct.std::__1::__hash_node_base.598"* }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::__bucket_list_deallocator.600" }
%"class.std::__1::__bucket_list_deallocator.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.598" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.567" = type { %"class.std::__1::__hash_table.568" }
%"class.std::__1::__hash_table.568" = type <{ %"class.std::__1::unique_ptr.569", %"class.std::__1::__compressed_pair.579", %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.587", [4 x i8] }>
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571", %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::__hash_node_base.572"** }
%"struct.std::__1::__hash_node_base.572" = type { %"struct.std::__1::__hash_node_base.572"* }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.std::__1::__bucket_list_deallocator.574" }
%"class.std::__1::__bucket_list_deallocator.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"struct.std::__1::__hash_node_base.572" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.617" = type { %"class.std::__1::__hash_table.618" }
%"class.std::__1::__hash_table.618" = type <{ %"class.std::__1::unique_ptr.619", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.639", [4 x i8] }>
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621", %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"struct.std::__1::__hash_node_base.622"** }
%"struct.std::__1::__hash_node_base.622" = type { %"struct.std::__1::__hash_node_base.622"* }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.std::__1::__bucket_list_deallocator.624" }
%"class.std::__1::__bucket_list_deallocator.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base.622" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::vector.645" = type { %"class.std::__1::__vector_base.646" }
%"class.std::__1::__vector_base.646" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.647" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.554" }
%"class.std::__1::shared_ptr.658" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.170", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.659", %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.682", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.682" = type { %"struct.std::__1::__atomic_base.683" }
%"struct.std::__1::__atomic_base.683" = type { %"struct.std::__1::__cxx_atomic_impl.684" }
%"struct.std::__1::__cxx_atomic_impl.684" = type { %"struct.std::__1::__cxx_atomic_base_impl.685" }
%"struct.std::__1::__cxx_atomic_base_impl.685" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.689" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.690", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.690" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.691", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"class.std::__1::unique_ptr.693"*, %"class.std::__1::unique_ptr.693"*, %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::unique_ptr.693" = type opaque
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.std::__1::unique_ptr.693"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.699 }
%union.anon.699 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"struct.std::__1::atomic.183", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.730", %"class.std::__1::unique_ptr.736", %"class.std::__1::set.742", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.742" = type { %"class.std::__1::__tree.743" }
%"class.std::__1::__tree.743" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.751" }
%"class.v8::internal::TaggedImpl.751" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.750" }
%"class.v8::internal::TaggedImpl.750" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.752", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.758", %"class.v8::internal::DetachableVector.759", %"class.v8::internal::DetachableVector.758", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.759" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.758" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.760", %"class.std::__1::vector.766", %"class.std::__1::unique_ptr.773", %"class.std::__1::vector.780", %"class.std::__1::unique_ptr.787", i64, %"class.std::__1::vector.793", %"class.std::__1::vector.801", %"class.std::__1::vector.809", i8, i8, i32 }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.766" = type { %"class.std::__1::__vector_base.767" }
%"class.std::__1::__vector_base.767" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.768" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::NodeSpace.776"* }
%"class.v8::internal::GlobalHandles::NodeSpace.776" = type opaque
%"class.std::__1::vector.780" = type { %"class.std::__1::__vector_base.781" }
%"class.std::__1::__vector_base.781" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.782" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"struct.std::__1::pair.803"*, %"struct.std::__1::pair.803"*, %"class.std::__1::__compressed_pair.804" }
%"struct.std::__1::pair.803" = type opaque
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"struct.std::__1::pair.803"* }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.816", %"class.std::__1::vector.823" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.830" }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { i32*, i32*, %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.836" = type { %"struct.std::__1::__atomic_base.837" }
%"struct.std::__1::__atomic_base.837" = type { %"struct.std::__1::__cxx_atomic_impl.838" }
%"struct.std::__1::__cxx_atomic_impl.838" = type { %"struct.std::__1::__cxx_atomic_base_impl.839" }
%"struct.std::__1::__cxx_atomic_base_impl.839" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.846" = type { %"struct.std::__1::__atomic_base.847" }
%"struct.std::__1::__atomic_base.847" = type { %"struct.std::__1::__cxx_atomic_impl.848" }
%"struct.std::__1::__cxx_atomic_impl.848" = type { %"struct.std::__1::__cxx_atomic_base_impl.849" }
%"struct.std::__1::__cxx_atomic_base_impl.849" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.853 }
%union.anon.853 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.857" = type { %"class.std::__1::__hash_table.858" }
%"class.std::__1::__hash_table.858" = type <{ %"class.std::__1::unique_ptr.859", %"class.std::__1::__compressed_pair.869", %"class.std::__1::__compressed_pair.874", %"class.std::__1::__compressed_pair.877", [4 x i8] }>
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861", %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"struct.std::__1::__hash_node_base.862"** }
%"struct.std::__1::__hash_node_base.862" = type { %"struct.std::__1::__hash_node_base.862"* }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::__bucket_list_deallocator.864" }
%"class.std::__1::__bucket_list_deallocator.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"struct.std::__1::__hash_node_base.862" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.883", %"class.v8::internal::Handle.889", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.890", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.889" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.890" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.891", %"class.std::__1::vector.897", %"class.std::__1::unique_ptr.905", %"class.std::__1::unique_ptr.911", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.917", %"class.std::__1::vector.923", %"struct.std::__1::pair.931" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"class.std::__1::unique_ptr.899"*, %"class.std::__1::unique_ptr.899"*, %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::unique_ptr.899" = type opaque
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.std::__1::unique_ptr.899"* }
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.923" = type { %"class.std::__1::__vector_base.924" }
%"class.std::__1::__vector_base.924" = type { %"struct.std::__1::pair.925"*, %"struct.std::__1::pair.925"*, %"class.std::__1::__compressed_pair.926" }
%"struct.std::__1::pair.925" = type opaque
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::pair.925"* }
%"struct.std::__1::pair.931" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.29"*, i16, i8*)*, i8* }
%"class.v8::Local.29" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.935", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.935" = type { %"class.std::__1::__hash_table.936" }
%"class.std::__1::__hash_table.936" = type <{ %"class.std::__1::unique_ptr.937", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.952", %"class.std::__1::__compressed_pair.956", [4 x i8] }>
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939", %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.std::__1::__hash_node_base.940"** }
%"struct.std::__1::__hash_node_base.940" = type { %"struct.std::__1::__hash_node_base.940"* }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.std::__1::__bucket_list_deallocator.942" }
%"class.std::__1::__bucket_list_deallocator.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.std::__1::__hash_node_base.940" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1213, i32, [4 x i8] }>
%union.anon.1213 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.970" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.964"**, %"struct.std::__1::pair.964"**, %"struct.std::__1::pair.964"**, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::pair.964" = type opaque
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"struct.std::__1::pair.964"** }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"class.v8::internal::Handle.977"*, %"class.v8::internal::Handle.977"*, %"class.std::__1::__compressed_pair.978" }
%"class.v8::internal::Handle.977" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::Handle.977"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.983", [128 x i8] }
%"class.v8::internal::Vector.983" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.841", i32, %"class.v8::Local.29" }
%"class.v8::Local.841" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.990" = type { %"class.std::__1::__vector_base.991" }
%"class.std::__1::__vector_base.991" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.997" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.998" = type { %"class.std::__1::__hash_table.999" }
%"class.std::__1::__hash_table.999" = type <{ %"class.std::__1::unique_ptr.1000", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1015", %"class.std::__1::__compressed_pair.1018", [4 x i8] }>
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002", %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.1003"** }
%"struct.std::__1::__hash_node_base.1003" = type { %"struct.std::__1::__hash_node_base.1003"* }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.std::__1::__bucket_list_deallocator.1005" }
%"class.std::__1::__bucket_list_deallocator.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::__hash_node_base.1003" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.554" = type { %"class.std::__1::__vector_base.555" }
%"class.std::__1::__vector_base.555" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.191" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1022", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1051", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1052", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1022" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1047, %union.anon.1049, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1047 = type { i64 }
%union.anon.1049 = type { i64 }
%"class.std::__1::weak_ptr.1051" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1052" = type { %"class.v8::PersistentBase.1053" }
%"class.v8::PersistentBase.1053" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1023", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1023" = type { %"class.std::__1::__hash_table.1024" }
%"class.std::__1::__hash_table.1024" = type <{ %"class.std::__1::unique_ptr.1025", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1040", %"class.std::__1::__compressed_pair.1043", [4 x i8] }>
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027", %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1028"** }
%"struct.std::__1::__hash_node_base.1028" = type { %"struct.std::__1::__hash_node_base.1028"* }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.std::__1::__bucket_list_deallocator.1030" }
%"class.std::__1::__bucket_list_deallocator.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"struct.std::__1::__hash_node_base.1028" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1092" = type { %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.842", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.842" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1100" }
%"class.std::__1::unordered_map.1100" = type { %"class.std::__1::__hash_table.1101" }
%"class.std::__1::__hash_table.1101" = type <{ %"class.std::__1::unique_ptr.1102", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1117", %"class.std::__1::__compressed_pair.1120", [4 x i8] }>
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104", %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1105"** }
%"struct.std::__1::__hash_node_base.1105" = type { %"struct.std::__1::__hash_node_base.1105"* }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.std::__1::__bucket_list_deallocator.1107" }
%"class.std::__1::__bucket_list_deallocator.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"struct.std::__1::__hash_node_base.1105" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::atomic.1126" = type { %"struct.std::__1::__atomic_base.1127" }
%"struct.std::__1::__atomic_base.1127" = type { %"struct.std::__1::__cxx_atomic_impl.1128" }
%"struct.std::__1::__cxx_atomic_impl.1128" = type { %"struct.std::__1::__cxx_atomic_base_impl.1129" }
%"struct.std::__1::__cxx_atomic_base_impl.1129" = type { %"class.std::__1::vector.1130"* }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1132" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1057" = type { i8 }
%"struct.v8::internal::SourceTextModuleDescriptor::Entry" = type { %"struct.v8::internal::Scanner::Location", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, i32, i32 }
%"struct.v8::internal::Scanner::Location" = type { i32, i32 }
%"class.v8::internal::SourceTextModuleDescriptor" = type { %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneMultimap", %"class.v8::internal::ZoneMap.1162" }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set.1142" }
%"class.std::__1::set.1142" = type { %"class.std::__1::__tree.1143" }
%"class.std::__1::__tree.1143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1144", %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::ZoneAllocator.1146" }
%"class.v8::internal::ZoneAllocator.1146" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1149" }
%"class.std::__1::vector.1149" = type { %"class.std::__1::__vector_base.1150" }
%"class.std::__1::__vector_base.1150" = type { %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152", %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::internal::ZoneAllocator.1154" }
%"class.v8::internal::ZoneAllocator.1154" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1155" }
%"class.std::__1::__tree.1155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1156", %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.v8::internal::ZoneAllocator.1158" }
%"class.v8::internal::ZoneAllocator.1158" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ZoneMap.1162" = type { %"class.std::__1::map.1163" }
%"class.std::__1::map.1163" = type { %"class.std::__1::__tree.1155" }
%"class.v8::internal::ZoneVector.1164" = type { %"class.std::__1::vector.1165" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"class.v8::internal::Handle.1167" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169", %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::internal::Handle.1167"* }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"class.v8::internal::ZoneAllocator.1171" }
%"class.v8::internal::ZoneAllocator.1171" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.1252" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1174" }
%"struct.std::__1::pair.1174" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* }
%"struct.v8::internal::SourceTextModuleDescriptor::AstRawStringComparer" = type { i8 }
%"struct.v8::internal::SourceTextModuleDescriptor::ModuleRequestComparer" = type { i8 }
%"struct.std::__1::pair.1249" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* }
%"class.v8::internal::ZoneMap.1176" = type { %"class.std::__1::map.1177" }
%"class.std::__1::map.1177" = type { %"class.std::__1::__tree.1178" }
%"class.std::__1::__tree.1178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1179", %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.v8::internal::ZoneAllocator.1181" }
%"class.v8::internal::ZoneAllocator.1181" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__tree_node.1271" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1272" }
%"struct.std::__1::__value_type.1272" = type { %"struct.std::__1::pair.1267" }
%"struct.std::__1::pair.1267" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* }
%"class.v8::internal::ModuleScope" = type { %"class.v8::internal::DeclarationScope", %"class.v8::internal::SourceTextModuleDescriptor"* }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.1193", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1189", %"class.v8::base::ThreadedListBase.1191", %"class.v8::internal::Handle.1192", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1189", %"class.v8::base::ThreadedListBase.1191", %"class.v8::internal::Handle.1192", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1187" }
%"class.v8::base::TemplateHashMapImpl.1187" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1188"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.1188" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.1189" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.1190, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%union.anon.1190 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.1191" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.1192" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.1193" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.1204, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.1194, i8, [7 x i8] }>
%union.anon.1194 = type { %struct.anon.1195 }
%struct.anon.1195 = type { %"class.std::__1::vector.1196"*, i32 }
%"class.std::__1::vector.1196" = type { %"class.std::__1::__vector_base.1197" }
%"class.std::__1::__vector_base.1197" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { i8* }
%union.anon.1204 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.1205"*, i64, i64 }
%"class.std::__1::vector.1205" = type { %"class.std::__1::__vector_base.1215" }
%"class.std::__1::__vector_base.1215" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1207, i32, [4 x i8] }>
%union.anon.1207 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* }

$_ZNK2v88internal26SourceTextModuleDescriptor16AstModuleRequest9SerializeINS0_7IsolateEEENS0_6HandleINS0_13ModuleRequestEEEPT_ = comdat any

$_ZNK2v88internal26SourceTextModuleDescriptor16AstModuleRequest9SerializeINS0_12LocalIsolateEEENS0_6HandleINS0_13ModuleRequestEEEPT_ = comdat any

$_ZNK2v88internal26SourceTextModuleDescriptor5Entry9SerializeINS0_7IsolateEEENS0_6HandleINS0_25SourceTextModuleInfoEntryEEEPT_ = comdat any

$_ZNK2v88internal26SourceTextModuleDescriptor5Entry9SerializeINS0_12LocalIsolateEEENS0_6HandleINS0_25SourceTextModuleInfoEntryEEEPT_ = comdat any

$_ZNK2v88internal26SourceTextModuleDescriptor23SerializeRegularExportsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_PNS0_4ZoneE = comdat any

$_ZNK2v88internal26SourceTextModuleDescriptor23SerializeRegularExportsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_PNS0_4ZoneE = comdat any

$_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE15__emplace_multiIJNS_4pairIS6_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE = comdat any

$_ZNSt3__16vectorIN2v88internal6HandleINS2_6ObjectEEENS2_13ZoneAllocatorIS5_EEE8__appendEm = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Smi::IsValid(module_request)\00", align 1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor16AstModuleRequest9SerializeINS0_7IsolateEEENS0_6HandleINS0_13ModuleRequestEEEPT_(%"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = mul i32 %8, 3
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %9, i8 zeroext 0) #5
  %11 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %139, %2
  %17 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0 to i64***
  %18 = load i64**, i64*** %17, align 8
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = tail call i64* @_ZN2v88internal13ModuleRequest3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_6StringEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"* %1, i64* %19, i64* %10, i32 %21) #5
  ret i64* %22

23:                                               ; preds = %2, %139
  %24 = phi i32 [ %141, %139 ], [ 0, %2 ]
  %25 = phi %"class.std::__1::__tree_end_node"* [ %140, %139 ], [ %13, %2 ]
  %26 = load i64, i64* %10, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64***
  %29 = load i64**, i64*** %28, align 8
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 8
  %32 = shl i32 %24, 2
  %33 = sext i32 %32 to i64
  %34 = add nsw i64 %33, 7
  %35 = add i64 %34, %26
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %31 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  %38 = and i64 %31, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %23
  %41 = and i64 %26, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %26, i64 %35, i64 %31) #5
  br label %51

51:                                               ; preds = %47, %40
  %52 = and i64 %31, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = load i64, i64* %43, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %26, i64 %35, i64 %31) #5
  br label %63

63:                                               ; preds = %23, %51, %58, %62
  %64 = load i64, i64* %10, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64***
  %67 = load i64**, i64*** %66, align 8
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %68, align 8
  %70 = add i32 %32, 4
  %71 = sext i32 %70 to i64
  %72 = add nsw i64 %71, 7
  %73 = add i64 %72, %64
  %74 = inttoptr i64 %73 to i32*
  %75 = trunc i64 %69 to i32
  store atomic volatile i32 %75, i32* %74 monotonic, align 4
  %76 = and i64 %69, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %63
  %79 = and i64 %64, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 262144
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = or i64 %79, 16
  %87 = inttoptr i64 %86 to %"class.v8::internal::Heap"**
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %87, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %88, i64 %64, i64 %73, i64 %69) #5
  br label %89

89:                                               ; preds = %85, %78
  %90 = and i64 %69, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %89
  %97 = load i64, i64* %81, align 8
  %98 = and i64 %97, 24
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %64, i64 %73, i64 %69) #5
  br label %101

101:                                              ; preds = %63, %89, %96, %100
  %102 = load i64, i64* %10, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 6
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = shl i32 %105, 1
  %107 = add i32 %32, 8
  %108 = sext i32 %107 to i64
  %109 = add nsw i64 %108, 7
  %110 = add i64 %109, %102
  %111 = inttoptr i64 %110 to i32*
  store atomic volatile i32 %106, i32* %111 monotonic, align 4
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %123

115:                                              ; preds = %101
  %116 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_end_node"**
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, %116
  br i1 %122, label %139, label %130

123:                                              ; preds = %101, %123
  %124 = phi %"class.std::__1::__tree_node_base"* [ %126, %123 ], [ %113, %101 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %123

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  br label %139

130:                                              ; preds = %115, %130
  %131 = phi %"class.std::__1::__tree_end_node"** [ %134, %130 ], [ %118, %115 ]
  %132 = bitcast %"class.std::__1::__tree_end_node"** %131 to %"class.std::__1::__tree_node_base"**
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, %133
  br i1 %138, label %139, label %130

139:                                              ; preds = %130, %115, %128
  %140 = phi %"class.std::__1::__tree_end_node"* [ %129, %128 ], [ %119, %115 ], [ %135, %130 ]
  %141 = add i32 %24, 3
  %142 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %143 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %140, %143
  br i1 %144, label %16, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZN2v88internal13ModuleRequest3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_6StringEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor16AstModuleRequest9SerializeINS0_12LocalIsolateEEENS0_6HandleINS0_13ModuleRequestEEEPT_(%"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1057"*
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = mul i32 %8, 3
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1057"* %3, i32 %9, i8 zeroext 0) #5
  %11 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %139, %2
  %17 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0 to i64***
  %18 = load i64**, i64*** %17, align 8
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = tail call i64* @_ZN2v88internal13ModuleRequest3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_6StringEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::LocalIsolate"* %1, i64* %19, i64* %10, i32 %21) #5
  ret i64* %22

23:                                               ; preds = %2, %139
  %24 = phi i32 [ %141, %139 ], [ 0, %2 ]
  %25 = phi %"class.std::__1::__tree_end_node"* [ %140, %139 ], [ %13, %2 ]
  %26 = load i64, i64* %10, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64***
  %29 = load i64**, i64*** %28, align 8
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 8
  %32 = shl i32 %24, 2
  %33 = sext i32 %32 to i64
  %34 = add nsw i64 %33, 7
  %35 = add i64 %34, %26
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %31 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  %38 = and i64 %31, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %23
  %41 = and i64 %26, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %26, i64 %35, i64 %31) #5
  br label %51

51:                                               ; preds = %47, %40
  %52 = and i64 %31, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = load i64, i64* %43, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %26, i64 %35, i64 %31) #5
  br label %63

63:                                               ; preds = %23, %51, %58, %62
  %64 = load i64, i64* %10, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64***
  %67 = load i64**, i64*** %66, align 8
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %68, align 8
  %70 = add i32 %32, 4
  %71 = sext i32 %70 to i64
  %72 = add nsw i64 %71, 7
  %73 = add i64 %72, %64
  %74 = inttoptr i64 %73 to i32*
  %75 = trunc i64 %69 to i32
  store atomic volatile i32 %75, i32* %74 monotonic, align 4
  %76 = and i64 %69, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %63
  %79 = and i64 %64, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 262144
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = or i64 %79, 16
  %87 = inttoptr i64 %86 to %"class.v8::internal::Heap"**
  %88 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %87, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %88, i64 %64, i64 %73, i64 %69) #5
  br label %89

89:                                               ; preds = %85, %78
  %90 = and i64 %69, -262144
  %91 = or i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 24
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %89
  %97 = load i64, i64* %81, align 8
  %98 = and i64 %97, 24
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %64, i64 %73, i64 %69) #5
  br label %101

101:                                              ; preds = %63, %89, %96, %100
  %102 = load i64, i64* %10, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 6
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = shl i32 %105, 1
  %107 = add i32 %32, 8
  %108 = sext i32 %107 to i64
  %109 = add nsw i64 %108, 7
  %110 = add i64 %109, %102
  %111 = inttoptr i64 %110 to i32*
  store atomic volatile i32 %106, i32* %111 monotonic, align 4
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %123

115:                                              ; preds = %101
  %116 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_end_node"**
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, %116
  br i1 %122, label %139, label %130

123:                                              ; preds = %101, %123
  %124 = phi %"class.std::__1::__tree_node_base"* [ %126, %123 ], [ %113, %101 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %123

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  br label %139

130:                                              ; preds = %115, %130
  %131 = phi %"class.std::__1::__tree_end_node"** [ %134, %130 ], [ %118, %115 ]
  %132 = bitcast %"class.std::__1::__tree_end_node"** %131 to %"class.std::__1::__tree_node_base"**
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, %133
  br i1 %138, label %139, label %130

139:                                              ; preds = %130, %115, %128
  %140 = phi %"class.std::__1::__tree_end_node"* [ %129, %128 ], [ %119, %115 ], [ %135, %130 ]
  %141 = add i32 %24, 3
  %142 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %4, align 8
  %143 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %144 = icmp eq %"class.std::__1::__tree_end_node"* %140, %143
  br i1 %144, label %16, label %23
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1057"*, i32, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal13ModuleRequest3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_6StringEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor5Entry9SerializeINS0_7IsolateEEENS0_6HandleINS0_25SourceTextModuleInfoEntryEEEPT_(%"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = add nsw i64 %5, 1073741824
  %7 = icmp ult i64 %6, 2147483648
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %10, align 8
  %12 = icmp eq %"class.v8::internal::AstRawString"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %18

15:                                               ; preds = %9
  %16 = bitcast %"class.v8::internal::AstRawString"* %11 to i64**
  %17 = load i64*, i64** %16, align 8
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi i64* [ %14, %13 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 2
  %21 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %20, align 8
  %22 = icmp eq %"class.v8::internal::AstRawString"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %28

25:                                               ; preds = %18
  %26 = bitcast %"class.v8::internal::AstRawString"* %21 to i64**
  %27 = load i64*, i64** %26, align 8
  br label %28

28:                                               ; preds = %23, %25
  %29 = phi i64* [ %24, %23 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 3
  %31 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %30, align 8
  %32 = icmp eq %"class.v8::internal::AstRawString"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %38

35:                                               ; preds = %28
  %36 = bitcast %"class.v8::internal::AstRawString"* %31 to i64**
  %37 = load i64*, i64** %36, align 8
  br label %38

38:                                               ; preds = %33, %35
  %39 = phi i64* [ %34, %33 ], [ %37, %35 ]
  %40 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = tail call i64* @_ZN2v88internal25SourceTextModuleInfoEntry3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_19PrimitiveHeapObjectEEES9_S9_iiii(%"class.v8::internal::Isolate"* %1, i64* %19, i64* %29, i64* %39, i32 %4, i32 %41, i32 %43, i32 %45) #5
  ret i64* %46
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare i64* @_ZN2v88internal25SourceTextModuleInfoEntry3NewINS0_7IsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_19PrimitiveHeapObjectEEES9_S9_iiii(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor5Entry9SerializeINS0_12LocalIsolateEEENS0_6HandleINS0_25SourceTextModuleInfoEntryEEEPT_(%"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = add nsw i64 %5, 1073741824
  %7 = icmp ult i64 %6, 2147483648
  br i1 %7, label %9, label %8, !prof !2

8:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %10, align 8
  %12 = icmp eq %"class.v8::internal::AstRawString"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 4
  br label %20

17:                                               ; preds = %9
  %18 = bitcast %"class.v8::internal::AstRawString"* %11 to i64**
  %19 = load i64*, i64** %18, align 8
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi i64* [ %16, %13 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 2
  %23 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %22, align 8
  %24 = icmp eq %"class.v8::internal::AstRawString"* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 4
  br label %32

29:                                               ; preds = %20
  %30 = bitcast %"class.v8::internal::AstRawString"* %23 to i64**
  %31 = load i64*, i64** %30, align 8
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i64* [ %28, %25 ], [ %31, %29 ]
  %34 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 3
  %35 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %34, align 8
  %36 = icmp eq %"class.v8::internal::AstRawString"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 4
  br label %44

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::internal::AstRawString"* %35 to i64**
  %43 = load i64*, i64** %42, align 8
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi i64* [ %40, %37 ], [ %43, %41 ]
  %46 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %0, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = tail call i64* @_ZN2v88internal25SourceTextModuleInfoEntry3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_19PrimitiveHeapObjectEEES9_S9_iiii(%"class.v8::internal::LocalIsolate"* %1, i64* %21, i64* %33, i64* %45, i32 %4, i32 %47, i32 %49, i32 %51) #5
  ret i64* %52
}

declare i64* @_ZN2v88internal25SourceTextModuleInfoEntry3NewINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_NS4_INS0_19PrimitiveHeapObjectEEES9_S9_iiii(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor23SerializeRegularExportsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::ZoneVector.1164", align 8
  %5 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = mul i64 %8, 3
  %10 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1170"* %11 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #5
  store i64 %10, i64* %12, align 8
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %3
  %15 = icmp ugt i64 %9, 268435455
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %17) #6
  unreachable

18:                                               ; preds = %14
  %19 = mul i64 %8, 24
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ugt i64 %19, %24
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %18
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %19) #5
  br label %30

28:                                               ; preds = %18
  %29 = add i64 %21, %19
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::Handle.1167"*
  %33 = inttoptr i64 %31 to i8*
  %34 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle.1167"* %32, %"class.v8::internal::Handle.1167"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %32, i64 %9
  %37 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle.1167"* %36, %"class.v8::internal::Handle.1167"** %37, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 %19, i1 false) #5
  %38 = bitcast %"class.v8::internal::Handle.1167"** %34 to i64*
  %39 = ptrtoint %"class.v8::internal::Handle.1167"* %36 to i64
  store i64 %39, i64* %38, align 8
  br label %40

40:                                               ; preds = %3, %30
  %41 = phi i64 [ 0, %3 ], [ %31, %30 ]
  %42 = phi i64 [ 0, %3 ], [ %39, %30 ]
  %43 = bitcast %"class.std::__1::multimap"* %6 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = inttoptr i64 %44 to %"class.std::__1::__tree_end_node"*
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %45, %46
  br i1 %47, label %72, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  br label %60

54:                                               ; preds = %255
  %55 = ptrtoint %"class.std::__1::__tree_end_node"* %137 to i64
  br label %56

56:                                               ; preds = %54, %169
  %57 = phi %"class.std::__1::__tree_end_node"* [ %137, %54 ], [ %181, %169 ]
  %58 = phi i64 [ %55, %54 ], [ %62, %169 ]
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %45, %57
  br i1 %59, label %65, label %60

60:                                               ; preds = %48, %56
  %61 = phi i64 [ 0, %48 ], [ %180, %56 ]
  %62 = phi i64 [ %44, %48 ], [ %58, %56 ]
  %63 = inttoptr i64 %62 to %"class.std::__1::__tree_node.1252"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %63, i64 0, i32 1, i32 0, i32 0
  br label %96

65:                                               ; preds = %56
  %66 = trunc i64 %180 to i32
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.v8::internal::Handle.1167"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to i64*
  %71 = load i64, i64* %70, align 8
  br label %72

72:                                               ; preds = %40, %65
  %73 = phi i64 [ %71, %65 ], [ %41, %40 ]
  %74 = phi i64 [ %69, %65 ], [ %42, %40 ]
  %75 = phi i32 [ %66, %65 ], [ 0, %40 ]
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::Handle.1167"** %77 to i64*
  %79 = sub i64 %74, %73
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %80, %76
  %82 = inttoptr i64 %73 to %"class.v8::internal::Handle.1167"*
  br i1 %81, label %83, label %86

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0
  %85 = sub nsw i64 %76, %80
  call void @_ZNSt3__16vectorIN2v88internal6HandleINS2_6ObjectEEENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1165"* nonnull %84, i64 %85) #5
  br label %90

86:                                               ; preds = %72
  %87 = icmp ugt i64 %80, %76
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %82, i64 %76
  store %"class.v8::internal::Handle.1167"* %89, %"class.v8::internal::Handle.1167"** %77, align 8
  br label %90

90:                                               ; preds = %83, %86, %88
  %91 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %92 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %91, i32 %75, i8 zeroext 0) #5
  %93 = icmp eq i32 %75, 0
  br i1 %93, label %259, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  br label %266

96:                                               ; preds = %60, %129
  %97 = phi i64 [ %130, %129 ], [ %62, %60 ]
  %98 = phi i32 [ %127, %129 ], [ 0, %60 ]
  %99 = inttoptr i64 %97 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %109

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %105 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, %99
  br i1 %108, label %125, label %116

109:                                              ; preds = %96, %109
  %110 = phi %"class.std::__1::__tree_node_base"* [ %112, %109 ], [ %101, %96 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0
  br label %125

116:                                              ; preds = %103, %116
  %117 = phi %"class.std::__1::__tree_end_node"** [ %120, %116 ], [ %104, %103 ]
  %118 = bitcast %"class.std::__1::__tree_end_node"** %117 to %"class.std::__1::__tree_node_base"**
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 2
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, %119
  br i1 %124, label %125, label %116

125:                                              ; preds = %116, %103, %114
  %126 = phi %"class.std::__1::__tree_end_node"* [ %115, %114 ], [ %105, %103 ], [ %121, %116 ]
  %127 = add nuw nsw i32 %98, 1
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %126, %45
  br i1 %128, label %136, label %129

129:                                              ; preds = %125
  %130 = ptrtoint %"class.std::__1::__tree_end_node"* %126 to i64
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 4
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.v8::internal::AstRawString"**
  %133 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %132, align 8
  %134 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %64, align 8
  %135 = icmp eq %"class.v8::internal::AstRawString"* %133, %134
  br i1 %135, label %96, label %136

136:                                              ; preds = %125, %129
  %137 = phi %"class.std::__1::__tree_end_node"* [ %45, %125 ], [ %126, %129 ]
  %138 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %49, i32 %127, i8 zeroext 0) #5
  %139 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %63, i64 0, i32 1, i32 0, i32 1
  %140 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %139, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %140, i64 0, i32 2
  %142 = bitcast %"class.v8::internal::AstRawString"** %141 to i64**
  %143 = load i64*, i64** %142, align 8
  %144 = load i64, i64* %143, align 8
  %145 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %145, i64 %61
  %147 = bitcast %"class.v8::internal::Handle.1167"* %146 to i64*
  store i64 %144, i64* %147, align 8
  %148 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %139, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %148, i64 0, i32 5
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = shl nsw i64 %151, 1
  %153 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %154 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %136
  %156 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %153, i64 %152) #5
  %157 = ptrtoint i64* %156 to i64
  br label %169

158:                                              ; preds = %136
  %159 = load i64*, i64** %52, align 8
  %160 = load i64*, i64** %53, align 8
  %161 = icmp eq i64* %159, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #5
  br label %164

164:                                              ; preds = %162, %158
  %165 = phi i64* [ %163, %162 ], [ %159, %158 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = add i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  store i64* %168, i64** %52, align 8
  store i64 %152, i64* %165, align 8
  br label %169

169:                                              ; preds = %155, %164
  %170 = phi i64 [ %157, %155 ], [ %166, %164 ]
  %171 = add nuw nsw i64 %61, 1
  %172 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %172, i64 %171
  %174 = bitcast %"class.v8::internal::Handle.1167"* %173 to i64*
  store i64 %170, i64* %174, align 8
  %175 = ptrtoint i64* %138 to i64
  %176 = add nuw nsw i64 %61, 2
  %177 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %177, i64 %176
  %179 = bitcast %"class.v8::internal::Handle.1167"* %178 to i64*
  store i64 %175, i64* %179, align 8
  %180 = add nuw i64 %61, 3
  %181 = inttoptr i64 %62 to %"class.std::__1::__tree_end_node"*
  %182 = icmp eq %"class.std::__1::__tree_end_node"* %137, %181
  br i1 %182, label %56, label %183

183:                                              ; preds = %169, %255
  %184 = phi i64 [ %187, %255 ], [ 0, %169 ]
  %185 = phi i64 [ %257, %255 ], [ %62, %169 ]
  %186 = load i64, i64* %138, align 8
  %187 = add nuw i64 %184, 1
  %188 = inttoptr i64 %185 to %"class.std::__1::__tree_node.1252"*
  %189 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %188, i64 0, i32 1, i32 0, i32 1
  %190 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %189, align 8
  %191 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %190, i64 0, i32 1
  %192 = bitcast %"class.v8::internal::AstRawString"** %191 to i64***
  %193 = load i64**, i64*** %192, align 8
  %194 = load i64*, i64** %193, align 8
  %195 = load i64, i64* %194, align 8
  %196 = trunc i64 %184 to i32
  %197 = shl i32 %196, 2
  %198 = sext i32 %197 to i64
  %199 = add nsw i64 %198, 7
  %200 = add i64 %199, %186
  %201 = inttoptr i64 %200 to i32*
  %202 = trunc i64 %195 to i32
  store atomic volatile i32 %202, i32* %201 monotonic, align 4
  %203 = and i64 %195, 1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %228, label %205

205:                                              ; preds = %183
  %206 = and i64 %186, -262144
  %207 = or i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = and i64 %209, 262144
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %205
  %213 = or i64 %206, 16
  %214 = inttoptr i64 %213 to %"class.v8::internal::Heap"**
  %215 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %214, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %215, i64 %186, i64 %200, i64 %195) #5
  br label %216

216:                                              ; preds = %212, %205
  %217 = and i64 %195, -262144
  %218 = or i64 %217, 8
  %219 = inttoptr i64 %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = and i64 %220, 24
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %228, label %223

223:                                              ; preds = %216
  %224 = load i64, i64* %208, align 8
  %225 = and i64 %224, 24
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %223
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %186, i64 %200, i64 %195) #5
  br label %228

228:                                              ; preds = %183, %216, %223, %227
  %229 = inttoptr i64 %185 to %"class.std::__1::__tree_node_base"*
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %229, i64 0, i32 1
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %230, align 8
  %232 = icmp eq %"class.std::__1::__tree_node_base"* %231, null
  br i1 %232, label %233, label %239

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %229, i64 0, i32 2
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %229
  br i1 %238, label %255, label %246

239:                                              ; preds = %228, %239
  %240 = phi %"class.std::__1::__tree_node_base"* [ %242, %239 ], [ %231, %228 ]
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %241, align 8
  %243 = icmp eq %"class.std::__1::__tree_node_base"* %242, null
  br i1 %243, label %244, label %239

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %240, i64 0, i32 0
  br label %255

246:                                              ; preds = %233, %246
  %247 = phi %"class.std::__1::__tree_end_node"** [ %250, %246 ], [ %234, %233 ]
  %248 = bitcast %"class.std::__1::__tree_end_node"** %247 to %"class.std::__1::__tree_node_base"**
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %251, i64 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, %249
  br i1 %254, label %255, label %246

255:                                              ; preds = %246, %233, %244
  %256 = phi %"class.std::__1::__tree_end_node"* [ %245, %244 ], [ %235, %233 ], [ %251, %246 ]
  %257 = ptrtoint %"class.std::__1::__tree_end_node"* %256 to i64
  %258 = icmp eq %"class.std::__1::__tree_end_node"* %137, %256
  br i1 %258, label %54, label %183

259:                                              ; preds = %305, %90
  %260 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  %261 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %260, align 8
  %262 = icmp eq %"class.v8::internal::Handle.1167"* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %259
  %264 = ptrtoint %"class.v8::internal::Handle.1167"* %261 to i64
  store i64 %264, i64* %78, align 8
  br label %265

265:                                              ; preds = %259, %263
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i64* %92

266:                                              ; preds = %305, %94
  %267 = phi i64 [ 0, %94 ], [ %306, %305 ]
  %268 = load i64, i64* %92, align 8
  %269 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %95, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %269, i64 %267, i32 0, i32 0
  %271 = load i64*, i64** %270, align 8
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %267 to i32
  %274 = shl i32 %273, 2
  %275 = sext i32 %274 to i64
  %276 = add nsw i64 %275, 7
  %277 = add i64 %276, %268
  %278 = inttoptr i64 %277 to i32*
  %279 = trunc i64 %272 to i32
  store atomic volatile i32 %279, i32* %278 monotonic, align 4
  %280 = and i64 %272, 1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %305, label %282

282:                                              ; preds = %266
  %283 = and i64 %268, -262144
  %284 = or i64 %283, 8
  %285 = inttoptr i64 %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = and i64 %286, 262144
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %293, label %289

289:                                              ; preds = %282
  %290 = or i64 %283, 16
  %291 = inttoptr i64 %290 to %"class.v8::internal::Heap"**
  %292 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %291, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %292, i64 %268, i64 %277, i64 %272) #5
  br label %293

293:                                              ; preds = %289, %282
  %294 = and i64 %272, -262144
  %295 = or i64 %294, 8
  %296 = inttoptr i64 %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = and i64 %297, 24
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %305, label %300

300:                                              ; preds = %293
  %301 = load i64, i64* %285, align 8
  %302 = and i64 %301, 24
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %300
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %268, i64 %277, i64 %272) #5
  br label %305

305:                                              ; preds = %266, %293, %300, %304
  %306 = add nuw nsw i64 %267, 1
  %307 = icmp eq i64 %306, %76
  br i1 %307, label %259, label %266
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal26SourceTextModuleDescriptor23SerializeRegularExportsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::ZoneVector.1164", align 8
  %5 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = mul i64 %8, 3
  %10 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1170"* %11 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #5
  store i64 %10, i64* %12, align 8
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %3
  %15 = icmp ugt i64 %9, 268435455
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %17) #6
  unreachable

18:                                               ; preds = %14
  %19 = mul i64 %8, 24
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ugt i64 %19, %24
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %18
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %19) #5
  br label %30

28:                                               ; preds = %18
  %29 = add i64 %21, %19
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::Handle.1167"*
  %33 = inttoptr i64 %31 to i8*
  %34 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Handle.1167"* %32, %"class.v8::internal::Handle.1167"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %32, i64 %9
  %37 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Handle.1167"* %36, %"class.v8::internal::Handle.1167"** %37, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 %19, i1 false) #5
  %38 = bitcast %"class.v8::internal::Handle.1167"** %34 to i64*
  %39 = ptrtoint %"class.v8::internal::Handle.1167"* %36 to i64
  store i64 %39, i64* %38, align 8
  br label %40

40:                                               ; preds = %3, %30
  %41 = phi i64 [ 0, %3 ], [ %31, %30 ]
  %42 = phi i64 [ 0, %3 ], [ %39, %30 ]
  %43 = bitcast %"class.std::__1::multimap"* %6 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = inttoptr i64 %44 to %"class.std::__1::__tree_end_node"*
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %45, %46
  br i1 %47, label %72, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1057"*
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %52 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  br label %60

54:                                               ; preds = %258
  %55 = ptrtoint %"class.std::__1::__tree_end_node"* %137 to i64
  br label %56

56:                                               ; preds = %54, %171
  %57 = phi %"class.std::__1::__tree_end_node"* [ %137, %54 ], [ %184, %171 ]
  %58 = phi i64 [ %55, %54 ], [ %62, %171 ]
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %45, %57
  br i1 %59, label %65, label %60

60:                                               ; preds = %48, %56
  %61 = phi i64 [ 0, %48 ], [ %183, %56 ]
  %62 = phi i64 [ %44, %48 ], [ %58, %56 ]
  %63 = inttoptr i64 %62 to %"class.std::__1::__tree_node.1252"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %63, i64 0, i32 1, i32 0, i32 0
  br label %96

65:                                               ; preds = %56
  %66 = trunc i64 %183 to i32
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.v8::internal::Handle.1167"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::ZoneVector.1164"* %4 to i64*
  %71 = load i64, i64* %70, align 8
  br label %72

72:                                               ; preds = %40, %65
  %73 = phi i64 [ %71, %65 ], [ %41, %40 ]
  %74 = phi i64 [ %69, %65 ], [ %42, %40 ]
  %75 = phi i32 [ %66, %65 ], [ 0, %40 ]
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.v8::internal::Handle.1167"** %77 to i64*
  %79 = sub i64 %74, %73
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %80, %76
  %82 = inttoptr i64 %73 to %"class.v8::internal::Handle.1167"*
  br i1 %81, label %83, label %86

83:                                               ; preds = %72
  %84 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0
  %85 = sub nsw i64 %76, %80
  call void @_ZNSt3__16vectorIN2v88internal6HandleINS2_6ObjectEEENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1165"* nonnull %84, i64 %85) #5
  br label %90

86:                                               ; preds = %72
  %87 = icmp ugt i64 %80, %76
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %82, i64 %76
  store %"class.v8::internal::Handle.1167"* %89, %"class.v8::internal::Handle.1167"** %77, align 8
  br label %90

90:                                               ; preds = %83, %86, %88
  %91 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1057"*
  %92 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1057"* %91, i32 %75, i8 zeroext 0) #5
  %93 = icmp eq i32 %75, 0
  br i1 %93, label %262, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  br label %269

96:                                               ; preds = %60, %129
  %97 = phi i64 [ %130, %129 ], [ %62, %60 ]
  %98 = phi i32 [ %127, %129 ], [ 0, %60 ]
  %99 = inttoptr i64 %97 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %109

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %105 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, %99
  br i1 %108, label %125, label %116

109:                                              ; preds = %96, %109
  %110 = phi %"class.std::__1::__tree_node_base"* [ %112, %109 ], [ %101, %96 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 0
  br label %125

116:                                              ; preds = %103, %116
  %117 = phi %"class.std::__1::__tree_end_node"** [ %120, %116 ], [ %104, %103 ]
  %118 = bitcast %"class.std::__1::__tree_end_node"** %117 to %"class.std::__1::__tree_node_base"**
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %119, i64 0, i32 2
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, %119
  br i1 %124, label %125, label %116

125:                                              ; preds = %116, %103, %114
  %126 = phi %"class.std::__1::__tree_end_node"* [ %115, %114 ], [ %105, %103 ], [ %121, %116 ]
  %127 = add nuw nsw i32 %98, 1
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %126, %45
  br i1 %128, label %136, label %129

129:                                              ; preds = %125
  %130 = ptrtoint %"class.std::__1::__tree_end_node"* %126 to i64
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 4
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.v8::internal::AstRawString"**
  %133 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %132, align 8
  %134 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %64, align 8
  %135 = icmp eq %"class.v8::internal::AstRawString"* %133, %134
  br i1 %135, label %96, label %136

136:                                              ; preds = %125, %129
  %137 = phi %"class.std::__1::__tree_end_node"* [ %45, %125 ], [ %126, %129 ]
  %138 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1057"* %49, i32 %127, i8 zeroext 0) #5
  %139 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %63, i64 0, i32 1, i32 0, i32 1
  %140 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %139, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %140, i64 0, i32 2
  %142 = bitcast %"class.v8::internal::AstRawString"** %141 to i64**
  %143 = load i64*, i64** %142, align 8
  %144 = load i64, i64* %143, align 8
  %145 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %145, i64 %61
  %147 = bitcast %"class.v8::internal::Handle.1167"* %146 to i64*
  store i64 %144, i64* %147, align 8
  %148 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %139, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %148, i64 0, i32 5
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = shl nsw i64 %151, 1
  %153 = load i8, i8* %51, align 8, !range !4
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %136
  %156 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %52, i64 %152) #5
  br label %171

157:                                              ; preds = %136
  %158 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %53, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %158, i64 0, i32 0, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %158, i64 0, i32 0, i32 1
  %162 = load i64*, i64** %161, align 8
  %163 = icmp eq i64* %160, %162
  br i1 %163, label %164, label %167

164:                                              ; preds = %157
  %165 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %158) #5
  %166 = load i64*, i64** %159, align 8
  br label %167

167:                                              ; preds = %164, %157
  %168 = phi i64* [ %166, %164 ], [ %160, %157 ]
  %169 = phi i64* [ %165, %164 ], [ %160, %157 ]
  %170 = getelementptr inbounds i64, i64* %168, i64 1
  store i64* %170, i64** %159, align 8
  store i64 %152, i64* %169, align 8
  br label %171

171:                                              ; preds = %155, %167
  %172 = phi i64* [ %156, %155 ], [ %169, %167 ]
  %173 = ptrtoint i64* %172 to i64
  %174 = add nuw nsw i64 %61, 1
  %175 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %175, i64 %174
  %177 = bitcast %"class.v8::internal::Handle.1167"* %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = ptrtoint i64* %138 to i64
  %179 = add nuw nsw i64 %61, 2
  %180 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %50, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %180, i64 %179
  %182 = bitcast %"class.v8::internal::Handle.1167"* %181 to i64*
  store i64 %178, i64* %182, align 8
  %183 = add nuw i64 %61, 3
  %184 = inttoptr i64 %62 to %"class.std::__1::__tree_end_node"*
  %185 = icmp eq %"class.std::__1::__tree_end_node"* %137, %184
  br i1 %185, label %56, label %186

186:                                              ; preds = %171, %258
  %187 = phi i64 [ %190, %258 ], [ 0, %171 ]
  %188 = phi i64 [ %260, %258 ], [ %62, %171 ]
  %189 = load i64, i64* %138, align 8
  %190 = add nuw i64 %187, 1
  %191 = inttoptr i64 %188 to %"class.std::__1::__tree_node.1252"*
  %192 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %191, i64 0, i32 1, i32 0, i32 1
  %193 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %192, align 8
  %194 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %193, i64 0, i32 1
  %195 = bitcast %"class.v8::internal::AstRawString"** %194 to i64***
  %196 = load i64**, i64*** %195, align 8
  %197 = load i64*, i64** %196, align 8
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %187 to i32
  %200 = shl i32 %199, 2
  %201 = sext i32 %200 to i64
  %202 = add nsw i64 %201, 7
  %203 = add i64 %202, %189
  %204 = inttoptr i64 %203 to i32*
  %205 = trunc i64 %198 to i32
  store atomic volatile i32 %205, i32* %204 monotonic, align 4
  %206 = and i64 %198, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %231, label %208

208:                                              ; preds = %186
  %209 = and i64 %189, -262144
  %210 = or i64 %209, 8
  %211 = inttoptr i64 %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = and i64 %212, 262144
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %208
  %216 = or i64 %209, 16
  %217 = inttoptr i64 %216 to %"class.v8::internal::Heap"**
  %218 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %217, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %218, i64 %189, i64 %203, i64 %198) #5
  br label %219

219:                                              ; preds = %215, %208
  %220 = and i64 %198, -262144
  %221 = or i64 %220, 8
  %222 = inttoptr i64 %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = and i64 %223, 24
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %219
  %227 = load i64, i64* %211, align 8
  %228 = and i64 %227, 24
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %226
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %189, i64 %203, i64 %198) #5
  br label %231

231:                                              ; preds = %186, %219, %226, %230
  %232 = inttoptr i64 %188 to %"class.std::__1::__tree_node_base"*
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %232, i64 0, i32 1
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %233, align 8
  %235 = icmp eq %"class.std::__1::__tree_node_base"* %234, null
  br i1 %235, label %236, label %242

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %232, i64 0, i32 2
  %238 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %237, align 8
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %238, i64 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, %232
  br i1 %241, label %258, label %249

242:                                              ; preds = %231, %242
  %243 = phi %"class.std::__1::__tree_node_base"* [ %245, %242 ], [ %234, %231 ]
  %244 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %243, i64 0, i32 0, i32 0
  %245 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %246 = icmp eq %"class.std::__1::__tree_node_base"* %245, null
  br i1 %246, label %247, label %242

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %243, i64 0, i32 0
  br label %258

249:                                              ; preds = %236, %249
  %250 = phi %"class.std::__1::__tree_end_node"** [ %253, %249 ], [ %237, %236 ]
  %251 = bitcast %"class.std::__1::__tree_end_node"** %250 to %"class.std::__1::__tree_node_base"**
  %252 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %251, align 8
  %253 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %252, i64 0, i32 2
  %254 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %253, align 8
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %254, i64 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, %252
  br i1 %257, label %258, label %249

258:                                              ; preds = %249, %236, %247
  %259 = phi %"class.std::__1::__tree_end_node"* [ %248, %247 ], [ %238, %236 ], [ %254, %249 ]
  %260 = ptrtoint %"class.std::__1::__tree_end_node"* %259 to i64
  %261 = icmp eq %"class.std::__1::__tree_end_node"* %137, %259
  br i1 %261, label %54, label %186

262:                                              ; preds = %308, %90
  %263 = getelementptr inbounds %"class.v8::internal::ZoneVector.1164", %"class.v8::internal::ZoneVector.1164"* %4, i64 0, i32 0, i32 0, i32 0
  %264 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %263, align 8
  %265 = icmp eq %"class.v8::internal::Handle.1167"* %264, null
  br i1 %265, label %268, label %266

266:                                              ; preds = %262
  %267 = ptrtoint %"class.v8::internal::Handle.1167"* %264 to i64
  store i64 %267, i64* %78, align 8
  br label %268

268:                                              ; preds = %262, %266
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i64* %92

269:                                              ; preds = %308, %94
  %270 = phi i64 [ 0, %94 ], [ %309, %308 ]
  %271 = load i64, i64* %92, align 8
  %272 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %95, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %272, i64 %270, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = load i64, i64* %274, align 8
  %276 = trunc i64 %270 to i32
  %277 = shl i32 %276, 2
  %278 = sext i32 %277 to i64
  %279 = add nsw i64 %278, 7
  %280 = add i64 %279, %271
  %281 = inttoptr i64 %280 to i32*
  %282 = trunc i64 %275 to i32
  store atomic volatile i32 %282, i32* %281 monotonic, align 4
  %283 = and i64 %275, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %308, label %285

285:                                              ; preds = %269
  %286 = and i64 %271, -262144
  %287 = or i64 %286, 8
  %288 = inttoptr i64 %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, 262144
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %296, label %292

292:                                              ; preds = %285
  %293 = or i64 %286, 16
  %294 = inttoptr i64 %293 to %"class.v8::internal::Heap"**
  %295 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %294, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %295, i64 %271, i64 %280, i64 %275) #5
  br label %296

296:                                              ; preds = %292, %285
  %297 = and i64 %275, -262144
  %298 = or i64 %297, 8
  %299 = inttoptr i64 %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = and i64 %300, 24
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %308, label %303

303:                                              ; preds = %296
  %304 = load i64, i64* %288, align 8
  %305 = and i64 %304, 24
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %303
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %271, i64 %280, i64 %275) #5
  br label %308

308:                                              ; preds = %269, %296, %303, %307
  %309 = add nuw nsw i64 %270, 1
  %310 = icmp eq i64 %309, %76
  br i1 %310, label %262, label %269
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal26SourceTextModuleDescriptor20AstRawStringComparerclEPKNS0_12AstRawStringES5_(%"struct.v8::internal::SourceTextModuleDescriptor::AstRawStringComparer"* nocapture readnone, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"* %2) #5
  %5 = icmp slt i32 %4, 0
  ret i1 %5
}

declare i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal26SourceTextModuleDescriptor21ModuleRequestComparerclEPKNS1_16AstModuleRequestES5_(%"struct.v8::internal::SourceTextModuleDescriptor::ModuleRequestComparer"* nocapture readnone, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* nocapture readonly, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %1, i64 0, i32 0
  %5 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %2, i64 0, i32 0
  %7 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %6, align 8
  %8 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %5, %"class.v8::internal::AstRawString"* %7) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %118

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %1, i64 0, i32 1
  %12 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %2, i64 0, i32 1
  %16 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %14, %17
  br i1 %18, label %110, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %21, %22
  br i1 %23, label %110, label %24

24:                                               ; preds = %19, %101
  %25 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %21, %19 ]
  %26 = phi %"class.std::__1::__tree_end_node"* [ %73, %101 ], [ %14, %19 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.v8::internal::AstRawString"**
  %29 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.v8::internal::AstRawString"**
  %32 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %31, align 8
  %33 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %29, %"class.v8::internal::AstRawString"* %32) #5
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %118

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 5
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.v8::internal::AstRawString"**
  %38 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.v8::internal::AstRawString"**
  %41 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %40, align 8
  %42 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %38, %"class.v8::internal::AstRawString"* %41) #5
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %118

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 1, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 2
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_end_node"**
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %49
  br i1 %55, label %72, label %63

56:                                               ; preds = %44, %56
  %57 = phi %"class.std::__1::__tree_node_base"* [ %59, %56 ], [ %46, %44 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0
  br label %72

63:                                               ; preds = %48, %63
  %64 = phi %"class.std::__1::__tree_end_node"** [ %67, %63 ], [ %51, %48 ]
  %65 = bitcast %"class.std::__1::__tree_end_node"** %64 to %"class.std::__1::__tree_node_base"**
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 2
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %66
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %48, %61
  %73 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %52, %48 ], [ %68, %63 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %72
  %78 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_end_node"**
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, %78
  br i1 %84, label %101, label %92

85:                                               ; preds = %72, %85
  %86 = phi %"class.std::__1::__tree_node_base"* [ %88, %85 ], [ %75, %72 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %85

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 0
  br label %101

92:                                               ; preds = %77, %92
  %93 = phi %"class.std::__1::__tree_end_node"** [ %96, %92 ], [ %80, %77 ]
  %94 = bitcast %"class.std::__1::__tree_end_node"** %93 to %"class.std::__1::__tree_node_base"**
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %95
  br i1 %100, label %101, label %92

101:                                              ; preds = %92, %77, %90
  %102 = phi %"class.std::__1::__tree_end_node"* [ %91, %90 ], [ %81, %77 ], [ %97, %92 ]
  %103 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %11, align 8
  %104 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %103, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %105 = icmp eq %"class.std::__1::__tree_end_node"* %73, %104
  %106 = load %"class.v8::internal::ImportAssertions"*, %"class.v8::internal::ImportAssertions"** %15, align 8
  %107 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %106, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %102, %107
  %109 = or i1 %105, %108
  br i1 %109, label %110, label %24

110:                                              ; preds = %101, %19, %10
  %111 = phi %"class.v8::internal::ImportAssertions"* [ %16, %10 ], [ %16, %19 ], [ %106, %101 ]
  %112 = phi %"class.v8::internal::ImportAssertions"* [ %12, %10 ], [ %12, %19 ], [ %103, %101 ]
  %113 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %112, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::ImportAssertions", %"class.v8::internal::ImportAssertions"* %111, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp ult i64 %114, %116
  ret i1 %117

118:                                              ; preds = %24, %35, %3
  %119 = phi i32 [ %8, %3 ], [ %33, %24 ], [ %42, %35 ]
  %120 = icmp slt i32 %119, 0
  ret i1 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor9AddImportEPKNS0_12AstRawStringES4_S4_PKNS0_16ImportAssertionsENS0_7Scanner8LocationES9_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.std::__1::pair.1249", align 8
  %10 = alloca %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ult i64 %15, 40
  br i1 %16, label %17, label %19, !prof !3

17:                                               ; preds = %8
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 40) #5
  br label %21

19:                                               ; preds = %8
  %20 = add i64 %12, 40
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*
  %24 = inttoptr i64 %22 to i64*
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, i64 0, i32 4
  %27 = bitcast %"class.v8::internal::AstRawString"** %25 to i64*
  store i64 0, i64* %27, align 8
  store i32 -1, i32* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, i64 0, i32 5
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, i64 0, i32 2
  store %"class.v8::internal::AstRawString"* %2, %"class.v8::internal::AstRawString"** %29, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, i64 0, i32 3
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %30, align 8
  %31 = trunc i64 %6 to i32
  %32 = ptrtoint %"class.v8::internal::AstRawString"* %3 to i64
  %33 = ptrtoint %"class.v8::internal::ImportAssertions"* %4 to i64
  %34 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5
  %38 = load i64, i64* %11, align 8
  %39 = load i64, i64* %13, align 8
  %40 = sub i64 %39, %38
  %41 = icmp ult i64 %40, 24
  br i1 %41, label %42, label %44, !prof !3

42:                                               ; preds = %21
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 24) #5
  br label %46

44:                                               ; preds = %21
  %45 = add i64 %38, 24
  store i64 %45, i64* %11, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %38, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*
  %49 = inttoptr i64 %47 to i64*
  store i64 %32, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %48, i64 0, i32 1
  %51 = bitcast %"class.v8::internal::ImportAssertions"** %50 to i64*
  store i64 %33, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %48, i64 0, i32 2
  store i32 %31, i32* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %48, i64 0, i32 3
  store i32 %36, i32* %53, align 4
  store %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %48, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %10, align 8
  %54 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"* %54, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %10, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %10) #5
  %56 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %55, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #5
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 4
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"**
  %59 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %26, align 8
  %62 = bitcast %"struct.std::__1::pair.1249"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #5
  %63 = bitcast %"class.v8::internal::AstRawString"** %29 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1249", %"struct.std::__1::pair.1249"* %9, i64 0, i32 0
  %66 = bitcast %"struct.std::__1::pair.1249"* %9 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.1249", %"struct.std::__1::pair.1249"* %9, i64 0, i32 1
  store %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %23, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0
  %69 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1155"* %68, %"class.v8::internal::AstRawString"** nonnull dereferenceable(8) %65, %"struct.std::__1::pair.1249"* nonnull dereferenceable(16) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor13AddStarImportEPKNS0_12AstRawStringES4_PKNS0_16ImportAssertionsENS0_7Scanner8LocationES9_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ult i64 %13, 40
  br i1 %14, label %15, label %17, !prof !3

15:                                               ; preds = %7
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 40) #5
  br label %19

17:                                               ; preds = %7
  %18 = add i64 %10, 40
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*
  %22 = inttoptr i64 %20 to i64*
  store i64 %4, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %21, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %21, i64 0, i32 4
  %25 = bitcast %"class.v8::internal::AstRawString"** %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #5
  store i32 -1, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %21, i64 0, i32 5
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %21, i64 0, i32 2
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %27, align 8
  %28 = trunc i64 %5 to i32
  %29 = ptrtoint %"class.v8::internal::AstRawString"* %2 to i64
  %30 = ptrtoint %"class.v8::internal::ImportAssertions"* %3 to i64
  %31 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  %35 = load i64, i64* %9, align 8
  %36 = load i64, i64* %11, align 8
  %37 = sub i64 %36, %35
  %38 = icmp ult i64 %37, 24
  br i1 %38, label %39, label %41, !prof !3

39:                                               ; preds = %19
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 24) #5
  br label %43

41:                                               ; preds = %19
  %42 = add i64 %35, 24
  store i64 %42, i64* %9, align 8
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %40, %39 ], [ %35, %41 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*
  %46 = inttoptr i64 %44 to i64*
  store i64 %29, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %45, i64 0, i32 1
  %48 = bitcast %"class.v8::internal::ImportAssertions"** %47 to i64*
  store i64 %30, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %45, i64 0, i32 2
  store i32 %28, i32* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %45, i64 0, i32 3
  store i32 %33, i32* %50, align 4
  store %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %45, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %8, align 8
  %51 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"* %51, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %8, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %8) #5
  %53 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %52, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 4
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"**
  %56 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %56, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %24, align 8
  %59 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 2, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %61 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %61, %63
  %65 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %63 to i64
  br i1 %64, label %71, label %66

66:                                               ; preds = %43
  %67 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %61 to i64*
  store i64 %20, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %61, i64 1
  %69 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %68 to i64
  %70 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60 to i64*
  store i64 %69, i64* %70, align 8
  br label %296

71:                                               ; preds = %43
  %72 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %61 to i64
  %73 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60 to i64*
  %74 = bitcast %"class.std::__1::vector.1149"* %59 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %72, %75
  %77 = ashr exact i64 %76, 3
  %78 = add nsw i64 %77, 1
  %79 = icmp ugt i64 %78, 268435455
  br i1 %79, label %80, label %82

80:                                               ; preds = %71
  %81 = bitcast %"class.std::__1::vector.1149"* %59 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %81) #6
  unreachable

82:                                               ; preds = %71
  %83 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62 to i64*
  %84 = sub i64 %65, %75
  %85 = ashr exact i64 %84, 3
  %86 = icmp ult i64 %85, 134217727
  br i1 %86, label %87, label %92

87:                                               ; preds = %82
  %88 = ashr exact i64 %84, 2
  %89 = icmp ult i64 %88, %78
  %90 = select i1 %89, i64 %78, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %110, label %92

92:                                               ; preds = %87, %82
  %93 = phi i64 [ %90, %87 ], [ 268435455, %82 ]
  %94 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %95 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %94, align 8
  %96 = shl i64 %93, 3
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %95, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %95, i64 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %100, %98
  %102 = icmp ugt i64 %96, %101
  br i1 %102, label %103, label %105, !prof !3

103:                                              ; preds = %92
  %104 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %95, i64 %96) #5
  br label %107

105:                                              ; preds = %92
  %106 = add i64 %98, %96
  store i64 %106, i64* %97, align 8
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi i64 [ %104, %103 ], [ %98, %105 ]
  %109 = inttoptr i64 %108 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  br label %110

110:                                              ; preds = %107, %87
  %111 = phi i64 [ %93, %107 ], [ 0, %87 ]
  %112 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %109, %107 ], [ null, %87 ]
  %113 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %112, i64 %77
  %114 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %112, i64 %111
  %115 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %114 to i64
  %116 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113 to i64*
  store i64 %20, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113, i64 1
  %118 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %117 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector.1149", %"class.std::__1::vector.1149"* %59, i64 0, i32 0, i32 0
  %120 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %119, align 8
  %121 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120 to i64
  %122 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60, align 8
  %123 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, %120
  br i1 %123, label %293, label %124

124:                                              ; preds = %110
  %125 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 -1
  %126 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %125 to i64
  %127 = sub i64 %126, %121
  %128 = lshr i64 %127, 3
  %129 = add nuw nsw i64 %128, 1
  %130 = icmp ult i64 %129, 4
  br i1 %130, label %223, label %131

131:                                              ; preds = %124
  %132 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 -1
  %133 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %132 to i64
  %134 = sub i64 %133, %121
  %135 = lshr i64 %134, 3
  %136 = xor i64 %135, -1
  %137 = add nsw i64 %77, %136
  %138 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %112, i64 %137
  %139 = xor i64 %135, -1
  %140 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 %139
  %141 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %138, %122
  %142 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %140, %113
  %143 = and i1 %141, %142
  br i1 %143, label %223, label %144

144:                                              ; preds = %131
  %145 = and i64 %129, 4611686018427387900
  %146 = sub nsw i64 0, %145
  %147 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113, i64 %146
  %148 = sub nsw i64 0, %145
  %149 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 %148
  %150 = add nsw i64 %145, -4
  %151 = lshr exact i64 %150, 2
  %152 = add nuw nsw i64 %151, 1
  %153 = and i64 %152, 1
  %154 = icmp eq i64 %150, 0
  br i1 %154, label %201, label %155

155:                                              ; preds = %144
  %156 = sub nuw nsw i64 %152, %153
  %157 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113, i64 -1
  %158 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 -1
  %159 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113, i64 -1
  %160 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 -1
  br label %161

161:                                              ; preds = %161, %155
  %162 = phi i64 [ 0, %155 ], [ %196, %161 ]
  %163 = phi i64 [ %156, %155 ], [ %197, %161 ]
  %164 = sub i64 0, %162
  %165 = sub i64 0, %162
  %166 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %157, i64 %164
  %167 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %158, i64 %165
  %168 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %167, i64 -1
  %169 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8, !alias.scope !5
  %171 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %167, i64 -2
  %172 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %171, i64 -1
  %173 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !5
  %175 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %166, i64 -1
  %176 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %175 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %176, align 8, !alias.scope !8, !noalias !5
  %177 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %166, i64 -2
  %178 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %177, i64 -1
  %179 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %178 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %179, align 8, !alias.scope !8, !noalias !5
  %180 = sub nuw nsw i64 -4, %162
  %181 = sub nuw nsw i64 -4, %162
  %182 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %159, i64 %180
  %183 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %160, i64 %181
  %184 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %183, i64 -1
  %185 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !5
  %187 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %183, i64 -2
  %188 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %187, i64 -1
  %189 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !5
  %191 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %182, i64 -1
  %192 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %191 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %192, align 8, !alias.scope !8, !noalias !5
  %193 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %182, i64 -2
  %194 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %193, i64 -1
  %195 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %194 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %195, align 8, !alias.scope !8, !noalias !5
  %196 = add i64 %162, 8
  %197 = add i64 %163, -2
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %161, !llvm.loop !10

199:                                              ; preds = %161
  %200 = sub nuw nsw i64 -8, %162
  br label %201

201:                                              ; preds = %199, %144
  %202 = phi i64 [ 0, %144 ], [ %200, %199 ]
  %203 = icmp eq i64 %153, 0
  br i1 %203, label %221, label %204

204:                                              ; preds = %201
  %205 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %113, i64 -1
  %206 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122, i64 -1
  %207 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %205, i64 %202
  %208 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %206, i64 %202
  %209 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %208, i64 -1
  %210 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %209 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8, !alias.scope !5
  %212 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %208, i64 -2
  %213 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %212, i64 -1
  %214 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !5
  %216 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %207, i64 -1
  %217 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %216 to <2 x i64>*
  store <2 x i64> %211, <2 x i64>* %217, align 8, !alias.scope !8, !noalias !5
  %218 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %207, i64 -2
  %219 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %218, i64 -1
  %220 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %219 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %220, align 8, !alias.scope !8, !noalias !5
  br label %221

221:                                              ; preds = %201, %204
  %222 = icmp eq i64 %129, %145
  br i1 %222, label %293, label %223

223:                                              ; preds = %221, %131, %124
  %224 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %113, %131 ], [ %113, %124 ], [ %147, %221 ]
  %225 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %122, %131 ], [ %122, %124 ], [ %149, %221 ]
  %226 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %225, i64 -1
  %227 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %226 to i64
  %228 = sub i64 %227, %121
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = and i64 %230, 7
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %244, label %233

233:                                              ; preds = %223, %233
  %234 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %237, %233 ], [ %224, %223 ]
  %235 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %238, %233 ], [ %225, %223 ]
  %236 = phi i64 [ %242, %233 ], [ %231, %223 ]
  %237 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %234, i64 -1
  %238 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %235, i64 -1
  %239 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = add i64 %236, -1
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %233, !llvm.loop !12

244:                                              ; preds = %233, %223
  %245 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ undef, %223 ], [ %237, %233 ]
  %246 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %224, %223 ], [ %237, %233 ]
  %247 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %225, %223 ], [ %238, %233 ]
  %248 = icmp ult i64 %228, 56
  br i1 %248, label %293, label %249

249:                                              ; preds = %244, %249
  %250 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %287, %249 ], [ %246, %244 ]
  %251 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %288, %249 ], [ %247, %244 ]
  %252 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -1
  %253 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -1
  %254 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -2
  %258 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -2
  %259 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -3
  %263 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -3
  %264 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -4
  %268 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -4
  %269 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %267 to i64*
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -5
  %273 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -5
  %274 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %272 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -6
  %278 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -6
  %279 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -7
  %283 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -7
  %284 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250, i64 -8
  %288 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251, i64 -8
  %289 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %288, %120
  br i1 %292, label %293, label %249, !llvm.loop !14

293:                                              ; preds = %244, %249, %221, %110
  %294 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %113, %110 ], [ %147, %221 ], [ %245, %244 ], [ %287, %249 ]
  %295 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %294 to i64
  store i64 %295, i64* %74, align 8
  store i64 %118, i64* %73, align 8
  store i64 %115, i64* %83, align 8
  br label %296

296:                                              ; preds = %66, %293
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor14AddEmptyImportEPKNS0_12AstRawStringEPKNS0_16ImportAssertionsENS0_7Scanner8LocationEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, align 8
  %7 = trunc i64 %3 to i32
  %8 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %9 = ptrtoint %"class.v8::internal::ImportAssertions"* %2 to i64
  %10 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 24
  br i1 %19, label %20, label %22, !prof !3

20:                                               ; preds = %5
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 24) #5
  br label %24

22:                                               ; preds = %5
  %23 = add i64 %15, 24
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*
  %27 = inttoptr i64 %25 to i64*
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %26, i64 0, i32 1
  %29 = bitcast %"class.v8::internal::ImportAssertions"** %28 to i64*
  store i64 %9, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %26, i64 0, i32 2
  store i32 %7, i32* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %26, i64 0, i32 3
  store i32 %12, i32* %31, align 4
  store %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %26, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %6, align 8
  %32 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"* %32, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %6, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor9AddExportEPKNS0_12AstRawStringES4_NS0_7Scanner8LocationEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.1249", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 40
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %5
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 40) #5
  br label %17

15:                                               ; preds = %5
  %16 = add i64 %8, 40
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*
  %20 = inttoptr i64 %18 to i64*
  store i64 %3, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %19, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %19, i64 0, i32 4
  %23 = getelementptr inbounds %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %21, i64 2
  %24 = bitcast %"class.v8::internal::AstRawString"** %23 to i64*
  store i64 0, i64* %24, align 8
  store i32 -1, i32* %22, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %19, i64 0, i32 5
  store i32 0, i32* %25, align 4
  store %"class.v8::internal::AstRawString"* %2, %"class.v8::internal::AstRawString"** %21, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %19, i64 0, i32 2
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %26, align 8
  %27 = bitcast %"struct.std::__1::pair.1249"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #5
  %28 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %29 = bitcast %"struct.std::__1::pair.1249"* %6 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.1249", %"struct.std::__1::pair.1249"* %6, i64 0, i32 1
  store %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %19, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE15__emplace_multiIJNS_4pairIS6_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEDpOT_(%"class.std::__1::__tree.1155"* %31, %"struct.std::__1::pair.1249"* nonnull dereferenceable(16) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor9AddExportEPKNS0_12AstRawStringES4_S4_PKNS0_16ImportAssertionsENS0_7Scanner8LocationES9_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ult i64 %14, 40
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %8
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 40) #5
  br label %20

18:                                               ; preds = %8
  %19 = add i64 %11, 40
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*
  %23 = inttoptr i64 %21 to i64*
  store i64 %5, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %22, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %22, i64 0, i32 4
  %26 = getelementptr inbounds %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %24, i64 1
  %27 = bitcast %"class.v8::internal::AstRawString"** %26 to i64*
  store i64 0, i64* %27, align 8
  store i32 -1, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %22, i64 0, i32 5
  store i32 0, i32* %28, align 4
  store %"class.v8::internal::AstRawString"* %2, %"class.v8::internal::AstRawString"** %24, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %22, i64 0, i32 3
  store %"class.v8::internal::AstRawString"* %1, %"class.v8::internal::AstRawString"** %29, align 8
  %30 = trunc i64 %6 to i32
  %31 = ptrtoint %"class.v8::internal::AstRawString"* %3 to i64
  %32 = ptrtoint %"class.v8::internal::ImportAssertions"* %4 to i64
  %33 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #5
  %37 = load i64, i64* %10, align 8
  %38 = load i64, i64* %12, align 8
  %39 = sub i64 %38, %37
  %40 = icmp ult i64 %39, 24
  br i1 %40, label %41, label %43, !prof !3

41:                                               ; preds = %20
  %42 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 24) #5
  br label %45

43:                                               ; preds = %20
  %44 = add i64 %37, 24
  store i64 %44, i64* %10, align 8
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi i64 [ %42, %41 ], [ %37, %43 ]
  %47 = inttoptr i64 %46 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*
  %48 = inttoptr i64 %46 to i64*
  store i64 %31, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %47, i64 0, i32 1
  %50 = bitcast %"class.v8::internal::ImportAssertions"** %49 to i64*
  store i64 %32, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %47, i64 0, i32 2
  store i32 %30, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %47, i64 0, i32 3
  store i32 %35, i32* %52, align 4
  store %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %47, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %9, align 8
  %53 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"* %53, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %9, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %9) #5
  %55 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %54, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #5
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"**
  %58 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  %61 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %64, align 8
  %66 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %63, %65
  %67 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %65 to i64
  br i1 %66, label %73, label %68

68:                                               ; preds = %45
  %69 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %63 to i64*
  store i64 %21, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %63, i64 1
  %71 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %70 to i64
  %72 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62 to i64*
  store i64 %71, i64* %72, align 8
  br label %298

73:                                               ; preds = %45
  %74 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %63 to i64
  %75 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62 to i64*
  %76 = bitcast %"class.std::__1::vector.1149"* %61 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = ashr exact i64 %78, 3
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 268435455
  br i1 %81, label %82, label %84

82:                                               ; preds = %73
  %83 = bitcast %"class.std::__1::vector.1149"* %61 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #6
  unreachable

84:                                               ; preds = %73
  %85 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %64 to i64*
  %86 = sub i64 %67, %77
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %87, 134217727
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = ashr exact i64 %86, 2
  %91 = icmp ult i64 %90, %80
  %92 = select i1 %91, i64 %80, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %89, %84
  %95 = phi i64 [ %92, %89 ], [ 268435455, %84 ]
  %96 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %97 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %96, align 8
  %98 = shl i64 %95, 3
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %97, i64 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %97, i64 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %102, %100
  %104 = icmp ugt i64 %98, %103
  br i1 %104, label %105, label %107, !prof !3

105:                                              ; preds = %94
  %106 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %97, i64 %98) #5
  br label %109

107:                                              ; preds = %94
  %108 = add i64 %100, %98
  store i64 %108, i64* %99, align 8
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ %106, %105 ], [ %100, %107 ]
  %111 = inttoptr i64 %110 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  br label %112

112:                                              ; preds = %109, %89
  %113 = phi i64 [ %95, %109 ], [ 0, %89 ]
  %114 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %111, %109 ], [ null, %89 ]
  %115 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %114, i64 %79
  %116 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %114, i64 %113
  %117 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %116 to i64
  %118 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115 to i64*
  store i64 %21, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115, i64 1
  %120 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %119 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.1149", %"class.std::__1::vector.1149"* %61, i64 0, i32 0, i32 0
  %122 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %121, align 8
  %123 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %122 to i64
  %124 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %62, align 8
  %125 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, %122
  br i1 %125, label %295, label %126

126:                                              ; preds = %112
  %127 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 -1
  %128 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %127 to i64
  %129 = sub i64 %128, %123
  %130 = lshr i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = icmp ult i64 %131, 4
  br i1 %132, label %225, label %133

133:                                              ; preds = %126
  %134 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 -1
  %135 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %134 to i64
  %136 = sub i64 %135, %123
  %137 = lshr i64 %136, 3
  %138 = xor i64 %137, -1
  %139 = add nsw i64 %79, %138
  %140 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %114, i64 %139
  %141 = xor i64 %137, -1
  %142 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 %141
  %143 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %140, %124
  %144 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %142, %115
  %145 = and i1 %143, %144
  br i1 %145, label %225, label %146

146:                                              ; preds = %133
  %147 = and i64 %131, 4611686018427387900
  %148 = sub nsw i64 0, %147
  %149 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115, i64 %148
  %150 = sub nsw i64 0, %147
  %151 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 %150
  %152 = add nsw i64 %147, -4
  %153 = lshr exact i64 %152, 2
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %152, 0
  br i1 %156, label %203, label %157

157:                                              ; preds = %146
  %158 = sub nuw nsw i64 %154, %155
  %159 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115, i64 -1
  %160 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 -1
  %161 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115, i64 -1
  %162 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 -1
  br label %163

163:                                              ; preds = %163, %157
  %164 = phi i64 [ 0, %157 ], [ %198, %163 ]
  %165 = phi i64 [ %158, %157 ], [ %199, %163 ]
  %166 = sub i64 0, %164
  %167 = sub i64 0, %164
  %168 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %159, i64 %166
  %169 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %160, i64 %167
  %170 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %169, i64 -1
  %171 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !15
  %173 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %169, i64 -2
  %174 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %173, i64 -1
  %175 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !15
  %177 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %168, i64 -1
  %178 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %177 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %178, align 8, !alias.scope !18, !noalias !15
  %179 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %168, i64 -2
  %180 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %179, i64 -1
  %181 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %180 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %181, align 8, !alias.scope !18, !noalias !15
  %182 = sub nuw nsw i64 -4, %164
  %183 = sub nuw nsw i64 -4, %164
  %184 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %161, i64 %182
  %185 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %162, i64 %183
  %186 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %185, i64 -1
  %187 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !15
  %189 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %185, i64 -2
  %190 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %189, i64 -1
  %191 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %190 to <2 x i64>*
  %192 = load <2 x i64>, <2 x i64>* %191, align 8, !alias.scope !15
  %193 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %184, i64 -1
  %194 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %193 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %194, align 8, !alias.scope !18, !noalias !15
  %195 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %184, i64 -2
  %196 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %195, i64 -1
  %197 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %196 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %197, align 8, !alias.scope !18, !noalias !15
  %198 = add i64 %164, 8
  %199 = add i64 %165, -2
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %163, !llvm.loop !20

201:                                              ; preds = %163
  %202 = sub nuw nsw i64 -8, %164
  br label %203

203:                                              ; preds = %201, %146
  %204 = phi i64 [ 0, %146 ], [ %202, %201 ]
  %205 = icmp eq i64 %155, 0
  br i1 %205, label %223, label %206

206:                                              ; preds = %203
  %207 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115, i64 -1
  %208 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124, i64 -1
  %209 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %207, i64 %204
  %210 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %208, i64 %204
  %211 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %210, i64 -1
  %212 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %211 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 8, !alias.scope !15
  %214 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %210, i64 -2
  %215 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %214, i64 -1
  %216 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %215 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8, !alias.scope !15
  %218 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %209, i64 -1
  %219 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %218 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %219, align 8, !alias.scope !18, !noalias !15
  %220 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %209, i64 -2
  %221 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %220, i64 -1
  %222 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %221 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %222, align 8, !alias.scope !18, !noalias !15
  br label %223

223:                                              ; preds = %203, %206
  %224 = icmp eq i64 %131, %147
  br i1 %224, label %295, label %225

225:                                              ; preds = %223, %133, %126
  %226 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %115, %133 ], [ %115, %126 ], [ %149, %223 ]
  %227 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %124, %133 ], [ %124, %126 ], [ %151, %223 ]
  %228 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %227, i64 -1
  %229 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %228 to i64
  %230 = sub i64 %229, %123
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 7
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %246, label %235

235:                                              ; preds = %225, %235
  %236 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %239, %235 ], [ %226, %225 ]
  %237 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %240, %235 ], [ %227, %225 ]
  %238 = phi i64 [ %244, %235 ], [ %233, %225 ]
  %239 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %236, i64 -1
  %240 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %237, i64 -1
  %241 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = add i64 %238, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %235, !llvm.loop !21

246:                                              ; preds = %235, %225
  %247 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ undef, %225 ], [ %239, %235 ]
  %248 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %226, %225 ], [ %239, %235 ]
  %249 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %227, %225 ], [ %240, %235 ]
  %250 = icmp ult i64 %230, 56
  br i1 %250, label %295, label %251

251:                                              ; preds = %246, %251
  %252 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %289, %251 ], [ %248, %246 ]
  %253 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %290, %251 ], [ %249, %246 ]
  %254 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -1
  %255 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -1
  %256 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -2
  %260 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -2
  %261 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -3
  %265 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -3
  %266 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -4
  %270 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -4
  %271 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -5
  %275 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -5
  %276 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %274 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -6
  %280 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -6
  %281 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %279 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -7
  %285 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -7
  %286 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, i64 -8
  %290 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %253, i64 -8
  %291 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %289 to i64*
  store i64 %292, i64* %293, align 8
  %294 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %290, %122
  br i1 %294, label %295, label %251, !llvm.loop !22

295:                                              ; preds = %246, %251, %223, %112
  %296 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %115, %112 ], [ %149, %223 ], [ %247, %246 ], [ %289, %251 ]
  %297 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %296 to i64
  store i64 %297, i64* %76, align 8
  store i64 %120, i64* %75, align 8
  store i64 %117, i64* %85, align 8
  br label %298

298:                                              ; preds = %68, %295
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor13AddStarExportEPKNS0_12AstRawStringEPKNS0_16ImportAssertionsENS0_7Scanner8LocationES9_PNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::ImportAssertions"*, i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 40
  br i1 %13, label %14, label %16, !prof !3

14:                                               ; preds = %6
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 40) #5
  br label %18

16:                                               ; preds = %6
  %17 = add i64 %9, 40
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*
  %21 = inttoptr i64 %19 to i64*
  store i64 %3, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %20, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %20, i64 0, i32 4
  %24 = bitcast %"class.v8::internal::AstRawString"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5
  store i32 -1, i32* %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %20, i64 0, i32 5
  store i32 0, i32* %25, align 4
  %26 = trunc i64 %4 to i32
  %27 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %28 = ptrtoint %"class.v8::internal::ImportAssertions"* %2 to i64
  %29 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  %33 = load i64, i64* %8, align 8
  %34 = load i64, i64* %10, align 8
  %35 = sub i64 %34, %33
  %36 = icmp ult i64 %35, 24
  br i1 %36, label %37, label %39, !prof !3

37:                                               ; preds = %18
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 24) #5
  br label %41

39:                                               ; preds = %18
  %40 = add i64 %33, 24
  store i64 %40, i64* %8, align 8
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i64 [ %38, %37 ], [ %33, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*
  %44 = inttoptr i64 %42 to i64*
  store i64 %27, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %43, i64 0, i32 1
  %46 = bitcast %"class.v8::internal::ImportAssertions"** %45 to i64*
  store i64 %28, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %43, i64 0, i32 2
  store i32 %26, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %43, i64 0, i32 3
  store i32 %31, i32* %48, align 4
  store %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %43, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %7, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"* %49, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %7, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** nonnull dereferenceable(8) %7) #5
  %51 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %50, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #5
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 4
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"**
  %54 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest", %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %23, align 8
  %57 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %59 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60, align 8
  %62 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %59, %61
  %63 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %61 to i64
  br i1 %62, label %69, label %64

64:                                               ; preds = %41
  %65 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %59 to i64*
  store i64 %19, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %59, i64 1
  %67 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %66 to i64
  %68 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %58 to i64*
  store i64 %67, i64* %68, align 8
  br label %294

69:                                               ; preds = %41
  %70 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %59 to i64
  %71 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %58 to i64*
  %72 = bitcast %"class.std::__1::vector.1149"* %57 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %70, %73
  %75 = ashr exact i64 %74, 3
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 268435455
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = bitcast %"class.std::__1::vector.1149"* %57 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #6
  unreachable

80:                                               ; preds = %69
  %81 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %60 to i64*
  %82 = sub i64 %63, %73
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %83, 134217727
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = ashr exact i64 %82, 2
  %87 = icmp ult i64 %86, %76
  %88 = select i1 %87, i64 %76, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %108, label %90

90:                                               ; preds = %85, %80
  %91 = phi i64 [ %88, %85 ], [ 268435455, %80 ]
  %92 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %93 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %92, align 8
  %94 = shl i64 %91, 3
  %95 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %93, i64 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %98, %96
  %100 = icmp ugt i64 %94, %99
  br i1 %100, label %101, label %103, !prof !3

101:                                              ; preds = %90
  %102 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %93, i64 %94) #5
  br label %105

103:                                              ; preds = %90
  %104 = add i64 %96, %94
  store i64 %104, i64* %95, align 8
  br label %105

105:                                              ; preds = %103, %101
  %106 = phi i64 [ %102, %101 ], [ %96, %103 ]
  %107 = inttoptr i64 %106 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  br label %108

108:                                              ; preds = %105, %85
  %109 = phi i64 [ %91, %105 ], [ 0, %85 ]
  %110 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %107, %105 ], [ null, %85 ]
  %111 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %110, i64 %75
  %112 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %110, i64 %109
  %113 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %112 to i64
  %114 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111 to i64*
  store i64 %19, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111, i64 1
  %116 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %115 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.1149", %"class.std::__1::vector.1149"* %57, i64 0, i32 0, i32 0
  %118 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %117, align 8
  %119 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %118 to i64
  %120 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %58, align 8
  %121 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, %118
  br i1 %121, label %291, label %122

122:                                              ; preds = %108
  %123 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %124 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %123 to i64
  %125 = sub i64 %124, %119
  %126 = lshr i64 %125, 3
  %127 = add nuw nsw i64 %126, 1
  %128 = icmp ult i64 %127, 4
  br i1 %128, label %221, label %129

129:                                              ; preds = %122
  %130 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %131 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %130 to i64
  %132 = sub i64 %131, %119
  %133 = lshr i64 %132, 3
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %75, %134
  %136 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %110, i64 %135
  %137 = xor i64 %133, -1
  %138 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 %137
  %139 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %136, %120
  %140 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %138, %111
  %141 = and i1 %139, %140
  br i1 %141, label %221, label %142

142:                                              ; preds = %129
  %143 = and i64 %127, 4611686018427387900
  %144 = sub nsw i64 0, %143
  %145 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111, i64 %144
  %146 = sub nsw i64 0, %143
  %147 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 %146
  %148 = add nsw i64 %143, -4
  %149 = lshr exact i64 %148, 2
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 1
  %152 = icmp eq i64 %148, 0
  br i1 %152, label %199, label %153

153:                                              ; preds = %142
  %154 = sub nuw nsw i64 %150, %151
  %155 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111, i64 -1
  %156 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %157 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111, i64 -1
  %158 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  br label %159

159:                                              ; preds = %159, %153
  %160 = phi i64 [ 0, %153 ], [ %194, %159 ]
  %161 = phi i64 [ %154, %153 ], [ %195, %159 ]
  %162 = sub i64 0, %160
  %163 = sub i64 0, %160
  %164 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %155, i64 %162
  %165 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %156, i64 %163
  %166 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %165, i64 -1
  %167 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !23
  %169 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %165, i64 -2
  %170 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %169, i64 -1
  %171 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !23
  %173 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %164, i64 -1
  %174 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %173 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %174, align 8, !alias.scope !26, !noalias !23
  %175 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %164, i64 -2
  %176 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %175, i64 -1
  %177 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %176 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %177, align 8, !alias.scope !26, !noalias !23
  %178 = sub nuw nsw i64 -4, %160
  %179 = sub nuw nsw i64 -4, %160
  %180 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %157, i64 %178
  %181 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %158, i64 %179
  %182 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %181, i64 -1
  %183 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8, !alias.scope !23
  %185 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %181, i64 -2
  %186 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %185, i64 -1
  %187 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !23
  %189 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %180, i64 -1
  %190 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %189 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %190, align 8, !alias.scope !26, !noalias !23
  %191 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %180, i64 -2
  %192 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %191, i64 -1
  %193 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %192 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %193, align 8, !alias.scope !26, !noalias !23
  %194 = add i64 %160, 8
  %195 = add i64 %161, -2
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %159, !llvm.loop !28

197:                                              ; preds = %159
  %198 = sub nuw nsw i64 -8, %160
  br label %199

199:                                              ; preds = %197, %142
  %200 = phi i64 [ 0, %142 ], [ %198, %197 ]
  %201 = icmp eq i64 %151, 0
  br i1 %201, label %219, label %202

202:                                              ; preds = %199
  %203 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %111, i64 -1
  %204 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %205 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %203, i64 %200
  %206 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %204, i64 %200
  %207 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %206, i64 -1
  %208 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %207 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8, !alias.scope !23
  %210 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %206, i64 -2
  %211 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %210, i64 -1
  %212 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %211 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 8, !alias.scope !23
  %214 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %205, i64 -1
  %215 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %214 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %215, align 8, !alias.scope !26, !noalias !23
  %216 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %205, i64 -2
  %217 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %216, i64 -1
  %218 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %217 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %218, align 8, !alias.scope !26, !noalias !23
  br label %219

219:                                              ; preds = %199, %202
  %220 = icmp eq i64 %127, %143
  br i1 %220, label %291, label %221

221:                                              ; preds = %219, %129, %122
  %222 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %111, %129 ], [ %111, %122 ], [ %145, %219 ]
  %223 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %120, %129 ], [ %120, %122 ], [ %147, %219 ]
  %224 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %223, i64 -1
  %225 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %224 to i64
  %226 = sub i64 %225, %119
  %227 = lshr i64 %226, 3
  %228 = add nuw nsw i64 %227, 1
  %229 = and i64 %228, 7
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %221, %231
  %232 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %235, %231 ], [ %222, %221 ]
  %233 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %236, %231 ], [ %223, %221 ]
  %234 = phi i64 [ %240, %231 ], [ %229, %221 ]
  %235 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %232, i64 -1
  %236 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %233, i64 -1
  %237 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = add i64 %234, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %231, !llvm.loop !29

242:                                              ; preds = %231, %221
  %243 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ undef, %221 ], [ %235, %231 ]
  %244 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %222, %221 ], [ %235, %231 ]
  %245 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %223, %221 ], [ %236, %231 ]
  %246 = icmp ult i64 %226, 56
  br i1 %246, label %291, label %247

247:                                              ; preds = %242, %247
  %248 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %285, %247 ], [ %244, %242 ]
  %249 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %286, %247 ], [ %245, %242 ]
  %250 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -1
  %251 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -1
  %252 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -2
  %256 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -2
  %257 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -3
  %261 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -3
  %262 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -4
  %266 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -4
  %267 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -5
  %271 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -5
  %272 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %270 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -6
  %276 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -6
  %277 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -7
  %281 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -7
  %282 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %248, i64 -8
  %286 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %249, i64 -8
  %287 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %286, %118
  br i1 %290, label %291, label %247, !llvm.loop !30

291:                                              ; preds = %242, %247, %219, %108
  %292 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %111, %108 ], [ %145, %219 ], [ %243, %242 ], [ %285, %247 ]
  %293 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %292 to i64
  store i64 %293, i64* %72, align 8
  store i64 %116, i64* %71, align 8
  store i64 %113, i64* %81, align 8
  br label %294

294:                                              ; preds = %64, %291
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor27MakeIndirectExportsExplicitEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::Zone"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.1252"**
  %11 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.1149"* %11 to i64*
  %16 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %13 to i64*
  %17 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.1149", %"class.std::__1::vector.1149"* %11, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::multimap"* %3 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %23

22:                                               ; preds = %370, %2
  ret void

23:                                               ; preds = %8, %370
  %24 = phi %"class.std::__1::__tree_end_node"* [ %5, %8 ], [ %371, %370 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 5
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %27 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %27, i64 0, i32 2
  %29 = load %"class.std::__1::__tree_node.1252"*, %"class.std::__1::__tree_node.1252"** %10, align 8
  %30 = icmp eq %"class.std::__1::__tree_node.1252"* %29, null
  br i1 %30, label %342, label %31

31:                                               ; preds = %23, %31
  %32 = phi %"class.std::__1::__tree_end_node"* [ %44, %31 ], [ %9, %23 ]
  %33 = phi %"class.std::__1::__tree_node.1252"* [ %45, %31 ], [ %29, %23 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %34, align 8
  %36 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %28, align 8
  %37 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %35, %"class.v8::internal::AstRawString"* %36) #5
  %38 = icmp slt i32 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %33, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.1252"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %33, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node.1252"* %33 to %"class.std::__1::__tree_node.1252"**
  %43 = select i1 %38, %"class.std::__1::__tree_node.1252"** %40, %"class.std::__1::__tree_node.1252"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"* %41
  %45 = load %"class.std::__1::__tree_node.1252"*, %"class.std::__1::__tree_node.1252"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.1252"* %45, null
  br i1 %46, label %47, label %31

47:                                               ; preds = %31
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %9
  br i1 %48, label %342, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %51 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %28, align 8
  %52 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.v8::internal::AstRawString"**
  %53 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %52, align 8
  %54 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %51, %"class.v8::internal::AstRawString"* %53) #5
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %56, label %342

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 5
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %59 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %58, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %59, i64 0, i32 3
  %61 = bitcast %"class.v8::internal::AstRawString"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %27, i64 0, i32 3
  %64 = bitcast %"class.v8::internal::AstRawString"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %58, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %27, i64 0, i32 4
  store i32 %67, i32* %68, align 8
  %69 = bitcast %"class.std::__1::__tree_end_node"* %57 to i64**
  %70 = load i64*, i64** %69, align 8
  %71 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %27 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 8
  store %"class.v8::internal::AstRawString"* null, %"class.v8::internal::AstRawString"** %28, align 8
  %73 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %27 to i64
  %74 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %12, align 8
  %75 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %13, align 8
  %76 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %74, %75
  %77 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %75 to i64
  br i1 %76, label %82, label %78

78:                                               ; preds = %56
  %79 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %74 to i64*
  store i64 %73, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %74, i64 1
  %81 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %80 to i64
  store i64 %81, i64* %14, align 8
  br label %303

82:                                               ; preds = %56
  %83 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %74 to i64
  %84 = load i64, i64* %15, align 8
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 268435455
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = bitcast %"class.std::__1::vector.1149"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #6
  unreachable

91:                                               ; preds = %82
  %92 = sub i64 %77, %84
  %93 = ashr exact i64 %92, 3
  %94 = icmp ult i64 %93, 134217727
  br i1 %94, label %95, label %100

95:                                               ; preds = %91
  %96 = ashr exact i64 %92, 2
  %97 = icmp ult i64 %96, %87
  %98 = select i1 %97, i64 %87, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %117, label %100

100:                                              ; preds = %95, %91
  %101 = phi i64 [ %98, %95 ], [ 268435455, %91 ]
  %102 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %103 = shl i64 %101, 3
  %104 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 2
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 3
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %107, %105
  %109 = icmp ugt i64 %103, %108
  br i1 %109, label %110, label %112, !prof !3

110:                                              ; preds = %100
  %111 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %102, i64 %103) #5
  br label %114

112:                                              ; preds = %100
  %113 = add i64 %105, %103
  store i64 %113, i64* %104, align 8
  br label %114

114:                                              ; preds = %112, %110
  %115 = phi i64 [ %111, %110 ], [ %105, %112 ]
  %116 = inttoptr i64 %115 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  br label %117

117:                                              ; preds = %114, %95
  %118 = phi i64 [ %101, %114 ], [ 0, %95 ]
  %119 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %116, %114 ], [ null, %95 ]
  %120 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %119, i64 %86
  %121 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %119, i64 %118
  %122 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %121 to i64
  %123 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120 to i64*
  store i64 %73, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 1
  %125 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %124 to i64
  %126 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %18, align 8
  %127 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %126 to i64
  %128 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %12, align 8
  %129 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, %126
  br i1 %129, label %300, label %130

130:                                              ; preds = %117
  %131 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  %132 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %131 to i64
  %133 = sub i64 %132, %127
  %134 = lshr i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = icmp ult i64 %135, 4
  br i1 %136, label %230, label %137

137:                                              ; preds = %130
  %138 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %119, i64 -1
  %139 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  %140 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %139 to i64
  %141 = sub i64 %140, %127
  %142 = lshr i64 %141, 3
  %143 = sub nsw i64 %86, %142
  %144 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %138, i64 %143
  %145 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  %146 = sub nsw i64 0, %142
  %147 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %145, i64 %146
  %148 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %144, %128
  %149 = icmp ult %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %147, %120
  %150 = and i1 %148, %149
  br i1 %150, label %230, label %151

151:                                              ; preds = %137
  %152 = and i64 %135, 4611686018427387900
  %153 = sub nsw i64 0, %152
  %154 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 %153
  %155 = sub nsw i64 0, %152
  %156 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 %155
  %157 = add nsw i64 %152, -4
  %158 = lshr exact i64 %157, 2
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 1
  %161 = icmp eq i64 %157, 0
  br i1 %161, label %206, label %162

162:                                              ; preds = %151
  %163 = sub nuw nsw i64 %159, %160
  %164 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %165 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  %166 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %167 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  br label %168

168:                                              ; preds = %168, %162
  %169 = phi i64 [ 0, %162 ], [ %203, %168 ]
  %170 = phi i64 [ %163, %162 ], [ %204, %168 ]
  %171 = sub i64 0, %169
  %172 = sub i64 0, %169
  %173 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %164, i64 %171
  %174 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %165, i64 %172
  %175 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %174, i64 -1
  %176 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !31
  %178 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %174, i64 -2
  %179 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %178, i64 -1
  %180 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8, !alias.scope !31
  %182 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %173, i64 -1
  %183 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %182 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %183, align 8, !alias.scope !34, !noalias !31
  %184 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %173, i64 -2
  %185 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %184, i64 -1
  %186 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %185 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %186, align 8, !alias.scope !34, !noalias !31
  %187 = sub nuw nsw i64 -4, %169
  %188 = sub nuw nsw i64 -4, %169
  %189 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %166, i64 %187
  %190 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %167, i64 %188
  %191 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %190, i64 -1
  %192 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !31
  %194 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %190, i64 -2
  %195 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %194, i64 -1
  %196 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !31
  %198 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %189, i64 -1
  %199 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %198 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %199, align 8, !alias.scope !34, !noalias !31
  %200 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %189, i64 -2
  %201 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %200, i64 -1
  %202 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %201 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %202, align 8, !alias.scope !34, !noalias !31
  %203 = add i64 %169, 8
  %204 = add i64 %170, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %168, !llvm.loop !36

206:                                              ; preds = %168, %151
  %207 = phi i64 [ 0, %151 ], [ %203, %168 ]
  %208 = icmp eq i64 %160, 0
  br i1 %208, label %228, label %209

209:                                              ; preds = %206
  %210 = sub i64 0, %207
  %211 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %120, i64 -1
  %212 = sub i64 0, %207
  %213 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %128, i64 -1
  %214 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %211, i64 %210
  %215 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %213, i64 %212
  %216 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %215, i64 -1
  %217 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !31
  %219 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %215, i64 -2
  %220 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %219, i64 -1
  %221 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8, !alias.scope !31
  %223 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %214, i64 -1
  %224 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %223 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %224, align 8, !alias.scope !34, !noalias !31
  %225 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %214, i64 -2
  %226 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %225, i64 -1
  %227 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %226 to <2 x i64>*
  store <2 x i64> %222, <2 x i64>* %227, align 8, !alias.scope !34, !noalias !31
  br label %228

228:                                              ; preds = %206, %209
  %229 = icmp eq i64 %135, %152
  br i1 %229, label %300, label %230

230:                                              ; preds = %228, %137, %130
  %231 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %120, %137 ], [ %120, %130 ], [ %154, %228 ]
  %232 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %128, %137 ], [ %128, %130 ], [ %156, %228 ]
  %233 = getelementptr %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %232, i64 -1
  %234 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %233 to i64
  %235 = sub i64 %234, %127
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = and i64 %237, 7
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %230, %240
  %241 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %244, %240 ], [ %231, %230 ]
  %242 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %245, %240 ], [ %232, %230 ]
  %243 = phi i64 [ %249, %240 ], [ %238, %230 ]
  %244 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %241, i64 -1
  %245 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %242, i64 -1
  %246 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = add i64 %243, -1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %240, !llvm.loop !37

251:                                              ; preds = %240, %230
  %252 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ undef, %230 ], [ %244, %240 ]
  %253 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %231, %230 ], [ %244, %240 ]
  %254 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %232, %230 ], [ %245, %240 ]
  %255 = icmp ult i64 %235, 56
  br i1 %255, label %300, label %256

256:                                              ; preds = %251, %256
  %257 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %294, %256 ], [ %253, %251 ]
  %258 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %295, %256 ], [ %254, %251 ]
  %259 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -1
  %260 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -1
  %261 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -2
  %265 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -2
  %266 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -3
  %270 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -3
  %271 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -4
  %275 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -4
  %276 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %274 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -5
  %280 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -5
  %281 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %279 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -6
  %285 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -6
  %286 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -7
  %290 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -7
  %291 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %289 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %257, i64 -8
  %295 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %258, i64 -8
  %296 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %295, %126
  br i1 %299, label %300, label %256, !llvm.loop !38

300:                                              ; preds = %251, %256, %228, %117
  %301 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %120, %117 ], [ %154, %228 ], [ %252, %251 ], [ %294, %256 ]
  %302 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %301 to i64
  store i64 %302, i64* %15, align 8
  store i64 %125, i64* %14, align 8
  store i64 %122, i64* %16, align 8
  br label %303

303:                                              ; preds = %78, %300
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %307, label %315

307:                                              ; preds = %303
  %308 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %309 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %310 = bitcast %"class.std::__1::__tree_end_node"* %309 to %"class.std::__1::__tree_end_node"**
  %311 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, %308
  br i1 %314, label %331, label %322

315:                                              ; preds = %303, %315
  %316 = phi %"class.std::__1::__tree_node_base"* [ %318, %315 ], [ %305, %303 ]
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, null
  br i1 %319, label %320, label %315

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %316, i64 0, i32 0
  br label %331

322:                                              ; preds = %307, %322
  %323 = phi %"class.std::__1::__tree_end_node"** [ %326, %322 ], [ %310, %307 ]
  %324 = bitcast %"class.std::__1::__tree_end_node"** %323 to %"class.std::__1::__tree_node_base"**
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %325, i64 0, i32 2
  %327 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %327, i64 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, %325
  br i1 %330, label %331, label %322

331:                                              ; preds = %322, %320, %307
  %332 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %311, %307 ], [ %327, %322 ]
  %333 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %334 = icmp eq %"class.std::__1::__tree_end_node"* %333, %24
  br i1 %334, label %335, label %337

335:                                              ; preds = %331
  %336 = ptrtoint %"class.std::__1::__tree_end_node"* %332 to i64
  store i64 %336, i64* %19, align 8
  br label %337

337:                                              ; preds = %331, %335
  %338 = load i64, i64* %20, align 8
  %339 = add i64 %338, -1
  store i64 %339, i64* %20, align 8
  %340 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %341 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %340, %"class.std::__1::__tree_node_base"* %341) #5
  br label %370

342:                                              ; preds = %49, %47, %23
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 1, i32 0
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = icmp eq %"class.std::__1::__tree_node_base"* %344, null
  br i1 %345, label %346, label %354

346:                                              ; preds = %342
  %347 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node_base"*
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 2
  %349 = bitcast %"class.std::__1::__tree_end_node"* %348 to %"class.std::__1::__tree_end_node"**
  %350 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %349, align 8
  %351 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %350, i64 0, i32 0
  %352 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %351, align 8
  %353 = icmp eq %"class.std::__1::__tree_node_base"* %352, %347
  br i1 %353, label %370, label %361

354:                                              ; preds = %342, %354
  %355 = phi %"class.std::__1::__tree_node_base"* [ %357, %354 ], [ %344, %342 ]
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %355, i64 0, i32 0, i32 0
  %357 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %356, align 8
  %358 = icmp eq %"class.std::__1::__tree_node_base"* %357, null
  br i1 %358, label %359, label %354

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %355, i64 0, i32 0
  br label %370

361:                                              ; preds = %346, %361
  %362 = phi %"class.std::__1::__tree_end_node"** [ %365, %361 ], [ %349, %346 ]
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to %"class.std::__1::__tree_node_base"**
  %364 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %364, i64 0, i32 2
  %366 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %365, align 8
  %367 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %366, i64 0, i32 0
  %368 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %367, align 8
  %369 = icmp eq %"class.std::__1::__tree_node_base"* %368, %364
  br i1 %369, label %370, label %361

370:                                              ; preds = %361, %359, %346, %337
  %371 = phi %"class.std::__1::__tree_end_node"* [ %332, %337 ], [ %360, %359 ], [ %350, %346 ], [ %366, %361 ]
  %372 = icmp eq %"class.std::__1::__tree_end_node"* %371, %6
  br i1 %372, label %22, label %23
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp sgt i32 %0, 0
  %3 = lshr i32 %0, 30
  %4 = and i32 %3, 2
  %5 = select i1 %2, i32 1, i32 %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26SourceTextModuleDescriptor17AssignCellIndicesEv(%"class.v8::internal::SourceTextModuleDescriptor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %11

6:                                                ; preds = %58, %50, %1
  %7 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %61, label %62

11:                                               ; preds = %1, %58
  %12 = phi i32 [ %59, %58 ], [ 1, %1 ]
  %13 = phi %"class.std::__1::__tree_end_node"* [ %51, %58 ], [ %3, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.v8::internal::AstRawString"**
  %16 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %15, align 8
  br label %17

17:                                               ; preds = %53, %11
  %18 = phi %"class.std::__1::__tree_end_node"* [ %13, %11 ], [ %51, %53 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %21 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %20, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %21, i64 0, i32 5
  store i32 %12, i32* %22, align 4
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_end_node"**
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %27
  br i1 %33, label %50, label %41

34:                                               ; preds = %17, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %24, %17 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %50

41:                                               ; preds = %26, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %26 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %26, %39
  %51 = phi %"class.std::__1::__tree_end_node"* [ %40, %39 ], [ %30, %26 ], [ %46, %41 ]
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %51, %4
  br i1 %52, label %6, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 4
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.v8::internal::AstRawString"**
  %56 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %55, align 8
  %57 = icmp eq %"class.v8::internal::AstRawString"* %56, %16
  br i1 %57, label %17, label %58

58:                                               ; preds = %53
  %59 = add nuw nsw i32 %12, 1
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %51, %4
  br i1 %60, label %6, label %11

61:                                               ; preds = %97, %6
  ret void

62:                                               ; preds = %6, %97
  %63 = phi i32 [ %69, %97 ], [ -1, %6 ]
  %64 = phi %"class.std::__1::__tree_end_node"* [ %98, %97 ], [ %8, %6 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %67 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %66, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %67, i64 0, i32 5
  store i32 %63, i32* %68, align 4
  %69 = add nsw i32 %63, -1
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 1, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %81

73:                                               ; preds = %62
  %74 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 2
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_end_node"**
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %74
  br i1 %80, label %97, label %88

81:                                               ; preds = %62, %81
  %82 = phi %"class.std::__1::__tree_node_base"* [ %84, %81 ], [ %71, %62 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %81

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 0
  br label %97

88:                                               ; preds = %73, %88
  %89 = phi %"class.std::__1::__tree_end_node"** [ %92, %88 ], [ %76, %73 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"** %89 to %"class.std::__1::__tree_node_base"**
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %91
  br i1 %96, label %97, label %88

97:                                               ; preds = %88, %73, %86
  %98 = phi %"class.std::__1::__tree_end_node"* [ %87, %86 ], [ %77, %73 ], [ %93, %88 ]
  %99 = icmp eq %"class.std::__1::__tree_end_node"* %98, %9
  br i1 %99, label %61, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* @_ZNK2v88internal26SourceTextModuleDescriptor19FindDuplicateExportEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ZoneMap.1176", align 8
  %4 = bitcast %"class.v8::internal::ZoneMap.1176"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #5
  %5 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.1180"* %7 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::__compressed_pair.1179"* %9 to i64*
  store i64 0, i64* %10, align 8
  store i64 %5, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %6, align 8
  %13 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = icmp eq %"class.std::__1::__tree_end_node"* %14, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.1271"**
  %19 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %22 = bitcast %"class.v8::internal::ZoneMap.1176"* %3 to i64*
  br label %36

23:                                               ; preds = %160, %2
  %24 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ null, %2 ], [ %132, %160 ]
  %25 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*** %27, align 8
  %29 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %26, %28
  %30 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.1271"**
  br i1 %29, label %165, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %35 = bitcast %"class.v8::internal::ZoneMap.1176"* %3 to i64*
  br label %169

36:                                               ; preds = %163, %17
  %37 = phi %"class.std::__1::__tree_node.1271"* [ null, %17 ], [ %164, %163 ]
  %38 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ null, %17 ], [ %132, %163 ]
  %39 = phi %"class.std::__1::__tree_end_node"* [ %14, %17 ], [ %161, %163 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 5
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %42 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %41, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %42, i64 0, i32 1
  %44 = bitcast %"class.v8::internal::AstRawString"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %42 to i64
  %47 = icmp eq %"class.std::__1::__tree_node.1271"* %37, null
  br i1 %47, label %76, label %48

48:                                               ; preds = %36
  %49 = inttoptr i64 %45 to %"class.v8::internal::AstRawString"*
  br label %50

50:                                               ; preds = %72, %48
  %51 = phi %"class.std::__1::__tree_node.1271"* [ %75, %72 ], [ %37, %48 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %19, %48 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %53, align 8
  %55 = icmp ugt %"class.v8::internal::AstRawString"* %54, %49
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 0, i32 0
  br label %76

62:                                               ; preds = %50
  %63 = icmp ult %"class.v8::internal::AstRawString"* %54, %49
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 0, i32 0
  br label %76

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %51, i64 0, i32 0, i32 0
  br label %76

72:                                               ; preds = %64, %56
  %73 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node.1271"*
  br label %50

76:                                               ; preds = %36, %70, %68, %60
  %77 = phi %"class.std::__1::__tree_end_node"* [ %61, %60 ], [ %69, %68 ], [ %71, %70 ], [ %12, %36 ]
  %78 = phi %"class.std::__1::__tree_node_base"** [ %57, %60 ], [ %65, %68 ], [ %52, %70 ], [ %20, %36 ]
  %79 = bitcast %"class.std::__1::__tree_node_base"** %78 to %"class.std::__1::__tree_node.1271"**
  %80 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node.1271"* %80, null
  br i1 %81, label %82, label %116

82:                                               ; preds = %76
  %83 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, align 8, !noalias !39
  %84 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %83, i64 0, i32 2
  %85 = load i64, i64* %84, align 8, !noalias !39
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %83, i64 0, i32 3
  %87 = load i64, i64* %86, align 8, !noalias !39
  %88 = sub i64 %87, %85
  %89 = icmp ult i64 %88, 48
  br i1 %89, label %90, label %92, !prof !3

90:                                               ; preds = %82
  %91 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %83, i64 48) #5, !noalias !39
  br label %94

92:                                               ; preds = %82
  %93 = add i64 %85, 48
  store i64 %93, i64* %84, align 8, !noalias !39
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i64 [ %91, %90 ], [ %85, %92 ]
  %96 = inttoptr i64 %95 to %"class.std::__1::__tree_node.1271"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %96, i64 0, i32 1, i32 0
  %98 = bitcast %"struct.std::__1::pair.1267"* %97 to i64*
  store i64 %45, i64* %98, align 8, !noalias !39
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %96, i64 0, i32 1, i32 0, i32 1
  %100 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %99 to i64*
  store i64 %46, i64* %100, align 8, !noalias !39
  %101 = inttoptr i64 %95 to %"class.std::__1::__tree_node_base"*
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 2
  %103 = inttoptr i64 %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %101, %"class.std::__1::__tree_node_base"** %78, align 8
  %104 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %111, label %108

108:                                              ; preds = %94
  %109 = ptrtoint %"class.std::__1::__tree_node_base"* %106 to i64
  store i64 %109, i64* %22, align 8
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  br label %111

111:                                              ; preds = %94, %108
  %112 = phi %"class.std::__1::__tree_node_base"* [ %101, %94 ], [ %110, %108 ]
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"* %112) #5
  %114 = load i64, i64* %11, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %11, align 8
  br label %131

116:                                              ; preds = %76
  %117 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %38, null
  br i1 %117, label %118, label %123

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %80, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 5
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %122 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %121, align 8
  br label %123

123:                                              ; preds = %118, %116
  %124 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %122, %118 ], [ %38, %116 ]
  %125 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %42, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %124, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp sgt i32 %126, %128
  %130 = select i1 %129, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %42, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %124
  br label %131

131:                                              ; preds = %111, %123
  %132 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %130, %123 ], [ %38, %111 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 1, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %144

136:                                              ; preds = %131
  %137 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node_base"*
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 2
  %139 = bitcast %"class.std::__1::__tree_end_node"* %138 to %"class.std::__1::__tree_end_node"**
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, %137
  br i1 %143, label %160, label %151

144:                                              ; preds = %131, %144
  %145 = phi %"class.std::__1::__tree_node_base"* [ %147, %144 ], [ %134, %131 ]
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %144

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 0
  br label %160

151:                                              ; preds = %136, %151
  %152 = phi %"class.std::__1::__tree_end_node"** [ %155, %151 ], [ %139, %136 ]
  %153 = bitcast %"class.std::__1::__tree_end_node"** %152 to %"class.std::__1::__tree_node_base"**
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 2
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, %154
  br i1 %159, label %160, label %151

160:                                              ; preds = %151, %136, %149
  %161 = phi %"class.std::__1::__tree_end_node"* [ %150, %149 ], [ %140, %136 ], [ %156, %151 ]
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %161, %15
  br i1 %162, label %23, label %163

163:                                              ; preds = %160
  %164 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %18, align 8
  br label %36

165:                                              ; preds = %262, %23
  %166 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %24, %23 ], [ %263, %262 ]
  %167 = getelementptr inbounds %"class.v8::internal::ZoneMap.1176", %"class.v8::internal::ZoneMap.1176"* %3, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %30, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.1178"* nonnull %167, %"class.std::__1::__tree_node.1271"* %168) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #5
  ret %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %166

169:                                              ; preds = %31, %262
  %170 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %24, %31 ], [ %263, %262 ]
  %171 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** [ %26, %31 ], [ %264, %262 ]
  %172 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %171, align 8
  %173 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %172, i64 0, i32 1
  %174 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %173, align 8
  %175 = icmp eq %"class.v8::internal::AstRawString"* %174, null
  %176 = ptrtoint %"class.v8::internal::AstRawString"* %174 to i64
  br i1 %175, label %262, label %177

177:                                              ; preds = %169
  %178 = ptrtoint %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %172 to i64
  %179 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %30, align 8
  %180 = icmp eq %"class.std::__1::__tree_node.1271"* %179, null
  br i1 %180, label %207, label %181

181:                                              ; preds = %177, %203
  %182 = phi %"class.std::__1::__tree_node.1271"* [ %206, %203 ], [ %179, %177 ]
  %183 = phi %"class.std::__1::__tree_node_base"** [ %205, %203 ], [ %32, %177 ]
  %184 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 1, i32 0, i32 0
  %185 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %184, align 8
  %186 = icmp ugt %"class.v8::internal::AstRawString"* %185, %174
  br i1 %186, label %187, label %193

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %203

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 0, i32 0
  br label %207

193:                                              ; preds = %181
  %194 = icmp ult %"class.v8::internal::AstRawString"* %185, %174
  br i1 %194, label %195, label %201

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 0, i32 1
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, null
  br i1 %198, label %199, label %203

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 0, i32 0
  br label %207

201:                                              ; preds = %193
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %182, i64 0, i32 0, i32 0
  br label %207

203:                                              ; preds = %195, %187
  %204 = phi %"class.std::__1::__tree_node_base"* [ %189, %187 ], [ %197, %195 ]
  %205 = phi %"class.std::__1::__tree_node_base"** [ %188, %187 ], [ %196, %195 ]
  %206 = bitcast %"class.std::__1::__tree_node_base"* %204 to %"class.std::__1::__tree_node.1271"*
  br label %181

207:                                              ; preds = %177, %201, %199, %191
  %208 = phi %"class.std::__1::__tree_end_node"* [ %192, %191 ], [ %200, %199 ], [ %202, %201 ], [ %12, %177 ]
  %209 = phi %"class.std::__1::__tree_node_base"** [ %188, %191 ], [ %196, %199 ], [ %183, %201 ], [ %33, %177 ]
  %210 = bitcast %"class.std::__1::__tree_node_base"** %209 to %"class.std::__1::__tree_node.1271"**
  %211 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node.1271"* %211, null
  br i1 %212, label %213, label %247

213:                                              ; preds = %207
  %214 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %34, align 8, !noalias !42
  %215 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %214, i64 0, i32 2
  %216 = load i64, i64* %215, align 8, !noalias !42
  %217 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %214, i64 0, i32 3
  %218 = load i64, i64* %217, align 8, !noalias !42
  %219 = sub i64 %218, %216
  %220 = icmp ult i64 %219, 48
  br i1 %220, label %221, label %223, !prof !3

221:                                              ; preds = %213
  %222 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %214, i64 48) #5, !noalias !42
  br label %225

223:                                              ; preds = %213
  %224 = add i64 %216, 48
  store i64 %224, i64* %215, align 8, !noalias !42
  br label %225

225:                                              ; preds = %223, %221
  %226 = phi i64 [ %222, %221 ], [ %216, %223 ]
  %227 = inttoptr i64 %226 to %"class.std::__1::__tree_node.1271"*
  %228 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %227, i64 0, i32 1, i32 0
  %229 = bitcast %"struct.std::__1::pair.1267"* %228 to i64*
  store i64 %176, i64* %229, align 8, !noalias !42
  %230 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %227, i64 0, i32 1, i32 0, i32 1
  %231 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %230 to i64*
  store i64 %178, i64* %231, align 8, !noalias !42
  %232 = inttoptr i64 %226 to %"class.std::__1::__tree_node_base"*
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %232, i64 0, i32 2
  %234 = inttoptr i64 %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %233, align 8
  store %"class.std::__1::__tree_node_base"* %232, %"class.std::__1::__tree_node_base"** %209, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, null
  br i1 %238, label %242, label %239

239:                                              ; preds = %225
  %240 = ptrtoint %"class.std::__1::__tree_node_base"* %237 to i64
  store i64 %240, i64* %35, align 8
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  br label %242

242:                                              ; preds = %225, %239
  %243 = phi %"class.std::__1::__tree_node_base"* [ %232, %225 ], [ %241, %239 ]
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %244, %"class.std::__1::__tree_node_base"* %243) #5
  %245 = load i64, i64* %11, align 8
  %246 = add i64 %245, 1
  store i64 %246, i64* %11, align 8
  br label %262

247:                                              ; preds = %207
  %248 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %170, null
  br i1 %248, label %249, label %254

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %211, i64 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %250, i64 5
  %252 = bitcast %"class.std::__1::__tree_end_node"* %251 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %253 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %252, align 8
  br label %254

254:                                              ; preds = %249, %247
  %255 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %253, %249 ], [ %170, %247 ]
  %256 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %172, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %255, i64 0, i32 0, i32 0
  %259 = load i32, i32* %258, align 8
  %260 = icmp sgt i32 %257, %259
  %261 = select i1 %260, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %172, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %255
  br label %262

262:                                              ; preds = %254, %242, %169
  %263 = phi %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* [ %170, %169 ], [ %261, %254 ], [ %170, %242 ]
  %264 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %171, i64 1
  %265 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %264, %28
  br i1 %265, label %165, label %169
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal26SourceTextModuleDescriptor8ValidateEPNS0_11ModuleScopeEPNS0_30PendingCompilationErrorHandlerEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"*, %"class.v8::internal::ModuleScope"*, %"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = tail call %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* @_ZNK2v88internal26SourceTextModuleDescriptor19FindDuplicateExportEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"* %0, %"class.v8::internal::Zone"* %3)
  %6 = icmp eq %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %5, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %5, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %5, i64 0, i32 1
  %13 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %12, align 8
  tail call void @_ZN2v88internal30PendingCompilationErrorHandler15ReportMessageAtEiiNS0_15MessageTemplateEPKNS0_12AstRawStringE(%"class.v8::internal::PendingCompilationErrorHandler"* %2, i32 %9, i32 %11, i32 244, %"class.v8::internal::AstRawString"* %13) #5
  br label %165

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %16, %17
  br i1 %18, label %68, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::ModuleScope", %"class.v8::internal::ModuleScope"* %1, i64 0, i32 0, i32 0, i32 3
  br label %21

21:                                               ; preds = %19, %58
  %22 = phi %"class.std::__1::__tree_end_node"* [ %16, %19 ], [ %59, %58 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %25 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %25, i64 0, i32 2
  %27 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %26, align 8
  %28 = tail call %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap6LookupEPKNS0_12AstRawStringE(%"class.v8::internal::VariableMap"* %20, %"class.v8::internal::AstRawString"* %27) #5
  %29 = icmp eq %"class.v8::internal::Variable"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %34, %47
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %59, %17
  br i1 %60, label %68, label %21

61:                                               ; preds = %21
  %62 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %25, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %25, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %25, i64 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %62, align 8
  tail call void @_ZN2v88internal30PendingCompilationErrorHandler15ReportMessageAtEiiNS0_15MessageTemplateEPKNS0_12AstRawStringE(%"class.v8::internal::PendingCompilationErrorHandler"* %2, i32 %64, i32 %66, i32 290, %"class.v8::internal::AstRawString"* %67) #5
  br label %165

68:                                               ; preds = %58, %14
  tail call void @_ZN2v88internal26SourceTextModuleDescriptor27MakeIndirectExportsExplicitEPNS0_4ZoneE(%"class.v8::internal::SourceTextModuleDescriptor"* %0, %"class.v8::internal::Zone"* %3)
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %70 = icmp eq %"class.std::__1::__tree_end_node"* %69, %17
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 4
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.v8::internal::AstRawString"**
  %74 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %73, align 8
  br label %80

75:                                               ; preds = %117, %68
  %76 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::SourceTextModuleDescriptor", %"class.v8::internal::SourceTextModuleDescriptor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %77, %78
  br i1 %79, label %165, label %127

80:                                               ; preds = %71, %125
  %81 = phi %"class.v8::internal::AstRawString"* [ %123, %125 ], [ %74, %71 ]
  %82 = phi i32 [ %126, %125 ], [ 1, %71 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %118, %125 ], [ %69, %71 ]
  br label %84

84:                                               ; preds = %120, %80
  %85 = phi %"class.std::__1::__tree_end_node"* [ %83, %80 ], [ %118, %120 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 5
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %88 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %87, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %88, i64 0, i32 5
  store i32 %82, i32* %89, align 4
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 1, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %101

93:                                               ; preds = %84
  %94 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node_base"*
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 2
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_end_node"**
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %94
  br i1 %100, label %117, label %108

101:                                              ; preds = %84, %101
  %102 = phi %"class.std::__1::__tree_node_base"* [ %104, %101 ], [ %91, %84 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %101

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 0
  br label %117

108:                                              ; preds = %93, %108
  %109 = phi %"class.std::__1::__tree_end_node"** [ %112, %108 ], [ %96, %93 ]
  %110 = bitcast %"class.std::__1::__tree_end_node"** %109 to %"class.std::__1::__tree_node_base"**
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 2
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %111
  br i1 %116, label %117, label %108

117:                                              ; preds = %108, %106, %93
  %118 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %97, %93 ], [ %113, %108 ]
  %119 = icmp eq %"class.std::__1::__tree_end_node"* %118, %17
  br i1 %119, label %75, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 4
  %122 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.v8::internal::AstRawString"**
  %123 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %122, align 8
  %124 = icmp eq %"class.v8::internal::AstRawString"* %123, %81
  br i1 %124, label %84, label %125

125:                                              ; preds = %120
  %126 = add nuw nsw i32 %82, 1
  br label %80

127:                                              ; preds = %75, %162
  %128 = phi i32 [ %134, %162 ], [ -1, %75 ]
  %129 = phi %"class.std::__1::__tree_end_node"* [ %163, %162 ], [ %77, %75 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 5
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"struct.v8::internal::SourceTextModuleDescriptor::Entry"**
  %132 = load %"struct.v8::internal::SourceTextModuleDescriptor::Entry"*, %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %131, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::SourceTextModuleDescriptor::Entry", %"struct.v8::internal::SourceTextModuleDescriptor::Entry"* %132, i64 0, i32 5
  store i32 %128, i32* %133, align 4
  %134 = add nsw i32 %128, -1
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 1, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, null
  br i1 %137, label %138, label %146

138:                                              ; preds = %127
  %139 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_node_base"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 2
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"class.std::__1::__tree_end_node"**
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %139
  br i1 %145, label %162, label %153

146:                                              ; preds = %127, %146
  %147 = phi %"class.std::__1::__tree_node_base"* [ %149, %146 ], [ %136, %127 ]
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, null
  br i1 %150, label %151, label %146

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 0
  br label %162

153:                                              ; preds = %138, %153
  %154 = phi %"class.std::__1::__tree_end_node"** [ %157, %153 ], [ %141, %138 ]
  %155 = bitcast %"class.std::__1::__tree_end_node"** %154 to %"class.std::__1::__tree_node_base"**
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 2
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, %156
  br i1 %161, label %162, label %153

162:                                              ; preds = %153, %151, %138
  %163 = phi %"class.std::__1::__tree_end_node"* [ %152, %151 ], [ %142, %138 ], [ %158, %153 ]
  %164 = icmp eq %"class.std::__1::__tree_end_node"* %163, %78
  br i1 %164, label %165, label %127

165:                                              ; preds = %162, %75, %61, %7
  %166 = phi i1 [ false, %61 ], [ false, %7 ], [ true, %75 ], [ true, %162 ]
  ret i1 %166
}

declare void @_ZN2v88internal30PendingCompilationErrorHandler15ReportMessageAtEiiNS0_15MessageTemplateEPKNS0_12AstRawStringE(%"class.v8::internal::PendingCompilationErrorHandler"*, i32, i32, i32, %"class.v8::internal::AstRawString"*) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1143"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** dereferenceable(8), %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %35, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %9, %8 ]
  %13 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %1, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %15 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK2v88internal26SourceTextModuleDescriptor21ModuleRequestComparerclEPKNS1_16AstModuleRequestES5_(%"struct.v8::internal::SourceTextModuleDescriptor::ModuleRequestComparer"* undef, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %13, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %15) #5
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

23:                                               ; preds = %10
  %24 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %14, align 8
  %25 = load %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"*, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %1, align 8
  %26 = tail call zeroext i1 @_ZNK2v88internal26SourceTextModuleDescriptor21ModuleRequestComparerclEPKNS1_16AstModuleRequestES5_(%"struct.v8::internal::SourceTextModuleDescriptor::ModuleRequestComparer"* undef, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %24, %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"* %25) #5
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %17
  %36 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %10

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %41

41:                                               ; preds = %21, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %4, %39 ], [ %22, %21 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %18, %21 ], [ %28, %31 ], [ %12, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %86

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8, !noalias !45
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %51 = load i64, i64* %50, align 8, !noalias !45
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %53 = load i64, i64* %52, align 8, !noalias !45
  %54 = sub i64 %53, %51
  %55 = icmp ult i64 %54, 40
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %47
  %57 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 40) #5, !noalias !45
  br label %60

58:                                               ; preds = %47
  %59 = add i64 %51, 40
  store i64 %59, i64* %50, align 8, !noalias !45
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi i64 [ %57, %56 ], [ %51, %58 ]
  %62 = inttoptr i64 %61 to %"class.std::__1::__tree_node"*
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1
  %64 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %2 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !45
  %66 = bitcast %"class.v8::internal::SourceTextModuleDescriptor::AstModuleRequest"** %63 to i64*
  store i64 %65, i64* %66, align 8, !noalias !45
  %67 = inttoptr i64 %61 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %69 = inttoptr i64 %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %43, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %60
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  %77 = bitcast %"class.std::__1::__tree.1143"* %0 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %79

79:                                               ; preds = %60, %75
  %80 = phi %"class.std::__1::__tree_node_base"* [ %67, %60 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %80) #5
  %83 = getelementptr inbounds %"class.std::__1::__tree.1143", %"class.std::__1::__tree.1143"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %79, %41
  %87 = phi i8 [ 1, %79 ], [ 0, %41 ]
  %88 = phi %"class.std::__1::__tree_node"* [ %62, %79 ], [ %45, %41 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  %90 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %89, 0
  %91 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %90, i8 %87, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %91
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !4
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE25__emplace_unique_key_argsIS6_JNS_4pairIS6_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1155"*, %"class.v8::internal::AstRawString"** dereferenceable(8), %"struct.std::__1::pair.1249"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1252"**
  %6 = load %"class.std::__1::__tree_node.1252"*, %"class.std::__1::__tree_node.1252"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.1252"* %6, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %37, %8
  %11 = phi %"class.std::__1::__tree_node.1252"* [ %40, %37 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %39, %37 ], [ %9, %8 ]
  %13 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %1, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %14, align 8
  %16 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %13, %"class.v8::internal::AstRawString"* %15) #5
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %37

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 0, i32 0
  br label %43

24:                                               ; preds = %10
  %25 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %14, align 8
  %26 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %1, align 8
  %27 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %25, %"class.v8::internal::AstRawString"* %26) #5
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 0, i32 0
  br label %43

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %11, i64 0, i32 0, i32 0
  br label %43

37:                                               ; preds = %29, %18
  %38 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %31, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %30, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"* %38 to %"class.std::__1::__tree_node.1252"*
  br label %10

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %43

43:                                               ; preds = %22, %33, %35, %41
  %44 = phi %"class.std::__1::__tree_end_node"* [ %4, %41 ], [ %23, %22 ], [ %34, %33 ], [ %36, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %42, %41 ], [ %19, %22 ], [ %30, %33 ], [ %12, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node.1252"**
  %47 = load %"class.std::__1::__tree_node.1252"*, %"class.std::__1::__tree_node.1252"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node.1252"* %47, null
  br i1 %48, label %49, label %93

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %51 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %50, align 8, !noalias !48
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %51, i64 0, i32 2
  %53 = load i64, i64* %52, align 8, !noalias !48
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %51, i64 0, i32 3
  %55 = load i64, i64* %54, align 8, !noalias !48
  %56 = sub i64 %55, %53
  %57 = icmp ult i64 %56, 48
  br i1 %57, label %58, label %60, !prof !3

58:                                               ; preds = %49
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %51, i64 48) #5, !noalias !48
  br label %62

60:                                               ; preds = %49
  %61 = add i64 %53, 48
  store i64 %61, i64* %52, align 8, !noalias !48
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.std::__1::__tree_node.1252"*
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %64, i64 0, i32 1, i32 0
  %66 = bitcast %"struct.std::__1::pair.1249"* %2 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !48
  %68 = bitcast %"struct.std::__1::pair.1174"* %65 to i64*
  store i64 %67, i64* %68, align 8, !noalias !48
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %64, i64 0, i32 1, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.1249", %"struct.std::__1::pair.1249"* %2, i64 0, i32 1
  %71 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %70 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !48
  %73 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %69 to i64*
  store i64 %72, i64* %73, align 8, !noalias !48
  %74 = inttoptr i64 %63 to %"class.std::__1::__tree_node_base"*
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 2
  %76 = inttoptr i64 %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %75, align 8
  store %"class.std::__1::__tree_node_base"* %74, %"class.std::__1::__tree_node_base"** %45, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %62
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::__tree.1155"* %0 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  br label %86

86:                                               ; preds = %62, %82
  %87 = phi %"class.std::__1::__tree_node_base"* [ %74, %62 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #5
  %90 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  br label %93

93:                                               ; preds = %86, %43
  %94 = phi i8 [ 1, %86 ], [ 0, %43 ]
  %95 = phi %"class.std::__1::__tree_node.1252"* [ %64, %86 ], [ %47, %43 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %95, i64 0, i32 0, i32 0
  %97 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %96, 0
  %98 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %97, i8 %94, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %98
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE15__emplace_multiIJNS_4pairIS6_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEDpOT_(%"class.std::__1::__tree.1155"*, %"struct.std::__1::pair.1249"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8, !noalias !51
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %6 = load i64, i64* %5, align 8, !noalias !51
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !51
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 48
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 48) #5, !noalias !51
  br label %15

13:                                               ; preds = %2
  %14 = add i64 %6, 48
  store i64 %14, i64* %5, align 8, !noalias !51
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to %"class.std::__1::__tree_node.1252"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"struct.std::__1::pair.1249"* %1 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !51
  %21 = bitcast %"struct.std::__1::pair.1174"* %18 to i64*
  store i64 %20, i64* %21, align 8, !noalias !51
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %17, i64 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.1249", %"struct.std::__1::pair.1249"* %1, i64 0, i32 1
  %24 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !51
  %26 = bitcast %"struct.v8::internal::SourceTextModuleDescriptor::Entry"** %22 to i64*
  store i64 %25, i64* %26, align 8, !noalias !51
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %17, i64 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.1252"**
  %30 = load %"class.std::__1::__tree_node.1252"*, %"class.std::__1::__tree_node.1252"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node.1252"* %30, null
  br i1 %31, label %59, label %32

32:                                               ; preds = %15
  %33 = inttoptr i64 %20 to %"class.v8::internal::AstRawString"*
  br label %34

34:                                               ; preds = %32, %55
  %35 = phi %"class.v8::internal::AstRawString"* [ %58, %55 ], [ %33, %32 ]
  %36 = phi %"class.std::__1::__tree_node.1252"* [ %57, %55 ], [ %30, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %37, align 8
  %39 = tail call i32 @_ZN2v88internal12AstRawString7CompareEPKS1_S3_(%"class.v8::internal::AstRawString"* %35, %"class.v8::internal::AstRawString"* %38) #5
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 0
  br label %61

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %36, i64 0, i32 0, i32 0
  br label %61

55:                                               ; preds = %48, %41
  %56 = phi %"class.std::__1::__tree_node_base"* [ %43, %41 ], [ %50, %48 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node.1252"*
  %58 = load %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"** %27, align 8
  br label %34

59:                                               ; preds = %15
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  br label %61

61:                                               ; preds = %45, %52, %59
  %62 = phi %"class.std::__1::__tree_end_node"* [ %28, %59 ], [ %47, %45 ], [ %54, %52 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %46, %45 ], [ %53, %52 ]
  %64 = inttoptr i64 %16 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 2
  %66 = inttoptr i64 %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %65, align 8
  store %"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"** %63, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %61
  %73 = ptrtoint %"class.std::__1::__tree_node_base"* %70 to i64
  %74 = bitcast %"class.std::__1::__tree.1155"* %0 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  br label %76

76:                                               ; preds = %61, %72
  %77 = phi %"class.std::__1::__tree_node_base"* [ %64, %61 ], [ %75, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %77) #5
  %80 = getelementptr inbounds %"class.std::__1::__tree.1155", %"class.std::__1::__tree.1155"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_node.1252", %"class.std::__1::__tree_node.1252"* %17, i64 0, i32 0, i32 0
  ret %"class.std::__1::__tree_end_node"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.1178"*, %"class.std::__1::__tree_node.1271"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1271"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1271"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1271"* %5 to %"class.std::__1::__tree_node.1271"**
  %7 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE(%"class.std::__1::__tree.1178"* %0, %"class.std::__1::__tree_node.1271"* %7) #5
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1271", %"class.std::__1::__tree_node.1271"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1271"**
  %10 = load %"class.std::__1::__tree_node.1271"*, %"class.std::__1::__tree_node.1271"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1271"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare %"class.v8::internal::Variable"* @_ZN2v88internal11VariableMap6LookupEPKNS0_12AstRawStringE(%"class.v8::internal::VariableMap"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6HandleINS2_6ObjectEEENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.1165"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::Handle.1167"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::Handle.1167"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::Handle.1167"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i64** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #5
  %26 = ptrtoint %"class.v8::internal::Handle.1167"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1165"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1165"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #6
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !3

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #5
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::Handle.1167"*
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"class.v8::internal::Handle.1167"* [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %67, i64 %33
  %69 = bitcast %"class.v8::internal::Handle.1167"* %68 to i8*
  %70 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %67, i64 %66
  %71 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #5
  %73 = ptrtoint %"class.v8::internal::Handle.1167"* %70 to i64
  %74 = ptrtoint %"class.v8::internal::Handle.1167"* %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.1165", %"class.std::__1::vector.1165"* %0, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %75, align 8
  %77 = ptrtoint %"class.v8::internal::Handle.1167"* %76 to i64
  %78 = load %"class.v8::internal::Handle.1167"*, %"class.v8::internal::Handle.1167"** %6, align 8
  %79 = icmp eq %"class.v8::internal::Handle.1167"* %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 -1, i32 0, i32 0
  %82 = ptrtoint i64** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 -1, i32 0, i32 0
  %89 = ptrtoint i64** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 %95
  %97 = icmp ult %"class.v8::internal::Handle.1167"* %94, %78
  %98 = icmp ult %"class.v8::internal::Handle.1167"* %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %68, i64 -1
  %114 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 -1
  %115 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %68, i64 -1
  %116 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %114, i64 %121
  %124 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %123, i64 -1
  %125 = bitcast %"class.v8::internal::Handle.1167"* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !54
  %127 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %123, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %127, i64 -1
  %129 = bitcast %"class.v8::internal::Handle.1167"* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !54
  %131 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %122, i64 -1
  %132 = bitcast %"class.v8::internal::Handle.1167"* %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !57, !noalias !54
  %133 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %122, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %133, i64 -1
  %135 = bitcast %"class.v8::internal::Handle.1167"* %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !57, !noalias !54
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %116, i64 %137
  %140 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %139, i64 -1
  %141 = bitcast %"class.v8::internal::Handle.1167"* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !54
  %143 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %139, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %143, i64 -1
  %145 = bitcast %"class.v8::internal::Handle.1167"* %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !54
  %147 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %138, i64 -1
  %148 = bitcast %"class.v8::internal::Handle.1167"* %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !57, !noalias !54
  %149 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %138, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %149, i64 -1
  %151 = bitcast %"class.v8::internal::Handle.1167"* %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !57, !noalias !54
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !59

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %68, i64 -1
  %162 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %78, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %161, i64 %158
  %164 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %162, i64 %158
  %165 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %164, i64 -1
  %166 = bitcast %"class.v8::internal::Handle.1167"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !54
  %168 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %168, i64 -1
  %170 = bitcast %"class.v8::internal::Handle.1167"* %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !54
  %172 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %163, i64 -1
  %173 = bitcast %"class.v8::internal::Handle.1167"* %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !57, !noalias !54
  %174 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %174, i64 -1
  %176 = bitcast %"class.v8::internal::Handle.1167"* %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !57, !noalias !54
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"class.v8::internal::Handle.1167"* [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"class.v8::internal::Handle.1167"* [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %181, i64 -1, i32 0, i32 0
  %183 = ptrtoint i64** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::Handle.1167"* [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"class.v8::internal::Handle.1167"* [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %190, i64 -1
  %194 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %191, i64 -1
  %195 = bitcast %"class.v8::internal::Handle.1167"* %194 to i64*
  %196 = bitcast %"class.v8::internal::Handle.1167"* %193 to i64*
  %197 = load i64, i64* %195, align 8
  store i64 %197, i64* %196, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !60

200:                                              ; preds = %189, %179
  %201 = phi %"class.v8::internal::Handle.1167"* [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"class.v8::internal::Handle.1167"* [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"class.v8::internal::Handle.1167"* [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"class.v8::internal::Handle.1167"* [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"class.v8::internal::Handle.1167"* [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -1
  %209 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -1
  %210 = bitcast %"class.v8::internal::Handle.1167"* %209 to i64*
  %211 = bitcast %"class.v8::internal::Handle.1167"* %208 to i64*
  %212 = load i64, i64* %210, align 8
  store i64 %212, i64* %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -2
  %214 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -2
  %215 = bitcast %"class.v8::internal::Handle.1167"* %214 to i64*
  %216 = bitcast %"class.v8::internal::Handle.1167"* %213 to i64*
  %217 = load i64, i64* %215, align 8
  store i64 %217, i64* %216, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -3
  %219 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -3
  %220 = bitcast %"class.v8::internal::Handle.1167"* %219 to i64*
  %221 = bitcast %"class.v8::internal::Handle.1167"* %218 to i64*
  %222 = load i64, i64* %220, align 8
  store i64 %222, i64* %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -4
  %224 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -4
  %225 = bitcast %"class.v8::internal::Handle.1167"* %224 to i64*
  %226 = bitcast %"class.v8::internal::Handle.1167"* %223 to i64*
  %227 = load i64, i64* %225, align 8
  store i64 %227, i64* %226, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -5
  %229 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -5
  %230 = bitcast %"class.v8::internal::Handle.1167"* %229 to i64*
  %231 = bitcast %"class.v8::internal::Handle.1167"* %228 to i64*
  %232 = load i64, i64* %230, align 8
  store i64 %232, i64* %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -6
  %234 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -6
  %235 = bitcast %"class.v8::internal::Handle.1167"* %234 to i64*
  %236 = bitcast %"class.v8::internal::Handle.1167"* %233 to i64*
  %237 = load i64, i64* %235, align 8
  store i64 %237, i64* %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -7
  %239 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -7
  %240 = bitcast %"class.v8::internal::Handle.1167"* %239 to i64*
  %241 = bitcast %"class.v8::internal::Handle.1167"* %238 to i64*
  %242 = load i64, i64* %240, align 8
  store i64 %242, i64* %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %206, i64 -8
  %244 = getelementptr inbounds %"class.v8::internal::Handle.1167", %"class.v8::internal::Handle.1167"* %207, i64 -8
  %245 = bitcast %"class.v8::internal::Handle.1167"* %244 to i64*
  %246 = bitcast %"class.v8::internal::Handle.1167"* %243 to i64*
  %247 = load i64, i64* %245, align 8
  store i64 %247, i64* %246, align 8
  %248 = icmp eq %"class.v8::internal::Handle.1167"* %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !61

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"class.v8::internal::Handle.1167"* [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"class.v8::internal::Handle.1167"* %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !4
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !4
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !4
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !4
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !4
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !4
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !4
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !4
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !4
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !4
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !4
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !11}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !11}
!29 = distinct !{!29, !13}
!30 = distinct !{!30, !11}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !11}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !11}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE16__construct_nodeIJNS_4pairIS6_SA_EEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINSG_ISP_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE16__construct_nodeIJNS_4pairIS6_SA_EEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINSG_ISP_EEEEEEDpOT_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE16__construct_nodeIJNS_4pairIS6_SA_EEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINSG_ISP_EEEEEEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPKNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SB_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorISB_EEE16__construct_nodeIJNS_4pairIS6_SA_EEEEENS_10unique_ptrINS_11__tree_nodeISB_PvEENS_22__tree_node_destructorINSG_ISP_EEEEEEDpOT_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__16__treeIPKN2v88internal26SourceTextModuleDescriptor16AstModuleRequestENS3_21ModuleRequestComparerENS2_13ZoneAllocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS8_ISF_EEEEEEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16__treeINS_12__value_typeIPKN2v88internal12AstRawStringEPNS3_26SourceTextModuleDescriptor5EntryEEENS_19__map_value_compareIS6_SA_NS7_20AstRawStringComparerELb1EEENS3_13ZoneAllocatorISA_EEE16__construct_nodeIJNS_4pairIS6_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !11}
