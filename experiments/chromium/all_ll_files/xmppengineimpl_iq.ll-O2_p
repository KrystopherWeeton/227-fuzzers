; ModuleID = '../../third_party/libjingle_xmpp/xmpp/xmppengineimpl_iq.cc'
source_filename = "../../third_party/libjingle_xmpp/xmpp/xmppengineimpl_iq.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.jingle_xmpp::XmppEngineImpl" = type { %"class.jingle_xmpp::XmppEngine", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppStanzaParser", i32, %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.24", %"class.std::__1::basic_string", i32, %"class.jingle_xmpp::Jid", i32, i8, i32, i32, %"class.std::__1::unique_ptr.11", i8, %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppSessionHandler"*, %"class.jingle_xmpp::XmlnsStack", [6 x %"class.std::__1::unique_ptr.30"], %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55" }
%"class.jingle_xmpp::XmppEngine" = type { i32 (...)** }
%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler" = type { %"class.jingle_xmpp::XmppStanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl"* }
%"class.jingle_xmpp::XmppStanzaParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppStanzaParser" = type { %"class.jingle_xmpp::XmppStanzaParseHandler"*, %"class.jingle_xmpp::XmppStanzaParser::ParseHandler", %"class.jingle_xmpp::XmlParser", i32, %"class.jingle_xmpp::XmlBuilder" }
%"class.jingle_xmpp::XmppStanzaParser::ParseHandler" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmppStanzaParser"* }
%"class.jingle_xmpp::XmlParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlParser" = type <{ i32 (...)**, %"class.jingle_xmpp::XmlParser::ParseContext", %struct.XML_ParserStruct*, %"class.jingle_xmpp::XmlParseHandler"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlParser::ParseContext" = type { %"class.jingle_xmpp::XmlParseContext", %"class.jingle_xmpp::XmlnsStack", i32, i64, i64, i64 }
%"class.jingle_xmpp::XmlParseContext" = type { i32 (...)** }
%struct.XML_ParserStruct = type opaque
%"class.jingle_xmpp::XmlBuilder" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmlElement"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::vector.20"* }
%"class.std::__1::vector.20" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.jingle_xmpp::XmppLoginTask"* }
%"class.jingle_xmpp::XmppLoginTask" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.jingle_xmpp::XmppOutputHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppSessionHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlnsStack" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::vector.4"* }
%"class.std::__1::vector.4" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::vector.33"* }
%"class.std::__1::vector.33" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::vector.40"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"**, %"class.std::__1::__compressed_pair.41" }
%"class.jingle_xmpp::XmppIqEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.jingle_xmpp::XmppIqHandler"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.jingle_xmpp::XmppIqEntry"** }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.jingle_xmpp::SaslHandler"* }
%"class.jingle_xmpp::SaslHandler" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmppIqHandler" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.jingle_xmpp::XmlText" = type { %"class.jingle_xmpp::XmlChild", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN11jingle_xmpp5QN_IQE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp7QN_TYPEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@_ZN11jingle_xmpp5QN_IDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp5QN_TOE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@_ZN11jingle_xmpp7QN_FROME = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@_ZN11jingle_xmpp14QN_STANZA_TEXTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@_ZN11jingle_xmpp21QN_STANZA_BAD_REQUESTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"modify\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"400\00", align 1
@_ZN11jingle_xmpp18QN_STANZA_CONFLICTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"cancel\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"409\00", align 1
@_ZN11jingle_xmpp33QN_STANZA_FEATURE_NOT_IMPLEMENTEDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.8 = private unnamed_addr constant [4 x i8] c"501\00", align 1
@_ZN11jingle_xmpp19QN_STANZA_FORBIDDENE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"403\00", align 1
@_ZN11jingle_xmpp14QN_STANZA_GONEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.11 = private unnamed_addr constant [4 x i8] c"302\00", align 1
@_ZN11jingle_xmpp31QN_STANZA_INTERNAL_SERVER_ERRORE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.12 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"500\00", align 1
@_ZN11jingle_xmpp24QN_STANZA_ITEM_NOT_FOUNDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"404\00", align 1
@_ZN11jingle_xmpp23QN_STANZA_JID_MALFORMEDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp24QN_STANZA_NOT_ACCEPTABLEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.15 = private unnamed_addr constant [4 x i8] c"406\00", align 1
@_ZN11jingle_xmpp21QN_STANZA_NOT_ALLOWEDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"405\00", align 1
@_ZN11jingle_xmpp26QN_STANZA_PAYMENT_REQUIREDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.17 = private unnamed_addr constant [4 x i8] c"402\00", align 1
@_ZN11jingle_xmpp31QN_STANZA_RECIPIENT_UNAVAILABLEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp18QN_STANZA_REDIRECTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp31QN_STANZA_REGISTRATION_REQUIREDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.18 = private unnamed_addr constant [4 x i8] c"407\00", align 1
@_ZN11jingle_xmpp33QN_STANZA_REMOTE_SERVER_NOT_FOUNDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp31QN_STANZA_REMOTE_SERVER_TIMEOUTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.19 = private unnamed_addr constant [4 x i8] c"502\00", align 1
@_ZN11jingle_xmpp29QN_STANZA_RESOURCE_CONSTRAINTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp29QN_STANZA_SERVICE_UNAVAILABLEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.20 = private unnamed_addr constant [4 x i8] c"503\00", align 1
@_ZN11jingle_xmpp31QN_STANZA_SUBSCRIPTION_REQUIREDE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp29QN_STANZA_UNDEFINED_CONDITIONE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp28QN_STANZA_UNEXPECTED_REQUESTE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp8QN_ERRORE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp7QN_CODEE = external global %"struct.jingle_xmpp::StaticQName", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl6SendIqEPKNS_10XmlElementEPNS_13XmppIqHandlerEPPv(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmppIqHandler"*, i8**) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %181, label %11

11:                                               ; preds = %4
  %12 = icmp eq %"class.jingle_xmpp::XmppIqHandler"* %2, null
  %13 = icmp eq %"class.jingle_xmpp::XmlElement"* %1, null
  %14 = or i1 %13, %12
  br i1 %14, label %181, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  %17 = tail call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %16, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %181

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.jingle_xmpp::XmlElement"* nonnull %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #10
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 3
  br i1 %29, label %30, label %37

30:                                               ; preds = %19
  %31 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %22, align 1
  %35 = load i64, i64* %25, align 8
  %36 = zext i8 %34 to i64
  br label %37

37:                                               ; preds = %33, %19
  %38 = phi i64 [ %36, %33 ], [ %27, %19 ]
  %39 = phi i64 [ %35, %33 ], [ %26, %19 ]
  %40 = phi i8 [ %34, %33 ], [ %23, %19 ]
  %41 = icmp slt i8 %40, 0
  %42 = select i1 %41, i64 %39, i64 %38
  %43 = icmp eq i64 %42, 3
  br i1 %43, label %44, label %173

44:                                               ; preds = %37
  %45 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #10
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %173

47:                                               ; preds = %30, %44
  %48 = call zeroext i1 @_ZNK11jingle_xmpp10XmlElement7HasAttrERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* nonnull %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #10
  br i1 %48, label %49, label %173

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.jingle_xmpp::XmlElement"* nonnull %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #10
  %51 = call i8* @_Znwm(i64 56) #11
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.jingle_xmpp::XmlElement"* nonnull %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_TOE) #10
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %50, i64 24, i1 false) #10
  br label %64

58:                                               ; preds = %49
  %59 = bitcast i8* %51 to %"class.std::__1::basic_string"*
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %59, i8* %61, i64 %63) #10
  br label %64

64:                                               ; preds = %58, %57
  %65 = getelementptr inbounds i8, i8* %51, i64 24
  %66 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %52, i64 24, i1 false) #10
  %71 = getelementptr inbounds i8, i8* %51, i64 48
  %72 = bitcast i8* %71 to %"class.jingle_xmpp::XmppIqHandler"**
  store %"class.jingle_xmpp::XmppIqHandler"* %2, %"class.jingle_xmpp::XmppIqHandler"** %72, align 8
  br label %85

73:                                               ; preds = %64
  %74 = bitcast i8* %65 to %"class.std::__1::basic_string"*
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %74, i8* %76, i64 %78) #10
  %79 = load i8, i8* %67, align 1
  %80 = getelementptr inbounds i8, i8* %51, i64 48
  %81 = bitcast i8* %80 to %"class.jingle_xmpp::XmppIqHandler"**
  store %"class.jingle_xmpp::XmppIqHandler"* %2, %"class.jingle_xmpp::XmppIqHandler"** %81, align 8
  %82 = icmp slt i8 %79, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %73
  %84 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %70, %73, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %86 = ptrtoint i8* %51 to i64
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector.40"*, %"class.std::__1::vector.40"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %88, i64 0, i32 0, i32 1
  %90 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %88, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %91, align 8
  %93 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %90, %92
  %94 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %92 to i64
  br i1 %93, label %100, label %95

95:                                               ; preds = %85
  %96 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %90 to i64*
  store i64 %86, i64* %96, align 8
  %97 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %90, i64 1
  %98 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %97 to i64
  %99 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %89 to i64*
  store i64 %98, i64* %99, align 8
  br label %157

100:                                              ; preds = %85
  %101 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %90 to i64
  %102 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %89 to i64*
  %103 = bitcast %"class.std::__1::vector.40"* %88 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %101, %104
  %106 = ashr exact i64 %105, 3
  %107 = add nsw i64 %106, 1
  %108 = icmp ugt i64 %107, 2305843009213693951
  br i1 %108, label %109, label %111

109:                                              ; preds = %100
  %110 = bitcast %"class.std::__1::vector.40"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #12
  unreachable

111:                                              ; preds = %100
  %112 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %91 to i64*
  %113 = sub i64 %94, %104
  %114 = ashr exact i64 %113, 3
  %115 = icmp ult i64 %114, 1152921504606846975
  br i1 %115, label %116, label %124

116:                                              ; preds = %111
  %117 = ashr exact i64 %113, 2
  %118 = icmp ult i64 %117, %107
  %119 = select i1 %118, i64 %107, i64 %117
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = icmp ugt i64 %119, 2305843009213693951
  br i1 %122, label %123, label %124

123:                                              ; preds = %121
  call void @abort() #12
  unreachable

124:                                              ; preds = %121, %111
  %125 = phi i64 [ %119, %121 ], [ 2305843009213693951, %111 ]
  %126 = shl i64 %125, 3
  %127 = call i8* @_Znwm(i64 %126) #11
  %128 = bitcast i8* %127 to %"class.jingle_xmpp::XmppIqEntry"**
  br label %129

129:                                              ; preds = %124, %116
  %130 = phi i64 [ %125, %124 ], [ 0, %116 ]
  %131 = phi %"class.jingle_xmpp::XmppIqEntry"** [ %128, %124 ], [ null, %116 ]
  %132 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %131, i64 %106
  %133 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %131, i64 %130
  %134 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %133 to i64
  %135 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %132 to i64*
  store i64 %86, i64* %135, align 8
  %136 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %132, i64 1
  %137 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %136 to i64
  %138 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %88, i64 0, i32 0, i32 0
  %139 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %138, align 8
  %140 = load i64, i64* %102, align 8
  %141 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %139 to i64
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 3
  %144 = sub nsw i64 0, %143
  %145 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %132, i64 %144
  %146 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %145 to i64
  %147 = icmp sgt i64 %142, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %129
  %149 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %145 to i8*
  %150 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 %142, i1 false) #10
  %151 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %138, align 8
  br label %152

152:                                              ; preds = %148, %129
  %153 = phi %"class.jingle_xmpp::XmppIqEntry"** [ %139, %129 ], [ %151, %148 ]
  store i64 %146, i64* %103, align 8
  store i64 %137, i64* %102, align 8
  store i64 %134, i64* %112, align 8
  %154 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %153 to i8*
  call void @_ZdlPv(i8* %156) #11
  br label %157

157:                                              ; preds = %95, %152, %155
  %158 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %0 to i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)***
  %159 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)**, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*** %158, align 8
  %160 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)** %159, i64 23
  %161 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)** %160, align 8
  %162 = call i32 %161(%"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmlElement"* nonnull %1) #10
  %163 = icmp eq i8** %3, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %157
  %165 = bitcast i8** %3 to i64*
  store i64 %86, i64* %165, align 8
  br label %166

166:                                              ; preds = %157, %164
  %167 = load i8, i8* %54, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #11
  br label %172

172:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  br label %173

173:                                              ; preds = %44, %37, %47, %172
  %174 = phi i32 [ 0, %172 ], [ 1, %44 ], [ 1, %47 ], [ 1, %37 ]
  %175 = load i8, i8* %22, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #11
  br label %180

180:                                              ; preds = %173, %177
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br label %181

181:                                              ; preds = %15, %11, %4, %180
  %182 = phi i32 [ %174, %180 ], [ 2, %4 ], [ 1, %11 ], [ 1, %15 ]
  ret i32 %182
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK11jingle_xmpp10XmlElement7HasAttrERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl15RemoveIqHandlerEPvPPNS_13XmppIqHandlerE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, i8*, %"class.jingle_xmpp::XmppIqHandler"**) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.40"*, %"class.std::__1::vector.40"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %5, i64 0, i32 0, i32 1
  %9 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %8, align 8
  %10 = bitcast i8* %1 to %"class.jingle_xmpp::XmppIqEntry"*
  %11 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %7, %9
  %12 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %9 to i64
  br i1 %11, label %20, label %13

13:                                               ; preds = %3, %17
  %14 = phi %"class.jingle_xmpp::XmppIqEntry"** [ %18, %17 ], [ %7, %3 ]
  %15 = load %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %14, align 8
  %16 = icmp eq %"class.jingle_xmpp::XmppIqEntry"* %15, %10
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %14, i64 1
  %19 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %18, %9
  br i1 %19, label %62, label %13

20:                                               ; preds = %13, %3
  %21 = phi %"class.jingle_xmpp::XmppIqEntry"** [ %7, %3 ], [ %14, %13 ]
  %22 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %21, %9
  br i1 %22, label %62, label %23

23:                                               ; preds = %20
  %24 = load %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %21, align 8
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %21, i64 1
  %26 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %21 to i8*
  %32 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %25 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %23, %30
  %34 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %21, i64 %28
  store %"class.jingle_xmpp::XmppIqEntry"** %34, %"class.jingle_xmpp::XmppIqEntry"*** %8, align 8
  %35 = icmp eq %"class.jingle_xmpp::XmppIqHandler"** %2, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %24, i64 0, i32 2
  %38 = bitcast %"class.jingle_xmpp::XmppIqHandler"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.jingle_xmpp::XmppIqHandler"** %2 to i64*
  store i64 %39, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %36
  %42 = icmp eq %"class.jingle_xmpp::XmppIqEntry"* %24, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %24, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %49, %43
  %53 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %52, %57
  %61 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %24 to i8*
  tail call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %17, %41, %60, %20
  %63 = phi i32 [ 1, %20 ], [ 0, %60 ], [ 0, %41 ], [ 1, %17 ]
  ret i32 %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl15DeleteIqCookiesEv(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::vector.40"*, %"class.std::__1::vector.40"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.40"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %12, label %15

10:                                               ; preds = %42
  %11 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %45 to i64*
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi i64* [ %5, %1 ], [ %11, %10 ]
  %14 = phi i64 [ %6, %1 ], [ %49, %10 ]
  store i64 %14, i64* %13, align 8
  ret void

15:                                               ; preds = %1, %42
  %16 = phi %"class.std::__1::vector.40"* [ %44, %42 ], [ %3, %1 ]
  %17 = phi i64 [ %43, %42 ], [ 0, %1 ]
  %18 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %16, i64 0, i32 0, i32 0
  %19 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %18, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %19, i64 %17
  %21 = load %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %20, align 8
  store %"class.jingle_xmpp::XmppIqEntry"* null, %"class.jingle_xmpp::XmppIqEntry"** %20, align 8
  %22 = icmp eq %"class.jingle_xmpp::XmppIqEntry"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %21, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %29, %23
  %33 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %32, %37
  %41 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %21 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %15
  %43 = add nuw i64 %17, 1
  %44 = load %"class.std::__1::vector.40"*, %"class.std::__1::vector.40"** %2, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %44, i64 0, i32 0, i32 1
  %46 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.40"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %43, %51
  br i1 %52, label %15, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.jingle_xmpp::QName", align 8
  %6 = alloca %"class.jingle_xmpp::QName", align 8
  %7 = alloca %"class.jingle_xmpp::QName", align 8
  %8 = alloca %"class.jingle_xmpp::QName", align 8
  %9 = alloca %"class.jingle_xmpp::QName", align 8
  %10 = alloca %"class.jingle_xmpp::QName", align 8
  %11 = alloca %"class.jingle_xmpp::QName", align 8
  %12 = alloca %"class.jingle_xmpp::QName", align 8
  %13 = alloca %"class.jingle_xmpp::QName", align 8
  %14 = alloca %"class.jingle_xmpp::QName", align 8
  %15 = alloca %"class.jingle_xmpp::QName", align 8
  %16 = alloca %"class.jingle_xmpp::QName", align 8
  %17 = alloca %"class.jingle_xmpp::QName", align 8
  %18 = alloca %"class.jingle_xmpp::QName", align 8
  %19 = alloca %"class.jingle_xmpp::QName", align 8
  %20 = alloca %"class.jingle_xmpp::QName", align 8
  %21 = alloca %"class.jingle_xmpp::QName", align 8
  %22 = alloca %"class.jingle_xmpp::QName", align 8
  %23 = alloca %"class.jingle_xmpp::QName", align 8
  %24 = alloca %"class.jingle_xmpp::QName", align 8
  %25 = alloca %"class.jingle_xmpp::QName", align 8
  %26 = alloca %"class.jingle_xmpp::XmlElement", align 8
  %27 = alloca %"class.jingle_xmpp::QName", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.jingle_xmpp::QName", align 8
  %30 = alloca %"class.jingle_xmpp::QName", align 8
  %31 = alloca %"class.jingle_xmpp::QName", align 8
  %32 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %224, label %35

35:                                               ; preds = %4
  %36 = bitcast %"class.jingle_xmpp::XmlElement"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 104, i1 false)
  %37 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* dereferenceable(48) %37) #10
  %38 = bitcast %"class.jingle_xmpp::QName"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %27, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #10
  %39 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #10
  %40 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 5, i8* %41, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #10
  %42 = getelementptr inbounds i8, i8* %39, i64 5
  store i8 0, i8* %42, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #10
  %43 = load i8, i8* %41, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %35, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #10
  %49 = call %"class.jingle_xmpp::XmlAttr"* @_ZN11jingle_xmpp10XmlElement9FirstAttrEv(%"class.jingle_xmpp::XmlElement"* %1) #10
  %50 = icmp eq %"class.jingle_xmpp::XmlAttr"* %49, null
  br i1 %50, label %72, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.jingle_xmpp::QName"* %29 to i8*
  %53 = bitcast %"class.jingle_xmpp::QName"* %30 to i8*
  %54 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %29, i64 0, i32 0
  %55 = bitcast %"class.jingle_xmpp::QName"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = bitcast %"class.jingle_xmpp::QName"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %29, i64 0, i32 1
  %62 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %30, i64 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.jingle_xmpp::QName", %"class.jingle_xmpp::QName"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %"class.jingle_xmpp::QName"* %29 to i8*
  br label %75

72:                                               ; preds = %125, %48
  %73 = call %"class.jingle_xmpp::XmlChild"* @_ZN11jingle_xmpp10XmlElement10FirstChildEv(%"class.jingle_xmpp::XmlElement"* %1) #10
  %74 = icmp eq %"class.jingle_xmpp::XmlChild"* %73, null
  br i1 %74, label %129, label %189

75:                                               ; preds = %51, %125
  %76 = phi %"class.jingle_xmpp::XmlAttr"* [ %49, %51 ], [ %127, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #10
  %77 = getelementptr inbounds %"class.jingle_xmpp::XmlAttr", %"class.jingle_xmpp::XmlAttr"* %76, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 48, i1 false)
  call void @_ZN11jingle_xmpp5QNameC1ERKS0_(%"class.jingle_xmpp::QName"* nonnull %29, %"class.jingle_xmpp::QName"* dereferenceable(48) %77) #10
  %78 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %29, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_TOE) #10
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %125, label %80

80:                                               ; preds = %75
  %81 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %29, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_FROME) #10
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %120

83:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %30, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_TOE) #10
  %84 = load i8, i8* %56, align 1
  %85 = icmp slt i8 %84, 0
  %86 = load i8, i8* %58, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %85, label %94, label %88

88:                                               ; preds = %83
  br i1 %87, label %90, label %89

89:                                               ; preds = %88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %53, i64 24, i1 false) #10
  br label %101

90:                                               ; preds = %88
  %91 = load i8*, i8** %59, align 8
  %92 = load i64, i64* %60, align 8
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %54, i8* %91, i64 %92) #10
  br label %101

94:                                               ; preds = %83
  %95 = load i8*, i8** %59, align 8
  %96 = load i64, i64* %60, align 8
  %97 = zext i8 %86 to i64
  %98 = select i1 %87, i8* %95, i8* %53
  %99 = select i1 %87, i64 %96, i64 %97
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %54, i8* %98, i64 %99) #10
  br label %101

101:                                              ; preds = %94, %90, %89
  %102 = load i8, i8* %64, align 1
  %103 = icmp slt i8 %102, 0
  %104 = load i8, i8* %66, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %103, label %112, label %106

106:                                              ; preds = %101
  br i1 %105, label %108, label %107

107:                                              ; preds = %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #10
  br label %119

108:                                              ; preds = %106
  %109 = load i8*, i8** %69, align 8
  %110 = load i64, i64* %70, align 8
  %111 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %61, i8* %109, i64 %110) #10
  br label %119

112:                                              ; preds = %101
  %113 = load i8*, i8** %69, align 8
  %114 = load i64, i64* %70, align 8
  %115 = zext i8 %104 to i64
  %116 = select i1 %105, i8* %113, i8* %68
  %117 = select i1 %105, i64 %114, i64 %115
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %61, i8* %116, i64 %117) #10
  br label %119

119:                                              ; preds = %107, %108, %112
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #10
  br label %123

120:                                              ; preds = %80
  %121 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %29, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #10
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %119, %120
  %124 = getelementptr inbounds %"class.jingle_xmpp::XmlAttr", %"class.jingle_xmpp::XmlAttr"* %76, i64 0, i32 2
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %29, %"class.std::__1::basic_string"* dereferenceable(24) %124) #10
  br label %125

125:                                              ; preds = %120, %75, %123
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #10
  %126 = getelementptr inbounds %"class.jingle_xmpp::XmlAttr", %"class.jingle_xmpp::XmlAttr"* %76, i64 0, i32 0
  %127 = load %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"** %126, align 8
  %128 = icmp eq %"class.jingle_xmpp::XmlAttr"* %127, null
  br i1 %128, label %72, label %75

129:                                              ; preds = %210, %72
  switch i32 %2, label %175 [
    i32 0, label %130
    i32 1, label %132
    i32 2, label %134
    i32 3, label %136
    i32 4, label %138
    i32 5, label %140
    i32 6, label %142
    i32 7, label %144
    i32 8, label %146
    i32 9, label %148
    i32 10, label %150
    i32 11, label %152
    i32 12, label %154
    i32 13, label %156
    i32 14, label %158
    i32 15, label %160
    i32 16, label %162
    i32 17, label %164
    i32 18, label %166
    i32 19, label %168
    i32 20, label %170
  ]

130:                                              ; preds = %129
  %131 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %131) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %5, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp21QN_STANZA_BAD_REQUESTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %172

132:                                              ; preds = %129
  %133 = bitcast %"class.jingle_xmpp::QName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %133) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %6, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_STANZA_CONFLICTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)) #10
  br label %172

134:                                              ; preds = %129
  %135 = bitcast %"class.jingle_xmpp::QName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %135) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %7, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp33QN_STANZA_FEATURE_NOT_IMPLEMENTEDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0)) #10
  br label %172

136:                                              ; preds = %129
  %137 = bitcast %"class.jingle_xmpp::QName"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %137) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %8, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp19QN_STANZA_FORBIDDENE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)) #10
  br label %172

138:                                              ; preds = %129
  %139 = bitcast %"class.jingle_xmpp::QName"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %139) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %9, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp14QN_STANZA_GONEE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0)) #10
  br label %172

140:                                              ; preds = %129
  %141 = bitcast %"class.jingle_xmpp::QName"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %141) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %10, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp31QN_STANZA_INTERNAL_SERVER_ERRORE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %172

142:                                              ; preds = %129
  %143 = bitcast %"class.jingle_xmpp::QName"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %143) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %11, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp24QN_STANZA_ITEM_NOT_FOUNDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %172

144:                                              ; preds = %129
  %145 = bitcast %"class.jingle_xmpp::QName"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %145) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %12, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp23QN_STANZA_JID_MALFORMEDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %172

146:                                              ; preds = %129
  %147 = bitcast %"class.jingle_xmpp::QName"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %147) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %13, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp24QN_STANZA_NOT_ACCEPTABLEE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0)) #10
  br label %172

148:                                              ; preds = %129
  %149 = bitcast %"class.jingle_xmpp::QName"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %149) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %14, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp21QN_STANZA_NOT_ALLOWEDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #10
  br label %172

150:                                              ; preds = %129
  %151 = bitcast %"class.jingle_xmpp::QName"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %151) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %15, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp26QN_STANZA_PAYMENT_REQUIREDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0)) #10
  br label %172

152:                                              ; preds = %129
  %153 = bitcast %"class.jingle_xmpp::QName"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %153) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %16, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp31QN_STANZA_RECIPIENT_UNAVAILABLEE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %172

154:                                              ; preds = %129
  %155 = bitcast %"class.jingle_xmpp::QName"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %155) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %17, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp18QN_STANZA_REDIRECTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0)) #10
  br label %172

156:                                              ; preds = %129
  %157 = bitcast %"class.jingle_xmpp::QName"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %157) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %18, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp31QN_STANZA_REGISTRATION_REQUIREDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #10
  br label %172

158:                                              ; preds = %129
  %159 = bitcast %"class.jingle_xmpp::QName"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %159) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %19, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp33QN_STANZA_REMOTE_SERVER_NOT_FOUNDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %172

160:                                              ; preds = %129
  %161 = bitcast %"class.jingle_xmpp::QName"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %161) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %20, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp31QN_STANZA_REMOTE_SERVER_TIMEOUTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %172

162:                                              ; preds = %129
  %163 = bitcast %"class.jingle_xmpp::QName"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %163) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %21, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp29QN_STANZA_RESOURCE_CONSTRAINTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %172

164:                                              ; preds = %129
  %165 = bitcast %"class.jingle_xmpp::QName"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %165) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %22, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp29QN_STANZA_SERVICE_UNAVAILABLEE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0)) #10
  br label %172

166:                                              ; preds = %129
  %167 = bitcast %"class.jingle_xmpp::QName"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %167) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %23, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp31QN_STANZA_SUBSCRIPTION_REQUIREDE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #10
  br label %172

168:                                              ; preds = %129
  %169 = bitcast %"class.jingle_xmpp::QName"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %169) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %24, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp29QN_STANZA_UNDEFINED_CONDITIONE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %172

170:                                              ; preds = %129
  %171 = bitcast %"class.jingle_xmpp::QName"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %171) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %25, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp28QN_STANZA_UNEXPECTED_REQUESTE) #10
  call fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %172

172:                                              ; preds = %170, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %148, %146, %144, %142, %140, %138, %136, %134, %132, %130
  %173 = phi %"class.jingle_xmpp::QName"* [ %5, %130 ], [ %6, %132 ], [ %7, %134 ], [ %8, %136 ], [ %9, %138 ], [ %10, %140 ], [ %11, %142 ], [ %12, %144 ], [ %13, %146 ], [ %14, %148 ], [ %15, %150 ], [ %16, %152 ], [ %17, %154 ], [ %18, %156 ], [ %19, %158 ], [ %20, %160 ], [ %21, %162 ], [ %22, %164 ], [ %23, %166 ], [ %24, %168 ], [ %25, %170 ]
  %174 = phi i8* [ %131, %130 ], [ %133, %132 ], [ %135, %134 ], [ %137, %136 ], [ %139, %138 ], [ %141, %140 ], [ %143, %142 ], [ %145, %144 ], [ %147, %146 ], [ %149, %148 ], [ %151, %150 ], [ %153, %152 ], [ %155, %154 ], [ %157, %156 ], [ %159, %158 ], [ %161, %160 ], [ %163, %162 ], [ %165, %164 ], [ %167, %166 ], [ %169, %168 ], [ %171, %170 ]
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %173) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %174) #10
  br label %175

175:                                              ; preds = %172, %129
  %176 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #10
  %177 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = icmp eq i64 %176, %184
  br i1 %185, label %186, label %214

186:                                              ; preds = %175
  %187 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %176) #10
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %218, label %214

189:                                              ; preds = %72, %210
  %190 = phi %"class.jingle_xmpp::XmlChild"* [ %212, %210 ], [ %73, %72 ]
  %191 = bitcast %"class.jingle_xmpp::XmlChild"* %190 to i1 (%"class.jingle_xmpp::XmlChild"*)***
  %192 = load i1 (%"class.jingle_xmpp::XmlChild"*)**, i1 (%"class.jingle_xmpp::XmlChild"*)*** %191, align 8
  %193 = load i1 (%"class.jingle_xmpp::XmlChild"*)*, i1 (%"class.jingle_xmpp::XmlChild"*)** %192, align 8
  %194 = call zeroext i1 %193(%"class.jingle_xmpp::XmlChild"* nonnull %190) #10
  br i1 %194, label %195, label %202

195:                                              ; preds = %189
  %196 = bitcast %"class.jingle_xmpp::XmlChild"* %190 to %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)***
  %197 = load %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)**, %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)*** %196, align 8
  %198 = getelementptr inbounds %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)*, %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)** %197, i64 2
  %199 = load %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)*, %"class.jingle_xmpp::XmlText"* (%"class.jingle_xmpp::XmlChild"*)** %198, align 8
  %200 = call %"class.jingle_xmpp::XmlText"* %199(%"class.jingle_xmpp::XmlChild"* nonnull %190) #10
  %201 = getelementptr inbounds %"class.jingle_xmpp::XmlText", %"class.jingle_xmpp::XmlText"* %200, i64 0, i32 1
  call void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.std::__1::basic_string"* dereferenceable(24) %201) #10
  br label %210

202:                                              ; preds = %189
  %203 = call i8* @_Znwm(i64 104) #11
  %204 = bitcast i8* %203 to %"class.jingle_xmpp::XmlElement"*
  %205 = bitcast %"class.jingle_xmpp::XmlChild"* %190 to %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)***
  %206 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)**, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)*** %205, align 8
  %207 = getelementptr inbounds %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)** %206, i64 1
  %208 = load %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)*, %"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmlChild"*)** %207, align 8
  %209 = call %"class.jingle_xmpp::XmlElement"* %208(%"class.jingle_xmpp::XmlChild"* nonnull %190) #10
  call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %204, %"class.jingle_xmpp::XmlElement"* dereferenceable(104) %209) #10
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::XmlElement"* nonnull %204) #10
  br label %210

210:                                              ; preds = %195, %202
  %211 = getelementptr inbounds %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::XmlChild"* %190, i64 0, i32 1
  %212 = load %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"** %211, align 8
  %213 = icmp eq %"class.jingle_xmpp::XmlChild"* %212, null
  br i1 %213, label %129, label %189

214:                                              ; preds = %186, %175
  %215 = call i8* @_Znwm(i64 104) #11
  %216 = bitcast i8* %215 to %"class.jingle_xmpp::XmlElement"*
  %217 = bitcast %"class.jingle_xmpp::QName"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %217) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %31, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp14QN_STANZA_TEXTE) #10
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %216, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %31, i1 zeroext true) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %217) #10
  call void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %216, %"class.std::__1::basic_string"* dereferenceable(24) %3) #10
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* nonnull %26, %"class.jingle_xmpp::XmlElement"* nonnull %216) #10
  br label %218

218:                                              ; preds = %186, %214
  %219 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %0 to i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)***
  %220 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)**, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*** %219, align 8
  %221 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)** %220, i64 23
  %222 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)** %221, align 8
  %223 = call i32 %222(%"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmlElement"* nonnull %26) #10
  call void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %36) #10
  br label %224

224:                                              ; preds = %4, %218
  %225 = phi i32 [ 0, %218 ], [ 2, %4 ]
  ret i32 %225
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #5

declare void @_ZN11jingle_xmpp5QNameC1ERKS0_(%"class.jingle_xmpp::QName"*, %"class.jingle_xmpp::QName"* dereferenceable(48)) unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp10XmlElementD1Ev(%"class.jingle_xmpp::XmlElement"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp14XmppEngineImpl16HandleIqResponseEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::vector.40"*, %"class.std::__1::vector.40"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %7, i64 0, i32 0, i32 1
  %11 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %10, align 8
  %12 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %9, %11
  br i1 %12, label %230, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  %15 = tail call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %14, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %230

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #10
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %20, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 6
  br i1 %29, label %30, label %37

30:                                               ; preds = %17
  %31 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %23, align 1
  %35 = load i64, i64* %20, align 8
  %36 = zext i8 %34 to i64
  br label %37

37:                                               ; preds = %33, %17
  %38 = phi i64 [ %36, %33 ], [ %27, %17 ]
  %39 = phi i64 [ %35, %33 ], [ %26, %17 ]
  %40 = phi i8 [ %34, %33 ], [ %24, %17 ]
  %41 = icmp slt i8 %40, 0
  %42 = select i1 %41, i64 %39, i64 %38
  %43 = icmp eq i64 %42, 5
  br i1 %43, label %44, label %223

44:                                               ; preds = %37
  %45 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %223

47:                                               ; preds = %30, %44
  %48 = call zeroext i1 @_ZNK11jingle_xmpp10XmlElement7HasAttrERKNS_11StaticQNameE(%"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #10
  br i1 %48, label %49, label %223

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IDE) #10
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_FROME) #10
  %56 = bitcast %"class.std::__1::vector.40"** %6 to %"class.jingle_xmpp::XmppIqEntry"****
  %57 = load %"class.jingle_xmpp::XmppIqEntry"***, %"class.jingle_xmpp::XmppIqEntry"**** %56, align 8
  %58 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %57, align 8
  %59 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %57, i64 1
  %60 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %59, align 8
  %61 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %58, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %49
  %63 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %207

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i64, i64* %66, align 8
  %72 = zext i8 %69 to i64
  %73 = select i1 %70, i64 %71, i64 %72
  %74 = load i8*, i8** %51, align 8
  %75 = select i1 %70, i8* %74, i8* %50
  %76 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %65, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = load i8*, i8** %54, align 8
  %84 = select i1 %79, i8* %83, i8* %53
  %85 = icmp eq i64 %73, 0
  %86 = icmp eq i64 %82, 0
  %87 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %57, i64 1
  br label %88

88:                                               ; preds = %64, %204
  %89 = phi %"class.jingle_xmpp::XmppIqEntry"*** [ %59, %64 ], [ %87, %204 ]
  %90 = phi %"class.jingle_xmpp::XmppIqEntry"** [ %58, %64 ], [ %205, %204 ]
  %91 = load %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %90, align 8
  %92 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = icmp eq i64 %99, %73
  br i1 %100, label %101, label %204

101:                                              ; preds = %88
  %102 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %91 to i8*
  %105 = select i1 %95, i8* %103, i8* %104
  br i1 %95, label %112, label %106

106:                                              ; preds = %101
  br i1 %85, label %128, label %107

107:                                              ; preds = %106
  %108 = ptrtoint i8* %103 to i64
  %109 = trunc i64 %108 to i8
  %110 = load i8, i8* %75, align 1
  %111 = icmp eq i8 %110, %109
  br i1 %111, label %113, label %204

112:                                              ; preds = %101
  br i1 %85, label %128, label %125

113:                                              ; preds = %107, %120
  %114 = phi i64 [ %117, %120 ], [ %98, %107 ]
  %115 = phi i8* [ %118, %120 ], [ %104, %107 ]
  %116 = phi i8* [ %121, %120 ], [ %75, %107 ]
  %117 = add i64 %114, -1
  %118 = getelementptr inbounds i8, i8* %115, i64 1
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds i8, i8* %116, i64 1
  %122 = load i8, i8* %118, align 1
  %123 = load i8, i8* %121, align 1
  %124 = icmp eq i8 %122, %123
  br i1 %124, label %113, label %204

125:                                              ; preds = %112
  %126 = call i32 @bcmp(i8* %105, i8* %75, i64 %73) #10
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %204

128:                                              ; preds = %113, %106, %112, %125
  %129 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 1
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = zext i8 %132 to i64
  %137 = select i1 %133, i64 %135, i64 %136
  %138 = icmp eq i64 %137, %82
  br i1 %138, label %139, label %204

139:                                              ; preds = %128
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  %143 = select i1 %133, i8* %141, i8* %142
  br i1 %133, label %150, label %144

144:                                              ; preds = %139
  br i1 %86, label %166, label %145

145:                                              ; preds = %144
  %146 = ptrtoint i8* %141 to i64
  %147 = trunc i64 %146 to i8
  %148 = load i8, i8* %84, align 1
  %149 = icmp eq i8 %148, %147
  br i1 %149, label %151, label %204

150:                                              ; preds = %139
  br i1 %86, label %166, label %163

151:                                              ; preds = %145, %158
  %152 = phi i64 [ %155, %158 ], [ %136, %145 ]
  %153 = phi i8* [ %156, %158 ], [ %142, %145 ]
  %154 = phi i8* [ %159, %158 ], [ %84, %145 ]
  %155 = add i64 %152, -1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds i8, i8* %154, i64 1
  %160 = load i8, i8* %156, align 1
  %161 = load i8, i8* %159, align 1
  %162 = icmp eq i8 %160, %161
  br i1 %162, label %151, label %204

163:                                              ; preds = %150
  %164 = call i32 @bcmp(i8* %143, i8* %84, i64 %82) #10
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %204

166:                                              ; preds = %144, %150, %163, %151
  %167 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = bitcast %"class.jingle_xmpp::XmppIqEntry"* %91 to i8*
  %170 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %174 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %90, i64 1
  %175 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %89 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %174 to i64
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %166
  %182 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %90 to i8*
  %183 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %174 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %178, i1 false) #10
  br label %184

184:                                              ; preds = %166, %181
  %185 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %90, i64 %179
  store %"class.jingle_xmpp::XmppIqEntry"** %185, %"class.jingle_xmpp::XmppIqEntry"*** %89, align 8
  %186 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry", %"class.jingle_xmpp::XmppIqEntry"* %91, i64 0, i32 2
  %187 = load %"class.jingle_xmpp::XmppIqHandler"*, %"class.jingle_xmpp::XmppIqHandler"** %186, align 8
  %188 = bitcast %"class.jingle_xmpp::XmppIqHandler"* %187 to void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)***
  %189 = load void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)** %189, i64 2
  %191 = load void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmppIqHandler"*, i8*, %"class.jingle_xmpp::XmlElement"*)** %190, align 8
  call void %191(%"class.jingle_xmpp::XmppIqHandler"* %187, i8* %169, %"class.jingle_xmpp::XmlElement"* %1) #10
  %192 = icmp eq %"class.jingle_xmpp::XmppIqEntry"* %91, null
  br i1 %192, label %207, label %193

193:                                              ; preds = %184
  %194 = load i8, i8* %171, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %196, %193
  %199 = load i8, i8* %173, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %198
  %202 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %202) #11
  br label %203

203:                                              ; preds = %198, %201
  call void @_ZdlPv(i8* %169) #11
  br label %207

204:                                              ; preds = %120, %158, %107, %145, %128, %88, %163, %125
  %205 = getelementptr inbounds %"class.jingle_xmpp::XmppIqEntry"*, %"class.jingle_xmpp::XmppIqEntry"** %90, i64 1
  %206 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %205, %60
  br i1 %206, label %207, label %88

207:                                              ; preds = %204, %62, %184, %203
  %208 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %62 ], [ %76, %184 ], [ %76, %203 ], [ %76, %204 ]
  %209 = phi i1 [ false, %62 ], [ true, %184 ], [ true, %203 ], [ false, %204 ]
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %207
  %214 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %214) #11
  br label %215

215:                                              ; preds = %207, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  %216 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %215
  %221 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %221) #11
  br label %222

222:                                              ; preds = %215, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  br label %223

223:                                              ; preds = %44, %37, %47, %222
  %224 = phi i1 [ %209, %222 ], [ false, %44 ], [ false, %47 ], [ false, %37 ]
  %225 = load i8, i8* %23, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %223
  %228 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %228) #11
  br label %229

229:                                              ; preds = %223, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  br label %230

230:                                              ; preds = %13, %2, %229
  %231 = phi i1 [ %224, %229 ], [ false, %2 ], [ false, %13 ]
  ret i1 %231
}

declare i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare %"class.jingle_xmpp::XmlAttr"* @_ZN11jingle_xmpp10XmlElement9FirstAttrEv(%"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare %"class.jingle_xmpp::XmlChild"* @_ZN11jingle_xmpp10XmlElement10FirstChildEv(%"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN11jingle_xmppL7AecImplEPNS_10XmlElementERKNS_5QNameEPKcS6_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), i8* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 {
  %5 = alloca %"class.jingle_xmpp::QName", align 8
  %6 = alloca %"class.jingle_xmpp::QName", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.jingle_xmpp::QName", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = tail call i8* @_Znwm(i64 104) #11
  %11 = bitcast i8* %10 to %"class.jingle_xmpp::XmlElement"*
  %12 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %5, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp8QN_ERRORE) #10
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameE(%"class.jingle_xmpp::XmlElement"* nonnull %11, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %5) #10
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_(%"class.jingle_xmpp::XmlElement"* %0, %"class.jingle_xmpp::XmlElement"* nonnull %11) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #10
  %13 = bitcast %"class.jingle_xmpp::QName"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %6, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_CODEE) #10
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = call i64 @strlen(i8* %3) #10
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %18) #12
  unreachable

19:                                               ; preds = %4
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %30, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = call i8* @_Znwm(i64 %23) #11
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %35

30:                                               ; preds = %19
  %31 = trunc i64 %15 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = icmp eq i64 %15, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %21
  %36 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %32, %30 ], [ %29, %21 ]
  %37 = phi i8* [ %14, %30 ], [ %24, %21 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %3, i64 %15, i1 false) #10
  br label %38

38:                                               ; preds = %30, %35
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %32, %30 ], [ %36, %35 ]
  %40 = phi i8* [ %14, %30 ], [ %37, %35 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %15
  store i8 0, i8* %41, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"class.jingle_xmpp::XmlElement"* %0, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 1) #10
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %38, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #10
  %49 = bitcast %"class.jingle_xmpp::QName"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %8, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #10
  %50 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  %51 = call i64 @strlen(i8* %2) #10
  %52 = icmp ugt i64 %51, -17
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %54) #12
  unreachable

55:                                               ; preds = %48
  %56 = icmp ult i64 %51, 23
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = add nuw i64 %51, 16
  %59 = and i64 %58, -16
  %60 = call i8* @_Znwm(i64 %59) #11
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8
  %62 = or i64 %59, -9223372036854775808
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %64, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %71

66:                                               ; preds = %55
  %67 = trunc i64 %51 to i8
  %68 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 %67, i8* %69, align 1
  %70 = icmp eq i64 %51, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %57
  %72 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %65, %57 ]
  %73 = phi i8* [ %50, %66 ], [ %60, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 %2, i64 %51, i1 false) #10
  br label %74

74:                                               ; preds = %66, %71
  %75 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %72, %71 ]
  %76 = phi i8* [ %50, %66 ], [ %73, %71 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %51
  store i8 0, i8* %77, align 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"class.jingle_xmpp::XmlElement"* %0, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 1) #10
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %74, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #10
  %85 = call i8* @_Znwm(i64 104) #11
  %86 = bitcast i8* %85 to %"class.jingle_xmpp::XmlElement"*
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %86, %"class.jingle_xmpp::QName"* dereferenceable(48) %1, i1 zeroext true) #10
  call void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_i(%"class.jingle_xmpp::XmlElement"* %0, %"class.jingle_xmpp::XmlElement"* nonnull %86, i32 1) #10
  ret void
}

declare void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEi(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlElement10AddElementEPS0_i(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"*, i32) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
