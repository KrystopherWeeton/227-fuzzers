; ModuleID = '../../services/resource_coordinator/public/cpp/memory_instrumentation/tracing_observer.cc'
source_filename = "../../services/resource_coordinator/public/cpp/memory_instrumentation/tracing_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.memory_instrumentation::TracingObserver" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver", %"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::TraceLog"*, %"class.std::__1::unique_ptr.317" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set.154", %"class.std::__1::vector.164", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set.154" = type { %"class.std::__1::__tree.155" }
%"class.std::__1::__tree.155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.166" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.8", %"class.std::__1::vector", %"class.base::Lock", i8, %"class.std::__1::vector.20", %"class.std::__1::map", %"class.std::__1::vector.34", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.66", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.90", %"class.std::__1::unordered_map.114", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.142", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.192", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.251", %"class.std::__1::unique_ptr.275", i64, %"class.base::RepeatingCallback.281", %class.scoped_refptr.282, %"class.base::RepeatingCallback.284", %"class.base::RepeatingCallback.285", i64, i8, %"struct.std::__1::atomic.286", %"struct.std::__1::atomic.308", %"struct.std::__1::atomic.312", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.14"*, %"class.std::__1::unique_ptr.14"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::unique_ptr.14" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::unique_ptr.14"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.std::__1::unique_ptr.36"*, %"class.std::__1::unique_ptr.36"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::unique_ptr.36" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::unique_ptr.36"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.66" = type { %"class.std::__1::__hash_table.67" }
%"class.std::__1::__hash_table.67" = type <{ %"class.std::__1::unique_ptr.68", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.86", [4 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base.71"** }
%"struct.std::__1::__hash_node_base.71" = type { %"struct.std::__1::__hash_node_base.71"* }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__bucket_list_deallocator.73" }
%"class.std::__1::__bucket_list_deallocator.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::__hash_node_base.71" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.62", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::unordered_map.90" = type { %"class.std::__1::__hash_table.91" }
%"class.std::__1::__hash_table.91" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base.95"** }
%"struct.std::__1::__hash_node_base.95" = type { %"struct.std::__1::__hash_node_base.95"* }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::__bucket_list_deallocator.97" }
%"class.std::__1::__bucket_list_deallocator.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.95" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::unordered_map.114" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.142" = type { %"struct.std::__1::__atomic_base.143" }
%"struct.std::__1::__atomic_base.143" = type { %"struct.std::__1::__atomic_base.144" }
%"struct.std::__1::__atomic_base.144" = type { %"struct.std::__1::__cxx_atomic_impl.145" }
%"struct.std::__1::__cxx_atomic_impl.145" = type { %"struct.std::__1::__cxx_atomic_base_impl.146" }
%"struct.std::__1::__cxx_atomic_base_impl.146" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.192", %"class.std::__1::unordered_set.228", %"class.std::__1::unordered_set.228" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.147", %"class.std::__1::vector.147", %"class.std::__1::vector.147" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::basic_string"* }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.171" }
%"class.std::__1::__hash_table.171" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.189", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.175"** }
%"struct.std::__1::__hash_node_base.175" = type { %"struct.std::__1::__hash_node_base.175"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator.177" }
%"class.std::__1::__bucket_list_deallocator.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base.175" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::unordered_set.228" = type { %"class.std::__1::__hash_table.229" }
%"class.std::__1::__hash_table.229" = type <{ %"class.std::__1::unique_ptr.230", %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.247", [4 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base.233"** }
%"struct.std::__1::__hash_node_base.233" = type { %"struct.std::__1::__hash_node_base.233"* }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::__bucket_list_deallocator.235" }
%"class.std::__1::__bucket_list_deallocator.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::__hash_node_base.233" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.223" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.194" }
%"union.absl::variant_internal::DestructibleUnionImpl.194" = type { %"union.absl::variant_internal::DestructibleUnionImpl.195" }
%"union.absl::variant_internal::DestructibleUnionImpl.195" = type { %"union.absl::variant_internal::DestructibleUnionImpl.196" }
%"union.absl::variant_internal::DestructibleUnionImpl.196" = type { %"union.absl::variant_internal::DestructibleUnionImpl.197" }
%"union.absl::variant_internal::DestructibleUnionImpl.197" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.250" }
%"class.base::ThreadLocalPointer.250" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.251" = type { %"class.std::__1::__hash_table.252" }
%"class.std::__1::__hash_table.252" = type <{ %"class.std::__1::unique_ptr.253", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.271", [4 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255", %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"struct.std::__1::__hash_node_base.256"** }
%"struct.std::__1::__hash_node_base.256" = type { %"struct.std::__1::__hash_node_base.256"* }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::__bucket_list_deallocator.258" }
%"class.std::__1::__bucket_list_deallocator.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.256" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback.281" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.282 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.283" }>
%"class.base::RefCountedThreadSafe.283" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.284" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.285" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.307, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.290" }
%"class.base::time_internal::TimeBase.290" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon.307 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { void ()* }
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%"struct.base::trace_event::MemoryDumpRequestArgs" = type { i64, i32, i32, i32 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.323", %"class.std::__1::map.333", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.344" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.323" = type { %"class.std::__1::__tree.324" }
%"class.std::__1::__tree.324" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.333" = type { %"class.std::__1::__tree.334" }
%"class.std::__1::__tree.334" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.335", %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector.348" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.347 }
%union.anon.347 = type { i64 }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.350" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.memory_instrumentation::mojom::OSMemDump" = type { i32, i32, i8, i32, i32, i32 }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.366" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.360" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.memory_instrumentation::mojom::VmRegion"* }
%"class.memory_instrumentation::mojom::VmRegion" = type { i64, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i64, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZTVN22memory_instrumentation15TracingObserverE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.memory_instrumentation::TracingObserver"*)* @_ZN22memory_instrumentation15TracingObserverD2Ev to i8*), i8* bitcast (void (%"class.memory_instrumentation::TracingObserver"*)* @_ZN22memory_instrumentation15TracingObserverD0Ev to i8*), i8* bitcast (void (%"class.memory_instrumentation::TracingObserver"*)* @_ZN22memory_instrumentation15TracingObserver17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.memory_instrumentation::TracingObserver"*)* @_ZN22memory_instrumentation15TracingObserver18OnTraceLogDisabledEv to i8*), i8* bitcast (i1 (%"class.memory_instrumentation::TracingObserver"*, %"struct.base::trace_event::MemoryDumpRequestArgs"*, i32, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::TimeTicks"*)* @_ZN22memory_instrumentation15TracingObserver29AddChromeDumpToTraceIfEnabledERKN4base11trace_event21MemoryDumpRequestArgsEiPKNS2_17ProcessMemoryDumpERKNS1_9TimeTicksE to i8*), i8* bitcast (i1 (%"class.memory_instrumentation::TracingObserver"*, %"struct.base::trace_event::MemoryDumpRequestArgs"*, i32, %"class.memory_instrumentation::mojom::OSMemDump"*, %"class.std::__1::vector.358"*, %"class.base::TimeTicks"*)* @_ZN22memory_instrumentation15TracingObserver25AddOsDumpToTraceIfEnabledERKN4base11trace_event21MemoryDumpRequestArgsEiRKNS_5mojom9OSMemDumpERKNSt3__16vectorIN4mojo9StructPtrINS6_8VmRegionEEENSA_9allocatorISF_EEEERKNS1_9TimeTicksE to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external local_unnamed_addr global [300 x %"struct.base::trace_event::TraceCategory"], align 16

@_ZN22memory_instrumentation15TracingObserverC1EPN4base11trace_event8TraceLogEPNS2_17MemoryDumpManagerE = hidden unnamed_addr alias void (%"class.memory_instrumentation::TracingObserver"*, %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::MemoryDumpManager"*), void (%"class.memory_instrumentation::TracingObserver"*, %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::MemoryDumpManager"*)* @_ZN22memory_instrumentation15TracingObserverC2EPN4base11trace_event8TraceLogEPNS2_17MemoryDumpManagerE
@_ZN22memory_instrumentation15TracingObserverD1Ev = hidden unnamed_addr alias void (%"class.memory_instrumentation::TracingObserver"*), void (%"class.memory_instrumentation::TracingObserver"*)* @_ZN22memory_instrumentation15TracingObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserverC2EPN4base11trace_event8TraceLogEPNS2_17MemoryDumpManagerE(%"class.memory_instrumentation::TracingObserver"*, %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::MemoryDumpManager"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN22memory_instrumentation15TracingObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 1
  store %"class.base::trace_event::MemoryDumpManager"* %2, %"class.base::trace_event::MemoryDumpManager"** %6, align 8
  %7 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 2
  store %"class.base::trace_event::TraceLog"* %1, %"class.base::trace_event::TraceLog"** %7, align 8
  %8 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr.317"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #9
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  %22 = load %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog"** %7, align 8
  tail call void @_ZN4base11trace_event8TraceLog23AddEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %22, %"class.base::trace_event::TraceLog::EnabledStateObserver"* %4) #9
  br i1 %20, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.memory_instrumentation::TracingObserver"* %0 to void (%"class.memory_instrumentation::TracingObserver"*)***
  %25 = load void (%"class.memory_instrumentation::TracingObserver"*)**, void (%"class.memory_instrumentation::TracingObserver"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.memory_instrumentation::TracingObserver"*)*, void (%"class.memory_instrumentation::TracingObserver"*)** %25, i64 2
  %27 = load void (%"class.memory_instrumentation::TracingObserver"*)*, void (%"class.memory_instrumentation::TracingObserver"*)** %26, align 8
  tail call void %27(%"class.memory_instrumentation::TracingObserver"* %0) #9
  br label %28

28:                                               ; preds = %16, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11trace_event8TraceLog23AddEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::EnabledStateObserver"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserverD2Ev(%"class.memory_instrumentation::TracingObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN22memory_instrumentation15TracingObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 2
  %4 = load %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog"** %3, align 8
  %5 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %4, %"class.base::trace_event::TraceLog::EnabledStateObserver"* %5) #9
  %6 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %6, align 8
  store %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* null, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %6, align 8
  %8 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigD1Ev(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* nonnull %7) #9
  %10 = bitcast %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::EnabledStateObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserverD0Ev(%"class.memory_instrumentation::TracingObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN22memory_instrumentation15TracingObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 2
  %4 = load %"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog"** %3, align 8
  %5 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %4, %"class.base::trace_event::TraceLog::EnabledStateObserver"* %5) #9
  %6 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %6, align 8
  store %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* null, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %6, align 8
  %8 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigD1Ev(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* nonnull %7) #9
  %10 = bitcast %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = bitcast %"class.memory_instrumentation::TracingObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserver17OnTraceLogEnabledEv(%"class.memory_instrumentation::TracingObserver"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::trace_event::TraceConfig", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 190, i32 0), align 16
  %4 = and i8 %3, 9
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #9
  tail call void @_ZN4base11trace_event8TraceLog43InitializeThreadLocalEventBufferIfSupportedEv(%"class.base::trace_event::TraceLog"* %7) #9
  %8 = bitcast %"class.base::trace_event::TraceConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #9
  %9 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #9
  call void @_ZNK4base11trace_event8TraceLog21GetCurrentTraceConfigEv(%"class.base::trace_event::TraceConfig"* nonnull sret %2, %"class.base::trace_event::TraceLog"* %9) #9
  %10 = getelementptr inbounds %"class.base::trace_event::TraceConfig", %"class.base::trace_event::TraceConfig"* %2, i64 0, i32 5
  %11 = call i8* @_Znwm(i64 56) #10
  %12 = bitcast i8* %11 to %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*
  call void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigC1ERKS2_(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* nonnull %12, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* dereferenceable(56) %10) #9
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.317"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.317"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %6
  call void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigD1Ev(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* nonnull %16) #9
  %20 = bitcast %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %16 to i8*
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %19, %6
  %22 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 1
  %23 = load %"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpManager"** %22, align 8
  %24 = icmp eq %"class.base::trace_event::MemoryDumpManager"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @_ZN4base11trace_event17MemoryDumpManager15SetupForTracingERKNS0_11TraceConfig16MemoryDumpConfigE(%"class.base::trace_event::MemoryDumpManager"* nonnull %23, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* dereferenceable(56) %10) #9
  br label %26

26:                                               ; preds = %21, %25
  call void @_ZN4base11trace_event11TraceConfigD1Ev(%"class.base::trace_event::TraceConfig"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #9
  br label %27

27:                                               ; preds = %1, %26
  ret void
}

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN4base11trace_event8TraceLog43InitializeThreadLocalEventBufferIfSupportedEv(%"class.base::trace_event::TraceLog"*) local_unnamed_addr #2

declare void @_ZNK4base11trace_event8TraceLog21GetCurrentTraceConfigEv(%"class.base::trace_event::TraceConfig"* sret, %"class.base::trace_event::TraceLog"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event17MemoryDumpManager15SetupForTracingERKNS0_11TraceConfig16MemoryDumpConfigE(%"class.base::trace_event::MemoryDumpManager"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TraceConfigD1Ev(%"class.base::trace_event::TraceConfig"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserver18OnTraceLogDisabledEv(%"class.memory_instrumentation::TracingObserver"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 1
  %3 = load %"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpManager"** %2, align 8
  %4 = icmp eq %"class.base::trace_event::MemoryDumpManager"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base11trace_event17MemoryDumpManager18TeardownForTracingEv(%"class.base::trace_event::MemoryDumpManager"* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %7, align 8
  store %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* null, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %7, align 8
  %9 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigD1Ev(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* nonnull %8) #9
  %11 = bitcast %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %6, %10
  ret void
}

declare void @_ZN4base11trace_event17MemoryDumpManager18TeardownForTracingEv(%"class.base::trace_event::MemoryDumpManager"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN22memory_instrumentation15TracingObserver29AddChromeDumpToTraceIfEnabledERKN4base11trace_event21MemoryDumpRequestArgsEiPKNS2_17ProcessMemoryDumpERKNS1_9TimeTicksE(%"class.memory_instrumentation::TracingObserver"* nocapture readnone, %"struct.base::trace_event::MemoryDumpRequestArgs"* nocapture readnone dereferenceable(24), i32, %"class.base::trace_event::ProcessMemoryDump"* nocapture readnone, %"class.base::TimeTicks"* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN22memory_instrumentation15TracingObserver25AddOsDumpToTraceIfEnabledERKN4base11trace_event21MemoryDumpRequestArgsEiRKNS_5mojom9OSMemDumpERKNSt3__16vectorIN4mojo9StructPtrINS6_8VmRegionEEENSA_9allocatorISF_EEEERKNS1_9TimeTicksE(%"class.memory_instrumentation::TracingObserver"* nocapture readnone, %"struct.base::trace_event::MemoryDumpRequestArgs"* nocapture readnone dereferenceable(24), i32, %"class.memory_instrumentation::mojom::OSMemDump"* nocapture readnone dereferenceable(24), %"class.std::__1::vector.358"* nocapture readnone dereferenceable(24), %"class.base::TimeTicks"* nocapture readnone dereferenceable(8)) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN22memory_instrumentation15TracingObserver16ShouldAddToTraceERKN4base11trace_event21MemoryDumpRequestArgsE(%"class.memory_instrumentation::TracingObserver"* nocapture readonly, %"struct.base::trace_event::MemoryDumpRequestArgs"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 190, i32 0), align 16
  %4 = and i8 %3, 9
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.base::trace_event::MemoryDumpRequestArgs", %"struct.base::trace_event::MemoryDumpRequestArgs"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %9, align 8
  %11 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %33, label %17

17:                                               ; preds = %12, %29
  %18 = phi %"class.std::__1::__tree_node"* [ %31, %29 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, %8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::__tree_node"* %18 to %"class.std::__1::__tree_node"**
  br label %29

24:                                               ; preds = %17
  %25 = icmp ult i32 %20, %8
  br i1 %25, label %26, label %33

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__tree_node_base"** %27 to %"class.std::__1::__tree_node"**
  br label %29

29:                                               ; preds = %26, %22
  %30 = phi %"class.std::__1::__tree_node"** [ %23, %22 ], [ %28, %26 ]
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %33, label %17

33:                                               ; preds = %29, %24, %2, %12, %6
  %34 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %12 ], [ false, %29 ], [ true, %24 ]
  ret i1 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22memory_instrumentation15TracingObserver17IsDumpModeAllowedEN4base11trace_event23MemoryDumpLevelOfDetailE(%"class.memory_instrumentation::TracingObserver"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.memory_instrumentation::TracingObserver", %"class.memory_instrumentation::TracingObserver"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"** %3, align 8
  %5 = icmp eq %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %23
  %12 = phi %"class.std::__1::__tree_node"* [ %25, %23 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  br label %23

18:                                               ; preds = %11
  %19 = icmp ult i32 %14, %1
  br i1 %19, label %20, label %27

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node"**
  br label %23

23:                                               ; preds = %20, %16
  %24 = phi %"class.std::__1::__tree_node"** [ %17, %16 ], [ %22, %20 ]
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %27, label %11

27:                                               ; preds = %23, %18, %6, %2
  %28 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %23 ], [ true, %18 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22memory_instrumentation15TracingObserver18ApplyPathFilteringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.base::FilePath", align 8
  br i1 %2, label %7, label %158

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = zext i8 %15 to i64
  %23 = select i1 %16, i8* %18, i8* %21
  %24 = select i1 %16, i64 %20, i64 %22
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = icmp ugt i64 %24, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %7
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #11
  unreachable

29:                                               ; preds = %7
  %30 = icmp ult i64 %24, 23
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %24, 16
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #10
  store i8* %34, i8** %9, align 8
  %35 = or i64 %33, -9223372036854775808
  store i64 %35, i64* %11, align 8
  store i64 %24, i64* %10, align 8
  br label %41

36:                                               ; preds = %29
  %37 = trunc i64 %24 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1
  %40 = icmp eq i64 %24, 0
  br i1 %40, label %140, label %41

41:                                               ; preds = %31, %36
  %42 = phi i8* [ %34, %31 ], [ %8, %36 ]
  %43 = icmp ult i64 %24, 32
  br i1 %43, label %130, label %44

44:                                               ; preds = %41
  %45 = getelementptr i8, i8* %42, i64 %24
  %46 = icmp ult i8* %42, %25
  %47 = icmp ult i8* %23, %45
  %48 = and i1 %46, %47
  br i1 %48, label %130, label %49

49:                                               ; preds = %44
  %50 = and i64 %24, -32
  %51 = getelementptr i8, i8* %42, i64 %50
  %52 = getelementptr i8, i8* %23, i64 %50
  %53 = add i64 %50, -32
  %54 = lshr exact i64 %53, 5
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 3
  %57 = icmp ult i64 %53, 96
  br i1 %57, label %109, label %58

58:                                               ; preds = %49
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %106, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %107, %60 ]
  %63 = getelementptr i8, i8* %42, i64 %61
  %64 = getelementptr i8, i8* %23, i64 %61
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !3
  %67 = getelementptr i8, i8* %64, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1, !alias.scope !3
  %70 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %70, align 1, !alias.scope !6, !noalias !3
  %71 = getelementptr i8, i8* %63, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %72, align 1, !alias.scope !6, !noalias !3
  %73 = or i64 %61, 32
  %74 = getelementptr i8, i8* %42, i64 %73
  %75 = getelementptr i8, i8* %23, i64 %73
  %76 = bitcast i8* %75 to <16 x i8>*
  %77 = load <16 x i8>, <16 x i8>* %76, align 1, !alias.scope !3
  %78 = getelementptr i8, i8* %75, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1, !alias.scope !3
  %81 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %77, <16 x i8>* %81, align 1, !alias.scope !6, !noalias !3
  %82 = getelementptr i8, i8* %74, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %80, <16 x i8>* %83, align 1, !alias.scope !6, !noalias !3
  %84 = or i64 %61, 64
  %85 = getelementptr i8, i8* %42, i64 %84
  %86 = getelementptr i8, i8* %23, i64 %84
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !3
  %89 = getelementptr i8, i8* %86, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !3
  %92 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %92, align 1, !alias.scope !6, !noalias !3
  %93 = getelementptr i8, i8* %85, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %91, <16 x i8>* %94, align 1, !alias.scope !6, !noalias !3
  %95 = or i64 %61, 96
  %96 = getelementptr i8, i8* %42, i64 %95
  %97 = getelementptr i8, i8* %23, i64 %95
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !3
  %100 = getelementptr i8, i8* %97, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 1, !alias.scope !3
  %103 = bitcast i8* %96 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %103, align 1, !alias.scope !6, !noalias !3
  %104 = getelementptr i8, i8* %96, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %102, <16 x i8>* %105, align 1, !alias.scope !6, !noalias !3
  %106 = add i64 %61, 128
  %107 = add i64 %62, -4
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %60, !llvm.loop !8

109:                                              ; preds = %60, %49
  %110 = phi i64 [ 0, %49 ], [ %106, %60 ]
  %111 = icmp eq i64 %56, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %125, %112 ], [ %110, %109 ]
  %114 = phi i64 [ %126, %112 ], [ %56, %109 ]
  %115 = getelementptr i8, i8* %42, i64 %113
  %116 = getelementptr i8, i8* %23, i64 %113
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !3
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !3
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !6, !noalias !3
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !6, !noalias !3
  %125 = add i64 %113, 32
  %126 = add i64 %114, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %112, !llvm.loop !10

128:                                              ; preds = %112, %109
  %129 = icmp eq i64 %24, %50
  br i1 %129, label %140, label %130

130:                                              ; preds = %128, %44, %41
  %131 = phi i8* [ %42, %44 ], [ %42, %41 ], [ %51, %128 ]
  %132 = phi i8* [ %23, %44 ], [ %23, %41 ], [ %52, %128 ]
  br label %133

133:                                              ; preds = %130, %133
  %134 = phi i8* [ %138, %133 ], [ %131, %130 ]
  %135 = phi i8* [ %137, %133 ], [ %132, %130 ]
  %136 = load i8, i8* %135, align 1
  store i8 %136, i8* %134, align 1
  %137 = getelementptr inbounds i8, i8* %135, i64 1
  %138 = getelementptr inbounds i8, i8* %134, i64 1
  %139 = icmp eq i8* %137, %25
  br i1 %139, label %140, label %133, !llvm.loop !12

140:                                              ; preds = %133, %128, %36
  %141 = phi i8* [ %8, %36 ], [ %51, %128 ], [ %138, %133 ]
  store i8 0, i8* %141, align 1
  %142 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #9
  %143 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #9
  %144 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = load i8*, i8** %9, align 8
  %149 = select i1 %147, i8* %148, i8* %8
  %150 = load i64, i64* %10, align 8
  %151 = zext i8 %146 to i64
  %152 = select i1 %147, i64 %150, i64 %151
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %6, i8* %149, i64 %152) #9
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* nonnull %6) #9
  call void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* sret %0, %"class.base::FilePath"* nonnull %5) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #9
  %153 = load i8, i8* %145, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %140
  %156 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %156) #10
  br label %157

157:                                              ; preds = %140, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  br label %171

158:                                              ; preds = %3
  %159 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %158
  %164 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %165 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 24, i1 false) #9
  br label %171

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %170) #9
  br label %171

171:                                              ; preds = %166, %163, %157
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #2

declare void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigC1ERKS2_(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TraceConfig16MemoryDumpConfigD1Ev(%"struct.base::trace_event::TraceConfig::MemoryDumpConfig"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
