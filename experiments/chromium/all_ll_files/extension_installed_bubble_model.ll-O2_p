; ModuleID = '../../chrome/browser/ui/extensions/extension_installed_bubble_model.cc'
source_filename = "../../chrome/browser/ui/extensions/extension_installed_bubble_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExtensionInstalledBubbleModel = type { i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %class.SkBitmap, %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.8 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.29", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.40" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.35" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.46", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::vector.68", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", i8, %"class.std::__1::basic_string.9", %"class.std::__1::unique_ptr.88", %"class.std::__1::map.129", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.9" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.70" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string.9", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.75" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.81" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i32*, i32*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i32* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string.9", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string.9" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.94" }
%"union.absl::variant_internal::DestructibleUnionImpl.94" = type { %"union.absl::variant_internal::DestructibleUnionImpl.95" }
%"union.absl::variant_internal::DestructibleUnionImpl.95" = type { %"union.absl::variant_internal::DestructibleUnionImpl.96" }
%"union.absl::variant_internal::DestructibleUnionImpl.96" = type { %"union.absl::variant_internal::DestructibleUnionImpl.97" }
%"union.absl::variant_internal::DestructibleUnionImpl.97" = type { %"class.std::__1::basic_string.9" }
%"class.std::__1::map.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string.9" }
%"class.extensions::Command" = type <{ %"class.std::__1::basic_string.9", %"class.ui::Accelerator", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.140 }
%union.anon.140 = type { %"class.extensions::Command" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.13 }
%struct.anon.13 = type { i8 }
%"struct.extensions::ActionInfo" = type <{ i32, [4 x i8], %class.ExtensionIconSet, %"class.std::__1::basic_string.9", %class.GURL, i32, i8, [3 x i8] }>
%class.ExtensionIconSet = type { %"class.std::__1::map.141" }
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.extensions::CommandService" = type { %"class.extensions::BrowserContextKeyedAPI", %"class.extensions::ExtensionRegistryObserver", %class.Profile*, %"class.base::ScopedObservation", %"class.base::ObserverList.173" }
%"class.extensions::BrowserContextKeyedAPI" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionRegistryObserver" = type { i32 (...)** }
%"class.base::ScopedObservation" = type { %"class.extensions::ExtensionRegistryObserver"*, %"class.extensions::ExtensionRegistry"* }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList.162", %"class.content::BrowserContext"* }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.153" }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.base::ObserverList.162" = type <{ %"class.std::__1::vector.163", %"class.base::LinkedList.170", i64, i32, [4 x i8] }>
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.165" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.170" = type { %"class.base::LinkNode.171" }
%"class.base::LinkNode.171" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.173" = type <{ %"class.std::__1::vector.163", %"class.base::LinkedList.174", i64, i32, [4 x i8] }>
%"class.base::LinkedList.174" = type { %"class.base::LinkNode.175" }
%"class.base::LinkNode.175" = type { %"class.base::internal::LinkNodeBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.gfx::Size" = type { i32, i32 }

@_ZN29ExtensionInstalledBubbleModelC1EP7ProfilePKN10extensions9ExtensionERK8SkBitmap = hidden unnamed_addr alias void (%class.ExtensionInstalledBubbleModel*, %class.Profile*, %"class.extensions::Extension"*, %class.SkBitmap*), void (%class.ExtensionInstalledBubbleModel*, %class.Profile*, %"class.extensions::Extension"*, %class.SkBitmap*)* @_ZN29ExtensionInstalledBubbleModelC2EP7ProfilePKN10extensions9ExtensionERK8SkBitmap
@_ZN29ExtensionInstalledBubbleModelD1Ev = hidden unnamed_addr alias void (%class.ExtensionInstalledBubbleModel*), void (%class.ExtensionInstalledBubbleModel*)* @_ZN29ExtensionInstalledBubbleModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExtensionInstalledBubbleModelC2EP7ProfilePKN10extensions9ExtensionERK8SkBitmap(%class.ExtensionInstalledBubbleModel*, %class.Profile*, %"class.extensions::Extension"*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.extensions::Command", align 8
  %9 = alloca %"class.absl::optional", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.absl::optional", align 8
  %12 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 3
  %16 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 4
  %17 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 5
  %18 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 6
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #8
  %20 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 6, i1 false)
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %20, %class.SkBitmap* dereferenceable(56) %3) #8
  %21 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 8
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %2) #8
  %23 = bitcast %"class.std::__1::basic_string.9"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %4
  %28 = bitcast %"class.std::__1::basic_string.9"* %21 to i8*
  %29 = bitcast %"class.std::__1::basic_string.9"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #8
  br label %35

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.9"* %21, i8* %32, i64 %34) #8
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 9
  %37 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %2, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string.9"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::basic_string.9"* %36 to i8*
  %44 = bitcast %"class.std::__1::basic_string.9"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #8
  br label %50

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.9"* %36, i8* %47, i64 %49) #8
  br label %50

50:                                               ; preds = %42, %45
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZN10extensions11OmniboxInfo10GetKeywordEPKNS_9ExtensionE(%"class.extensions::Extension"* %2) #8
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %52) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 96, i1 false)
  %53 = tail call %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo22GetExtensionActionInfoEPKNS_9ExtensionE(%"class.extensions::Extension"* %2) #8, !noalias !2
  %54 = icmp eq %"struct.extensions::ActionInfo"* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  store i8 0, i8* %52, align 8, !alias.scope !2
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = bitcast %union.anon.140* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 88, i1 false) #8, !alias.scope !2
  br label %72

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.Profile, %class.Profile* %1, i64 0, i32 0
  %60 = tail call %"class.extensions::CommandService"* @_ZN10extensions14CommandService3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %59) #8, !noalias !2
  %61 = bitcast %"class.extensions::Command"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %61) #8, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 88, i1 false) #8, !noalias !2
  call void @_ZN10extensions7CommandC1Ev(%"class.extensions::Command"* nonnull %8) #8, !noalias !2
  %62 = call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %2) #8, !noalias !2
  %63 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %53, i64 0, i32 0
  %64 = load i32, i32* %63, align 8, !noalias !2
  %65 = call zeroext i1 @_ZNK10extensions14CommandService25GetExtensionActionCommandERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_10ActionInfo4TypeENS0_9QueryTypeEPNS_7CommandEPb(%"class.extensions::CommandService"* %60, %"class.std::__1::basic_string.9"* dereferenceable(24) %62, i32 %64, i32 1, %"class.extensions::Command"* nonnull %8, i8* null) #8, !noalias !2
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  store i8 1, i8* %52, align 8, !alias.scope !2
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions7CommandC1ERKS0_(%"class.extensions::Command"* %67, %"class.extensions::Command"* nonnull dereferenceable(88) %8) #8
  br label %71

68:                                               ; preds = %58
  store i8 0, i8* %52, align 8, !alias.scope !2
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %70 = bitcast %union.anon.140* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #8, !alias.scope !2
  br label %71

71:                                               ; preds = %68, %66
  call void @_ZN10extensions7CommandD1Ev(%"class.extensions::Command"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %61) #8, !noalias !2
  br label %72

72:                                               ; preds = %55, %71
  %73 = call %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo22GetExtensionActionInfoEPKNS_9ExtensionE(%"class.extensions::Extension"* %2) #8
  %74 = icmp eq %"struct.extensions::ActionInfo"* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  store i8 0, i8* %12, align 8
  br label %81

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %73, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp ne i32 %78, 0
  %80 = zext i1 %79 to i8
  store i8 %80, i8* %12, align 8
  br i1 %79, label %92, label %81

81:                                               ; preds = %75, %76
  %82 = bitcast %"class.std::__1::basic_string.9"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %84 to i64
  %89 = select i1 %85, i64 %87, i64 %88
  %90 = icmp ne i64 %89, 0
  %91 = zext i1 %90 to i8
  store i8 %91, i8* %13, align 1
  br label %98

92:                                               ; preds = %76
  store i8 0, i8* %13, align 1
  %93 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %73, i64 0, i32 6
  %94 = load i8, i8* %93, align 4, !range !5
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %110, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::basic_string.9"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %98

98:                                               ; preds = %96, %81
  %99 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %97, %96 ], [ %82, %81 ]
  %100 = phi i8 [ 0, %96 ], [ %91, %81 ]
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i64 %105, i64 %106
  %108 = icmp ne i64 %107, 0
  %109 = zext i1 %108 to i8
  br label %110

110:                                              ; preds = %92, %98
  %111 = phi i8 [ 0, %92 ], [ %100, %98 ]
  %112 = phi i8 [ 1, %92 ], [ %109, %98 ]
  store i8 %112, i8* %14, align 2
  %113 = load i8, i8* %52, align 8, !range !5
  %114 = icmp eq i8 %113, 0
  %115 = select i1 %114, i8 1, i8 %111
  store i8 %115, i8* %15, align 1
  store i8 %113, i8* %16, align 4
  %116 = getelementptr inbounds %class.Profile, %class.Profile* %1, i64 0, i32 0
  %117 = call zeroext i1 @_ZN10extensions4util10ShouldSyncEPKNS_9ExtensionEPN7content14BrowserContextE(%"class.extensions::Extension"* %2, %"class.content::BrowserContext"* %116) #8
  br i1 %117, label %118, label %121

118:                                              ; preds = %110
  %119 = call zeroext i1 @_ZN11SyncPromoUI19ShouldShowSyncPromoEP7Profile(%class.Profile* %1) #8
  %120 = zext i1 %119 to i8
  br label %121

121:                                              ; preds = %118, %110
  %122 = phi i8 [ 0, %110 ], [ %120, %118 ]
  store i8 %122, i8* %17, align 1
  %123 = load i8, i8* %14, align 2, !range !5
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %239, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #8
  %127 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 96, i1 false) #8
  %128 = load i8, i8* %52, align 8, !range !5
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %125
  %131 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #8, !noalias !6
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 24, i1 false) #8, !noalias !6
  br label %148

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %135 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions7CommandC1ERKS0_(%"class.extensions::Command"* %135, %"class.extensions::Command"* dereferenceable(88) %134) #8
  store i8 1, i8* %127, align 8
  %136 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #8, !noalias !6
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #8, !noalias !6
  %138 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #8, !noalias !6
  %139 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  call void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.ui::Accelerator"* %139) #8
  %140 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %140, i64 0, i32 1, i32 1
  %142 = load i8, i8* %141, align 1, !noalias !6
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %133
  %145 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %146 = load i8*, i8** %145, align 8, !noalias !6
  call void @_ZdlPv(i8* %146) #9
  br label %147

147:                                              ; preds = %144, %133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* nonnull align 8 %138, i64 24, i1 false) #8, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #8, !noalias !6
  br label %148

148:                                              ; preds = %130, %147
  %149 = phi i64* [ %137, %147 ], [ %132, %130 ]
  %150 = phi i8* [ %136, %147 ], [ %131, %130 ]
  br i1 %74, label %174, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"struct.extensions::ActionInfo", %"struct.extensions::ActionInfo"* %73, i64 0, i32 0
  %153 = load i32, i32* %152, align 8, !noalias !6
  switch i32 %153, label %174 [
    i32 1, label %154
    i32 2, label %164
  ]

154:                                              ; preds = %151
  %155 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %155, i64 0, i32 1, i32 1
  %157 = load i8, i8* %156, align 1, !noalias !6
  %158 = icmp slt i8 %157, 0
  %159 = load i64, i64* %149, align 8, !noalias !6
  %160 = zext i8 %157 to i64
  %161 = select i1 %158, i64 %159, i64 %160
  %162 = icmp eq i64 %161, 0
  %163 = select i1 %162, i32 7487, i32 7488
  br label %203

164:                                              ; preds = %151
  %165 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1, !noalias !6
  %168 = icmp slt i8 %167, 0
  %169 = load i64, i64* %149, align 8, !noalias !6
  %170 = zext i8 %167 to i64
  %171 = select i1 %168, i64 %169, i64 %170
  %172 = icmp eq i64 %171, 0
  %173 = select i1 %172, i32 7485, i32 7486
  br label %203

174:                                              ; preds = %151, %148
  %175 = bitcast %"class.std::__1::basic_string.9"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1, !noalias !6
  %178 = icmp slt i8 %177, 0
  %179 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %180 = load i64, i64* %179, align 8, !noalias !6
  %181 = zext i8 %177 to i64
  %182 = select i1 %178, i64 %180, i64 %181
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %201, label %184

184:                                              ; preds = %174
  %185 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #8, !noalias !6
  %186 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8, !noalias !6
  %188 = bitcast %"class.std::__1::basic_string.9"* %51 to i8*
  %189 = select i1 %178, i8* %187, i8* %188
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %189, i64 %182) #8
  %190 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1, !noalias !6
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %184
  %195 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %196 = load i8*, i8** %195, align 8, !noalias !6
  call void @_ZdlPv(i8* %196) #9
  br label %197

197:                                              ; preds = %194, %184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %150, i8* nonnull align 8 %185, i64 24, i1 false) #8, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #8, !noalias !6
  %198 = load i8, i8* %191, align 1, !noalias !6
  %199 = load i64, i64* %149, align 8, !noalias !6
  %200 = zext i8 %198 to i64
  br label %203

201:                                              ; preds = %174
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 24, i1 false) #8, !alias.scope !6
  %202 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %214

203:                                              ; preds = %197, %164, %154
  %204 = phi i64 [ %160, %154 ], [ %170, %164 ], [ %200, %197 ]
  %205 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %155, %154 ], [ %165, %164 ], [ %190, %197 ]
  %206 = phi i64 [ %159, %154 ], [ %169, %164 ], [ %199, %197 ]
  %207 = phi i8 [ %157, %154 ], [ %167, %164 ], [ %198, %197 ]
  %208 = phi i32 [ %163, %154 ], [ %173, %164 ], [ 7489, %197 ]
  %209 = icmp slt i8 %207, 0
  %210 = select i1 %209, i64 %206, i64 %204
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %203
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %10, i32 %208) #8
  br label %214

213:                                              ; preds = %203
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i32 %208, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  br label %214

214:                                              ; preds = %213, %212, %201
  %215 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %205, %212 ], [ %205, %213 ], [ %202, %201 ]
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %215, i64 0, i32 1, i32 1
  %217 = load i8, i8* %216, align 1, !noalias !6
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %214
  %220 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %221 = load i8*, i8** %220, align 8, !noalias !6
  call void @_ZdlPv(i8* %221) #9
  br label %222

222:                                              ; preds = %214, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #8, !noalias !6
  %223 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  %228 = bitcast %"class.std::__1::basic_string"* %18 to i8**
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #9
  br label %230

230:                                              ; preds = %227, %222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %126, i64 24, i1 false) #8
  %231 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %231, i64 0, i32 1, i32 1
  store i8 0, i8* %232, align 1
  %233 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  store i16 0, i16* %233, align 8
  %234 = load i8, i8* %127, align 8, !range !5
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions7CommandD1Ev(%"class.extensions::Command"* %237) #8
  store i8 0, i8* %127, align 8
  br label %238

238:                                              ; preds = %230, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #8
  br label %239

239:                                              ; preds = %121, %238
  %240 = load i8, i8* %52, align 8, !range !5
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions7CommandD1Ev(%"class.extensions::Command"* %243) #8
  store i8 0, i8* %52, align 8
  br label %244

244:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %52) #8
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZN10extensions11OmniboxInfo10GetKeywordEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"struct.extensions::ActionInfo"* @_ZN10extensions10ActionInfo22GetExtensionActionInfoEPKNS_9ExtensionE(%"class.extensions::Extension"*) local_unnamed_addr #1

declare zeroext i1 @_ZN10extensions4util10ShouldSyncEPKNS_9ExtensionEPN7content14BrowserContextE(%"class.extensions::Extension"*, %"class.content::BrowserContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN11SyncPromoUI19ShouldShowSyncPromoEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExtensionInstalledBubbleModelD2Ev(%class.ExtensionInstalledBubbleModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 9
  %3 = bitcast %"class.std::__1::basic_string.9"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::basic_string.9"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 7
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %20) #8
  %21 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %0, i64 0, i32 6
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %19, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29ExtensionInstalledBubbleModel15GetHowToUseTextEv(%"class.std::__1::basic_string"* noalias sret, %class.ExtensionInstalledBubbleModel* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %1, i64 0, i32 6
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #8
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %25) #10
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #9
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = sub i64 %41, %52
  %54 = getelementptr i16, i16* %13, i64 %52
  %55 = getelementptr i16, i16* %40, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %13, i64 %64
  %67 = getelementptr i16, i16* %40, i64 %64
  %68 = bitcast i16* %66 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !9
  %70 = getelementptr i16, i16* %66, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !9
  %73 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !12, !noalias !9
  %74 = getelementptr i16, i16* %67, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !12, !noalias !9
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %13, i64 %76
  %78 = getelementptr i16, i16* %40, i64 %76
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !9
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !9
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !12, !noalias !9
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !12, !noalias !9
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %13, i64 %87
  %89 = getelementptr i16, i16* %40, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !9
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !9
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !12, !noalias !9
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !12, !noalias !9
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %13, i64 %98
  %100 = getelementptr i16, i16* %40, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !9
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !9
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !12, !noalias !9
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !12, !noalias !9
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !14

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %13, i64 %116
  %119 = getelementptr i16, i16* %40, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !9
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !9
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !12, !noalias !9
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !12, !noalias !9
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !16

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %53, %131 ]
  %135 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %55, %131 ]
  %137 = add i64 %134, -1
  %138 = and i64 %134, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %146, %140 ], [ %134, %133 ]
  %142 = phi i16* [ %148, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %147, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %142, align 2
  store i16 %145, i16* %143, align 2
  %146 = add i64 %141, -1
  %147 = getelementptr inbounds i16, i16* %143, i64 1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !18

151:                                              ; preds = %140, %133
  %152 = phi i64 [ %134, %133 ], [ %146, %140 ]
  %153 = phi i16* [ %135, %133 ], [ %148, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %147, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %182, %156 ], [ %152, %151 ]
  %158 = phi i16* [ %184, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %183, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %158, align 2
  store i16 %160, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %159, i64 1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %159, i64 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %159, i64 3
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %159, i64 4
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %159, i64 5
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %159, i64 6
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %159, i64 7
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %157, -8
  %183 = getelementptr inbounds i16, i16* %159, i64 8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !19

186:                                              ; preds = %151, %156, %131, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29ExtensionInstalledBubbleModel14MakeIconOfSizeERKN3gfx4SizeE(%"class.gfx::ImageSkia"* noalias sret, %class.ExtensionInstalledBubbleModel*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Size", align 4
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  %9 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %1, i64 0, i32 7
  %10 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %1, i64 0, i32 7, i32 1, i32 2, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.ExtensionInstalledBubbleModel, %class.ExtensionInstalledBubbleModel* %1, i64 0, i32 7, i32 1, i32 2, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %11, 0
  %15 = select i1 %14, i32 %11, i32 0
  store i32 %15, i32* %7, align 4
  %16 = icmp sgt i32 %13, 0
  %17 = select i1 %16, i32 %13, i32 0
  store i32 %17, i32* %8, align 4
  %18 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %15, %19
  %21 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %17, %22
  %24 = or i1 %20, %23
  br i1 %24, label %25, label %30

25:                                               ; preds = %3
  %26 = icmp sgt i32 %19, 0
  %27 = select i1 %26, i32 %19, i32 0
  store i32 %27, i32* %7, align 4
  %28 = icmp sgt i32 %22, 0
  %29 = select i1 %28, i32 %22, i32 0
  store i32 %29, i32* %8, align 4
  br label %30

30:                                               ; preds = %3, %25
  %31 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN3gfx9ImageSkia18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::ImageSkia"* nonnull sret %5, %class.SkBitmap* dereferenceable(56) %9) #8
  call void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* sret %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5, i32 2, %"class.gfx::Size"* nonnull dereferenceable(8) %4) #8
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

declare void @_ZN3gfx19ImageSkiaOperations18CreateResizedImageERKNS_9ImageSkiaEN4skia15ImageOperations12ResizeMethodERKNS_4SizeE(%"class.gfx::ImageSkia"* sret, %"class.gfx::ImageSkia"* dereferenceable(8), i32, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx9ImageSkia18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::ImageSkia"* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

declare %"class.extensions::CommandService"* @_ZN10extensions14CommandService3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare void @_ZN10extensions7CommandC1Ev(%"class.extensions::Command"*) unnamed_addr #1

declare zeroext i1 @_ZNK10extensions14CommandService25GetExtensionActionCommandERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_10ActionInfo4TypeENS0_9QueryTypeEPNS_7CommandEPb(%"class.extensions::CommandService"*, %"class.std::__1::basic_string.9"* dereferenceable(24), i32, i32, %"class.extensions::Command"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions7CommandD1Ev(%"class.extensions::Command"*) unnamed_addr #3

declare void @_ZN10extensions7CommandC1ERKS0_(%"class.extensions::Command"*, %"class.extensions::Command"* dereferenceable(88)) unnamed_addr #1

declare void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string"* sret, %"class.ui::Accelerator"*) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.9"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_125CommandForExtensionActionEPKN10extensions9ExtensionEP7Profile: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_125CommandForExtensionActionEPKN10extensions9ExtensionEP7Profile"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN12_GLOBAL__N_116MakeHowToUseTextEPKN10extensions10ActionInfoEN4absl8optionalINS0_7CommandEEERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE: argument 0"}
!8 = distinct !{!8, !"_ZN12_GLOBAL__N_116MakeHowToUseTextEPKN10extensions10ActionInfoEN4absl8optionalINS0_7CommandEEERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
