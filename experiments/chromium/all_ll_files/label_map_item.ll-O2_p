; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/label_map_item.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/vision/core/label_map_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tflite::support::StatusOr" = type { %"class.tflite::support::internal_statusor::StatusOrData" }
%"class.tflite::support::internal_statusor::StatusOrData" = type { %union.anon, %union.anon.0 }
%union.anon = type { %"class.absl::Status" }
%"class.absl::Status" = type { i64 }
%union.anon.0 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"*, %"class.std::__1::__compressed_pair.10" }
%"struct.tflite::task::vision::LabelMapItem" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1 }
%union.anon.1 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.tflite::task::vision::LabelMapItem"* }
%"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46" = type { i8 }
%"class.absl::str_format_internal::FormatArgImpl" = type { %"union.absl::str_format_internal::FormatArgImpl::Data", i1 (i8*, i64, i32, i8*)* }
%"union.absl::str_format_internal::FormatArgImpl::Data" = type { i8* }
%"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer" = type { i8 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.17" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.absl::string_view"* }
%"class.absl::strings_internal::Splitter" = type <{ %"class.absl::string_view", %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.absl::ByChar" = type { i8 }
%"struct.absl::AllowEmpty" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__split_buffer.43" = type { %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::allocator.13"* }
%"class.std::__1::allocator.13" = type { i8 }
%"class.tflite::task::vision::LabelHierarchy" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.35" }
%"struct.std::__1::pair.35" = type { %"class.std::__1::basic_string", %"class.absl::flat_hash_set" }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.29" }
%"class.absl::container_internal::raw_hash_set.29" = type { i8*, %"class.std::__1::basic_string"*, i64, i64, %"class.absl::container_internal::CompressedTuple.30" }
%"class.absl::container_internal::CompressedTuple.30" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.31" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.31" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.std::__1::array" = type { [16 x %struct.raw_view] }
%struct.raw_view = type { i8*, i64 }
%"class.absl::strings_internal::SplitIterator" = type <{ i64, i32, [4 x i8], %"class.absl::string_view", %"class.absl::strings_internal::Splitter"*, %"class.absl::ByChar", %"struct.absl::AllowEmpty", [6 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator.26" = type { i8 }

$_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE5clearEv = comdat any

$_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_ = comdat any

$_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_ = comdat any

$_ZNSt3__113__vector_baseIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE5clearEv = comdat any

$_ZNSt3__114__split_bufferIN6tflite4task6vision12LabelMapItemERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_ = comdat any

$_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_ = comdat any

$_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENSC_ISE_EEEESE_Lb0EEclERKS5_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE13destroy_slotsEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE14prepare_insertEm = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE22find_or_prepare_insertIS9_EENS3_4pairImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE4findIS9_EENSF_8iteratorERKT_m = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE4findIS9_EENSL_8iteratorERKT_m = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.str = private unnamed_addr constant [32 x i8] c"Expected non-empty labels file.\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"Mismatch between number of labels (%d) and display names (%d).\00", align 1
@.str.2 = private unnamed_addr constant [75 x i8] c"Input labelmap is not hierarchical: there is no parent-child relationship.\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str.4 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision22BuildLabelMapFromFilesEN4absl11string_viewES3_(%"class.tflite::support::StatusOr"* noalias sret, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46", align 1
  %7 = alloca [2 x %"class.absl::str_format_internal::FormatArgImpl"], align 8
  %8 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %9 = alloca %"class.absl::Status", align 8
  %10 = alloca %"class.std::__1::vector.15", align 8
  %11 = alloca %"class.absl::strings_internal::Splitter", align 8
  %12 = alloca %"class.std::__1::vector", align 16
  %13 = alloca %"struct.tflite::task::vision::LabelMapItem", align 8
  %14 = alloca %"class.std::__1::vector.3", align 8
  %15 = alloca %"class.absl::strings_internal::Splitter", align 8
  %16 = alloca %"class.absl::Status", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = icmp eq i64 %2, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %5
  %20 = bitcast %"class.absl::Status"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %9, i32 3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i64 31, i32 2) #11
  %21 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %9, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %21, align 8
  store i64 54, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31, !prof !2

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %26) #11
  %27 = load i64, i64* %22, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %27) #11
  br label %31

31:                                               ; preds = %19, %25, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %407

32:                                               ; preds = %5
  %33 = bitcast %"class.std::__1::vector.15"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %10, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %10, i64 0, i32 0, i32 1
  %36 = bitcast %"class.absl::strings_internal::Splitter"* %11 to i8*
  %37 = bitcast %"class.std::__1::vector.15"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %38 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %11, i64 0, i32 0, i32 0
  store i8* %1, i8** %38, align 8, !alias.scope !3
  %39 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %11, i64 0, i32 0, i32 1
  store i64 %2, i64* %39, align 8, !alias.scope !3
  %40 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %11, i64 0, i32 1, i32 0
  store i8 10, i8* %40, align 8, !alias.scope !3
  %41 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #11, !noalias !6
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.15"* nonnull sret %10, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %8, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #11, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %42 = bitcast %"class.absl::string_view"** %35 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 4
  %48 = add nsw i64 %47, -1
  %49 = inttoptr i64 %45 to %"class.absl::string_view"*
  %50 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %49, i64 %48, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %32
  %54 = inttoptr i64 %43 to %"class.absl::string_view"*
  %55 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 -1
  store %"class.absl::string_view"* %55, %"class.absl::string_view"** %35, align 8
  %56 = ptrtoint %"class.absl::string_view"* %55 to i64
  %57 = sub i64 %56, %45
  %58 = ashr exact i64 %57, 4
  br label %59

59:                                               ; preds = %53, %32
  %60 = phi i64 [ %58, %53 ], [ %47, %32 ]
  %61 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 24, i1 false) #11
  call void @_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector"* nonnull %12, i64 %60)
  %65 = load i64, i64* %42, align 8
  %66 = load i64, i64* %44, align 8
  %67 = icmp eq i64 %65, %66
  br i1 %67, label %91, label %68

68:                                               ; preds = %59
  %69 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %13 to i8*
  %70 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %77 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 2
  %78 = bitcast %"class.std::__1::vector.3"* %77 to i8*
  %79 = bitcast %"class.std::__1::vector.3"* %77 to i64*
  %80 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 2, i32 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"** %80 to i64*
  %82 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %13, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.std::__1::basic_string"** %82 to i64*
  %84 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %63 to i64*
  %85 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %77, i64 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::vector.3"* %77 to i8**
  %87 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  br label %93

91:                                               ; preds = %175, %59
  %92 = icmp eq i64 %4, 0
  br i1 %92, label %383, label %182

93:                                               ; preds = %68, %175
  %94 = phi i64 [ %66, %68 ], [ %178, %175 ]
  %95 = phi i64 [ 0, %68 ], [ %176, %175 ]
  %96 = inttoptr i64 %94 to %"class.absl::string_view"*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %69) #11
  %97 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %96, i64 %95, i32 0
  %98 = load i8*, i8** %97, align 8, !noalias !9
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #11, !alias.scope !9
  br label %122

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %96, i64 %95, i32 1
  %103 = load i64, i64* %102, align 8, !noalias !9
  %104 = icmp ugt i64 %103, -17
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %106) #14
  unreachable

107:                                              ; preds = %101
  %108 = icmp ult i64 %103, 23
  br i1 %108, label %114, label %109

109:                                              ; preds = %107
  %110 = add nuw i64 %103, 16
  %111 = and i64 %110, -16
  %112 = call i8* @_Znwm(i64 %111) #15
  store i8* %112, i8** %70, align 8, !alias.scope !9
  %113 = or i64 %111, -9223372036854775808
  store i64 %113, i64* %71, align 8, !alias.scope !9
  store i64 %103, i64* %72, align 8, !alias.scope !9
  br label %117

114:                                              ; preds = %107
  %115 = trunc i64 %103 to i8
  store i8 %115, i8* %74, align 1, !alias.scope !9
  %116 = icmp eq i64 %103, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114, %109
  %118 = phi i8* [ %112, %109 ], [ %69, %114 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* nonnull align 1 %98, i64 %103, i1 false) #11
  br label %119

119:                                              ; preds = %117, %114
  %120 = phi i8* [ %69, %114 ], [ %118, %117 ]
  %121 = getelementptr inbounds i8, i8* %120, i64 %103
  store i8 0, i8* %121, align 1
  br label %122

122:                                              ; preds = %100, %119
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 48, i1 false)
  %123 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %63, align 8
  %124 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %64, align 16
  %125 = icmp ult %"struct.tflite::task::vision::LabelMapItem"* %123, %124
  br i1 %125, label %126, label %142

126:                                              ; preds = %122
  %127 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %69, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #11
  %128 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %123, i64 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %76, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #11
  %130 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %123, i64 0, i32 2
  %131 = bitcast %"class.std::__1::vector.3"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #11
  %132 = load i64, i64* %79, align 8
  %133 = bitcast %"class.std::__1::vector.3"* %130 to i64*
  store i64 %132, i64* %133, align 8
  %134 = load i64, i64* %81, align 8
  %135 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %123, i64 0, i32 2, i32 0, i32 1
  %136 = bitcast %"class.std::__1::basic_string"** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = load i64, i64* %83, align 8
  %138 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %123, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"class.std::__1::basic_string"** %138 to i64*
  store i64 %137, i64* %139, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #11
  %140 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %123, i64 1
  %141 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %140 to i64
  store i64 %141, i64* %84, align 8
  br label %165

142:                                              ; preds = %122
  call void @_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector"* nonnull %12, %"struct.tflite::task::vision::LabelMapItem"* nonnull dereferenceable(72) %13) #11
  %143 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %85, align 8
  %144 = icmp eq %"class.std::__1::basic_string"* %143, null
  br i1 %144, label %165, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  %147 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %80, align 8
  %148 = icmp eq %"class.std::__1::basic_string"* %147, %143
  br i1 %148, label %163, label %149

149:                                              ; preds = %145, %159
  %150 = phi %"class.std::__1::basic_string"* [ %151, %159 ], [ %147, %145 ]
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 -1
  %152 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #15
  br label %159

159:                                              ; preds = %156, %149
  %160 = icmp eq %"class.std::__1::basic_string"* %151, %143
  br i1 %160, label %161, label %149

161:                                              ; preds = %159
  %162 = load i8*, i8** %86, align 8
  br label %163

163:                                              ; preds = %161, %145
  %164 = phi i8* [ %162, %161 ], [ %146, %145 ]
  store %"class.std::__1::basic_string"* %143, %"class.std::__1::basic_string"** %80, align 8
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %126, %163, %142
  %166 = load i8, i8* %88, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %169) #15
  br label %170

170:                                              ; preds = %168, %165
  %171 = load i8, i8* %74, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  %174 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %174) #15
  br label %175

175:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %69) #11
  %176 = add nuw i64 %95, 1
  %177 = load i64, i64* %42, align 8
  %178 = load i64, i64* %44, align 8
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 4
  %181 = icmp ugt i64 %180, %176
  br i1 %181, label %93, label %91

182:                                              ; preds = %91
  %183 = bitcast %"class.std::__1::vector.3"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #11
  %184 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 1
  %186 = bitcast %"class.absl::strings_internal::Splitter"* %15 to i8*
  %187 = bitcast %"class.std::__1::vector.3"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #11
  %188 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %15, i64 0, i32 0, i32 0
  store i8* %3, i8** %188, align 8, !alias.scope !12
  %189 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %15, i64 0, i32 0, i32 1
  store i64 %4, i64* %189, align 8, !alias.scope !12
  %190 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %15, i64 0, i32 1, i32 0
  store i8 10, i8* %190, align 8, !alias.scope !12
  %191 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %191) #11, !noalias !15
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENSC_ISE_EEEESE_Lb0EEclERKS5_(%"class.std::__1::vector.3"* nonnull sret %14, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46"* nonnull %6, %"class.absl::strings_internal::Splitter"* nonnull dereferenceable(24) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %191) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #11
  %192 = bitcast %"class.std::__1::basic_string"** %185 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector.3"* %14 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = sdiv exact i64 %196, 24
  %198 = add nsw i64 %197, -1
  %199 = inttoptr i64 %195 to %"class.std::__1::basic_string"*
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 %198
  %201 = bitcast %"class.std::__1::basic_string"* %200 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  %205 = inttoptr i64 %193 to %"class.std::__1::basic_string"*
  br i1 %204, label %206, label %209

206:                                              ; preds = %182
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 %198, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = load i64, i64* %207, align 8
  br label %211

209:                                              ; preds = %182
  %210 = zext i8 %203 to i64
  br label %211

211:                                              ; preds = %206, %209
  %212 = phi i64 [ %208, %206 ], [ %210, %209 ]
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %229

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 -1
  %216 = bitcast %"class.std::__1::basic_string"* %215 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %224

220:                                              ; preds = %214
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #15
  %223 = load i64, i64* %194, align 8
  br label %224

224:                                              ; preds = %214, %220
  %225 = phi i64 [ %195, %214 ], [ %223, %220 ]
  store %"class.std::__1::basic_string"* %215, %"class.std::__1::basic_string"** %185, align 8
  %226 = ptrtoint %"class.std::__1::basic_string"* %215 to i64
  %227 = sub i64 %226, %225
  %228 = sdiv exact i64 %227, 24
  br label %229

229:                                              ; preds = %224, %211
  %230 = phi i64 [ %228, %224 ], [ %197, %211 ]
  %231 = phi %"class.std::__1::basic_string"* [ %215, %224 ], [ %205, %211 ]
  %232 = phi i64 [ %226, %224 ], [ %193, %211 ]
  %233 = phi i64 [ %225, %224 ], [ %195, %211 ]
  %234 = load i64, i64* %42, align 8
  %235 = load i64, i64* %44, align 8
  %236 = sub i64 %234, %235
  %237 = ashr exact i64 %236, 4
  %238 = icmp eq i64 %230, %237
  br i1 %238, label %239, label %242

239:                                              ; preds = %229
  %240 = icmp eq i64 %232, %233
  %241 = inttoptr i64 %233 to %"class.std::__1::basic_string"*
  br i1 %240, label %357, label %310

242:                                              ; preds = %229
  %243 = bitcast %"class.absl::Status"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #11
  %244 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #11
  %245 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245) #11, !noalias !18
  %246 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7, i64 0, i64 0
  %247 = bitcast [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7 to i64*
  store i64 %237, i64* %247, align 8, !noalias !18
  %248 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7, i64 0, i64 0, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %248, align 8, !noalias !18
  %249 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7, i64 0, i64 1
  %250 = bitcast %"class.absl::str_format_internal::FormatArgImpl"* %249 to i64*
  store i64 %230, i64* %250, align 8, !noalias !18
  %251 = getelementptr inbounds [2 x %"class.absl::str_format_internal::FormatArgImpl"], [2 x %"class.absl::str_format_internal::FormatArgImpl"]* %7, i64 0, i64 1, i32 1
  store i1 (i8*, i64, i32, i8*)* @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv, i1 (i8*, i64, i32, i8*)** %251, align 8, !noalias !18
  call void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* nonnull sret %17, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i64 62, %"class.absl::str_format_internal::FormatArgImpl"* nonnull %246, i64 2) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245) #11, !noalias !18
  %252 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %259, label %256

256:                                              ; preds = %242
  %257 = zext i8 %254 to i64
  %258 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  br label %266

259:                                              ; preds = %242
  %260 = bitcast %"class.std::__1::basic_string"* %17 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = icmp sgt i64 %263, -1
  br i1 %264, label %266, label %265, !prof !21

265:                                              ; preds = %259
  call void @llvm.trap() #11
  unreachable

266:                                              ; preds = %256, %259
  %267 = phi i64 [ %261, %259 ], [ %258, %256 ]
  %268 = phi i64 [ %263, %259 ], [ %257, %256 ]
  %269 = inttoptr i64 %267 to i8*
  call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* nonnull sret %16, i32 3, i8* %269, i64 %268, i32 205) #11
  %270 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %271 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %16, i64 0, i32 0
  %272 = load i64, i64* %271, align 8
  store i64 %272, i64* %270, align 8
  store i64 54, i64* %271, align 8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %280, !prof !2

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"* %275) #11
  %276 = load i64, i64* %271, align 8
  %277 = and i64 %276, 1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %280, label %279

279:                                              ; preds = %274
  call void @_ZN4absl6Status15UnrefNonInlinedEm(i64 %276) #11
  br label %280

280:                                              ; preds = %266, %274, %279
  %281 = load i8, i8* %253, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %286

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load i8*, i8** %284, align 8
  call void @_ZdlPv(i8* %285) #15
  br label %286

286:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #11
  %287 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %184, align 8
  %288 = icmp eq %"class.std::__1::basic_string"* %287, null
  br i1 %288, label %393, label %289

289:                                              ; preds = %286
  %290 = bitcast %"class.std::__1::basic_string"* %287 to i8*
  %291 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %185, align 8
  %292 = icmp eq %"class.std::__1::basic_string"* %291, %287
  br i1 %292, label %308, label %293

293:                                              ; preds = %289, %303
  %294 = phi %"class.std::__1::basic_string"* [ %295, %303 ], [ %291, %289 ]
  %295 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %294, i64 -1
  %296 = bitcast %"class.std::__1::basic_string"* %295 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #15
  br label %303

303:                                              ; preds = %300, %293
  %304 = icmp eq %"class.std::__1::basic_string"* %295, %287
  br i1 %304, label %305, label %293

305:                                              ; preds = %303
  %306 = bitcast %"class.std::__1::vector.3"* %14 to i8**
  %307 = load i8*, i8** %306, align 8
  br label %308

308:                                              ; preds = %305, %289
  %309 = phi i8* [ %307, %305 ], [ %290, %289 ]
  store %"class.std::__1::basic_string"* %287, %"class.std::__1::basic_string"** %185, align 8
  call void @_ZdlPv(i8* %309) #15
  br label %393

310:                                              ; preds = %239, %346
  %311 = phi i64 [ %347, %346 ], [ 0, %239 ]
  %312 = phi %"class.std::__1::basic_string"* [ %353, %346 ], [ %241, %239 ]
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %312, i64 %311
  %314 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %62, align 16
  %315 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %314, i64 %311, i32 1
  %316 = icmp eq %"class.std::__1::basic_string"* %315, %313
  br i1 %316, label %346, label %317

317:                                              ; preds = %310
  %318 = bitcast %"class.std::__1::basic_string"* %315 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  %322 = bitcast %"class.std::__1::basic_string"* %313 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %323 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %322, i64 0, i32 1, i32 0
  %324 = load i8, i8* %323, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %321, label %336, label %326

326:                                              ; preds = %317
  br i1 %325, label %330, label %327

327:                                              ; preds = %326
  %328 = bitcast %"class.std::__1::basic_string"* %315 to i8*
  %329 = bitcast %"class.std::__1::basic_string"* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 %329, i64 24, i1 false) #11
  br label %346

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load i8*, i8** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %312, i64 %311, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %334 = load i64, i64* %333, align 8
  %335 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %315, i8* %332, i64 %334) #11
  br label %346

336:                                              ; preds = %317
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %313, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %312, i64 %311, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = bitcast %"class.std::__1::basic_string"* %313 to i8*
  %342 = zext i8 %324 to i64
  %343 = select i1 %325, i8* %338, i8* %341
  %344 = select i1 %325, i64 %340, i64 %342
  %345 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %315, i8* %343, i64 %344) #11
  br label %346

346:                                              ; preds = %310, %327, %330, %336
  %347 = add nuw i64 %311, 1
  %348 = load i64, i64* %192, align 8
  %349 = load i64, i64* %194, align 8
  %350 = sub i64 %348, %349
  %351 = sdiv exact i64 %350, 24
  %352 = icmp ugt i64 %351, %347
  %353 = inttoptr i64 %349 to %"class.std::__1::basic_string"*
  br i1 %352, label %310, label %354

354:                                              ; preds = %346
  %355 = inttoptr i64 %349 to %"class.std::__1::basic_string"*
  %356 = inttoptr i64 %348 to %"class.std::__1::basic_string"*
  br label %357

357:                                              ; preds = %239, %354
  %358 = phi %"class.std::__1::basic_string"* [ %356, %354 ], [ %231, %239 ]
  %359 = phi i64 [ %349, %354 ], [ %232, %239 ]
  %360 = phi %"class.std::__1::basic_string"* [ %355, %354 ], [ %241, %239 ]
  %361 = icmp eq i64 %359, 0
  br i1 %361, label %382, label %362

362:                                              ; preds = %357
  %363 = inttoptr i64 %359 to i8*
  %364 = icmp eq %"class.std::__1::basic_string"* %358, %360
  br i1 %364, label %380, label %365

365:                                              ; preds = %362, %375
  %366 = phi %"class.std::__1::basic_string"* [ %367, %375 ], [ %358, %362 ]
  %367 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %366, i64 -1
  %368 = bitcast %"class.std::__1::basic_string"* %367 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %369 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %368, i64 0, i32 1, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = icmp slt i8 %370, 0
  br i1 %371, label %372, label %375

372:                                              ; preds = %365
  %373 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %367, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load i8*, i8** %373, align 8
  call void @_ZdlPv(i8* %374) #15
  br label %375

375:                                              ; preds = %372, %365
  %376 = icmp eq %"class.std::__1::basic_string"* %367, %360
  br i1 %376, label %377, label %365

377:                                              ; preds = %375
  %378 = bitcast %"class.std::__1::vector.3"* %14 to i8**
  %379 = load i8*, i8** %378, align 8
  br label %380

380:                                              ; preds = %377, %362
  %381 = phi i8* [ %379, %377 ], [ %363, %362 ]
  store %"class.std::__1::basic_string"* %360, %"class.std::__1::basic_string"** %185, align 8
  call void @_ZdlPv(i8* %381) #15
  br label %382

382:                                              ; preds = %357, %380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #11
  br label %383

383:                                              ; preds = %91, %382
  %384 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0
  %385 = bitcast %"class.std::__1::vector"* %12 to <2 x i64>*
  %386 = load <2 x i64>, <2 x i64>* %385, align 16
  %387 = bitcast %"class.std::__1::vector"* %384 to <2 x i64>*
  store <2 x i64> %386, <2 x i64>* %387, align 8
  %388 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %64 to i64*
  %389 = load i64, i64* %388, align 16
  %390 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %391 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %390 to i64*
  store i64 %389, i64* %391, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 24, i1 false) #11
  %392 = getelementptr inbounds %"class.tflite::support::StatusOr", %"class.tflite::support::StatusOr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %392, align 8
  br label %400

393:                                              ; preds = %308, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #11
  %394 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %62, align 16
  %395 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %394, null
  br i1 %395, label %400, label %396

396:                                              ; preds = %393
  %397 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__vector_base"* nonnull %397) #11
  %398 = bitcast %"class.std::__1::vector"* %12 to i8**
  %399 = load i8*, i8** %398, align 16
  call void @_ZdlPv(i8* %399) #15
  br label %400

400:                                              ; preds = %383, %393, %396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  %401 = load %"class.absl::string_view"*, %"class.absl::string_view"** %34, align 8
  %402 = icmp eq %"class.absl::string_view"* %401, null
  br i1 %402, label %406, label %403

403:                                              ; preds = %400
  %404 = ptrtoint %"class.absl::string_view"* %401 to i64
  store i64 %404, i64* %42, align 8
  %405 = bitcast %"class.absl::string_view"* %401 to i8*
  call void @_ZdlPv(i8* %405) #15
  br label %406

406:                                              ; preds = %400, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %407

407:                                              ; preds = %406, %31
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret, i32, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.43", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 72
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"struct.tflite::task::vision::LabelMapItem"*
  br i1 %11, label %13, label %102

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 3, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 3, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %21 to i64*
  %23 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  %24 = load i64, i64* %22, align 8
  store %"struct.tflite::task::vision::LabelMapItem"* null, %"struct.tflite::task::vision::LabelMapItem"** %19, align 8
  %25 = bitcast %"class.std::__1::allocator.13"** %20 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %14, %"class.std::__1::__compressed_pair.10"** %25, align 8
  %26 = icmp ugt i64 %1, 256204778801521550
  %27 = inttoptr i64 %24 to %"struct.tflite::task::vision::LabelMapItem"*
  br i1 %26, label %28, label %29

28:                                               ; preds = %13
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %13
  %30 = sub i64 %24, %8
  %31 = sdiv exact i64 %30, 72
  %32 = mul i64 %1, 72
  %33 = tail call i8* @_Znwm(i64 %32) #15
  %34 = bitcast i8* %33 to %"struct.tflite::task::vision::LabelMapItem"*
  %35 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %34, i64 %31
  store %"struct.tflite::task::vision::LabelMapItem"* %36, %"struct.tflite::task::vision::LabelMapItem"** %18, align 8
  store %"struct.tflite::task::vision::LabelMapItem"* %36, %"struct.tflite::task::vision::LabelMapItem"** %17, align 8
  %37 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %34, i64 %1
  store %"struct.tflite::task::vision::LabelMapItem"* %37, %"struct.tflite::task::vision::LabelMapItem"** %19, align 8
  %38 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %27, %12
  %39 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %36 to i64
  br i1 %38, label %40, label %44

40:                                               ; preds = %29
  %41 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %37 to i64
  %42 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %18 to i64*
  %43 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %19 to i64*
  br label %85

44:                                               ; preds = %29, %44
  %45 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %73, %44 ], [ %36, %29 ]
  %46 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %48, %44 ], [ %27, %29 ]
  %47 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 -1
  %48 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 -1
  %49 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %47 to i8*
  %50 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #11
  %51 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 -1, i32 1
  %52 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 -1, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #11
  %55 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 -1, i32 2
  %56 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 -1, i32 2
  %57 = bitcast %"class.std::__1::vector.3"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11
  %58 = bitcast %"class.std::__1::vector.3"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.3"* %55 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 -1, i32 2, i32 0, i32 1
  %62 = bitcast %"class.std::__1::basic_string"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 -1, i32 2, i32 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.std::__1::basic_string"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.std::__1::basic_string"** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.std::__1::vector.3"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #11
  %72 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %17, align 8
  %73 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %72, i64 -1
  store %"struct.tflite::task::vision::LabelMapItem"* %73, %"struct.tflite::task::vision::LabelMapItem"** %17, align 8
  %74 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %48, %12
  br i1 %74, label %75, label %44

75:                                               ; preds = %44
  %76 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %73 to i64
  %77 = load i64, i64* %7, align 8
  %78 = load i64, i64* %22, align 8
  %79 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %18 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %5, align 8
  %82 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %19 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %77 to %"struct.tflite::task::vision::LabelMapItem"*
  br label %85

85:                                               ; preds = %40, %75
  %86 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %27, %40 ], [ %84, %75 ]
  %87 = phi i64* [ %43, %40 ], [ %82, %75 ]
  %88 = phi i64* [ %42, %40 ], [ %79, %75 ]
  %89 = phi i64 [ %41, %40 ], [ %83, %75 ]
  %90 = phi i64 [ %6, %40 ], [ %81, %75 ]
  %91 = phi i64 [ %39, %40 ], [ %80, %75 ]
  %92 = phi i64 [ %24, %40 ], [ %78, %75 ]
  %93 = phi i64 [ %39, %40 ], [ %76, %75 ]
  %94 = phi i64 [ %24, %40 ], [ %77, %75 ]
  %95 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %17 to i64*
  store i64 %93, i64* %7, align 8
  store i64 %94, i64* %95, align 8
  store i64 %91, i64* %22, align 8
  store i64 %92, i64* %88, align 8
  store i64 %89, i64* %5, align 8
  store i64 %90, i64* %87, align 8
  %96 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i64*
  store i64 %94, i64* %96, align 8
  call void @_ZNSt3__114__split_bufferIN6tflite4task6vision12LabelMapItemERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_(%"struct.std::__1::__split_buffer.43"* nonnull %3, %"struct.tflite::task::vision::LabelMapItem"* %86) #11
  %97 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %16, align 8
  %98 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %85
  %100 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %97 to i8*
  call void @_ZdlPv(i8* %100) #15
  br label %101

101:                                              ; preds = %85, %99
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #11
  br label %102

102:                                              ; preds = %101, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task6vision14LabelHierarchy22InitializeFromLabelMapENSt3__16vectorINS1_12LabelMapItemENS3_9allocatorIS5_EEEE(%"class.absl::Status"* noalias sret, %"class.tflite::task::vision::LabelHierarchy"*, %"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tflite::task::vision::LabelHierarchy", %"class.tflite::task::vision::LabelHierarchy"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"* %4)
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %6 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %8 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %7, align 8
  %9 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %6, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::task::vision::LabelHierarchy", %"class.tflite::task::vision::LabelHierarchy"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.tflite::task::vision::LabelHierarchy", %"class.tflite::task::vision::LabelHierarchy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %17

13:                                               ; preds = %31, %3
  %14 = getelementptr inbounds %"class.tflite::task::vision::LabelHierarchy", %"class.tflite::task::vision::LabelHierarchy"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %94, label %95

17:                                               ; preds = %10, %31
  %18 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %6, %10 ], [ %32, %31 ]
  %19 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 0, i32 2, i32 0, i32 1
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = icmp eq %"class.std::__1::basic_string"* %20, %22
  br i1 %23, label %31, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 0, i32 0
  %26 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %18 to i8*
  %29 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %34

31:                                               ; preds = %87, %17
  %32 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %18, i64 1
  %33 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %32, %8
  br i1 %33, label %13, label %17

34:                                               ; preds = %24, %87
  %35 = phi %"class.std::__1::basic_string"* [ %20, %24 ], [ %92, %87 ]
  %36 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %35) #11, !noalias !22
  %37 = extractvalue { i64, i8 } %36, 0
  %38 = extractvalue { i64, i8 } %36, 1
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %61, label %41

41:                                               ; preds = %34
  %42 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %11, align 8, !noalias !22
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %42, i64 %37
  %44 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1, !noalias !22
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"union.absl::container_internal::map_slot_type"* %43 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #11, !noalias !22
  br label %57

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %43, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8, !noalias !22
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !22
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %52, i8* %54, i64 %56) #11, !noalias !22
  br label %57

57:                                               ; preds = %51, %48
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %42, i64 %37, i32 0, i32 1, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %58, align 8, !noalias !22
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %42, i64 %37, i32 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #11, !noalias !22
  br label %61

61:                                               ; preds = %57, %34
  %62 = load i8*, i8** %12, align 8, !noalias !22
  %63 = getelementptr inbounds i8, i8* %62, i64 %37
  %64 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %11, align 8, !noalias !22
  %65 = icmp ne i8* %63, null
  tail call void @llvm.assume(i1 %65) #11, !noalias !22
  %66 = load i8, i8* %63, align 1
  %67 = icmp sgt i8 %66, -1
  br i1 %67, label %69, label %68, !prof !21

68:                                               ; preds = %61
  tail call void @llvm.trap() #11
  unreachable

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %64, i64 %37, i32 0, i32 1, i32 0
  %71 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE22find_or_prepare_insertIS9_EENS3_4pairImbEERKT_(%"class.absl::container_internal::raw_hash_set.29"* %70, %"class.std::__1::basic_string"* dereferenceable(24) %25) #11, !noalias !27
  %72 = extractvalue { i64, i8 } %71, 0
  %73 = extractvalue { i64, i8 } %71, 1
  %74 = and i8 %73, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %64, i64 %37, i32 0, i32 1, i32 0, i32 1
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8, !noalias !27
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 %72
  %80 = load i8, i8* %27, align 1, !noalias !27
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %28, i64 24, i1 false) #11, !noalias !27
  br label %87

84:                                               ; preds = %76
  %85 = load i8*, i8** %29, align 8, !noalias !27
  %86 = load i64, i64* %30, align 8, !noalias !27
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %79, i8* %85, i64 %86) #11, !noalias !27
  br label %87

87:                                               ; preds = %69, %82, %84
  %88 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %70, i64 0, i32 0
  %89 = load i8*, i8** %88, align 8, !noalias !27
  %90 = getelementptr inbounds i8, i8* %89, i64 %72
  %91 = icmp ne i8* %90, null
  tail call void @llvm.assume(i1 %91) #11, !noalias !27
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %93 = icmp eq %"class.std::__1::basic_string"* %92, %22
  br i1 %93, label %31, label %34

94:                                               ; preds = %13
  tail call void @_ZN6tflite7support23CreateStatusWithPayloadEN4absl10StatusCodeENS1_11string_viewENS0_19TfLiteSupportStatusE(%"class.absl::Status"* sret %0, i32 3, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.2, i64 0, i64 0), i64 74, i32 2) #11
  br label %97

95:                                               ; preds = %13
  %96 = getelementptr inbounds %"class.absl::Status", %"class.absl::Status"* %0, i64 0, i32 0
  store i64 0, i64* %96, align 8, !alias.scope !40
  br label %97

97:                                               ; preds = %95, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE5clearEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 127
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set"* %0)
  br label %77

6:                                                ; preds = %1
  %7 = icmp eq i64 %3, 0
  br i1 %7, label %77, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %25

11:                                               ; preds = %73
  %12 = add i64 %26, 17
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 -128, i64 %12, i1 false) #11
  %16 = load i8*, i8** %14, align 8
  %17 = load i64, i64* %2, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  store i8 -1, i8* %18, align 1
  %19 = load i64, i64* %2, align 8
  %20 = lshr i64 %19, 3
  %21 = sub i64 %19, %20
  %22 = load i64, i64* %13, align 8
  %23 = sub i64 %21, %22
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  br label %77

25:                                               ; preds = %8, %73
  %26 = phi i64 [ 0, %8 ], [ %74, %73 ]
  %27 = load i8*, i8** %9, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = load i8, i8* %28, align 1
  %30 = icmp sgt i8 %29, -1
  br i1 %30, label %31, label %73

31:                                               ; preds = %25
  %32 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %10, align 8
  %33 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26, i32 0, i32 1, i32 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26, i32 0, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %32, i64 %26, i32 0, i32 1, i32 0, i32 1
  br label %43

40:                                               ; preds = %61
  %41 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %41) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %38, align 8
  %42 = bitcast %"class.std::__1::basic_string"** %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #11
  br label %65

43:                                               ; preds = %61, %37
  %44 = phi i64 [ %35, %37 ], [ %62, %61 ]
  %45 = phi i64 [ 0, %37 ], [ %63, %61 ]
  %46 = load i8*, i8** %38, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = load i8, i8* %47, align 1
  %49 = icmp sgt i8 %48, -1
  br i1 %49, label %50, label %61

50:                                               ; preds = %43
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 %45
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #15
  %60 = load i64, i64* %34, align 8
  br label %61

61:                                               ; preds = %57, %50, %43
  %62 = phi i64 [ %60, %57 ], [ %44, %50 ], [ %44, %43 ]
  %63 = add i64 %45, 1
  %64 = icmp eq i64 %63, %62
  br i1 %64, label %40, label %43

65:                                               ; preds = %40, %31
  %66 = bitcast %"union.absl::container_internal::map_slot_type"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %70, %65, %25
  %74 = add i64 %26, 1
  %75 = load i64, i64* %2, align 8
  %76 = icmp eq i64 %74, %75
  br i1 %76, label %11, label %25

77:                                               ; preds = %6, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite4task6vision14LabelHierarchy34HaveAncestorDescendantRelationshipERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"class.tflite::task::vision::LabelHierarchy"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::flat_hash_set", align 8
  %5 = bitcast %"class.absl::flat_hash_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 3
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %9 = bitcast %"class.std::__1::basic_string"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #11
  call void @_ZNK6tflite4task6vision14LabelHierarchy12GetAncestorsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4absl13flat_hash_setIS9_NSC_18container_internal10StringHashENSE_12StringHashEq2EqENS7_IS9_EEEE(%"class.tflite::task::vision::LabelHierarchy"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.absl::flat_hash_set"* nonnull %4)
  %10 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = zext i8 %13 to i64
  %17 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %25

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %22, -1
  br i1 %23, label %25, label %24, !prof !21

24:                                               ; preds = %18
  call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %18, %15
  %26 = phi i64 [ %20, %18 ], [ %17, %15 ]
  %27 = phi i64 [ %22, %18 ], [ %16, %15 ]
  %28 = inttoptr i64 %26 to i8*
  %29 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %30 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %29, i8* %28, i64 %27) #11
  %31 = add i64 %30, %27
  %32 = zext i64 %31 to i128
  %33 = mul nuw i128 %32, 11376068507788127593
  %34 = lshr i128 %33, 64
  %35 = xor i128 %34, %33
  %36 = trunc i128 %35 to i64
  %37 = call { i8*, %"class.std::__1::basic_string"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE4findIS9_EENSF_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.29"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %36) #11
  %38 = extractvalue { i8*, %"class.std::__1::basic_string"* } %37, 0
  %39 = icmp eq i8* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %25
  %41 = load i8, i8* %38, align 1
  %42 = icmp sgt i8 %41, -1
  br i1 %42, label %44, label %43, !prof !21

43:                                               ; preds = %40
  call void @llvm.trap() #11
  unreachable

44:                                               ; preds = %25, %40
  %45 = icmp ne i8* %38, null
  %46 = load i64, i64* %8, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %72, label %50

48:                                               ; preds = %68
  %49 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %49) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #11
  br label %72

50:                                               ; preds = %44, %68
  %51 = phi i64 [ %69, %68 ], [ %46, %44 ]
  %52 = phi i64 [ %70, %68 ], [ 0, %44 ]
  %53 = load i8*, i8** %6, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = load i8, i8* %54, align 1
  %56 = icmp sgt i8 %55, -1
  br i1 %56, label %57, label %68

57:                                               ; preds = %50
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 %52
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #15
  %67 = load i64, i64* %8, align 8
  br label %68

68:                                               ; preds = %64, %57, %50
  %69 = phi i64 [ %67, %64 ], [ %51, %57 ], [ %51, %50 ]
  %70 = add i64 %52, 1
  %71 = icmp eq i64 %70, %69
  br i1 %71, label %48, label %50

72:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret i1 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6tflite4task6vision14LabelHierarchy12GetAncestorsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4absl13flat_hash_setIS9_NSC_18container_internal10StringHashENSE_12StringHashEq2EqENS7_IS9_EEEE(%"class.tflite::task::vision::LabelHierarchy"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::flat_hash_set"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.absl::flat_hash_set", align 8
  %5 = bitcast %"class.absl::flat_hash_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %4, i64 0, i32 0, i32 3
  %9 = bitcast %"class.absl::flat_hash_set"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @_ZNK6tflite4task6vision14LabelHierarchy10GetParentsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::flat_hash_set"* nonnull sret %4, %"class.tflite::task::vision::LabelHierarchy"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %10 = load i8*, i8** %6, align 8, !nonnull !43
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %12 = load i8, i8* %10, align 1
  %13 = icmp slt i8 %12, -1
  br i1 %13, label %14, label %29

14:                                               ; preds = %3, %14
  %15 = phi %"class.std::__1::basic_string"* [ %26, %14 ], [ %11, %3 ]
  %16 = phi i8* [ %25, %14 ], [ %10, %3 ]
  %17 = bitcast i8* %16 to <16 x i8>*
  %18 = load <16 x i8>, <16 x i8>* %17, align 1
  %19 = icmp slt <16 x i8> %18, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %20 = bitcast <16 x i1> %19 to i16
  %21 = zext i16 %20 to i32
  %22 = add nuw nsw i32 %21, 1
  %23 = call i32 @llvm.cttz.i32(i32 %22, i1 true) #11, !range !44
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %16, i64 %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 %24
  %27 = load i8, i8* %25, align 1
  %28 = icmp slt i8 %27, -1
  br i1 %28, label %14, label %29

29:                                               ; preds = %14, %3
  %30 = phi %"class.std::__1::basic_string"* [ %11, %3 ], [ %26, %14 ]
  %31 = phi i8* [ %10, %3 ], [ %25, %14 ]
  %32 = phi i8 [ %12, %3 ], [ %27, %14 ]
  %33 = icmp eq i8 %32, -1
  %34 = icmp eq i8* %31, null
  %35 = or i1 %33, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %2, i64 0, i32 0
  %38 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %2, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %2, i64 0, i32 0, i32 0
  %40 = icmp sgt i8 %32, -1
  br i1 %40, label %71, label %41, !prof !21

41:                                               ; preds = %131, %36
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %124, %29
  %43 = load i64, i64* %8, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %70, label %48

45:                                               ; preds = %66
  %46 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %46) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %47 = bitcast %"class.std::__1::basic_string"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #11
  br label %70

48:                                               ; preds = %42, %66
  %49 = phi i64 [ %67, %66 ], [ %43, %42 ]
  %50 = phi i64 [ %68, %66 ], [ 0, %42 ]
  %51 = load i8*, i8** %6, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  %53 = load i8, i8* %52, align 1
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %55, label %66

55:                                               ; preds = %48
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 %50
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #15
  %65 = load i64, i64* %8, align 8
  br label %66

66:                                               ; preds = %62, %55, %48
  %67 = phi i64 [ %65, %62 ], [ %49, %55 ], [ %49, %48 ]
  %68 = add i64 %50, 1
  %69 = icmp eq i64 %68, %67
  br i1 %69, label %45, label %48

70:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret void

71:                                               ; preds = %36, %131
  %72 = phi i8* [ %129, %131 ], [ %31, %36 ]
  %73 = phi %"class.std::__1::basic_string"* [ %126, %131 ], [ %30, %36 ]
  %74 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE22find_or_prepare_insertIS9_EENS3_4pairImbEERKT_(%"class.absl::container_internal::raw_hash_set.29"* %37, %"class.std::__1::basic_string"* dereferenceable(24) %73) #11, !noalias !45
  %75 = extractvalue { i64, i8 } %74, 0
  %76 = extractvalue { i64, i8 } %74, 1
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %94, label %79

79:                                               ; preds = %71
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8, !noalias !45
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 %75
  %82 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1, !noalias !45
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #11, !noalias !45
  br label %94

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8, !noalias !45
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8, !noalias !45
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %81, i8* %91, i64 %93) #11, !noalias !45
  br label %94

94:                                               ; preds = %71, %86, %89
  %95 = load i8*, i8** %39, align 8, !noalias !45
  %96 = getelementptr inbounds i8, i8* %95, i64 %75
  %97 = icmp ne i8* %96, null
  call void @llvm.assume(i1 %97) #11, !noalias !45
  %98 = icmp eq i8 %76, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %94
  call void @_ZNK6tflite4task6vision14LabelHierarchy12GetAncestorsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4absl13flat_hash_setIS9_NSC_18container_internal10StringHashENSE_12StringHashEq2EqENS7_IS9_EEEE(%"class.tflite::task::vision::LabelHierarchy"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %73, %"class.absl::flat_hash_set"* %2)
  br label %100

100:                                              ; preds = %99, %94
  %101 = load i8, i8* %72, align 1
  %102 = icmp sgt i8 %101, -1
  br i1 %102, label %104, label %103, !prof !21

103:                                              ; preds = %100
  call void @llvm.trap() #11
  unreachable

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8, i8* %72, i64 1
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %107 = load i8, i8* %105, align 1
  %108 = icmp slt i8 %107, -1
  br i1 %108, label %109, label %124

109:                                              ; preds = %104, %109
  %110 = phi %"class.std::__1::basic_string"* [ %121, %109 ], [ %106, %104 ]
  %111 = phi i8* [ %120, %109 ], [ %105, %104 ]
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1
  %114 = icmp slt <16 x i8> %113, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %115 = bitcast <16 x i1> %114 to i16
  %116 = zext i16 %115 to i32
  %117 = add nuw nsw i32 %116, 1
  %118 = call i32 @llvm.cttz.i32(i32 %117, i1 true) #11, !range !44
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %111, i64 %119
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 %119
  %122 = load i8, i8* %120, align 1
  %123 = icmp slt i8 %122, -1
  br i1 %123, label %109, label %124

124:                                              ; preds = %109, %104
  %125 = phi i8* [ %105, %104 ], [ %120, %109 ]
  %126 = phi %"class.std::__1::basic_string"* [ %106, %104 ], [ %121, %109 ]
  %127 = phi i8 [ %107, %104 ], [ %122, %109 ]
  %128 = icmp eq i8 %127, -1
  %129 = select i1 %128, i8* null, i8* %125, !prof !2
  %130 = icmp eq i8* %129, null
  br i1 %130, label %42, label %131

131:                                              ; preds = %124
  %132 = load i8, i8* %129, align 1
  %133 = icmp sgt i8 %132, -1
  br i1 %133, label %71, label %41, !prof !21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6tflite4task6vision14LabelHierarchy10GetParentsERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::flat_hash_set"* noalias sret, %"class.tflite::task::vision::LabelHierarchy"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %0, i64 0, i32 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #11
  %7 = getelementptr inbounds %"class.tflite::task::vision::LabelHierarchy", %"class.tflite::task::vision::LabelHierarchy"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = zext i8 %10 to i64
  %14 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %22

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, -1
  br i1 %20, label %22, label %21, !prof !21

21:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12, %15
  %23 = phi i64 [ %17, %15 ], [ %14, %12 ]
  %24 = phi i64 [ %19, %15 ], [ %13, %12 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #11
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = tail call { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %33) #11
  %35 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %34, 0
  %36 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %34, 1
  %37 = icmp eq i8* %35, null
  br i1 %37, label %136, label %38

38:                                               ; preds = %22
  %39 = load i8, i8* %35, align 1
  %40 = icmp sgt i8 %39, -1
  br i1 %40, label %42, label %41, !prof !21

41:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %36, i64 0, i32 0, i32 1, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %36, i64 0, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp ne i8* %44, null
  tail call void @llvm.assume(i1 %47) #11
  %48 = load i8, i8* %44, align 1
  %49 = icmp slt i8 %48, -1
  br i1 %49, label %50, label %65

50:                                               ; preds = %42, %50
  %51 = phi %"class.std::__1::basic_string"* [ %62, %50 ], [ %46, %42 ]
  %52 = phi i8* [ %61, %50 ], [ %44, %42 ]
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = zext i16 %56 to i32
  %58 = add nuw nsw i32 %57, 1
  %59 = tail call i32 @llvm.cttz.i32(i32 %58, i1 true) #11, !range !44
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %52, i64 %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 %60
  %63 = load i8, i8* %61, align 1
  %64 = icmp slt i8 %63, -1
  br i1 %64, label %50, label %65

65:                                               ; preds = %50, %42
  %66 = phi %"class.std::__1::basic_string"* [ %46, %42 ], [ %62, %50 ]
  %67 = phi i8* [ %44, %42 ], [ %61, %50 ]
  %68 = phi i8 [ %48, %42 ], [ %63, %50 ]
  %69 = icmp eq i8 %68, -1
  %70 = icmp eq i8* %67, null
  %71 = or i1 %69, %70
  br i1 %71, label %136, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.absl::flat_hash_set", %"class.absl::flat_hash_set"* %0, i64 0, i32 0
  %74 = icmp sgt i8 %68, -1
  br i1 %74, label %76, label %75, !prof !21

75:                                               ; preds = %133, %72
  tail call void @llvm.trap() #11
  unreachable

76:                                               ; preds = %72, %133
  %77 = phi i8* [ %131, %133 ], [ %67, %72 ]
  %78 = phi %"class.std::__1::basic_string"* [ %128, %133 ], [ %66, %72 ]
  %79 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE22find_or_prepare_insertIS9_EENS3_4pairImbEERKT_(%"class.absl::container_internal::raw_hash_set.29"* %73, %"class.std::__1::basic_string"* dereferenceable(24) %78) #11, !noalias !58
  %80 = extractvalue { i64, i8 } %79, 0
  %81 = extractvalue { i64, i8 } %79, 1
  %82 = and i8 %81, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %99, label %84

84:                                               ; preds = %76
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8, !noalias !58
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 %80
  %87 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !58
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %84
  %92 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #11, !noalias !58
  br label %99

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8, !noalias !58
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8, !noalias !58
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %86, i8* %96, i64 %98) #11, !noalias !58
  br label %99

99:                                               ; preds = %94, %91, %76
  %100 = load i8*, i8** %4, align 8, !noalias !58
  %101 = getelementptr inbounds i8, i8* %100, i64 %80
  %102 = icmp ne i8* %101, null
  tail call void @llvm.assume(i1 %102) #11, !noalias !58
  %103 = load i8, i8* %77, align 1
  %104 = icmp sgt i8 %103, -1
  br i1 %104, label %106, label %105, !prof !21

105:                                              ; preds = %99
  tail call void @llvm.trap() #11
  unreachable

106:                                              ; preds = %99
  %107 = getelementptr inbounds i8, i8* %77, i64 1
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 1
  %109 = load i8, i8* %107, align 1
  %110 = icmp slt i8 %109, -1
  br i1 %110, label %111, label %126

111:                                              ; preds = %106, %111
  %112 = phi %"class.std::__1::basic_string"* [ %123, %111 ], [ %108, %106 ]
  %113 = phi i8* [ %122, %111 ], [ %107, %106 ]
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1
  %116 = icmp slt <16 x i8> %115, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %117 = bitcast <16 x i1> %116 to i16
  %118 = zext i16 %117 to i32
  %119 = add nuw nsw i32 %118, 1
  %120 = tail call i32 @llvm.cttz.i32(i32 %119, i1 true) #11, !range !44
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %113, i64 %121
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 %121
  %124 = load i8, i8* %122, align 1
  %125 = icmp slt i8 %124, -1
  br i1 %125, label %111, label %126

126:                                              ; preds = %111, %106
  %127 = phi i8* [ %107, %106 ], [ %122, %111 ]
  %128 = phi %"class.std::__1::basic_string"* [ %108, %106 ], [ %123, %111 ]
  %129 = phi i8 [ %109, %106 ], [ %124, %111 ]
  %130 = icmp eq i8 %129, -1
  %131 = select i1 %130, i8* null, i8* %127, !prof !2
  %132 = icmp eq i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %126
  %134 = load i8, i8* %131, align 1
  %135 = icmp sgt i8 %134, -1
  br i1 %135, label %76, label %75, !prof !21

136:                                              ; preds = %126, %65, %22
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZN4absl6Status15UnrefNonInlinedEm(i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN6tflite7support17internal_statusor6Helper26HandleInvalidStatusCtorArgEPN4absl6StatusE(%"class.absl::Status"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.15"* noalias sret, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"*, %"class.absl::strings_internal::Splitter"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::array", align 8
  %5 = alloca %"class.absl::strings_internal::SplitIterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"struct.std::__1::array"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 256, i1 false)
  %9 = bitcast %"class.absl::strings_internal::SplitIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 0
  store i64 0, i64* %10, align 8, !alias.scope !71
  %11 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 8, !alias.scope !71
  %12 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3
  %13 = bitcast %"class.absl::string_view"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11, !alias.scope !71
  %14 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 4
  store %"class.absl::strings_internal::Splitter"* %2, %"class.absl::strings_internal::Splitter"** %14, align 8, !alias.scope !71
  %15 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5, i32 0
  %16 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1, !noalias !71
  store i8 %17, i8* %15, align 8, !alias.scope !71
  %18 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !71
  %20 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %2, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !71
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i32 2, i32* %11, align 8, !alias.scope !71
  store i64 %21, i64* %10, align 8, !alias.scope !71
  br label %59

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %26 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %25, i8* nonnull %19, i64 %21, i64 0) #11
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = extractvalue { i8*, i64 } %26, 1
  %29 = getelementptr inbounds i8, i8* %19, i64 %21
  %30 = icmp eq i8* %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  store i32 1, i32* %11, align 8, !alias.scope !71
  br label %32

32:                                               ; preds = %31, %24
  %33 = load i64, i64* %10, align 8, !alias.scope !71
  %34 = getelementptr inbounds i8, i8* %19, i64 %33
  %35 = ptrtoint i8* %27 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp ult i64 %21, %33
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %32
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #14
  unreachable

40:                                               ; preds = %32
  %41 = sub i64 %21, %33
  %42 = icmp ugt i64 %41, %37
  %43 = select i1 %42, i64 %37, i64 %41
  %44 = icmp sgt i64 %43, -1
  br i1 %44, label %46, label %45, !prof !21

45:                                               ; preds = %40
  call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  store i8* %34, i8** %47, align 8, !alias.scope !71
  %48 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  store i64 %43, i64* %48, align 8, !alias.scope !71
  %49 = add i64 %33, %28
  %50 = add i64 %49, %43
  %51 = load i32, i32* %11, align 8
  store i64 %50, i64* %10, align 8, !alias.scope !71
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.absl::string_view"* %12 to i64*
  %55 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 1
  %56 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 5
  %57 = getelementptr inbounds %"class.absl::strings_internal::SplitIterator", %"class.absl::strings_internal::SplitIterator"* %5, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  br label %60

59:                                               ; preds = %111, %23, %46
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #11
  ret void

60:                                               ; preds = %106, %53
  %61 = phi i32 [ %51, %53 ], [ %107, %106 ]
  %62 = phi i64 [ %43, %53 ], [ %108, %106 ]
  %63 = phi i64 [ %36, %53 ], [ %109, %106 ]
  %64 = phi i64 [ 0, %53 ], [ %110, %106 ]
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64
  %66 = bitcast %struct.raw_view* %65 to i64*
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %64, i32 1
  store i64 %62, i64* %67, align 8
  %68 = icmp eq i32 %61, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  store i32 2, i32* %11, align 8
  %70 = add nuw nsw i64 %64, 1
  br label %111

71:                                               ; preds = %60
  %72 = load %"class.absl::strings_internal::Splitter"*, %"class.absl::strings_internal::Splitter"** %14, align 8
  %73 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.absl::strings_internal::Splitter", %"class.absl::strings_internal::Splitter"* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %10, align 8
  %78 = call { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"* %56, i8* %74, i64 %76, i64 %77) #11
  %79 = extractvalue { i8*, i64 } %78, 0
  %80 = extractvalue { i8*, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %74, i64 %76
  %82 = icmp eq i8* %79, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  store i32 1, i32* %11, align 8
  br label %84

84:                                               ; preds = %83, %71
  %85 = load i64, i64* %10, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 %85
  %87 = ptrtoint i8* %79 to i64
  %88 = ptrtoint i8* %86 to i64
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %76, %85
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %84
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #14
  unreachable

92:                                               ; preds = %84
  %93 = sub i64 %76, %85
  %94 = icmp ugt i64 %93, %89
  %95 = select i1 %94, i64 %89, i64 %93
  %96 = icmp sgt i64 %95, -1
  br i1 %96, label %98, label %97, !prof !21

97:                                               ; preds = %92
  call void @llvm.trap() #11
  unreachable

98:                                               ; preds = %92
  store i8* %86, i8** %57, align 8
  store i64 %95, i64* %55, align 8
  %99 = add i64 %85, %80
  %100 = add i64 %99, %95
  store i64 %100, i64* %10, align 8
  %101 = load i32, i32* %11, align 8
  %102 = add nuw nsw i64 %64, 1
  %103 = icmp eq i64 %102, 16
  %104 = icmp eq i32 %101, 2
  %105 = or i1 %103, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %98, %118
  %107 = phi i32 [ %101, %98 ], [ %116, %118 ]
  %108 = phi i64 [ %95, %98 ], [ %120, %118 ]
  %109 = phi i64 [ %88, %98 ], [ %119, %118 ]
  %110 = phi i64 [ %102, %98 ], [ 0, %118 ]
  br label %60

111:                                              ; preds = %98, %69
  %112 = phi i64 [ %70, %69 ], [ %102, %98 ]
  %113 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %114 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 %112
  %115 = call %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.15"* %0, %"class.absl::string_view"* %113, %struct.raw_view* nonnull %58, %struct.raw_view* %114)
  %116 = load i32, i32* %11, align 8
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %59, label %118

118:                                              ; preds = %111
  %119 = load i64, i64* %54, align 8
  %120 = load i64, i64* %55, align 8
  br label %106
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.absl::string_view"* @_ZNSt3__16vectorIN4absl11string_viewENS_9allocatorIS2_EEE6insertIPZNKS1_16strings_internal8SplitterINS1_6ByCharENS1_10AllowEmptyES2_E18ConvertToContainerIS5_S2_Lb0EEclERKSB_E8raw_viewEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISJ_E9referenceEEE5valueENS_11__wrap_iterIPS2_EEE4typeENSN_IPKS2_EESJ_SJ_(%"class.std::__1::vector.15"*, %"class.absl::string_view"*, %struct.raw_view*, %struct.raw_view*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.absl::string_view"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.raw_view* %3 to i64
  %8 = ptrtoint %struct.raw_view* %2 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %256

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.absl::string_view"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %18 = ptrtoint %"class.absl::string_view"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.absl::string_view"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 4
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %2, i64 %25
  %29 = icmp eq %struct.raw_view* %28, %3
  br i1 %29, label %47, label %30

30:                                               ; preds = %27, %37
  %31 = phi %"class.absl::string_view"* [ %43, %37 ], [ %17, %27 ]
  %32 = phi %struct.raw_view* [ %42, %37 ], [ %28, %27 ]
  %33 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp sgt i64 %34, -1
  br i1 %35, label %37, label %36, !prof !21

36:                                               ; preds = %30
  tail call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %30
  %38 = bitcast %struct.raw_view* %32 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.absl::string_view"* %31 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %32, i64 1
  %43 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %31, i64 1
  %44 = icmp eq %struct.raw_view* %42, %3
  br i1 %44, label %45, label %30

45:                                               ; preds = %37
  %46 = ptrtoint %"class.absl::string_view"* %43 to i64
  br label %47

47:                                               ; preds = %45, %27
  %48 = phi i64 [ %18, %27 ], [ %46, %45 ]
  store i64 %48, i64* %22, align 8
  %49 = icmp sgt i64 %24, 0
  br i1 %49, label %50, label %256

50:                                               ; preds = %47
  %51 = inttoptr i64 %48 to %"class.absl::string_view"*
  br label %52

52:                                               ; preds = %50, %23
  %53 = phi i64 [ %48, %50 ], [ %18, %23 ]
  %54 = phi %"class.absl::string_view"* [ %51, %50 ], [ %17, %23 ]
  %55 = phi %struct.raw_view* [ %28, %50 ], [ %3, %23 ]
  %56 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %10
  %57 = ptrtoint %"class.absl::string_view"* %56 to i64
  %58 = sub i64 %53, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 %59
  %61 = icmp ult %"class.absl::string_view"* %60, %17
  br i1 %61, label %62, label %91

62:                                               ; preds = %52
  %63 = sub nsw i64 0, %59
  %64 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %17, i64 %63, i32 0
  %65 = bitcast i8** %64 to i8*
  %66 = xor i64 %5, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %62, %73
  %74 = phi %"class.absl::string_view"* [ %80, %73 ], [ %54, %62 ]
  %75 = phi %"class.absl::string_view"* [ %79, %73 ], [ %60, %62 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %62 ]
  %77 = bitcast %"class.absl::string_view"* %74 to i8*
  %78 = bitcast %"class.absl::string_view"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #11
  %79 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %75, i64 1
  %80 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %74, i64 1
  %81 = add i64 %76, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %73, !llvm.loop !74

83:                                               ; preds = %73, %62
  %84 = phi %"class.absl::string_view"* [ %54, %62 ], [ %80, %73 ]
  %85 = phi %"class.absl::string_view"* [ %60, %62 ], [ %79, %73 ]
  %86 = phi %"class.absl::string_view"* [ undef, %62 ], [ %80, %73 ]
  %87 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %87, label %88, label %99

88:                                               ; preds = %99, %83
  %89 = phi %"class.absl::string_view"* [ %86, %83 ], [ %117, %99 ]
  %90 = ptrtoint %"class.absl::string_view"* %89 to i64
  br label %91

91:                                               ; preds = %88, %52
  %92 = phi i64 [ %90, %88 ], [ %53, %52 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %58, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %91
  %95 = sub nsw i64 0, %59
  %96 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %54, i64 %95
  %97 = bitcast %"class.absl::string_view"* %96 to i8*
  %98 = bitcast %"class.absl::string_view"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %58, i1 false) #11
  br label %119

99:                                               ; preds = %83, %99
  %100 = phi %"class.absl::string_view"* [ %117, %99 ], [ %84, %83 ]
  %101 = phi %"class.absl::string_view"* [ %116, %99 ], [ %85, %83 ]
  %102 = bitcast %"class.absl::string_view"* %100 to i8*
  %103 = bitcast %"class.absl::string_view"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #11
  %104 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 1
  %105 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 1
  %106 = bitcast %"class.absl::string_view"* %105 to i8*
  %107 = bitcast %"class.absl::string_view"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #11
  %108 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 2
  %109 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 2
  %110 = bitcast %"class.absl::string_view"* %109 to i8*
  %111 = bitcast %"class.absl::string_view"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #11
  %112 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 3
  %113 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 3
  %114 = bitcast %"class.absl::string_view"* %113 to i8*
  %115 = bitcast %"class.absl::string_view"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false) #11
  %116 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %101, i64 4
  %117 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %100, i64 4
  %118 = icmp ult %"class.absl::string_view"* %116, %17
  br i1 %118, label %99, label %88

119:                                              ; preds = %91, %94
  %120 = icmp eq %struct.raw_view* %55, %2
  br i1 %120, label %256, label %121

121:                                              ; preds = %119, %128
  %122 = phi %struct.raw_view* [ %133, %128 ], [ %2, %119 ]
  %123 = phi %"class.absl::string_view"* [ %134, %128 ], [ %1, %119 ]
  %124 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp sgt i64 %125, -1
  br i1 %126, label %128, label %127, !prof !21

127:                                              ; preds = %121
  tail call void @llvm.trap() #11
  unreachable

128:                                              ; preds = %121
  %129 = bitcast %struct.raw_view* %122 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.absl::string_view"* %123 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 0, i32 1
  store i64 %125, i64* %132, align 8
  %133 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %122, i64 1
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %123, i64 1
  %135 = icmp eq %struct.raw_view* %133, %55
  br i1 %135, label %256, label %121

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = ashr exact i64 %139, 4
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 1152921504606846975
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #14
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = ashr exact i64 %146, 4
  %148 = icmp ult i64 %147, 576460752303423487
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = ashr exact i64 %150, 4
  br label %162

152:                                              ; preds = %145
  %153 = ashr exact i64 %146, 3
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = ashr exact i64 %156, 4
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %168, label %159

159:                                              ; preds = %152
  %160 = icmp ugt i64 %155, 1152921504606846975
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #14
  unreachable

162:                                              ; preds = %149, %159
  %163 = phi i64 [ 1152921504606846975, %149 ], [ %155, %159 ]
  %164 = phi i64 [ %151, %149 ], [ %157, %159 ]
  %165 = shl i64 %163, 4
  %166 = tail call i8* @_Znwm(i64 %165) #15
  %167 = bitcast i8* %166 to %"class.absl::string_view"*
  br label %168

168:                                              ; preds = %162, %152
  %169 = phi i64 [ %164, %162 ], [ %157, %152 ]
  %170 = phi i64 [ %163, %162 ], [ 0, %152 ]
  %171 = phi %"class.absl::string_view"* [ %167, %162 ], [ null, %152 ]
  %172 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %169
  %173 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %171, i64 %170
  %174 = ptrtoint %"class.absl::string_view"* %173 to i64
  %175 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %10
  br label %176

176:                                              ; preds = %168, %183
  %177 = phi %"class.absl::string_view"* [ %188, %183 ], [ %172, %168 ]
  %178 = phi %struct.raw_view* [ %189, %183 ], [ %2, %168 ]
  %179 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 0, i32 1
  %180 = load i64, i64* %179, align 8
  %181 = icmp sgt i64 %180, -1
  br i1 %181, label %183, label %182, !prof !21

182:                                              ; preds = %176
  tail call void @llvm.trap() #11
  unreachable

183:                                              ; preds = %176
  %184 = bitcast %struct.raw_view* %178 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.absl::string_view"* %177 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 0, i32 1
  store i64 %180, i64* %187, align 8
  %188 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %177, i64 1
  %189 = getelementptr inbounds %struct.raw_view, %struct.raw_view* %178, i64 1
  %190 = icmp eq %"class.absl::string_view"* %175, %188
  br i1 %190, label %191, label %176

191:                                              ; preds = %183
  %192 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  %193 = ptrtoint %"class.absl::string_view"* %192 to i64
  %194 = sub i64 %5, %193
  %195 = ashr exact i64 %194, 4
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %172, i64 %196
  %198 = ptrtoint %"class.absl::string_view"* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %191
  %201 = bitcast %"class.absl::string_view"* %197 to i8*
  %202 = bitcast %"class.absl::string_view"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* align 8 %202, i64 %194, i1 false) #11
  br label %203

203:                                              ; preds = %200, %191
  %204 = load %"class.absl::string_view"*, %"class.absl::string_view"** %16, align 8
  %205 = icmp eq %"class.absl::string_view"* %204, %1
  br i1 %205, label %249, label %206

206:                                              ; preds = %203
  %207 = getelementptr %"class.absl::string_view", %"class.absl::string_view"* %204, i64 -1, i32 0
  %208 = ptrtoint i8** %207 to i64
  %209 = sub i64 %208, %5
  %210 = lshr i64 %209, 4
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %206, %214
  %215 = phi %"class.absl::string_view"* [ %221, %214 ], [ %175, %206 ]
  %216 = phi %"class.absl::string_view"* [ %220, %214 ], [ %1, %206 ]
  %217 = phi i64 [ %222, %214 ], [ %212, %206 ]
  %218 = bitcast %"class.absl::string_view"* %215 to i8*
  %219 = bitcast %"class.absl::string_view"* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 16, i1 false) #11
  %220 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %216, i64 1
  %221 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %215, i64 1
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !76

224:                                              ; preds = %214, %206
  %225 = phi %"class.absl::string_view"* [ undef, %206 ], [ %221, %214 ]
  %226 = phi %"class.absl::string_view"* [ %175, %206 ], [ %221, %214 ]
  %227 = phi %"class.absl::string_view"* [ %1, %206 ], [ %220, %214 ]
  %228 = icmp ult i64 %209, 48
  br i1 %228, label %249, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.absl::string_view"* [ %247, %229 ], [ %226, %224 ]
  %231 = phi %"class.absl::string_view"* [ %246, %229 ], [ %227, %224 ]
  %232 = bitcast %"class.absl::string_view"* %230 to i8*
  %233 = bitcast %"class.absl::string_view"* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 16, i1 false) #11
  %234 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 1
  %235 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 1
  %236 = bitcast %"class.absl::string_view"* %235 to i8*
  %237 = bitcast %"class.absl::string_view"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %237, i64 16, i1 false) #11
  %238 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 2
  %239 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 2
  %240 = bitcast %"class.absl::string_view"* %239 to i8*
  %241 = bitcast %"class.absl::string_view"* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 16, i1 false) #11
  %242 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 3
  %243 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 3
  %244 = bitcast %"class.absl::string_view"* %243 to i8*
  %245 = bitcast %"class.absl::string_view"* %242 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 16, i1 false) #11
  %246 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %231, i64 4
  %247 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %230, i64 4
  %248 = icmp eq %"class.absl::string_view"* %246, %204
  br i1 %248, label %249, label %229

249:                                              ; preds = %224, %229, %203
  %250 = phi %"class.absl::string_view"* [ %175, %203 ], [ %225, %224 ], [ %247, %229 ]
  %251 = ptrtoint %"class.absl::string_view"* %250 to i64
  %252 = load %"class.absl::string_view"*, %"class.absl::string_view"** %6, align 8
  store i64 %198, i64* %137, align 8
  store i64 %251, i64* %22, align 8
  store i64 %174, i64* %14, align 8
  %253 = icmp eq %"class.absl::string_view"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  %255 = bitcast %"class.absl::string_view"* %252 to i8*
  tail call void @_ZdlPv(i8* %255) #15
  br label %256

256:                                              ; preds = %128, %254, %249, %47, %119, %4
  %257 = phi %"class.absl::string_view"* [ %1, %4 ], [ %1, %119 ], [ %1, %47 ], [ %172, %249 ], [ %172, %254 ], [ %1, %128 ]
  ret %"class.absl::string_view"* %257
}

declare { i8*, i64 } @_ZNK4absl6ByChar4FindENS_11string_viewEm(%"class.absl::ByChar"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__vector_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 0
  %3 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 1
  %5 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %4, align 8
  %6 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %5, %3
  br i1 %6, label %55, label %7

7:                                                ; preds = %1, %53
  %8 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %9, %53 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %8, i64 -1
  %10 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %8, i64 -1, i32 2
  %11 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %16 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %8, i64 -1, i32 2, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.3"* %10 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %34, %7
  %37 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %8, i64 -1, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %42, %36
  %46 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %50, %45
  %54 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %9, %3
  br i1 %54, label %55, label %7

55:                                               ; preds = %53, %1
  store %"struct.tflite::task::vision::LabelMapItem"* %3, %"struct.tflite::task::vision::LabelMapItem"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN6tflite4task6vision12LabelMapItemERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_(%"struct.std::__1::__split_buffer.43"*, %"struct.tflite::task::vision::LabelMapItem"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 2
  %4 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %3, align 8
  %5 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %4, %1
  br i1 %5, label %55, label %6

6:                                                ; preds = %2, %52
  %7 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %53, %52 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %7, i64 -1
  store %"struct.tflite::task::vision::LabelMapItem"* %8, %"struct.tflite::task::vision::LabelMapItem"** %3, align 8
  %9 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %7, i64 -1, i32 2
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %15 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %7, i64 -1, i32 2, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %16, %11
  br i1 %17, label %33, label %18

18:                                               ; preds = %13, %28
  %19 = phi %"class.std::__1::basic_string"* [ %20, %28 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 -1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.std::__1::basic_string"* %20, %11
  br i1 %29, label %30, label %18

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.3"* %9 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i8* [ %32, %30 ], [ %14, %13 ]
  store %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"** %15, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %6
  %36 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %7, i64 -1, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %41, %35
  %45 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %49, %44
  %53 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %3, align 8
  %54 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %53, %1
  br i1 %54, label %55, label %6

55:                                               ; preds = %52, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite4task6vision12LabelMapItemENS_9allocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.tflite::task::vision::LabelMapItem"* dereferenceable(72)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.43", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 72
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 256204778801521550
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #14
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 72
  %29 = icmp ult i64 %28, 128102389400760775
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"struct.tflite::task::vision::LabelMapItem"* null, %"struct.tflite::task::vision::LabelMapItem"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.13"** %10 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %4, %"class.std::__1::__compressed_pair.10"** %31, align 8
  br label %38

32:                                               ; preds = %23
  %33 = shl nsw i64 %28, 1
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"struct.tflite::task::vision::LabelMapItem"* null, %"struct.tflite::task::vision::LabelMapItem"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.13"** %10 to %"class.std::__1::__compressed_pair.10"**
  store %"class.std::__1::__compressed_pair.10"* %4, %"class.std::__1::__compressed_pair.10"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ 256204778801521550, %30 ], [ %35, %32 ]
  %40 = mul i64 %39, 72
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to %"struct.tflite::task::vision::LabelMapItem"*
  br label %43

43:                                               ; preds = %32, %38
  %44 = phi i64 [ %39, %38 ], [ 0, %32 ]
  %45 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %42, %38 ], [ null, %32 ]
  store %"struct.tflite::task::vision::LabelMapItem"* %45, %"struct.tflite::task::vision::LabelMapItem"** %6, align 8
  %46 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %18
  store %"struct.tflite::task::vision::LabelMapItem"* %46, %"struct.tflite::task::vision::LabelMapItem"** %7, align 8
  %47 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %44
  store %"struct.tflite::task::vision::LabelMapItem"* %47, %"struct.tflite::task::vision::LabelMapItem"** %9, align 8
  %48 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %46 to i8*
  %49 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %18, i32 1
  %51 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %1, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %18, i32 2
  %55 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %1, i64 0, i32 2
  %56 = bitcast %"class.std::__1::vector.3"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #11
  %57 = bitcast %"class.std::__1::vector.3"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.3"* %54 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %1, i64 0, i32 2, i32 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %18, i32 2, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %45, i64 %18, i32 2, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast %"class.std::__1::vector.3"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11
  %71 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %46, i64 1
  store %"struct.tflite::task::vision::LabelMapItem"* %71, %"struct.tflite::task::vision::LabelMapItem"** %8, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %73 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %72, align 8
  %74 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %11, align 8
  %75 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %74, %73
  br i1 %75, label %76, label %82

76:                                               ; preds = %43
  %77 = insertelement <2 x %"struct.tflite::task::vision::LabelMapItem"*> undef, %"struct.tflite::task::vision::LabelMapItem"* %71, i32 0
  %78 = insertelement <2 x %"struct.tflite::task::vision::LabelMapItem"*> %77, %"struct.tflite::task::vision::LabelMapItem"* %47, i32 1
  %79 = ptrtoint <2 x %"struct.tflite::task::vision::LabelMapItem"*> %78 to <2 x i64>
  %80 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %74 to i64
  %81 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %73 to i64
  br label %118

82:                                               ; preds = %43, %82
  %83 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %111, %82 ], [ %46, %43 ]
  %84 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %86, %82 ], [ %74, %43 ]
  %85 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %83, i64 -1
  %86 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %84, i64 -1
  %87 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %85 to i8*
  %88 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #11
  %89 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %83, i64 -1, i32 1
  %90 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %84, i64 -1, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #11
  %93 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %83, i64 -1, i32 2
  %94 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %84, i64 -1, i32 2
  %95 = bitcast %"class.std::__1::vector.3"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  %96 = bitcast %"class.std::__1::vector.3"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.3"* %93 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %84, i64 -1, i32 2, i32 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %83, i64 -1, i32 2, i32 0, i32 1
  %103 = bitcast %"class.std::__1::basic_string"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %84, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %83, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"class.std::__1::basic_string"** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #11
  %110 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %7, align 8
  %111 = getelementptr inbounds %"struct.tflite::task::vision::LabelMapItem", %"struct.tflite::task::vision::LabelMapItem"* %110, i64 -1
  store %"struct.tflite::task::vision::LabelMapItem"* %111, %"struct.tflite::task::vision::LabelMapItem"** %7, align 8
  %112 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %86, %73
  br i1 %112, label %113, label %82

113:                                              ; preds = %82
  %114 = load i64, i64* %15, align 8
  %115 = load i64, i64* %12, align 8
  %116 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %8 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 8
  br label %118

118:                                              ; preds = %76, %113
  %119 = phi i64 [ %80, %76 ], [ %115, %113 ]
  %120 = phi %"struct.tflite::task::vision::LabelMapItem"* [ %46, %76 ], [ %111, %113 ]
  %121 = phi i64 [ %81, %76 ], [ %114, %113 ]
  %122 = phi <2 x i64> [ %79, %76 ], [ %117, %113 ]
  %123 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %8 to i64*
  %124 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %9 to i64*
  %125 = ptrtoint %"struct.tflite::task::vision::LabelMapItem"* %120 to i64
  %126 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %7 to i64*
  store i64 %125, i64* %15, align 8
  store i64 %121, i64* %126, align 8
  store i64 %119, i64* %123, align 8
  %127 = load i64, i64* %25, align 8
  %128 = bitcast %"struct.tflite::task::vision::LabelMapItem"** %11 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %128, align 8
  store i64 %127, i64* %124, align 8
  %129 = bitcast %"struct.std::__1::__split_buffer.43"* %3 to i64*
  store i64 %121, i64* %129, align 8
  %130 = inttoptr i64 %121 to %"struct.tflite::task::vision::LabelMapItem"*
  call void @_ZNSt3__114__split_bufferIN6tflite4task6vision12LabelMapItemERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_(%"struct.std::__1::__split_buffer.43"* nonnull %3, %"struct.tflite::task::vision::LabelMapItem"* %130) #11
  %131 = load %"struct.tflite::task::vision::LabelMapItem"*, %"struct.tflite::task::vision::LabelMapItem"** %6, align 8
  %132 = icmp eq %"struct.tflite::task::vision::LabelMapItem"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %118
  %134 = bitcast %"struct.tflite::task::vision::LabelMapItem"* %131 to i8*
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %118, %133
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENSC_ISE_EEEESE_Lb0EEclERKS5_(%"class.std::__1::vector.3"* noalias sret, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer.46"*, %"class.absl::strings_internal::Splitter"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", align 1
  %5 = alloca %"class.std::__1::vector.15", align 8
  %6 = bitcast %"class.std::__1::vector.15"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer", %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* %4, i64 0, i32 0
  %10 = bitcast %"class.std::__1::vector.15"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11, !noalias !77
  call void @_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE18ConvertToContainerINSt3__16vectorIS4_NS7_9allocatorIS4_EEEES4_Lb0EEclERKS5_(%"class.std::__1::vector.15"* nonnull sret %5, %"struct.absl::strings_internal::Splitter<absl::ByChar, absl::AllowEmpty, absl::string_view>::ConvertToContainer"* nonnull %4, %"class.absl::strings_internal::Splitter"* dereferenceable(24) %2) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11, !noalias !77
  %11 = load %"class.absl::string_view"*, %"class.absl::string_view"** %7, align 8
  %12 = load %"class.absl::string_view"*, %"class.absl::string_view"** %8, align 8
  %13 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = ptrtoint %"class.absl::string_view"* %11 to i64
  %15 = ptrtoint %"class.absl::string_view"* %12 to i64
  %16 = sub i64 %15, %14
  %17 = ashr exact i64 %16, 4
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %82, label %19

19:                                               ; preds = %3
  %20 = icmp ugt i64 %17, 768614336404564650
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #14
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 24
  %25 = call i8* @_Znwm(i64 %24) #15
  %26 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"** %31, align 8
  %32 = bitcast %"class.std::__1::basic_string"** %27 to i64*
  %33 = ptrtoint i8* %25 to i64
  %34 = icmp eq %"class.absl::string_view"* %11, %12
  br i1 %34, label %79, label %35

35:                                               ; preds = %23
  %36 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  br label %37

37:                                               ; preds = %72, %35
  %38 = phi %"class.std::__1::basic_string"* [ %74, %72 ], [ %36, %35 ]
  %39 = phi %"class.absl::string_view"* [ %73, %72 ], [ %11, %35 ]
  %40 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8, !noalias !80
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #11, !alias.scope !80
  br label %72

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %39, i64 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !80
  %48 = icmp ugt i64 %47, -17
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::basic_string"* %38 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %50) #14
  unreachable

51:                                               ; preds = %45
  %52 = icmp ult i64 %47, 23
  br i1 %52, label %61, label %53

53:                                               ; preds = %51
  %54 = add nuw i64 %47, 16
  %55 = and i64 %54, -16
  %56 = call i8* @_Znwm(i64 %55) #15
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %57, align 8, !alias.scope !80
  %58 = or i64 %55, -9223372036854775808
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %58, i64* %59, align 8, !alias.scope !80
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %47, i64* %60, align 8, !alias.scope !80
  br label %67

61:                                               ; preds = %51
  %62 = trunc i64 %47 to i8
  %63 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 %62, i8* %64, align 1, !alias.scope !80
  %65 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %66 = icmp eq i64 %47, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %61, %53
  %68 = phi i8* [ %56, %53 ], [ %65, %61 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* nonnull align 1 %41, i64 %47, i1 false) #11
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i8* [ %65, %61 ], [ %68, %67 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %47
  store i8 0, i8* %71, align 1
  br label %72

72:                                               ; preds = %69, %43
  %73 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %39, i64 1
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %75 = icmp eq %"class.absl::string_view"* %73, %12
  br i1 %75, label %76, label %37

76:                                               ; preds = %72
  %77 = ptrtoint %"class.std::__1::basic_string"* %74 to i64
  %78 = load %"class.absl::string_view"*, %"class.absl::string_view"** %7, align 8
  br label %79

79:                                               ; preds = %23, %76
  %80 = phi %"class.absl::string_view"* [ %11, %23 ], [ %78, %76 ]
  %81 = phi i64 [ %33, %23 ], [ %77, %76 ]
  store i64 %81, i64* %32, align 8
  br label %82

82:                                               ; preds = %3, %79
  %83 = phi %"class.absl::string_view"* [ %11, %3 ], [ %80, %79 ]
  %84 = icmp eq %"class.absl::string_view"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = ptrtoint %"class.absl::string_view"* %83 to i64
  %87 = bitcast %"class.absl::string_view"** %8 to i64*
  store i64 %86, i64* %87, align 8
  %88 = bitcast %"class.absl::string_view"* %83 to i8*
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4absl19str_format_internal10FormatPackENS0_21UntypedFormatSpecImplENS_4SpanIKNS0_13FormatArgImplEEE(%"class.std::__1::basic_string"* sret, i8*, i64, %"class.absl::str_format_internal::FormatArgImpl"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZN4absl19str_format_internal13FormatArgImpl8DispatchImEEbNS1_4DataENS0_24FormatConversionSpecImplEPv(i8*, i64, i32, i8*) #0 align 2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE13destroy_slotsEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %13

8:                                                ; preds = %61
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %10, align 8
  %12 = bitcast %"union.absl::container_internal::map_slot_type"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  br label %65

13:                                               ; preds = %5, %61
  %14 = phi i64 [ 0, %5 ], [ %62, %61 ]
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, -1
  br i1 %18, label %19, label %61

19:                                               ; preds = %13
  %20 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %7, align 8
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %20, i64 %14
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %20, i64 %14, i32 0, i32 1, i32 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %53, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %20, i64 %14, i32 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %20, i64 %14, i32 0, i32 1, i32 0, i32 1
  br label %31

28:                                               ; preds = %49
  %29 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %29) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %26, align 8
  %30 = bitcast %"class.std::__1::basic_string"** %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #11
  br label %53

31:                                               ; preds = %49, %25
  %32 = phi i64 [ %23, %25 ], [ %50, %49 ]
  %33 = phi i64 [ 0, %25 ], [ %51, %49 ]
  %34 = load i8*, i8** %26, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %38, label %49

38:                                               ; preds = %31
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 %33
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #15
  %48 = load i64, i64* %22, align 8
  br label %49

49:                                               ; preds = %45, %38, %31
  %50 = phi i64 [ %48, %45 ], [ %32, %38 ], [ %32, %31 ]
  %51 = add i64 %33, 1
  %52 = icmp eq i64 %51, %50
  br i1 %52, label %28, label %31

53:                                               ; preds = %28, %19
  %54 = bitcast %"union.absl::container_internal::map_slot_type"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %58, %53, %13
  %62 = add i64 %14, 1
  %63 = load i64, i64* %2, align 8
  %64 = icmp eq i64 %62, %63
  br i1 %64, label %8, label %13

65:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !21

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #11
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !44
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %76, i32 0
  %78 = bitcast %"struct.std::__1::pair.35"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"struct.std::__1::pair.35"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"struct.std::__1::pair.35"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !21

91:                                               ; preds = %85
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !83

95:                                               ; preds = %92
  tail call void @llvm.trap() #11
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !84

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #11
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !21

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !2

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !44
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !21

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !44
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !2

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #11
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #11
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #2

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 6
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #15
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %111, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = bitcast %"class.absl::container_internal::CompressedTuple"* %26 to %"class.std::__1::allocator.26"*
  br label %30

29:                                               ; preds = %107
  br i1 %24, label %111, label %110

30:                                               ; preds = %25, %107
  %31 = phi i64 [ 0, %25 ], [ %108, %107 ]
  %32 = getelementptr inbounds i8, i8* %4, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = icmp sgt i8 %33, -1
  br i1 %34, label %35, label %107

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %31
  %37 = bitcast %"union.absl::container_internal::map_slot_type"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = zext i8 %39 to i64
  %43 = ptrtoint %"union.absl::container_internal::map_slot_type"* %36 to i64
  br label %51

44:                                               ; preds = %35
  %45 = bitcast %"union.absl::container_internal::map_slot_type"* %36 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp sgt i64 %48, -1
  br i1 %49, label %51, label %50, !prof !21

50:                                               ; preds = %44
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41, %44
  %52 = phi i64 [ %46, %44 ], [ %43, %41 ]
  %53 = phi i64 [ %48, %44 ], [ %42, %41 ]
  %54 = inttoptr i64 %52 to i8*
  %55 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %27, i8* %54, i64 %53) #11
  %56 = add i64 %55, %53
  %57 = zext i64 %56 to i128
  %58 = mul nuw i128 %57, 11376068507788127593
  %59 = lshr i128 %58, 64
  %60 = xor i128 %59, %58
  %61 = trunc i128 %60 to i64
  %62 = load i8*, i8** %3, align 8
  %63 = load i64, i64* %7, align 8
  %64 = lshr i64 %61, 7
  %65 = ptrtoint i8* %62 to i64
  %66 = lshr i64 %65, 12
  %67 = xor i64 %64, %66
  %68 = and i64 %67, %63
  %69 = getelementptr inbounds i8, i8* %62, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp slt <16 x i8> %71, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %51, %75
  %76 = phi i64 [ %80, %75 ], [ %68, %51 ]
  %77 = phi i64 [ %78, %75 ], [ 0, %51 ]
  %78 = add i64 %77, 16
  %79 = add i64 %78, %76
  %80 = and i64 %79, %63
  %81 = getelementptr inbounds i8, i8* %62, i64 %80
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = icmp slt <16 x i8> %83, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %85 = bitcast <16 x i1> %84 to i16
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %75, label %87

87:                                               ; preds = %75, %51
  %88 = phi i64 [ %68, %51 ], [ %80, %75 ]
  %89 = phi i16 [ %73, %51 ], [ %85, %75 ]
  %90 = zext i16 %89 to i32
  %91 = tail call i32 @llvm.cttz.i32(i32 %90, i1 false) #11, !range !44
  %92 = zext i32 %91 to i64
  %93 = add i64 %88, %92
  %94 = and i64 %93, %63
  %95 = trunc i128 %60 to i8
  %96 = and i8 %95, 127
  %97 = getelementptr inbounds i8, i8* %62, i64 %94
  store i8 %96, i8* %97, align 1
  %98 = load i8*, i8** %3, align 8
  %99 = add i64 %94, -15
  %100 = load i64, i64* %7, align 8
  %101 = and i64 %99, %100
  %102 = and i64 %100, 15
  %103 = add i64 %101, %102
  %104 = getelementptr inbounds i8, i8* %98, i64 %103
  store i8 %96, i8* %104, align 1
  %105 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %106 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %105, i64 %94
  tail call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_(%"class.std::__1::allocator.26"* %28, %"union.absl::container_internal::map_slot_type"* %106, %"union.absl::container_internal::map_slot_type"* %36) #11
  br label %107

107:                                              ; preds = %30, %87
  %108 = add nuw i64 %31, 1
  %109 = icmp eq i64 %108, %8
  br i1 %109, label %29, label %30

110:                                              ; preds = %29
  tail call void @_ZdlPv(i8* %4) #15
  br label %111

111:                                              ; preds = %2, %29, %110
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #10 comdat align 2 {
  %2 = alloca %"union.absl::container_internal::map_slot_type", align 8
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %4, i64 %6) #11
  %7 = bitcast %"union.absl::container_internal::map_slot_type"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 64, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %13 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %14 = bitcast %"class.absl::container_internal::CompressedTuple"* %11 to %"class.std::__1::allocator.26"*
  %15 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1
  %16 = bitcast %"class.absl::flat_hash_set"* %15 to i64*
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 3
  %21 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"** %17 to i8*
  %24 = bitcast %"union.absl::container_internal::map_slot_type"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %35

27:                                               ; preds = %197, %1
  %28 = phi i64 [ 0, %1 ], [ %199, %197 ]
  %29 = lshr i64 %28, 3
  %30 = sub i64 %28, %29
  %31 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #11
  ret void

35:                                               ; preds = %10, %197
  %36 = phi i64 [ 0, %10 ], [ %199, %197 ]
  %37 = load i8*, i8** %3, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, -2
  br i1 %40, label %41, label %197

41:                                               ; preds = %35
  %42 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %12, align 8
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %42, i64 %36, i32 0
  %44 = bitcast %"struct.std::__1::pair.35"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = zext i8 %46 to i64
  %50 = ptrtoint %"struct.std::__1::pair.35"* %43 to i64
  br label %58

51:                                               ; preds = %41
  %52 = bitcast %"struct.std::__1::pair.35"* %43 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %42, i64 %36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp sgt i64 %55, -1
  br i1 %56, label %58, label %57, !prof !21

57:                                               ; preds = %51
  call void @llvm.trap() #11
  unreachable

58:                                               ; preds = %48, %51
  %59 = phi i64 [ %53, %51 ], [ %50, %48 ]
  %60 = phi i64 [ %55, %51 ], [ %49, %48 ]
  %61 = inttoptr i64 %59 to i8*
  %62 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %13, i8* %61, i64 %60) #11
  %63 = add i64 %62, %60
  %64 = zext i64 %63 to i128
  %65 = mul nuw i128 %64, 11376068507788127593
  %66 = lshr i128 %65, 64
  %67 = xor i128 %66, %65
  %68 = trunc i128 %67 to i64
  %69 = load i8*, i8** %3, align 8
  %70 = load i64, i64* %5, align 8
  %71 = lshr i64 %68, 7
  %72 = ptrtoint i8* %69 to i64
  %73 = lshr i64 %72, 12
  %74 = xor i64 %71, %73
  %75 = and i64 %74, %70
  %76 = getelementptr inbounds i8, i8* %69, i64 %75
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1
  %79 = icmp slt <16 x i8> %78, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %80 = bitcast <16 x i1> %79 to i16
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %58, %82
  %83 = phi i64 [ %87, %82 ], [ %75, %58 ]
  %84 = phi i64 [ %85, %82 ], [ 0, %58 ]
  %85 = add i64 %84, 16
  %86 = add i64 %85, %83
  %87 = and i64 %86, %70
  %88 = getelementptr inbounds i8, i8* %69, i64 %87
  %89 = bitcast i8* %88 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1
  %91 = icmp slt <16 x i8> %90, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %92 = bitcast <16 x i1> %91 to i16
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %82, label %94

94:                                               ; preds = %82, %58
  %95 = phi i64 [ %75, %58 ], [ %87, %82 ]
  %96 = phi i16 [ %80, %58 ], [ %92, %82 ]
  %97 = zext i16 %96 to i32
  %98 = call i32 @llvm.cttz.i32(i32 %97, i1 false) #11, !range !44
  %99 = zext i32 %98 to i64
  %100 = add i64 %95, %99
  %101 = and i64 %100, %70
  %102 = sub i64 %101, %75
  %103 = sub i64 %36, %75
  %104 = xor i64 %102, %103
  %105 = and i64 %104, %70
  %106 = icmp ult i64 %105, 16
  br i1 %106, label %107, label %118, !prof !21

107:                                              ; preds = %94
  %108 = trunc i128 %67 to i8
  %109 = and i8 %108, 127
  %110 = getelementptr inbounds i8, i8* %69, i64 %36
  store i8 %109, i8* %110, align 1
  %111 = load i8*, i8** %3, align 8
  %112 = add i64 %36, -15
  %113 = load i64, i64* %5, align 8
  %114 = and i64 %113, %112
  %115 = and i64 %113, 15
  %116 = add i64 %114, %115
  %117 = getelementptr inbounds i8, i8* %111, i64 %116
  store i8 %109, i8* %117, align 1
  br label %197

118:                                              ; preds = %94
  %119 = getelementptr inbounds i8, i8* %69, i64 %101
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, -128
  %122 = trunc i128 %67 to i8
  %123 = and i8 %122, 127
  store i8 %123, i8* %119, align 1
  %124 = load i8*, i8** %3, align 8
  %125 = add i64 %101, -15
  %126 = load i64, i64* %5, align 8
  %127 = and i64 %126, %125
  %128 = and i64 %126, 15
  %129 = add i64 %127, %128
  %130 = getelementptr inbounds i8, i8* %124, i64 %129
  store i8 %123, i8* %130, align 1
  %131 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %12, align 8
  br i1 %121, label %132, label %144

132:                                              ; preds = %118
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %131, i64 %101
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %131, i64 %36
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_(%"class.std::__1::allocator.26"* %14, %"union.absl::container_internal::map_slot_type"* %133, %"union.absl::container_internal::map_slot_type"* %134) #11
  %135 = load i8*, i8** %3, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %36
  store i8 -128, i8* %136, align 1
  %137 = load i8*, i8** %3, align 8
  %138 = add i64 %36, -15
  %139 = load i64, i64* %5, align 8
  %140 = and i64 %139, %138
  %141 = and i64 %139, 15
  %142 = add i64 %140, %141
  %143 = getelementptr inbounds i8, i8* %137, i64 %142
  store i8 -128, i8* %143, align 1
  br label %197

144:                                              ; preds = %118
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %131, i64 %36
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_(%"class.std::__1::allocator.26"* %14, %"union.absl::container_internal::map_slot_type"* nonnull %2, %"union.absl::container_internal::map_slot_type"* %145) #11
  %146 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %12, align 8
  %147 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %146, i64 %36
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %146, i64 %101
  call void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_(%"class.std::__1::allocator.26"* %14, %"union.absl::container_internal::map_slot_type"* %147, %"union.absl::container_internal::map_slot_type"* %148) #11
  %149 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %12, align 8
  %150 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101
  %151 = bitcast %"union.absl::container_internal::map_slot_type"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %7, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %152 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101, i32 0, i32 1
  %153 = load i64, i64* %16, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %16, align 8
  %154 = bitcast %"class.absl::flat_hash_set"* %152 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101, i32 0, i32 1, i32 0, i32 1
  %156 = load i64, i64* %18, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %17, align 8
  %157 = bitcast %"class.std::__1::basic_string"** %155 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101, i32 0, i32 1, i32 0, i32 2
  %159 = load i64, i64* %19, align 8
  store i64 0, i64* %19, align 8
  store i64 %159, i64* %158, align 8
  %160 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101, i32 0, i32 1, i32 0, i32 3
  %161 = load i64, i64* %20, align 8
  store i64 0, i64* %20, align 8
  store i64 %161, i64* %160, align 8
  %162 = load i64, i64* %21, align 8
  store i64 0, i64* %21, align 8
  %163 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %149, i64 %101, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %162, i64* %163, align 8
  %164 = load i64, i64* %20, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %190, label %168

166:                                              ; preds = %186
  %167 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %167) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %22, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #11
  br label %190

168:                                              ; preds = %144, %186
  %169 = phi i64 [ %187, %186 ], [ %164, %144 ]
  %170 = phi i64 [ %188, %186 ], [ 0, %144 ]
  %171 = load i8*, i8** %22, align 8
  %172 = getelementptr inbounds i8, i8* %171, i64 %170
  %173 = load i8, i8* %172, align 1
  %174 = icmp sgt i8 %173, -1
  br i1 %174, label %175, label %186

175:                                              ; preds = %168
  %176 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 %170
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #15
  %185 = load i64, i64* %20, align 8
  br label %186

186:                                              ; preds = %182, %175, %168
  %187 = phi i64 [ %185, %182 ], [ %169, %175 ], [ %169, %168 ]
  %188 = add i64 %170, 1
  %189 = icmp eq i64 %188, %187
  br i1 %189, label %166, label %168

190:                                              ; preds = %166, %144
  %191 = load i8, i8* %25, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %190
  %194 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %194) #15
  br label %195

195:                                              ; preds = %190, %193
  %196 = add i64 %36, -1
  br label %197

197:                                              ; preds = %107, %195, %132, %35
  %198 = phi i64 [ %36, %35 ], [ %36, %107 ], [ %36, %132 ], [ %196, %195 ]
  %199 = add i64 %198, 1
  %200 = load i64, i64* %5, align 8
  %201 = icmp eq i64 %199, %200
  br i1 %201, label %27, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal15map_slot_policyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_13flat_hash_setIS8_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEEEE8transferINS6_INS2_4pairIKS8_SE_EEEEEEvPT_PNS0_13map_slot_typeIS8_SE_EESP_(%"class.std::__1::allocator.26"*, %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"union.absl::container_internal::map_slot_type"* %1 to i8*
  %5 = bitcast %"union.absl::container_internal::map_slot_type"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %1, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.absl::flat_hash_set"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 ptrtoint ([16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group to i64), i64* %8, align 8
  %10 = bitcast %"class.absl::flat_hash_set"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %12, align 8
  %15 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %1, i64 0, i32 0, i32 1, i32 0, i32 2
  %17 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 2
  %18 = load i64, i64* %17, align 8
  store i64 0, i64* %17, align 8
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %1, i64 0, i32 0, i32 1, i32 0, i32 3
  %20 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 3
  %21 = load i64, i64* %20, align 8
  store i64 0, i64* %20, align 8
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  store i64 0, i64* %22, align 8
  %24 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %1, i64 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i64, i64* %20, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %32

29:                                               ; preds = %50
  %30 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %30) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %28, align 8
  %31 = bitcast %"class.std::__1::basic_string"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #11
  br label %54

32:                                               ; preds = %50, %27
  %33 = phi i64 [ %25, %27 ], [ %51, %50 ]
  %34 = phi i64 [ 0, %27 ], [ %52, %50 ]
  %35 = load i8*, i8** %28, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = icmp sgt i8 %37, -1
  br i1 %38, label %39, label %50

39:                                               ; preds = %32
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %34
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #15
  %49 = load i64, i64* %20, align 8
  br label %50

50:                                               ; preds = %46, %39, %32
  %51 = phi i64 [ %49, %46 ], [ %33, %39 ], [ %33, %32 ]
  %52 = add i64 %34, 1
  %53 = icmp eq i64 %52, %51
  br i1 %53, label %29, label %32

54:                                               ; preds = %29, %3
  %55 = bitcast %"union.absl::container_internal::map_slot_type"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %54, %59
  ret void
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE22find_or_prepare_insertIS9_EENS3_4pairImbEERKT_(%"class.absl::container_internal::raw_hash_set.29"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !21

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #11
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !44
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %76
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"class.std::__1::basic_string"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"class.std::__1::basic_string"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !21

91:                                               ; preds = %85
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !83

95:                                               ; preds = %92
  tail call void @llvm.trap() #11
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !84

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #11
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !21

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !2

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.29"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.29"*, i64) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !44
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !21

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6resizeEm(%"class.absl::container_internal::raw_hash_set.29"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.29"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6resizeEm(%"class.absl::container_internal::raw_hash_set.29"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !44
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6resizeEm(%"class.absl::container_internal::raw_hash_set.29"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 1
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 24
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #15
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"class.std::__1::basic_string"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %111, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %107
  br i1 %24, label %111, label %110

28:                                               ; preds = %25, %107
  %29 = phi i64 [ 0, %25 ], [ %108, %107 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %107

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 %29
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = zext i8 %37 to i64
  %41 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  br label %49

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::basic_string"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp sgt i64 %46, -1
  br i1 %47, label %49, label %48, !prof !21

48:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %39, %42
  %50 = phi i64 [ %44, %42 ], [ %41, %39 ]
  %51 = phi i64 [ %46, %42 ], [ %40, %39 ]
  %52 = inttoptr i64 %50 to i8*
  %53 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %52, i64 %51) #11
  %54 = add i64 %53, %51
  %55 = zext i64 %54 to i128
  %56 = mul nuw i128 %55, 11376068507788127593
  %57 = lshr i128 %56, 64
  %58 = xor i128 %57, %56
  %59 = trunc i128 %58 to i64
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %7, align 8
  %62 = lshr i64 %59, 7
  %63 = ptrtoint i8* %60 to i64
  %64 = lshr i64 %63, 12
  %65 = xor i64 %62, %64
  %66 = and i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %60, i64 %66
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %49, %73
  %74 = phi i64 [ %78, %73 ], [ %66, %49 ]
  %75 = phi i64 [ %76, %73 ], [ 0, %49 ]
  %76 = add i64 %75, 16
  %77 = add i64 %76, %74
  %78 = and i64 %77, %61
  %79 = getelementptr inbounds i8, i8* %60, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp slt <16 x i8> %81, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %73, label %85

85:                                               ; preds = %73, %49
  %86 = phi i64 [ %66, %49 ], [ %78, %73 ]
  %87 = phi i16 [ %71, %49 ], [ %83, %73 ]
  %88 = zext i16 %87 to i32
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 false) #11, !range !44
  %90 = zext i32 %89 to i64
  %91 = add i64 %86, %90
  %92 = and i64 %91, %61
  %93 = trunc i128 %58 to i8
  %94 = and i8 %93, 127
  %95 = getelementptr inbounds i8, i8* %60, i64 %92
  store i8 %94, i8* %95, align 1
  %96 = load i8*, i8** %3, align 8
  %97 = add i64 %92, -15
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %97, %98
  %100 = and i64 %98, 15
  %101 = add i64 %99, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  store i8 %94, i8* %102, align 1
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 %92
  %105 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #11
  br label %107

107:                                              ; preds = %28, %85
  %108 = add nuw i64 %29, 1
  %109 = icmp eq i64 %108, %8
  br i1 %109, label %27, label %28

110:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #15
  br label %111

111:                                              ; preds = %2, %27, %110
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.29"*) local_unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %171, %1
  %12 = phi i64 [ 0, %1 ], [ %173, %171 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %171
  %20 = phi i64 [ 0, %8 ], [ %173, %171 ]
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -2
  br i1 %24, label %25, label %171

25:                                               ; preds = %19
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %20
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = zext i8 %30 to i64
  %34 = ptrtoint %"class.std::__1::basic_string"* %27 to i64
  br label %42

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::basic_string"* %27 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %42, label %41, !prof !21

41:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %32, %35
  %43 = phi i64 [ %37, %35 ], [ %34, %32 ]
  %44 = phi i64 [ %39, %35 ], [ %33, %32 ]
  %45 = inttoptr i64 %43 to i8*
  %46 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %10, i8* %45, i64 %44) #11
  %47 = add i64 %46, %44
  %48 = zext i64 %47 to i128
  %49 = mul nuw i128 %48, 11376068507788127593
  %50 = lshr i128 %49, 64
  %51 = xor i128 %50, %49
  %52 = trunc i128 %51 to i64
  %53 = load i8*, i8** %2, align 8
  %54 = load i64, i64* %4, align 8
  %55 = lshr i64 %52, 7
  %56 = ptrtoint i8* %53 to i64
  %57 = lshr i64 %56, 12
  %58 = xor i64 %55, %57
  %59 = and i64 %58, %54
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp slt <16 x i8> %62, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %42, %66
  %67 = phi i64 [ %71, %66 ], [ %59, %42 ]
  %68 = phi i64 [ %69, %66 ], [ 0, %42 ]
  %69 = add i64 %68, 16
  %70 = add i64 %69, %67
  %71 = and i64 %70, %54
  %72 = getelementptr inbounds i8, i8* %53, i64 %71
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = icmp slt <16 x i8> %74, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %76 = bitcast <16 x i1> %75 to i16
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %66, label %78

78:                                               ; preds = %66, %42
  %79 = phi i64 [ %59, %42 ], [ %71, %66 ]
  %80 = phi i16 [ %64, %42 ], [ %76, %66 ]
  %81 = zext i16 %80 to i32
  %82 = tail call i32 @llvm.cttz.i32(i32 %81, i1 false) #11, !range !44
  %83 = zext i32 %82 to i64
  %84 = add i64 %79, %83
  %85 = and i64 %84, %54
  %86 = sub i64 %85, %59
  %87 = sub i64 %20, %59
  %88 = xor i64 %86, %87
  %89 = and i64 %88, %54
  %90 = icmp ult i64 %89, 16
  br i1 %90, label %91, label %102, !prof !21

91:                                               ; preds = %78
  %92 = trunc i128 %51 to i8
  %93 = and i8 %92, 127
  %94 = getelementptr inbounds i8, i8* %53, i64 %20
  store i8 %93, i8* %94, align 1
  %95 = load i8*, i8** %2, align 8
  %96 = add i64 %20, -15
  %97 = load i64, i64* %4, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %93, i8* %101, align 1
  br label %171

102:                                              ; preds = %78
  %103 = getelementptr inbounds i8, i8* %53, i64 %85
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, -128
  %106 = trunc i128 %51 to i8
  %107 = and i8 %106, 127
  store i8 %107, i8* %103, align 1
  %108 = load i8*, i8** %2, align 8
  %109 = add i64 %85, -15
  %110 = load i64, i64* %4, align 8
  %111 = and i64 %110, %109
  %112 = and i64 %110, 15
  %113 = add i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  store i8 %107, i8* %114, align 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  br i1 %105, label %116, label %130

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 %85
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 %20
  %119 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #11
  %121 = load i8*, i8** %2, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 %20
  store i8 -128, i8* %122, align 1
  %123 = load i8*, i8** %2, align 8
  %124 = add i64 %20, -15
  %125 = load i64, i64* %4, align 8
  %126 = and i64 %125, %124
  %127 = and i64 %125, 15
  %128 = add i64 %126, %127
  %129 = getelementptr inbounds i8, i8* %123, i64 %128
  store i8 -128, i8* %129, align 1
  br label %171

130:                                              ; preds = %102
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 %20
  %132 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %131 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %136 = bitcast i64* %135 to i8*
  %137 = load i8, i8* %136, align 8
  %138 = getelementptr inbounds i8, i8* %132, i64 17
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds i8, i8* %132, i64 18
  %141 = load i8, i8* %140, align 2
  %142 = getelementptr inbounds i8, i8* %132, i64 19
  %143 = load i8, i8* %142, align 1
  %144 = getelementptr inbounds i8, i8* %132, i64 20
  %145 = load i8, i8* %144, align 4
  %146 = getelementptr inbounds i8, i8* %132, i64 21
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds i8, i8* %132, i64 22
  %149 = load i8, i8* %148, align 2
  %150 = getelementptr inbounds i8, i8* %132, i64 23
  %151 = load i8, i8* %150, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #11
  %152 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 %20
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 %85
  %155 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  %156 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #11
  %157 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 %85
  %159 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  %160 = bitcast %"class.std::__1::basic_string"* %158 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %162 = bitcast i64* %161 to i8*
  store i8 %137, i8* %162, align 8
  %163 = getelementptr inbounds i8, i8* %159, i64 17
  store i8 %139, i8* %163, align 1
  %164 = getelementptr inbounds i8, i8* %159, i64 18
  store i8 %141, i8* %164, align 2
  %165 = getelementptr inbounds i8, i8* %159, i64 19
  store i8 %143, i8* %165, align 1
  %166 = getelementptr inbounds i8, i8* %159, i64 20
  store i8 %145, i8* %166, align 4
  %167 = getelementptr inbounds i8, i8* %159, i64 21
  store i8 %147, i8* %167, align 1
  %168 = getelementptr inbounds i8, i8* %159, i64 22
  store i8 %149, i8* %168, align 2
  %169 = getelementptr inbounds i8, i8* %159, i64 23
  store i8 %151, i8* %169, align 1
  %170 = add i64 %20, -1
  br label %171

171:                                              ; preds = %91, %130, %116, %19
  %172 = phi i64 [ %20, %19 ], [ %20, %91 ], [ %20, %116 ], [ %170, %130 ]
  %173 = add i64 %172, 1
  %174 = load i64, i64* %4, align 8
  %175 = icmp eq i64 %173, %174
  br i1 %175, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"class.std::__1::basic_string"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE4findIS9_EENSF_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.29"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.29", %"class.absl::container_internal::raw_hash_set.29"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  %21 = zext i8 %19 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  %28 = or i1 %20, %27
  %29 = select i1 %20, i64 %21, i64 %26
  %30 = select i1 %20, i64 %22, i64 %24
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %89, %3
  %33 = phi i64 [ %11, %3 ], [ %91, %89 ]
  %34 = phi i64 [ 0, %3 ], [ %90, %89 ]
  %35 = and i64 %33, %7
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %15, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %45

45:                                               ; preds = %42, %78
  %46 = phi i32 [ %43, %42 ], [ %80, %78 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #11, !range !44
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %7
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 %50
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = zext i8 %54 to i64
  %58 = ptrtoint %"class.std::__1::basic_string"* %51 to i64
  br label %66

59:                                               ; preds = %45
  %60 = bitcast %"class.std::__1::basic_string"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, -1
  br i1 %64, label %66, label %65, !prof !21

65:                                               ; preds = %59
  tail call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %59, %56
  %67 = phi i64 [ %61, %59 ], [ %58, %56 ]
  %68 = phi i64 [ %63, %59 ], [ %57, %56 ]
  br i1 %28, label %70, label %69, !prof !83

69:                                               ; preds = %66
  tail call void @llvm.trap() #11
  unreachable

70:                                               ; preds = %66
  %71 = inttoptr i64 %67 to i8*
  %72 = icmp eq i64 %68, %29
  br i1 %72, label %73, label %78, !prof !84

73:                                               ; preds = %70
  %74 = icmp eq i64 %68, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %73
  %76 = tail call i32 @bcmp(i8* %71, i8* %31, i64 %68) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78, !prof !21

78:                                               ; preds = %70, %75
  %79 = add i32 %46, -1
  %80 = and i32 %79, %46
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %45

82:                                               ; preds = %73, %75
  %83 = getelementptr inbounds i8, i8* %5, i64 %50
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #11
  br label %92

85:                                               ; preds = %78, %32
  %86 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %92, !prof !2

89:                                               ; preds = %85
  %90 = add i64 %34, 16
  %91 = add i64 %90, %35
  br label %32

92:                                               ; preds = %85, %82
  %93 = phi %"class.std::__1::basic_string"* [ %51, %82 ], [ undef, %85 ]
  %94 = phi i8* [ %83, %82 ], [ null, %85 ]
  %95 = insertvalue { i8*, %"class.std::__1::basic_string"* } undef, i8* %94, 0
  %96 = insertvalue { i8*, %"class.std::__1::basic_string"* } %95, %"class.std::__1::basic_string"* %93, 1
  ret { i8*, %"class.std::__1::basic_string"* } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  %21 = zext i8 %19 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  %28 = or i1 %20, %27
  %29 = select i1 %20, i64 %21, i64 %26
  %30 = select i1 %20, i64 %22, i64 %24
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %89, %3
  %33 = phi i64 [ %11, %3 ], [ %91, %89 ]
  %34 = phi i64 [ 0, %3 ], [ %90, %89 ]
  %35 = and i64 %33, %7
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %15, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %16, align 8
  br label %45

45:                                               ; preds = %42, %78
  %46 = phi i32 [ %43, %42 ], [ %80, %78 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #11, !range !44
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %7
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50
  %52 = bitcast %"union.absl::container_internal::map_slot_type"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = zext i8 %54 to i64
  %58 = ptrtoint %"union.absl::container_internal::map_slot_type"* %51 to i64
  br label %66

59:                                               ; preds = %45
  %60 = bitcast %"union.absl::container_internal::map_slot_type"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, -1
  br i1 %64, label %66, label %65, !prof !21

65:                                               ; preds = %59
  tail call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %59, %56
  %67 = phi i64 [ %61, %59 ], [ %58, %56 ]
  %68 = phi i64 [ %63, %59 ], [ %57, %56 ]
  br i1 %28, label %70, label %69, !prof !83

69:                                               ; preds = %66
  tail call void @llvm.trap() #11
  unreachable

70:                                               ; preds = %66
  %71 = inttoptr i64 %67 to i8*
  %72 = icmp eq i64 %68, %29
  br i1 %72, label %73, label %78, !prof !84

73:                                               ; preds = %70
  %74 = icmp eq i64 %68, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %73
  %76 = tail call i32 @bcmp(i8* %71, i8* %31, i64 %68) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78, !prof !21

78:                                               ; preds = %70, %75
  %79 = add i32 %46, -1
  %80 = and i32 %79, %46
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %45

82:                                               ; preds = %73, %75
  %83 = getelementptr inbounds i8, i8* %5, i64 %50
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #11
  br label %92

85:                                               ; preds = %78, %32
  %86 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %92, !prof !2

89:                                               ; preds = %85
  %90 = add i64 %34, 16
  %91 = add i64 %90, %35
  br label %32

92:                                               ; preds = %85, %82
  %93 = phi %"union.absl::container_internal::map_slot_type"* [ %51, %82 ], [ undef, %85 ]
  %94 = phi i8* [ %83, %82 ], [ null, %85 ]
  %95 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } undef, i8* %94, 0
  %96 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %95, %"union.absl::container_internal::map_slot_type"* %93, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type"* } %96
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_: argument 0"}
!14 = distinct !{!14, !"_ZN4absl8StrSplitIcEENS_16strings_internal8SplitterINS1_15SelectDelimiterIT_E4typeENS_10AllowEmptyENS_11string_viewEEENS1_23ConvertibleToStringViewES4_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEEvEEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEEvEEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4absl9StrFormatIJmmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_: argument 0"}
!20 = distinct !{!20, !"_ZN4absl9StrFormatIJmmEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_19str_format_internal18FormatSpecTemplateIJXspclsr19str_format_internalE14ArgumentToConvIT_EEEEEEDpRKSA_"}
!21 = !{!"branch_weights", i32 2000, i32 1}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISG_SB_SD_SK_E8iteratorEbEEOT_DpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISG_SB_SD_SK_E8iteratorEbEEOT_DpOT0_"}
!25 = distinct !{!25, !26, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE11try_emplaceIS9_JELi0EEENSH_INS0_12raw_hash_setISG_SB_SD_SK_E8iteratorEbEERKT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_13flat_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEEEEESB_SD_NS7_INS3_4pairIKS9_SF_EEEEE11try_emplaceIS9_JELi0EEENSH_INS0_12raw_hash_setISG_SB_SD_SK_E8iteratorEbEERKT_DpOT0_"}
!27 = !{!28, !30, !32, !34, !36, !38}
!28 = distinct !{!28, !29, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_"}
!30 = distinct !{!30, !31, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_: argument 0"}
!31 = distinct !{!31, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_"}
!32 = distinct !{!32, !33, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_: argument 0"}
!33 = distinct !{!33, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_"}
!34 = distinct !{!34, !35, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_: argument 0"}
!35 = distinct !{!35, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_"}
!36 = distinct !{!36, !37, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_"}
!38 = distinct !{!38, !39, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN4absl8OkStatusEv: argument 0"}
!42 = distinct !{!42, !"_ZN4absl8OkStatusEv"}
!43 = !{}
!44 = !{i32 0, i32 33}
!45 = !{!46, !48, !50, !52, !54, !56}
!46 = distinct !{!46, !47, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_"}
!48 = distinct !{!48, !49, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_: argument 0"}
!49 = distinct !{!49, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_"}
!50 = distinct !{!50, !51, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_: argument 0"}
!51 = distinct !{!51, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_"}
!52 = distinct !{!52, !53, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_: argument 0"}
!53 = distinct !{!53, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_"}
!54 = distinct !{!54, !55, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_"}
!56 = distinct !{!56, !57, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_: argument 0"}
!57 = distinct !{!57, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_"}
!58 = !{!59, !61, !63, !65, !67, !69}
!59 = distinct !{!59, !60, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_: argument 0"}
!60 = distinct !{!60, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableclIS9_JRKS9_EEENS3_4pairINSF_8iteratorEbEERKT_DpOT0_"}
!61 = distinct !{!61, !62, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_: argument 0"}
!62 = distinct !{!62, !"_ZN4absl18container_internal14DecomposeValueINS0_12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS8_ISA_EEE19EmplaceDecomposableERKSA_EEDTclclsr3stdE7declvalIT_EEclsr3stdE7declvalIRKT0_EEclsr3stdE7declvalISL_EEEEOSK_OSL_"}
!63 = distinct !{!63, !64, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_: argument 0"}
!64 = distinct !{!64, !"_ZN4absl18container_internal17FlatHashSetPolicyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE5applyINS0_12raw_hash_setIS9_NS0_10StringHashENS0_12StringHashEq2EqENS6_IS8_EEE19EmplaceDecomposableEJRKS8_EEEDTclsr4absl18container_internalE14DecomposeValueclsr3stdE7declvalIT_EEspclsr3stdE7declvalIT0_EEEEOSK_DpOSL_"}
!65 = distinct !{!65, !66, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_: argument 0"}
!66 = distinct !{!66, !"_ZN4absl18container_internal18hash_policy_traitsINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvE5applyINS0_12raw_hash_setISA_NS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE19EmplaceDecomposableEJRKS9_ESA_EEDTclsrT1_5applyclsr3stdE7forwardIT_Efp_Espclsr3stdE7forwardIT0_Efp0_EEEOSN_DpOSO_"}
!67 = distinct !{!67, !68, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_: argument 0"}
!68 = distinct !{!68, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE7emplaceIJRKS9_ELi0EEENS3_4pairINSF_8iteratorEbEEDpOT_"}
!69 = distinct !{!69, !70, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_: argument 0"}
!70 = distinct !{!70, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS0_10StringHashENS0_12StringHashEq2EqENS7_IS9_EEE6insertIS9_Li0ELi0EEENS3_4pairINSF_8iteratorEbEERKT_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEE5beginEv"}
!74 = distinct !{!74, !75}
!75 = !{!"llvm.loop.unroll.disable"}
!76 = distinct !{!76, !75}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv: argument 0"}
!79 = distinct !{!79, !"_ZNK4absl16strings_internal8SplitterINS_6ByCharENS_10AllowEmptyENS_11string_viewEEcvT_INSt3__16vectorIS4_NS8_9allocatorIS4_EEEEvEEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!82 = distinct !{!82, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!83 = !{!"branch_weights", i32 4001, i32 1}
!84 = !{!"branch_weights", i32 2146410443, i32 1073205}
