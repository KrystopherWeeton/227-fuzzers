; ModuleID = '../../ui/events/ozone/evdev/touch_filter/edge_touch_filter.cc'
source_filename = "../../ui/events/ozone/evdev/touch_filter/edge_touch_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::EdgeTouchFilter" = type { %"class.ui::TouchFilter", [20 x %"class.gfx::Point"], %"class.std::__1::bitset", %"class.gfx::Size" }
%"class.ui::TouchFilter" = type { i32 (...)** }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::InProgressTouchEvdev"*, %"struct.ui::InProgressTouchEvdev"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::InProgressTouchEvdev" = type <{ i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], float, float, i32, [4 x i8], i64, float, float, float, i32, i32, float, float, i32, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::InProgressTouchEvdev"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }

@_ZTVN2ui15EdgeTouchFilterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::EdgeTouchFilter"*)* @_ZN2ui15EdgeTouchFilterD2Ev to i8*), i8* bitcast (void (%"class.ui::EdgeTouchFilter"*)* @_ZN2ui15EdgeTouchFilterD0Ev to i8*), i8* bitcast (void (%"class.ui::EdgeTouchFilter"*, %"class.std::__1::vector"*, i64, %"class.std::__1::bitset"*)* @_ZN2ui15EdgeTouchFilter6FilterERKNSt3__16vectorINS_20InProgressTouchEvdevENS1_9allocatorIS3_EEEEN4base9TimeTicksEPNS1_6bitsetILm20EEE to i8*)] }, align 8

@_ZN2ui15EdgeTouchFilterC1ERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.ui::EdgeTouchFilter"*, %"class.gfx::Size"*), void (%"class.ui::EdgeTouchFilter"*, %"class.gfx::Size"*)* @_ZN2ui15EdgeTouchFilterC2ERKN3gfx4SizeE
@_ZN2ui15EdgeTouchFilterD1Ev = hidden unnamed_addr alias void (%"class.ui::EdgeTouchFilter"*), void (%"class.ui::EdgeTouchFilter"*)* @_ZN2ui15EdgeTouchFilterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui15EdgeTouchFilterC2ERKN3gfx4SizeE(%"class.ui::EdgeTouchFilter"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui15EdgeTouchFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 1, i64 0
  %5 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 3
  %6 = bitcast %"class.gfx::Size"* %1 to i64*
  %7 = bitcast %"class.gfx::Size"* %5 to i64*
  %8 = bitcast %"class.gfx::Point"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 168, i1 false)
  %9 = load i64, i64* %6, align 4
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui15EdgeTouchFilterD2Ev(%"class.ui::EdgeTouchFilter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15EdgeTouchFilterD0Ev(%"class.ui::EdgeTouchFilter"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::EdgeTouchFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15EdgeTouchFilter6FilterERKNSt3__16vectorINS_20InProgressTouchEvdevENS1_9allocatorIS3_EEEEN4base9TimeTicksEPNS1_6bitsetILm20EEE(%"class.ui::EdgeTouchFilter"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64, %"class.std::__1::bitset"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca <4 x i32>, align 16
  %7 = bitcast <4 x i32>* %6 to %"class.gfx::Insets"*
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %9 = load %"struct.ui::InProgressTouchEvdev"*, %"struct.ui::InProgressTouchEvdev"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = load %"struct.ui::InProgressTouchEvdev"*, %"struct.ui::InProgressTouchEvdev"** %10, align 8
  %12 = icmp eq %"struct.ui::InProgressTouchEvdev"* %9, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 3
  %15 = bitcast %"class.gfx::Size"* %14 to i64*
  %16 = bitcast %"class.gfx::Rect"* %5 to i8*
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %20 = bitcast %"class.gfx::Size"* %19 to i64*
  %21 = bitcast <4 x i32>* %6 to i8*
  %22 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

23:                                               ; preds = %83, %4
  %24 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 2, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %3, i64 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = or i64 %27, %25
  store i64 %28, i64* %26, align 8
  ret void

29:                                               ; preds = %13, %83
  %30 = phi %"struct.ui::InProgressTouchEvdev"* [ %9, %13 ], [ %84, %83 ]
  %31 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 0, i32 17
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 0, i32 13
  %34 = load float, float* %33, align 8
  %35 = fptosi float %34 to i32
  %36 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 0, i32 14
  %37 = load float, float* %36, align 4
  %38 = fptosi float %37 to i32
  %39 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 0, i32 11
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 0, i32 10
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %41, label %45, label %46

45:                                               ; preds = %29
  br i1 %44, label %83, label %67

46:                                               ; preds = %29
  br i1 %44, label %47, label %67

47:                                               ; preds = %46
  %48 = load i64, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i64 %48, i64* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %6, align 16
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %5, %"class.gfx::Insets"* nonnull dereferenceable(16) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8
  %49 = call zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"* nonnull %5, i32 %35, i32 %38) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  %50 = icmp ugt i64 %32, 19
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  call void @abort() #9
  unreachable

52:                                               ; preds = %47
  %53 = shl i64 1, %32
  br i1 %49, label %54, label %58

54:                                               ; preds = %52
  %55 = xor i64 %53, -1
  %56 = load i64, i64* %22, align 8
  %57 = and i64 %56, %55
  store i64 %57, i64* %22, align 8
  br label %67

58:                                               ; preds = %52
  %59 = load i64, i64* %22, align 8
  %60 = or i64 %59, %53
  store i64 %60, i64* %22, align 8
  %61 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 1, i64 %32
  %62 = bitcast %"class.gfx::Point"* %61 to i64*
  %63 = zext i32 %38 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %35 to i64
  %66 = or i64 %64, %65
  store i64 %66, i64* %62, align 8
  br label %67

67:                                               ; preds = %45, %54, %58, %46
  %68 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 1, i64 %32, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %35
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.ui::EdgeTouchFilter", %"class.ui::EdgeTouchFilter"* %0, i64 0, i32 1, i64 %32, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %38
  br i1 %74, label %83, label %75

75:                                               ; preds = %71, %67
  %76 = icmp ugt i64 %32, 19
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  call void @abort() #9
  unreachable

78:                                               ; preds = %75
  %79 = shl i64 1, %32
  %80 = xor i64 %79, -1
  %81 = load i64, i64* %22, align 8
  %82 = and i64 %81, %80
  store i64 %82, i64* %22, align 8
  br label %83

83:                                               ; preds = %71, %45, %78
  %84 = getelementptr inbounds %"struct.ui::InProgressTouchEvdev", %"struct.ui::InProgressTouchEvdev"* %30, i64 1
  %85 = icmp eq %"struct.ui::InProgressTouchEvdev"* %84, %11
  br i1 %85, label %23, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZNK3gfx4Rect8ContainsEii(%"class.gfx::Rect"*, i32, i32) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
