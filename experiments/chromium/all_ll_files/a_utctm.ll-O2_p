; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_utctm.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_utctm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/asn1/a_utctm.c\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"%02d%02d%02d%02d%02d%02dZ\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @asn1_utctime_to_tm(%struct.tm*, %struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 23
  br i1 %5, label %6, label %92

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = icmp slt i32 %8, 11
  br i1 %11, label %92, label %14

12:                                               ; preds = %194, %194, %194
  br i1 %15, label %43, label %13

13:                                               ; preds = %12
  store i32 0, i32* %16, align 8
  br label %43

14:                                               ; preds = %6
  %15 = icmp eq %struct.tm* %0, null
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 0
  %17 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 1
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 2
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %0, i64 0, i32 5
  %22 = load i8, i8* %10, align 1
  %23 = sext i8 %22 to i32
  %24 = add i8 %22, -48
  %25 = icmp ult i8 %24, 10
  br i1 %25, label %26, label %92

26:                                               ; preds = %14
  %27 = getelementptr inbounds i8, i8* %10, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = add i8 %28, -48
  %30 = icmp ugt i8 %29, 9
  br i1 %30, label %92, label %31

31:                                               ; preds = %26
  %32 = sext i8 %28 to i32
  %33 = mul nsw i32 %23, 10
  %34 = add nsw i32 %33, -480
  %35 = add nsw i32 %34, %32
  %36 = add nsw i32 %35, -48
  %37 = icmp ugt i32 %36, 99
  br i1 %37, label %92, label %38

38:                                               ; preds = %31
  br i1 %15, label %112, label %39

39:                                               ; preds = %38
  %40 = icmp slt i32 %36, 50
  %41 = add nuw nsw i32 %35, 52
  %42 = select i1 %40, i32 %41, i32 %36
  store i32 %42, i32* %21, align 4
  br label %112

43:                                               ; preds = %215, %216, %12, %13
  %44 = phi i32 [ 10, %12 ], [ 10, %13 ], [ 12, %216 ], [ 12, %215 ]
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %10, i64 %45
  %47 = load i8, i8* %46, align 1
  switch i8 %47, label %88 [
    i8 90, label %48
    i8 43, label %50
    i8 45, label %50
  ]

48:                                               ; preds = %43
  %49 = or i32 %44, 1
  br label %88

50:                                               ; preds = %43, %43
  %51 = icmp eq i8 %47, 45
  %52 = select i1 %51, i32 1, i32 -1
  %53 = add nuw nsw i32 %44, 5
  %54 = icmp sgt i32 %53, %8
  br i1 %54, label %92, label %55

55:                                               ; preds = %50
  %56 = or i32 %44, 1
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %10, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = add i8 %59, -48
  %62 = icmp ugt i8 %61, 9
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = add nuw nsw i64 %57, 1
  %65 = getelementptr inbounds i8, i8* %10, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = add i8 %66, -48
  %68 = icmp ugt i8 %67, 9
  br i1 %68, label %92, label %69

69:                                               ; preds = %63
  %70 = sext i8 %66 to i32
  %71 = mul nsw i32 %60, 10
  %72 = add nsw i32 %71, -528
  %73 = add nsw i32 %72, %70
  %74 = icmp ugt i32 %73, 12
  br i1 %74, label %92, label %75

75:                                               ; preds = %69
  %76 = mul nsw i32 %73, 3600
  %77 = add nuw nsw i64 %57, 2
  %78 = getelementptr inbounds i8, i8* %10, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = add i8 %79, -48
  %82 = icmp ugt i8 %81, 9
  br i1 %82, label %92, label %94

83:                                               ; preds = %106
  %84 = mul nsw i32 %108, %52
  %85 = sext i32 %84 to i64
  %86 = tail call i32 @OPENSSL_gmtime_adj(%struct.tm* %0, i32 0, i64 %85) #4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %83, %106, %43, %48
  %89 = phi i32 [ %49, %48 ], [ %44, %43 ], [ %109, %106 ], [ %109, %83 ]
  %90 = icmp eq i32 %89, %8
  %91 = zext i1 %90 to i32
  br label %92

92:                                               ; preds = %26, %31, %14, %112, %118, %123, %133, %139, %144, %154, %160, %165, %174, %180, %185, %197, %201, %206, %69, %63, %55, %75, %94, %100, %83, %50, %6, %2, %88
  %93 = phi i32 [ %91, %88 ], [ 0, %2 ], [ 0, %6 ], [ 0, %50 ], [ 0, %83 ], [ 0, %100 ], [ 0, %94 ], [ 0, %75 ], [ 0, %55 ], [ 0, %63 ], [ 0, %69 ], [ 0, %206 ], [ 0, %201 ], [ 0, %197 ], [ 0, %185 ], [ 0, %180 ], [ 0, %174 ], [ 0, %165 ], [ 0, %160 ], [ 0, %154 ], [ 0, %144 ], [ 0, %139 ], [ 0, %133 ], [ 0, %123 ], [ 0, %118 ], [ 0, %112 ], [ 0, %14 ], [ 0, %31 ], [ 0, %26 ]
  ret i32 %93

94:                                               ; preds = %75
  %95 = add nuw nsw i64 %57, 3
  %96 = getelementptr inbounds i8, i8* %10, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = add i8 %97, -48
  %99 = icmp ugt i8 %98, 9
  br i1 %99, label %92, label %100

100:                                              ; preds = %94
  %101 = sext i8 %97 to i32
  %102 = mul nsw i32 %80, 10
  %103 = add nsw i32 %102, -528
  %104 = add nsw i32 %103, %101
  %105 = icmp ugt i32 %104, 59
  br i1 %105, label %92, label %106

106:                                              ; preds = %100
  %107 = mul nsw i32 %104, 60
  %108 = add nsw i32 %76, %107
  %109 = add nuw nsw i32 %56, 4
  %110 = icmp eq i32 %108, 0
  %111 = or i1 %15, %110
  br i1 %111, label %88, label %83

112:                                              ; preds = %38, %39
  %113 = getelementptr inbounds i8, i8* %10, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = sext i8 %114 to i32
  %116 = add i8 %114, -48
  %117 = icmp ult i8 %116, 10
  br i1 %117, label %118, label %92

118:                                              ; preds = %112
  %119 = getelementptr inbounds i8, i8* %10, i64 3
  %120 = load i8, i8* %119, align 1
  %121 = add i8 %120, -48
  %122 = icmp ugt i8 %121, 9
  br i1 %122, label %92, label %123

123:                                              ; preds = %118
  %124 = sext i8 %120 to i32
  %125 = mul nsw i32 %115, 10
  %126 = add nsw i32 %125, -480
  %127 = add nsw i32 %126, %124
  %128 = add nsw i32 %127, -49
  %129 = icmp ugt i32 %128, 11
  br i1 %129, label %92, label %130

130:                                              ; preds = %123
  br i1 %15, label %133, label %131

131:                                              ; preds = %130
  %132 = add nsw i32 %127, -49
  store i32 %132, i32* %20, align 8
  br label %133

133:                                              ; preds = %131, %130
  %134 = getelementptr inbounds i8, i8* %10, i64 4
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = add i8 %135, -48
  %138 = icmp ult i8 %137, 10
  br i1 %138, label %139, label %92

139:                                              ; preds = %133
  %140 = getelementptr inbounds i8, i8* %10, i64 5
  %141 = load i8, i8* %140, align 1
  %142 = add i8 %141, -48
  %143 = icmp ugt i8 %142, 9
  br i1 %143, label %92, label %144

144:                                              ; preds = %139
  %145 = sext i8 %141 to i32
  %146 = mul nsw i32 %136, 10
  %147 = add nsw i32 %146, -480
  %148 = add nsw i32 %147, %145
  %149 = add nsw i32 %148, -48
  %150 = add nsw i32 %148, -49
  %151 = icmp ugt i32 %150, 30
  br i1 %151, label %92, label %152

152:                                              ; preds = %144
  br i1 %15, label %154, label %153

153:                                              ; preds = %152
  store i32 %149, i32* %19, align 4
  br label %154

154:                                              ; preds = %153, %152
  %155 = getelementptr inbounds i8, i8* %10, i64 6
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %158 = add i8 %156, -48
  %159 = icmp ult i8 %158, 10
  br i1 %159, label %160, label %92

160:                                              ; preds = %154
  %161 = getelementptr inbounds i8, i8* %10, i64 7
  %162 = load i8, i8* %161, align 1
  %163 = add i8 %162, -48
  %164 = icmp ugt i8 %163, 9
  br i1 %164, label %92, label %165

165:                                              ; preds = %160
  %166 = sext i8 %162 to i32
  %167 = mul nsw i32 %157, 10
  %168 = add nsw i32 %167, -480
  %169 = add nsw i32 %168, %166
  %170 = add nsw i32 %169, -48
  %171 = icmp ugt i32 %170, 23
  br i1 %171, label %92, label %172

172:                                              ; preds = %165
  br i1 %15, label %174, label %173

173:                                              ; preds = %172
  store i32 %170, i32* %18, align 8
  br label %174

174:                                              ; preds = %173, %172
  %175 = getelementptr inbounds i8, i8* %10, i64 8
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = add i8 %176, -48
  %179 = icmp ult i8 %178, 10
  br i1 %179, label %180, label %92

180:                                              ; preds = %174
  %181 = getelementptr inbounds i8, i8* %10, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = add i8 %182, -48
  %184 = icmp ugt i8 %183, 9
  br i1 %184, label %92, label %185

185:                                              ; preds = %180
  %186 = sext i8 %182 to i32
  %187 = mul nsw i32 %177, 10
  %188 = add nsw i32 %187, -480
  %189 = add nsw i32 %188, %186
  %190 = add nsw i32 %189, -48
  %191 = icmp ugt i32 %190, 59
  br i1 %191, label %92, label %192

192:                                              ; preds = %185
  br i1 %15, label %194, label %193

193:                                              ; preds = %192
  store i32 %190, i32* %17, align 4
  br label %194

194:                                              ; preds = %192, %193
  %195 = getelementptr inbounds i8, i8* %10, i64 10
  %196 = load i8, i8* %195, align 1
  switch i8 %196, label %197 [
    i8 90, label %12
    i8 43, label %12
    i8 45, label %12
  ]

197:                                              ; preds = %194
  %198 = sext i8 %196 to i32
  %199 = add i8 %196, -48
  %200 = icmp ult i8 %199, 10
  br i1 %200, label %201, label %92

201:                                              ; preds = %197
  %202 = getelementptr inbounds i8, i8* %10, i64 11
  %203 = load i8, i8* %202, align 1
  %204 = add i8 %203, -48
  %205 = icmp ugt i8 %204, 9
  br i1 %205, label %92, label %206

206:                                              ; preds = %201
  %207 = sext i8 %203 to i32
  %208 = mul nsw i32 %198, 10
  %209 = add nsw i32 %208, -480
  %210 = add nsw i32 %209, %207
  %211 = add nsw i32 %210, -48
  %212 = icmp slt i32 %8, 12
  %213 = icmp ugt i32 %211, 59
  %214 = or i1 %213, %212
  br i1 %214, label %92, label %215

215:                                              ; preds = %206
  br i1 %15, label %43, label %216

216:                                              ; preds = %215
  store i32 %211, i32* %16, align 8
  br label %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @OPENSSL_gmtime_adj(%struct.tm*, i32, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_UTCTIME_check(%struct.asn1_string_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i32 @asn1_utctime_to_tm(%struct.tm* null, %struct.asn1_string_st* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_UTCTIME_set_string(%struct.asn1_string_st*, i8*) local_unnamed_addr #0 {
  %3 = alloca %struct.asn1_string_st, align 8
  %4 = bitcast %struct.asn1_string_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 3
  store i64 -6148914691236517206, i64* %8, align 8
  store i32 23, i32* %6, align 4
  %9 = tail call i64 @strlen(i8* %1) #5
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %5, align 8
  store i8* %1, i8** %7, align 8
  %11 = call i32 @asn1_utctime_to_tm(%struct.tm* null, %struct.asn1_string_st* nonnull %3) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = icmp eq %struct.asn1_string_st* %0, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %13
  %16 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %0, i8* %1, i32 %10) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 1
  store i32 23, i32* %19, align 4
  br label %20

20:                                               ; preds = %2, %18, %13, %15
  %21 = phi i32 [ 0, %15 ], [ 1, %13 ], [ 1, %18 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret i32 %21
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_UTCTIME_set(%struct.asn1_string_st*, i64) local_unnamed_addr #0 {
  %3 = tail call %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st* %0, i64 %1, i32 0, i64 0)
  ret %struct.asn1_string_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st*, i64, i32, i64) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.tm, align 8
  store i64 %1, i64* %5, align 8
  %7 = bitcast %struct.tm* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = icmp eq %struct.asn1_string_st* %0, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = tail call %struct.asn1_string_st* @ASN1_UTCTIME_new() #4
  %11 = icmp eq %struct.asn1_string_st* %10, null
  br i1 %11, label %70, label %12

12:                                               ; preds = %4, %9
  %13 = phi i32 [ 1, %9 ], [ 0, %4 ]
  %14 = phi %struct.asn1_string_st* [ %10, %9 ], [ %0, %4 ]
  %15 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %5, %struct.tm* nonnull %6) #4
  %16 = icmp eq %struct.tm* %15, null
  br i1 %16, label %67, label %17

17:                                               ; preds = %12
  %18 = icmp ne i32 %2, 0
  %19 = icmp ne i64 %3, 0
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = call i32 @OPENSSL_gmtime_adj(%struct.tm* nonnull %15, i32 %2, i64 %3) #4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %21, %17
  %25 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -50
  %28 = icmp ugt i32 %27, 99
  br i1 %28, label %67, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, 20
  br i1 %36, label %37, label %47

37:                                               ; preds = %33, %29
  %38 = call i8* @OPENSSL_malloc(i64 20) #4
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 221) #4
  br label %67

41:                                               ; preds = %37
  %42 = load i8*, i8** %30, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  call void @OPENSSL_free(i8* nonnull %42) #4
  br label %45

45:                                               ; preds = %41, %44
  store i8* %38, i8** %30, align 8
  %46 = load i32, i32* %25, align 4
  br label %47

47:                                               ; preds = %45, %33
  %48 = phi i32 [ %46, %45 ], [ %26, %33 ]
  %49 = phi i8* [ %38, %45 ], [ %31, %33 ]
  %50 = srem i32 %48, 100
  %51 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = add nsw i32 %52, 1
  %54 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.tm, %struct.tm* %15, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %49, i64 20, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %50, i32 %53, i32 %55, i32 %57, i32 %59, i32 %61) #4
  %63 = call i64 @strlen(i8* nonnull %49) #5
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 1
  store i32 23, i32* %66, align 4
  br label %70

67:                                               ; preds = %21, %24, %12, %40
  %68 = icmp eq i32 %13, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  call void @ASN1_UTCTIME_free(%struct.asn1_string_st* nonnull %14) #4
  br label %70

70:                                               ; preds = %67, %9, %69, %47
  %71 = phi %struct.asn1_string_st* [ %14, %47 ], [ null, %69 ], [ null, %67 ], [ null, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #4
  ret %struct.asn1_string_st* %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.asn1_string_st* @ASN1_UTCTIME_new() local_unnamed_addr #2

declare %struct.tm* @OPENSSL_gmtime(i64*, %struct.tm*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare void @ASN1_UTCTIME_free(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_UTCTIME_cmp_time_t(%struct.asn1_string_st* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64 %1, i64* %3, align 8
  %8 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4
  store i32 -1431655766, i32* %6, align 4
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #4
  store i32 -1431655766, i32* %7, align 4
  %12 = call i32 @asn1_utctime_to_tm(%struct.tm* nonnull %4, %struct.asn1_string_st* %0)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %3, %struct.tm* nonnull %5) #4
  %16 = icmp eq %struct.tm* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %14
  %18 = call i32 @OPENSSL_gmtime_diff(i32* nonnull %6, i32* nonnull %7, %struct.tm* nonnull %5, %struct.tm* nonnull %4) #4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = load i32, i32* %6, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %20
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = load i32, i32* %7, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = icmp ne i32 %26, 0
  %30 = sext i1 %29 to i32
  br label %31

31:                                               ; preds = %28, %25, %23, %20, %17, %14, %2
  %32 = phi i32 [ -2, %2 ], [ -2, %14 ], [ -2, %17 ], [ 1, %20 ], [ -1, %23 ], [ 1, %25 ], [ %30, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #4
  ret i32 %32
}

declare i32 @OPENSSL_gmtime_diff(i32*, i32*, %struct.tm*, %struct.tm*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
