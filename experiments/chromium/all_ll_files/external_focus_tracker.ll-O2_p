; ModuleID = '../../ui/views/focus/external_focus_tracker.cc'
source_filename = "../../ui/views/focus/external_focus_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::ExternalFocusTracker" = type { %"class.views::FocusChangeListener", %"class.views::FocusManager"*, %"class.views::View"*, %"class.std::__1::unique_ptr.153" }
%"class.views::FocusChangeListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type { %"class.views::ViewObserver", %"class.views::View"*, %"class.base::ScopedObservation" }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.base::ScopedObservation" = type { %"class.views::ViewObserver"*, %"class.views::View"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.41", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.48", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.67", %"class.absl::optional.73", i8, [7 x i8], %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.95", i8, i8, [3 x i8], %"class.std::__1::vector.100", %"class.std::__1::unique_ptr.107", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.113", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", %"class.base::ObserverList.138", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.1", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.10", %"class.std::__1::vector.17", %"class.ui::EventHandler"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.12" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.32" }
%"class.std::__1::map.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::vector.41"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.55, %class.SkTDArray.56, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.55 = type { i8*, i32, i32 }
%class.SkTDArray.56 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.62 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.57" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.62 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.63", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.90, float, [4 x i8] }>
%class.sk_sp.90 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.91", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { i8 }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::vector.116"* }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.118" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.138" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.139", i64, i32, [4 x i8] }>
%"class.base::LinkedList.139" = type { %"class.base::LinkNode.140" }
%"class.base::LinkNode.140" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.153", i32, [4 x i8], %"class.base::ObserverList.159", i8, i8, i32 }
%"class.views::Widget" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.142" }
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.base::ObserverList.159" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.160", i64, i32, [4 x i8] }>
%"class.base::LinkedList.160" = type { %"class.base::LinkNode.161" }
%"class.base::LinkNode.161" = type { %"class.base::internal::LinkNodeBase" }

@_ZTVN5views20ExternalFocusTrackerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::ExternalFocusTracker"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views20ExternalFocusTracker17OnWillChangeFocusEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::ExternalFocusTracker"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views20ExternalFocusTracker16OnDidChangeFocusEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::ExternalFocusTracker"*)* @_ZN5views20ExternalFocusTrackerD2Ev to i8*), i8* bitcast (void (%"class.views::ExternalFocusTracker"*)* @_ZN5views20ExternalFocusTrackerD0Ev to i8*)] }, align 8

@_ZN5views20ExternalFocusTrackerC1EPNS_4ViewEPNS_12FocusManagerE = hidden unnamed_addr alias void (%"class.views::ExternalFocusTracker"*, %"class.views::View"*, %"class.views::FocusManager"*), void (%"class.views::ExternalFocusTracker"*, %"class.views::View"*, %"class.views::FocusManager"*)* @_ZN5views20ExternalFocusTrackerC2EPNS_4ViewEPNS_12FocusManagerE
@_ZN5views20ExternalFocusTrackerD1Ev = hidden unnamed_addr alias void (%"class.views::ExternalFocusTracker"*), void (%"class.views::ExternalFocusTracker"*)* @_ZN5views20ExternalFocusTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTrackerC2EPNS_4ViewEPNS_12FocusManagerE(%"class.views::ExternalFocusTracker"*, %"class.views::View"*, %"class.views::FocusManager"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views20ExternalFocusTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 1
  store %"class.views::FocusManager"* %2, %"class.views::FocusManager"** %5, align 8
  %6 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 2
  store %"class.views::View"* %1, %"class.views::View"** %6, align 8
  %7 = tail call i8* @_Znwm(i64 32) #5
  %8 = bitcast i8* %7 to %"class.views::ViewTracker"*
  tail call void @_ZN5views11ViewTrackerC1EPNS_4ViewE(%"class.views::ViewTracker"* nonnull %8, %"class.views::View"* null) #6
  %9 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = bitcast %"class.views::ViewTracker"** %9 to i8**
  store i8* %7, i8** %10, align 8
  %11 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %5, align 8
  %12 = icmp eq %"class.views::FocusManager"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %11, i64 0, i32 3
  %16 = load %"class.views::View"*, %"class.views::View"** %15, align 8
  tail call void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"* nonnull %8, %"class.views::View"* %16) #6
  %17 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %5, align 8
  tail call void @_ZN5views12FocusManager22AddFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* %17, %"class.views::FocusChangeListener"* %14) #6
  br label %18

18:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker13StartTrackingEv(%"class.views::ExternalFocusTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 1
  %3 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %2, align 8
  %4 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %3, i64 0, i32 3
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %6, align 8
  tail call void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"* %7, %"class.views::View"* %5) #6
  %8 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %2, align 8
  %9 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  tail call void @_ZN5views12FocusManager22AddFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* %8, %"class.views::FocusChangeListener"* %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTrackerD2Ev(%"class.views::ExternalFocusTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views20ExternalFocusTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 1
  %4 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %3, align 8
  %5 = icmp eq %"class.views::FocusManager"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  tail call void @_ZN5views12FocusManager25RemoveFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* nonnull %4, %"class.views::FocusChangeListener"* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %9, align 8
  store %"class.views::ViewTracker"* null, %"class.views::ViewTracker"** %9, align 8
  %11 = icmp eq %"class.views::ViewTracker"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.views::ViewTracker"* %10 to void (%"class.views::ViewTracker"*)***
  %14 = load void (%"class.views::ViewTracker"*)**, void (%"class.views::ViewTracker"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.views::ViewTracker"*)*, void (%"class.views::ViewTracker"*)** %14, i64 16
  %16 = load void (%"class.views::ViewTracker"*)*, void (%"class.views::ViewTracker"*)** %15, align 8
  tail call void %16(%"class.views::ViewTracker"* nonnull %10) #6
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

declare void @_ZN5views12FocusManager25RemoveFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"*, %"class.views::FocusChangeListener"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTrackerD0Ev(%"class.views::ExternalFocusTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views20ExternalFocusTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 1
  %4 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %3, align 8
  %5 = icmp eq %"class.views::FocusManager"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  tail call void @_ZN5views12FocusManager25RemoveFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* nonnull %4, %"class.views::FocusChangeListener"* %7) #6
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %9, align 8
  store %"class.views::ViewTracker"* null, %"class.views::ViewTracker"** %9, align 8
  %11 = icmp eq %"class.views::ViewTracker"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.views::ViewTracker"* %10 to void (%"class.views::ViewTracker"*)***
  %14 = load void (%"class.views::ViewTracker"*)**, void (%"class.views::ViewTracker"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.views::ViewTracker"*)*, void (%"class.views::ViewTracker"*)** %14, i64 16
  %16 = load void (%"class.views::ViewTracker"*)*, void (%"class.views::ViewTracker"*)** %15, align 8
  tail call void %16(%"class.views::ViewTracker"* nonnull %10) #6
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.views::ExternalFocusTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker17OnWillChangeFocusEPNS_4ViewES2_(%"class.views::ExternalFocusTracker"* nocapture readonly, %"class.views::View"* nocapture readnone, %"class.views::View"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.views::View"* %2, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 2
  %7 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5views4View8ContainsEPKS0_(%"class.views::View"* %7, %"class.views::View"* nonnull %2) #6
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %11 = icmp eq %"class.views::View"* %10, %2
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %13, align 8
  tail call void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"* %14, %"class.views::View"* nonnull %2) #6
  br label %15

15:                                               ; preds = %9, %3, %12, %5
  ret void
}

declare zeroext i1 @_ZNK5views4View8ContainsEPKS0_(%"class.views::View"*, %"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker20StoreLastFocusedViewEPNS_4ViewE(%"class.views::ExternalFocusTracker"* nocapture readonly, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %3, align 8
  tail call void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"* %4, %"class.views::View"* %1) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker16OnDidChangeFocusEPNS_4ViewES2_(%"class.views::ExternalFocusTracker"* nocapture, %"class.views::View"* nocapture, %"class.views::View"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker28FocusLastFocusedExternalViewEv(%"class.views::ExternalFocusTracker"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ViewTracker", %"class.views::ViewTracker"* %3, i64 0, i32 1
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = icmp eq %"class.views::View"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.views::View"* %5 to void (%"class.views::View"*)***
  %9 = load void (%"class.views::View"*)**, void (%"class.views::View"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::View"*)*, void (%"class.views::View"*)** %9, i64 64
  %11 = load void (%"class.views::View"*)*, void (%"class.views::View"*)** %10, align 8
  tail call void %11(%"class.views::View"* nonnull %5) #6
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views20ExternalFocusTracker15SetFocusManagerEPNS_12FocusManagerE(%"class.views::ExternalFocusTracker"*, %"class.views::FocusManager"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 1
  %4 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %3, align 8
  %5 = icmp eq %"class.views::FocusManager"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  tail call void @_ZN5views12FocusManager25RemoveFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* nonnull %4, %"class.views::FocusChangeListener"* %7) #6
  br label %8

8:                                                ; preds = %2, %6
  store %"class.views::FocusManager"* %1, %"class.views::FocusManager"** %3, align 8
  %9 = icmp eq %"class.views::FocusManager"* %1, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %1, i64 0, i32 3
  %12 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %13 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.views::ViewTracker"*, %"class.views::ViewTracker"** %13, align 8
  tail call void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"* %14, %"class.views::View"* %12) #6
  %15 = load %"class.views::FocusManager"*, %"class.views::FocusManager"** %3, align 8
  %16 = getelementptr inbounds %"class.views::ExternalFocusTracker", %"class.views::ExternalFocusTracker"* %0, i64 0, i32 0
  tail call void @_ZN5views12FocusManager22AddFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"* %15, %"class.views::FocusChangeListener"* %16) #6
  br label %17

17:                                               ; preds = %8, %10
  ret void
}

declare void @_ZN5views11ViewTracker7SetViewEPNS_4ViewE(%"class.views::ViewTracker"*, %"class.views::View"*) local_unnamed_addr #1

declare void @_ZN5views12FocusManager22AddFocusChangeListenerEPNS_19FocusChangeListenerE(%"class.views::FocusManager"*, %"class.views::FocusChangeListener"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN5views11ViewTrackerC1EPNS_4ViewE(%"class.views::ViewTracker"*, %"class.views::View"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
