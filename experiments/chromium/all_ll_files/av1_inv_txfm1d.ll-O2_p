; ModuleID = '../../third_party/libaom/source/libaom/av1/common/av1_inv_txfm1d.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/av1_inv_txfm1d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@av1_cospi_arr_data = external local_unnamed_addr constant [7 x [64 x i32]], align 16
@av1_sinpi_arr_data = external local_unnamed_addr constant [7 x [5 x i32]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_idct4(i32*, i32*, i8 signext, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [4 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 3
  %14 = load i32, i32* %0, align 4
  store i32 %14, i32* %1, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds i32, i32* %0, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds i32, i32* %0, i64 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %3, i64 1
  %25 = load i8, i8* %24, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 4, i8 signext %25) #4
  %26 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %27 = load i32, i32* %26, align 16
  %28 = load i32, i32* %1, align 4
  %29 = load i32, i32* %17, align 4
  %30 = mul nsw i32 %28, %27
  %31 = sext i32 %30 to i64
  %32 = mul i32 %29, %27
  %33 = sext i32 %32 to i64
  %34 = add nsw i32 %6, -1
  %35 = zext i32 %34 to i64
  %36 = shl i64 1, %35
  %37 = add i64 %36, %31
  %38 = add i64 %37, %33
  %39 = zext i32 %6 to i64
  %40 = ashr i64 %38, %39
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %10, align 16
  %42 = sub i32 0, %32
  %43 = sext i32 %42 to i64
  %44 = add i64 %37, %43
  %45 = ashr i64 %44, %39
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %11, align 4
  %47 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %48 = load i32, i32* %47, align 16
  %49 = load i32, i32* %20, align 4
  %50 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %51 = load i32, i32* %50, align 16
  %52 = load i32, i32* %23, align 4
  %53 = mul nsw i32 %49, %48
  %54 = sext i32 %53 to i64
  %55 = mul i32 %51, %52
  %56 = sub i32 0, %55
  %57 = sext i32 %56 to i64
  %58 = add i64 %36, %54
  %59 = add i64 %58, %57
  %60 = ashr i64 %59, %39
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %12, align 8
  %62 = mul nsw i32 %51, %49
  %63 = sext i32 %62 to i64
  %64 = mul nsw i32 %52, %48
  %65 = sext i32 %64 to i64
  %66 = add i64 %36, %63
  %67 = add i64 %66, %65
  %68 = ashr i64 %67, %39
  %69 = trunc i64 %68 to i32
  store i32 %69, i32* %13, align 4
  %70 = getelementptr inbounds i8, i8* %3, i64 2
  %71 = load i8, i8* %70, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %10, i32 4, i8 signext %71) #4
  %72 = load i32, i32* %10, align 16
  %73 = load i32, i32* %13, align 4
  %74 = add nsw i32 %73, %72
  %75 = getelementptr inbounds i8, i8* %3, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 1
  br i1 %77, label %91, label %78

78:                                               ; preds = %4
  %79 = sext i8 %76 to i64
  %80 = add nuw nsw i64 %79, 4294967295
  %81 = and i64 %80, 4294967295
  %82 = shl i64 1, %81
  %83 = add nsw i64 %82, -1
  %84 = sub nsw i64 0, %82
  %85 = sext i32 %74 to i64
  %86 = icmp slt i64 %85, %84
  %87 = icmp slt i64 %83, %85
  %88 = select i1 %87, i64 %83, i64 %85
  %89 = select i1 %86, i64 %84, i64 %88
  %90 = trunc i64 %89 to i32
  br label %91

91:                                               ; preds = %4, %78
  %92 = phi i32 [ %90, %78 ], [ %74, %4 ]
  store i32 %92, i32* %1, align 4
  %93 = load i32, i32* %11, align 4
  %94 = load i32, i32* %12, align 8
  %95 = add nsw i32 %94, %93
  %96 = load i8, i8* %75, align 1
  %97 = icmp slt i8 %96, 1
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sext i8 %96 to i64
  %100 = add nuw nsw i64 %99, 4294967295
  %101 = and i64 %100, 4294967295
  %102 = shl i64 1, %101
  %103 = add nsw i64 %102, -1
  %104 = sub nsw i64 0, %102
  %105 = sext i32 %95 to i64
  %106 = icmp slt i64 %105, %104
  %107 = icmp slt i64 %103, %105
  %108 = select i1 %107, i64 %103, i64 %105
  %109 = select i1 %106, i64 %104, i64 %108
  %110 = trunc i64 %109 to i32
  br label %111

111:                                              ; preds = %91, %98
  %112 = phi i32 [ %110, %98 ], [ %95, %91 ]
  store i32 %112, i32* %17, align 4
  %113 = sub nsw i32 %93, %94
  %114 = load i8, i8* %75, align 1
  %115 = icmp slt i8 %114, 1
  br i1 %115, label %129, label %116

116:                                              ; preds = %111
  %117 = sext i8 %114 to i64
  %118 = add nuw nsw i64 %117, 4294967295
  %119 = and i64 %118, 4294967295
  %120 = shl i64 1, %119
  %121 = add nsw i64 %120, -1
  %122 = sub nsw i64 0, %120
  %123 = sext i32 %113 to i64
  %124 = icmp slt i64 %123, %122
  %125 = icmp slt i64 %121, %123
  %126 = select i1 %125, i64 %121, i64 %123
  %127 = select i1 %124, i64 %122, i64 %126
  %128 = trunc i64 %127 to i32
  br label %129

129:                                              ; preds = %111, %116
  %130 = phi i32 [ %128, %116 ], [ %113, %111 ]
  store i32 %130, i32* %20, align 4
  %131 = sub nsw i32 %72, %73
  %132 = load i8, i8* %75, align 1
  %133 = icmp slt i8 %132, 1
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = sext i8 %132 to i64
  %136 = add nuw nsw i64 %135, 4294967295
  %137 = and i64 %136, 4294967295
  %138 = shl i64 1, %137
  %139 = add nsw i64 %138, -1
  %140 = sub nsw i64 0, %138
  %141 = sext i32 %131 to i64
  %142 = icmp slt i64 %141, %140
  %143 = icmp slt i64 %139, %141
  %144 = select i1 %143, i64 %139, i64 %141
  %145 = select i1 %142, i64 %140, i64 %144
  %146 = trunc i64 %145 to i32
  br label %147

147:                                              ; preds = %129, %134
  %148 = phi i32 [ %146, %134 ], [ %131, %129 ]
  store i32 %148, i32* %23, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @av1_range_check_buf(i32, i32*, i32*, i32, i8 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_idct8(i32*, i32*, i8 signext, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [8 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [8 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 0
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 1
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 2
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 3
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 4
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 5
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 6
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 7
  %18 = load i32, i32* %0, align 4
  store i32 %18, i32* %1, align 4
  %19 = getelementptr inbounds i32, i32* %0, i64 4
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i32, i32* %0, i64 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 6
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds i32, i32* %0, i64 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %0, i64 5
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds i32, i32* %0, i64 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds i32, i32* %0, i64 7
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %3, i64 1
  %41 = load i8, i8* %40, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 8, i8 signext %41) #4
  %42 = bitcast i32* %1 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = bitcast [8 x i32]* %5 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %44, align 16
  %45 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 56
  %46 = load i32, i32* %45, align 16
  %47 = load i32, i32* %30, align 4
  %48 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 8
  %49 = load i32, i32* %48, align 16
  %50 = load i32, i32* %39, align 4
  %51 = mul nsw i32 %47, %46
  %52 = sext i32 %51 to i64
  %53 = mul i32 %49, %50
  %54 = sub i32 0, %53
  %55 = sext i32 %54 to i64
  %56 = add nsw i32 %6, -1
  %57 = zext i32 %56 to i64
  %58 = shl i64 1, %57
  %59 = add i64 %58, %52
  %60 = add i64 %59, %55
  %61 = zext i32 %6 to i64
  %62 = ashr i64 %60, %61
  %63 = trunc i64 %62 to i32
  store i32 %63, i32* %14, align 16
  %64 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 24
  %65 = load i32, i32* %64, align 16
  %66 = load i32, i32* %33, align 4
  %67 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 40
  %68 = load i32, i32* %67, align 16
  %69 = load i32, i32* %36, align 4
  %70 = mul nsw i32 %66, %65
  %71 = sext i32 %70 to i64
  %72 = mul i32 %68, %69
  %73 = sub i32 0, %72
  %74 = sext i32 %73 to i64
  %75 = add i64 %58, %71
  %76 = add i64 %75, %74
  %77 = ashr i64 %76, %61
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %15, align 4
  %79 = mul nsw i32 %68, %66
  %80 = sext i32 %79 to i64
  %81 = mul nsw i32 %69, %65
  %82 = sext i32 %81 to i64
  %83 = add i64 %58, %80
  %84 = add i64 %83, %82
  %85 = ashr i64 %84, %61
  %86 = trunc i64 %85 to i32
  store i32 %86, i32* %16, align 8
  %87 = mul nsw i32 %49, %47
  %88 = sext i32 %87 to i64
  %89 = mul nsw i32 %50, %46
  %90 = sext i32 %89 to i64
  %91 = add i64 %58, %88
  %92 = add i64 %91, %90
  %93 = ashr i64 %92, %61
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %17, align 4
  %95 = getelementptr inbounds i8, i8* %3, i64 2
  %96 = load i8, i8* %95, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %10, i32 8, i8 signext %96) #4
  %97 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %98 = load i32, i32* %97, align 16
  %99 = load i32, i32* %10, align 16
  %100 = load i32, i32* %11, align 4
  %101 = mul nsw i32 %99, %98
  %102 = sext i32 %101 to i64
  %103 = mul nsw i32 %100, %98
  %104 = sext i32 %103 to i64
  %105 = add i64 %58, %102
  %106 = add i64 %105, %104
  %107 = ashr i64 %106, %61
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %1, align 4
  %109 = sub nsw i32 0, %98
  %110 = mul nsw i32 %100, %109
  %111 = sext i32 %110 to i64
  %112 = add i64 %105, %111
  %113 = ashr i64 %112, %61
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %21, align 4
  %115 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %116 = load i32, i32* %115, align 16
  %117 = load i32, i32* %12, align 8
  %118 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %119 = load i32, i32* %118, align 16
  %120 = load i32, i32* %13, align 4
  %121 = mul nsw i32 %117, %116
  %122 = sext i32 %121 to i64
  %123 = mul i32 %119, %120
  %124 = sub i32 0, %123
  %125 = sext i32 %124 to i64
  %126 = add i64 %58, %122
  %127 = add i64 %126, %125
  %128 = ashr i64 %127, %61
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %24, align 4
  %130 = mul nsw i32 %119, %117
  %131 = sext i32 %130 to i64
  %132 = mul nsw i32 %120, %116
  %133 = sext i32 %132 to i64
  %134 = add i64 %58, %131
  %135 = add i64 %134, %133
  %136 = ashr i64 %135, %61
  %137 = trunc i64 %136 to i32
  store i32 %137, i32* %27, align 4
  %138 = load i32, i32* %14, align 16
  %139 = load i32, i32* %15, align 4
  %140 = add nsw i32 %139, %138
  %141 = getelementptr inbounds i8, i8* %3, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 1
  br i1 %143, label %157, label %144

144:                                              ; preds = %4
  %145 = sext i8 %142 to i64
  %146 = add nuw nsw i64 %145, 4294967295
  %147 = and i64 %146, 4294967295
  %148 = shl i64 1, %147
  %149 = add nsw i64 %148, -1
  %150 = sub nsw i64 0, %148
  %151 = sext i32 %140 to i64
  %152 = icmp slt i64 %151, %150
  %153 = icmp slt i64 %149, %151
  %154 = select i1 %153, i64 %149, i64 %151
  %155 = select i1 %152, i64 %150, i64 %154
  %156 = trunc i64 %155 to i32
  br label %157

157:                                              ; preds = %4, %144
  %158 = phi i32 [ %156, %144 ], [ %140, %4 ]
  store i32 %158, i32* %30, align 4
  %159 = sub nsw i32 %138, %139
  %160 = load i8, i8* %141, align 1
  %161 = icmp slt i8 %160, 1
  br i1 %161, label %175, label %162

162:                                              ; preds = %157
  %163 = sext i8 %160 to i64
  %164 = add nuw nsw i64 %163, 4294967295
  %165 = and i64 %164, 4294967295
  %166 = shl i64 1, %165
  %167 = add nsw i64 %166, -1
  %168 = sub nsw i64 0, %166
  %169 = sext i32 %159 to i64
  %170 = icmp slt i64 %169, %168
  %171 = icmp slt i64 %167, %169
  %172 = select i1 %171, i64 %167, i64 %169
  %173 = select i1 %170, i64 %168, i64 %172
  %174 = trunc i64 %173 to i32
  br label %175

175:                                              ; preds = %157, %162
  %176 = phi i32 [ %174, %162 ], [ %159, %157 ]
  store i32 %176, i32* %33, align 4
  %177 = load i32, i32* %16, align 8
  %178 = load i32, i32* %17, align 4
  %179 = sub i32 %178, %177
  %180 = load i8, i8* %141, align 1
  %181 = icmp slt i8 %180, 1
  br i1 %181, label %195, label %182

182:                                              ; preds = %175
  %183 = sext i8 %180 to i64
  %184 = add nuw nsw i64 %183, 4294967295
  %185 = and i64 %184, 4294967295
  %186 = shl i64 1, %185
  %187 = add nsw i64 %186, -1
  %188 = sub nsw i64 0, %186
  %189 = sext i32 %179 to i64
  %190 = icmp slt i64 %189, %188
  %191 = icmp slt i64 %187, %189
  %192 = select i1 %191, i64 %187, i64 %189
  %193 = select i1 %190, i64 %188, i64 %192
  %194 = trunc i64 %193 to i32
  br label %195

195:                                              ; preds = %175, %182
  %196 = phi i32 [ %194, %182 ], [ %179, %175 ]
  store i32 %196, i32* %36, align 4
  %197 = add nsw i32 %178, %177
  %198 = load i8, i8* %141, align 1
  %199 = icmp slt i8 %198, 1
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = sext i8 %198 to i64
  %202 = add nuw nsw i64 %201, 4294967295
  %203 = and i64 %202, 4294967295
  %204 = shl i64 1, %203
  %205 = add nsw i64 %204, -1
  %206 = sub nsw i64 0, %204
  %207 = sext i32 %197 to i64
  %208 = icmp slt i64 %207, %206
  %209 = icmp slt i64 %205, %207
  %210 = select i1 %209, i64 %205, i64 %207
  %211 = select i1 %208, i64 %206, i64 %210
  %212 = trunc i64 %211 to i32
  br label %213

213:                                              ; preds = %195, %200
  %214 = phi i32 [ %212, %200 ], [ %197, %195 ]
  store i32 %214, i32* %39, align 4
  %215 = load i8, i8* %141, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 8, i8 signext %215) #4
  %216 = load i32, i32* %1, align 4
  %217 = load i32, i32* %27, align 4
  %218 = add nsw i32 %217, %216
  %219 = getelementptr inbounds i8, i8* %3, i64 4
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 1
  br i1 %221, label %222, label %228

222:                                              ; preds = %213
  store i32 %218, i32* %10, align 16
  %223 = load i32, i32* %21, align 4
  %224 = load i32, i32* %24, align 4
  %225 = add nsw i32 %224, %223
  store i32 %225, i32* %11, align 4
  %226 = sub nsw i32 %223, %224
  store i32 %226, i32* %12, align 8
  %227 = sub nsw i32 %216, %217
  br label %264

228:                                              ; preds = %213
  %229 = sext i8 %220 to i64
  %230 = add nuw nsw i64 %229, 4294967295
  %231 = and i64 %230, 4294967295
  %232 = shl i64 1, %231
  %233 = add nsw i64 %232, -1
  %234 = sub nsw i64 0, %232
  %235 = sext i32 %218 to i64
  %236 = icmp slt i64 %235, %234
  %237 = icmp slt i64 %233, %235
  %238 = select i1 %237, i64 %233, i64 %235
  %239 = select i1 %236, i64 %234, i64 %238
  %240 = trunc i64 %239 to i32
  store i32 %240, i32* %10, align 16
  %241 = load i32, i32* %21, align 4
  %242 = load i32, i32* %24, align 4
  %243 = add nsw i32 %242, %241
  %244 = sext i32 %243 to i64
  %245 = icmp slt i64 %244, %234
  %246 = icmp slt i64 %233, %244
  %247 = select i1 %246, i64 %233, i64 %244
  %248 = select i1 %245, i64 %234, i64 %247
  %249 = trunc i64 %248 to i32
  store i32 %249, i32* %11, align 4
  %250 = sub nsw i32 %241, %242
  %251 = sext i32 %250 to i64
  %252 = icmp slt i64 %251, %234
  %253 = icmp slt i64 %233, %251
  %254 = select i1 %253, i64 %233, i64 %251
  %255 = select i1 %252, i64 %234, i64 %254
  %256 = trunc i64 %255 to i32
  store i32 %256, i32* %12, align 8
  %257 = sub nsw i32 %216, %217
  %258 = sext i32 %257 to i64
  %259 = icmp slt i64 %258, %234
  %260 = icmp slt i64 %233, %258
  %261 = select i1 %260, i64 %233, i64 %258
  %262 = select i1 %259, i64 %234, i64 %261
  %263 = trunc i64 %262 to i32
  br label %264

264:                                              ; preds = %222, %228
  %265 = phi i32 [ %263, %228 ], [ %227, %222 ]
  store i32 %265, i32* %13, align 4
  %266 = load i32, i32* %30, align 4
  store i32 %266, i32* %14, align 16
  %267 = load i32, i32* %33, align 4
  %268 = load i32, i32* %36, align 4
  %269 = mul nsw i32 %267, %109
  %270 = sext i32 %269 to i64
  %271 = mul nsw i32 %268, %98
  %272 = sext i32 %271 to i64
  %273 = add i64 %58, %272
  %274 = add i64 %273, %270
  %275 = ashr i64 %274, %61
  %276 = trunc i64 %275 to i32
  store i32 %276, i32* %15, align 4
  %277 = mul nsw i32 %267, %98
  %278 = sext i32 %277 to i64
  %279 = add i64 %273, %278
  %280 = ashr i64 %279, %61
  %281 = trunc i64 %280 to i32
  store i32 %281, i32* %16, align 8
  %282 = load i32, i32* %39, align 4
  store i32 %282, i32* %17, align 4
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %10, i32 8, i8 signext %220) #4
  %283 = load i32, i32* %10, align 16
  %284 = load i32, i32* %17, align 4
  %285 = add nsw i32 %284, %283
  %286 = getelementptr inbounds i8, i8* %3, i64 5
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 1
  br i1 %288, label %302, label %289

289:                                              ; preds = %264
  %290 = sext i8 %287 to i64
  %291 = add nuw nsw i64 %290, 4294967295
  %292 = and i64 %291, 4294967295
  %293 = shl i64 1, %292
  %294 = add nsw i64 %293, -1
  %295 = sub nsw i64 0, %293
  %296 = sext i32 %285 to i64
  %297 = icmp slt i64 %296, %295
  %298 = icmp slt i64 %294, %296
  %299 = select i1 %298, i64 %294, i64 %296
  %300 = select i1 %297, i64 %295, i64 %299
  %301 = trunc i64 %300 to i32
  br label %302

302:                                              ; preds = %264, %289
  %303 = phi i32 [ %301, %289 ], [ %285, %264 ]
  store i32 %303, i32* %1, align 4
  %304 = load i32, i32* %11, align 4
  %305 = load i32, i32* %16, align 8
  %306 = add nsw i32 %305, %304
  %307 = load i8, i8* %286, align 1
  %308 = icmp slt i8 %307, 1
  br i1 %308, label %322, label %309

309:                                              ; preds = %302
  %310 = sext i8 %307 to i64
  %311 = add nuw nsw i64 %310, 4294967295
  %312 = and i64 %311, 4294967295
  %313 = shl i64 1, %312
  %314 = add nsw i64 %313, -1
  %315 = sub nsw i64 0, %313
  %316 = sext i32 %306 to i64
  %317 = icmp slt i64 %316, %315
  %318 = icmp slt i64 %314, %316
  %319 = select i1 %318, i64 %314, i64 %316
  %320 = select i1 %317, i64 %315, i64 %319
  %321 = trunc i64 %320 to i32
  br label %322

322:                                              ; preds = %302, %309
  %323 = phi i32 [ %321, %309 ], [ %306, %302 ]
  store i32 %323, i32* %21, align 4
  %324 = load i32, i32* %12, align 8
  %325 = load i32, i32* %15, align 4
  %326 = add nsw i32 %325, %324
  %327 = load i8, i8* %286, align 1
  %328 = icmp slt i8 %327, 1
  br i1 %328, label %342, label %329

329:                                              ; preds = %322
  %330 = sext i8 %327 to i64
  %331 = add nuw nsw i64 %330, 4294967295
  %332 = and i64 %331, 4294967295
  %333 = shl i64 1, %332
  %334 = add nsw i64 %333, -1
  %335 = sub nsw i64 0, %333
  %336 = sext i32 %326 to i64
  %337 = icmp slt i64 %336, %335
  %338 = icmp slt i64 %334, %336
  %339 = select i1 %338, i64 %334, i64 %336
  %340 = select i1 %337, i64 %335, i64 %339
  %341 = trunc i64 %340 to i32
  br label %342

342:                                              ; preds = %322, %329
  %343 = phi i32 [ %341, %329 ], [ %326, %322 ]
  store i32 %343, i32* %24, align 4
  %344 = load i32, i32* %13, align 4
  %345 = load i32, i32* %14, align 16
  %346 = add nsw i32 %345, %344
  %347 = load i8, i8* %286, align 1
  %348 = icmp slt i8 %347, 1
  br i1 %348, label %362, label %349

349:                                              ; preds = %342
  %350 = sext i8 %347 to i64
  %351 = add nuw nsw i64 %350, 4294967295
  %352 = and i64 %351, 4294967295
  %353 = shl i64 1, %352
  %354 = add nsw i64 %353, -1
  %355 = sub nsw i64 0, %353
  %356 = sext i32 %346 to i64
  %357 = icmp slt i64 %356, %355
  %358 = icmp slt i64 %354, %356
  %359 = select i1 %358, i64 %354, i64 %356
  %360 = select i1 %357, i64 %355, i64 %359
  %361 = trunc i64 %360 to i32
  br label %362

362:                                              ; preds = %342, %349
  %363 = phi i32 [ %361, %349 ], [ %346, %342 ]
  store i32 %363, i32* %27, align 4
  %364 = sub nsw i32 %344, %345
  %365 = load i8, i8* %286, align 1
  %366 = icmp slt i8 %365, 1
  br i1 %366, label %380, label %367

367:                                              ; preds = %362
  %368 = sext i8 %365 to i64
  %369 = add nuw nsw i64 %368, 4294967295
  %370 = and i64 %369, 4294967295
  %371 = shl i64 1, %370
  %372 = add nsw i64 %371, -1
  %373 = sub nsw i64 0, %371
  %374 = sext i32 %364 to i64
  %375 = icmp slt i64 %374, %373
  %376 = icmp slt i64 %372, %374
  %377 = select i1 %376, i64 %372, i64 %374
  %378 = select i1 %375, i64 %373, i64 %377
  %379 = trunc i64 %378 to i32
  br label %380

380:                                              ; preds = %362, %367
  %381 = phi i32 [ %379, %367 ], [ %364, %362 ]
  store i32 %381, i32* %30, align 4
  %382 = sub nsw i32 %324, %325
  %383 = load i8, i8* %286, align 1
  %384 = icmp slt i8 %383, 1
  br i1 %384, label %398, label %385

385:                                              ; preds = %380
  %386 = sext i8 %383 to i64
  %387 = add nuw nsw i64 %386, 4294967295
  %388 = and i64 %387, 4294967295
  %389 = shl i64 1, %388
  %390 = add nsw i64 %389, -1
  %391 = sub nsw i64 0, %389
  %392 = sext i32 %382 to i64
  %393 = icmp slt i64 %392, %391
  %394 = icmp slt i64 %390, %392
  %395 = select i1 %394, i64 %390, i64 %392
  %396 = select i1 %393, i64 %391, i64 %395
  %397 = trunc i64 %396 to i32
  br label %398

398:                                              ; preds = %380, %385
  %399 = phi i32 [ %397, %385 ], [ %382, %380 ]
  store i32 %399, i32* %33, align 4
  %400 = sub nsw i32 %304, %305
  %401 = load i8, i8* %286, align 1
  %402 = icmp slt i8 %401, 1
  br i1 %402, label %416, label %403

403:                                              ; preds = %398
  %404 = sext i8 %401 to i64
  %405 = add nuw nsw i64 %404, 4294967295
  %406 = and i64 %405, 4294967295
  %407 = shl i64 1, %406
  %408 = add nsw i64 %407, -1
  %409 = sub nsw i64 0, %407
  %410 = sext i32 %400 to i64
  %411 = icmp slt i64 %410, %409
  %412 = icmp slt i64 %408, %410
  %413 = select i1 %412, i64 %408, i64 %410
  %414 = select i1 %411, i64 %409, i64 %413
  %415 = trunc i64 %414 to i32
  br label %416

416:                                              ; preds = %398, %403
  %417 = phi i32 [ %415, %403 ], [ %400, %398 ]
  store i32 %417, i32* %36, align 4
  %418 = sub nsw i32 %283, %284
  %419 = load i8, i8* %286, align 1
  %420 = icmp slt i8 %419, 1
  br i1 %420, label %434, label %421

421:                                              ; preds = %416
  %422 = sext i8 %419 to i64
  %423 = add nuw nsw i64 %422, 4294967295
  %424 = and i64 %423, 4294967295
  %425 = shl i64 1, %424
  %426 = add nsw i64 %425, -1
  %427 = sub nsw i64 0, %425
  %428 = sext i32 %418 to i64
  %429 = icmp slt i64 %428, %427
  %430 = icmp slt i64 %426, %428
  %431 = select i1 %430, i64 %426, i64 %428
  %432 = select i1 %429, i64 %427, i64 %431
  %433 = trunc i64 %432 to i32
  br label %434

434:                                              ; preds = %416, %421
  %435 = phi i32 [ %433, %421 ], [ %418, %416 ]
  store i32 %435, i32* %39, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_idct16(i32*, i32*, i8 signext, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [16 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [16 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #4
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 8
  %11 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* %1, align 4
  %13 = getelementptr inbounds i32, i32* %0, i64 8
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %0, i64 4
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i32, i32* %0, i64 12
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i32, i32* %0, i64 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i32, i32* %0, i64 10
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds i32, i32* %0, i64 6
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %0, i64 14
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds i32, i32* %0, i64 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds i32, i32* %0, i64 9
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds i32, i32* %0, i64 5
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i32, i32* %0, i64 13
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i32, i32* %1, i64 11
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds i32, i32* %0, i64 3
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds i32, i32* %0, i64 11
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds i32, i32* %0, i64 7
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds i32, i32* %0, i64 15
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %3, i64 1
  %59 = load i8, i8* %58, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 16, i8 signext %59) #4
  %60 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 0
  %61 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 1
  %62 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 2
  %63 = bitcast i32* %1 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 3
  %66 = bitcast [16 x i32]* %5 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %66, align 16
  %67 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 4
  %68 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 5
  %69 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 6
  %70 = bitcast i32* %24 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4
  %72 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 7
  %73 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %73, align 16
  %74 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 60
  %75 = load i32, i32* %74, align 16
  %76 = load i32, i32* %36, align 4
  %77 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 4
  %78 = load i32, i32* %77, align 16
  %79 = load i32, i32* %57, align 4
  %80 = mul nsw i32 %76, %75
  %81 = sext i32 %80 to i64
  %82 = mul i32 %78, %79
  %83 = sub i32 0, %82
  %84 = sext i32 %83 to i64
  %85 = add nsw i32 %6, -1
  %86 = zext i32 %85 to i64
  %87 = shl i64 1, %86
  %88 = add i64 %87, %81
  %89 = add i64 %88, %84
  %90 = zext i32 %6 to i64
  %91 = ashr i64 %89, %90
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 8
  store i32 %92, i32* %93, align 16
  %94 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 28
  %95 = load i32, i32* %94, align 16
  %96 = load i32, i32* %39, align 4
  %97 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 36
  %98 = load i32, i32* %97, align 16
  %99 = load i32, i32* %54, align 4
  %100 = mul nsw i32 %96, %95
  %101 = sext i32 %100 to i64
  %102 = mul i32 %98, %99
  %103 = sub i32 0, %102
  %104 = sext i32 %103 to i64
  %105 = add i64 %87, %101
  %106 = add i64 %105, %104
  %107 = ashr i64 %106, %90
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 9
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 44
  %111 = load i32, i32* %110, align 16
  %112 = load i32, i32* %42, align 4
  %113 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 20
  %114 = load i32, i32* %113, align 16
  %115 = load i32, i32* %51, align 4
  %116 = mul nsw i32 %112, %111
  %117 = sext i32 %116 to i64
  %118 = mul i32 %114, %115
  %119 = sub i32 0, %118
  %120 = sext i32 %119 to i64
  %121 = add i64 %87, %117
  %122 = add i64 %121, %120
  %123 = ashr i64 %122, %90
  %124 = trunc i64 %123 to i32
  %125 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 10
  store i32 %124, i32* %125, align 8
  %126 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 12
  %127 = load i32, i32* %126, align 16
  %128 = load i32, i32* %45, align 4
  %129 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 52
  %130 = load i32, i32* %129, align 16
  %131 = load i32, i32* %48, align 4
  %132 = mul nsw i32 %128, %127
  %133 = sext i32 %132 to i64
  %134 = mul i32 %130, %131
  %135 = sub i32 0, %134
  %136 = sext i32 %135 to i64
  %137 = add i64 %87, %133
  %138 = add i64 %137, %136
  %139 = ashr i64 %138, %90
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 11
  store i32 %140, i32* %141, align 4
  %142 = mul nsw i32 %130, %128
  %143 = sext i32 %142 to i64
  %144 = mul nsw i32 %131, %127
  %145 = sext i32 %144 to i64
  %146 = add i64 %87, %143
  %147 = add i64 %146, %145
  %148 = ashr i64 %147, %90
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 12
  store i32 %149, i32* %150, align 16
  %151 = mul nsw i32 %114, %112
  %152 = sext i32 %151 to i64
  %153 = mul nsw i32 %115, %111
  %154 = sext i32 %153 to i64
  %155 = add i64 %87, %152
  %156 = add i64 %155, %154
  %157 = ashr i64 %156, %90
  %158 = trunc i64 %157 to i32
  %159 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 13
  store i32 %158, i32* %159, align 4
  %160 = mul nsw i32 %98, %96
  %161 = sext i32 %160 to i64
  %162 = mul nsw i32 %99, %95
  %163 = sext i32 %162 to i64
  %164 = add i64 %87, %161
  %165 = add i64 %164, %163
  %166 = ashr i64 %165, %90
  %167 = trunc i64 %166 to i32
  %168 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 14
  store i32 %167, i32* %168, align 8
  %169 = mul nsw i32 %78, %76
  %170 = sext i32 %169 to i64
  %171 = mul nsw i32 %79, %75
  %172 = sext i32 %171 to i64
  %173 = add i64 %87, %170
  %174 = add i64 %173, %172
  %175 = ashr i64 %174, %90
  %176 = trunc i64 %175 to i32
  %177 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 15
  store i32 %176, i32* %177, align 4
  %178 = getelementptr inbounds i8, i8* %3, i64 2
  %179 = load i8, i8* %178, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %60, i32 16, i8 signext %179) #4
  %180 = bitcast [16 x i32]* %5 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 16
  %182 = bitcast i32* %1 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 56
  %184 = load i32, i32* %183, align 16
  %185 = load i32, i32* %67, align 16
  %186 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 8
  %187 = load i32, i32* %186, align 16
  %188 = load i32, i32* %72, align 4
  %189 = mul nsw i32 %185, %184
  %190 = sext i32 %189 to i64
  %191 = mul i32 %187, %188
  %192 = sub i32 0, %191
  %193 = sext i32 %192 to i64
  %194 = add i64 %87, %190
  %195 = add i64 %194, %193
  %196 = ashr i64 %195, %90
  %197 = trunc i64 %196 to i32
  store i32 %197, i32* %24, align 4
  %198 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 24
  %199 = load i32, i32* %198, align 16
  %200 = load i32, i32* %68, align 4
  %201 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 40
  %202 = load i32, i32* %201, align 16
  %203 = load i32, i32* %69, align 8
  %204 = mul nsw i32 %200, %199
  %205 = sext i32 %204 to i64
  %206 = mul i32 %202, %203
  %207 = sub i32 0, %206
  %208 = sext i32 %207 to i64
  %209 = add i64 %87, %205
  %210 = add i64 %209, %208
  %211 = ashr i64 %210, %90
  %212 = trunc i64 %211 to i32
  store i32 %212, i32* %27, align 4
  %213 = mul nsw i32 %202, %200
  %214 = sext i32 %213 to i64
  %215 = mul nsw i32 %203, %199
  %216 = sext i32 %215 to i64
  %217 = add i64 %87, %214
  %218 = add i64 %217, %216
  %219 = ashr i64 %218, %90
  %220 = trunc i64 %219 to i32
  store i32 %220, i32* %30, align 4
  %221 = mul nsw i32 %187, %185
  %222 = sext i32 %221 to i64
  %223 = mul nsw i32 %188, %184
  %224 = sext i32 %223 to i64
  %225 = add i64 %87, %222
  %226 = add i64 %225, %224
  %227 = ashr i64 %226, %90
  %228 = trunc i64 %227 to i32
  store i32 %228, i32* %33, align 4
  %229 = load i32, i32* %93, align 16
  %230 = load i32, i32* %109, align 4
  %231 = add nsw i32 %230, %229
  %232 = getelementptr inbounds i8, i8* %3, i64 3
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 1
  br i1 %234, label %248, label %235

235:                                              ; preds = %4
  %236 = sext i8 %233 to i64
  %237 = add nuw nsw i64 %236, 4294967295
  %238 = and i64 %237, 4294967295
  %239 = shl i64 1, %238
  %240 = add nsw i64 %239, -1
  %241 = sub nsw i64 0, %239
  %242 = sext i32 %231 to i64
  %243 = icmp slt i64 %242, %241
  %244 = icmp slt i64 %240, %242
  %245 = select i1 %244, i64 %240, i64 %242
  %246 = select i1 %243, i64 %241, i64 %245
  %247 = trunc i64 %246 to i32
  br label %248

248:                                              ; preds = %4, %235
  %249 = phi i32 [ %247, %235 ], [ %231, %4 ]
  store i32 %249, i32* %36, align 4
  %250 = sub nsw i32 %229, %230
  %251 = load i8, i8* %232, align 1
  %252 = icmp slt i8 %251, 1
  br i1 %252, label %266, label %253

253:                                              ; preds = %248
  %254 = sext i8 %251 to i64
  %255 = add nuw nsw i64 %254, 4294967295
  %256 = and i64 %255, 4294967295
  %257 = shl i64 1, %256
  %258 = add nsw i64 %257, -1
  %259 = sub nsw i64 0, %257
  %260 = sext i32 %250 to i64
  %261 = icmp slt i64 %260, %259
  %262 = icmp slt i64 %258, %260
  %263 = select i1 %262, i64 %258, i64 %260
  %264 = select i1 %261, i64 %259, i64 %263
  %265 = trunc i64 %264 to i32
  br label %266

266:                                              ; preds = %248, %253
  %267 = phi i32 [ %265, %253 ], [ %250, %248 ]
  store i32 %267, i32* %39, align 4
  %268 = load i32, i32* %125, align 8
  %269 = load i32, i32* %141, align 4
  %270 = sub i32 %269, %268
  %271 = load i8, i8* %232, align 1
  %272 = icmp slt i8 %271, 1
  br i1 %272, label %286, label %273

273:                                              ; preds = %266
  %274 = sext i8 %271 to i64
  %275 = add nuw nsw i64 %274, 4294967295
  %276 = and i64 %275, 4294967295
  %277 = shl i64 1, %276
  %278 = add nsw i64 %277, -1
  %279 = sub nsw i64 0, %277
  %280 = sext i32 %270 to i64
  %281 = icmp slt i64 %280, %279
  %282 = icmp slt i64 %278, %280
  %283 = select i1 %282, i64 %278, i64 %280
  %284 = select i1 %281, i64 %279, i64 %283
  %285 = trunc i64 %284 to i32
  br label %286

286:                                              ; preds = %266, %273
  %287 = phi i32 [ %285, %273 ], [ %270, %266 ]
  store i32 %287, i32* %42, align 4
  %288 = add nsw i32 %269, %268
  %289 = load i8, i8* %232, align 1
  %290 = icmp slt i8 %289, 1
  br i1 %290, label %304, label %291

291:                                              ; preds = %286
  %292 = sext i8 %289 to i64
  %293 = add nuw nsw i64 %292, 4294967295
  %294 = and i64 %293, 4294967295
  %295 = shl i64 1, %294
  %296 = add nsw i64 %295, -1
  %297 = sub nsw i64 0, %295
  %298 = sext i32 %288 to i64
  %299 = icmp slt i64 %298, %297
  %300 = icmp slt i64 %296, %298
  %301 = select i1 %300, i64 %296, i64 %298
  %302 = select i1 %299, i64 %297, i64 %301
  %303 = trunc i64 %302 to i32
  br label %304

304:                                              ; preds = %286, %291
  %305 = phi i32 [ %303, %291 ], [ %288, %286 ]
  store i32 %305, i32* %45, align 4
  %306 = load i32, i32* %150, align 16
  %307 = load i32, i32* %159, align 4
  %308 = add nsw i32 %307, %306
  %309 = load i8, i8* %232, align 1
  %310 = icmp slt i8 %309, 1
  br i1 %310, label %324, label %311

311:                                              ; preds = %304
  %312 = sext i8 %309 to i64
  %313 = add nuw nsw i64 %312, 4294967295
  %314 = and i64 %313, 4294967295
  %315 = shl i64 1, %314
  %316 = add nsw i64 %315, -1
  %317 = sub nsw i64 0, %315
  %318 = sext i32 %308 to i64
  %319 = icmp slt i64 %318, %317
  %320 = icmp slt i64 %316, %318
  %321 = select i1 %320, i64 %316, i64 %318
  %322 = select i1 %319, i64 %317, i64 %321
  %323 = trunc i64 %322 to i32
  br label %324

324:                                              ; preds = %304, %311
  %325 = phi i32 [ %323, %311 ], [ %308, %304 ]
  store i32 %325, i32* %48, align 4
  %326 = sub nsw i32 %306, %307
  %327 = load i8, i8* %232, align 1
  %328 = icmp slt i8 %327, 1
  br i1 %328, label %342, label %329

329:                                              ; preds = %324
  %330 = sext i8 %327 to i64
  %331 = add nuw nsw i64 %330, 4294967295
  %332 = and i64 %331, 4294967295
  %333 = shl i64 1, %332
  %334 = add nsw i64 %333, -1
  %335 = sub nsw i64 0, %333
  %336 = sext i32 %326 to i64
  %337 = icmp slt i64 %336, %335
  %338 = icmp slt i64 %334, %336
  %339 = select i1 %338, i64 %334, i64 %336
  %340 = select i1 %337, i64 %335, i64 %339
  %341 = trunc i64 %340 to i32
  br label %342

342:                                              ; preds = %324, %329
  %343 = phi i32 [ %341, %329 ], [ %326, %324 ]
  store i32 %343, i32* %51, align 4
  %344 = load i32, i32* %168, align 8
  %345 = load i32, i32* %177, align 4
  %346 = sub i32 %345, %344
  %347 = load i8, i8* %232, align 1
  %348 = icmp slt i8 %347, 1
  br i1 %348, label %362, label %349

349:                                              ; preds = %342
  %350 = sext i8 %347 to i64
  %351 = add nuw nsw i64 %350, 4294967295
  %352 = and i64 %351, 4294967295
  %353 = shl i64 1, %352
  %354 = add nsw i64 %353, -1
  %355 = sub nsw i64 0, %353
  %356 = sext i32 %346 to i64
  %357 = icmp slt i64 %356, %355
  %358 = icmp slt i64 %354, %356
  %359 = select i1 %358, i64 %354, i64 %356
  %360 = select i1 %357, i64 %355, i64 %359
  %361 = trunc i64 %360 to i32
  br label %362

362:                                              ; preds = %342, %349
  %363 = phi i32 [ %361, %349 ], [ %346, %342 ]
  store i32 %363, i32* %54, align 4
  %364 = add nsw i32 %345, %344
  %365 = load i8, i8* %232, align 1
  %366 = icmp slt i8 %365, 1
  br i1 %366, label %380, label %367

367:                                              ; preds = %362
  %368 = sext i8 %365 to i64
  %369 = add nuw nsw i64 %368, 4294967295
  %370 = and i64 %369, 4294967295
  %371 = shl i64 1, %370
  %372 = add nsw i64 %371, -1
  %373 = sub nsw i64 0, %371
  %374 = sext i32 %364 to i64
  %375 = icmp slt i64 %374, %373
  %376 = icmp slt i64 %372, %374
  %377 = select i1 %376, i64 %372, i64 %374
  %378 = select i1 %375, i64 %373, i64 %377
  %379 = trunc i64 %378 to i32
  br label %380

380:                                              ; preds = %362, %367
  %381 = phi i32 [ %379, %367 ], [ %364, %362 ]
  store i32 %381, i32* %57, align 4
  %382 = load i8, i8* %232, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 16, i8 signext %382) #4
  %383 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %384 = load i32, i32* %383, align 16
  %385 = load i32, i32* %1, align 4
  %386 = load i32, i32* %15, align 4
  %387 = mul nsw i32 %385, %384
  %388 = sext i32 %387 to i64
  %389 = mul nsw i32 %386, %384
  %390 = sext i32 %389 to i64
  %391 = add i64 %87, %388
  %392 = add i64 %391, %390
  %393 = ashr i64 %392, %90
  %394 = trunc i64 %393 to i32
  store i32 %394, i32* %60, align 16
  %395 = sub nsw i32 0, %384
  %396 = mul nsw i32 %386, %395
  %397 = sext i32 %396 to i64
  %398 = add i64 %391, %397
  %399 = ashr i64 %398, %90
  %400 = trunc i64 %399 to i32
  store i32 %400, i32* %61, align 4
  %401 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %402 = load i32, i32* %401, align 16
  %403 = load i32, i32* %18, align 4
  %404 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %405 = load i32, i32* %404, align 16
  %406 = sub nsw i32 0, %405
  %407 = load i32, i32* %21, align 4
  %408 = mul nsw i32 %403, %402
  %409 = sext i32 %408 to i64
  %410 = mul nsw i32 %407, %406
  %411 = sext i32 %410 to i64
  %412 = add i64 %87, %409
  %413 = add i64 %412, %411
  %414 = ashr i64 %413, %90
  %415 = trunc i64 %414 to i32
  store i32 %415, i32* %62, align 8
  %416 = mul nsw i32 %405, %403
  %417 = sext i32 %416 to i64
  %418 = mul nsw i32 %407, %402
  %419 = sext i32 %418 to i64
  %420 = add i64 %87, %417
  %421 = add i64 %420, %419
  %422 = ashr i64 %421, %90
  %423 = trunc i64 %422 to i32
  store i32 %423, i32* %65, align 4
  %424 = load i32, i32* %24, align 4
  %425 = load i32, i32* %27, align 4
  %426 = add nsw i32 %425, %424
  %427 = getelementptr inbounds i8, i8* %3, i64 4
  %428 = load i8, i8* %427, align 1
  %429 = icmp slt i8 %428, 1
  br i1 %429, label %430, label %436

430:                                              ; preds = %380
  store i32 %426, i32* %67, align 16
  %431 = sub nsw i32 %424, %425
  store i32 %431, i32* %68, align 4
  %432 = load i32, i32* %30, align 4
  %433 = load i32, i32* %33, align 4
  %434 = sub i32 %433, %432
  store i32 %434, i32* %69, align 8
  %435 = add nsw i32 %433, %432
  br label %472

436:                                              ; preds = %380
  %437 = sext i8 %428 to i64
  %438 = add nuw nsw i64 %437, 4294967295
  %439 = and i64 %438, 4294967295
  %440 = shl i64 1, %439
  %441 = add nsw i64 %440, -1
  %442 = sub nsw i64 0, %440
  %443 = sext i32 %426 to i64
  %444 = icmp slt i64 %443, %442
  %445 = icmp slt i64 %441, %443
  %446 = select i1 %445, i64 %441, i64 %443
  %447 = select i1 %444, i64 %442, i64 %446
  %448 = trunc i64 %447 to i32
  store i32 %448, i32* %67, align 16
  %449 = sub nsw i32 %424, %425
  %450 = sext i32 %449 to i64
  %451 = icmp slt i64 %450, %442
  %452 = icmp slt i64 %441, %450
  %453 = select i1 %452, i64 %441, i64 %450
  %454 = select i1 %451, i64 %442, i64 %453
  %455 = trunc i64 %454 to i32
  store i32 %455, i32* %68, align 4
  %456 = load i32, i32* %30, align 4
  %457 = load i32, i32* %33, align 4
  %458 = sub i32 %457, %456
  %459 = sext i32 %458 to i64
  %460 = icmp slt i64 %459, %442
  %461 = icmp slt i64 %441, %459
  %462 = select i1 %461, i64 %441, i64 %459
  %463 = select i1 %460, i64 %442, i64 %462
  %464 = trunc i64 %463 to i32
  store i32 %464, i32* %69, align 8
  %465 = add nsw i32 %457, %456
  %466 = sext i32 %465 to i64
  %467 = icmp slt i64 %466, %442
  %468 = icmp slt i64 %441, %466
  %469 = select i1 %468, i64 %441, i64 %466
  %470 = select i1 %467, i64 %442, i64 %469
  %471 = trunc i64 %470 to i32
  br label %472

472:                                              ; preds = %430, %436
  %473 = phi i32 [ %471, %436 ], [ %435, %430 ]
  store i32 %473, i32* %72, align 4
  %474 = load i32, i32* %36, align 4
  store i32 %474, i32* %93, align 16
  %475 = load i32, i32* %39, align 4
  %476 = load i32, i32* %54, align 4
  %477 = mul nsw i32 %475, %406
  %478 = sext i32 %477 to i64
  %479 = mul nsw i32 %476, %402
  %480 = sext i32 %479 to i64
  %481 = add i64 %87, %478
  %482 = add i64 %481, %480
  %483 = ashr i64 %482, %90
  %484 = trunc i64 %483 to i32
  store i32 %484, i32* %109, align 4
  %485 = load i32, i32* %42, align 4
  %486 = load i32, i32* %51, align 4
  %487 = mul i32 %402, %485
  %488 = sub i32 0, %487
  %489 = sext i32 %488 to i64
  %490 = mul nsw i32 %486, %406
  %491 = sext i32 %490 to i64
  %492 = add i64 %87, %489
  %493 = add i64 %492, %491
  %494 = ashr i64 %493, %90
  %495 = trunc i64 %494 to i32
  store i32 %495, i32* %125, align 8
  %496 = load i32, i32* %45, align 4
  store i32 %496, i32* %141, align 4
  %497 = load i32, i32* %48, align 4
  store i32 %497, i32* %150, align 16
  %498 = mul nsw i32 %485, %406
  %499 = sext i32 %498 to i64
  %500 = mul nsw i32 %486, %402
  %501 = sext i32 %500 to i64
  %502 = add i64 %87, %499
  %503 = add i64 %502, %501
  %504 = ashr i64 %503, %90
  %505 = trunc i64 %504 to i32
  store i32 %505, i32* %159, align 4
  %506 = mul nsw i32 %475, %402
  %507 = sext i32 %506 to i64
  %508 = mul nsw i32 %476, %405
  %509 = sext i32 %508 to i64
  %510 = add i64 %87, %507
  %511 = add i64 %510, %509
  %512 = ashr i64 %511, %90
  %513 = trunc i64 %512 to i32
  store i32 %513, i32* %168, align 8
  %514 = load i32, i32* %57, align 4
  store i32 %514, i32* %177, align 4
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %60, i32 16, i8 signext %428) #4
  %515 = load i32, i32* %60, align 16
  %516 = load i32, i32* %65, align 4
  %517 = add nsw i32 %516, %515
  %518 = getelementptr inbounds i8, i8* %3, i64 5
  %519 = load i8, i8* %518, align 1
  %520 = icmp slt i8 %519, 1
  br i1 %520, label %534, label %521

521:                                              ; preds = %472
  %522 = sext i8 %519 to i64
  %523 = add nuw nsw i64 %522, 4294967295
  %524 = and i64 %523, 4294967295
  %525 = shl i64 1, %524
  %526 = add nsw i64 %525, -1
  %527 = sub nsw i64 0, %525
  %528 = sext i32 %517 to i64
  %529 = icmp slt i64 %528, %527
  %530 = icmp slt i64 %526, %528
  %531 = select i1 %530, i64 %526, i64 %528
  %532 = select i1 %529, i64 %527, i64 %531
  %533 = trunc i64 %532 to i32
  br label %534

534:                                              ; preds = %472, %521
  %535 = phi i32 [ %533, %521 ], [ %517, %472 ]
  store i32 %535, i32* %1, align 4
  %536 = load i32, i32* %61, align 4
  %537 = load i32, i32* %62, align 8
  %538 = add nsw i32 %537, %536
  %539 = load i8, i8* %518, align 1
  %540 = icmp slt i8 %539, 1
  br i1 %540, label %554, label %541

541:                                              ; preds = %534
  %542 = sext i8 %539 to i64
  %543 = add nuw nsw i64 %542, 4294967295
  %544 = and i64 %543, 4294967295
  %545 = shl i64 1, %544
  %546 = add nsw i64 %545, -1
  %547 = sub nsw i64 0, %545
  %548 = sext i32 %538 to i64
  %549 = icmp slt i64 %548, %547
  %550 = icmp slt i64 %546, %548
  %551 = select i1 %550, i64 %546, i64 %548
  %552 = select i1 %549, i64 %547, i64 %551
  %553 = trunc i64 %552 to i32
  br label %554

554:                                              ; preds = %534, %541
  %555 = phi i32 [ %553, %541 ], [ %538, %534 ]
  store i32 %555, i32* %15, align 4
  %556 = sub nsw i32 %536, %537
  %557 = load i8, i8* %518, align 1
  %558 = icmp slt i8 %557, 1
  br i1 %558, label %572, label %559

559:                                              ; preds = %554
  %560 = sext i8 %557 to i64
  %561 = add nuw nsw i64 %560, 4294967295
  %562 = and i64 %561, 4294967295
  %563 = shl i64 1, %562
  %564 = add nsw i64 %563, -1
  %565 = sub nsw i64 0, %563
  %566 = sext i32 %556 to i64
  %567 = icmp slt i64 %566, %565
  %568 = icmp slt i64 %564, %566
  %569 = select i1 %568, i64 %564, i64 %566
  %570 = select i1 %567, i64 %565, i64 %569
  %571 = trunc i64 %570 to i32
  br label %572

572:                                              ; preds = %554, %559
  %573 = phi i32 [ %571, %559 ], [ %556, %554 ]
  store i32 %573, i32* %18, align 4
  %574 = sub nsw i32 %515, %516
  %575 = load i8, i8* %518, align 1
  %576 = icmp slt i8 %575, 1
  br i1 %576, label %590, label %577

577:                                              ; preds = %572
  %578 = sext i8 %575 to i64
  %579 = add nuw nsw i64 %578, 4294967295
  %580 = and i64 %579, 4294967295
  %581 = shl i64 1, %580
  %582 = add nsw i64 %581, -1
  %583 = sub nsw i64 0, %581
  %584 = sext i32 %574 to i64
  %585 = icmp slt i64 %584, %583
  %586 = icmp slt i64 %582, %584
  %587 = select i1 %586, i64 %582, i64 %584
  %588 = select i1 %585, i64 %583, i64 %587
  %589 = trunc i64 %588 to i32
  br label %590

590:                                              ; preds = %572, %577
  %591 = phi i32 [ %589, %577 ], [ %574, %572 ]
  store i32 %591, i32* %21, align 4
  %592 = load i32, i32* %67, align 16
  store i32 %592, i32* %24, align 4
  %593 = load i32, i32* %68, align 4
  %594 = load i32, i32* %69, align 8
  %595 = mul nsw i32 %593, %395
  %596 = sext i32 %595 to i64
  %597 = mul nsw i32 %594, %384
  %598 = sext i32 %597 to i64
  %599 = add i64 %87, %598
  %600 = add i64 %599, %596
  %601 = ashr i64 %600, %90
  %602 = trunc i64 %601 to i32
  store i32 %602, i32* %27, align 4
  %603 = mul nsw i32 %593, %384
  %604 = sext i32 %603 to i64
  %605 = add i64 %599, %604
  %606 = ashr i64 %605, %90
  %607 = trunc i64 %606 to i32
  store i32 %607, i32* %30, align 4
  %608 = load i32, i32* %72, align 4
  store i32 %608, i32* %33, align 4
  %609 = load i32, i32* %93, align 16
  %610 = load i32, i32* %141, align 4
  %611 = add nsw i32 %610, %609
  %612 = load i8, i8* %518, align 1
  %613 = icmp slt i8 %612, 1
  br i1 %613, label %627, label %614

614:                                              ; preds = %590
  %615 = sext i8 %612 to i64
  %616 = add nuw nsw i64 %615, 4294967295
  %617 = and i64 %616, 4294967295
  %618 = shl i64 1, %617
  %619 = add nsw i64 %618, -1
  %620 = sub nsw i64 0, %618
  %621 = sext i32 %611 to i64
  %622 = icmp slt i64 %621, %620
  %623 = icmp slt i64 %619, %621
  %624 = select i1 %623, i64 %619, i64 %621
  %625 = select i1 %622, i64 %620, i64 %624
  %626 = trunc i64 %625 to i32
  br label %627

627:                                              ; preds = %590, %614
  %628 = phi i32 [ %626, %614 ], [ %611, %590 ]
  store i32 %628, i32* %36, align 4
  %629 = load i32, i32* %109, align 4
  %630 = load i32, i32* %125, align 8
  %631 = add nsw i32 %630, %629
  %632 = load i8, i8* %518, align 1
  %633 = icmp slt i8 %632, 1
  br i1 %633, label %647, label %634

634:                                              ; preds = %627
  %635 = sext i8 %632 to i64
  %636 = add nuw nsw i64 %635, 4294967295
  %637 = and i64 %636, 4294967295
  %638 = shl i64 1, %637
  %639 = add nsw i64 %638, -1
  %640 = sub nsw i64 0, %638
  %641 = sext i32 %631 to i64
  %642 = icmp slt i64 %641, %640
  %643 = icmp slt i64 %639, %641
  %644 = select i1 %643, i64 %639, i64 %641
  %645 = select i1 %642, i64 %640, i64 %644
  %646 = trunc i64 %645 to i32
  br label %647

647:                                              ; preds = %627, %634
  %648 = phi i32 [ %646, %634 ], [ %631, %627 ]
  store i32 %648, i32* %39, align 4
  %649 = sub nsw i32 %629, %630
  %650 = load i8, i8* %518, align 1
  %651 = icmp slt i8 %650, 1
  br i1 %651, label %665, label %652

652:                                              ; preds = %647
  %653 = sext i8 %650 to i64
  %654 = add nuw nsw i64 %653, 4294967295
  %655 = and i64 %654, 4294967295
  %656 = shl i64 1, %655
  %657 = add nsw i64 %656, -1
  %658 = sub nsw i64 0, %656
  %659 = sext i32 %649 to i64
  %660 = icmp slt i64 %659, %658
  %661 = icmp slt i64 %657, %659
  %662 = select i1 %661, i64 %657, i64 %659
  %663 = select i1 %660, i64 %658, i64 %662
  %664 = trunc i64 %663 to i32
  br label %665

665:                                              ; preds = %647, %652
  %666 = phi i32 [ %664, %652 ], [ %649, %647 ]
  store i32 %666, i32* %42, align 4
  %667 = sub nsw i32 %609, %610
  %668 = load i8, i8* %518, align 1
  %669 = icmp slt i8 %668, 1
  br i1 %669, label %683, label %670

670:                                              ; preds = %665
  %671 = sext i8 %668 to i64
  %672 = add nuw nsw i64 %671, 4294967295
  %673 = and i64 %672, 4294967295
  %674 = shl i64 1, %673
  %675 = add nsw i64 %674, -1
  %676 = sub nsw i64 0, %674
  %677 = sext i32 %667 to i64
  %678 = icmp slt i64 %677, %676
  %679 = icmp slt i64 %675, %677
  %680 = select i1 %679, i64 %675, i64 %677
  %681 = select i1 %678, i64 %676, i64 %680
  %682 = trunc i64 %681 to i32
  br label %683

683:                                              ; preds = %665, %670
  %684 = phi i32 [ %682, %670 ], [ %667, %665 ]
  store i32 %684, i32* %45, align 4
  %685 = load i32, i32* %150, align 16
  %686 = load i32, i32* %177, align 4
  %687 = sub i32 %686, %685
  %688 = load i8, i8* %518, align 1
  %689 = icmp slt i8 %688, 1
  br i1 %689, label %703, label %690

690:                                              ; preds = %683
  %691 = sext i8 %688 to i64
  %692 = add nuw nsw i64 %691, 4294967295
  %693 = and i64 %692, 4294967295
  %694 = shl i64 1, %693
  %695 = add nsw i64 %694, -1
  %696 = sub nsw i64 0, %694
  %697 = sext i32 %687 to i64
  %698 = icmp slt i64 %697, %696
  %699 = icmp slt i64 %695, %697
  %700 = select i1 %699, i64 %695, i64 %697
  %701 = select i1 %698, i64 %696, i64 %700
  %702 = trunc i64 %701 to i32
  br label %703

703:                                              ; preds = %683, %690
  %704 = phi i32 [ %702, %690 ], [ %687, %683 ]
  store i32 %704, i32* %48, align 4
  %705 = load i32, i32* %159, align 4
  %706 = load i32, i32* %168, align 8
  %707 = sub i32 %706, %705
  %708 = load i8, i8* %518, align 1
  %709 = icmp slt i8 %708, 1
  br i1 %709, label %723, label %710

710:                                              ; preds = %703
  %711 = sext i8 %708 to i64
  %712 = add nuw nsw i64 %711, 4294967295
  %713 = and i64 %712, 4294967295
  %714 = shl i64 1, %713
  %715 = add nsw i64 %714, -1
  %716 = sub nsw i64 0, %714
  %717 = sext i32 %707 to i64
  %718 = icmp slt i64 %717, %716
  %719 = icmp slt i64 %715, %717
  %720 = select i1 %719, i64 %715, i64 %717
  %721 = select i1 %718, i64 %716, i64 %720
  %722 = trunc i64 %721 to i32
  br label %723

723:                                              ; preds = %703, %710
  %724 = phi i32 [ %722, %710 ], [ %707, %703 ]
  store i32 %724, i32* %51, align 4
  %725 = add nsw i32 %706, %705
  %726 = load i8, i8* %518, align 1
  %727 = icmp slt i8 %726, 1
  br i1 %727, label %741, label %728

728:                                              ; preds = %723
  %729 = sext i8 %726 to i64
  %730 = add nuw nsw i64 %729, 4294967295
  %731 = and i64 %730, 4294967295
  %732 = shl i64 1, %731
  %733 = add nsw i64 %732, -1
  %734 = sub nsw i64 0, %732
  %735 = sext i32 %725 to i64
  %736 = icmp slt i64 %735, %734
  %737 = icmp slt i64 %733, %735
  %738 = select i1 %737, i64 %733, i64 %735
  %739 = select i1 %736, i64 %734, i64 %738
  %740 = trunc i64 %739 to i32
  br label %741

741:                                              ; preds = %723, %728
  %742 = phi i32 [ %740, %728 ], [ %725, %723 ]
  store i32 %742, i32* %54, align 4
  %743 = add nsw i32 %686, %685
  %744 = load i8, i8* %518, align 1
  %745 = icmp slt i8 %744, 1
  br i1 %745, label %759, label %746

746:                                              ; preds = %741
  %747 = sext i8 %744 to i64
  %748 = add nuw nsw i64 %747, 4294967295
  %749 = and i64 %748, 4294967295
  %750 = shl i64 1, %749
  %751 = add nsw i64 %750, -1
  %752 = sub nsw i64 0, %750
  %753 = sext i32 %743 to i64
  %754 = icmp slt i64 %753, %752
  %755 = icmp slt i64 %751, %753
  %756 = select i1 %755, i64 %751, i64 %753
  %757 = select i1 %754, i64 %752, i64 %756
  %758 = trunc i64 %757 to i32
  br label %759

759:                                              ; preds = %741, %746
  %760 = phi i32 [ %758, %746 ], [ %743, %741 ]
  store i32 %760, i32* %57, align 4
  %761 = load i8, i8* %518, align 1
  call void @av1_range_check_buf(i32 5, i32* %0, i32* %1, i32 16, i8 signext %761) #4
  %762 = load i32, i32* %1, align 4
  %763 = load i32, i32* %33, align 4
  %764 = add nsw i32 %763, %762
  %765 = getelementptr inbounds i8, i8* %3, i64 6
  %766 = load i8, i8* %765, align 1
  %767 = icmp slt i8 %766, 1
  br i1 %767, label %768, label %781

768:                                              ; preds = %759
  store i32 %764, i32* %60, align 16
  %769 = load i32, i32* %15, align 4
  %770 = load i32, i32* %30, align 4
  %771 = add nsw i32 %770, %769
  store i32 %771, i32* %61, align 4
  %772 = bitcast i32* %18 to <4 x i32>*
  %773 = load <4 x i32>, <4 x i32>* %772, align 4
  %774 = shufflevector <4 x i32> %773, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %775 = add nsw <4 x i32> %774, %773
  %776 = sub nsw <4 x i32> %774, %773
  %777 = shufflevector <4 x i32> %775, <4 x i32> %776, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %778 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> %777, <4 x i32>* %778, align 8
  %779 = sub nsw i32 %769, %770
  store i32 %779, i32* %69, align 8
  %780 = sub nsw i32 %762, %763
  br label %849

781:                                              ; preds = %759
  %782 = sext i8 %766 to i64
  %783 = add nuw nsw i64 %782, 4294967295
  %784 = and i64 %783, 4294967295
  %785 = shl i64 1, %784
  %786 = add nsw i64 %785, -1
  %787 = sub nsw i64 0, %785
  %788 = sext i32 %764 to i64
  %789 = icmp slt i64 %788, %787
  %790 = icmp slt i64 %786, %788
  %791 = select i1 %790, i64 %786, i64 %788
  %792 = select i1 %789, i64 %787, i64 %791
  %793 = trunc i64 %792 to i32
  store i32 %793, i32* %60, align 16
  %794 = load i32, i32* %15, align 4
  %795 = load i32, i32* %30, align 4
  %796 = add nsw i32 %795, %794
  %797 = sext i32 %796 to i64
  %798 = icmp slt i64 %797, %787
  %799 = icmp slt i64 %786, %797
  %800 = select i1 %799, i64 %786, i64 %797
  %801 = select i1 %798, i64 %787, i64 %800
  %802 = trunc i64 %801 to i32
  store i32 %802, i32* %61, align 4
  %803 = load i32, i32* %18, align 4
  %804 = load i32, i32* %27, align 4
  %805 = add nsw i32 %804, %803
  %806 = sext i32 %805 to i64
  %807 = icmp slt i64 %806, %787
  %808 = icmp slt i64 %786, %806
  %809 = select i1 %808, i64 %786, i64 %806
  %810 = select i1 %807, i64 %787, i64 %809
  %811 = trunc i64 %810 to i32
  store i32 %811, i32* %62, align 8
  %812 = load i32, i32* %21, align 4
  %813 = load i32, i32* %24, align 4
  %814 = add nsw i32 %813, %812
  %815 = sext i32 %814 to i64
  %816 = icmp slt i64 %815, %787
  %817 = icmp slt i64 %786, %815
  %818 = select i1 %817, i64 %786, i64 %815
  %819 = select i1 %816, i64 %787, i64 %818
  %820 = trunc i64 %819 to i32
  store i32 %820, i32* %65, align 4
  %821 = sub nsw i32 %812, %813
  %822 = sext i32 %821 to i64
  %823 = icmp slt i64 %822, %787
  %824 = icmp slt i64 %786, %822
  %825 = select i1 %824, i64 %786, i64 %822
  %826 = select i1 %823, i64 %787, i64 %825
  %827 = trunc i64 %826 to i32
  store i32 %827, i32* %67, align 16
  %828 = sub nsw i32 %803, %804
  %829 = sext i32 %828 to i64
  %830 = icmp slt i64 %829, %787
  %831 = icmp slt i64 %786, %829
  %832 = select i1 %831, i64 %786, i64 %829
  %833 = select i1 %830, i64 %787, i64 %832
  %834 = trunc i64 %833 to i32
  store i32 %834, i32* %68, align 4
  %835 = sub nsw i32 %794, %795
  %836 = sext i32 %835 to i64
  %837 = icmp slt i64 %836, %787
  %838 = icmp slt i64 %786, %836
  %839 = select i1 %838, i64 %786, i64 %836
  %840 = select i1 %837, i64 %787, i64 %839
  %841 = trunc i64 %840 to i32
  store i32 %841, i32* %69, align 8
  %842 = sub nsw i32 %762, %763
  %843 = sext i32 %842 to i64
  %844 = icmp slt i64 %843, %787
  %845 = icmp slt i64 %786, %843
  %846 = select i1 %845, i64 %786, i64 %843
  %847 = select i1 %844, i64 %787, i64 %846
  %848 = trunc i64 %847 to i32
  br label %849

849:                                              ; preds = %768, %781
  %850 = phi i32 [ %848, %781 ], [ %780, %768 ]
  store i32 %850, i32* %72, align 4
  %851 = load i32, i32* %36, align 4
  store i32 %851, i32* %93, align 16
  %852 = load i32, i32* %39, align 4
  store i32 %852, i32* %109, align 4
  %853 = load i32, i32* %42, align 4
  %854 = load i32, i32* %51, align 4
  %855 = mul nsw i32 %853, %395
  %856 = sext i32 %855 to i64
  %857 = mul nsw i32 %854, %384
  %858 = sext i32 %857 to i64
  %859 = add i64 %87, %858
  %860 = add i64 %859, %856
  %861 = ashr i64 %860, %90
  %862 = trunc i64 %861 to i32
  store i32 %862, i32* %125, align 8
  %863 = load i32, i32* %45, align 4
  %864 = load i32, i32* %48, align 4
  %865 = mul nsw i32 %863, %395
  %866 = sext i32 %865 to i64
  %867 = mul nsw i32 %864, %384
  %868 = sext i32 %867 to i64
  %869 = add i64 %87, %868
  %870 = add i64 %869, %866
  %871 = ashr i64 %870, %90
  %872 = trunc i64 %871 to i32
  store i32 %872, i32* %141, align 4
  %873 = mul nsw i32 %863, %384
  %874 = sext i32 %873 to i64
  %875 = add i64 %869, %874
  %876 = ashr i64 %875, %90
  %877 = trunc i64 %876 to i32
  store i32 %877, i32* %150, align 16
  %878 = mul nsw i32 %853, %384
  %879 = sext i32 %878 to i64
  %880 = add i64 %859, %879
  %881 = ashr i64 %880, %90
  %882 = trunc i64 %881 to i32
  store i32 %882, i32* %159, align 4
  %883 = load i32, i32* %54, align 4
  store i32 %883, i32* %168, align 8
  %884 = load i32, i32* %57, align 4
  store i32 %884, i32* %177, align 4
  call void @av1_range_check_buf(i32 6, i32* %0, i32* nonnull %60, i32 16, i8 signext %766) #4
  %885 = load i32, i32* %60, align 16
  %886 = load i32, i32* %177, align 4
  %887 = add nsw i32 %886, %885
  %888 = getelementptr inbounds i8, i8* %3, i64 7
  %889 = load i8, i8* %888, align 1
  %890 = icmp slt i8 %889, 1
  br i1 %890, label %904, label %891

891:                                              ; preds = %849
  %892 = sext i8 %889 to i64
  %893 = add nuw nsw i64 %892, 4294967295
  %894 = and i64 %893, 4294967295
  %895 = shl i64 1, %894
  %896 = add nsw i64 %895, -1
  %897 = sub nsw i64 0, %895
  %898 = sext i32 %887 to i64
  %899 = icmp slt i64 %898, %897
  %900 = icmp slt i64 %896, %898
  %901 = select i1 %900, i64 %896, i64 %898
  %902 = select i1 %899, i64 %897, i64 %901
  %903 = trunc i64 %902 to i32
  br label %904

904:                                              ; preds = %849, %891
  %905 = phi i32 [ %903, %891 ], [ %887, %849 ]
  store i32 %905, i32* %1, align 4
  %906 = load i32, i32* %61, align 4
  %907 = load i32, i32* %168, align 8
  %908 = add nsw i32 %907, %906
  %909 = load i8, i8* %888, align 1
  %910 = icmp slt i8 %909, 1
  br i1 %910, label %924, label %911

911:                                              ; preds = %904
  %912 = sext i8 %909 to i64
  %913 = add nuw nsw i64 %912, 4294967295
  %914 = and i64 %913, 4294967295
  %915 = shl i64 1, %914
  %916 = add nsw i64 %915, -1
  %917 = sub nsw i64 0, %915
  %918 = sext i32 %908 to i64
  %919 = icmp slt i64 %918, %917
  %920 = icmp slt i64 %916, %918
  %921 = select i1 %920, i64 %916, i64 %918
  %922 = select i1 %919, i64 %917, i64 %921
  %923 = trunc i64 %922 to i32
  br label %924

924:                                              ; preds = %904, %911
  %925 = phi i32 [ %923, %911 ], [ %908, %904 ]
  store i32 %925, i32* %15, align 4
  %926 = load i32, i32* %62, align 8
  %927 = load i32, i32* %159, align 4
  %928 = add nsw i32 %927, %926
  %929 = load i8, i8* %888, align 1
  %930 = icmp slt i8 %929, 1
  br i1 %930, label %944, label %931

931:                                              ; preds = %924
  %932 = sext i8 %929 to i64
  %933 = add nuw nsw i64 %932, 4294967295
  %934 = and i64 %933, 4294967295
  %935 = shl i64 1, %934
  %936 = add nsw i64 %935, -1
  %937 = sub nsw i64 0, %935
  %938 = sext i32 %928 to i64
  %939 = icmp slt i64 %938, %937
  %940 = icmp slt i64 %936, %938
  %941 = select i1 %940, i64 %936, i64 %938
  %942 = select i1 %939, i64 %937, i64 %941
  %943 = trunc i64 %942 to i32
  br label %944

944:                                              ; preds = %924, %931
  %945 = phi i32 [ %943, %931 ], [ %928, %924 ]
  store i32 %945, i32* %18, align 4
  %946 = load i32, i32* %65, align 4
  %947 = load i32, i32* %150, align 16
  %948 = add nsw i32 %947, %946
  %949 = load i8, i8* %888, align 1
  %950 = icmp slt i8 %949, 1
  br i1 %950, label %964, label %951

951:                                              ; preds = %944
  %952 = sext i8 %949 to i64
  %953 = add nuw nsw i64 %952, 4294967295
  %954 = and i64 %953, 4294967295
  %955 = shl i64 1, %954
  %956 = add nsw i64 %955, -1
  %957 = sub nsw i64 0, %955
  %958 = sext i32 %948 to i64
  %959 = icmp slt i64 %958, %957
  %960 = icmp slt i64 %956, %958
  %961 = select i1 %960, i64 %956, i64 %958
  %962 = select i1 %959, i64 %957, i64 %961
  %963 = trunc i64 %962 to i32
  br label %964

964:                                              ; preds = %944, %951
  %965 = phi i32 [ %963, %951 ], [ %948, %944 ]
  store i32 %965, i32* %21, align 4
  %966 = load i32, i32* %67, align 16
  %967 = load i32, i32* %141, align 4
  %968 = add nsw i32 %967, %966
  %969 = load i8, i8* %888, align 1
  %970 = icmp slt i8 %969, 1
  br i1 %970, label %984, label %971

971:                                              ; preds = %964
  %972 = sext i8 %969 to i64
  %973 = add nuw nsw i64 %972, 4294967295
  %974 = and i64 %973, 4294967295
  %975 = shl i64 1, %974
  %976 = add nsw i64 %975, -1
  %977 = sub nsw i64 0, %975
  %978 = sext i32 %968 to i64
  %979 = icmp slt i64 %978, %977
  %980 = icmp slt i64 %976, %978
  %981 = select i1 %980, i64 %976, i64 %978
  %982 = select i1 %979, i64 %977, i64 %981
  %983 = trunc i64 %982 to i32
  br label %984

984:                                              ; preds = %964, %971
  %985 = phi i32 [ %983, %971 ], [ %968, %964 ]
  store i32 %985, i32* %24, align 4
  %986 = load i32, i32* %68, align 4
  %987 = load i32, i32* %125, align 8
  %988 = add nsw i32 %987, %986
  %989 = load i8, i8* %888, align 1
  %990 = icmp slt i8 %989, 1
  br i1 %990, label %1004, label %991

991:                                              ; preds = %984
  %992 = sext i8 %989 to i64
  %993 = add nuw nsw i64 %992, 4294967295
  %994 = and i64 %993, 4294967295
  %995 = shl i64 1, %994
  %996 = add nsw i64 %995, -1
  %997 = sub nsw i64 0, %995
  %998 = sext i32 %988 to i64
  %999 = icmp slt i64 %998, %997
  %1000 = icmp slt i64 %996, %998
  %1001 = select i1 %1000, i64 %996, i64 %998
  %1002 = select i1 %999, i64 %997, i64 %1001
  %1003 = trunc i64 %1002 to i32
  br label %1004

1004:                                             ; preds = %984, %991
  %1005 = phi i32 [ %1003, %991 ], [ %988, %984 ]
  store i32 %1005, i32* %27, align 4
  %1006 = load i32, i32* %69, align 8
  %1007 = load i32, i32* %109, align 4
  %1008 = add nsw i32 %1007, %1006
  %1009 = load i8, i8* %888, align 1
  %1010 = icmp slt i8 %1009, 1
  br i1 %1010, label %1024, label %1011

1011:                                             ; preds = %1004
  %1012 = sext i8 %1009 to i64
  %1013 = add nuw nsw i64 %1012, 4294967295
  %1014 = and i64 %1013, 4294967295
  %1015 = shl i64 1, %1014
  %1016 = add nsw i64 %1015, -1
  %1017 = sub nsw i64 0, %1015
  %1018 = sext i32 %1008 to i64
  %1019 = icmp slt i64 %1018, %1017
  %1020 = icmp slt i64 %1016, %1018
  %1021 = select i1 %1020, i64 %1016, i64 %1018
  %1022 = select i1 %1019, i64 %1017, i64 %1021
  %1023 = trunc i64 %1022 to i32
  br label %1024

1024:                                             ; preds = %1004, %1011
  %1025 = phi i32 [ %1023, %1011 ], [ %1008, %1004 ]
  store i32 %1025, i32* %30, align 4
  %1026 = load i32, i32* %72, align 4
  %1027 = load i32, i32* %93, align 16
  %1028 = add nsw i32 %1027, %1026
  %1029 = load i8, i8* %888, align 1
  %1030 = icmp slt i8 %1029, 1
  br i1 %1030, label %1044, label %1031

1031:                                             ; preds = %1024
  %1032 = sext i8 %1029 to i64
  %1033 = add nuw nsw i64 %1032, 4294967295
  %1034 = and i64 %1033, 4294967295
  %1035 = shl i64 1, %1034
  %1036 = add nsw i64 %1035, -1
  %1037 = sub nsw i64 0, %1035
  %1038 = sext i32 %1028 to i64
  %1039 = icmp slt i64 %1038, %1037
  %1040 = icmp slt i64 %1036, %1038
  %1041 = select i1 %1040, i64 %1036, i64 %1038
  %1042 = select i1 %1039, i64 %1037, i64 %1041
  %1043 = trunc i64 %1042 to i32
  br label %1044

1044:                                             ; preds = %1024, %1031
  %1045 = phi i32 [ %1043, %1031 ], [ %1028, %1024 ]
  store i32 %1045, i32* %33, align 4
  %1046 = sub nsw i32 %1026, %1027
  %1047 = load i8, i8* %888, align 1
  %1048 = icmp slt i8 %1047, 1
  br i1 %1048, label %1062, label %1049

1049:                                             ; preds = %1044
  %1050 = sext i8 %1047 to i64
  %1051 = add nuw nsw i64 %1050, 4294967295
  %1052 = and i64 %1051, 4294967295
  %1053 = shl i64 1, %1052
  %1054 = add nsw i64 %1053, -1
  %1055 = sub nsw i64 0, %1053
  %1056 = sext i32 %1046 to i64
  %1057 = icmp slt i64 %1056, %1055
  %1058 = icmp slt i64 %1054, %1056
  %1059 = select i1 %1058, i64 %1054, i64 %1056
  %1060 = select i1 %1057, i64 %1055, i64 %1059
  %1061 = trunc i64 %1060 to i32
  br label %1062

1062:                                             ; preds = %1044, %1049
  %1063 = phi i32 [ %1061, %1049 ], [ %1046, %1044 ]
  store i32 %1063, i32* %36, align 4
  %1064 = sub nsw i32 %1006, %1007
  %1065 = load i8, i8* %888, align 1
  %1066 = icmp slt i8 %1065, 1
  br i1 %1066, label %1080, label %1067

1067:                                             ; preds = %1062
  %1068 = sext i8 %1065 to i64
  %1069 = add nuw nsw i64 %1068, 4294967295
  %1070 = and i64 %1069, 4294967295
  %1071 = shl i64 1, %1070
  %1072 = add nsw i64 %1071, -1
  %1073 = sub nsw i64 0, %1071
  %1074 = sext i32 %1064 to i64
  %1075 = icmp slt i64 %1074, %1073
  %1076 = icmp slt i64 %1072, %1074
  %1077 = select i1 %1076, i64 %1072, i64 %1074
  %1078 = select i1 %1075, i64 %1073, i64 %1077
  %1079 = trunc i64 %1078 to i32
  br label %1080

1080:                                             ; preds = %1062, %1067
  %1081 = phi i32 [ %1079, %1067 ], [ %1064, %1062 ]
  store i32 %1081, i32* %39, align 4
  %1082 = sub nsw i32 %986, %987
  %1083 = load i8, i8* %888, align 1
  %1084 = icmp slt i8 %1083, 1
  br i1 %1084, label %1098, label %1085

1085:                                             ; preds = %1080
  %1086 = sext i8 %1083 to i64
  %1087 = add nuw nsw i64 %1086, 4294967295
  %1088 = and i64 %1087, 4294967295
  %1089 = shl i64 1, %1088
  %1090 = add nsw i64 %1089, -1
  %1091 = sub nsw i64 0, %1089
  %1092 = sext i32 %1082 to i64
  %1093 = icmp slt i64 %1092, %1091
  %1094 = icmp slt i64 %1090, %1092
  %1095 = select i1 %1094, i64 %1090, i64 %1092
  %1096 = select i1 %1093, i64 %1091, i64 %1095
  %1097 = trunc i64 %1096 to i32
  br label %1098

1098:                                             ; preds = %1080, %1085
  %1099 = phi i32 [ %1097, %1085 ], [ %1082, %1080 ]
  store i32 %1099, i32* %42, align 4
  %1100 = sub nsw i32 %966, %967
  %1101 = load i8, i8* %888, align 1
  %1102 = icmp slt i8 %1101, 1
  br i1 %1102, label %1116, label %1103

1103:                                             ; preds = %1098
  %1104 = sext i8 %1101 to i64
  %1105 = add nuw nsw i64 %1104, 4294967295
  %1106 = and i64 %1105, 4294967295
  %1107 = shl i64 1, %1106
  %1108 = add nsw i64 %1107, -1
  %1109 = sub nsw i64 0, %1107
  %1110 = sext i32 %1100 to i64
  %1111 = icmp slt i64 %1110, %1109
  %1112 = icmp slt i64 %1108, %1110
  %1113 = select i1 %1112, i64 %1108, i64 %1110
  %1114 = select i1 %1111, i64 %1109, i64 %1113
  %1115 = trunc i64 %1114 to i32
  br label %1116

1116:                                             ; preds = %1098, %1103
  %1117 = phi i32 [ %1115, %1103 ], [ %1100, %1098 ]
  store i32 %1117, i32* %45, align 4
  %1118 = sub nsw i32 %946, %947
  %1119 = load i8, i8* %888, align 1
  %1120 = icmp slt i8 %1119, 1
  br i1 %1120, label %1134, label %1121

1121:                                             ; preds = %1116
  %1122 = sext i8 %1119 to i64
  %1123 = add nuw nsw i64 %1122, 4294967295
  %1124 = and i64 %1123, 4294967295
  %1125 = shl i64 1, %1124
  %1126 = add nsw i64 %1125, -1
  %1127 = sub nsw i64 0, %1125
  %1128 = sext i32 %1118 to i64
  %1129 = icmp slt i64 %1128, %1127
  %1130 = icmp slt i64 %1126, %1128
  %1131 = select i1 %1130, i64 %1126, i64 %1128
  %1132 = select i1 %1129, i64 %1127, i64 %1131
  %1133 = trunc i64 %1132 to i32
  br label %1134

1134:                                             ; preds = %1116, %1121
  %1135 = phi i32 [ %1133, %1121 ], [ %1118, %1116 ]
  store i32 %1135, i32* %48, align 4
  %1136 = sub nsw i32 %926, %927
  %1137 = load i8, i8* %888, align 1
  %1138 = icmp slt i8 %1137, 1
  br i1 %1138, label %1152, label %1139

1139:                                             ; preds = %1134
  %1140 = sext i8 %1137 to i64
  %1141 = add nuw nsw i64 %1140, 4294967295
  %1142 = and i64 %1141, 4294967295
  %1143 = shl i64 1, %1142
  %1144 = add nsw i64 %1143, -1
  %1145 = sub nsw i64 0, %1143
  %1146 = sext i32 %1136 to i64
  %1147 = icmp slt i64 %1146, %1145
  %1148 = icmp slt i64 %1144, %1146
  %1149 = select i1 %1148, i64 %1144, i64 %1146
  %1150 = select i1 %1147, i64 %1145, i64 %1149
  %1151 = trunc i64 %1150 to i32
  br label %1152

1152:                                             ; preds = %1134, %1139
  %1153 = phi i32 [ %1151, %1139 ], [ %1136, %1134 ]
  store i32 %1153, i32* %51, align 4
  %1154 = sub nsw i32 %906, %907
  %1155 = load i8, i8* %888, align 1
  %1156 = icmp slt i8 %1155, 1
  br i1 %1156, label %1170, label %1157

1157:                                             ; preds = %1152
  %1158 = sext i8 %1155 to i64
  %1159 = add nuw nsw i64 %1158, 4294967295
  %1160 = and i64 %1159, 4294967295
  %1161 = shl i64 1, %1160
  %1162 = add nsw i64 %1161, -1
  %1163 = sub nsw i64 0, %1161
  %1164 = sext i32 %1154 to i64
  %1165 = icmp slt i64 %1164, %1163
  %1166 = icmp slt i64 %1162, %1164
  %1167 = select i1 %1166, i64 %1162, i64 %1164
  %1168 = select i1 %1165, i64 %1163, i64 %1167
  %1169 = trunc i64 %1168 to i32
  br label %1170

1170:                                             ; preds = %1152, %1157
  %1171 = phi i32 [ %1169, %1157 ], [ %1154, %1152 ]
  store i32 %1171, i32* %54, align 4
  %1172 = sub nsw i32 %885, %886
  %1173 = load i8, i8* %888, align 1
  %1174 = icmp slt i8 %1173, 1
  br i1 %1174, label %1188, label %1175

1175:                                             ; preds = %1170
  %1176 = sext i8 %1173 to i64
  %1177 = add nuw nsw i64 %1176, 4294967295
  %1178 = and i64 %1177, 4294967295
  %1179 = shl i64 1, %1178
  %1180 = add nsw i64 %1179, -1
  %1181 = sub nsw i64 0, %1179
  %1182 = sext i32 %1172 to i64
  %1183 = icmp slt i64 %1182, %1181
  %1184 = icmp slt i64 %1180, %1182
  %1185 = select i1 %1184, i64 %1180, i64 %1182
  %1186 = select i1 %1183, i64 %1181, i64 %1185
  %1187 = trunc i64 %1186 to i32
  br label %1188

1188:                                             ; preds = %1170, %1175
  %1189 = phi i32 [ %1187, %1175 ], [ %1172, %1170 ]
  store i32 %1189, i32* %57, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_idct32(i32*, i32*, i8 signext, i8* readonly) local_unnamed_addr #0 {
  %5 = alloca [32 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [32 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 128, i1 false)
  %10 = load i32, i32* %0, align 4
  store i32 %10, i32* %1, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 16
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds i32, i32* %0, i64 8
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds i32, i32* %0, i64 24
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds i32, i32* %0, i64 4
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %0, i64 20
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds i32, i32* %0, i64 12
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i32, i32* %0, i64 28
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds i32, i32* %0, i64 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %0, i64 18
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 10
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds i32, i32* %0, i64 26
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i32, i32* %1, i64 11
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i32, i32* %0, i64 6
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i32, i32* %0, i64 22
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds i32, i32* %0, i64 14
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %0, i64 30
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i32, i32* %0, i64 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds i32, i32* %1, i64 16
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i32, i32* %0, i64 17
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i32, i32* %1, i64 17
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds i32, i32* %0, i64 9
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i32, i32* %1, i64 18
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds i32, i32* %0, i64 25
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i32, i32* %1, i64 19
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i32, i32* %0, i64 5
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i32, i32* %1, i64 20
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds i32, i32* %0, i64 21
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds i32, i32* %1, i64 21
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds i32, i32* %0, i64 13
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds i32, i32* %1, i64 22
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds i32, i32* %0, i64 29
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds i32, i32* %1, i64 23
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds i32, i32* %0, i64 3
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %1, i64 24
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds i32, i32* %0, i64 19
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32, i32* %1, i64 25
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds i32, i32* %0, i64 11
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds i32, i32* %1, i64 26
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds i32, i32* %0, i64 27
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds i32, i32* %1, i64 27
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds i32, i32* %0, i64 7
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds i32, i32* %1, i64 28
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds i32, i32* %0, i64 23
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds i32, i32* %1, i64 29
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds i32, i32* %0, i64 15
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds i32, i32* %1, i64 30
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds i32, i32* %0, i64 31
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds i32, i32* %1, i64 31
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %3, i64 1
  %105 = load i8, i8* %104, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 32, i8 signext %105) #4
  %106 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 0
  %107 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 1
  %108 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 2
  %109 = bitcast i32* %1 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4
  %111 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 3
  %112 = bitcast [32 x i32]* %5 to <4 x i32>*
  store <4 x i32> %110, <4 x i32>* %112, align 16
  %113 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 4
  %114 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 5
  %115 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 6
  %116 = bitcast i32* %22 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 7
  %119 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %117, <4 x i32>* %119, align 16
  %120 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 8
  %121 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 9
  %122 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 10
  %123 = bitcast i32* %34 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4
  %125 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 11
  %126 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %126, align 16
  %127 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 12
  %128 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 13
  %129 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 14
  %130 = bitcast i32* %46 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 15
  %133 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %131, <4 x i32>* %133, align 16
  %134 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 62
  %135 = load i32, i32* %134, align 8
  %136 = load i32, i32* %58, align 4
  %137 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 2
  %138 = load i32, i32* %137, align 8
  %139 = load i32, i32* %103, align 4
  %140 = mul nsw i32 %136, %135
  %141 = sext i32 %140 to i64
  %142 = mul i32 %138, %139
  %143 = sub i32 0, %142
  %144 = sext i32 %143 to i64
  %145 = add nsw i32 %6, -1
  %146 = zext i32 %145 to i64
  %147 = shl i64 1, %146
  %148 = add i64 %147, %141
  %149 = add i64 %148, %144
  %150 = zext i32 %6 to i64
  %151 = ashr i64 %149, %150
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 16
  store i32 %152, i32* %153, align 16
  %154 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 30
  %155 = load i32, i32* %154, align 8
  %156 = load i32, i32* %61, align 4
  %157 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 34
  %158 = load i32, i32* %157, align 8
  %159 = load i32, i32* %100, align 4
  %160 = mul nsw i32 %156, %155
  %161 = sext i32 %160 to i64
  %162 = mul i32 %158, %159
  %163 = sub i32 0, %162
  %164 = sext i32 %163 to i64
  %165 = add i64 %147, %161
  %166 = add i64 %165, %164
  %167 = ashr i64 %166, %150
  %168 = trunc i64 %167 to i32
  %169 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 17
  store i32 %168, i32* %169, align 4
  %170 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 46
  %171 = load i32, i32* %170, align 8
  %172 = load i32, i32* %64, align 4
  %173 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 18
  %174 = load i32, i32* %173, align 8
  %175 = load i32, i32* %97, align 4
  %176 = mul nsw i32 %172, %171
  %177 = sext i32 %176 to i64
  %178 = mul i32 %174, %175
  %179 = sub i32 0, %178
  %180 = sext i32 %179 to i64
  %181 = add i64 %147, %177
  %182 = add i64 %181, %180
  %183 = ashr i64 %182, %150
  %184 = trunc i64 %183 to i32
  %185 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 18
  store i32 %184, i32* %185, align 8
  %186 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 14
  %187 = load i32, i32* %186, align 8
  %188 = load i32, i32* %67, align 4
  %189 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 50
  %190 = load i32, i32* %189, align 8
  %191 = load i32, i32* %94, align 4
  %192 = mul nsw i32 %188, %187
  %193 = sext i32 %192 to i64
  %194 = mul i32 %190, %191
  %195 = sub i32 0, %194
  %196 = sext i32 %195 to i64
  %197 = add i64 %147, %193
  %198 = add i64 %197, %196
  %199 = ashr i64 %198, %150
  %200 = trunc i64 %199 to i32
  %201 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 19
  store i32 %200, i32* %201, align 4
  %202 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 54
  %203 = load i32, i32* %202, align 8
  %204 = load i32, i32* %70, align 4
  %205 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 10
  %206 = load i32, i32* %205, align 8
  %207 = load i32, i32* %91, align 4
  %208 = mul nsw i32 %204, %203
  %209 = sext i32 %208 to i64
  %210 = mul i32 %206, %207
  %211 = sub i32 0, %210
  %212 = sext i32 %211 to i64
  %213 = add i64 %147, %209
  %214 = add i64 %213, %212
  %215 = ashr i64 %214, %150
  %216 = trunc i64 %215 to i32
  %217 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 20
  store i32 %216, i32* %217, align 16
  %218 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 22
  %219 = load i32, i32* %218, align 8
  %220 = load i32, i32* %73, align 4
  %221 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 42
  %222 = load i32, i32* %221, align 8
  %223 = load i32, i32* %88, align 4
  %224 = mul nsw i32 %220, %219
  %225 = sext i32 %224 to i64
  %226 = mul i32 %222, %223
  %227 = sub i32 0, %226
  %228 = sext i32 %227 to i64
  %229 = add i64 %147, %225
  %230 = add i64 %229, %228
  %231 = ashr i64 %230, %150
  %232 = trunc i64 %231 to i32
  %233 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 21
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 38
  %235 = load i32, i32* %234, align 8
  %236 = load i32, i32* %76, align 4
  %237 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 26
  %238 = load i32, i32* %237, align 8
  %239 = load i32, i32* %85, align 4
  %240 = mul nsw i32 %236, %235
  %241 = sext i32 %240 to i64
  %242 = mul i32 %238, %239
  %243 = sub i32 0, %242
  %244 = sext i32 %243 to i64
  %245 = add i64 %147, %241
  %246 = add i64 %245, %244
  %247 = ashr i64 %246, %150
  %248 = trunc i64 %247 to i32
  %249 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 22
  store i32 %248, i32* %249, align 8
  %250 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 6
  %251 = load i32, i32* %250, align 8
  %252 = load i32, i32* %79, align 4
  %253 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 58
  %254 = load i32, i32* %253, align 8
  %255 = load i32, i32* %82, align 4
  %256 = mul nsw i32 %252, %251
  %257 = sext i32 %256 to i64
  %258 = mul i32 %254, %255
  %259 = sub i32 0, %258
  %260 = sext i32 %259 to i64
  %261 = add i64 %147, %257
  %262 = add i64 %261, %260
  %263 = ashr i64 %262, %150
  %264 = trunc i64 %263 to i32
  %265 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 23
  store i32 %264, i32* %265, align 4
  %266 = mul nsw i32 %254, %252
  %267 = sext i32 %266 to i64
  %268 = mul nsw i32 %255, %251
  %269 = sext i32 %268 to i64
  %270 = add i64 %147, %267
  %271 = add i64 %270, %269
  %272 = ashr i64 %271, %150
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 24
  store i32 %273, i32* %274, align 16
  %275 = mul nsw i32 %238, %236
  %276 = sext i32 %275 to i64
  %277 = mul nsw i32 %239, %235
  %278 = sext i32 %277 to i64
  %279 = add i64 %147, %276
  %280 = add i64 %279, %278
  %281 = ashr i64 %280, %150
  %282 = trunc i64 %281 to i32
  %283 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 25
  store i32 %282, i32* %283, align 4
  %284 = mul nsw i32 %222, %220
  %285 = sext i32 %284 to i64
  %286 = mul nsw i32 %223, %219
  %287 = sext i32 %286 to i64
  %288 = add i64 %147, %285
  %289 = add i64 %288, %287
  %290 = ashr i64 %289, %150
  %291 = trunc i64 %290 to i32
  %292 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 26
  store i32 %291, i32* %292, align 8
  %293 = mul nsw i32 %206, %204
  %294 = sext i32 %293 to i64
  %295 = mul nsw i32 %207, %203
  %296 = sext i32 %295 to i64
  %297 = add i64 %147, %294
  %298 = add i64 %297, %296
  %299 = ashr i64 %298, %150
  %300 = trunc i64 %299 to i32
  %301 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 27
  store i32 %300, i32* %301, align 4
  %302 = mul nsw i32 %190, %188
  %303 = sext i32 %302 to i64
  %304 = mul nsw i32 %191, %187
  %305 = sext i32 %304 to i64
  %306 = add i64 %147, %303
  %307 = add i64 %306, %305
  %308 = ashr i64 %307, %150
  %309 = trunc i64 %308 to i32
  %310 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 28
  store i32 %309, i32* %310, align 16
  %311 = mul nsw i32 %174, %172
  %312 = sext i32 %311 to i64
  %313 = mul nsw i32 %175, %171
  %314 = sext i32 %313 to i64
  %315 = add i64 %147, %312
  %316 = add i64 %315, %314
  %317 = ashr i64 %316, %150
  %318 = trunc i64 %317 to i32
  %319 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 29
  store i32 %318, i32* %319, align 4
  %320 = mul nsw i32 %158, %156
  %321 = sext i32 %320 to i64
  %322 = mul nsw i32 %159, %155
  %323 = sext i32 %322 to i64
  %324 = add i64 %147, %321
  %325 = add i64 %324, %323
  %326 = ashr i64 %325, %150
  %327 = trunc i64 %326 to i32
  %328 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 30
  store i32 %327, i32* %328, align 8
  %329 = mul nsw i32 %138, %136
  %330 = sext i32 %329 to i64
  %331 = mul nsw i32 %139, %135
  %332 = sext i32 %331 to i64
  %333 = add i64 %147, %330
  %334 = add i64 %333, %332
  %335 = ashr i64 %334, %150
  %336 = trunc i64 %335 to i32
  %337 = getelementptr inbounds [32 x i32], [32 x i32]* %5, i64 0, i64 31
  store i32 %336, i32* %337, align 4
  %338 = getelementptr inbounds i8, i8* %3, i64 2
  %339 = load i8, i8* %338, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %106, i32 32, i8 signext %339) #4
  %340 = bitcast [32 x i32]* %5 to <4 x i32>*
  %341 = load <4 x i32>, <4 x i32>* %340, align 16
  %342 = bitcast i32* %1 to <4 x i32>*
  store <4 x i32> %341, <4 x i32>* %342, align 4
  %343 = bitcast i32* %113 to <4 x i32>*
  %344 = load <4 x i32>, <4 x i32>* %343, align 16
  %345 = bitcast i32* %22 to <4 x i32>*
  store <4 x i32> %344, <4 x i32>* %345, align 4
  %346 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 60
  %347 = load i32, i32* %346, align 16
  %348 = load i32, i32* %120, align 16
  %349 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 4
  %350 = load i32, i32* %349, align 16
  %351 = load i32, i32* %132, align 4
  %352 = mul nsw i32 %348, %347
  %353 = sext i32 %352 to i64
  %354 = mul i32 %350, %351
  %355 = sub i32 0, %354
  %356 = sext i32 %355 to i64
  %357 = add i64 %147, %353
  %358 = add i64 %357, %356
  %359 = ashr i64 %358, %150
  %360 = trunc i64 %359 to i32
  store i32 %360, i32* %34, align 4
  %361 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 28
  %362 = load i32, i32* %361, align 16
  %363 = load i32, i32* %121, align 4
  %364 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 36
  %365 = load i32, i32* %364, align 16
  %366 = load i32, i32* %129, align 8
  %367 = mul nsw i32 %363, %362
  %368 = sext i32 %367 to i64
  %369 = mul i32 %365, %366
  %370 = sub i32 0, %369
  %371 = sext i32 %370 to i64
  %372 = add i64 %147, %368
  %373 = add i64 %372, %371
  %374 = ashr i64 %373, %150
  %375 = trunc i64 %374 to i32
  store i32 %375, i32* %37, align 4
  %376 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 44
  %377 = load i32, i32* %376, align 16
  %378 = load i32, i32* %122, align 8
  %379 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 20
  %380 = load i32, i32* %379, align 16
  %381 = load i32, i32* %128, align 4
  %382 = mul nsw i32 %378, %377
  %383 = sext i32 %382 to i64
  %384 = mul i32 %380, %381
  %385 = sub i32 0, %384
  %386 = sext i32 %385 to i64
  %387 = add i64 %147, %383
  %388 = add i64 %387, %386
  %389 = ashr i64 %388, %150
  %390 = trunc i64 %389 to i32
  store i32 %390, i32* %40, align 4
  %391 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 12
  %392 = load i32, i32* %391, align 16
  %393 = load i32, i32* %125, align 4
  %394 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 52
  %395 = load i32, i32* %394, align 16
  %396 = load i32, i32* %127, align 16
  %397 = mul nsw i32 %393, %392
  %398 = sext i32 %397 to i64
  %399 = mul i32 %395, %396
  %400 = sub i32 0, %399
  %401 = sext i32 %400 to i64
  %402 = add i64 %147, %398
  %403 = add i64 %402, %401
  %404 = ashr i64 %403, %150
  %405 = trunc i64 %404 to i32
  store i32 %405, i32* %43, align 4
  %406 = mul nsw i32 %395, %393
  %407 = sext i32 %406 to i64
  %408 = mul nsw i32 %396, %392
  %409 = sext i32 %408 to i64
  %410 = add i64 %147, %407
  %411 = add i64 %410, %409
  %412 = ashr i64 %411, %150
  %413 = trunc i64 %412 to i32
  store i32 %413, i32* %46, align 4
  %414 = mul nsw i32 %380, %378
  %415 = sext i32 %414 to i64
  %416 = mul nsw i32 %381, %377
  %417 = sext i32 %416 to i64
  %418 = add i64 %147, %415
  %419 = add i64 %418, %417
  %420 = ashr i64 %419, %150
  %421 = trunc i64 %420 to i32
  store i32 %421, i32* %49, align 4
  %422 = mul nsw i32 %365, %363
  %423 = sext i32 %422 to i64
  %424 = mul nsw i32 %366, %362
  %425 = sext i32 %424 to i64
  %426 = add i64 %147, %423
  %427 = add i64 %426, %425
  %428 = ashr i64 %427, %150
  %429 = trunc i64 %428 to i32
  store i32 %429, i32* %52, align 4
  %430 = mul nsw i32 %350, %348
  %431 = sext i32 %430 to i64
  %432 = mul nsw i32 %351, %347
  %433 = sext i32 %432 to i64
  %434 = add i64 %147, %431
  %435 = add i64 %434, %433
  %436 = ashr i64 %435, %150
  %437 = trunc i64 %436 to i32
  store i32 %437, i32* %55, align 4
  %438 = load i32, i32* %153, align 16
  %439 = load i32, i32* %169, align 4
  %440 = add nsw i32 %439, %438
  %441 = getelementptr inbounds i8, i8* %3, i64 3
  %442 = load i8, i8* %441, align 1
  %443 = icmp slt i8 %442, 1
  br i1 %443, label %457, label %444

444:                                              ; preds = %4
  %445 = sext i8 %442 to i64
  %446 = add nuw nsw i64 %445, 4294967295
  %447 = and i64 %446, 4294967295
  %448 = shl i64 1, %447
  %449 = add nsw i64 %448, -1
  %450 = sub nsw i64 0, %448
  %451 = sext i32 %440 to i64
  %452 = icmp slt i64 %451, %450
  %453 = icmp slt i64 %449, %451
  %454 = select i1 %453, i64 %449, i64 %451
  %455 = select i1 %452, i64 %450, i64 %454
  %456 = trunc i64 %455 to i32
  br label %457

457:                                              ; preds = %4, %444
  %458 = phi i32 [ %456, %444 ], [ %440, %4 ]
  store i32 %458, i32* %58, align 4
  %459 = sub nsw i32 %438, %439
  %460 = load i8, i8* %441, align 1
  %461 = icmp slt i8 %460, 1
  br i1 %461, label %475, label %462

462:                                              ; preds = %457
  %463 = sext i8 %460 to i64
  %464 = add nuw nsw i64 %463, 4294967295
  %465 = and i64 %464, 4294967295
  %466 = shl i64 1, %465
  %467 = add nsw i64 %466, -1
  %468 = sub nsw i64 0, %466
  %469 = sext i32 %459 to i64
  %470 = icmp slt i64 %469, %468
  %471 = icmp slt i64 %467, %469
  %472 = select i1 %471, i64 %467, i64 %469
  %473 = select i1 %470, i64 %468, i64 %472
  %474 = trunc i64 %473 to i32
  br label %475

475:                                              ; preds = %457, %462
  %476 = phi i32 [ %474, %462 ], [ %459, %457 ]
  store i32 %476, i32* %61, align 4
  %477 = load i32, i32* %185, align 8
  %478 = load i32, i32* %201, align 4
  %479 = sub i32 %478, %477
  %480 = load i8, i8* %441, align 1
  %481 = icmp slt i8 %480, 1
  br i1 %481, label %495, label %482

482:                                              ; preds = %475
  %483 = sext i8 %480 to i64
  %484 = add nuw nsw i64 %483, 4294967295
  %485 = and i64 %484, 4294967295
  %486 = shl i64 1, %485
  %487 = add nsw i64 %486, -1
  %488 = sub nsw i64 0, %486
  %489 = sext i32 %479 to i64
  %490 = icmp slt i64 %489, %488
  %491 = icmp slt i64 %487, %489
  %492 = select i1 %491, i64 %487, i64 %489
  %493 = select i1 %490, i64 %488, i64 %492
  %494 = trunc i64 %493 to i32
  br label %495

495:                                              ; preds = %475, %482
  %496 = phi i32 [ %494, %482 ], [ %479, %475 ]
  store i32 %496, i32* %64, align 4
  %497 = add nsw i32 %478, %477
  %498 = load i8, i8* %441, align 1
  %499 = icmp slt i8 %498, 1
  br i1 %499, label %513, label %500

500:                                              ; preds = %495
  %501 = sext i8 %498 to i64
  %502 = add nuw nsw i64 %501, 4294967295
  %503 = and i64 %502, 4294967295
  %504 = shl i64 1, %503
  %505 = add nsw i64 %504, -1
  %506 = sub nsw i64 0, %504
  %507 = sext i32 %497 to i64
  %508 = icmp slt i64 %507, %506
  %509 = icmp slt i64 %505, %507
  %510 = select i1 %509, i64 %505, i64 %507
  %511 = select i1 %508, i64 %506, i64 %510
  %512 = trunc i64 %511 to i32
  br label %513

513:                                              ; preds = %495, %500
  %514 = phi i32 [ %512, %500 ], [ %497, %495 ]
  store i32 %514, i32* %67, align 4
  %515 = load i32, i32* %217, align 16
  %516 = load i32, i32* %233, align 4
  %517 = add nsw i32 %516, %515
  %518 = load i8, i8* %441, align 1
  %519 = icmp slt i8 %518, 1
  br i1 %519, label %533, label %520

520:                                              ; preds = %513
  %521 = sext i8 %518 to i64
  %522 = add nuw nsw i64 %521, 4294967295
  %523 = and i64 %522, 4294967295
  %524 = shl i64 1, %523
  %525 = add nsw i64 %524, -1
  %526 = sub nsw i64 0, %524
  %527 = sext i32 %517 to i64
  %528 = icmp slt i64 %527, %526
  %529 = icmp slt i64 %525, %527
  %530 = select i1 %529, i64 %525, i64 %527
  %531 = select i1 %528, i64 %526, i64 %530
  %532 = trunc i64 %531 to i32
  br label %533

533:                                              ; preds = %513, %520
  %534 = phi i32 [ %532, %520 ], [ %517, %513 ]
  store i32 %534, i32* %70, align 4
  %535 = sub nsw i32 %515, %516
  %536 = load i8, i8* %441, align 1
  %537 = icmp slt i8 %536, 1
  br i1 %537, label %551, label %538

538:                                              ; preds = %533
  %539 = sext i8 %536 to i64
  %540 = add nuw nsw i64 %539, 4294967295
  %541 = and i64 %540, 4294967295
  %542 = shl i64 1, %541
  %543 = add nsw i64 %542, -1
  %544 = sub nsw i64 0, %542
  %545 = sext i32 %535 to i64
  %546 = icmp slt i64 %545, %544
  %547 = icmp slt i64 %543, %545
  %548 = select i1 %547, i64 %543, i64 %545
  %549 = select i1 %546, i64 %544, i64 %548
  %550 = trunc i64 %549 to i32
  br label %551

551:                                              ; preds = %533, %538
  %552 = phi i32 [ %550, %538 ], [ %535, %533 ]
  store i32 %552, i32* %73, align 4
  %553 = load i32, i32* %249, align 8
  %554 = load i32, i32* %265, align 4
  %555 = sub i32 %554, %553
  %556 = load i8, i8* %441, align 1
  %557 = icmp slt i8 %556, 1
  br i1 %557, label %571, label %558

558:                                              ; preds = %551
  %559 = sext i8 %556 to i64
  %560 = add nuw nsw i64 %559, 4294967295
  %561 = and i64 %560, 4294967295
  %562 = shl i64 1, %561
  %563 = add nsw i64 %562, -1
  %564 = sub nsw i64 0, %562
  %565 = sext i32 %555 to i64
  %566 = icmp slt i64 %565, %564
  %567 = icmp slt i64 %563, %565
  %568 = select i1 %567, i64 %563, i64 %565
  %569 = select i1 %566, i64 %564, i64 %568
  %570 = trunc i64 %569 to i32
  br label %571

571:                                              ; preds = %551, %558
  %572 = phi i32 [ %570, %558 ], [ %555, %551 ]
  store i32 %572, i32* %76, align 4
  %573 = add nsw i32 %554, %553
  %574 = load i8, i8* %441, align 1
  %575 = icmp slt i8 %574, 1
  br i1 %575, label %589, label %576

576:                                              ; preds = %571
  %577 = sext i8 %574 to i64
  %578 = add nuw nsw i64 %577, 4294967295
  %579 = and i64 %578, 4294967295
  %580 = shl i64 1, %579
  %581 = add nsw i64 %580, -1
  %582 = sub nsw i64 0, %580
  %583 = sext i32 %573 to i64
  %584 = icmp slt i64 %583, %582
  %585 = icmp slt i64 %581, %583
  %586 = select i1 %585, i64 %581, i64 %583
  %587 = select i1 %584, i64 %582, i64 %586
  %588 = trunc i64 %587 to i32
  br label %589

589:                                              ; preds = %571, %576
  %590 = phi i32 [ %588, %576 ], [ %573, %571 ]
  store i32 %590, i32* %79, align 4
  %591 = load i32, i32* %274, align 16
  %592 = load i32, i32* %283, align 4
  %593 = add nsw i32 %592, %591
  %594 = load i8, i8* %441, align 1
  %595 = icmp slt i8 %594, 1
  br i1 %595, label %609, label %596

596:                                              ; preds = %589
  %597 = sext i8 %594 to i64
  %598 = add nuw nsw i64 %597, 4294967295
  %599 = and i64 %598, 4294967295
  %600 = shl i64 1, %599
  %601 = add nsw i64 %600, -1
  %602 = sub nsw i64 0, %600
  %603 = sext i32 %593 to i64
  %604 = icmp slt i64 %603, %602
  %605 = icmp slt i64 %601, %603
  %606 = select i1 %605, i64 %601, i64 %603
  %607 = select i1 %604, i64 %602, i64 %606
  %608 = trunc i64 %607 to i32
  br label %609

609:                                              ; preds = %589, %596
  %610 = phi i32 [ %608, %596 ], [ %593, %589 ]
  store i32 %610, i32* %82, align 4
  %611 = sub nsw i32 %591, %592
  %612 = load i8, i8* %441, align 1
  %613 = icmp slt i8 %612, 1
  br i1 %613, label %627, label %614

614:                                              ; preds = %609
  %615 = sext i8 %612 to i64
  %616 = add nuw nsw i64 %615, 4294967295
  %617 = and i64 %616, 4294967295
  %618 = shl i64 1, %617
  %619 = add nsw i64 %618, -1
  %620 = sub nsw i64 0, %618
  %621 = sext i32 %611 to i64
  %622 = icmp slt i64 %621, %620
  %623 = icmp slt i64 %619, %621
  %624 = select i1 %623, i64 %619, i64 %621
  %625 = select i1 %622, i64 %620, i64 %624
  %626 = trunc i64 %625 to i32
  br label %627

627:                                              ; preds = %609, %614
  %628 = phi i32 [ %626, %614 ], [ %611, %609 ]
  store i32 %628, i32* %85, align 4
  %629 = load i32, i32* %292, align 8
  %630 = load i32, i32* %301, align 4
  %631 = sub i32 %630, %629
  %632 = load i8, i8* %441, align 1
  %633 = icmp slt i8 %632, 1
  br i1 %633, label %647, label %634

634:                                              ; preds = %627
  %635 = sext i8 %632 to i64
  %636 = add nuw nsw i64 %635, 4294967295
  %637 = and i64 %636, 4294967295
  %638 = shl i64 1, %637
  %639 = add nsw i64 %638, -1
  %640 = sub nsw i64 0, %638
  %641 = sext i32 %631 to i64
  %642 = icmp slt i64 %641, %640
  %643 = icmp slt i64 %639, %641
  %644 = select i1 %643, i64 %639, i64 %641
  %645 = select i1 %642, i64 %640, i64 %644
  %646 = trunc i64 %645 to i32
  br label %647

647:                                              ; preds = %627, %634
  %648 = phi i32 [ %646, %634 ], [ %631, %627 ]
  store i32 %648, i32* %88, align 4
  %649 = add nsw i32 %630, %629
  %650 = load i8, i8* %441, align 1
  %651 = icmp slt i8 %650, 1
  br i1 %651, label %665, label %652

652:                                              ; preds = %647
  %653 = sext i8 %650 to i64
  %654 = add nuw nsw i64 %653, 4294967295
  %655 = and i64 %654, 4294967295
  %656 = shl i64 1, %655
  %657 = add nsw i64 %656, -1
  %658 = sub nsw i64 0, %656
  %659 = sext i32 %649 to i64
  %660 = icmp slt i64 %659, %658
  %661 = icmp slt i64 %657, %659
  %662 = select i1 %661, i64 %657, i64 %659
  %663 = select i1 %660, i64 %658, i64 %662
  %664 = trunc i64 %663 to i32
  br label %665

665:                                              ; preds = %647, %652
  %666 = phi i32 [ %664, %652 ], [ %649, %647 ]
  store i32 %666, i32* %91, align 4
  %667 = load i32, i32* %310, align 16
  %668 = load i32, i32* %319, align 4
  %669 = add nsw i32 %668, %667
  %670 = load i8, i8* %441, align 1
  %671 = icmp slt i8 %670, 1
  br i1 %671, label %685, label %672

672:                                              ; preds = %665
  %673 = sext i8 %670 to i64
  %674 = add nuw nsw i64 %673, 4294967295
  %675 = and i64 %674, 4294967295
  %676 = shl i64 1, %675
  %677 = add nsw i64 %676, -1
  %678 = sub nsw i64 0, %676
  %679 = sext i32 %669 to i64
  %680 = icmp slt i64 %679, %678
  %681 = icmp slt i64 %677, %679
  %682 = select i1 %681, i64 %677, i64 %679
  %683 = select i1 %680, i64 %678, i64 %682
  %684 = trunc i64 %683 to i32
  br label %685

685:                                              ; preds = %665, %672
  %686 = phi i32 [ %684, %672 ], [ %669, %665 ]
  store i32 %686, i32* %94, align 4
  %687 = sub nsw i32 %667, %668
  %688 = load i8, i8* %441, align 1
  %689 = icmp slt i8 %688, 1
  br i1 %689, label %703, label %690

690:                                              ; preds = %685
  %691 = sext i8 %688 to i64
  %692 = add nuw nsw i64 %691, 4294967295
  %693 = and i64 %692, 4294967295
  %694 = shl i64 1, %693
  %695 = add nsw i64 %694, -1
  %696 = sub nsw i64 0, %694
  %697 = sext i32 %687 to i64
  %698 = icmp slt i64 %697, %696
  %699 = icmp slt i64 %695, %697
  %700 = select i1 %699, i64 %695, i64 %697
  %701 = select i1 %698, i64 %696, i64 %700
  %702 = trunc i64 %701 to i32
  br label %703

703:                                              ; preds = %685, %690
  %704 = phi i32 [ %702, %690 ], [ %687, %685 ]
  store i32 %704, i32* %97, align 4
  %705 = load i32, i32* %328, align 8
  %706 = load i32, i32* %337, align 4
  %707 = sub i32 %706, %705
  %708 = load i8, i8* %441, align 1
  %709 = icmp slt i8 %708, 1
  br i1 %709, label %723, label %710

710:                                              ; preds = %703
  %711 = sext i8 %708 to i64
  %712 = add nuw nsw i64 %711, 4294967295
  %713 = and i64 %712, 4294967295
  %714 = shl i64 1, %713
  %715 = add nsw i64 %714, -1
  %716 = sub nsw i64 0, %714
  %717 = sext i32 %707 to i64
  %718 = icmp slt i64 %717, %716
  %719 = icmp slt i64 %715, %717
  %720 = select i1 %719, i64 %715, i64 %717
  %721 = select i1 %718, i64 %716, i64 %720
  %722 = trunc i64 %721 to i32
  br label %723

723:                                              ; preds = %703, %710
  %724 = phi i32 [ %722, %710 ], [ %707, %703 ]
  store i32 %724, i32* %100, align 4
  %725 = add nsw i32 %706, %705
  %726 = load i8, i8* %441, align 1
  %727 = icmp slt i8 %726, 1
  br i1 %727, label %741, label %728

728:                                              ; preds = %723
  %729 = sext i8 %726 to i64
  %730 = add nuw nsw i64 %729, 4294967295
  %731 = and i64 %730, 4294967295
  %732 = shl i64 1, %731
  %733 = add nsw i64 %732, -1
  %734 = sub nsw i64 0, %732
  %735 = sext i32 %725 to i64
  %736 = icmp slt i64 %735, %734
  %737 = icmp slt i64 %733, %735
  %738 = select i1 %737, i64 %733, i64 %735
  %739 = select i1 %736, i64 %734, i64 %738
  %740 = trunc i64 %739 to i32
  br label %741

741:                                              ; preds = %723, %728
  %742 = phi i32 [ %740, %728 ], [ %725, %723 ]
  store i32 %742, i32* %103, align 4
  %743 = load i8, i8* %441, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 32, i8 signext %743) #4
  %744 = bitcast i32* %1 to <4 x i32>*
  %745 = load <4 x i32>, <4 x i32>* %744, align 4
  %746 = bitcast [32 x i32]* %5 to <4 x i32>*
  store <4 x i32> %745, <4 x i32>* %746, align 16
  %747 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 56
  %748 = load i32, i32* %747, align 16
  %749 = load i32, i32* %22, align 4
  %750 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 8
  %751 = load i32, i32* %750, align 16
  %752 = sub nsw i32 0, %751
  %753 = load i32, i32* %31, align 4
  %754 = mul nsw i32 %749, %748
  %755 = sext i32 %754 to i64
  %756 = mul nsw i32 %753, %752
  %757 = sext i32 %756 to i64
  %758 = add i64 %147, %755
  %759 = add i64 %758, %757
  %760 = ashr i64 %759, %150
  %761 = trunc i64 %760 to i32
  store i32 %761, i32* %113, align 16
  %762 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 24
  %763 = load i32, i32* %762, align 16
  %764 = load i32, i32* %25, align 4
  %765 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 40
  %766 = load i32, i32* %765, align 16
  %767 = sub nsw i32 0, %766
  %768 = load i32, i32* %28, align 4
  %769 = mul nsw i32 %764, %763
  %770 = sext i32 %769 to i64
  %771 = mul nsw i32 %768, %767
  %772 = sext i32 %771 to i64
  %773 = add i64 %147, %770
  %774 = add i64 %773, %772
  %775 = ashr i64 %774, %150
  %776 = trunc i64 %775 to i32
  store i32 %776, i32* %114, align 4
  %777 = mul nsw i32 %766, %764
  %778 = sext i32 %777 to i64
  %779 = mul nsw i32 %768, %763
  %780 = sext i32 %779 to i64
  %781 = add i64 %147, %778
  %782 = add i64 %781, %780
  %783 = ashr i64 %782, %150
  %784 = trunc i64 %783 to i32
  store i32 %784, i32* %115, align 8
  %785 = mul nsw i32 %751, %749
  %786 = sext i32 %785 to i64
  %787 = mul nsw i32 %753, %748
  %788 = sext i32 %787 to i64
  %789 = add i64 %147, %786
  %790 = add i64 %789, %788
  %791 = ashr i64 %790, %150
  %792 = trunc i64 %791 to i32
  store i32 %792, i32* %118, align 4
  %793 = load i32, i32* %34, align 4
  %794 = load i32, i32* %37, align 4
  %795 = add nsw i32 %794, %793
  %796 = getelementptr inbounds i8, i8* %3, i64 4
  %797 = load i8, i8* %796, align 1
  %798 = icmp slt i8 %797, 1
  br i1 %798, label %799, label %812

799:                                              ; preds = %741
  store i32 %795, i32* %120, align 16
  %800 = sub nsw i32 %793, %794
  store i32 %800, i32* %121, align 4
  %801 = bitcast i32* %40 to <4 x i32>*
  %802 = load <4 x i32>, <4 x i32>* %801, align 4
  %803 = shufflevector <4 x i32> %802, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %804 = sub <4 x i32> %803, %802
  %805 = add nsw <4 x i32> %803, %802
  %806 = shufflevector <4 x i32> %804, <4 x i32> %805, <4 x i32> <i32 0, i32 5, i32 6, i32 3>
  %807 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %806, <4 x i32>* %807, align 8
  %808 = load i32, i32* %52, align 4
  %809 = load i32, i32* %55, align 4
  %810 = sub i32 %809, %808
  store i32 %810, i32* %129, align 8
  %811 = add nsw i32 %809, %808
  br label %880

812:                                              ; preds = %741
  %813 = sext i8 %797 to i64
  %814 = add nuw nsw i64 %813, 4294967295
  %815 = and i64 %814, 4294967295
  %816 = shl i64 1, %815
  %817 = add nsw i64 %816, -1
  %818 = sub nsw i64 0, %816
  %819 = sext i32 %795 to i64
  %820 = icmp slt i64 %819, %818
  %821 = icmp slt i64 %817, %819
  %822 = select i1 %821, i64 %817, i64 %819
  %823 = select i1 %820, i64 %818, i64 %822
  %824 = trunc i64 %823 to i32
  store i32 %824, i32* %120, align 16
  %825 = sub nsw i32 %793, %794
  %826 = sext i32 %825 to i64
  %827 = icmp slt i64 %826, %818
  %828 = icmp slt i64 %817, %826
  %829 = select i1 %828, i64 %817, i64 %826
  %830 = select i1 %827, i64 %818, i64 %829
  %831 = trunc i64 %830 to i32
  store i32 %831, i32* %121, align 4
  %832 = load i32, i32* %40, align 4
  %833 = load i32, i32* %43, align 4
  %834 = sub i32 %833, %832
  %835 = sext i32 %834 to i64
  %836 = icmp slt i64 %835, %818
  %837 = icmp slt i64 %817, %835
  %838 = select i1 %837, i64 %817, i64 %835
  %839 = select i1 %836, i64 %818, i64 %838
  %840 = trunc i64 %839 to i32
  store i32 %840, i32* %122, align 8
  %841 = add nsw i32 %833, %832
  %842 = sext i32 %841 to i64
  %843 = icmp slt i64 %842, %818
  %844 = icmp slt i64 %817, %842
  %845 = select i1 %844, i64 %817, i64 %842
  %846 = select i1 %843, i64 %818, i64 %845
  %847 = trunc i64 %846 to i32
  store i32 %847, i32* %125, align 4
  %848 = load i32, i32* %46, align 4
  %849 = load i32, i32* %49, align 4
  %850 = add nsw i32 %849, %848
  %851 = sext i32 %850 to i64
  %852 = icmp slt i64 %851, %818
  %853 = icmp slt i64 %817, %851
  %854 = select i1 %853, i64 %817, i64 %851
  %855 = select i1 %852, i64 %818, i64 %854
  %856 = trunc i64 %855 to i32
  store i32 %856, i32* %127, align 16
  %857 = sub nsw i32 %848, %849
  %858 = sext i32 %857 to i64
  %859 = icmp slt i64 %858, %818
  %860 = icmp slt i64 %817, %858
  %861 = select i1 %860, i64 %817, i64 %858
  %862 = select i1 %859, i64 %818, i64 %861
  %863 = trunc i64 %862 to i32
  store i32 %863, i32* %128, align 4
  %864 = load i32, i32* %52, align 4
  %865 = load i32, i32* %55, align 4
  %866 = sub i32 %865, %864
  %867 = sext i32 %866 to i64
  %868 = icmp slt i64 %867, %818
  %869 = icmp slt i64 %817, %867
  %870 = select i1 %869, i64 %817, i64 %867
  %871 = select i1 %868, i64 %818, i64 %870
  %872 = trunc i64 %871 to i32
  store i32 %872, i32* %129, align 8
  %873 = add nsw i32 %865, %864
  %874 = sext i32 %873 to i64
  %875 = icmp slt i64 %874, %818
  %876 = icmp slt i64 %817, %874
  %877 = select i1 %876, i64 %817, i64 %874
  %878 = select i1 %875, i64 %818, i64 %877
  %879 = trunc i64 %878 to i32
  br label %880

880:                                              ; preds = %799, %812
  %881 = phi i32 [ %879, %812 ], [ %811, %799 ]
  store i32 %881, i32* %132, align 4
  %882 = load i32, i32* %58, align 4
  store i32 %882, i32* %153, align 16
  %883 = load i32, i32* %61, align 4
  %884 = load i32, i32* %100, align 4
  %885 = mul nsw i32 %883, %752
  %886 = sext i32 %885 to i64
  %887 = mul nsw i32 %884, %748
  %888 = sext i32 %887 to i64
  %889 = add i64 %147, %886
  %890 = add i64 %889, %888
  %891 = ashr i64 %890, %150
  %892 = trunc i64 %891 to i32
  store i32 %892, i32* %169, align 4
  %893 = load i32, i32* %64, align 4
  %894 = load i32, i32* %97, align 4
  %895 = mul i32 %748, %893
  %896 = sub i32 0, %895
  %897 = sext i32 %896 to i64
  %898 = mul nsw i32 %894, %752
  %899 = sext i32 %898 to i64
  %900 = add i64 %147, %897
  %901 = add i64 %900, %899
  %902 = ashr i64 %901, %150
  %903 = trunc i64 %902 to i32
  store i32 %903, i32* %185, align 8
  %904 = load i32, i32* %67, align 4
  store i32 %904, i32* %201, align 4
  %905 = load i32, i32* %70, align 4
  store i32 %905, i32* %217, align 16
  %906 = load i32, i32* %73, align 4
  %907 = load i32, i32* %88, align 4
  %908 = mul nsw i32 %906, %767
  %909 = sext i32 %908 to i64
  %910 = mul nsw i32 %907, %763
  %911 = sext i32 %910 to i64
  %912 = add i64 %147, %909
  %913 = add i64 %912, %911
  %914 = ashr i64 %913, %150
  %915 = trunc i64 %914 to i32
  store i32 %915, i32* %233, align 4
  %916 = load i32, i32* %76, align 4
  %917 = load i32, i32* %85, align 4
  %918 = mul i32 %763, %916
  %919 = sub i32 0, %918
  %920 = sext i32 %919 to i64
  %921 = mul nsw i32 %917, %767
  %922 = sext i32 %921 to i64
  %923 = add i64 %147, %920
  %924 = add i64 %923, %922
  %925 = ashr i64 %924, %150
  %926 = trunc i64 %925 to i32
  store i32 %926, i32* %249, align 8
  %927 = load i32, i32* %79, align 4
  store i32 %927, i32* %265, align 4
  %928 = load i32, i32* %82, align 4
  store i32 %928, i32* %274, align 16
  %929 = mul nsw i32 %916, %767
  %930 = sext i32 %929 to i64
  %931 = mul nsw i32 %917, %763
  %932 = sext i32 %931 to i64
  %933 = add i64 %147, %930
  %934 = add i64 %933, %932
  %935 = ashr i64 %934, %150
  %936 = trunc i64 %935 to i32
  store i32 %936, i32* %283, align 4
  %937 = mul nsw i32 %906, %763
  %938 = sext i32 %937 to i64
  %939 = mul nsw i32 %907, %766
  %940 = sext i32 %939 to i64
  %941 = add i64 %147, %938
  %942 = add i64 %941, %940
  %943 = ashr i64 %942, %150
  %944 = trunc i64 %943 to i32
  store i32 %944, i32* %292, align 8
  %945 = load i32, i32* %91, align 4
  store i32 %945, i32* %301, align 4
  %946 = load i32, i32* %94, align 4
  store i32 %946, i32* %310, align 16
  %947 = mul nsw i32 %893, %752
  %948 = sext i32 %947 to i64
  %949 = mul nsw i32 %894, %748
  %950 = sext i32 %949 to i64
  %951 = add i64 %147, %948
  %952 = add i64 %951, %950
  %953 = ashr i64 %952, %150
  %954 = trunc i64 %953 to i32
  store i32 %954, i32* %319, align 4
  %955 = mul nsw i32 %883, %748
  %956 = sext i32 %955 to i64
  %957 = mul nsw i32 %884, %751
  %958 = sext i32 %957 to i64
  %959 = add i64 %147, %956
  %960 = add i64 %959, %958
  %961 = ashr i64 %960, %150
  %962 = trunc i64 %961 to i32
  store i32 %962, i32* %328, align 8
  %963 = load i32, i32* %103, align 4
  store i32 %963, i32* %337, align 4
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %106, i32 32, i8 signext %797) #4
  %964 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %965 = load i32, i32* %964, align 16
  %966 = load i32, i32* %106, align 16
  %967 = load i32, i32* %107, align 4
  %968 = mul nsw i32 %966, %965
  %969 = sext i32 %968 to i64
  %970 = mul nsw i32 %967, %965
  %971 = sext i32 %970 to i64
  %972 = add i64 %147, %969
  %973 = add i64 %972, %971
  %974 = ashr i64 %973, %150
  %975 = trunc i64 %974 to i32
  store i32 %975, i32* %1, align 4
  %976 = sub nsw i32 0, %965
  %977 = mul nsw i32 %967, %976
  %978 = sext i32 %977 to i64
  %979 = add i64 %972, %978
  %980 = ashr i64 %979, %150
  %981 = trunc i64 %980 to i32
  store i32 %981, i32* %13, align 4
  %982 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %983 = load i32, i32* %982, align 16
  %984 = load i32, i32* %108, align 8
  %985 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %986 = load i32, i32* %985, align 16
  %987 = sub nsw i32 0, %986
  %988 = load i32, i32* %111, align 4
  %989 = mul nsw i32 %984, %983
  %990 = sext i32 %989 to i64
  %991 = mul nsw i32 %988, %987
  %992 = sext i32 %991 to i64
  %993 = add i64 %147, %990
  %994 = add i64 %993, %992
  %995 = ashr i64 %994, %150
  %996 = trunc i64 %995 to i32
  store i32 %996, i32* %16, align 4
  %997 = mul nsw i32 %986, %984
  %998 = sext i32 %997 to i64
  %999 = mul nsw i32 %988, %983
  %1000 = sext i32 %999 to i64
  %1001 = add i64 %147, %998
  %1002 = add i64 %1001, %1000
  %1003 = ashr i64 %1002, %150
  %1004 = trunc i64 %1003 to i32
  store i32 %1004, i32* %19, align 4
  %1005 = load i32, i32* %113, align 16
  %1006 = load i32, i32* %114, align 4
  %1007 = add nsw i32 %1006, %1005
  %1008 = getelementptr inbounds i8, i8* %3, i64 5
  %1009 = load i8, i8* %1008, align 1
  %1010 = icmp slt i8 %1009, 1
  br i1 %1010, label %1024, label %1011

1011:                                             ; preds = %880
  %1012 = sext i8 %1009 to i64
  %1013 = add nuw nsw i64 %1012, 4294967295
  %1014 = and i64 %1013, 4294967295
  %1015 = shl i64 1, %1014
  %1016 = add nsw i64 %1015, -1
  %1017 = sub nsw i64 0, %1015
  %1018 = sext i32 %1007 to i64
  %1019 = icmp slt i64 %1018, %1017
  %1020 = icmp slt i64 %1016, %1018
  %1021 = select i1 %1020, i64 %1016, i64 %1018
  %1022 = select i1 %1019, i64 %1017, i64 %1021
  %1023 = trunc i64 %1022 to i32
  br label %1024

1024:                                             ; preds = %880, %1011
  %1025 = phi i32 [ %1023, %1011 ], [ %1007, %880 ]
  store i32 %1025, i32* %22, align 4
  %1026 = sub nsw i32 %1005, %1006
  %1027 = load i8, i8* %1008, align 1
  %1028 = icmp slt i8 %1027, 1
  br i1 %1028, label %1042, label %1029

1029:                                             ; preds = %1024
  %1030 = sext i8 %1027 to i64
  %1031 = add nuw nsw i64 %1030, 4294967295
  %1032 = and i64 %1031, 4294967295
  %1033 = shl i64 1, %1032
  %1034 = add nsw i64 %1033, -1
  %1035 = sub nsw i64 0, %1033
  %1036 = sext i32 %1026 to i64
  %1037 = icmp slt i64 %1036, %1035
  %1038 = icmp slt i64 %1034, %1036
  %1039 = select i1 %1038, i64 %1034, i64 %1036
  %1040 = select i1 %1037, i64 %1035, i64 %1039
  %1041 = trunc i64 %1040 to i32
  br label %1042

1042:                                             ; preds = %1024, %1029
  %1043 = phi i32 [ %1041, %1029 ], [ %1026, %1024 ]
  store i32 %1043, i32* %25, align 4
  %1044 = load i32, i32* %115, align 8
  %1045 = load i32, i32* %118, align 4
  %1046 = sub i32 %1045, %1044
  %1047 = load i8, i8* %1008, align 1
  %1048 = icmp slt i8 %1047, 1
  br i1 %1048, label %1062, label %1049

1049:                                             ; preds = %1042
  %1050 = sext i8 %1047 to i64
  %1051 = add nuw nsw i64 %1050, 4294967295
  %1052 = and i64 %1051, 4294967295
  %1053 = shl i64 1, %1052
  %1054 = add nsw i64 %1053, -1
  %1055 = sub nsw i64 0, %1053
  %1056 = sext i32 %1046 to i64
  %1057 = icmp slt i64 %1056, %1055
  %1058 = icmp slt i64 %1054, %1056
  %1059 = select i1 %1058, i64 %1054, i64 %1056
  %1060 = select i1 %1057, i64 %1055, i64 %1059
  %1061 = trunc i64 %1060 to i32
  br label %1062

1062:                                             ; preds = %1042, %1049
  %1063 = phi i32 [ %1061, %1049 ], [ %1046, %1042 ]
  store i32 %1063, i32* %28, align 4
  %1064 = add nsw i32 %1045, %1044
  %1065 = load i8, i8* %1008, align 1
  %1066 = icmp slt i8 %1065, 1
  br i1 %1066, label %1080, label %1067

1067:                                             ; preds = %1062
  %1068 = sext i8 %1065 to i64
  %1069 = add nuw nsw i64 %1068, 4294967295
  %1070 = and i64 %1069, 4294967295
  %1071 = shl i64 1, %1070
  %1072 = add nsw i64 %1071, -1
  %1073 = sub nsw i64 0, %1071
  %1074 = sext i32 %1064 to i64
  %1075 = icmp slt i64 %1074, %1073
  %1076 = icmp slt i64 %1072, %1074
  %1077 = select i1 %1076, i64 %1072, i64 %1074
  %1078 = select i1 %1075, i64 %1073, i64 %1077
  %1079 = trunc i64 %1078 to i32
  br label %1080

1080:                                             ; preds = %1062, %1067
  %1081 = phi i32 [ %1079, %1067 ], [ %1064, %1062 ]
  store i32 %1081, i32* %31, align 4
  %1082 = load i32, i32* %120, align 16
  store i32 %1082, i32* %34, align 4
  %1083 = load i32, i32* %121, align 4
  %1084 = load i32, i32* %129, align 8
  %1085 = mul nsw i32 %1083, %987
  %1086 = sext i32 %1085 to i64
  %1087 = mul nsw i32 %1084, %983
  %1088 = sext i32 %1087 to i64
  %1089 = add i64 %147, %1086
  %1090 = add i64 %1089, %1088
  %1091 = ashr i64 %1090, %150
  %1092 = trunc i64 %1091 to i32
  store i32 %1092, i32* %37, align 4
  %1093 = sub nsw i32 0, %983
  %1094 = load i32, i32* %122, align 8
  %1095 = load i32, i32* %128, align 4
  %1096 = mul nsw i32 %1094, %1093
  %1097 = sext i32 %1096 to i64
  %1098 = mul nsw i32 %1095, %987
  %1099 = sext i32 %1098 to i64
  %1100 = add i64 %147, %1097
  %1101 = add i64 %1100, %1099
  %1102 = ashr i64 %1101, %150
  %1103 = trunc i64 %1102 to i32
  store i32 %1103, i32* %40, align 4
  %1104 = load i32, i32* %125, align 4
  store i32 %1104, i32* %43, align 4
  %1105 = load i32, i32* %127, align 16
  store i32 %1105, i32* %46, align 4
  %1106 = mul nsw i32 %1094, %987
  %1107 = sext i32 %1106 to i64
  %1108 = mul nsw i32 %1095, %983
  %1109 = sext i32 %1108 to i64
  %1110 = add i64 %147, %1107
  %1111 = add i64 %1110, %1109
  %1112 = ashr i64 %1111, %150
  %1113 = trunc i64 %1112 to i32
  store i32 %1113, i32* %49, align 4
  %1114 = mul nsw i32 %1083, %983
  %1115 = sext i32 %1114 to i64
  %1116 = mul nsw i32 %1084, %986
  %1117 = sext i32 %1116 to i64
  %1118 = add i64 %147, %1115
  %1119 = add i64 %1118, %1117
  %1120 = ashr i64 %1119, %150
  %1121 = trunc i64 %1120 to i32
  store i32 %1121, i32* %52, align 4
  %1122 = load i32, i32* %132, align 4
  store i32 %1122, i32* %55, align 4
  %1123 = load i32, i32* %153, align 16
  %1124 = load i32, i32* %201, align 4
  %1125 = add nsw i32 %1124, %1123
  %1126 = load i8, i8* %1008, align 1
  %1127 = icmp slt i8 %1126, 1
  br i1 %1127, label %1141, label %1128

1128:                                             ; preds = %1080
  %1129 = sext i8 %1126 to i64
  %1130 = add nuw nsw i64 %1129, 4294967295
  %1131 = and i64 %1130, 4294967295
  %1132 = shl i64 1, %1131
  %1133 = add nsw i64 %1132, -1
  %1134 = sub nsw i64 0, %1132
  %1135 = sext i32 %1125 to i64
  %1136 = icmp slt i64 %1135, %1134
  %1137 = icmp slt i64 %1133, %1135
  %1138 = select i1 %1137, i64 %1133, i64 %1135
  %1139 = select i1 %1136, i64 %1134, i64 %1138
  %1140 = trunc i64 %1139 to i32
  br label %1141

1141:                                             ; preds = %1080, %1128
  %1142 = phi i32 [ %1140, %1128 ], [ %1125, %1080 ]
  store i32 %1142, i32* %58, align 4
  %1143 = load i32, i32* %169, align 4
  %1144 = load i32, i32* %185, align 8
  %1145 = add nsw i32 %1144, %1143
  %1146 = load i8, i8* %1008, align 1
  %1147 = icmp slt i8 %1146, 1
  br i1 %1147, label %1161, label %1148

1148:                                             ; preds = %1141
  %1149 = sext i8 %1146 to i64
  %1150 = add nuw nsw i64 %1149, 4294967295
  %1151 = and i64 %1150, 4294967295
  %1152 = shl i64 1, %1151
  %1153 = add nsw i64 %1152, -1
  %1154 = sub nsw i64 0, %1152
  %1155 = sext i32 %1145 to i64
  %1156 = icmp slt i64 %1155, %1154
  %1157 = icmp slt i64 %1153, %1155
  %1158 = select i1 %1157, i64 %1153, i64 %1155
  %1159 = select i1 %1156, i64 %1154, i64 %1158
  %1160 = trunc i64 %1159 to i32
  br label %1161

1161:                                             ; preds = %1141, %1148
  %1162 = phi i32 [ %1160, %1148 ], [ %1145, %1141 ]
  store i32 %1162, i32* %61, align 4
  %1163 = sub nsw i32 %1143, %1144
  %1164 = load i8, i8* %1008, align 1
  %1165 = icmp slt i8 %1164, 1
  br i1 %1165, label %1179, label %1166

1166:                                             ; preds = %1161
  %1167 = sext i8 %1164 to i64
  %1168 = add nuw nsw i64 %1167, 4294967295
  %1169 = and i64 %1168, 4294967295
  %1170 = shl i64 1, %1169
  %1171 = add nsw i64 %1170, -1
  %1172 = sub nsw i64 0, %1170
  %1173 = sext i32 %1163 to i64
  %1174 = icmp slt i64 %1173, %1172
  %1175 = icmp slt i64 %1171, %1173
  %1176 = select i1 %1175, i64 %1171, i64 %1173
  %1177 = select i1 %1174, i64 %1172, i64 %1176
  %1178 = trunc i64 %1177 to i32
  br label %1179

1179:                                             ; preds = %1161, %1166
  %1180 = phi i32 [ %1178, %1166 ], [ %1163, %1161 ]
  store i32 %1180, i32* %64, align 4
  %1181 = sub nsw i32 %1123, %1124
  %1182 = load i8, i8* %1008, align 1
  %1183 = icmp slt i8 %1182, 1
  br i1 %1183, label %1197, label %1184

1184:                                             ; preds = %1179
  %1185 = sext i8 %1182 to i64
  %1186 = add nuw nsw i64 %1185, 4294967295
  %1187 = and i64 %1186, 4294967295
  %1188 = shl i64 1, %1187
  %1189 = add nsw i64 %1188, -1
  %1190 = sub nsw i64 0, %1188
  %1191 = sext i32 %1181 to i64
  %1192 = icmp slt i64 %1191, %1190
  %1193 = icmp slt i64 %1189, %1191
  %1194 = select i1 %1193, i64 %1189, i64 %1191
  %1195 = select i1 %1192, i64 %1190, i64 %1194
  %1196 = trunc i64 %1195 to i32
  br label %1197

1197:                                             ; preds = %1179, %1184
  %1198 = phi i32 [ %1196, %1184 ], [ %1181, %1179 ]
  store i32 %1198, i32* %67, align 4
  %1199 = load i32, i32* %217, align 16
  %1200 = load i32, i32* %265, align 4
  %1201 = sub i32 %1200, %1199
  %1202 = load i8, i8* %1008, align 1
  %1203 = icmp slt i8 %1202, 1
  br i1 %1203, label %1217, label %1204

1204:                                             ; preds = %1197
  %1205 = sext i8 %1202 to i64
  %1206 = add nuw nsw i64 %1205, 4294967295
  %1207 = and i64 %1206, 4294967295
  %1208 = shl i64 1, %1207
  %1209 = add nsw i64 %1208, -1
  %1210 = sub nsw i64 0, %1208
  %1211 = sext i32 %1201 to i64
  %1212 = icmp slt i64 %1211, %1210
  %1213 = icmp slt i64 %1209, %1211
  %1214 = select i1 %1213, i64 %1209, i64 %1211
  %1215 = select i1 %1212, i64 %1210, i64 %1214
  %1216 = trunc i64 %1215 to i32
  br label %1217

1217:                                             ; preds = %1197, %1204
  %1218 = phi i32 [ %1216, %1204 ], [ %1201, %1197 ]
  store i32 %1218, i32* %70, align 4
  %1219 = load i32, i32* %233, align 4
  %1220 = load i32, i32* %249, align 8
  %1221 = sub i32 %1220, %1219
  %1222 = load i8, i8* %1008, align 1
  %1223 = icmp slt i8 %1222, 1
  br i1 %1223, label %1237, label %1224

1224:                                             ; preds = %1217
  %1225 = sext i8 %1222 to i64
  %1226 = add nuw nsw i64 %1225, 4294967295
  %1227 = and i64 %1226, 4294967295
  %1228 = shl i64 1, %1227
  %1229 = add nsw i64 %1228, -1
  %1230 = sub nsw i64 0, %1228
  %1231 = sext i32 %1221 to i64
  %1232 = icmp slt i64 %1231, %1230
  %1233 = icmp slt i64 %1229, %1231
  %1234 = select i1 %1233, i64 %1229, i64 %1231
  %1235 = select i1 %1232, i64 %1230, i64 %1234
  %1236 = trunc i64 %1235 to i32
  br label %1237

1237:                                             ; preds = %1217, %1224
  %1238 = phi i32 [ %1236, %1224 ], [ %1221, %1217 ]
  store i32 %1238, i32* %73, align 4
  %1239 = add nsw i32 %1220, %1219
  %1240 = load i8, i8* %1008, align 1
  %1241 = icmp slt i8 %1240, 1
  br i1 %1241, label %1255, label %1242

1242:                                             ; preds = %1237
  %1243 = sext i8 %1240 to i64
  %1244 = add nuw nsw i64 %1243, 4294967295
  %1245 = and i64 %1244, 4294967295
  %1246 = shl i64 1, %1245
  %1247 = add nsw i64 %1246, -1
  %1248 = sub nsw i64 0, %1246
  %1249 = sext i32 %1239 to i64
  %1250 = icmp slt i64 %1249, %1248
  %1251 = icmp slt i64 %1247, %1249
  %1252 = select i1 %1251, i64 %1247, i64 %1249
  %1253 = select i1 %1250, i64 %1248, i64 %1252
  %1254 = trunc i64 %1253 to i32
  br label %1255

1255:                                             ; preds = %1237, %1242
  %1256 = phi i32 [ %1254, %1242 ], [ %1239, %1237 ]
  store i32 %1256, i32* %76, align 4
  %1257 = add nsw i32 %1200, %1199
  %1258 = load i8, i8* %1008, align 1
  %1259 = icmp slt i8 %1258, 1
  br i1 %1259, label %1273, label %1260

1260:                                             ; preds = %1255
  %1261 = sext i8 %1258 to i64
  %1262 = add nuw nsw i64 %1261, 4294967295
  %1263 = and i64 %1262, 4294967295
  %1264 = shl i64 1, %1263
  %1265 = add nsw i64 %1264, -1
  %1266 = sub nsw i64 0, %1264
  %1267 = sext i32 %1257 to i64
  %1268 = icmp slt i64 %1267, %1266
  %1269 = icmp slt i64 %1265, %1267
  %1270 = select i1 %1269, i64 %1265, i64 %1267
  %1271 = select i1 %1268, i64 %1266, i64 %1270
  %1272 = trunc i64 %1271 to i32
  br label %1273

1273:                                             ; preds = %1255, %1260
  %1274 = phi i32 [ %1272, %1260 ], [ %1257, %1255 ]
  store i32 %1274, i32* %79, align 4
  %1275 = load i32, i32* %274, align 16
  %1276 = load i32, i32* %301, align 4
  %1277 = add nsw i32 %1276, %1275
  %1278 = load i8, i8* %1008, align 1
  %1279 = icmp slt i8 %1278, 1
  br i1 %1279, label %1293, label %1280

1280:                                             ; preds = %1273
  %1281 = sext i8 %1278 to i64
  %1282 = add nuw nsw i64 %1281, 4294967295
  %1283 = and i64 %1282, 4294967295
  %1284 = shl i64 1, %1283
  %1285 = add nsw i64 %1284, -1
  %1286 = sub nsw i64 0, %1284
  %1287 = sext i32 %1277 to i64
  %1288 = icmp slt i64 %1287, %1286
  %1289 = icmp slt i64 %1285, %1287
  %1290 = select i1 %1289, i64 %1285, i64 %1287
  %1291 = select i1 %1288, i64 %1286, i64 %1290
  %1292 = trunc i64 %1291 to i32
  br label %1293

1293:                                             ; preds = %1273, %1280
  %1294 = phi i32 [ %1292, %1280 ], [ %1277, %1273 ]
  store i32 %1294, i32* %82, align 4
  %1295 = load i32, i32* %283, align 4
  %1296 = load i32, i32* %292, align 8
  %1297 = add nsw i32 %1296, %1295
  %1298 = load i8, i8* %1008, align 1
  %1299 = icmp slt i8 %1298, 1
  br i1 %1299, label %1313, label %1300

1300:                                             ; preds = %1293
  %1301 = sext i8 %1298 to i64
  %1302 = add nuw nsw i64 %1301, 4294967295
  %1303 = and i64 %1302, 4294967295
  %1304 = shl i64 1, %1303
  %1305 = add nsw i64 %1304, -1
  %1306 = sub nsw i64 0, %1304
  %1307 = sext i32 %1297 to i64
  %1308 = icmp slt i64 %1307, %1306
  %1309 = icmp slt i64 %1305, %1307
  %1310 = select i1 %1309, i64 %1305, i64 %1307
  %1311 = select i1 %1308, i64 %1306, i64 %1310
  %1312 = trunc i64 %1311 to i32
  br label %1313

1313:                                             ; preds = %1293, %1300
  %1314 = phi i32 [ %1312, %1300 ], [ %1297, %1293 ]
  store i32 %1314, i32* %85, align 4
  %1315 = sub nsw i32 %1295, %1296
  %1316 = load i8, i8* %1008, align 1
  %1317 = icmp slt i8 %1316, 1
  br i1 %1317, label %1331, label %1318

1318:                                             ; preds = %1313
  %1319 = sext i8 %1316 to i64
  %1320 = add nuw nsw i64 %1319, 4294967295
  %1321 = and i64 %1320, 4294967295
  %1322 = shl i64 1, %1321
  %1323 = add nsw i64 %1322, -1
  %1324 = sub nsw i64 0, %1322
  %1325 = sext i32 %1315 to i64
  %1326 = icmp slt i64 %1325, %1324
  %1327 = icmp slt i64 %1323, %1325
  %1328 = select i1 %1327, i64 %1323, i64 %1325
  %1329 = select i1 %1326, i64 %1324, i64 %1328
  %1330 = trunc i64 %1329 to i32
  br label %1331

1331:                                             ; preds = %1313, %1318
  %1332 = phi i32 [ %1330, %1318 ], [ %1315, %1313 ]
  store i32 %1332, i32* %88, align 4
  %1333 = sub nsw i32 %1275, %1276
  %1334 = load i8, i8* %1008, align 1
  %1335 = icmp slt i8 %1334, 1
  br i1 %1335, label %1349, label %1336

1336:                                             ; preds = %1331
  %1337 = sext i8 %1334 to i64
  %1338 = add nuw nsw i64 %1337, 4294967295
  %1339 = and i64 %1338, 4294967295
  %1340 = shl i64 1, %1339
  %1341 = add nsw i64 %1340, -1
  %1342 = sub nsw i64 0, %1340
  %1343 = sext i32 %1333 to i64
  %1344 = icmp slt i64 %1343, %1342
  %1345 = icmp slt i64 %1341, %1343
  %1346 = select i1 %1345, i64 %1341, i64 %1343
  %1347 = select i1 %1344, i64 %1342, i64 %1346
  %1348 = trunc i64 %1347 to i32
  br label %1349

1349:                                             ; preds = %1331, %1336
  %1350 = phi i32 [ %1348, %1336 ], [ %1333, %1331 ]
  store i32 %1350, i32* %91, align 4
  %1351 = load i32, i32* %310, align 16
  %1352 = load i32, i32* %337, align 4
  %1353 = sub i32 %1352, %1351
  %1354 = load i8, i8* %1008, align 1
  %1355 = icmp slt i8 %1354, 1
  br i1 %1355, label %1369, label %1356

1356:                                             ; preds = %1349
  %1357 = sext i8 %1354 to i64
  %1358 = add nuw nsw i64 %1357, 4294967295
  %1359 = and i64 %1358, 4294967295
  %1360 = shl i64 1, %1359
  %1361 = add nsw i64 %1360, -1
  %1362 = sub nsw i64 0, %1360
  %1363 = sext i32 %1353 to i64
  %1364 = icmp slt i64 %1363, %1362
  %1365 = icmp slt i64 %1361, %1363
  %1366 = select i1 %1365, i64 %1361, i64 %1363
  %1367 = select i1 %1364, i64 %1362, i64 %1366
  %1368 = trunc i64 %1367 to i32
  br label %1369

1369:                                             ; preds = %1349, %1356
  %1370 = phi i32 [ %1368, %1356 ], [ %1353, %1349 ]
  store i32 %1370, i32* %94, align 4
  %1371 = load i32, i32* %319, align 4
  %1372 = load i32, i32* %328, align 8
  %1373 = sub i32 %1372, %1371
  %1374 = load i8, i8* %1008, align 1
  %1375 = icmp slt i8 %1374, 1
  br i1 %1375, label %1389, label %1376

1376:                                             ; preds = %1369
  %1377 = sext i8 %1374 to i64
  %1378 = add nuw nsw i64 %1377, 4294967295
  %1379 = and i64 %1378, 4294967295
  %1380 = shl i64 1, %1379
  %1381 = add nsw i64 %1380, -1
  %1382 = sub nsw i64 0, %1380
  %1383 = sext i32 %1373 to i64
  %1384 = icmp slt i64 %1383, %1382
  %1385 = icmp slt i64 %1381, %1383
  %1386 = select i1 %1385, i64 %1381, i64 %1383
  %1387 = select i1 %1384, i64 %1382, i64 %1386
  %1388 = trunc i64 %1387 to i32
  br label %1389

1389:                                             ; preds = %1369, %1376
  %1390 = phi i32 [ %1388, %1376 ], [ %1373, %1369 ]
  store i32 %1390, i32* %97, align 4
  %1391 = add nsw i32 %1372, %1371
  %1392 = load i8, i8* %1008, align 1
  %1393 = icmp slt i8 %1392, 1
  br i1 %1393, label %1407, label %1394

1394:                                             ; preds = %1389
  %1395 = sext i8 %1392 to i64
  %1396 = add nuw nsw i64 %1395, 4294967295
  %1397 = and i64 %1396, 4294967295
  %1398 = shl i64 1, %1397
  %1399 = add nsw i64 %1398, -1
  %1400 = sub nsw i64 0, %1398
  %1401 = sext i32 %1391 to i64
  %1402 = icmp slt i64 %1401, %1400
  %1403 = icmp slt i64 %1399, %1401
  %1404 = select i1 %1403, i64 %1399, i64 %1401
  %1405 = select i1 %1402, i64 %1400, i64 %1404
  %1406 = trunc i64 %1405 to i32
  br label %1407

1407:                                             ; preds = %1389, %1394
  %1408 = phi i32 [ %1406, %1394 ], [ %1391, %1389 ]
  store i32 %1408, i32* %100, align 4
  %1409 = add nsw i32 %1352, %1351
  %1410 = load i8, i8* %1008, align 1
  %1411 = icmp slt i8 %1410, 1
  br i1 %1411, label %1425, label %1412

1412:                                             ; preds = %1407
  %1413 = sext i8 %1410 to i64
  %1414 = add nuw nsw i64 %1413, 4294967295
  %1415 = and i64 %1414, 4294967295
  %1416 = shl i64 1, %1415
  %1417 = add nsw i64 %1416, -1
  %1418 = sub nsw i64 0, %1416
  %1419 = sext i32 %1409 to i64
  %1420 = icmp slt i64 %1419, %1418
  %1421 = icmp slt i64 %1417, %1419
  %1422 = select i1 %1421, i64 %1417, i64 %1419
  %1423 = select i1 %1420, i64 %1418, i64 %1422
  %1424 = trunc i64 %1423 to i32
  br label %1425

1425:                                             ; preds = %1407, %1412
  %1426 = phi i32 [ %1424, %1412 ], [ %1409, %1407 ]
  store i32 %1426, i32* %103, align 4
  %1427 = load i8, i8* %1008, align 1
  call void @av1_range_check_buf(i32 5, i32* %0, i32* %1, i32 32, i8 signext %1427) #4
  %1428 = load i32, i32* %1, align 4
  %1429 = load i32, i32* %19, align 4
  %1430 = add nsw i32 %1429, %1428
  %1431 = getelementptr inbounds i8, i8* %3, i64 6
  %1432 = load i8, i8* %1431, align 1
  %1433 = icmp slt i8 %1432, 1
  br i1 %1433, label %1434, label %1440

1434:                                             ; preds = %1425
  store i32 %1430, i32* %106, align 16
  %1435 = load i32, i32* %13, align 4
  %1436 = load i32, i32* %16, align 4
  %1437 = add nsw i32 %1436, %1435
  store i32 %1437, i32* %107, align 4
  %1438 = sub nsw i32 %1435, %1436
  store i32 %1438, i32* %108, align 8
  %1439 = sub nsw i32 %1428, %1429
  br label %1476

1440:                                             ; preds = %1425
  %1441 = sext i8 %1432 to i64
  %1442 = add nuw nsw i64 %1441, 4294967295
  %1443 = and i64 %1442, 4294967295
  %1444 = shl i64 1, %1443
  %1445 = add nsw i64 %1444, -1
  %1446 = sub nsw i64 0, %1444
  %1447 = sext i32 %1430 to i64
  %1448 = icmp slt i64 %1447, %1446
  %1449 = icmp slt i64 %1445, %1447
  %1450 = select i1 %1449, i64 %1445, i64 %1447
  %1451 = select i1 %1448, i64 %1446, i64 %1450
  %1452 = trunc i64 %1451 to i32
  store i32 %1452, i32* %106, align 16
  %1453 = load i32, i32* %13, align 4
  %1454 = load i32, i32* %16, align 4
  %1455 = add nsw i32 %1454, %1453
  %1456 = sext i32 %1455 to i64
  %1457 = icmp slt i64 %1456, %1446
  %1458 = icmp slt i64 %1445, %1456
  %1459 = select i1 %1458, i64 %1445, i64 %1456
  %1460 = select i1 %1457, i64 %1446, i64 %1459
  %1461 = trunc i64 %1460 to i32
  store i32 %1461, i32* %107, align 4
  %1462 = sub nsw i32 %1453, %1454
  %1463 = sext i32 %1462 to i64
  %1464 = icmp slt i64 %1463, %1446
  %1465 = icmp slt i64 %1445, %1463
  %1466 = select i1 %1465, i64 %1445, i64 %1463
  %1467 = select i1 %1464, i64 %1446, i64 %1466
  %1468 = trunc i64 %1467 to i32
  store i32 %1468, i32* %108, align 8
  %1469 = sub nsw i32 %1428, %1429
  %1470 = sext i32 %1469 to i64
  %1471 = icmp slt i64 %1470, %1446
  %1472 = icmp slt i64 %1445, %1470
  %1473 = select i1 %1472, i64 %1445, i64 %1470
  %1474 = select i1 %1471, i64 %1446, i64 %1473
  %1475 = trunc i64 %1474 to i32
  br label %1476

1476:                                             ; preds = %1434, %1440
  %1477 = phi i32 [ %1475, %1440 ], [ %1439, %1434 ]
  store i32 %1477, i32* %111, align 4
  %1478 = load i32, i32* %22, align 4
  store i32 %1478, i32* %113, align 16
  %1479 = load i32, i32* %25, align 4
  %1480 = load i32, i32* %28, align 4
  %1481 = mul nsw i32 %1479, %976
  %1482 = sext i32 %1481 to i64
  %1483 = mul nsw i32 %1480, %965
  %1484 = sext i32 %1483 to i64
  %1485 = add i64 %147, %1484
  %1486 = add i64 %1485, %1482
  %1487 = ashr i64 %1486, %150
  %1488 = trunc i64 %1487 to i32
  store i32 %1488, i32* %114, align 4
  %1489 = mul nsw i32 %1479, %965
  %1490 = sext i32 %1489 to i64
  %1491 = add i64 %1485, %1490
  %1492 = ashr i64 %1491, %150
  %1493 = trunc i64 %1492 to i32
  store i32 %1493, i32* %115, align 8
  %1494 = load i32, i32* %31, align 4
  store i32 %1494, i32* %118, align 4
  %1495 = load i32, i32* %34, align 4
  %1496 = load i32, i32* %43, align 4
  %1497 = add nsw i32 %1496, %1495
  br i1 %1433, label %1498, label %1512

1498:                                             ; preds = %1476
  store i32 %1497, i32* %120, align 16
  %1499 = load i32, i32* %37, align 4
  %1500 = load i32, i32* %40, align 4
  %1501 = add nsw i32 %1500, %1499
  store i32 %1501, i32* %121, align 4
  %1502 = sub nsw i32 %1499, %1500
  store i32 %1502, i32* %122, align 8
  %1503 = sub nsw i32 %1495, %1496
  store i32 %1503, i32* %125, align 4
  %1504 = load i32, i32* %46, align 4
  %1505 = load i32, i32* %55, align 4
  %1506 = sub i32 %1505, %1504
  store i32 %1506, i32* %127, align 16
  %1507 = load i32, i32* %49, align 4
  %1508 = load i32, i32* %52, align 4
  %1509 = sub i32 %1508, %1507
  store i32 %1509, i32* %128, align 4
  %1510 = add nsw i32 %1508, %1507
  store i32 %1510, i32* %129, align 8
  %1511 = add nsw i32 %1505, %1504
  br label %1580

1512:                                             ; preds = %1476
  %1513 = sext i8 %1432 to i64
  %1514 = add nuw nsw i64 %1513, 4294967295
  %1515 = and i64 %1514, 4294967295
  %1516 = shl i64 1, %1515
  %1517 = add nsw i64 %1516, -1
  %1518 = sub nsw i64 0, %1516
  %1519 = sext i32 %1497 to i64
  %1520 = icmp slt i64 %1519, %1518
  %1521 = icmp slt i64 %1517, %1519
  %1522 = select i1 %1521, i64 %1517, i64 %1519
  %1523 = select i1 %1520, i64 %1518, i64 %1522
  %1524 = trunc i64 %1523 to i32
  store i32 %1524, i32* %120, align 16
  %1525 = load i32, i32* %37, align 4
  %1526 = load i32, i32* %40, align 4
  %1527 = add nsw i32 %1526, %1525
  %1528 = sext i32 %1527 to i64
  %1529 = icmp slt i64 %1528, %1518
  %1530 = icmp slt i64 %1517, %1528
  %1531 = select i1 %1530, i64 %1517, i64 %1528
  %1532 = select i1 %1529, i64 %1518, i64 %1531
  %1533 = trunc i64 %1532 to i32
  store i32 %1533, i32* %121, align 4
  %1534 = sub nsw i32 %1525, %1526
  %1535 = sext i32 %1534 to i64
  %1536 = icmp slt i64 %1535, %1518
  %1537 = icmp slt i64 %1517, %1535
  %1538 = select i1 %1537, i64 %1517, i64 %1535
  %1539 = select i1 %1536, i64 %1518, i64 %1538
  %1540 = trunc i64 %1539 to i32
  store i32 %1540, i32* %122, align 8
  %1541 = sub nsw i32 %1495, %1496
  %1542 = sext i32 %1541 to i64
  %1543 = icmp slt i64 %1542, %1518
  %1544 = icmp slt i64 %1517, %1542
  %1545 = select i1 %1544, i64 %1517, i64 %1542
  %1546 = select i1 %1543, i64 %1518, i64 %1545
  %1547 = trunc i64 %1546 to i32
  store i32 %1547, i32* %125, align 4
  %1548 = load i32, i32* %46, align 4
  %1549 = load i32, i32* %55, align 4
  %1550 = sub i32 %1549, %1548
  %1551 = sext i32 %1550 to i64
  %1552 = icmp slt i64 %1551, %1518
  %1553 = icmp slt i64 %1517, %1551
  %1554 = select i1 %1553, i64 %1517, i64 %1551
  %1555 = select i1 %1552, i64 %1518, i64 %1554
  %1556 = trunc i64 %1555 to i32
  store i32 %1556, i32* %127, align 16
  %1557 = load i32, i32* %49, align 4
  %1558 = load i32, i32* %52, align 4
  %1559 = sub i32 %1558, %1557
  %1560 = sext i32 %1559 to i64
  %1561 = icmp slt i64 %1560, %1518
  %1562 = icmp slt i64 %1517, %1560
  %1563 = select i1 %1562, i64 %1517, i64 %1560
  %1564 = select i1 %1561, i64 %1518, i64 %1563
  %1565 = trunc i64 %1564 to i32
  store i32 %1565, i32* %128, align 4
  %1566 = add nsw i32 %1558, %1557
  %1567 = sext i32 %1566 to i64
  %1568 = icmp slt i64 %1567, %1518
  %1569 = icmp slt i64 %1517, %1567
  %1570 = select i1 %1569, i64 %1517, i64 %1567
  %1571 = select i1 %1568, i64 %1518, i64 %1570
  %1572 = trunc i64 %1571 to i32
  store i32 %1572, i32* %129, align 8
  %1573 = add nsw i32 %1549, %1548
  %1574 = sext i32 %1573 to i64
  %1575 = icmp slt i64 %1574, %1518
  %1576 = icmp slt i64 %1517, %1574
  %1577 = select i1 %1576, i64 %1517, i64 %1574
  %1578 = select i1 %1575, i64 %1518, i64 %1577
  %1579 = trunc i64 %1578 to i32
  br label %1580

1580:                                             ; preds = %1498, %1512
  %1581 = phi i32 [ %1579, %1512 ], [ %1511, %1498 ]
  store i32 %1581, i32* %132, align 4
  %1582 = load i32, i32* %58, align 4
  store i32 %1582, i32* %153, align 16
  %1583 = load i32, i32* %61, align 4
  store i32 %1583, i32* %169, align 4
  %1584 = load i32, i32* %64, align 4
  %1585 = load i32, i32* %97, align 4
  %1586 = mul nsw i32 %1584, %987
  %1587 = sext i32 %1586 to i64
  %1588 = mul nsw i32 %1585, %983
  %1589 = sext i32 %1588 to i64
  %1590 = add i64 %147, %1587
  %1591 = add i64 %1590, %1589
  %1592 = ashr i64 %1591, %150
  %1593 = trunc i64 %1592 to i32
  store i32 %1593, i32* %185, align 8
  %1594 = load i32, i32* %67, align 4
  %1595 = load i32, i32* %94, align 4
  %1596 = mul nsw i32 %1594, %987
  %1597 = sext i32 %1596 to i64
  %1598 = mul nsw i32 %1595, %983
  %1599 = sext i32 %1598 to i64
  %1600 = add i64 %147, %1597
  %1601 = add i64 %1600, %1599
  %1602 = ashr i64 %1601, %150
  %1603 = trunc i64 %1602 to i32
  store i32 %1603, i32* %201, align 4
  %1604 = load i32, i32* %70, align 4
  %1605 = load i32, i32* %91, align 4
  %1606 = mul nsw i32 %1604, %1093
  %1607 = sext i32 %1606 to i64
  %1608 = mul nsw i32 %1605, %987
  %1609 = sext i32 %1608 to i64
  %1610 = add i64 %147, %1607
  %1611 = add i64 %1610, %1609
  %1612 = ashr i64 %1611, %150
  %1613 = trunc i64 %1612 to i32
  store i32 %1613, i32* %217, align 16
  %1614 = load i32, i32* %73, align 4
  %1615 = load i32, i32* %88, align 4
  %1616 = mul nsw i32 %1614, %1093
  %1617 = sext i32 %1616 to i64
  %1618 = mul nsw i32 %1615, %987
  %1619 = sext i32 %1618 to i64
  %1620 = add i64 %147, %1617
  %1621 = add i64 %1620, %1619
  %1622 = ashr i64 %1621, %150
  %1623 = trunc i64 %1622 to i32
  store i32 %1623, i32* %233, align 4
  %1624 = bitcast i32* %76 to <4 x i32>*
  %1625 = load <4 x i32>, <4 x i32>* %1624, align 4
  %1626 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %1625, <4 x i32>* %1626, align 8
  %1627 = mul nsw i32 %1614, %987
  %1628 = sext i32 %1627 to i64
  %1629 = mul nsw i32 %1615, %983
  %1630 = sext i32 %1629 to i64
  %1631 = add i64 %147, %1628
  %1632 = add i64 %1631, %1630
  %1633 = ashr i64 %1632, %150
  %1634 = trunc i64 %1633 to i32
  store i32 %1634, i32* %292, align 8
  %1635 = mul nsw i32 %1604, %987
  %1636 = sext i32 %1635 to i64
  %1637 = mul nsw i32 %1605, %983
  %1638 = sext i32 %1637 to i64
  %1639 = add i64 %147, %1636
  %1640 = add i64 %1639, %1638
  %1641 = ashr i64 %1640, %150
  %1642 = trunc i64 %1641 to i32
  store i32 %1642, i32* %301, align 4
  %1643 = mul nsw i32 %1594, %983
  %1644 = sext i32 %1643 to i64
  %1645 = mul nsw i32 %1595, %986
  %1646 = sext i32 %1645 to i64
  %1647 = add i64 %147, %1644
  %1648 = add i64 %1647, %1646
  %1649 = ashr i64 %1648, %150
  %1650 = trunc i64 %1649 to i32
  store i32 %1650, i32* %310, align 16
  %1651 = mul nsw i32 %1584, %983
  %1652 = sext i32 %1651 to i64
  %1653 = mul nsw i32 %1585, %986
  %1654 = sext i32 %1653 to i64
  %1655 = add i64 %147, %1652
  %1656 = add i64 %1655, %1654
  %1657 = ashr i64 %1656, %150
  %1658 = trunc i64 %1657 to i32
  store i32 %1658, i32* %319, align 4
  %1659 = load i32, i32* %100, align 4
  store i32 %1659, i32* %328, align 8
  %1660 = load i32, i32* %103, align 4
  store i32 %1660, i32* %337, align 4
  call void @av1_range_check_buf(i32 6, i32* %0, i32* nonnull %106, i32 32, i8 signext %1432) #4
  %1661 = load i32, i32* %106, align 16
  %1662 = load i32, i32* %118, align 4
  %1663 = add nsw i32 %1662, %1661
  %1664 = getelementptr inbounds i8, i8* %3, i64 7
  %1665 = load i8, i8* %1664, align 1
  %1666 = icmp slt i8 %1665, 1
  br i1 %1666, label %1680, label %1667

1667:                                             ; preds = %1580
  %1668 = sext i8 %1665 to i64
  %1669 = add nuw nsw i64 %1668, 4294967295
  %1670 = and i64 %1669, 4294967295
  %1671 = shl i64 1, %1670
  %1672 = add nsw i64 %1671, -1
  %1673 = sub nsw i64 0, %1671
  %1674 = sext i32 %1663 to i64
  %1675 = icmp slt i64 %1674, %1673
  %1676 = icmp slt i64 %1672, %1674
  %1677 = select i1 %1676, i64 %1672, i64 %1674
  %1678 = select i1 %1675, i64 %1673, i64 %1677
  %1679 = trunc i64 %1678 to i32
  br label %1680

1680:                                             ; preds = %1580, %1667
  %1681 = phi i32 [ %1679, %1667 ], [ %1663, %1580 ]
  store i32 %1681, i32* %1, align 4
  %1682 = load i32, i32* %107, align 4
  %1683 = load i32, i32* %115, align 8
  %1684 = add nsw i32 %1683, %1682
  %1685 = load i8, i8* %1664, align 1
  %1686 = icmp slt i8 %1685, 1
  br i1 %1686, label %1700, label %1687

1687:                                             ; preds = %1680
  %1688 = sext i8 %1685 to i64
  %1689 = add nuw nsw i64 %1688, 4294967295
  %1690 = and i64 %1689, 4294967295
  %1691 = shl i64 1, %1690
  %1692 = add nsw i64 %1691, -1
  %1693 = sub nsw i64 0, %1691
  %1694 = sext i32 %1684 to i64
  %1695 = icmp slt i64 %1694, %1693
  %1696 = icmp slt i64 %1692, %1694
  %1697 = select i1 %1696, i64 %1692, i64 %1694
  %1698 = select i1 %1695, i64 %1693, i64 %1697
  %1699 = trunc i64 %1698 to i32
  br label %1700

1700:                                             ; preds = %1680, %1687
  %1701 = phi i32 [ %1699, %1687 ], [ %1684, %1680 ]
  store i32 %1701, i32* %13, align 4
  %1702 = load i32, i32* %108, align 8
  %1703 = load i32, i32* %114, align 4
  %1704 = add nsw i32 %1703, %1702
  %1705 = load i8, i8* %1664, align 1
  %1706 = icmp slt i8 %1705, 1
  br i1 %1706, label %1720, label %1707

1707:                                             ; preds = %1700
  %1708 = sext i8 %1705 to i64
  %1709 = add nuw nsw i64 %1708, 4294967295
  %1710 = and i64 %1709, 4294967295
  %1711 = shl i64 1, %1710
  %1712 = add nsw i64 %1711, -1
  %1713 = sub nsw i64 0, %1711
  %1714 = sext i32 %1704 to i64
  %1715 = icmp slt i64 %1714, %1713
  %1716 = icmp slt i64 %1712, %1714
  %1717 = select i1 %1716, i64 %1712, i64 %1714
  %1718 = select i1 %1715, i64 %1713, i64 %1717
  %1719 = trunc i64 %1718 to i32
  br label %1720

1720:                                             ; preds = %1700, %1707
  %1721 = phi i32 [ %1719, %1707 ], [ %1704, %1700 ]
  store i32 %1721, i32* %16, align 4
  %1722 = load i32, i32* %111, align 4
  %1723 = load i32, i32* %113, align 16
  %1724 = add nsw i32 %1723, %1722
  %1725 = load i8, i8* %1664, align 1
  %1726 = icmp slt i8 %1725, 1
  br i1 %1726, label %1740, label %1727

1727:                                             ; preds = %1720
  %1728 = sext i8 %1725 to i64
  %1729 = add nuw nsw i64 %1728, 4294967295
  %1730 = and i64 %1729, 4294967295
  %1731 = shl i64 1, %1730
  %1732 = add nsw i64 %1731, -1
  %1733 = sub nsw i64 0, %1731
  %1734 = sext i32 %1724 to i64
  %1735 = icmp slt i64 %1734, %1733
  %1736 = icmp slt i64 %1732, %1734
  %1737 = select i1 %1736, i64 %1732, i64 %1734
  %1738 = select i1 %1735, i64 %1733, i64 %1737
  %1739 = trunc i64 %1738 to i32
  br label %1740

1740:                                             ; preds = %1720, %1727
  %1741 = phi i32 [ %1739, %1727 ], [ %1724, %1720 ]
  store i32 %1741, i32* %19, align 4
  %1742 = sub nsw i32 %1722, %1723
  %1743 = load i8, i8* %1664, align 1
  %1744 = icmp slt i8 %1743, 1
  br i1 %1744, label %1758, label %1745

1745:                                             ; preds = %1740
  %1746 = sext i8 %1743 to i64
  %1747 = add nuw nsw i64 %1746, 4294967295
  %1748 = and i64 %1747, 4294967295
  %1749 = shl i64 1, %1748
  %1750 = add nsw i64 %1749, -1
  %1751 = sub nsw i64 0, %1749
  %1752 = sext i32 %1742 to i64
  %1753 = icmp slt i64 %1752, %1751
  %1754 = icmp slt i64 %1750, %1752
  %1755 = select i1 %1754, i64 %1750, i64 %1752
  %1756 = select i1 %1753, i64 %1751, i64 %1755
  %1757 = trunc i64 %1756 to i32
  br label %1758

1758:                                             ; preds = %1740, %1745
  %1759 = phi i32 [ %1757, %1745 ], [ %1742, %1740 ]
  store i32 %1759, i32* %22, align 4
  %1760 = sub nsw i32 %1702, %1703
  %1761 = load i8, i8* %1664, align 1
  %1762 = icmp slt i8 %1761, 1
  br i1 %1762, label %1776, label %1763

1763:                                             ; preds = %1758
  %1764 = sext i8 %1761 to i64
  %1765 = add nuw nsw i64 %1764, 4294967295
  %1766 = and i64 %1765, 4294967295
  %1767 = shl i64 1, %1766
  %1768 = add nsw i64 %1767, -1
  %1769 = sub nsw i64 0, %1767
  %1770 = sext i32 %1760 to i64
  %1771 = icmp slt i64 %1770, %1769
  %1772 = icmp slt i64 %1768, %1770
  %1773 = select i1 %1772, i64 %1768, i64 %1770
  %1774 = select i1 %1771, i64 %1769, i64 %1773
  %1775 = trunc i64 %1774 to i32
  br label %1776

1776:                                             ; preds = %1758, %1763
  %1777 = phi i32 [ %1775, %1763 ], [ %1760, %1758 ]
  store i32 %1777, i32* %25, align 4
  %1778 = sub nsw i32 %1682, %1683
  %1779 = load i8, i8* %1664, align 1
  %1780 = icmp slt i8 %1779, 1
  br i1 %1780, label %1794, label %1781

1781:                                             ; preds = %1776
  %1782 = sext i8 %1779 to i64
  %1783 = add nuw nsw i64 %1782, 4294967295
  %1784 = and i64 %1783, 4294967295
  %1785 = shl i64 1, %1784
  %1786 = add nsw i64 %1785, -1
  %1787 = sub nsw i64 0, %1785
  %1788 = sext i32 %1778 to i64
  %1789 = icmp slt i64 %1788, %1787
  %1790 = icmp slt i64 %1786, %1788
  %1791 = select i1 %1790, i64 %1786, i64 %1788
  %1792 = select i1 %1789, i64 %1787, i64 %1791
  %1793 = trunc i64 %1792 to i32
  br label %1794

1794:                                             ; preds = %1776, %1781
  %1795 = phi i32 [ %1793, %1781 ], [ %1778, %1776 ]
  store i32 %1795, i32* %28, align 4
  %1796 = sub nsw i32 %1661, %1662
  %1797 = load i8, i8* %1664, align 1
  %1798 = icmp slt i8 %1797, 1
  br i1 %1798, label %1812, label %1799

1799:                                             ; preds = %1794
  %1800 = sext i8 %1797 to i64
  %1801 = add nuw nsw i64 %1800, 4294967295
  %1802 = and i64 %1801, 4294967295
  %1803 = shl i64 1, %1802
  %1804 = add nsw i64 %1803, -1
  %1805 = sub nsw i64 0, %1803
  %1806 = sext i32 %1796 to i64
  %1807 = icmp slt i64 %1806, %1805
  %1808 = icmp slt i64 %1804, %1806
  %1809 = select i1 %1808, i64 %1804, i64 %1806
  %1810 = select i1 %1807, i64 %1805, i64 %1809
  %1811 = trunc i64 %1810 to i32
  br label %1812

1812:                                             ; preds = %1794, %1799
  %1813 = phi i32 [ %1811, %1799 ], [ %1796, %1794 ]
  store i32 %1813, i32* %31, align 4
  %1814 = load i32, i32* %120, align 16
  store i32 %1814, i32* %34, align 4
  %1815 = load i32, i32* %121, align 4
  store i32 %1815, i32* %37, align 4
  %1816 = load i32, i32* %122, align 8
  %1817 = load i32, i32* %128, align 4
  %1818 = mul nsw i32 %1816, %976
  %1819 = sext i32 %1818 to i64
  %1820 = mul nsw i32 %1817, %965
  %1821 = sext i32 %1820 to i64
  %1822 = add i64 %147, %1821
  %1823 = add i64 %1822, %1819
  %1824 = ashr i64 %1823, %150
  %1825 = trunc i64 %1824 to i32
  store i32 %1825, i32* %40, align 4
  %1826 = load i32, i32* %125, align 4
  %1827 = load i32, i32* %127, align 16
  %1828 = mul nsw i32 %1826, %976
  %1829 = sext i32 %1828 to i64
  %1830 = mul nsw i32 %1827, %965
  %1831 = sext i32 %1830 to i64
  %1832 = add i64 %147, %1831
  %1833 = add i64 %1832, %1829
  %1834 = ashr i64 %1833, %150
  %1835 = trunc i64 %1834 to i32
  store i32 %1835, i32* %43, align 4
  %1836 = mul nsw i32 %1826, %965
  %1837 = sext i32 %1836 to i64
  %1838 = add i64 %1832, %1837
  %1839 = ashr i64 %1838, %150
  %1840 = trunc i64 %1839 to i32
  store i32 %1840, i32* %46, align 4
  %1841 = mul nsw i32 %1816, %965
  %1842 = sext i32 %1841 to i64
  %1843 = add i64 %1822, %1842
  %1844 = ashr i64 %1843, %150
  %1845 = trunc i64 %1844 to i32
  store i32 %1845, i32* %49, align 4
  %1846 = load i32, i32* %129, align 8
  store i32 %1846, i32* %52, align 4
  %1847 = load i32, i32* %132, align 4
  store i32 %1847, i32* %55, align 4
  %1848 = load i32, i32* %153, align 16
  %1849 = load i32, i32* %265, align 4
  %1850 = add nsw i32 %1849, %1848
  %1851 = load i8, i8* %1664, align 1
  %1852 = icmp slt i8 %1851, 1
  br i1 %1852, label %1866, label %1853

1853:                                             ; preds = %1812
  %1854 = sext i8 %1851 to i64
  %1855 = add nuw nsw i64 %1854, 4294967295
  %1856 = and i64 %1855, 4294967295
  %1857 = shl i64 1, %1856
  %1858 = add nsw i64 %1857, -1
  %1859 = sub nsw i64 0, %1857
  %1860 = sext i32 %1850 to i64
  %1861 = icmp slt i64 %1860, %1859
  %1862 = icmp slt i64 %1858, %1860
  %1863 = select i1 %1862, i64 %1858, i64 %1860
  %1864 = select i1 %1861, i64 %1859, i64 %1863
  %1865 = trunc i64 %1864 to i32
  br label %1866

1866:                                             ; preds = %1812, %1853
  %1867 = phi i32 [ %1865, %1853 ], [ %1850, %1812 ]
  store i32 %1867, i32* %58, align 4
  %1868 = load i32, i32* %169, align 4
  %1869 = load i32, i32* %249, align 8
  %1870 = add nsw i32 %1869, %1868
  %1871 = load i8, i8* %1664, align 1
  %1872 = icmp slt i8 %1871, 1
  br i1 %1872, label %1886, label %1873

1873:                                             ; preds = %1866
  %1874 = sext i8 %1871 to i64
  %1875 = add nuw nsw i64 %1874, 4294967295
  %1876 = and i64 %1875, 4294967295
  %1877 = shl i64 1, %1876
  %1878 = add nsw i64 %1877, -1
  %1879 = sub nsw i64 0, %1877
  %1880 = sext i32 %1870 to i64
  %1881 = icmp slt i64 %1880, %1879
  %1882 = icmp slt i64 %1878, %1880
  %1883 = select i1 %1882, i64 %1878, i64 %1880
  %1884 = select i1 %1881, i64 %1879, i64 %1883
  %1885 = trunc i64 %1884 to i32
  br label %1886

1886:                                             ; preds = %1866, %1873
  %1887 = phi i32 [ %1885, %1873 ], [ %1870, %1866 ]
  store i32 %1887, i32* %61, align 4
  %1888 = load i32, i32* %185, align 8
  %1889 = load i32, i32* %233, align 4
  %1890 = add nsw i32 %1889, %1888
  %1891 = load i8, i8* %1664, align 1
  %1892 = icmp slt i8 %1891, 1
  br i1 %1892, label %1906, label %1893

1893:                                             ; preds = %1886
  %1894 = sext i8 %1891 to i64
  %1895 = add nuw nsw i64 %1894, 4294967295
  %1896 = and i64 %1895, 4294967295
  %1897 = shl i64 1, %1896
  %1898 = add nsw i64 %1897, -1
  %1899 = sub nsw i64 0, %1897
  %1900 = sext i32 %1890 to i64
  %1901 = icmp slt i64 %1900, %1899
  %1902 = icmp slt i64 %1898, %1900
  %1903 = select i1 %1902, i64 %1898, i64 %1900
  %1904 = select i1 %1901, i64 %1899, i64 %1903
  %1905 = trunc i64 %1904 to i32
  br label %1906

1906:                                             ; preds = %1886, %1893
  %1907 = phi i32 [ %1905, %1893 ], [ %1890, %1886 ]
  store i32 %1907, i32* %64, align 4
  %1908 = load i32, i32* %201, align 4
  %1909 = load i32, i32* %217, align 16
  %1910 = add nsw i32 %1909, %1908
  %1911 = load i8, i8* %1664, align 1
  %1912 = icmp slt i8 %1911, 1
  br i1 %1912, label %1926, label %1913

1913:                                             ; preds = %1906
  %1914 = sext i8 %1911 to i64
  %1915 = add nuw nsw i64 %1914, 4294967295
  %1916 = and i64 %1915, 4294967295
  %1917 = shl i64 1, %1916
  %1918 = add nsw i64 %1917, -1
  %1919 = sub nsw i64 0, %1917
  %1920 = sext i32 %1910 to i64
  %1921 = icmp slt i64 %1920, %1919
  %1922 = icmp slt i64 %1918, %1920
  %1923 = select i1 %1922, i64 %1918, i64 %1920
  %1924 = select i1 %1921, i64 %1919, i64 %1923
  %1925 = trunc i64 %1924 to i32
  br label %1926

1926:                                             ; preds = %1906, %1913
  %1927 = phi i32 [ %1925, %1913 ], [ %1910, %1906 ]
  store i32 %1927, i32* %67, align 4
  %1928 = sub nsw i32 %1908, %1909
  %1929 = load i8, i8* %1664, align 1
  %1930 = icmp slt i8 %1929, 1
  br i1 %1930, label %1944, label %1931

1931:                                             ; preds = %1926
  %1932 = sext i8 %1929 to i64
  %1933 = add nuw nsw i64 %1932, 4294967295
  %1934 = and i64 %1933, 4294967295
  %1935 = shl i64 1, %1934
  %1936 = add nsw i64 %1935, -1
  %1937 = sub nsw i64 0, %1935
  %1938 = sext i32 %1928 to i64
  %1939 = icmp slt i64 %1938, %1937
  %1940 = icmp slt i64 %1936, %1938
  %1941 = select i1 %1940, i64 %1936, i64 %1938
  %1942 = select i1 %1939, i64 %1937, i64 %1941
  %1943 = trunc i64 %1942 to i32
  br label %1944

1944:                                             ; preds = %1926, %1931
  %1945 = phi i32 [ %1943, %1931 ], [ %1928, %1926 ]
  store i32 %1945, i32* %70, align 4
  %1946 = sub nsw i32 %1888, %1889
  %1947 = load i8, i8* %1664, align 1
  %1948 = icmp slt i8 %1947, 1
  br i1 %1948, label %1962, label %1949

1949:                                             ; preds = %1944
  %1950 = sext i8 %1947 to i64
  %1951 = add nuw nsw i64 %1950, 4294967295
  %1952 = and i64 %1951, 4294967295
  %1953 = shl i64 1, %1952
  %1954 = add nsw i64 %1953, -1
  %1955 = sub nsw i64 0, %1953
  %1956 = sext i32 %1946 to i64
  %1957 = icmp slt i64 %1956, %1955
  %1958 = icmp slt i64 %1954, %1956
  %1959 = select i1 %1958, i64 %1954, i64 %1956
  %1960 = select i1 %1957, i64 %1955, i64 %1959
  %1961 = trunc i64 %1960 to i32
  br label %1962

1962:                                             ; preds = %1944, %1949
  %1963 = phi i32 [ %1961, %1949 ], [ %1946, %1944 ]
  store i32 %1963, i32* %73, align 4
  %1964 = sub nsw i32 %1868, %1869
  %1965 = load i8, i8* %1664, align 1
  %1966 = icmp slt i8 %1965, 1
  br i1 %1966, label %1980, label %1967

1967:                                             ; preds = %1962
  %1968 = sext i8 %1965 to i64
  %1969 = add nuw nsw i64 %1968, 4294967295
  %1970 = and i64 %1969, 4294967295
  %1971 = shl i64 1, %1970
  %1972 = add nsw i64 %1971, -1
  %1973 = sub nsw i64 0, %1971
  %1974 = sext i32 %1964 to i64
  %1975 = icmp slt i64 %1974, %1973
  %1976 = icmp slt i64 %1972, %1974
  %1977 = select i1 %1976, i64 %1972, i64 %1974
  %1978 = select i1 %1975, i64 %1973, i64 %1977
  %1979 = trunc i64 %1978 to i32
  br label %1980

1980:                                             ; preds = %1962, %1967
  %1981 = phi i32 [ %1979, %1967 ], [ %1964, %1962 ]
  store i32 %1981, i32* %76, align 4
  %1982 = sub nsw i32 %1848, %1849
  %1983 = load i8, i8* %1664, align 1
  %1984 = icmp slt i8 %1983, 1
  br i1 %1984, label %1998, label %1985

1985:                                             ; preds = %1980
  %1986 = sext i8 %1983 to i64
  %1987 = add nuw nsw i64 %1986, 4294967295
  %1988 = and i64 %1987, 4294967295
  %1989 = shl i64 1, %1988
  %1990 = add nsw i64 %1989, -1
  %1991 = sub nsw i64 0, %1989
  %1992 = sext i32 %1982 to i64
  %1993 = icmp slt i64 %1992, %1991
  %1994 = icmp slt i64 %1990, %1992
  %1995 = select i1 %1994, i64 %1990, i64 %1992
  %1996 = select i1 %1993, i64 %1991, i64 %1995
  %1997 = trunc i64 %1996 to i32
  br label %1998

1998:                                             ; preds = %1980, %1985
  %1999 = phi i32 [ %1997, %1985 ], [ %1982, %1980 ]
  store i32 %1999, i32* %79, align 4
  %2000 = load i32, i32* %274, align 16
  %2001 = load i32, i32* %337, align 4
  %2002 = sub i32 %2001, %2000
  %2003 = load i8, i8* %1664, align 1
  %2004 = icmp slt i8 %2003, 1
  br i1 %2004, label %2018, label %2005

2005:                                             ; preds = %1998
  %2006 = sext i8 %2003 to i64
  %2007 = add nuw nsw i64 %2006, 4294967295
  %2008 = and i64 %2007, 4294967295
  %2009 = shl i64 1, %2008
  %2010 = add nsw i64 %2009, -1
  %2011 = sub nsw i64 0, %2009
  %2012 = sext i32 %2002 to i64
  %2013 = icmp slt i64 %2012, %2011
  %2014 = icmp slt i64 %2010, %2012
  %2015 = select i1 %2014, i64 %2010, i64 %2012
  %2016 = select i1 %2013, i64 %2011, i64 %2015
  %2017 = trunc i64 %2016 to i32
  br label %2018

2018:                                             ; preds = %1998, %2005
  %2019 = phi i32 [ %2017, %2005 ], [ %2002, %1998 ]
  store i32 %2019, i32* %82, align 4
  %2020 = load i32, i32* %283, align 4
  %2021 = load i32, i32* %328, align 8
  %2022 = sub i32 %2021, %2020
  %2023 = load i8, i8* %1664, align 1
  %2024 = icmp slt i8 %2023, 1
  br i1 %2024, label %2038, label %2025

2025:                                             ; preds = %2018
  %2026 = sext i8 %2023 to i64
  %2027 = add nuw nsw i64 %2026, 4294967295
  %2028 = and i64 %2027, 4294967295
  %2029 = shl i64 1, %2028
  %2030 = add nsw i64 %2029, -1
  %2031 = sub nsw i64 0, %2029
  %2032 = sext i32 %2022 to i64
  %2033 = icmp slt i64 %2032, %2031
  %2034 = icmp slt i64 %2030, %2032
  %2035 = select i1 %2034, i64 %2030, i64 %2032
  %2036 = select i1 %2033, i64 %2031, i64 %2035
  %2037 = trunc i64 %2036 to i32
  br label %2038

2038:                                             ; preds = %2018, %2025
  %2039 = phi i32 [ %2037, %2025 ], [ %2022, %2018 ]
  store i32 %2039, i32* %85, align 4
  %2040 = load i32, i32* %292, align 8
  %2041 = load i32, i32* %319, align 4
  %2042 = sub i32 %2041, %2040
  %2043 = load i8, i8* %1664, align 1
  %2044 = icmp slt i8 %2043, 1
  br i1 %2044, label %2058, label %2045

2045:                                             ; preds = %2038
  %2046 = sext i8 %2043 to i64
  %2047 = add nuw nsw i64 %2046, 4294967295
  %2048 = and i64 %2047, 4294967295
  %2049 = shl i64 1, %2048
  %2050 = add nsw i64 %2049, -1
  %2051 = sub nsw i64 0, %2049
  %2052 = sext i32 %2042 to i64
  %2053 = icmp slt i64 %2052, %2051
  %2054 = icmp slt i64 %2050, %2052
  %2055 = select i1 %2054, i64 %2050, i64 %2052
  %2056 = select i1 %2053, i64 %2051, i64 %2055
  %2057 = trunc i64 %2056 to i32
  br label %2058

2058:                                             ; preds = %2038, %2045
  %2059 = phi i32 [ %2057, %2045 ], [ %2042, %2038 ]
  store i32 %2059, i32* %88, align 4
  %2060 = load i32, i32* %301, align 4
  %2061 = load i32, i32* %310, align 16
  %2062 = sub i32 %2061, %2060
  %2063 = load i8, i8* %1664, align 1
  %2064 = icmp slt i8 %2063, 1
  br i1 %2064, label %2078, label %2065

2065:                                             ; preds = %2058
  %2066 = sext i8 %2063 to i64
  %2067 = add nuw nsw i64 %2066, 4294967295
  %2068 = and i64 %2067, 4294967295
  %2069 = shl i64 1, %2068
  %2070 = add nsw i64 %2069, -1
  %2071 = sub nsw i64 0, %2069
  %2072 = sext i32 %2062 to i64
  %2073 = icmp slt i64 %2072, %2071
  %2074 = icmp slt i64 %2070, %2072
  %2075 = select i1 %2074, i64 %2070, i64 %2072
  %2076 = select i1 %2073, i64 %2071, i64 %2075
  %2077 = trunc i64 %2076 to i32
  br label %2078

2078:                                             ; preds = %2058, %2065
  %2079 = phi i32 [ %2077, %2065 ], [ %2062, %2058 ]
  store i32 %2079, i32* %91, align 4
  %2080 = add nsw i32 %2061, %2060
  %2081 = load i8, i8* %1664, align 1
  %2082 = icmp slt i8 %2081, 1
  br i1 %2082, label %2096, label %2083

2083:                                             ; preds = %2078
  %2084 = sext i8 %2081 to i64
  %2085 = add nuw nsw i64 %2084, 4294967295
  %2086 = and i64 %2085, 4294967295
  %2087 = shl i64 1, %2086
  %2088 = add nsw i64 %2087, -1
  %2089 = sub nsw i64 0, %2087
  %2090 = sext i32 %2080 to i64
  %2091 = icmp slt i64 %2090, %2089
  %2092 = icmp slt i64 %2088, %2090
  %2093 = select i1 %2092, i64 %2088, i64 %2090
  %2094 = select i1 %2091, i64 %2089, i64 %2093
  %2095 = trunc i64 %2094 to i32
  br label %2096

2096:                                             ; preds = %2078, %2083
  %2097 = phi i32 [ %2095, %2083 ], [ %2080, %2078 ]
  store i32 %2097, i32* %94, align 4
  %2098 = add nsw i32 %2041, %2040
  %2099 = load i8, i8* %1664, align 1
  %2100 = icmp slt i8 %2099, 1
  br i1 %2100, label %2114, label %2101

2101:                                             ; preds = %2096
  %2102 = sext i8 %2099 to i64
  %2103 = add nuw nsw i64 %2102, 4294967295
  %2104 = and i64 %2103, 4294967295
  %2105 = shl i64 1, %2104
  %2106 = add nsw i64 %2105, -1
  %2107 = sub nsw i64 0, %2105
  %2108 = sext i32 %2098 to i64
  %2109 = icmp slt i64 %2108, %2107
  %2110 = icmp slt i64 %2106, %2108
  %2111 = select i1 %2110, i64 %2106, i64 %2108
  %2112 = select i1 %2109, i64 %2107, i64 %2111
  %2113 = trunc i64 %2112 to i32
  br label %2114

2114:                                             ; preds = %2096, %2101
  %2115 = phi i32 [ %2113, %2101 ], [ %2098, %2096 ]
  store i32 %2115, i32* %97, align 4
  %2116 = add nsw i32 %2021, %2020
  %2117 = load i8, i8* %1664, align 1
  %2118 = icmp slt i8 %2117, 1
  br i1 %2118, label %2132, label %2119

2119:                                             ; preds = %2114
  %2120 = sext i8 %2117 to i64
  %2121 = add nuw nsw i64 %2120, 4294967295
  %2122 = and i64 %2121, 4294967295
  %2123 = shl i64 1, %2122
  %2124 = add nsw i64 %2123, -1
  %2125 = sub nsw i64 0, %2123
  %2126 = sext i32 %2116 to i64
  %2127 = icmp slt i64 %2126, %2125
  %2128 = icmp slt i64 %2124, %2126
  %2129 = select i1 %2128, i64 %2124, i64 %2126
  %2130 = select i1 %2127, i64 %2125, i64 %2129
  %2131 = trunc i64 %2130 to i32
  br label %2132

2132:                                             ; preds = %2114, %2119
  %2133 = phi i32 [ %2131, %2119 ], [ %2116, %2114 ]
  store i32 %2133, i32* %100, align 4
  %2134 = add nsw i32 %2001, %2000
  %2135 = load i8, i8* %1664, align 1
  %2136 = icmp slt i8 %2135, 1
  br i1 %2136, label %2150, label %2137

2137:                                             ; preds = %2132
  %2138 = sext i8 %2135 to i64
  %2139 = add nuw nsw i64 %2138, 4294967295
  %2140 = and i64 %2139, 4294967295
  %2141 = shl i64 1, %2140
  %2142 = add nsw i64 %2141, -1
  %2143 = sub nsw i64 0, %2141
  %2144 = sext i32 %2134 to i64
  %2145 = icmp slt i64 %2144, %2143
  %2146 = icmp slt i64 %2142, %2144
  %2147 = select i1 %2146, i64 %2142, i64 %2144
  %2148 = select i1 %2145, i64 %2143, i64 %2147
  %2149 = trunc i64 %2148 to i32
  br label %2150

2150:                                             ; preds = %2132, %2137
  %2151 = phi i32 [ %2149, %2137 ], [ %2134, %2132 ]
  store i32 %2151, i32* %103, align 4
  %2152 = load i8, i8* %1664, align 1
  call void @av1_range_check_buf(i32 7, i32* %0, i32* %1, i32 32, i8 signext %2152) #4
  %2153 = load i32, i32* %1, align 4
  %2154 = load i32, i32* %55, align 4
  %2155 = add nsw i32 %2154, %2153
  %2156 = getelementptr inbounds i8, i8* %3, i64 8
  %2157 = load i8, i8* %2156, align 1
  %2158 = icmp slt i8 %2157, 1
  br i1 %2158, label %2159, label %2182

2159:                                             ; preds = %2150
  store i32 %2155, i32* %106, align 16
  %2160 = bitcast i32* %13 to <4 x i32>*
  %2161 = load <4 x i32>, <4 x i32>* %2160, align 4
  %2162 = bitcast i32* %43 to <4 x i32>*
  %2163 = load <4 x i32>, <4 x i32>* %2162, align 4
  %2164 = shufflevector <4 x i32> %2163, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %2165 = add nsw <4 x i32> %2164, %2161
  %2166 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %2165, <4 x i32>* %2166, align 4
  %2167 = load i32, i32* %25, align 4
  %2168 = load i32, i32* %40, align 4
  %2169 = add nsw i32 %2168, %2167
  store i32 %2169, i32* %114, align 4
  %2170 = bitcast i32* %28 to <4 x i32>*
  %2171 = load <4 x i32>, <4 x i32>* %2170, align 4
  %2172 = shufflevector <4 x i32> %2171, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %2173 = add nsw <4 x i32> %2172, %2171
  %2174 = sub nsw <4 x i32> %2172, %2171
  %2175 = shufflevector <4 x i32> %2173, <4 x i32> %2174, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %2176 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %2175, <4 x i32>* %2176, align 8
  %2177 = sub nsw i32 %2167, %2168
  store i32 %2177, i32* %122, align 8
  %2178 = shufflevector <4 x i32> %2161, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %2179 = sub nsw <4 x i32> %2178, %2163
  %2180 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %2179, <4 x i32>* %2180, align 4
  %2181 = sub nsw i32 %2153, %2154
  br label %2362

2182:                                             ; preds = %2150
  %2183 = sext i8 %2157 to i64
  %2184 = add nuw nsw i64 %2183, 4294967295
  %2185 = and i64 %2184, 4294967295
  %2186 = shl i64 1, %2185
  %2187 = add nsw i64 %2186, -1
  %2188 = sub nsw i64 0, %2186
  %2189 = sext i32 %2155 to i64
  %2190 = icmp slt i64 %2189, %2188
  %2191 = icmp slt i64 %2187, %2189
  %2192 = select i1 %2191, i64 %2187, i64 %2189
  %2193 = select i1 %2190, i64 %2188, i64 %2192
  %2194 = trunc i64 %2193 to i32
  store i32 %2194, i32* %106, align 16
  %2195 = load i32, i32* %13, align 4
  %2196 = load i32, i32* %52, align 4
  %2197 = add nsw i32 %2196, %2195
  %2198 = sext i32 %2197 to i64
  %2199 = icmp slt i64 %2198, %2188
  %2200 = icmp slt i64 %2187, %2198
  %2201 = select i1 %2200, i64 %2187, i64 %2198
  %2202 = select i1 %2199, i64 %2188, i64 %2201
  %2203 = trunc i64 %2202 to i32
  store i32 %2203, i32* %107, align 4
  %2204 = load i32, i32* %16, align 4
  %2205 = load i32, i32* %49, align 4
  %2206 = add nsw i32 %2205, %2204
  %2207 = sext i32 %2206 to i64
  %2208 = icmp slt i64 %2207, %2188
  %2209 = icmp slt i64 %2187, %2207
  %2210 = select i1 %2209, i64 %2187, i64 %2207
  %2211 = select i1 %2208, i64 %2188, i64 %2210
  %2212 = trunc i64 %2211 to i32
  store i32 %2212, i32* %108, align 8
  %2213 = load i32, i32* %19, align 4
  %2214 = load i32, i32* %46, align 4
  %2215 = add nsw i32 %2214, %2213
  %2216 = sext i32 %2215 to i64
  %2217 = icmp slt i64 %2216, %2188
  %2218 = icmp slt i64 %2187, %2216
  %2219 = select i1 %2218, i64 %2187, i64 %2216
  %2220 = select i1 %2217, i64 %2188, i64 %2219
  %2221 = trunc i64 %2220 to i32
  store i32 %2221, i32* %111, align 4
  %2222 = load i32, i32* %22, align 4
  %2223 = load i32, i32* %43, align 4
  %2224 = add nsw i32 %2223, %2222
  %2225 = sext i8 %2157 to i64
  %2226 = add nuw nsw i64 %2225, 4294967295
  %2227 = and i64 %2226, 4294967295
  %2228 = shl i64 1, %2227
  %2229 = add nsw i64 %2228, -1
  %2230 = sub nsw i64 0, %2228
  %2231 = sext i32 %2224 to i64
  %2232 = icmp slt i64 %2231, %2230
  %2233 = icmp slt i64 %2229, %2231
  %2234 = select i1 %2233, i64 %2229, i64 %2231
  %2235 = select i1 %2232, i64 %2230, i64 %2234
  %2236 = trunc i64 %2235 to i32
  store i32 %2236, i32* %113, align 16
  %2237 = load i32, i32* %25, align 4
  %2238 = load i32, i32* %40, align 4
  %2239 = add nsw i32 %2238, %2237
  %2240 = sext i32 %2239 to i64
  %2241 = icmp slt i64 %2240, %2230
  %2242 = icmp slt i64 %2229, %2240
  %2243 = select i1 %2242, i64 %2229, i64 %2240
  %2244 = select i1 %2241, i64 %2230, i64 %2243
  %2245 = trunc i64 %2244 to i32
  store i32 %2245, i32* %114, align 4
  %2246 = load i32, i32* %28, align 4
  %2247 = load i32, i32* %37, align 4
  %2248 = add nsw i32 %2247, %2246
  %2249 = sext i8 %2157 to i64
  %2250 = add nuw nsw i64 %2249, 4294967295
  %2251 = and i64 %2250, 4294967295
  %2252 = shl i64 1, %2251
  %2253 = add nsw i64 %2252, -1
  %2254 = sub nsw i64 0, %2252
  %2255 = sext i32 %2248 to i64
  %2256 = icmp slt i64 %2255, %2254
  %2257 = icmp slt i64 %2253, %2255
  %2258 = select i1 %2257, i64 %2253, i64 %2255
  %2259 = select i1 %2256, i64 %2254, i64 %2258
  %2260 = trunc i64 %2259 to i32
  store i32 %2260, i32* %115, align 8
  %2261 = load i32, i32* %31, align 4
  %2262 = load i32, i32* %34, align 4
  %2263 = add nsw i32 %2262, %2261
  %2264 = sext i32 %2263 to i64
  %2265 = icmp slt i64 %2264, %2254
  %2266 = icmp slt i64 %2253, %2264
  %2267 = select i1 %2266, i64 %2253, i64 %2264
  %2268 = select i1 %2265, i64 %2254, i64 %2267
  %2269 = trunc i64 %2268 to i32
  store i32 %2269, i32* %118, align 4
  %2270 = sub nsw i32 %2261, %2262
  %2271 = sext i8 %2157 to i64
  %2272 = add nuw nsw i64 %2271, 4294967295
  %2273 = and i64 %2272, 4294967295
  %2274 = shl i64 1, %2273
  %2275 = add nsw i64 %2274, -1
  %2276 = sub nsw i64 0, %2274
  %2277 = sext i32 %2270 to i64
  %2278 = icmp slt i64 %2277, %2276
  %2279 = icmp slt i64 %2275, %2277
  %2280 = select i1 %2279, i64 %2275, i64 %2277
  %2281 = select i1 %2278, i64 %2276, i64 %2280
  %2282 = trunc i64 %2281 to i32
  store i32 %2282, i32* %120, align 16
  %2283 = sub nsw i32 %2246, %2247
  %2284 = sext i32 %2283 to i64
  %2285 = icmp slt i64 %2284, %2276
  %2286 = icmp slt i64 %2275, %2284
  %2287 = select i1 %2286, i64 %2275, i64 %2284
  %2288 = select i1 %2285, i64 %2276, i64 %2287
  %2289 = trunc i64 %2288 to i32
  store i32 %2289, i32* %121, align 4
  %2290 = sub nsw i32 %2237, %2238
  %2291 = sext i32 %2290 to i64
  %2292 = icmp slt i64 %2291, %2276
  %2293 = icmp slt i64 %2275, %2291
  %2294 = select i1 %2293, i64 %2275, i64 %2291
  %2295 = select i1 %2292, i64 %2276, i64 %2294
  %2296 = trunc i64 %2295 to i32
  store i32 %2296, i32* %122, align 8
  %2297 = sub nsw i32 %2222, %2223
  %2298 = sext i8 %2157 to i64
  %2299 = add nuw nsw i64 %2298, 4294967295
  %2300 = and i64 %2299, 4294967295
  %2301 = shl i64 1, %2300
  %2302 = add nsw i64 %2301, -1
  %2303 = sub nsw i64 0, %2301
  %2304 = sext i32 %2297 to i64
  %2305 = icmp slt i64 %2304, %2303
  %2306 = icmp slt i64 %2302, %2304
  %2307 = select i1 %2306, i64 %2302, i64 %2304
  %2308 = select i1 %2305, i64 %2303, i64 %2307
  %2309 = trunc i64 %2308 to i32
  store i32 %2309, i32* %125, align 4
  %2310 = sub nsw i32 %2213, %2214
  %2311 = sext i8 %2157 to i64
  %2312 = add nuw nsw i64 %2311, 4294967295
  %2313 = and i64 %2312, 4294967295
  %2314 = shl i64 1, %2313
  %2315 = add nsw i64 %2314, -1
  %2316 = sub nsw i64 0, %2314
  %2317 = sext i32 %2310 to i64
  %2318 = icmp slt i64 %2317, %2316
  %2319 = icmp slt i64 %2315, %2317
  %2320 = select i1 %2319, i64 %2315, i64 %2317
  %2321 = select i1 %2318, i64 %2316, i64 %2320
  %2322 = trunc i64 %2321 to i32
  store i32 %2322, i32* %127, align 16
  %2323 = sub nsw i32 %2204, %2205
  %2324 = sext i8 %2157 to i64
  %2325 = add nuw nsw i64 %2324, 4294967295
  %2326 = and i64 %2325, 4294967295
  %2327 = shl i64 1, %2326
  %2328 = add nsw i64 %2327, -1
  %2329 = sub nsw i64 0, %2327
  %2330 = sext i32 %2323 to i64
  %2331 = icmp slt i64 %2330, %2329
  %2332 = icmp slt i64 %2328, %2330
  %2333 = select i1 %2332, i64 %2328, i64 %2330
  %2334 = select i1 %2331, i64 %2329, i64 %2333
  %2335 = trunc i64 %2334 to i32
  store i32 %2335, i32* %128, align 4
  %2336 = sub nsw i32 %2195, %2196
  %2337 = sext i8 %2157 to i64
  %2338 = add nuw nsw i64 %2337, 4294967295
  %2339 = and i64 %2338, 4294967295
  %2340 = shl i64 1, %2339
  %2341 = add nsw i64 %2340, -1
  %2342 = sub nsw i64 0, %2340
  %2343 = sext i32 %2336 to i64
  %2344 = icmp slt i64 %2343, %2342
  %2345 = icmp slt i64 %2341, %2343
  %2346 = select i1 %2345, i64 %2341, i64 %2343
  %2347 = select i1 %2344, i64 %2342, i64 %2346
  %2348 = trunc i64 %2347 to i32
  store i32 %2348, i32* %129, align 8
  %2349 = sub nsw i32 %2153, %2154
  %2350 = sext i8 %2157 to i64
  %2351 = add nuw nsw i64 %2350, 4294967295
  %2352 = and i64 %2351, 4294967295
  %2353 = shl i64 1, %2352
  %2354 = add nsw i64 %2353, -1
  %2355 = sub nsw i64 0, %2353
  %2356 = sext i32 %2349 to i64
  %2357 = icmp slt i64 %2356, %2355
  %2358 = icmp slt i64 %2354, %2356
  %2359 = select i1 %2358, i64 %2354, i64 %2356
  %2360 = select i1 %2357, i64 %2355, i64 %2359
  %2361 = trunc i64 %2360 to i32
  br label %2362

2362:                                             ; preds = %2159, %2182
  %2363 = phi i32 [ %2361, %2182 ], [ %2181, %2159 ]
  store i32 %2363, i32* %132, align 4
  %2364 = bitcast i32* %58 to <4 x i32>*
  %2365 = load <4 x i32>, <4 x i32>* %2364, align 4
  %2366 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %2365, <4 x i32>* %2366, align 16
  %2367 = load i32, i32* %70, align 4
  %2368 = load i32, i32* %91, align 4
  %2369 = mul nsw i32 %2367, %976
  %2370 = sext i32 %2369 to i64
  %2371 = mul nsw i32 %2368, %965
  %2372 = sext i32 %2371 to i64
  %2373 = add i64 %147, %2372
  %2374 = add i64 %2373, %2370
  %2375 = ashr i64 %2374, %150
  %2376 = trunc i64 %2375 to i32
  store i32 %2376, i32* %217, align 16
  %2377 = load i32, i32* %73, align 4
  %2378 = load i32, i32* %88, align 4
  %2379 = mul nsw i32 %2377, %976
  %2380 = sext i32 %2379 to i64
  %2381 = mul nsw i32 %2378, %965
  %2382 = sext i32 %2381 to i64
  %2383 = add i64 %147, %2382
  %2384 = add i64 %2383, %2380
  %2385 = ashr i64 %2384, %150
  %2386 = trunc i64 %2385 to i32
  store i32 %2386, i32* %233, align 4
  %2387 = load i32, i32* %76, align 4
  %2388 = load i32, i32* %85, align 4
  %2389 = mul nsw i32 %2387, %976
  %2390 = sext i32 %2389 to i64
  %2391 = mul nsw i32 %2388, %965
  %2392 = sext i32 %2391 to i64
  %2393 = add i64 %147, %2392
  %2394 = add i64 %2393, %2390
  %2395 = ashr i64 %2394, %150
  %2396 = trunc i64 %2395 to i32
  store i32 %2396, i32* %249, align 8
  %2397 = load i32, i32* %79, align 4
  %2398 = load i32, i32* %82, align 4
  %2399 = mul nsw i32 %2397, %976
  %2400 = sext i32 %2399 to i64
  %2401 = mul nsw i32 %2398, %965
  %2402 = sext i32 %2401 to i64
  %2403 = add i64 %147, %2402
  %2404 = add i64 %2403, %2400
  %2405 = ashr i64 %2404, %150
  %2406 = trunc i64 %2405 to i32
  store i32 %2406, i32* %265, align 4
  %2407 = mul nsw i32 %2397, %965
  %2408 = sext i32 %2407 to i64
  %2409 = add i64 %2403, %2408
  %2410 = ashr i64 %2409, %150
  %2411 = trunc i64 %2410 to i32
  store i32 %2411, i32* %274, align 16
  %2412 = mul nsw i32 %2387, %965
  %2413 = sext i32 %2412 to i64
  %2414 = add i64 %2393, %2413
  %2415 = ashr i64 %2414, %150
  %2416 = trunc i64 %2415 to i32
  store i32 %2416, i32* %283, align 4
  %2417 = mul nsw i32 %2377, %965
  %2418 = sext i32 %2417 to i64
  %2419 = add i64 %2383, %2418
  %2420 = ashr i64 %2419, %150
  %2421 = trunc i64 %2420 to i32
  store i32 %2421, i32* %292, align 8
  %2422 = mul nsw i32 %2367, %965
  %2423 = sext i32 %2422 to i64
  %2424 = add i64 %2373, %2423
  %2425 = ashr i64 %2424, %150
  %2426 = trunc i64 %2425 to i32
  store i32 %2426, i32* %301, align 4
  %2427 = load i32, i32* %94, align 4
  store i32 %2427, i32* %310, align 16
  %2428 = load i32, i32* %97, align 4
  store i32 %2428, i32* %319, align 4
  %2429 = load i32, i32* %100, align 4
  store i32 %2429, i32* %328, align 8
  %2430 = load i32, i32* %103, align 4
  store i32 %2430, i32* %337, align 4
  call void @av1_range_check_buf(i32 8, i32* %0, i32* nonnull %106, i32 32, i8 signext %2157) #4
  %2431 = load i32, i32* %106, align 16
  %2432 = load i32, i32* %337, align 4
  %2433 = add nsw i32 %2432, %2431
  %2434 = getelementptr inbounds i8, i8* %3, i64 9
  %2435 = load i8, i8* %2434, align 1
  %2436 = icmp slt i8 %2435, 1
  br i1 %2436, label %2450, label %2437

2437:                                             ; preds = %2362
  %2438 = sext i8 %2435 to i64
  %2439 = add nuw nsw i64 %2438, 4294967295
  %2440 = and i64 %2439, 4294967295
  %2441 = shl i64 1, %2440
  %2442 = add nsw i64 %2441, -1
  %2443 = sub nsw i64 0, %2441
  %2444 = sext i32 %2433 to i64
  %2445 = icmp slt i64 %2444, %2443
  %2446 = icmp slt i64 %2442, %2444
  %2447 = select i1 %2446, i64 %2442, i64 %2444
  %2448 = select i1 %2445, i64 %2443, i64 %2447
  %2449 = trunc i64 %2448 to i32
  br label %2450

2450:                                             ; preds = %2362, %2437
  %2451 = phi i32 [ %2449, %2437 ], [ %2433, %2362 ]
  store i32 %2451, i32* %1, align 4
  %2452 = load i32, i32* %107, align 4
  %2453 = load i32, i32* %328, align 8
  %2454 = add nsw i32 %2453, %2452
  %2455 = load i8, i8* %2434, align 1
  %2456 = icmp slt i8 %2455, 1
  br i1 %2456, label %2470, label %2457

2457:                                             ; preds = %2450
  %2458 = sext i8 %2455 to i64
  %2459 = add nuw nsw i64 %2458, 4294967295
  %2460 = and i64 %2459, 4294967295
  %2461 = shl i64 1, %2460
  %2462 = add nsw i64 %2461, -1
  %2463 = sub nsw i64 0, %2461
  %2464 = sext i32 %2454 to i64
  %2465 = icmp slt i64 %2464, %2463
  %2466 = icmp slt i64 %2462, %2464
  %2467 = select i1 %2466, i64 %2462, i64 %2464
  %2468 = select i1 %2465, i64 %2463, i64 %2467
  %2469 = trunc i64 %2468 to i32
  br label %2470

2470:                                             ; preds = %2450, %2457
  %2471 = phi i32 [ %2469, %2457 ], [ %2454, %2450 ]
  store i32 %2471, i32* %13, align 4
  %2472 = load i32, i32* %108, align 8
  %2473 = load i32, i32* %319, align 4
  %2474 = add nsw i32 %2473, %2472
  %2475 = load i8, i8* %2434, align 1
  %2476 = icmp slt i8 %2475, 1
  br i1 %2476, label %2490, label %2477

2477:                                             ; preds = %2470
  %2478 = sext i8 %2475 to i64
  %2479 = add nuw nsw i64 %2478, 4294967295
  %2480 = and i64 %2479, 4294967295
  %2481 = shl i64 1, %2480
  %2482 = add nsw i64 %2481, -1
  %2483 = sub nsw i64 0, %2481
  %2484 = sext i32 %2474 to i64
  %2485 = icmp slt i64 %2484, %2483
  %2486 = icmp slt i64 %2482, %2484
  %2487 = select i1 %2486, i64 %2482, i64 %2484
  %2488 = select i1 %2485, i64 %2483, i64 %2487
  %2489 = trunc i64 %2488 to i32
  br label %2490

2490:                                             ; preds = %2470, %2477
  %2491 = phi i32 [ %2489, %2477 ], [ %2474, %2470 ]
  store i32 %2491, i32* %16, align 4
  %2492 = load i32, i32* %111, align 4
  %2493 = load i32, i32* %310, align 16
  %2494 = add nsw i32 %2493, %2492
  %2495 = load i8, i8* %2434, align 1
  %2496 = icmp slt i8 %2495, 1
  br i1 %2496, label %2510, label %2497

2497:                                             ; preds = %2490
  %2498 = sext i8 %2495 to i64
  %2499 = add nuw nsw i64 %2498, 4294967295
  %2500 = and i64 %2499, 4294967295
  %2501 = shl i64 1, %2500
  %2502 = add nsw i64 %2501, -1
  %2503 = sub nsw i64 0, %2501
  %2504 = sext i32 %2494 to i64
  %2505 = icmp slt i64 %2504, %2503
  %2506 = icmp slt i64 %2502, %2504
  %2507 = select i1 %2506, i64 %2502, i64 %2504
  %2508 = select i1 %2505, i64 %2503, i64 %2507
  %2509 = trunc i64 %2508 to i32
  br label %2510

2510:                                             ; preds = %2490, %2497
  %2511 = phi i32 [ %2509, %2497 ], [ %2494, %2490 ]
  store i32 %2511, i32* %19, align 4
  %2512 = load i32, i32* %113, align 16
  %2513 = load i32, i32* %301, align 4
  %2514 = add nsw i32 %2513, %2512
  %2515 = load i8, i8* %2434, align 1
  %2516 = icmp slt i8 %2515, 1
  br i1 %2516, label %2530, label %2517

2517:                                             ; preds = %2510
  %2518 = sext i8 %2515 to i64
  %2519 = add nuw nsw i64 %2518, 4294967295
  %2520 = and i64 %2519, 4294967295
  %2521 = shl i64 1, %2520
  %2522 = add nsw i64 %2521, -1
  %2523 = sub nsw i64 0, %2521
  %2524 = sext i32 %2514 to i64
  %2525 = icmp slt i64 %2524, %2523
  %2526 = icmp slt i64 %2522, %2524
  %2527 = select i1 %2526, i64 %2522, i64 %2524
  %2528 = select i1 %2525, i64 %2523, i64 %2527
  %2529 = trunc i64 %2528 to i32
  br label %2530

2530:                                             ; preds = %2510, %2517
  %2531 = phi i32 [ %2529, %2517 ], [ %2514, %2510 ]
  store i32 %2531, i32* %22, align 4
  %2532 = load i32, i32* %114, align 4
  %2533 = load i32, i32* %292, align 8
  %2534 = add nsw i32 %2533, %2532
  %2535 = load i8, i8* %2434, align 1
  %2536 = icmp slt i8 %2535, 1
  br i1 %2536, label %2550, label %2537

2537:                                             ; preds = %2530
  %2538 = sext i8 %2535 to i64
  %2539 = add nuw nsw i64 %2538, 4294967295
  %2540 = and i64 %2539, 4294967295
  %2541 = shl i64 1, %2540
  %2542 = add nsw i64 %2541, -1
  %2543 = sub nsw i64 0, %2541
  %2544 = sext i32 %2534 to i64
  %2545 = icmp slt i64 %2544, %2543
  %2546 = icmp slt i64 %2542, %2544
  %2547 = select i1 %2546, i64 %2542, i64 %2544
  %2548 = select i1 %2545, i64 %2543, i64 %2547
  %2549 = trunc i64 %2548 to i32
  br label %2550

2550:                                             ; preds = %2530, %2537
  %2551 = phi i32 [ %2549, %2537 ], [ %2534, %2530 ]
  store i32 %2551, i32* %25, align 4
  %2552 = load i32, i32* %115, align 8
  %2553 = load i32, i32* %283, align 4
  %2554 = add nsw i32 %2553, %2552
  %2555 = load i8, i8* %2434, align 1
  %2556 = icmp slt i8 %2555, 1
  br i1 %2556, label %2570, label %2557

2557:                                             ; preds = %2550
  %2558 = sext i8 %2555 to i64
  %2559 = add nuw nsw i64 %2558, 4294967295
  %2560 = and i64 %2559, 4294967295
  %2561 = shl i64 1, %2560
  %2562 = add nsw i64 %2561, -1
  %2563 = sub nsw i64 0, %2561
  %2564 = sext i32 %2554 to i64
  %2565 = icmp slt i64 %2564, %2563
  %2566 = icmp slt i64 %2562, %2564
  %2567 = select i1 %2566, i64 %2562, i64 %2564
  %2568 = select i1 %2565, i64 %2563, i64 %2567
  %2569 = trunc i64 %2568 to i32
  br label %2570

2570:                                             ; preds = %2550, %2557
  %2571 = phi i32 [ %2569, %2557 ], [ %2554, %2550 ]
  store i32 %2571, i32* %28, align 4
  %2572 = load i32, i32* %118, align 4
  %2573 = load i32, i32* %274, align 16
  %2574 = add nsw i32 %2573, %2572
  %2575 = load i8, i8* %2434, align 1
  %2576 = icmp slt i8 %2575, 1
  br i1 %2576, label %2590, label %2577

2577:                                             ; preds = %2570
  %2578 = sext i8 %2575 to i64
  %2579 = add nuw nsw i64 %2578, 4294967295
  %2580 = and i64 %2579, 4294967295
  %2581 = shl i64 1, %2580
  %2582 = add nsw i64 %2581, -1
  %2583 = sub nsw i64 0, %2581
  %2584 = sext i32 %2574 to i64
  %2585 = icmp slt i64 %2584, %2583
  %2586 = icmp slt i64 %2582, %2584
  %2587 = select i1 %2586, i64 %2582, i64 %2584
  %2588 = select i1 %2585, i64 %2583, i64 %2587
  %2589 = trunc i64 %2588 to i32
  br label %2590

2590:                                             ; preds = %2570, %2577
  %2591 = phi i32 [ %2589, %2577 ], [ %2574, %2570 ]
  store i32 %2591, i32* %31, align 4
  %2592 = load i32, i32* %120, align 16
  %2593 = load i32, i32* %265, align 4
  %2594 = add nsw i32 %2593, %2592
  %2595 = load i8, i8* %2434, align 1
  %2596 = icmp slt i8 %2595, 1
  br i1 %2596, label %2610, label %2597

2597:                                             ; preds = %2590
  %2598 = sext i8 %2595 to i64
  %2599 = add nuw nsw i64 %2598, 4294967295
  %2600 = and i64 %2599, 4294967295
  %2601 = shl i64 1, %2600
  %2602 = add nsw i64 %2601, -1
  %2603 = sub nsw i64 0, %2601
  %2604 = sext i32 %2594 to i64
  %2605 = icmp slt i64 %2604, %2603
  %2606 = icmp slt i64 %2602, %2604
  %2607 = select i1 %2606, i64 %2602, i64 %2604
  %2608 = select i1 %2605, i64 %2603, i64 %2607
  %2609 = trunc i64 %2608 to i32
  br label %2610

2610:                                             ; preds = %2590, %2597
  %2611 = phi i32 [ %2609, %2597 ], [ %2594, %2590 ]
  store i32 %2611, i32* %34, align 4
  %2612 = load i32, i32* %121, align 4
  %2613 = load i32, i32* %249, align 8
  %2614 = add nsw i32 %2613, %2612
  %2615 = load i8, i8* %2434, align 1
  %2616 = icmp slt i8 %2615, 1
  br i1 %2616, label %2630, label %2617

2617:                                             ; preds = %2610
  %2618 = sext i8 %2615 to i64
  %2619 = add nuw nsw i64 %2618, 4294967295
  %2620 = and i64 %2619, 4294967295
  %2621 = shl i64 1, %2620
  %2622 = add nsw i64 %2621, -1
  %2623 = sub nsw i64 0, %2621
  %2624 = sext i32 %2614 to i64
  %2625 = icmp slt i64 %2624, %2623
  %2626 = icmp slt i64 %2622, %2624
  %2627 = select i1 %2626, i64 %2622, i64 %2624
  %2628 = select i1 %2625, i64 %2623, i64 %2627
  %2629 = trunc i64 %2628 to i32
  br label %2630

2630:                                             ; preds = %2610, %2617
  %2631 = phi i32 [ %2629, %2617 ], [ %2614, %2610 ]
  store i32 %2631, i32* %37, align 4
  %2632 = load i32, i32* %122, align 8
  %2633 = load i32, i32* %233, align 4
  %2634 = add nsw i32 %2633, %2632
  %2635 = load i8, i8* %2434, align 1
  %2636 = icmp slt i8 %2635, 1
  br i1 %2636, label %2650, label %2637

2637:                                             ; preds = %2630
  %2638 = sext i8 %2635 to i64
  %2639 = add nuw nsw i64 %2638, 4294967295
  %2640 = and i64 %2639, 4294967295
  %2641 = shl i64 1, %2640
  %2642 = add nsw i64 %2641, -1
  %2643 = sub nsw i64 0, %2641
  %2644 = sext i32 %2634 to i64
  %2645 = icmp slt i64 %2644, %2643
  %2646 = icmp slt i64 %2642, %2644
  %2647 = select i1 %2646, i64 %2642, i64 %2644
  %2648 = select i1 %2645, i64 %2643, i64 %2647
  %2649 = trunc i64 %2648 to i32
  br label %2650

2650:                                             ; preds = %2630, %2637
  %2651 = phi i32 [ %2649, %2637 ], [ %2634, %2630 ]
  store i32 %2651, i32* %40, align 4
  %2652 = load i32, i32* %125, align 4
  %2653 = load i32, i32* %217, align 16
  %2654 = add nsw i32 %2653, %2652
  %2655 = load i8, i8* %2434, align 1
  %2656 = icmp slt i8 %2655, 1
  br i1 %2656, label %2670, label %2657

2657:                                             ; preds = %2650
  %2658 = sext i8 %2655 to i64
  %2659 = add nuw nsw i64 %2658, 4294967295
  %2660 = and i64 %2659, 4294967295
  %2661 = shl i64 1, %2660
  %2662 = add nsw i64 %2661, -1
  %2663 = sub nsw i64 0, %2661
  %2664 = sext i32 %2654 to i64
  %2665 = icmp slt i64 %2664, %2663
  %2666 = icmp slt i64 %2662, %2664
  %2667 = select i1 %2666, i64 %2662, i64 %2664
  %2668 = select i1 %2665, i64 %2663, i64 %2667
  %2669 = trunc i64 %2668 to i32
  br label %2670

2670:                                             ; preds = %2650, %2657
  %2671 = phi i32 [ %2669, %2657 ], [ %2654, %2650 ]
  store i32 %2671, i32* %43, align 4
  %2672 = load i32, i32* %127, align 16
  %2673 = load i32, i32* %201, align 4
  %2674 = add nsw i32 %2673, %2672
  %2675 = load i8, i8* %2434, align 1
  %2676 = icmp slt i8 %2675, 1
  br i1 %2676, label %2690, label %2677

2677:                                             ; preds = %2670
  %2678 = sext i8 %2675 to i64
  %2679 = add nuw nsw i64 %2678, 4294967295
  %2680 = and i64 %2679, 4294967295
  %2681 = shl i64 1, %2680
  %2682 = add nsw i64 %2681, -1
  %2683 = sub nsw i64 0, %2681
  %2684 = sext i32 %2674 to i64
  %2685 = icmp slt i64 %2684, %2683
  %2686 = icmp slt i64 %2682, %2684
  %2687 = select i1 %2686, i64 %2682, i64 %2684
  %2688 = select i1 %2685, i64 %2683, i64 %2687
  %2689 = trunc i64 %2688 to i32
  br label %2690

2690:                                             ; preds = %2670, %2677
  %2691 = phi i32 [ %2689, %2677 ], [ %2674, %2670 ]
  store i32 %2691, i32* %46, align 4
  %2692 = load i32, i32* %128, align 4
  %2693 = load i32, i32* %185, align 8
  %2694 = add nsw i32 %2693, %2692
  %2695 = load i8, i8* %2434, align 1
  %2696 = icmp slt i8 %2695, 1
  br i1 %2696, label %2710, label %2697

2697:                                             ; preds = %2690
  %2698 = sext i8 %2695 to i64
  %2699 = add nuw nsw i64 %2698, 4294967295
  %2700 = and i64 %2699, 4294967295
  %2701 = shl i64 1, %2700
  %2702 = add nsw i64 %2701, -1
  %2703 = sub nsw i64 0, %2701
  %2704 = sext i32 %2694 to i64
  %2705 = icmp slt i64 %2704, %2703
  %2706 = icmp slt i64 %2702, %2704
  %2707 = select i1 %2706, i64 %2702, i64 %2704
  %2708 = select i1 %2705, i64 %2703, i64 %2707
  %2709 = trunc i64 %2708 to i32
  br label %2710

2710:                                             ; preds = %2690, %2697
  %2711 = phi i32 [ %2709, %2697 ], [ %2694, %2690 ]
  store i32 %2711, i32* %49, align 4
  %2712 = load i32, i32* %129, align 8
  %2713 = load i32, i32* %169, align 4
  %2714 = add nsw i32 %2713, %2712
  %2715 = load i8, i8* %2434, align 1
  %2716 = icmp slt i8 %2715, 1
  br i1 %2716, label %2730, label %2717

2717:                                             ; preds = %2710
  %2718 = sext i8 %2715 to i64
  %2719 = add nuw nsw i64 %2718, 4294967295
  %2720 = and i64 %2719, 4294967295
  %2721 = shl i64 1, %2720
  %2722 = add nsw i64 %2721, -1
  %2723 = sub nsw i64 0, %2721
  %2724 = sext i32 %2714 to i64
  %2725 = icmp slt i64 %2724, %2723
  %2726 = icmp slt i64 %2722, %2724
  %2727 = select i1 %2726, i64 %2722, i64 %2724
  %2728 = select i1 %2725, i64 %2723, i64 %2727
  %2729 = trunc i64 %2728 to i32
  br label %2730

2730:                                             ; preds = %2710, %2717
  %2731 = phi i32 [ %2729, %2717 ], [ %2714, %2710 ]
  store i32 %2731, i32* %52, align 4
  %2732 = load i32, i32* %132, align 4
  %2733 = load i32, i32* %153, align 16
  %2734 = add nsw i32 %2733, %2732
  %2735 = load i8, i8* %2434, align 1
  %2736 = icmp slt i8 %2735, 1
  br i1 %2736, label %2750, label %2737

2737:                                             ; preds = %2730
  %2738 = sext i8 %2735 to i64
  %2739 = add nuw nsw i64 %2738, 4294967295
  %2740 = and i64 %2739, 4294967295
  %2741 = shl i64 1, %2740
  %2742 = add nsw i64 %2741, -1
  %2743 = sub nsw i64 0, %2741
  %2744 = sext i32 %2734 to i64
  %2745 = icmp slt i64 %2744, %2743
  %2746 = icmp slt i64 %2742, %2744
  %2747 = select i1 %2746, i64 %2742, i64 %2744
  %2748 = select i1 %2745, i64 %2743, i64 %2747
  %2749 = trunc i64 %2748 to i32
  br label %2750

2750:                                             ; preds = %2730, %2737
  %2751 = phi i32 [ %2749, %2737 ], [ %2734, %2730 ]
  store i32 %2751, i32* %55, align 4
  %2752 = sub nsw i32 %2732, %2733
  %2753 = load i8, i8* %2434, align 1
  %2754 = icmp slt i8 %2753, 1
  br i1 %2754, label %2768, label %2755

2755:                                             ; preds = %2750
  %2756 = sext i8 %2753 to i64
  %2757 = add nuw nsw i64 %2756, 4294967295
  %2758 = and i64 %2757, 4294967295
  %2759 = shl i64 1, %2758
  %2760 = add nsw i64 %2759, -1
  %2761 = sub nsw i64 0, %2759
  %2762 = sext i32 %2752 to i64
  %2763 = icmp slt i64 %2762, %2761
  %2764 = icmp slt i64 %2760, %2762
  %2765 = select i1 %2764, i64 %2760, i64 %2762
  %2766 = select i1 %2763, i64 %2761, i64 %2765
  %2767 = trunc i64 %2766 to i32
  br label %2768

2768:                                             ; preds = %2750, %2755
  %2769 = phi i32 [ %2767, %2755 ], [ %2752, %2750 ]
  store i32 %2769, i32* %58, align 4
  %2770 = sub nsw i32 %2712, %2713
  %2771 = load i8, i8* %2434, align 1
  %2772 = icmp slt i8 %2771, 1
  br i1 %2772, label %2786, label %2773

2773:                                             ; preds = %2768
  %2774 = sext i8 %2771 to i64
  %2775 = add nuw nsw i64 %2774, 4294967295
  %2776 = and i64 %2775, 4294967295
  %2777 = shl i64 1, %2776
  %2778 = add nsw i64 %2777, -1
  %2779 = sub nsw i64 0, %2777
  %2780 = sext i32 %2770 to i64
  %2781 = icmp slt i64 %2780, %2779
  %2782 = icmp slt i64 %2778, %2780
  %2783 = select i1 %2782, i64 %2778, i64 %2780
  %2784 = select i1 %2781, i64 %2779, i64 %2783
  %2785 = trunc i64 %2784 to i32
  br label %2786

2786:                                             ; preds = %2768, %2773
  %2787 = phi i32 [ %2785, %2773 ], [ %2770, %2768 ]
  store i32 %2787, i32* %61, align 4
  %2788 = sub nsw i32 %2692, %2693
  %2789 = load i8, i8* %2434, align 1
  %2790 = icmp slt i8 %2789, 1
  br i1 %2790, label %2804, label %2791

2791:                                             ; preds = %2786
  %2792 = sext i8 %2789 to i64
  %2793 = add nuw nsw i64 %2792, 4294967295
  %2794 = and i64 %2793, 4294967295
  %2795 = shl i64 1, %2794
  %2796 = add nsw i64 %2795, -1
  %2797 = sub nsw i64 0, %2795
  %2798 = sext i32 %2788 to i64
  %2799 = icmp slt i64 %2798, %2797
  %2800 = icmp slt i64 %2796, %2798
  %2801 = select i1 %2800, i64 %2796, i64 %2798
  %2802 = select i1 %2799, i64 %2797, i64 %2801
  %2803 = trunc i64 %2802 to i32
  br label %2804

2804:                                             ; preds = %2786, %2791
  %2805 = phi i32 [ %2803, %2791 ], [ %2788, %2786 ]
  store i32 %2805, i32* %64, align 4
  %2806 = sub nsw i32 %2672, %2673
  %2807 = load i8, i8* %2434, align 1
  %2808 = icmp slt i8 %2807, 1
  br i1 %2808, label %2822, label %2809

2809:                                             ; preds = %2804
  %2810 = sext i8 %2807 to i64
  %2811 = add nuw nsw i64 %2810, 4294967295
  %2812 = and i64 %2811, 4294967295
  %2813 = shl i64 1, %2812
  %2814 = add nsw i64 %2813, -1
  %2815 = sub nsw i64 0, %2813
  %2816 = sext i32 %2806 to i64
  %2817 = icmp slt i64 %2816, %2815
  %2818 = icmp slt i64 %2814, %2816
  %2819 = select i1 %2818, i64 %2814, i64 %2816
  %2820 = select i1 %2817, i64 %2815, i64 %2819
  %2821 = trunc i64 %2820 to i32
  br label %2822

2822:                                             ; preds = %2804, %2809
  %2823 = phi i32 [ %2821, %2809 ], [ %2806, %2804 ]
  store i32 %2823, i32* %67, align 4
  %2824 = sub nsw i32 %2652, %2653
  %2825 = load i8, i8* %2434, align 1
  %2826 = icmp slt i8 %2825, 1
  br i1 %2826, label %2840, label %2827

2827:                                             ; preds = %2822
  %2828 = sext i8 %2825 to i64
  %2829 = add nuw nsw i64 %2828, 4294967295
  %2830 = and i64 %2829, 4294967295
  %2831 = shl i64 1, %2830
  %2832 = add nsw i64 %2831, -1
  %2833 = sub nsw i64 0, %2831
  %2834 = sext i32 %2824 to i64
  %2835 = icmp slt i64 %2834, %2833
  %2836 = icmp slt i64 %2832, %2834
  %2837 = select i1 %2836, i64 %2832, i64 %2834
  %2838 = select i1 %2835, i64 %2833, i64 %2837
  %2839 = trunc i64 %2838 to i32
  br label %2840

2840:                                             ; preds = %2822, %2827
  %2841 = phi i32 [ %2839, %2827 ], [ %2824, %2822 ]
  store i32 %2841, i32* %70, align 4
  %2842 = sub nsw i32 %2632, %2633
  %2843 = load i8, i8* %2434, align 1
  %2844 = icmp slt i8 %2843, 1
  br i1 %2844, label %2858, label %2845

2845:                                             ; preds = %2840
  %2846 = sext i8 %2843 to i64
  %2847 = add nuw nsw i64 %2846, 4294967295
  %2848 = and i64 %2847, 4294967295
  %2849 = shl i64 1, %2848
  %2850 = add nsw i64 %2849, -1
  %2851 = sub nsw i64 0, %2849
  %2852 = sext i32 %2842 to i64
  %2853 = icmp slt i64 %2852, %2851
  %2854 = icmp slt i64 %2850, %2852
  %2855 = select i1 %2854, i64 %2850, i64 %2852
  %2856 = select i1 %2853, i64 %2851, i64 %2855
  %2857 = trunc i64 %2856 to i32
  br label %2858

2858:                                             ; preds = %2840, %2845
  %2859 = phi i32 [ %2857, %2845 ], [ %2842, %2840 ]
  store i32 %2859, i32* %73, align 4
  %2860 = sub nsw i32 %2612, %2613
  %2861 = load i8, i8* %2434, align 1
  %2862 = icmp slt i8 %2861, 1
  br i1 %2862, label %2876, label %2863

2863:                                             ; preds = %2858
  %2864 = sext i8 %2861 to i64
  %2865 = add nuw nsw i64 %2864, 4294967295
  %2866 = and i64 %2865, 4294967295
  %2867 = shl i64 1, %2866
  %2868 = add nsw i64 %2867, -1
  %2869 = sub nsw i64 0, %2867
  %2870 = sext i32 %2860 to i64
  %2871 = icmp slt i64 %2870, %2869
  %2872 = icmp slt i64 %2868, %2870
  %2873 = select i1 %2872, i64 %2868, i64 %2870
  %2874 = select i1 %2871, i64 %2869, i64 %2873
  %2875 = trunc i64 %2874 to i32
  br label %2876

2876:                                             ; preds = %2858, %2863
  %2877 = phi i32 [ %2875, %2863 ], [ %2860, %2858 ]
  store i32 %2877, i32* %76, align 4
  %2878 = sub nsw i32 %2592, %2593
  %2879 = load i8, i8* %2434, align 1
  %2880 = icmp slt i8 %2879, 1
  br i1 %2880, label %2894, label %2881

2881:                                             ; preds = %2876
  %2882 = sext i8 %2879 to i64
  %2883 = add nuw nsw i64 %2882, 4294967295
  %2884 = and i64 %2883, 4294967295
  %2885 = shl i64 1, %2884
  %2886 = add nsw i64 %2885, -1
  %2887 = sub nsw i64 0, %2885
  %2888 = sext i32 %2878 to i64
  %2889 = icmp slt i64 %2888, %2887
  %2890 = icmp slt i64 %2886, %2888
  %2891 = select i1 %2890, i64 %2886, i64 %2888
  %2892 = select i1 %2889, i64 %2887, i64 %2891
  %2893 = trunc i64 %2892 to i32
  br label %2894

2894:                                             ; preds = %2876, %2881
  %2895 = phi i32 [ %2893, %2881 ], [ %2878, %2876 ]
  store i32 %2895, i32* %79, align 4
  %2896 = sub nsw i32 %2572, %2573
  %2897 = load i8, i8* %2434, align 1
  %2898 = icmp slt i8 %2897, 1
  br i1 %2898, label %2912, label %2899

2899:                                             ; preds = %2894
  %2900 = sext i8 %2897 to i64
  %2901 = add nuw nsw i64 %2900, 4294967295
  %2902 = and i64 %2901, 4294967295
  %2903 = shl i64 1, %2902
  %2904 = add nsw i64 %2903, -1
  %2905 = sub nsw i64 0, %2903
  %2906 = sext i32 %2896 to i64
  %2907 = icmp slt i64 %2906, %2905
  %2908 = icmp slt i64 %2904, %2906
  %2909 = select i1 %2908, i64 %2904, i64 %2906
  %2910 = select i1 %2907, i64 %2905, i64 %2909
  %2911 = trunc i64 %2910 to i32
  br label %2912

2912:                                             ; preds = %2894, %2899
  %2913 = phi i32 [ %2911, %2899 ], [ %2896, %2894 ]
  store i32 %2913, i32* %82, align 4
  %2914 = sub nsw i32 %2552, %2553
  %2915 = load i8, i8* %2434, align 1
  %2916 = icmp slt i8 %2915, 1
  br i1 %2916, label %2930, label %2917

2917:                                             ; preds = %2912
  %2918 = sext i8 %2915 to i64
  %2919 = add nuw nsw i64 %2918, 4294967295
  %2920 = and i64 %2919, 4294967295
  %2921 = shl i64 1, %2920
  %2922 = add nsw i64 %2921, -1
  %2923 = sub nsw i64 0, %2921
  %2924 = sext i32 %2914 to i64
  %2925 = icmp slt i64 %2924, %2923
  %2926 = icmp slt i64 %2922, %2924
  %2927 = select i1 %2926, i64 %2922, i64 %2924
  %2928 = select i1 %2925, i64 %2923, i64 %2927
  %2929 = trunc i64 %2928 to i32
  br label %2930

2930:                                             ; preds = %2912, %2917
  %2931 = phi i32 [ %2929, %2917 ], [ %2914, %2912 ]
  store i32 %2931, i32* %85, align 4
  %2932 = sub nsw i32 %2532, %2533
  %2933 = load i8, i8* %2434, align 1
  %2934 = icmp slt i8 %2933, 1
  br i1 %2934, label %2948, label %2935

2935:                                             ; preds = %2930
  %2936 = sext i8 %2933 to i64
  %2937 = add nuw nsw i64 %2936, 4294967295
  %2938 = and i64 %2937, 4294967295
  %2939 = shl i64 1, %2938
  %2940 = add nsw i64 %2939, -1
  %2941 = sub nsw i64 0, %2939
  %2942 = sext i32 %2932 to i64
  %2943 = icmp slt i64 %2942, %2941
  %2944 = icmp slt i64 %2940, %2942
  %2945 = select i1 %2944, i64 %2940, i64 %2942
  %2946 = select i1 %2943, i64 %2941, i64 %2945
  %2947 = trunc i64 %2946 to i32
  br label %2948

2948:                                             ; preds = %2930, %2935
  %2949 = phi i32 [ %2947, %2935 ], [ %2932, %2930 ]
  store i32 %2949, i32* %88, align 4
  %2950 = sub nsw i32 %2512, %2513
  %2951 = load i8, i8* %2434, align 1
  %2952 = icmp slt i8 %2951, 1
  br i1 %2952, label %2966, label %2953

2953:                                             ; preds = %2948
  %2954 = sext i8 %2951 to i64
  %2955 = add nuw nsw i64 %2954, 4294967295
  %2956 = and i64 %2955, 4294967295
  %2957 = shl i64 1, %2956
  %2958 = add nsw i64 %2957, -1
  %2959 = sub nsw i64 0, %2957
  %2960 = sext i32 %2950 to i64
  %2961 = icmp slt i64 %2960, %2959
  %2962 = icmp slt i64 %2958, %2960
  %2963 = select i1 %2962, i64 %2958, i64 %2960
  %2964 = select i1 %2961, i64 %2959, i64 %2963
  %2965 = trunc i64 %2964 to i32
  br label %2966

2966:                                             ; preds = %2948, %2953
  %2967 = phi i32 [ %2965, %2953 ], [ %2950, %2948 ]
  store i32 %2967, i32* %91, align 4
  %2968 = sub nsw i32 %2492, %2493
  %2969 = load i8, i8* %2434, align 1
  %2970 = icmp slt i8 %2969, 1
  br i1 %2970, label %2984, label %2971

2971:                                             ; preds = %2966
  %2972 = sext i8 %2969 to i64
  %2973 = add nuw nsw i64 %2972, 4294967295
  %2974 = and i64 %2973, 4294967295
  %2975 = shl i64 1, %2974
  %2976 = add nsw i64 %2975, -1
  %2977 = sub nsw i64 0, %2975
  %2978 = sext i32 %2968 to i64
  %2979 = icmp slt i64 %2978, %2977
  %2980 = icmp slt i64 %2976, %2978
  %2981 = select i1 %2980, i64 %2976, i64 %2978
  %2982 = select i1 %2979, i64 %2977, i64 %2981
  %2983 = trunc i64 %2982 to i32
  br label %2984

2984:                                             ; preds = %2966, %2971
  %2985 = phi i32 [ %2983, %2971 ], [ %2968, %2966 ]
  store i32 %2985, i32* %94, align 4
  %2986 = sub nsw i32 %2472, %2473
  %2987 = load i8, i8* %2434, align 1
  %2988 = icmp slt i8 %2987, 1
  br i1 %2988, label %3002, label %2989

2989:                                             ; preds = %2984
  %2990 = sext i8 %2987 to i64
  %2991 = add nuw nsw i64 %2990, 4294967295
  %2992 = and i64 %2991, 4294967295
  %2993 = shl i64 1, %2992
  %2994 = add nsw i64 %2993, -1
  %2995 = sub nsw i64 0, %2993
  %2996 = sext i32 %2986 to i64
  %2997 = icmp slt i64 %2996, %2995
  %2998 = icmp slt i64 %2994, %2996
  %2999 = select i1 %2998, i64 %2994, i64 %2996
  %3000 = select i1 %2997, i64 %2995, i64 %2999
  %3001 = trunc i64 %3000 to i32
  br label %3002

3002:                                             ; preds = %2984, %2989
  %3003 = phi i32 [ %3001, %2989 ], [ %2986, %2984 ]
  store i32 %3003, i32* %97, align 4
  %3004 = sub nsw i32 %2452, %2453
  %3005 = load i8, i8* %2434, align 1
  %3006 = icmp slt i8 %3005, 1
  br i1 %3006, label %3020, label %3007

3007:                                             ; preds = %3002
  %3008 = sext i8 %3005 to i64
  %3009 = add nuw nsw i64 %3008, 4294967295
  %3010 = and i64 %3009, 4294967295
  %3011 = shl i64 1, %3010
  %3012 = add nsw i64 %3011, -1
  %3013 = sub nsw i64 0, %3011
  %3014 = sext i32 %3004 to i64
  %3015 = icmp slt i64 %3014, %3013
  %3016 = icmp slt i64 %3012, %3014
  %3017 = select i1 %3016, i64 %3012, i64 %3014
  %3018 = select i1 %3015, i64 %3013, i64 %3017
  %3019 = trunc i64 %3018 to i32
  br label %3020

3020:                                             ; preds = %3002, %3007
  %3021 = phi i32 [ %3019, %3007 ], [ %3004, %3002 ]
  store i32 %3021, i32* %100, align 4
  %3022 = sub nsw i32 %2431, %2432
  %3023 = load i8, i8* %2434, align 1
  %3024 = icmp slt i8 %3023, 1
  br i1 %3024, label %3038, label %3025

3025:                                             ; preds = %3020
  %3026 = sext i8 %3023 to i64
  %3027 = add nuw nsw i64 %3026, 4294967295
  %3028 = and i64 %3027, 4294967295
  %3029 = shl i64 1, %3028
  %3030 = add nsw i64 %3029, -1
  %3031 = sub nsw i64 0, %3029
  %3032 = sext i32 %3022 to i64
  %3033 = icmp slt i64 %3032, %3031
  %3034 = icmp slt i64 %3030, %3032
  %3035 = select i1 %3034, i64 %3030, i64 %3032
  %3036 = select i1 %3033, i64 %3031, i64 %3035
  %3037 = trunc i64 %3036 to i32
  br label %3038

3038:                                             ; preds = %3020, %3025
  %3039 = phi i32 [ %3037, %3025 ], [ %3022, %3020 ]
  store i32 %3039, i32* %103, align 4
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_iadst4(i32* nocapture readonly, i32* nocapture, i8 signext, i8* nocapture readnone) local_unnamed_addr #3 {
  %5 = sext i8 %2 to i32
  %6 = add nsw i32 %5, -10
  %7 = sext i32 %6 to i64
  %8 = load i32, i32* %0, align 4
  %9 = getelementptr inbounds i32, i32* %0, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %0, i64 3
  %14 = load i32, i32* %13, align 4
  %15 = or i32 %10, %8
  %16 = or i32 %15, %12
  %17 = or i32 %16, %14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %4
  store i32 0, i32* %1, align 4
  br label %67

20:                                               ; preds = %4
  %21 = getelementptr inbounds [7 x [5 x i32]], [7 x [5 x i32]]* @av1_sinpi_arr_data, i64 0, i64 %7, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = mul nsw i32 %22, %8
  %24 = getelementptr inbounds [7 x [5 x i32]], [7 x [5 x i32]]* @av1_sinpi_arr_data, i64 0, i64 %7, i64 2
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %8
  %27 = getelementptr inbounds [7 x [5 x i32]], [7 x [5 x i32]]* @av1_sinpi_arr_data, i64 0, i64 %7, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, %10
  %30 = getelementptr inbounds [7 x [5 x i32]], [7 x [5 x i32]]* @av1_sinpi_arr_data, i64 0, i64 %7, i64 4
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, %12
  %33 = mul nsw i32 %22, %12
  %34 = mul nsw i32 %25, %14
  %35 = mul nsw i32 %31, %14
  %36 = sub i32 %8, %12
  %37 = add nsw i32 %36, %14
  %38 = sub nsw i32 %26, %33
  %39 = mul nsw i32 %28, %37
  %40 = add i32 %34, %23
  %41 = add i32 %40, %32
  %42 = sub i32 %38, %35
  %43 = add nsw i32 %41, %29
  %44 = add nsw i32 %42, %29
  %45 = sub i32 %42, %29
  %46 = add i32 %45, %41
  %47 = sext i32 %43 to i64
  %48 = add nsw i32 %5, -1
  %49 = zext i32 %48 to i64
  %50 = shl i64 1, %49
  %51 = add nsw i64 %50, %47
  %52 = zext i32 %5 to i64
  %53 = ashr i64 %51, %52
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %1, align 4
  %55 = sext i32 %44 to i64
  %56 = add nsw i64 %50, %55
  %57 = ashr i64 %56, %52
  %58 = trunc i64 %57 to i32
  %59 = sext i32 %39 to i64
  %60 = add nsw i64 %50, %59
  %61 = ashr i64 %60, %52
  %62 = trunc i64 %61 to i32
  %63 = sext i32 %46 to i64
  %64 = add nsw i64 %50, %63
  %65 = ashr i64 %64, %52
  %66 = trunc i64 %65 to i32
  br label %67

67:                                               ; preds = %20, %19
  %68 = phi i32 [ %58, %20 ], [ 0, %19 ]
  %69 = phi i32 [ %62, %20 ], [ 0, %19 ]
  %70 = phi i32 [ %66, %20 ], [ 0, %19 ]
  %71 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %68, i32* %71, align 4
  %72 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %69, i32* %72, align 4
  %73 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %70, i32* %73, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_iadst8(i32*, i32*, i8 signext, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [8 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [8 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 0
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 1
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 2
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 3
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 4
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 5
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 6
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 7
  %18 = getelementptr inbounds i32, i32* %0, i64 7
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 4
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 16, i1 false)
  %21 = load i32, i32* %18, align 4
  store i32 %21, i32* %1, align 4
  %22 = load i32, i32* %0, align 4
  %23 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds i32, i32* %0, i64 5
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %0, i64 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds i32, i32* %0, i64 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds i32, i32* %0, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds i32, i32* %0, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds i32, i32* %0, i64 6
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %3, i64 1
  %43 = load i8, i8* %42, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 8, i8 signext %43) #4
  %44 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 4
  %45 = load i32, i32* %44, align 16
  %46 = load i32, i32* %1, align 4
  %47 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 60
  %48 = load i32, i32* %47, align 16
  %49 = load i32, i32* %23, align 4
  %50 = mul nsw i32 %46, %45
  %51 = sext i32 %50 to i64
  %52 = mul nsw i32 %49, %48
  %53 = sext i32 %52 to i64
  %54 = add nsw i32 %6, -1
  %55 = zext i32 %54 to i64
  %56 = shl i64 1, %55
  %57 = add i64 %56, %51
  %58 = add i64 %57, %53
  %59 = zext i32 %6 to i64
  %60 = ashr i64 %58, %59
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %10, align 16
  %62 = mul nsw i32 %48, %46
  %63 = sext i32 %62 to i64
  %64 = mul i32 %45, %49
  %65 = sub i32 0, %64
  %66 = sext i32 %65 to i64
  %67 = add i64 %56, %63
  %68 = add i64 %67, %66
  %69 = ashr i64 %68, %59
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %11, align 4
  %71 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 20
  %72 = load i32, i32* %71, align 16
  %73 = load i32, i32* %26, align 4
  %74 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 44
  %75 = load i32, i32* %74, align 16
  %76 = load i32, i32* %29, align 4
  %77 = mul nsw i32 %73, %72
  %78 = sext i32 %77 to i64
  %79 = mul nsw i32 %76, %75
  %80 = sext i32 %79 to i64
  %81 = add i64 %56, %78
  %82 = add i64 %81, %80
  %83 = ashr i64 %82, %59
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %12, align 8
  %85 = mul nsw i32 %75, %73
  %86 = sext i32 %85 to i64
  %87 = mul i32 %72, %76
  %88 = sub i32 0, %87
  %89 = sext i32 %88 to i64
  %90 = add i64 %56, %86
  %91 = add i64 %90, %89
  %92 = ashr i64 %91, %59
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %13, align 4
  %94 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 36
  %95 = load i32, i32* %94, align 16
  %96 = load i32, i32* %32, align 4
  %97 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 28
  %98 = load i32, i32* %97, align 16
  %99 = load i32, i32* %35, align 4
  %100 = mul nsw i32 %96, %95
  %101 = sext i32 %100 to i64
  %102 = mul nsw i32 %99, %98
  %103 = sext i32 %102 to i64
  %104 = add i64 %56, %101
  %105 = add i64 %104, %103
  %106 = ashr i64 %105, %59
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %14, align 16
  %108 = mul nsw i32 %98, %96
  %109 = sext i32 %108 to i64
  %110 = mul i32 %95, %99
  %111 = sub i32 0, %110
  %112 = sext i32 %111 to i64
  %113 = add i64 %56, %109
  %114 = add i64 %113, %112
  %115 = ashr i64 %114, %59
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %15, align 4
  %117 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 52
  %118 = load i32, i32* %117, align 16
  %119 = load i32, i32* %38, align 4
  %120 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 12
  %121 = load i32, i32* %120, align 16
  %122 = load i32, i32* %41, align 4
  %123 = mul nsw i32 %119, %118
  %124 = sext i32 %123 to i64
  %125 = mul nsw i32 %122, %121
  %126 = sext i32 %125 to i64
  %127 = add i64 %56, %124
  %128 = add i64 %127, %126
  %129 = ashr i64 %128, %59
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %16, align 8
  %131 = mul nsw i32 %121, %119
  %132 = sext i32 %131 to i64
  %133 = mul i32 %118, %122
  %134 = sub i32 0, %133
  %135 = sext i32 %134 to i64
  %136 = add i64 %56, %132
  %137 = add i64 %136, %135
  %138 = ashr i64 %137, %59
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %17, align 4
  %140 = getelementptr inbounds i8, i8* %3, i64 2
  %141 = load i8, i8* %140, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %10, i32 8, i8 signext %141) #4
  %142 = load i32, i32* %10, align 16
  %143 = load i32, i32* %14, align 16
  %144 = add nsw i32 %143, %142
  %145 = getelementptr inbounds i8, i8* %3, i64 3
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 1
  br i1 %147, label %161, label %148

148:                                              ; preds = %4
  %149 = sext i8 %146 to i64
  %150 = add nuw nsw i64 %149, 4294967295
  %151 = and i64 %150, 4294967295
  %152 = shl i64 1, %151
  %153 = add nsw i64 %152, -1
  %154 = sub nsw i64 0, %152
  %155 = sext i32 %144 to i64
  %156 = icmp slt i64 %155, %154
  %157 = icmp slt i64 %153, %155
  %158 = select i1 %157, i64 %153, i64 %155
  %159 = select i1 %156, i64 %154, i64 %158
  %160 = trunc i64 %159 to i32
  br label %161

161:                                              ; preds = %4, %148
  %162 = phi i32 [ %160, %148 ], [ %144, %4 ]
  store i32 %162, i32* %1, align 4
  %163 = load i32, i32* %11, align 4
  %164 = load i32, i32* %15, align 4
  %165 = add nsw i32 %164, %163
  %166 = load i8, i8* %145, align 1
  %167 = icmp slt i8 %166, 1
  br i1 %167, label %181, label %168

168:                                              ; preds = %161
  %169 = sext i8 %166 to i64
  %170 = add nuw nsw i64 %169, 4294967295
  %171 = and i64 %170, 4294967295
  %172 = shl i64 1, %171
  %173 = add nsw i64 %172, -1
  %174 = sub nsw i64 0, %172
  %175 = sext i32 %165 to i64
  %176 = icmp slt i64 %175, %174
  %177 = icmp slt i64 %173, %175
  %178 = select i1 %177, i64 %173, i64 %175
  %179 = select i1 %176, i64 %174, i64 %178
  %180 = trunc i64 %179 to i32
  br label %181

181:                                              ; preds = %161, %168
  %182 = phi i32 [ %180, %168 ], [ %165, %161 ]
  store i32 %182, i32* %23, align 4
  %183 = load i32, i32* %12, align 8
  %184 = load i32, i32* %16, align 8
  %185 = add nsw i32 %184, %183
  %186 = load i8, i8* %145, align 1
  %187 = icmp slt i8 %186, 1
  br i1 %187, label %201, label %188

188:                                              ; preds = %181
  %189 = sext i8 %186 to i64
  %190 = add nuw nsw i64 %189, 4294967295
  %191 = and i64 %190, 4294967295
  %192 = shl i64 1, %191
  %193 = add nsw i64 %192, -1
  %194 = sub nsw i64 0, %192
  %195 = sext i32 %185 to i64
  %196 = icmp slt i64 %195, %194
  %197 = icmp slt i64 %193, %195
  %198 = select i1 %197, i64 %193, i64 %195
  %199 = select i1 %196, i64 %194, i64 %198
  %200 = trunc i64 %199 to i32
  br label %201

201:                                              ; preds = %181, %188
  %202 = phi i32 [ %200, %188 ], [ %185, %181 ]
  store i32 %202, i32* %26, align 4
  %203 = load i32, i32* %13, align 4
  %204 = load i32, i32* %17, align 4
  %205 = add nsw i32 %204, %203
  %206 = load i8, i8* %145, align 1
  %207 = icmp slt i8 %206, 1
  br i1 %207, label %221, label %208

208:                                              ; preds = %201
  %209 = sext i8 %206 to i64
  %210 = add nuw nsw i64 %209, 4294967295
  %211 = and i64 %210, 4294967295
  %212 = shl i64 1, %211
  %213 = add nsw i64 %212, -1
  %214 = sub nsw i64 0, %212
  %215 = sext i32 %205 to i64
  %216 = icmp slt i64 %215, %214
  %217 = icmp slt i64 %213, %215
  %218 = select i1 %217, i64 %213, i64 %215
  %219 = select i1 %216, i64 %214, i64 %218
  %220 = trunc i64 %219 to i32
  br label %221

221:                                              ; preds = %201, %208
  %222 = phi i32 [ %220, %208 ], [ %205, %201 ]
  store i32 %222, i32* %29, align 4
  %223 = sub nsw i32 %142, %143
  %224 = load i8, i8* %145, align 1
  %225 = icmp slt i8 %224, 1
  br i1 %225, label %239, label %226

226:                                              ; preds = %221
  %227 = sext i8 %224 to i64
  %228 = add nuw nsw i64 %227, 4294967295
  %229 = and i64 %228, 4294967295
  %230 = shl i64 1, %229
  %231 = add nsw i64 %230, -1
  %232 = sub nsw i64 0, %230
  %233 = sext i32 %223 to i64
  %234 = icmp slt i64 %233, %232
  %235 = icmp slt i64 %231, %233
  %236 = select i1 %235, i64 %231, i64 %233
  %237 = select i1 %234, i64 %232, i64 %236
  %238 = trunc i64 %237 to i32
  br label %239

239:                                              ; preds = %221, %226
  %240 = phi i32 [ %238, %226 ], [ %223, %221 ]
  store i32 %240, i32* %32, align 4
  %241 = sub nsw i32 %163, %164
  %242 = load i8, i8* %145, align 1
  %243 = icmp slt i8 %242, 1
  br i1 %243, label %257, label %244

244:                                              ; preds = %239
  %245 = sext i8 %242 to i64
  %246 = add nuw nsw i64 %245, 4294967295
  %247 = and i64 %246, 4294967295
  %248 = shl i64 1, %247
  %249 = add nsw i64 %248, -1
  %250 = sub nsw i64 0, %248
  %251 = sext i32 %241 to i64
  %252 = icmp slt i64 %251, %250
  %253 = icmp slt i64 %249, %251
  %254 = select i1 %253, i64 %249, i64 %251
  %255 = select i1 %252, i64 %250, i64 %254
  %256 = trunc i64 %255 to i32
  br label %257

257:                                              ; preds = %239, %244
  %258 = phi i32 [ %256, %244 ], [ %241, %239 ]
  store i32 %258, i32* %35, align 4
  %259 = sub nsw i32 %183, %184
  %260 = load i8, i8* %145, align 1
  %261 = icmp slt i8 %260, 1
  br i1 %261, label %275, label %262

262:                                              ; preds = %257
  %263 = sext i8 %260 to i64
  %264 = add nuw nsw i64 %263, 4294967295
  %265 = and i64 %264, 4294967295
  %266 = shl i64 1, %265
  %267 = add nsw i64 %266, -1
  %268 = sub nsw i64 0, %266
  %269 = sext i32 %259 to i64
  %270 = icmp slt i64 %269, %268
  %271 = icmp slt i64 %267, %269
  %272 = select i1 %271, i64 %267, i64 %269
  %273 = select i1 %270, i64 %268, i64 %272
  %274 = trunc i64 %273 to i32
  br label %275

275:                                              ; preds = %257, %262
  %276 = phi i32 [ %274, %262 ], [ %259, %257 ]
  store i32 %276, i32* %38, align 4
  %277 = sub nsw i32 %203, %204
  %278 = load i8, i8* %145, align 1
  %279 = icmp slt i8 %278, 1
  br i1 %279, label %293, label %280

280:                                              ; preds = %275
  %281 = sext i8 %278 to i64
  %282 = add nuw nsw i64 %281, 4294967295
  %283 = and i64 %282, 4294967295
  %284 = shl i64 1, %283
  %285 = add nsw i64 %284, -1
  %286 = sub nsw i64 0, %284
  %287 = sext i32 %277 to i64
  %288 = icmp slt i64 %287, %286
  %289 = icmp slt i64 %285, %287
  %290 = select i1 %289, i64 %285, i64 %287
  %291 = select i1 %288, i64 %286, i64 %290
  %292 = trunc i64 %291 to i32
  br label %293

293:                                              ; preds = %275, %280
  %294 = phi i32 [ %292, %280 ], [ %277, %275 ]
  store i32 %294, i32* %41, align 4
  %295 = load i8, i8* %145, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 8, i8 signext %295) #4
  %296 = bitcast i32* %1 to <4 x i32>*
  %297 = load <4 x i32>, <4 x i32>* %296, align 4
  %298 = bitcast [8 x i32]* %5 to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %298, align 16
  %299 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %300 = load i32, i32* %299, align 16
  %301 = load i32, i32* %32, align 4
  %302 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %303 = load i32, i32* %302, align 16
  %304 = load i32, i32* %35, align 4
  %305 = mul nsw i32 %301, %300
  %306 = sext i32 %305 to i64
  %307 = mul nsw i32 %304, %303
  %308 = sext i32 %307 to i64
  %309 = add i64 %56, %306
  %310 = add i64 %309, %308
  %311 = ashr i64 %310, %59
  %312 = trunc i64 %311 to i32
  store i32 %312, i32* %14, align 16
  %313 = mul nsw i32 %303, %301
  %314 = sext i32 %313 to i64
  %315 = mul i32 %300, %304
  %316 = sub i32 0, %315
  %317 = sext i32 %316 to i64
  %318 = add i64 %56, %314
  %319 = add i64 %318, %317
  %320 = ashr i64 %319, %59
  %321 = trunc i64 %320 to i32
  store i32 %321, i32* %15, align 4
  %322 = load i32, i32* %38, align 4
  %323 = load i32, i32* %41, align 4
  %324 = mul i32 %303, %322
  %325 = sub i32 0, %324
  %326 = sext i32 %325 to i64
  %327 = mul nsw i32 %323, %300
  %328 = sext i32 %327 to i64
  %329 = add i64 %56, %326
  %330 = add i64 %329, %328
  %331 = ashr i64 %330, %59
  %332 = trunc i64 %331 to i32
  store i32 %332, i32* %16, align 8
  %333 = mul nsw i32 %322, %300
  %334 = sext i32 %333 to i64
  %335 = mul nsw i32 %323, %303
  %336 = sext i32 %335 to i64
  %337 = add i64 %56, %334
  %338 = add i64 %337, %336
  %339 = ashr i64 %338, %59
  %340 = trunc i64 %339 to i32
  store i32 %340, i32* %17, align 4
  %341 = getelementptr inbounds i8, i8* %3, i64 4
  %342 = load i8, i8* %341, align 1
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %10, i32 8, i8 signext %342) #4
  %343 = load i32, i32* %10, align 16
  %344 = load i32, i32* %12, align 8
  %345 = add nsw i32 %344, %343
  %346 = getelementptr inbounds i8, i8* %3, i64 5
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 1
  br i1 %348, label %362, label %349

349:                                              ; preds = %293
  %350 = sext i8 %347 to i64
  %351 = add nuw nsw i64 %350, 4294967295
  %352 = and i64 %351, 4294967295
  %353 = shl i64 1, %352
  %354 = add nsw i64 %353, -1
  %355 = sub nsw i64 0, %353
  %356 = sext i32 %345 to i64
  %357 = icmp slt i64 %356, %355
  %358 = icmp slt i64 %354, %356
  %359 = select i1 %358, i64 %354, i64 %356
  %360 = select i1 %357, i64 %355, i64 %359
  %361 = trunc i64 %360 to i32
  br label %362

362:                                              ; preds = %293, %349
  %363 = phi i32 [ %361, %349 ], [ %345, %293 ]
  store i32 %363, i32* %1, align 4
  %364 = load i32, i32* %11, align 4
  %365 = load i32, i32* %13, align 4
  %366 = add nsw i32 %365, %364
  %367 = load i8, i8* %346, align 1
  %368 = icmp slt i8 %367, 1
  br i1 %368, label %382, label %369

369:                                              ; preds = %362
  %370 = sext i8 %367 to i64
  %371 = add nuw nsw i64 %370, 4294967295
  %372 = and i64 %371, 4294967295
  %373 = shl i64 1, %372
  %374 = add nsw i64 %373, -1
  %375 = sub nsw i64 0, %373
  %376 = sext i32 %366 to i64
  %377 = icmp slt i64 %376, %375
  %378 = icmp slt i64 %374, %376
  %379 = select i1 %378, i64 %374, i64 %376
  %380 = select i1 %377, i64 %375, i64 %379
  %381 = trunc i64 %380 to i32
  br label %382

382:                                              ; preds = %362, %369
  %383 = phi i32 [ %381, %369 ], [ %366, %362 ]
  store i32 %383, i32* %23, align 4
  %384 = sub nsw i32 %343, %344
  %385 = load i8, i8* %346, align 1
  %386 = icmp slt i8 %385, 1
  br i1 %386, label %400, label %387

387:                                              ; preds = %382
  %388 = sext i8 %385 to i64
  %389 = add nuw nsw i64 %388, 4294967295
  %390 = and i64 %389, 4294967295
  %391 = shl i64 1, %390
  %392 = add nsw i64 %391, -1
  %393 = sub nsw i64 0, %391
  %394 = sext i32 %384 to i64
  %395 = icmp slt i64 %394, %393
  %396 = icmp slt i64 %392, %394
  %397 = select i1 %396, i64 %392, i64 %394
  %398 = select i1 %395, i64 %393, i64 %397
  %399 = trunc i64 %398 to i32
  br label %400

400:                                              ; preds = %382, %387
  %401 = phi i32 [ %399, %387 ], [ %384, %382 ]
  store i32 %401, i32* %26, align 4
  %402 = sub nsw i32 %364, %365
  %403 = load i8, i8* %346, align 1
  %404 = icmp slt i8 %403, 1
  br i1 %404, label %418, label %405

405:                                              ; preds = %400
  %406 = sext i8 %403 to i64
  %407 = add nuw nsw i64 %406, 4294967295
  %408 = and i64 %407, 4294967295
  %409 = shl i64 1, %408
  %410 = add nsw i64 %409, -1
  %411 = sub nsw i64 0, %409
  %412 = sext i32 %402 to i64
  %413 = icmp slt i64 %412, %411
  %414 = icmp slt i64 %410, %412
  %415 = select i1 %414, i64 %410, i64 %412
  %416 = select i1 %413, i64 %411, i64 %415
  %417 = trunc i64 %416 to i32
  br label %418

418:                                              ; preds = %400, %405
  %419 = phi i32 [ %417, %405 ], [ %402, %400 ]
  store i32 %419, i32* %29, align 4
  %420 = load i32, i32* %14, align 16
  %421 = load i32, i32* %16, align 8
  %422 = add nsw i32 %421, %420
  %423 = load i8, i8* %346, align 1
  %424 = icmp slt i8 %423, 1
  br i1 %424, label %438, label %425

425:                                              ; preds = %418
  %426 = sext i8 %423 to i64
  %427 = add nuw nsw i64 %426, 4294967295
  %428 = and i64 %427, 4294967295
  %429 = shl i64 1, %428
  %430 = add nsw i64 %429, -1
  %431 = sub nsw i64 0, %429
  %432 = sext i32 %422 to i64
  %433 = icmp slt i64 %432, %431
  %434 = icmp slt i64 %430, %432
  %435 = select i1 %434, i64 %430, i64 %432
  %436 = select i1 %433, i64 %431, i64 %435
  %437 = trunc i64 %436 to i32
  br label %438

438:                                              ; preds = %418, %425
  %439 = phi i32 [ %437, %425 ], [ %422, %418 ]
  store i32 %439, i32* %32, align 4
  %440 = load i32, i32* %15, align 4
  %441 = load i32, i32* %17, align 4
  %442 = add nsw i32 %441, %440
  %443 = load i8, i8* %346, align 1
  %444 = icmp slt i8 %443, 1
  br i1 %444, label %458, label %445

445:                                              ; preds = %438
  %446 = sext i8 %443 to i64
  %447 = add nuw nsw i64 %446, 4294967295
  %448 = and i64 %447, 4294967295
  %449 = shl i64 1, %448
  %450 = add nsw i64 %449, -1
  %451 = sub nsw i64 0, %449
  %452 = sext i32 %442 to i64
  %453 = icmp slt i64 %452, %451
  %454 = icmp slt i64 %450, %452
  %455 = select i1 %454, i64 %450, i64 %452
  %456 = select i1 %453, i64 %451, i64 %455
  %457 = trunc i64 %456 to i32
  br label %458

458:                                              ; preds = %438, %445
  %459 = phi i32 [ %457, %445 ], [ %442, %438 ]
  store i32 %459, i32* %35, align 4
  %460 = sub nsw i32 %420, %421
  %461 = load i8, i8* %346, align 1
  %462 = icmp slt i8 %461, 1
  br i1 %462, label %476, label %463

463:                                              ; preds = %458
  %464 = sext i8 %461 to i64
  %465 = add nuw nsw i64 %464, 4294967295
  %466 = and i64 %465, 4294967295
  %467 = shl i64 1, %466
  %468 = add nsw i64 %467, -1
  %469 = sub nsw i64 0, %467
  %470 = sext i32 %460 to i64
  %471 = icmp slt i64 %470, %469
  %472 = icmp slt i64 %468, %470
  %473 = select i1 %472, i64 %468, i64 %470
  %474 = select i1 %471, i64 %469, i64 %473
  %475 = trunc i64 %474 to i32
  br label %476

476:                                              ; preds = %458, %463
  %477 = phi i32 [ %475, %463 ], [ %460, %458 ]
  store i32 %477, i32* %38, align 4
  %478 = sub nsw i32 %440, %441
  %479 = load i8, i8* %346, align 1
  %480 = icmp slt i8 %479, 1
  br i1 %480, label %494, label %481

481:                                              ; preds = %476
  %482 = sext i8 %479 to i64
  %483 = add nuw nsw i64 %482, 4294967295
  %484 = and i64 %483, 4294967295
  %485 = shl i64 1, %484
  %486 = add nsw i64 %485, -1
  %487 = sub nsw i64 0, %485
  %488 = sext i32 %478 to i64
  %489 = icmp slt i64 %488, %487
  %490 = icmp slt i64 %486, %488
  %491 = select i1 %490, i64 %486, i64 %488
  %492 = select i1 %489, i64 %487, i64 %491
  %493 = trunc i64 %492 to i32
  br label %494

494:                                              ; preds = %476, %481
  %495 = phi i32 [ %493, %481 ], [ %478, %476 ]
  store i32 %495, i32* %41, align 4
  %496 = load i8, i8* %346, align 1
  call void @av1_range_check_buf(i32 5, i32* %0, i32* %1, i32 8, i8 signext %496) #4
  %497 = load i32, i32* %1, align 4
  store i32 %497, i32* %10, align 16
  %498 = load i32, i32* %23, align 4
  store i32 %498, i32* %11, align 4
  %499 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %500 = load i32, i32* %499, align 16
  %501 = load i32, i32* %26, align 4
  %502 = load i32, i32* %29, align 4
  %503 = mul nsw i32 %501, %500
  %504 = sext i32 %503 to i64
  %505 = mul nsw i32 %502, %500
  %506 = sext i32 %505 to i64
  %507 = add i64 %56, %504
  %508 = add i64 %507, %506
  %509 = ashr i64 %508, %59
  %510 = trunc i64 %509 to i32
  store i32 %510, i32* %12, align 8
  %511 = sub nsw i32 0, %500
  %512 = mul nsw i32 %502, %511
  %513 = sext i32 %512 to i64
  %514 = add i64 %507, %513
  %515 = ashr i64 %514, %59
  %516 = trunc i64 %515 to i32
  store i32 %516, i32* %13, align 4
  %517 = load i32, i32* %32, align 4
  store i32 %517, i32* %14, align 16
  %518 = load i32, i32* %35, align 4
  store i32 %518, i32* %15, align 4
  %519 = load i32, i32* %38, align 4
  %520 = load i32, i32* %41, align 4
  %521 = mul nsw i32 %519, %500
  %522 = sext i32 %521 to i64
  %523 = mul nsw i32 %520, %500
  %524 = sext i32 %523 to i64
  %525 = add i64 %56, %522
  %526 = add i64 %525, %524
  %527 = ashr i64 %526, %59
  %528 = trunc i64 %527 to i32
  store i32 %528, i32* %16, align 8
  %529 = mul nsw i32 %520, %511
  %530 = sext i32 %529 to i64
  %531 = add i64 %525, %530
  %532 = ashr i64 %531, %59
  %533 = trunc i64 %532 to i32
  store i32 %533, i32* %17, align 4
  %534 = getelementptr inbounds i8, i8* %3, i64 6
  %535 = load i8, i8* %534, align 1
  call void @av1_range_check_buf(i32 6, i32* %0, i32* nonnull %10, i32 8, i8 signext %535) #4
  %536 = load i32, i32* %10, align 16
  store i32 %536, i32* %1, align 4
  %537 = load i32, i32* %14, align 16
  %538 = sub nsw i32 0, %537
  store i32 %538, i32* %23, align 4
  %539 = load i32, i32* %16, align 8
  store i32 %539, i32* %26, align 4
  %540 = load i32, i32* %12, align 8
  %541 = sub nsw i32 0, %540
  store i32 %541, i32* %29, align 4
  %542 = load i32, i32* %13, align 4
  store i32 %542, i32* %32, align 4
  %543 = load i32, i32* %17, align 4
  %544 = sub nsw i32 0, %543
  store i32 %544, i32* %35, align 4
  %545 = load i32, i32* %15, align 4
  store i32 %545, i32* %38, align 4
  %546 = load i32, i32* %11, align 4
  %547 = sub nsw i32 0, %546
  store i32 %547, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_iadst16(i32*, i32*, i8 signext, i8* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [16 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [16 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds i32, i32* %0, i64 15
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %1, align 4
  %12 = load i32, i32* %0, align 4
  %13 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds i32, i32* %0, i64 13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds i32, i32* %0, i64 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds i32, i32* %0, i64 11
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %0, i64 4
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds i32, i32* %0, i64 9
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i32, i32* %0, i64 6
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds i32, i32* %0, i64 7
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %0, i64 8
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 5
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds i32, i32* %0, i64 10
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i32, i32* %1, i64 11
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i32, i32* %0, i64 3
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i32, i32* %0, i64 12
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds i32, i32* %0, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %0, i64 14
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %3, i64 1
  %57 = load i8, i8* %56, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 16, i8 signext %57) #4
  %58 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 0
  %59 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 2
  %60 = load i32, i32* %59, align 8
  %61 = load i32, i32* %1, align 4
  %62 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 62
  %63 = load i32, i32* %62, align 8
  %64 = load i32, i32* %13, align 4
  %65 = mul nsw i32 %61, %60
  %66 = sext i32 %65 to i64
  %67 = mul nsw i32 %64, %63
  %68 = sext i32 %67 to i64
  %69 = add nsw i32 %6, -1
  %70 = zext i32 %69 to i64
  %71 = shl i64 1, %70
  %72 = add i64 %71, %66
  %73 = add i64 %72, %68
  %74 = zext i32 %6 to i64
  %75 = ashr i64 %73, %74
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %58, align 16
  %77 = mul nsw i32 %63, %61
  %78 = sext i32 %77 to i64
  %79 = mul i32 %60, %64
  %80 = sub i32 0, %79
  %81 = sext i32 %80 to i64
  %82 = add i64 %71, %78
  %83 = add i64 %82, %81
  %84 = ashr i64 %83, %74
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 1
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 10
  %88 = load i32, i32* %87, align 8
  %89 = load i32, i32* %16, align 4
  %90 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 54
  %91 = load i32, i32* %90, align 8
  %92 = load i32, i32* %19, align 4
  %93 = mul nsw i32 %89, %88
  %94 = sext i32 %93 to i64
  %95 = mul nsw i32 %92, %91
  %96 = sext i32 %95 to i64
  %97 = add i64 %71, %94
  %98 = add i64 %97, %96
  %99 = ashr i64 %98, %74
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 2
  store i32 %100, i32* %101, align 8
  %102 = mul nsw i32 %91, %89
  %103 = sext i32 %102 to i64
  %104 = mul i32 %88, %92
  %105 = sub i32 0, %104
  %106 = sext i32 %105 to i64
  %107 = add i64 %71, %103
  %108 = add i64 %107, %106
  %109 = ashr i64 %108, %74
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 3
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 18
  %113 = load i32, i32* %112, align 8
  %114 = load i32, i32* %22, align 4
  %115 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 46
  %116 = load i32, i32* %115, align 8
  %117 = load i32, i32* %25, align 4
  %118 = mul nsw i32 %114, %113
  %119 = sext i32 %118 to i64
  %120 = mul nsw i32 %117, %116
  %121 = sext i32 %120 to i64
  %122 = add i64 %71, %119
  %123 = add i64 %122, %121
  %124 = ashr i64 %123, %74
  %125 = trunc i64 %124 to i32
  %126 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 4
  store i32 %125, i32* %126, align 16
  %127 = mul nsw i32 %116, %114
  %128 = sext i32 %127 to i64
  %129 = mul i32 %113, %117
  %130 = sub i32 0, %129
  %131 = sext i32 %130 to i64
  %132 = add i64 %71, %128
  %133 = add i64 %132, %131
  %134 = ashr i64 %133, %74
  %135 = trunc i64 %134 to i32
  %136 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 5
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 26
  %138 = load i32, i32* %137, align 8
  %139 = load i32, i32* %28, align 4
  %140 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 38
  %141 = load i32, i32* %140, align 8
  %142 = load i32, i32* %31, align 4
  %143 = mul nsw i32 %139, %138
  %144 = sext i32 %143 to i64
  %145 = mul nsw i32 %142, %141
  %146 = sext i32 %145 to i64
  %147 = add i64 %71, %144
  %148 = add i64 %147, %146
  %149 = ashr i64 %148, %74
  %150 = trunc i64 %149 to i32
  %151 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 6
  store i32 %150, i32* %151, align 8
  %152 = mul nsw i32 %141, %139
  %153 = sext i32 %152 to i64
  %154 = mul i32 %138, %142
  %155 = sub i32 0, %154
  %156 = sext i32 %155 to i64
  %157 = add i64 %71, %153
  %158 = add i64 %157, %156
  %159 = ashr i64 %158, %74
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 7
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 34
  %163 = load i32, i32* %162, align 8
  %164 = load i32, i32* %34, align 4
  %165 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 30
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %37, align 4
  %168 = mul nsw i32 %164, %163
  %169 = sext i32 %168 to i64
  %170 = mul nsw i32 %167, %166
  %171 = sext i32 %170 to i64
  %172 = add i64 %71, %169
  %173 = add i64 %172, %171
  %174 = ashr i64 %173, %74
  %175 = trunc i64 %174 to i32
  %176 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 8
  store i32 %175, i32* %176, align 16
  %177 = mul nsw i32 %166, %164
  %178 = sext i32 %177 to i64
  %179 = mul i32 %163, %167
  %180 = sub i32 0, %179
  %181 = sext i32 %180 to i64
  %182 = add i64 %71, %178
  %183 = add i64 %182, %181
  %184 = ashr i64 %183, %74
  %185 = trunc i64 %184 to i32
  %186 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 9
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 42
  %188 = load i32, i32* %187, align 8
  %189 = load i32, i32* %40, align 4
  %190 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 22
  %191 = load i32, i32* %190, align 8
  %192 = load i32, i32* %43, align 4
  %193 = mul nsw i32 %189, %188
  %194 = sext i32 %193 to i64
  %195 = mul nsw i32 %192, %191
  %196 = sext i32 %195 to i64
  %197 = add i64 %71, %194
  %198 = add i64 %197, %196
  %199 = ashr i64 %198, %74
  %200 = trunc i64 %199 to i32
  %201 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 10
  store i32 %200, i32* %201, align 8
  %202 = mul nsw i32 %191, %189
  %203 = sext i32 %202 to i64
  %204 = mul i32 %188, %192
  %205 = sub i32 0, %204
  %206 = sext i32 %205 to i64
  %207 = add i64 %71, %203
  %208 = add i64 %207, %206
  %209 = ashr i64 %208, %74
  %210 = trunc i64 %209 to i32
  %211 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 11
  store i32 %210, i32* %211, align 4
  %212 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 50
  %213 = load i32, i32* %212, align 8
  %214 = load i32, i32* %46, align 4
  %215 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 14
  %216 = load i32, i32* %215, align 8
  %217 = load i32, i32* %49, align 4
  %218 = mul nsw i32 %214, %213
  %219 = sext i32 %218 to i64
  %220 = mul nsw i32 %217, %216
  %221 = sext i32 %220 to i64
  %222 = add i64 %71, %219
  %223 = add i64 %222, %221
  %224 = ashr i64 %223, %74
  %225 = trunc i64 %224 to i32
  %226 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 12
  store i32 %225, i32* %226, align 16
  %227 = mul nsw i32 %216, %214
  %228 = sext i32 %227 to i64
  %229 = mul i32 %213, %217
  %230 = sub i32 0, %229
  %231 = sext i32 %230 to i64
  %232 = add i64 %71, %228
  %233 = add i64 %232, %231
  %234 = ashr i64 %233, %74
  %235 = trunc i64 %234 to i32
  %236 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 13
  store i32 %235, i32* %236, align 4
  %237 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 58
  %238 = load i32, i32* %237, align 8
  %239 = load i32, i32* %52, align 4
  %240 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 6
  %241 = load i32, i32* %240, align 8
  %242 = load i32, i32* %55, align 4
  %243 = mul nsw i32 %239, %238
  %244 = sext i32 %243 to i64
  %245 = mul nsw i32 %242, %241
  %246 = sext i32 %245 to i64
  %247 = add i64 %71, %244
  %248 = add i64 %247, %246
  %249 = ashr i64 %248, %74
  %250 = trunc i64 %249 to i32
  %251 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 14
  store i32 %250, i32* %251, align 8
  %252 = mul nsw i32 %241, %239
  %253 = sext i32 %252 to i64
  %254 = mul i32 %238, %242
  %255 = sub i32 0, %254
  %256 = sext i32 %255 to i64
  %257 = add i64 %71, %253
  %258 = add i64 %257, %256
  %259 = ashr i64 %258, %74
  %260 = trunc i64 %259 to i32
  %261 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 15
  store i32 %260, i32* %261, align 4
  %262 = getelementptr inbounds i8, i8* %3, i64 2
  %263 = load i8, i8* %262, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %58, i32 16, i8 signext %263) #4
  %264 = load i32, i32* %58, align 16
  %265 = load i32, i32* %176, align 16
  %266 = add nsw i32 %265, %264
  %267 = getelementptr inbounds i8, i8* %3, i64 3
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 1
  br i1 %269, label %283, label %270

270:                                              ; preds = %4
  %271 = sext i8 %268 to i64
  %272 = add nuw nsw i64 %271, 4294967295
  %273 = and i64 %272, 4294967295
  %274 = shl i64 1, %273
  %275 = add nsw i64 %274, -1
  %276 = sub nsw i64 0, %274
  %277 = sext i32 %266 to i64
  %278 = icmp slt i64 %277, %276
  %279 = icmp slt i64 %275, %277
  %280 = select i1 %279, i64 %275, i64 %277
  %281 = select i1 %278, i64 %276, i64 %280
  %282 = trunc i64 %281 to i32
  br label %283

283:                                              ; preds = %4, %270
  %284 = phi i32 [ %282, %270 ], [ %266, %4 ]
  store i32 %284, i32* %1, align 4
  %285 = load i32, i32* %86, align 4
  %286 = load i32, i32* %186, align 4
  %287 = add nsw i32 %286, %285
  %288 = load i8, i8* %267, align 1
  %289 = icmp slt i8 %288, 1
  br i1 %289, label %303, label %290

290:                                              ; preds = %283
  %291 = sext i8 %288 to i64
  %292 = add nuw nsw i64 %291, 4294967295
  %293 = and i64 %292, 4294967295
  %294 = shl i64 1, %293
  %295 = add nsw i64 %294, -1
  %296 = sub nsw i64 0, %294
  %297 = sext i32 %287 to i64
  %298 = icmp slt i64 %297, %296
  %299 = icmp slt i64 %295, %297
  %300 = select i1 %299, i64 %295, i64 %297
  %301 = select i1 %298, i64 %296, i64 %300
  %302 = trunc i64 %301 to i32
  br label %303

303:                                              ; preds = %283, %290
  %304 = phi i32 [ %302, %290 ], [ %287, %283 ]
  store i32 %304, i32* %13, align 4
  %305 = load i32, i32* %101, align 8
  %306 = load i32, i32* %201, align 8
  %307 = add nsw i32 %306, %305
  %308 = load i8, i8* %267, align 1
  %309 = icmp slt i8 %308, 1
  br i1 %309, label %323, label %310

310:                                              ; preds = %303
  %311 = sext i8 %308 to i64
  %312 = add nuw nsw i64 %311, 4294967295
  %313 = and i64 %312, 4294967295
  %314 = shl i64 1, %313
  %315 = add nsw i64 %314, -1
  %316 = sub nsw i64 0, %314
  %317 = sext i32 %307 to i64
  %318 = icmp slt i64 %317, %316
  %319 = icmp slt i64 %315, %317
  %320 = select i1 %319, i64 %315, i64 %317
  %321 = select i1 %318, i64 %316, i64 %320
  %322 = trunc i64 %321 to i32
  br label %323

323:                                              ; preds = %303, %310
  %324 = phi i32 [ %322, %310 ], [ %307, %303 ]
  store i32 %324, i32* %16, align 4
  %325 = load i32, i32* %111, align 4
  %326 = load i32, i32* %211, align 4
  %327 = add nsw i32 %326, %325
  %328 = load i8, i8* %267, align 1
  %329 = icmp slt i8 %328, 1
  br i1 %329, label %343, label %330

330:                                              ; preds = %323
  %331 = sext i8 %328 to i64
  %332 = add nuw nsw i64 %331, 4294967295
  %333 = and i64 %332, 4294967295
  %334 = shl i64 1, %333
  %335 = add nsw i64 %334, -1
  %336 = sub nsw i64 0, %334
  %337 = sext i32 %327 to i64
  %338 = icmp slt i64 %337, %336
  %339 = icmp slt i64 %335, %337
  %340 = select i1 %339, i64 %335, i64 %337
  %341 = select i1 %338, i64 %336, i64 %340
  %342 = trunc i64 %341 to i32
  br label %343

343:                                              ; preds = %323, %330
  %344 = phi i32 [ %342, %330 ], [ %327, %323 ]
  store i32 %344, i32* %19, align 4
  %345 = load i32, i32* %126, align 16
  %346 = load i32, i32* %226, align 16
  %347 = add nsw i32 %346, %345
  %348 = load i8, i8* %267, align 1
  %349 = icmp slt i8 %348, 1
  br i1 %349, label %363, label %350

350:                                              ; preds = %343
  %351 = sext i8 %348 to i64
  %352 = add nuw nsw i64 %351, 4294967295
  %353 = and i64 %352, 4294967295
  %354 = shl i64 1, %353
  %355 = add nsw i64 %354, -1
  %356 = sub nsw i64 0, %354
  %357 = sext i32 %347 to i64
  %358 = icmp slt i64 %357, %356
  %359 = icmp slt i64 %355, %357
  %360 = select i1 %359, i64 %355, i64 %357
  %361 = select i1 %358, i64 %356, i64 %360
  %362 = trunc i64 %361 to i32
  br label %363

363:                                              ; preds = %343, %350
  %364 = phi i32 [ %362, %350 ], [ %347, %343 ]
  store i32 %364, i32* %22, align 4
  %365 = load i32, i32* %136, align 4
  %366 = load i32, i32* %236, align 4
  %367 = add nsw i32 %366, %365
  %368 = load i8, i8* %267, align 1
  %369 = icmp slt i8 %368, 1
  br i1 %369, label %383, label %370

370:                                              ; preds = %363
  %371 = sext i8 %368 to i64
  %372 = add nuw nsw i64 %371, 4294967295
  %373 = and i64 %372, 4294967295
  %374 = shl i64 1, %373
  %375 = add nsw i64 %374, -1
  %376 = sub nsw i64 0, %374
  %377 = sext i32 %367 to i64
  %378 = icmp slt i64 %377, %376
  %379 = icmp slt i64 %375, %377
  %380 = select i1 %379, i64 %375, i64 %377
  %381 = select i1 %378, i64 %376, i64 %380
  %382 = trunc i64 %381 to i32
  br label %383

383:                                              ; preds = %363, %370
  %384 = phi i32 [ %382, %370 ], [ %367, %363 ]
  store i32 %384, i32* %25, align 4
  %385 = load i32, i32* %151, align 8
  %386 = load i32, i32* %251, align 8
  %387 = add nsw i32 %386, %385
  %388 = load i8, i8* %267, align 1
  %389 = icmp slt i8 %388, 1
  br i1 %389, label %403, label %390

390:                                              ; preds = %383
  %391 = sext i8 %388 to i64
  %392 = add nuw nsw i64 %391, 4294967295
  %393 = and i64 %392, 4294967295
  %394 = shl i64 1, %393
  %395 = add nsw i64 %394, -1
  %396 = sub nsw i64 0, %394
  %397 = sext i32 %387 to i64
  %398 = icmp slt i64 %397, %396
  %399 = icmp slt i64 %395, %397
  %400 = select i1 %399, i64 %395, i64 %397
  %401 = select i1 %398, i64 %396, i64 %400
  %402 = trunc i64 %401 to i32
  br label %403

403:                                              ; preds = %383, %390
  %404 = phi i32 [ %402, %390 ], [ %387, %383 ]
  store i32 %404, i32* %28, align 4
  %405 = load i32, i32* %161, align 4
  %406 = load i32, i32* %261, align 4
  %407 = add nsw i32 %406, %405
  %408 = load i8, i8* %267, align 1
  %409 = icmp slt i8 %408, 1
  br i1 %409, label %423, label %410

410:                                              ; preds = %403
  %411 = sext i8 %408 to i64
  %412 = add nuw nsw i64 %411, 4294967295
  %413 = and i64 %412, 4294967295
  %414 = shl i64 1, %413
  %415 = add nsw i64 %414, -1
  %416 = sub nsw i64 0, %414
  %417 = sext i32 %407 to i64
  %418 = icmp slt i64 %417, %416
  %419 = icmp slt i64 %415, %417
  %420 = select i1 %419, i64 %415, i64 %417
  %421 = select i1 %418, i64 %416, i64 %420
  %422 = trunc i64 %421 to i32
  br label %423

423:                                              ; preds = %403, %410
  %424 = phi i32 [ %422, %410 ], [ %407, %403 ]
  store i32 %424, i32* %31, align 4
  %425 = sub nsw i32 %264, %265
  %426 = load i8, i8* %267, align 1
  %427 = icmp slt i8 %426, 1
  br i1 %427, label %441, label %428

428:                                              ; preds = %423
  %429 = sext i8 %426 to i64
  %430 = add nuw nsw i64 %429, 4294967295
  %431 = and i64 %430, 4294967295
  %432 = shl i64 1, %431
  %433 = add nsw i64 %432, -1
  %434 = sub nsw i64 0, %432
  %435 = sext i32 %425 to i64
  %436 = icmp slt i64 %435, %434
  %437 = icmp slt i64 %433, %435
  %438 = select i1 %437, i64 %433, i64 %435
  %439 = select i1 %436, i64 %434, i64 %438
  %440 = trunc i64 %439 to i32
  br label %441

441:                                              ; preds = %423, %428
  %442 = phi i32 [ %440, %428 ], [ %425, %423 ]
  store i32 %442, i32* %34, align 4
  %443 = sub nsw i32 %285, %286
  %444 = load i8, i8* %267, align 1
  %445 = icmp slt i8 %444, 1
  br i1 %445, label %459, label %446

446:                                              ; preds = %441
  %447 = sext i8 %444 to i64
  %448 = add nuw nsw i64 %447, 4294967295
  %449 = and i64 %448, 4294967295
  %450 = shl i64 1, %449
  %451 = add nsw i64 %450, -1
  %452 = sub nsw i64 0, %450
  %453 = sext i32 %443 to i64
  %454 = icmp slt i64 %453, %452
  %455 = icmp slt i64 %451, %453
  %456 = select i1 %455, i64 %451, i64 %453
  %457 = select i1 %454, i64 %452, i64 %456
  %458 = trunc i64 %457 to i32
  br label %459

459:                                              ; preds = %441, %446
  %460 = phi i32 [ %458, %446 ], [ %443, %441 ]
  store i32 %460, i32* %37, align 4
  %461 = sub nsw i32 %305, %306
  %462 = load i8, i8* %267, align 1
  %463 = icmp slt i8 %462, 1
  br i1 %463, label %477, label %464

464:                                              ; preds = %459
  %465 = sext i8 %462 to i64
  %466 = add nuw nsw i64 %465, 4294967295
  %467 = and i64 %466, 4294967295
  %468 = shl i64 1, %467
  %469 = add nsw i64 %468, -1
  %470 = sub nsw i64 0, %468
  %471 = sext i32 %461 to i64
  %472 = icmp slt i64 %471, %470
  %473 = icmp slt i64 %469, %471
  %474 = select i1 %473, i64 %469, i64 %471
  %475 = select i1 %472, i64 %470, i64 %474
  %476 = trunc i64 %475 to i32
  br label %477

477:                                              ; preds = %459, %464
  %478 = phi i32 [ %476, %464 ], [ %461, %459 ]
  store i32 %478, i32* %40, align 4
  %479 = sub nsw i32 %325, %326
  %480 = load i8, i8* %267, align 1
  %481 = icmp slt i8 %480, 1
  br i1 %481, label %495, label %482

482:                                              ; preds = %477
  %483 = sext i8 %480 to i64
  %484 = add nuw nsw i64 %483, 4294967295
  %485 = and i64 %484, 4294967295
  %486 = shl i64 1, %485
  %487 = add nsw i64 %486, -1
  %488 = sub nsw i64 0, %486
  %489 = sext i32 %479 to i64
  %490 = icmp slt i64 %489, %488
  %491 = icmp slt i64 %487, %489
  %492 = select i1 %491, i64 %487, i64 %489
  %493 = select i1 %490, i64 %488, i64 %492
  %494 = trunc i64 %493 to i32
  br label %495

495:                                              ; preds = %477, %482
  %496 = phi i32 [ %494, %482 ], [ %479, %477 ]
  store i32 %496, i32* %43, align 4
  %497 = sub nsw i32 %345, %346
  %498 = load i8, i8* %267, align 1
  %499 = icmp slt i8 %498, 1
  br i1 %499, label %513, label %500

500:                                              ; preds = %495
  %501 = sext i8 %498 to i64
  %502 = add nuw nsw i64 %501, 4294967295
  %503 = and i64 %502, 4294967295
  %504 = shl i64 1, %503
  %505 = add nsw i64 %504, -1
  %506 = sub nsw i64 0, %504
  %507 = sext i32 %497 to i64
  %508 = icmp slt i64 %507, %506
  %509 = icmp slt i64 %505, %507
  %510 = select i1 %509, i64 %505, i64 %507
  %511 = select i1 %508, i64 %506, i64 %510
  %512 = trunc i64 %511 to i32
  br label %513

513:                                              ; preds = %495, %500
  %514 = phi i32 [ %512, %500 ], [ %497, %495 ]
  store i32 %514, i32* %46, align 4
  %515 = sub nsw i32 %365, %366
  %516 = load i8, i8* %267, align 1
  %517 = icmp slt i8 %516, 1
  br i1 %517, label %531, label %518

518:                                              ; preds = %513
  %519 = sext i8 %516 to i64
  %520 = add nuw nsw i64 %519, 4294967295
  %521 = and i64 %520, 4294967295
  %522 = shl i64 1, %521
  %523 = add nsw i64 %522, -1
  %524 = sub nsw i64 0, %522
  %525 = sext i32 %515 to i64
  %526 = icmp slt i64 %525, %524
  %527 = icmp slt i64 %523, %525
  %528 = select i1 %527, i64 %523, i64 %525
  %529 = select i1 %526, i64 %524, i64 %528
  %530 = trunc i64 %529 to i32
  br label %531

531:                                              ; preds = %513, %518
  %532 = phi i32 [ %530, %518 ], [ %515, %513 ]
  store i32 %532, i32* %49, align 4
  %533 = sub nsw i32 %385, %386
  %534 = load i8, i8* %267, align 1
  %535 = icmp slt i8 %534, 1
  br i1 %535, label %549, label %536

536:                                              ; preds = %531
  %537 = sext i8 %534 to i64
  %538 = add nuw nsw i64 %537, 4294967295
  %539 = and i64 %538, 4294967295
  %540 = shl i64 1, %539
  %541 = add nsw i64 %540, -1
  %542 = sub nsw i64 0, %540
  %543 = sext i32 %533 to i64
  %544 = icmp slt i64 %543, %542
  %545 = icmp slt i64 %541, %543
  %546 = select i1 %545, i64 %541, i64 %543
  %547 = select i1 %544, i64 %542, i64 %546
  %548 = trunc i64 %547 to i32
  br label %549

549:                                              ; preds = %531, %536
  %550 = phi i32 [ %548, %536 ], [ %533, %531 ]
  store i32 %550, i32* %52, align 4
  %551 = sub nsw i32 %405, %406
  %552 = load i8, i8* %267, align 1
  %553 = icmp slt i8 %552, 1
  br i1 %553, label %567, label %554

554:                                              ; preds = %549
  %555 = sext i8 %552 to i64
  %556 = add nuw nsw i64 %555, 4294967295
  %557 = and i64 %556, 4294967295
  %558 = shl i64 1, %557
  %559 = add nsw i64 %558, -1
  %560 = sub nsw i64 0, %558
  %561 = sext i32 %551 to i64
  %562 = icmp slt i64 %561, %560
  %563 = icmp slt i64 %559, %561
  %564 = select i1 %563, i64 %559, i64 %561
  %565 = select i1 %562, i64 %560, i64 %564
  %566 = trunc i64 %565 to i32
  br label %567

567:                                              ; preds = %549, %554
  %568 = phi i32 [ %566, %554 ], [ %551, %549 ]
  store i32 %568, i32* %55, align 4
  %569 = load i8, i8* %267, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 16, i8 signext %569) #4
  %570 = bitcast i32* %1 to <4 x i32>*
  %571 = load <4 x i32>, <4 x i32>* %570, align 4
  %572 = bitcast [16 x i32]* %5 to <4 x i32>*
  store <4 x i32> %571, <4 x i32>* %572, align 16
  %573 = bitcast i32* %22 to <4 x i32>*
  %574 = load <4 x i32>, <4 x i32>* %573, align 4
  %575 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %574, <4 x i32>* %575, align 16
  %576 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 8
  %577 = load i32, i32* %576, align 16
  %578 = load i32, i32* %34, align 4
  %579 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 56
  %580 = load i32, i32* %579, align 16
  %581 = load i32, i32* %37, align 4
  %582 = mul nsw i32 %578, %577
  %583 = sext i32 %582 to i64
  %584 = mul nsw i32 %581, %580
  %585 = sext i32 %584 to i64
  %586 = add i64 %71, %583
  %587 = add i64 %586, %585
  %588 = ashr i64 %587, %74
  %589 = trunc i64 %588 to i32
  store i32 %589, i32* %176, align 16
  %590 = mul nsw i32 %580, %578
  %591 = sext i32 %590 to i64
  %592 = mul i32 %577, %581
  %593 = sub i32 0, %592
  %594 = sext i32 %593 to i64
  %595 = add i64 %71, %591
  %596 = add i64 %595, %594
  %597 = ashr i64 %596, %74
  %598 = trunc i64 %597 to i32
  store i32 %598, i32* %186, align 4
  %599 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 40
  %600 = load i32, i32* %599, align 16
  %601 = load i32, i32* %40, align 4
  %602 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 24
  %603 = load i32, i32* %602, align 16
  %604 = load i32, i32* %43, align 4
  %605 = mul nsw i32 %601, %600
  %606 = sext i32 %605 to i64
  %607 = mul nsw i32 %604, %603
  %608 = sext i32 %607 to i64
  %609 = add i64 %71, %606
  %610 = add i64 %609, %608
  %611 = ashr i64 %610, %74
  %612 = trunc i64 %611 to i32
  store i32 %612, i32* %201, align 8
  %613 = mul nsw i32 %603, %601
  %614 = sext i32 %613 to i64
  %615 = mul i32 %600, %604
  %616 = sub i32 0, %615
  %617 = sext i32 %616 to i64
  %618 = add i64 %71, %614
  %619 = add i64 %618, %617
  %620 = ashr i64 %619, %74
  %621 = trunc i64 %620 to i32
  store i32 %621, i32* %211, align 4
  %622 = load i32, i32* %46, align 4
  %623 = load i32, i32* %49, align 4
  %624 = mul i32 %580, %622
  %625 = sub i32 0, %624
  %626 = sext i32 %625 to i64
  %627 = mul nsw i32 %623, %577
  %628 = sext i32 %627 to i64
  %629 = add i64 %71, %626
  %630 = add i64 %629, %628
  %631 = ashr i64 %630, %74
  %632 = trunc i64 %631 to i32
  store i32 %632, i32* %226, align 16
  %633 = mul nsw i32 %622, %577
  %634 = sext i32 %633 to i64
  %635 = mul nsw i32 %623, %580
  %636 = sext i32 %635 to i64
  %637 = add i64 %71, %634
  %638 = add i64 %637, %636
  %639 = ashr i64 %638, %74
  %640 = trunc i64 %639 to i32
  store i32 %640, i32* %236, align 4
  %641 = load i32, i32* %52, align 4
  %642 = load i32, i32* %55, align 4
  %643 = mul i32 %603, %641
  %644 = sub i32 0, %643
  %645 = sext i32 %644 to i64
  %646 = mul nsw i32 %642, %600
  %647 = sext i32 %646 to i64
  %648 = add i64 %71, %645
  %649 = add i64 %648, %647
  %650 = ashr i64 %649, %74
  %651 = trunc i64 %650 to i32
  store i32 %651, i32* %251, align 8
  %652 = mul nsw i32 %641, %600
  %653 = sext i32 %652 to i64
  %654 = mul nsw i32 %642, %603
  %655 = sext i32 %654 to i64
  %656 = add i64 %71, %653
  %657 = add i64 %656, %655
  %658 = ashr i64 %657, %74
  %659 = trunc i64 %658 to i32
  store i32 %659, i32* %261, align 4
  %660 = getelementptr inbounds i8, i8* %3, i64 4
  %661 = load i8, i8* %660, align 1
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %58, i32 16, i8 signext %661) #4
  %662 = load i32, i32* %58, align 16
  %663 = load i32, i32* %126, align 16
  %664 = add nsw i32 %663, %662
  %665 = getelementptr inbounds i8, i8* %3, i64 5
  %666 = load i8, i8* %665, align 1
  %667 = icmp slt i8 %666, 1
  br i1 %667, label %681, label %668

668:                                              ; preds = %567
  %669 = sext i8 %666 to i64
  %670 = add nuw nsw i64 %669, 4294967295
  %671 = and i64 %670, 4294967295
  %672 = shl i64 1, %671
  %673 = add nsw i64 %672, -1
  %674 = sub nsw i64 0, %672
  %675 = sext i32 %664 to i64
  %676 = icmp slt i64 %675, %674
  %677 = icmp slt i64 %673, %675
  %678 = select i1 %677, i64 %673, i64 %675
  %679 = select i1 %676, i64 %674, i64 %678
  %680 = trunc i64 %679 to i32
  br label %681

681:                                              ; preds = %567, %668
  %682 = phi i32 [ %680, %668 ], [ %664, %567 ]
  store i32 %682, i32* %1, align 4
  %683 = load i32, i32* %86, align 4
  %684 = load i32, i32* %136, align 4
  %685 = add nsw i32 %684, %683
  %686 = load i8, i8* %665, align 1
  %687 = icmp slt i8 %686, 1
  br i1 %687, label %701, label %688

688:                                              ; preds = %681
  %689 = sext i8 %686 to i64
  %690 = add nuw nsw i64 %689, 4294967295
  %691 = and i64 %690, 4294967295
  %692 = shl i64 1, %691
  %693 = add nsw i64 %692, -1
  %694 = sub nsw i64 0, %692
  %695 = sext i32 %685 to i64
  %696 = icmp slt i64 %695, %694
  %697 = icmp slt i64 %693, %695
  %698 = select i1 %697, i64 %693, i64 %695
  %699 = select i1 %696, i64 %694, i64 %698
  %700 = trunc i64 %699 to i32
  br label %701

701:                                              ; preds = %681, %688
  %702 = phi i32 [ %700, %688 ], [ %685, %681 ]
  store i32 %702, i32* %13, align 4
  %703 = load i32, i32* %101, align 8
  %704 = load i32, i32* %151, align 8
  %705 = add nsw i32 %704, %703
  %706 = load i8, i8* %665, align 1
  %707 = icmp slt i8 %706, 1
  br i1 %707, label %721, label %708

708:                                              ; preds = %701
  %709 = sext i8 %706 to i64
  %710 = add nuw nsw i64 %709, 4294967295
  %711 = and i64 %710, 4294967295
  %712 = shl i64 1, %711
  %713 = add nsw i64 %712, -1
  %714 = sub nsw i64 0, %712
  %715 = sext i32 %705 to i64
  %716 = icmp slt i64 %715, %714
  %717 = icmp slt i64 %713, %715
  %718 = select i1 %717, i64 %713, i64 %715
  %719 = select i1 %716, i64 %714, i64 %718
  %720 = trunc i64 %719 to i32
  br label %721

721:                                              ; preds = %701, %708
  %722 = phi i32 [ %720, %708 ], [ %705, %701 ]
  store i32 %722, i32* %16, align 4
  %723 = load i32, i32* %111, align 4
  %724 = load i32, i32* %161, align 4
  %725 = add nsw i32 %724, %723
  %726 = load i8, i8* %665, align 1
  %727 = icmp slt i8 %726, 1
  br i1 %727, label %741, label %728

728:                                              ; preds = %721
  %729 = sext i8 %726 to i64
  %730 = add nuw nsw i64 %729, 4294967295
  %731 = and i64 %730, 4294967295
  %732 = shl i64 1, %731
  %733 = add nsw i64 %732, -1
  %734 = sub nsw i64 0, %732
  %735 = sext i32 %725 to i64
  %736 = icmp slt i64 %735, %734
  %737 = icmp slt i64 %733, %735
  %738 = select i1 %737, i64 %733, i64 %735
  %739 = select i1 %736, i64 %734, i64 %738
  %740 = trunc i64 %739 to i32
  br label %741

741:                                              ; preds = %721, %728
  %742 = phi i32 [ %740, %728 ], [ %725, %721 ]
  store i32 %742, i32* %19, align 4
  %743 = sub nsw i32 %662, %663
  %744 = load i8, i8* %665, align 1
  %745 = icmp slt i8 %744, 1
  br i1 %745, label %759, label %746

746:                                              ; preds = %741
  %747 = sext i8 %744 to i64
  %748 = add nuw nsw i64 %747, 4294967295
  %749 = and i64 %748, 4294967295
  %750 = shl i64 1, %749
  %751 = add nsw i64 %750, -1
  %752 = sub nsw i64 0, %750
  %753 = sext i32 %743 to i64
  %754 = icmp slt i64 %753, %752
  %755 = icmp slt i64 %751, %753
  %756 = select i1 %755, i64 %751, i64 %753
  %757 = select i1 %754, i64 %752, i64 %756
  %758 = trunc i64 %757 to i32
  br label %759

759:                                              ; preds = %741, %746
  %760 = phi i32 [ %758, %746 ], [ %743, %741 ]
  store i32 %760, i32* %22, align 4
  %761 = sub nsw i32 %683, %684
  %762 = load i8, i8* %665, align 1
  %763 = icmp slt i8 %762, 1
  br i1 %763, label %777, label %764

764:                                              ; preds = %759
  %765 = sext i8 %762 to i64
  %766 = add nuw nsw i64 %765, 4294967295
  %767 = and i64 %766, 4294967295
  %768 = shl i64 1, %767
  %769 = add nsw i64 %768, -1
  %770 = sub nsw i64 0, %768
  %771 = sext i32 %761 to i64
  %772 = icmp slt i64 %771, %770
  %773 = icmp slt i64 %769, %771
  %774 = select i1 %773, i64 %769, i64 %771
  %775 = select i1 %772, i64 %770, i64 %774
  %776 = trunc i64 %775 to i32
  br label %777

777:                                              ; preds = %759, %764
  %778 = phi i32 [ %776, %764 ], [ %761, %759 ]
  store i32 %778, i32* %25, align 4
  %779 = sub nsw i32 %703, %704
  %780 = load i8, i8* %665, align 1
  %781 = icmp slt i8 %780, 1
  br i1 %781, label %795, label %782

782:                                              ; preds = %777
  %783 = sext i8 %780 to i64
  %784 = add nuw nsw i64 %783, 4294967295
  %785 = and i64 %784, 4294967295
  %786 = shl i64 1, %785
  %787 = add nsw i64 %786, -1
  %788 = sub nsw i64 0, %786
  %789 = sext i32 %779 to i64
  %790 = icmp slt i64 %789, %788
  %791 = icmp slt i64 %787, %789
  %792 = select i1 %791, i64 %787, i64 %789
  %793 = select i1 %790, i64 %788, i64 %792
  %794 = trunc i64 %793 to i32
  br label %795

795:                                              ; preds = %777, %782
  %796 = phi i32 [ %794, %782 ], [ %779, %777 ]
  store i32 %796, i32* %28, align 4
  %797 = sub nsw i32 %723, %724
  %798 = load i8, i8* %665, align 1
  %799 = icmp slt i8 %798, 1
  br i1 %799, label %813, label %800

800:                                              ; preds = %795
  %801 = sext i8 %798 to i64
  %802 = add nuw nsw i64 %801, 4294967295
  %803 = and i64 %802, 4294967295
  %804 = shl i64 1, %803
  %805 = add nsw i64 %804, -1
  %806 = sub nsw i64 0, %804
  %807 = sext i32 %797 to i64
  %808 = icmp slt i64 %807, %806
  %809 = icmp slt i64 %805, %807
  %810 = select i1 %809, i64 %805, i64 %807
  %811 = select i1 %808, i64 %806, i64 %810
  %812 = trunc i64 %811 to i32
  br label %813

813:                                              ; preds = %795, %800
  %814 = phi i32 [ %812, %800 ], [ %797, %795 ]
  store i32 %814, i32* %31, align 4
  %815 = load i32, i32* %176, align 16
  %816 = load i32, i32* %226, align 16
  %817 = add nsw i32 %816, %815
  %818 = load i8, i8* %665, align 1
  %819 = icmp slt i8 %818, 1
  br i1 %819, label %833, label %820

820:                                              ; preds = %813
  %821 = sext i8 %818 to i64
  %822 = add nuw nsw i64 %821, 4294967295
  %823 = and i64 %822, 4294967295
  %824 = shl i64 1, %823
  %825 = add nsw i64 %824, -1
  %826 = sub nsw i64 0, %824
  %827 = sext i32 %817 to i64
  %828 = icmp slt i64 %827, %826
  %829 = icmp slt i64 %825, %827
  %830 = select i1 %829, i64 %825, i64 %827
  %831 = select i1 %828, i64 %826, i64 %830
  %832 = trunc i64 %831 to i32
  br label %833

833:                                              ; preds = %813, %820
  %834 = phi i32 [ %832, %820 ], [ %817, %813 ]
  store i32 %834, i32* %34, align 4
  %835 = load i32, i32* %186, align 4
  %836 = load i32, i32* %236, align 4
  %837 = add nsw i32 %836, %835
  %838 = load i8, i8* %665, align 1
  %839 = icmp slt i8 %838, 1
  br i1 %839, label %853, label %840

840:                                              ; preds = %833
  %841 = sext i8 %838 to i64
  %842 = add nuw nsw i64 %841, 4294967295
  %843 = and i64 %842, 4294967295
  %844 = shl i64 1, %843
  %845 = add nsw i64 %844, -1
  %846 = sub nsw i64 0, %844
  %847 = sext i32 %837 to i64
  %848 = icmp slt i64 %847, %846
  %849 = icmp slt i64 %845, %847
  %850 = select i1 %849, i64 %845, i64 %847
  %851 = select i1 %848, i64 %846, i64 %850
  %852 = trunc i64 %851 to i32
  br label %853

853:                                              ; preds = %833, %840
  %854 = phi i32 [ %852, %840 ], [ %837, %833 ]
  store i32 %854, i32* %37, align 4
  %855 = load i32, i32* %201, align 8
  %856 = load i32, i32* %251, align 8
  %857 = add nsw i32 %856, %855
  %858 = load i8, i8* %665, align 1
  %859 = icmp slt i8 %858, 1
  br i1 %859, label %873, label %860

860:                                              ; preds = %853
  %861 = sext i8 %858 to i64
  %862 = add nuw nsw i64 %861, 4294967295
  %863 = and i64 %862, 4294967295
  %864 = shl i64 1, %863
  %865 = add nsw i64 %864, -1
  %866 = sub nsw i64 0, %864
  %867 = sext i32 %857 to i64
  %868 = icmp slt i64 %867, %866
  %869 = icmp slt i64 %865, %867
  %870 = select i1 %869, i64 %865, i64 %867
  %871 = select i1 %868, i64 %866, i64 %870
  %872 = trunc i64 %871 to i32
  br label %873

873:                                              ; preds = %853, %860
  %874 = phi i32 [ %872, %860 ], [ %857, %853 ]
  store i32 %874, i32* %40, align 4
  %875 = load i32, i32* %211, align 4
  %876 = load i32, i32* %261, align 4
  %877 = add nsw i32 %876, %875
  %878 = load i8, i8* %665, align 1
  %879 = icmp slt i8 %878, 1
  br i1 %879, label %893, label %880

880:                                              ; preds = %873
  %881 = sext i8 %878 to i64
  %882 = add nuw nsw i64 %881, 4294967295
  %883 = and i64 %882, 4294967295
  %884 = shl i64 1, %883
  %885 = add nsw i64 %884, -1
  %886 = sub nsw i64 0, %884
  %887 = sext i32 %877 to i64
  %888 = icmp slt i64 %887, %886
  %889 = icmp slt i64 %885, %887
  %890 = select i1 %889, i64 %885, i64 %887
  %891 = select i1 %888, i64 %886, i64 %890
  %892 = trunc i64 %891 to i32
  br label %893

893:                                              ; preds = %873, %880
  %894 = phi i32 [ %892, %880 ], [ %877, %873 ]
  store i32 %894, i32* %43, align 4
  %895 = sub nsw i32 %815, %816
  %896 = load i8, i8* %665, align 1
  %897 = icmp slt i8 %896, 1
  br i1 %897, label %911, label %898

898:                                              ; preds = %893
  %899 = sext i8 %896 to i64
  %900 = add nuw nsw i64 %899, 4294967295
  %901 = and i64 %900, 4294967295
  %902 = shl i64 1, %901
  %903 = add nsw i64 %902, -1
  %904 = sub nsw i64 0, %902
  %905 = sext i32 %895 to i64
  %906 = icmp slt i64 %905, %904
  %907 = icmp slt i64 %903, %905
  %908 = select i1 %907, i64 %903, i64 %905
  %909 = select i1 %906, i64 %904, i64 %908
  %910 = trunc i64 %909 to i32
  br label %911

911:                                              ; preds = %893, %898
  %912 = phi i32 [ %910, %898 ], [ %895, %893 ]
  store i32 %912, i32* %46, align 4
  %913 = sub nsw i32 %835, %836
  %914 = load i8, i8* %665, align 1
  %915 = icmp slt i8 %914, 1
  br i1 %915, label %929, label %916

916:                                              ; preds = %911
  %917 = sext i8 %914 to i64
  %918 = add nuw nsw i64 %917, 4294967295
  %919 = and i64 %918, 4294967295
  %920 = shl i64 1, %919
  %921 = add nsw i64 %920, -1
  %922 = sub nsw i64 0, %920
  %923 = sext i32 %913 to i64
  %924 = icmp slt i64 %923, %922
  %925 = icmp slt i64 %921, %923
  %926 = select i1 %925, i64 %921, i64 %923
  %927 = select i1 %924, i64 %922, i64 %926
  %928 = trunc i64 %927 to i32
  br label %929

929:                                              ; preds = %911, %916
  %930 = phi i32 [ %928, %916 ], [ %913, %911 ]
  store i32 %930, i32* %49, align 4
  %931 = sub nsw i32 %855, %856
  %932 = load i8, i8* %665, align 1
  %933 = icmp slt i8 %932, 1
  br i1 %933, label %947, label %934

934:                                              ; preds = %929
  %935 = sext i8 %932 to i64
  %936 = add nuw nsw i64 %935, 4294967295
  %937 = and i64 %936, 4294967295
  %938 = shl i64 1, %937
  %939 = add nsw i64 %938, -1
  %940 = sub nsw i64 0, %938
  %941 = sext i32 %931 to i64
  %942 = icmp slt i64 %941, %940
  %943 = icmp slt i64 %939, %941
  %944 = select i1 %943, i64 %939, i64 %941
  %945 = select i1 %942, i64 %940, i64 %944
  %946 = trunc i64 %945 to i32
  br label %947

947:                                              ; preds = %929, %934
  %948 = phi i32 [ %946, %934 ], [ %931, %929 ]
  store i32 %948, i32* %52, align 4
  %949 = sub nsw i32 %875, %876
  %950 = load i8, i8* %665, align 1
  %951 = icmp slt i8 %950, 1
  br i1 %951, label %965, label %952

952:                                              ; preds = %947
  %953 = sext i8 %950 to i64
  %954 = add nuw nsw i64 %953, 4294967295
  %955 = and i64 %954, 4294967295
  %956 = shl i64 1, %955
  %957 = add nsw i64 %956, -1
  %958 = sub nsw i64 0, %956
  %959 = sext i32 %949 to i64
  %960 = icmp slt i64 %959, %958
  %961 = icmp slt i64 %957, %959
  %962 = select i1 %961, i64 %957, i64 %959
  %963 = select i1 %960, i64 %958, i64 %962
  %964 = trunc i64 %963 to i32
  br label %965

965:                                              ; preds = %947, %952
  %966 = phi i32 [ %964, %952 ], [ %949, %947 ]
  store i32 %966, i32* %55, align 4
  %967 = load i8, i8* %665, align 1
  call void @av1_range_check_buf(i32 5, i32* %0, i32* %1, i32 16, i8 signext %967) #4
  %968 = bitcast i32* %1 to <4 x i32>*
  %969 = load <4 x i32>, <4 x i32>* %968, align 4
  %970 = bitcast [16 x i32]* %5 to <4 x i32>*
  store <4 x i32> %969, <4 x i32>* %970, align 16
  %971 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %972 = load i32, i32* %971, align 16
  %973 = load i32, i32* %22, align 4
  %974 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %975 = load i32, i32* %974, align 16
  %976 = load i32, i32* %25, align 4
  %977 = mul nsw i32 %973, %972
  %978 = sext i32 %977 to i64
  %979 = mul nsw i32 %976, %975
  %980 = sext i32 %979 to i64
  %981 = add i64 %71, %978
  %982 = add i64 %981, %980
  %983 = ashr i64 %982, %74
  %984 = trunc i64 %983 to i32
  store i32 %984, i32* %126, align 16
  %985 = sub nsw i32 0, %972
  %986 = mul nsw i32 %975, %973
  %987 = sext i32 %986 to i64
  %988 = mul nsw i32 %976, %985
  %989 = sext i32 %988 to i64
  %990 = add i64 %71, %987
  %991 = add i64 %990, %989
  %992 = ashr i64 %991, %74
  %993 = trunc i64 %992 to i32
  store i32 %993, i32* %136, align 4
  %994 = sub nsw i32 0, %975
  %995 = load i32, i32* %28, align 4
  %996 = load i32, i32* %31, align 4
  %997 = mul nsw i32 %995, %994
  %998 = sext i32 %997 to i64
  %999 = mul nsw i32 %996, %972
  %1000 = sext i32 %999 to i64
  %1001 = add i64 %71, %998
  %1002 = add i64 %1001, %1000
  %1003 = ashr i64 %1002, %74
  %1004 = trunc i64 %1003 to i32
  store i32 %1004, i32* %151, align 8
  %1005 = mul nsw i32 %995, %972
  %1006 = sext i32 %1005 to i64
  %1007 = mul nsw i32 %996, %975
  %1008 = sext i32 %1007 to i64
  %1009 = add i64 %71, %1006
  %1010 = add i64 %1009, %1008
  %1011 = ashr i64 %1010, %74
  %1012 = trunc i64 %1011 to i32
  store i32 %1012, i32* %161, align 4
  %1013 = bitcast i32* %34 to <4 x i32>*
  %1014 = load <4 x i32>, <4 x i32>* %1013, align 4
  %1015 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %1014, <4 x i32>* %1015, align 16
  %1016 = load i32, i32* %46, align 4
  %1017 = load i32, i32* %49, align 4
  %1018 = mul nsw i32 %1016, %972
  %1019 = sext i32 %1018 to i64
  %1020 = mul nsw i32 %1017, %975
  %1021 = sext i32 %1020 to i64
  %1022 = add i64 %71, %1019
  %1023 = add i64 %1022, %1021
  %1024 = ashr i64 %1023, %74
  %1025 = trunc i64 %1024 to i32
  store i32 %1025, i32* %226, align 16
  %1026 = mul nsw i32 %1016, %975
  %1027 = sext i32 %1026 to i64
  %1028 = mul nsw i32 %1017, %985
  %1029 = sext i32 %1028 to i64
  %1030 = add i64 %71, %1027
  %1031 = add i64 %1030, %1029
  %1032 = ashr i64 %1031, %74
  %1033 = trunc i64 %1032 to i32
  store i32 %1033, i32* %236, align 4
  %1034 = load i32, i32* %52, align 4
  %1035 = load i32, i32* %55, align 4
  %1036 = mul nsw i32 %1034, %994
  %1037 = sext i32 %1036 to i64
  %1038 = mul nsw i32 %1035, %972
  %1039 = sext i32 %1038 to i64
  %1040 = add i64 %71, %1037
  %1041 = add i64 %1040, %1039
  %1042 = ashr i64 %1041, %74
  %1043 = trunc i64 %1042 to i32
  store i32 %1043, i32* %251, align 8
  %1044 = mul nsw i32 %1034, %972
  %1045 = sext i32 %1044 to i64
  %1046 = mul nsw i32 %1035, %975
  %1047 = sext i32 %1046 to i64
  %1048 = add i64 %71, %1045
  %1049 = add i64 %1048, %1047
  %1050 = ashr i64 %1049, %74
  %1051 = trunc i64 %1050 to i32
  store i32 %1051, i32* %261, align 4
  %1052 = getelementptr inbounds i8, i8* %3, i64 6
  %1053 = load i8, i8* %1052, align 1
  call void @av1_range_check_buf(i32 6, i32* %0, i32* nonnull %58, i32 16, i8 signext %1053) #4
  %1054 = load i32, i32* %58, align 16
  %1055 = load i32, i32* %101, align 8
  %1056 = add nsw i32 %1055, %1054
  %1057 = getelementptr inbounds i8, i8* %3, i64 7
  %1058 = load i8, i8* %1057, align 1
  %1059 = icmp slt i8 %1058, 1
  br i1 %1059, label %1073, label %1060

1060:                                             ; preds = %965
  %1061 = sext i8 %1058 to i64
  %1062 = add nuw nsw i64 %1061, 4294967295
  %1063 = and i64 %1062, 4294967295
  %1064 = shl i64 1, %1063
  %1065 = add nsw i64 %1064, -1
  %1066 = sub nsw i64 0, %1064
  %1067 = sext i32 %1056 to i64
  %1068 = icmp slt i64 %1067, %1066
  %1069 = icmp slt i64 %1065, %1067
  %1070 = select i1 %1069, i64 %1065, i64 %1067
  %1071 = select i1 %1068, i64 %1066, i64 %1070
  %1072 = trunc i64 %1071 to i32
  br label %1073

1073:                                             ; preds = %965, %1060
  %1074 = phi i32 [ %1072, %1060 ], [ %1056, %965 ]
  store i32 %1074, i32* %1, align 4
  %1075 = load i32, i32* %86, align 4
  %1076 = load i32, i32* %111, align 4
  %1077 = add nsw i32 %1076, %1075
  %1078 = load i8, i8* %1057, align 1
  %1079 = icmp slt i8 %1078, 1
  br i1 %1079, label %1093, label %1080

1080:                                             ; preds = %1073
  %1081 = sext i8 %1078 to i64
  %1082 = add nuw nsw i64 %1081, 4294967295
  %1083 = and i64 %1082, 4294967295
  %1084 = shl i64 1, %1083
  %1085 = add nsw i64 %1084, -1
  %1086 = sub nsw i64 0, %1084
  %1087 = sext i32 %1077 to i64
  %1088 = icmp slt i64 %1087, %1086
  %1089 = icmp slt i64 %1085, %1087
  %1090 = select i1 %1089, i64 %1085, i64 %1087
  %1091 = select i1 %1088, i64 %1086, i64 %1090
  %1092 = trunc i64 %1091 to i32
  br label %1093

1093:                                             ; preds = %1073, %1080
  %1094 = phi i32 [ %1092, %1080 ], [ %1077, %1073 ]
  store i32 %1094, i32* %13, align 4
  %1095 = sub nsw i32 %1054, %1055
  %1096 = load i8, i8* %1057, align 1
  %1097 = icmp slt i8 %1096, 1
  br i1 %1097, label %1111, label %1098

1098:                                             ; preds = %1093
  %1099 = sext i8 %1096 to i64
  %1100 = add nuw nsw i64 %1099, 4294967295
  %1101 = and i64 %1100, 4294967295
  %1102 = shl i64 1, %1101
  %1103 = add nsw i64 %1102, -1
  %1104 = sub nsw i64 0, %1102
  %1105 = sext i32 %1095 to i64
  %1106 = icmp slt i64 %1105, %1104
  %1107 = icmp slt i64 %1103, %1105
  %1108 = select i1 %1107, i64 %1103, i64 %1105
  %1109 = select i1 %1106, i64 %1104, i64 %1108
  %1110 = trunc i64 %1109 to i32
  br label %1111

1111:                                             ; preds = %1093, %1098
  %1112 = phi i32 [ %1110, %1098 ], [ %1095, %1093 ]
  store i32 %1112, i32* %16, align 4
  %1113 = sub nsw i32 %1075, %1076
  %1114 = load i8, i8* %1057, align 1
  %1115 = icmp slt i8 %1114, 1
  br i1 %1115, label %1129, label %1116

1116:                                             ; preds = %1111
  %1117 = sext i8 %1114 to i64
  %1118 = add nuw nsw i64 %1117, 4294967295
  %1119 = and i64 %1118, 4294967295
  %1120 = shl i64 1, %1119
  %1121 = add nsw i64 %1120, -1
  %1122 = sub nsw i64 0, %1120
  %1123 = sext i32 %1113 to i64
  %1124 = icmp slt i64 %1123, %1122
  %1125 = icmp slt i64 %1121, %1123
  %1126 = select i1 %1125, i64 %1121, i64 %1123
  %1127 = select i1 %1124, i64 %1122, i64 %1126
  %1128 = trunc i64 %1127 to i32
  br label %1129

1129:                                             ; preds = %1111, %1116
  %1130 = phi i32 [ %1128, %1116 ], [ %1113, %1111 ]
  store i32 %1130, i32* %19, align 4
  %1131 = load i32, i32* %126, align 16
  %1132 = load i32, i32* %151, align 8
  %1133 = add nsw i32 %1132, %1131
  %1134 = load i8, i8* %1057, align 1
  %1135 = icmp slt i8 %1134, 1
  br i1 %1135, label %1149, label %1136

1136:                                             ; preds = %1129
  %1137 = sext i8 %1134 to i64
  %1138 = add nuw nsw i64 %1137, 4294967295
  %1139 = and i64 %1138, 4294967295
  %1140 = shl i64 1, %1139
  %1141 = add nsw i64 %1140, -1
  %1142 = sub nsw i64 0, %1140
  %1143 = sext i32 %1133 to i64
  %1144 = icmp slt i64 %1143, %1142
  %1145 = icmp slt i64 %1141, %1143
  %1146 = select i1 %1145, i64 %1141, i64 %1143
  %1147 = select i1 %1144, i64 %1142, i64 %1146
  %1148 = trunc i64 %1147 to i32
  br label %1149

1149:                                             ; preds = %1129, %1136
  %1150 = phi i32 [ %1148, %1136 ], [ %1133, %1129 ]
  store i32 %1150, i32* %22, align 4
  %1151 = load i32, i32* %136, align 4
  %1152 = load i32, i32* %161, align 4
  %1153 = add nsw i32 %1152, %1151
  %1154 = load i8, i8* %1057, align 1
  %1155 = icmp slt i8 %1154, 1
  br i1 %1155, label %1169, label %1156

1156:                                             ; preds = %1149
  %1157 = sext i8 %1154 to i64
  %1158 = add nuw nsw i64 %1157, 4294967295
  %1159 = and i64 %1158, 4294967295
  %1160 = shl i64 1, %1159
  %1161 = add nsw i64 %1160, -1
  %1162 = sub nsw i64 0, %1160
  %1163 = sext i32 %1153 to i64
  %1164 = icmp slt i64 %1163, %1162
  %1165 = icmp slt i64 %1161, %1163
  %1166 = select i1 %1165, i64 %1161, i64 %1163
  %1167 = select i1 %1164, i64 %1162, i64 %1166
  %1168 = trunc i64 %1167 to i32
  br label %1169

1169:                                             ; preds = %1149, %1156
  %1170 = phi i32 [ %1168, %1156 ], [ %1153, %1149 ]
  store i32 %1170, i32* %25, align 4
  %1171 = sub nsw i32 %1131, %1132
  %1172 = load i8, i8* %1057, align 1
  %1173 = icmp slt i8 %1172, 1
  br i1 %1173, label %1187, label %1174

1174:                                             ; preds = %1169
  %1175 = sext i8 %1172 to i64
  %1176 = add nuw nsw i64 %1175, 4294967295
  %1177 = and i64 %1176, 4294967295
  %1178 = shl i64 1, %1177
  %1179 = add nsw i64 %1178, -1
  %1180 = sub nsw i64 0, %1178
  %1181 = sext i32 %1171 to i64
  %1182 = icmp slt i64 %1181, %1180
  %1183 = icmp slt i64 %1179, %1181
  %1184 = select i1 %1183, i64 %1179, i64 %1181
  %1185 = select i1 %1182, i64 %1180, i64 %1184
  %1186 = trunc i64 %1185 to i32
  br label %1187

1187:                                             ; preds = %1169, %1174
  %1188 = phi i32 [ %1186, %1174 ], [ %1171, %1169 ]
  store i32 %1188, i32* %28, align 4
  %1189 = sub nsw i32 %1151, %1152
  %1190 = load i8, i8* %1057, align 1
  %1191 = icmp slt i8 %1190, 1
  br i1 %1191, label %1205, label %1192

1192:                                             ; preds = %1187
  %1193 = sext i8 %1190 to i64
  %1194 = add nuw nsw i64 %1193, 4294967295
  %1195 = and i64 %1194, 4294967295
  %1196 = shl i64 1, %1195
  %1197 = add nsw i64 %1196, -1
  %1198 = sub nsw i64 0, %1196
  %1199 = sext i32 %1189 to i64
  %1200 = icmp slt i64 %1199, %1198
  %1201 = icmp slt i64 %1197, %1199
  %1202 = select i1 %1201, i64 %1197, i64 %1199
  %1203 = select i1 %1200, i64 %1198, i64 %1202
  %1204 = trunc i64 %1203 to i32
  br label %1205

1205:                                             ; preds = %1187, %1192
  %1206 = phi i32 [ %1204, %1192 ], [ %1189, %1187 ]
  store i32 %1206, i32* %31, align 4
  %1207 = load i32, i32* %176, align 16
  %1208 = load i32, i32* %201, align 8
  %1209 = add nsw i32 %1208, %1207
  %1210 = load i8, i8* %1057, align 1
  %1211 = icmp slt i8 %1210, 1
  br i1 %1211, label %1225, label %1212

1212:                                             ; preds = %1205
  %1213 = sext i8 %1210 to i64
  %1214 = add nuw nsw i64 %1213, 4294967295
  %1215 = and i64 %1214, 4294967295
  %1216 = shl i64 1, %1215
  %1217 = add nsw i64 %1216, -1
  %1218 = sub nsw i64 0, %1216
  %1219 = sext i32 %1209 to i64
  %1220 = icmp slt i64 %1219, %1218
  %1221 = icmp slt i64 %1217, %1219
  %1222 = select i1 %1221, i64 %1217, i64 %1219
  %1223 = select i1 %1220, i64 %1218, i64 %1222
  %1224 = trunc i64 %1223 to i32
  br label %1225

1225:                                             ; preds = %1205, %1212
  %1226 = phi i32 [ %1224, %1212 ], [ %1209, %1205 ]
  store i32 %1226, i32* %34, align 4
  %1227 = load i32, i32* %186, align 4
  %1228 = load i32, i32* %211, align 4
  %1229 = add nsw i32 %1228, %1227
  %1230 = load i8, i8* %1057, align 1
  %1231 = icmp slt i8 %1230, 1
  br i1 %1231, label %1245, label %1232

1232:                                             ; preds = %1225
  %1233 = sext i8 %1230 to i64
  %1234 = add nuw nsw i64 %1233, 4294967295
  %1235 = and i64 %1234, 4294967295
  %1236 = shl i64 1, %1235
  %1237 = add nsw i64 %1236, -1
  %1238 = sub nsw i64 0, %1236
  %1239 = sext i32 %1229 to i64
  %1240 = icmp slt i64 %1239, %1238
  %1241 = icmp slt i64 %1237, %1239
  %1242 = select i1 %1241, i64 %1237, i64 %1239
  %1243 = select i1 %1240, i64 %1238, i64 %1242
  %1244 = trunc i64 %1243 to i32
  br label %1245

1245:                                             ; preds = %1225, %1232
  %1246 = phi i32 [ %1244, %1232 ], [ %1229, %1225 ]
  store i32 %1246, i32* %37, align 4
  %1247 = sub nsw i32 %1207, %1208
  %1248 = load i8, i8* %1057, align 1
  %1249 = icmp slt i8 %1248, 1
  br i1 %1249, label %1263, label %1250

1250:                                             ; preds = %1245
  %1251 = sext i8 %1248 to i64
  %1252 = add nuw nsw i64 %1251, 4294967295
  %1253 = and i64 %1252, 4294967295
  %1254 = shl i64 1, %1253
  %1255 = add nsw i64 %1254, -1
  %1256 = sub nsw i64 0, %1254
  %1257 = sext i32 %1247 to i64
  %1258 = icmp slt i64 %1257, %1256
  %1259 = icmp slt i64 %1255, %1257
  %1260 = select i1 %1259, i64 %1255, i64 %1257
  %1261 = select i1 %1258, i64 %1256, i64 %1260
  %1262 = trunc i64 %1261 to i32
  br label %1263

1263:                                             ; preds = %1245, %1250
  %1264 = phi i32 [ %1262, %1250 ], [ %1247, %1245 ]
  store i32 %1264, i32* %40, align 4
  %1265 = sub nsw i32 %1227, %1228
  %1266 = load i8, i8* %1057, align 1
  %1267 = icmp slt i8 %1266, 1
  br i1 %1267, label %1281, label %1268

1268:                                             ; preds = %1263
  %1269 = sext i8 %1266 to i64
  %1270 = add nuw nsw i64 %1269, 4294967295
  %1271 = and i64 %1270, 4294967295
  %1272 = shl i64 1, %1271
  %1273 = add nsw i64 %1272, -1
  %1274 = sub nsw i64 0, %1272
  %1275 = sext i32 %1265 to i64
  %1276 = icmp slt i64 %1275, %1274
  %1277 = icmp slt i64 %1273, %1275
  %1278 = select i1 %1277, i64 %1273, i64 %1275
  %1279 = select i1 %1276, i64 %1274, i64 %1278
  %1280 = trunc i64 %1279 to i32
  br label %1281

1281:                                             ; preds = %1263, %1268
  %1282 = phi i32 [ %1280, %1268 ], [ %1265, %1263 ]
  store i32 %1282, i32* %43, align 4
  %1283 = load i32, i32* %226, align 16
  %1284 = load i32, i32* %251, align 8
  %1285 = add nsw i32 %1284, %1283
  %1286 = load i8, i8* %1057, align 1
  %1287 = icmp slt i8 %1286, 1
  br i1 %1287, label %1301, label %1288

1288:                                             ; preds = %1281
  %1289 = sext i8 %1286 to i64
  %1290 = add nuw nsw i64 %1289, 4294967295
  %1291 = and i64 %1290, 4294967295
  %1292 = shl i64 1, %1291
  %1293 = add nsw i64 %1292, -1
  %1294 = sub nsw i64 0, %1292
  %1295 = sext i32 %1285 to i64
  %1296 = icmp slt i64 %1295, %1294
  %1297 = icmp slt i64 %1293, %1295
  %1298 = select i1 %1297, i64 %1293, i64 %1295
  %1299 = select i1 %1296, i64 %1294, i64 %1298
  %1300 = trunc i64 %1299 to i32
  br label %1301

1301:                                             ; preds = %1281, %1288
  %1302 = phi i32 [ %1300, %1288 ], [ %1285, %1281 ]
  store i32 %1302, i32* %46, align 4
  %1303 = load i32, i32* %236, align 4
  %1304 = load i32, i32* %261, align 4
  %1305 = add nsw i32 %1304, %1303
  %1306 = load i8, i8* %1057, align 1
  %1307 = icmp slt i8 %1306, 1
  br i1 %1307, label %1321, label %1308

1308:                                             ; preds = %1301
  %1309 = sext i8 %1306 to i64
  %1310 = add nuw nsw i64 %1309, 4294967295
  %1311 = and i64 %1310, 4294967295
  %1312 = shl i64 1, %1311
  %1313 = add nsw i64 %1312, -1
  %1314 = sub nsw i64 0, %1312
  %1315 = sext i32 %1305 to i64
  %1316 = icmp slt i64 %1315, %1314
  %1317 = icmp slt i64 %1313, %1315
  %1318 = select i1 %1317, i64 %1313, i64 %1315
  %1319 = select i1 %1316, i64 %1314, i64 %1318
  %1320 = trunc i64 %1319 to i32
  br label %1321

1321:                                             ; preds = %1301, %1308
  %1322 = phi i32 [ %1320, %1308 ], [ %1305, %1301 ]
  store i32 %1322, i32* %49, align 4
  %1323 = sub nsw i32 %1283, %1284
  %1324 = load i8, i8* %1057, align 1
  %1325 = icmp slt i8 %1324, 1
  br i1 %1325, label %1339, label %1326

1326:                                             ; preds = %1321
  %1327 = sext i8 %1324 to i64
  %1328 = add nuw nsw i64 %1327, 4294967295
  %1329 = and i64 %1328, 4294967295
  %1330 = shl i64 1, %1329
  %1331 = add nsw i64 %1330, -1
  %1332 = sub nsw i64 0, %1330
  %1333 = sext i32 %1323 to i64
  %1334 = icmp slt i64 %1333, %1332
  %1335 = icmp slt i64 %1331, %1333
  %1336 = select i1 %1335, i64 %1331, i64 %1333
  %1337 = select i1 %1334, i64 %1332, i64 %1336
  %1338 = trunc i64 %1337 to i32
  br label %1339

1339:                                             ; preds = %1321, %1326
  %1340 = phi i32 [ %1338, %1326 ], [ %1323, %1321 ]
  store i32 %1340, i32* %52, align 4
  %1341 = sub nsw i32 %1303, %1304
  %1342 = load i8, i8* %1057, align 1
  %1343 = icmp slt i8 %1342, 1
  br i1 %1343, label %1357, label %1344

1344:                                             ; preds = %1339
  %1345 = sext i8 %1342 to i64
  %1346 = add nuw nsw i64 %1345, 4294967295
  %1347 = and i64 %1346, 4294967295
  %1348 = shl i64 1, %1347
  %1349 = add nsw i64 %1348, -1
  %1350 = sub nsw i64 0, %1348
  %1351 = sext i32 %1341 to i64
  %1352 = icmp slt i64 %1351, %1350
  %1353 = icmp slt i64 %1349, %1351
  %1354 = select i1 %1353, i64 %1349, i64 %1351
  %1355 = select i1 %1352, i64 %1350, i64 %1354
  %1356 = trunc i64 %1355 to i32
  br label %1357

1357:                                             ; preds = %1339, %1344
  %1358 = phi i32 [ %1356, %1344 ], [ %1341, %1339 ]
  store i32 %1358, i32* %55, align 4
  %1359 = load i8, i8* %1057, align 1
  call void @av1_range_check_buf(i32 7, i32* %0, i32* %1, i32 16, i8 signext %1359) #4
  %1360 = load i32, i32* %1, align 4
  store i32 %1360, i32* %58, align 16
  %1361 = load i32, i32* %13, align 4
  store i32 %1361, i32* %86, align 4
  %1362 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %1363 = load i32, i32* %1362, align 16
  %1364 = load i32, i32* %16, align 4
  %1365 = load i32, i32* %19, align 4
  %1366 = mul nsw i32 %1364, %1363
  %1367 = sext i32 %1366 to i64
  %1368 = mul nsw i32 %1365, %1363
  %1369 = sext i32 %1368 to i64
  %1370 = add i64 %71, %1367
  %1371 = add i64 %1370, %1369
  %1372 = ashr i64 %1371, %74
  %1373 = trunc i64 %1372 to i32
  store i32 %1373, i32* %101, align 8
  %1374 = sub nsw i32 0, %1363
  %1375 = mul nsw i32 %1365, %1374
  %1376 = sext i32 %1375 to i64
  %1377 = add i64 %1370, %1376
  %1378 = ashr i64 %1377, %74
  %1379 = trunc i64 %1378 to i32
  store i32 %1379, i32* %111, align 4
  %1380 = load i32, i32* %22, align 4
  store i32 %1380, i32* %126, align 16
  %1381 = load i32, i32* %25, align 4
  store i32 %1381, i32* %136, align 4
  %1382 = load i32, i32* %28, align 4
  %1383 = load i32, i32* %31, align 4
  %1384 = mul nsw i32 %1382, %1363
  %1385 = sext i32 %1384 to i64
  %1386 = mul nsw i32 %1383, %1363
  %1387 = sext i32 %1386 to i64
  %1388 = add i64 %71, %1385
  %1389 = add i64 %1388, %1387
  %1390 = ashr i64 %1389, %74
  %1391 = trunc i64 %1390 to i32
  store i32 %1391, i32* %151, align 8
  %1392 = mul nsw i32 %1383, %1374
  %1393 = sext i32 %1392 to i64
  %1394 = add i64 %1388, %1393
  %1395 = ashr i64 %1394, %74
  %1396 = trunc i64 %1395 to i32
  store i32 %1396, i32* %161, align 4
  %1397 = load i32, i32* %34, align 4
  store i32 %1397, i32* %176, align 16
  %1398 = load i32, i32* %37, align 4
  store i32 %1398, i32* %186, align 4
  %1399 = load i32, i32* %40, align 4
  %1400 = load i32, i32* %43, align 4
  %1401 = mul nsw i32 %1399, %1363
  %1402 = sext i32 %1401 to i64
  %1403 = mul nsw i32 %1400, %1363
  %1404 = sext i32 %1403 to i64
  %1405 = add i64 %71, %1402
  %1406 = add i64 %1405, %1404
  %1407 = ashr i64 %1406, %74
  %1408 = trunc i64 %1407 to i32
  store i32 %1408, i32* %201, align 8
  %1409 = mul nsw i32 %1400, %1374
  %1410 = sext i32 %1409 to i64
  %1411 = add i64 %1405, %1410
  %1412 = ashr i64 %1411, %74
  %1413 = trunc i64 %1412 to i32
  store i32 %1413, i32* %211, align 4
  %1414 = load i32, i32* %46, align 4
  store i32 %1414, i32* %226, align 16
  %1415 = load i32, i32* %49, align 4
  store i32 %1415, i32* %236, align 4
  %1416 = load i32, i32* %52, align 4
  %1417 = load i32, i32* %55, align 4
  %1418 = mul nsw i32 %1416, %1363
  %1419 = sext i32 %1418 to i64
  %1420 = mul nsw i32 %1417, %1363
  %1421 = sext i32 %1420 to i64
  %1422 = add i64 %71, %1419
  %1423 = add i64 %1422, %1421
  %1424 = ashr i64 %1423, %74
  %1425 = trunc i64 %1424 to i32
  store i32 %1425, i32* %251, align 8
  %1426 = mul nsw i32 %1417, %1374
  %1427 = sext i32 %1426 to i64
  %1428 = add i64 %1422, %1427
  %1429 = ashr i64 %1428, %74
  %1430 = trunc i64 %1429 to i32
  store i32 %1430, i32* %261, align 4
  %1431 = getelementptr inbounds i8, i8* %3, i64 8
  %1432 = load i8, i8* %1431, align 1
  call void @av1_range_check_buf(i32 8, i32* %0, i32* nonnull %58, i32 16, i8 signext %1432) #4
  %1433 = load i32, i32* %58, align 16
  store i32 %1433, i32* %1, align 4
  %1434 = load i32, i32* %176, align 16
  %1435 = sub nsw i32 0, %1434
  store i32 %1435, i32* %13, align 4
  %1436 = load i32, i32* %226, align 16
  store i32 %1436, i32* %16, align 4
  %1437 = load i32, i32* %126, align 16
  %1438 = sub nsw i32 0, %1437
  store i32 %1438, i32* %19, align 4
  %1439 = load i32, i32* %151, align 8
  store i32 %1439, i32* %22, align 4
  %1440 = load i32, i32* %251, align 8
  %1441 = sub nsw i32 0, %1440
  store i32 %1441, i32* %25, align 4
  %1442 = load i32, i32* %201, align 8
  store i32 %1442, i32* %28, align 4
  %1443 = load i32, i32* %101, align 8
  %1444 = sub nsw i32 0, %1443
  store i32 %1444, i32* %31, align 4
  %1445 = load i32, i32* %111, align 4
  store i32 %1445, i32* %34, align 4
  %1446 = load i32, i32* %211, align 4
  %1447 = sub nsw i32 0, %1446
  store i32 %1447, i32* %37, align 4
  %1448 = load i32, i32* %261, align 4
  store i32 %1448, i32* %40, align 4
  %1449 = load i32, i32* %161, align 4
  %1450 = sub nsw i32 0, %1449
  store i32 %1450, i32* %43, align 4
  %1451 = load i32, i32* %136, align 4
  store i32 %1451, i32* %46, align 4
  %1452 = load i32, i32* %236, align 4
  %1453 = sub nsw i32 0, %1452
  store i32 %1453, i32* %49, align 4
  %1454 = load i32, i32* %186, align 4
  store i32 %1454, i32* %52, align 4
  %1455 = load i32, i32* %86, align 4
  %1456 = sub nsw i32 0, %1455
  store i32 %1456, i32* %55, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_iidentity4_c(i32* nocapture readonly, i32* nocapture, i8 signext, i8* nocapture readnone) local_unnamed_addr #3 {
  %5 = load i32, i32* %0, align 4
  %6 = sext i32 %5 to i64
  %7 = mul nsw i64 %6, 5793
  %8 = add nsw i64 %7, 2048
  %9 = lshr i64 %8, 12
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %1, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = mul nsw i64 %13, 5793
  %15 = add nsw i64 %14, 2048
  %16 = lshr i64 %15, 12
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i32, i32* %0, i64 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, 5793
  %23 = add nsw i64 %22, 2048
  %24 = lshr i64 %23, 12
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %0, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = mul nsw i64 %29, 5793
  %31 = add nsw i64 %30, 2048
  %32 = lshr i64 %31, 12
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %33, i32* %34, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_iidentity8_c(i32* nocapture readonly, i32* nocapture, i8 signext, i8* nocapture readnone) local_unnamed_addr #3 {
  %5 = load i32, i32* %0, align 4
  %6 = shl i32 %5, 1
  store i32 %6, i32* %1, align 4
  %7 = getelementptr inbounds i32, i32* %0, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = shl i32 %8, 1
  %10 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 1
  %14 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 3
  %16 = load i32, i32* %15, align 4
  %17 = shl i32 %16, 1
  %18 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i32, i32* %0, i64 4
  %20 = load i32, i32* %19, align 4
  %21 = shl i32 %20, 1
  %22 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %0, i64 5
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %24, 1
  %26 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %0, i64 6
  %28 = load i32, i32* %27, align 4
  %29 = shl i32 %28, 1
  %30 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %0, i64 7
  %32 = load i32, i32* %31, align 4
  %33 = shl i32 %32, 1
  %34 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %33, i32* %34, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_iidentity16_c(i32* nocapture readonly, i32* nocapture, i8 signext, i8* nocapture readnone) local_unnamed_addr #3 {
  %5 = load i32, i32* %0, align 4
  %6 = sext i32 %5 to i64
  %7 = mul nsw i64 %6, 11586
  %8 = add nsw i64 %7, 2048
  %9 = lshr i64 %8, 12
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %1, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = mul nsw i64 %13, 11586
  %15 = add nsw i64 %14, 2048
  %16 = lshr i64 %15, 12
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i32, i32* %0, i64 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, 11586
  %23 = add nsw i64 %22, 2048
  %24 = lshr i64 %23, 12
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds i32, i32* %0, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = mul nsw i64 %29, 11586
  %31 = add nsw i64 %30, 2048
  %32 = lshr i64 %31, 12
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %0, i64 4
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %37, 11586
  %39 = add nsw i64 %38, 2048
  %40 = lshr i64 %39, 12
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %41, i32* %42, align 4
  %43 = getelementptr inbounds i32, i32* %0, i64 5
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %45, 11586
  %47 = add nsw i64 %46, 2048
  %48 = lshr i64 %47, 12
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds i32, i32* %0, i64 6
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %53, 11586
  %55 = add nsw i64 %54, 2048
  %56 = lshr i64 %55, 12
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i32, i32* %0, i64 7
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %61, 11586
  %63 = add nsw i64 %62, 2048
  %64 = lshr i64 %63, 12
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %65, i32* %66, align 4
  %67 = getelementptr inbounds i32, i32* %0, i64 8
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %69, 11586
  %71 = add nsw i64 %70, 2048
  %72 = lshr i64 %71, 12
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds i32, i32* %0, i64 9
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %77, 11586
  %79 = add nsw i64 %78, 2048
  %80 = lshr i64 %79, 12
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds i32, i32* %0, i64 10
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  %86 = mul nsw i64 %85, 11586
  %87 = add nsw i64 %86, 2048
  %88 = lshr i64 %87, 12
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %89, i32* %90, align 4
  %91 = getelementptr inbounds i32, i32* %0, i64 11
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = mul nsw i64 %93, 11586
  %95 = add nsw i64 %94, 2048
  %96 = lshr i64 %95, 12
  %97 = trunc i64 %96 to i32
  %98 = getelementptr inbounds i32, i32* %1, i64 11
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds i32, i32* %0, i64 12
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = mul nsw i64 %101, 11586
  %103 = add nsw i64 %102, 2048
  %104 = lshr i64 %103, 12
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %105, i32* %106, align 4
  %107 = getelementptr inbounds i32, i32* %0, i64 13
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = mul nsw i64 %109, 11586
  %111 = add nsw i64 %110, 2048
  %112 = lshr i64 %111, 12
  %113 = trunc i64 %112 to i32
  %114 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %113, i32* %114, align 4
  %115 = getelementptr inbounds i32, i32* %0, i64 14
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = mul nsw i64 %117, 11586
  %119 = add nsw i64 %118, 2048
  %120 = lshr i64 %119, 12
  %121 = trunc i64 %120 to i32
  %122 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %121, i32* %122, align 4
  %123 = getelementptr inbounds i32, i32* %0, i64 15
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %125, 11586
  %127 = add nsw i64 %126, 2048
  %128 = lshr i64 %127, 12
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %129, i32* %130, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_iidentity32_c(i32* nocapture readonly, i32* nocapture, i8 signext, i8* nocapture readnone) local_unnamed_addr #3 {
  %5 = getelementptr i32, i32* %1, i64 32
  %6 = getelementptr i32, i32* %0, i64 32
  %7 = icmp ugt i32* %6, %1
  %8 = icmp ugt i32* %5, %0
  %9 = and i1 %7, %8
  br i1 %9, label %58, label %10

10:                                               ; preds = %4
  %11 = bitcast i32* %0 to <4 x i32>*
  %12 = load <4 x i32>, <4 x i32>* %11, align 4, !alias.scope !2
  %13 = shl <4 x i32> %12, <i32 2, i32 2, i32 2, i32 2>
  %14 = bitcast i32* %1 to <4 x i32>*
  store <4 x i32> %13, <4 x i32>* %14, align 4, !alias.scope !5, !noalias !2
  %15 = getelementptr inbounds i32, i32* %0, i64 4
  %16 = bitcast i32* %15 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 4, !alias.scope !2
  %18 = shl <4 x i32> %17, <i32 2, i32 2, i32 2, i32 2>
  %19 = getelementptr inbounds i32, i32* %1, i64 4
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> %18, <4 x i32>* %20, align 4, !alias.scope !5, !noalias !2
  %21 = getelementptr inbounds i32, i32* %0, i64 8
  %22 = bitcast i32* %21 to <4 x i32>*
  %23 = load <4 x i32>, <4 x i32>* %22, align 4, !alias.scope !2
  %24 = shl <4 x i32> %23, <i32 2, i32 2, i32 2, i32 2>
  %25 = getelementptr inbounds i32, i32* %1, i64 8
  %26 = bitcast i32* %25 to <4 x i32>*
  store <4 x i32> %24, <4 x i32>* %26, align 4, !alias.scope !5, !noalias !2
  %27 = getelementptr inbounds i32, i32* %0, i64 12
  %28 = bitcast i32* %27 to <4 x i32>*
  %29 = load <4 x i32>, <4 x i32>* %28, align 4, !alias.scope !2
  %30 = shl <4 x i32> %29, <i32 2, i32 2, i32 2, i32 2>
  %31 = getelementptr inbounds i32, i32* %1, i64 12
  %32 = bitcast i32* %31 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %32, align 4, !alias.scope !5, !noalias !2
  %33 = getelementptr inbounds i32, i32* %0, i64 16
  %34 = bitcast i32* %33 to <4 x i32>*
  %35 = load <4 x i32>, <4 x i32>* %34, align 4, !alias.scope !2
  %36 = shl <4 x i32> %35, <i32 2, i32 2, i32 2, i32 2>
  %37 = getelementptr inbounds i32, i32* %1, i64 16
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> %36, <4 x i32>* %38, align 4, !alias.scope !5, !noalias !2
  %39 = getelementptr inbounds i32, i32* %0, i64 20
  %40 = bitcast i32* %39 to <4 x i32>*
  %41 = load <4 x i32>, <4 x i32>* %40, align 4, !alias.scope !2
  %42 = shl <4 x i32> %41, <i32 2, i32 2, i32 2, i32 2>
  %43 = getelementptr inbounds i32, i32* %1, i64 20
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %42, <4 x i32>* %44, align 4, !alias.scope !5, !noalias !2
  %45 = getelementptr inbounds i32, i32* %0, i64 24
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !alias.scope !2
  %48 = shl <4 x i32> %47, <i32 2, i32 2, i32 2, i32 2>
  %49 = getelementptr inbounds i32, i32* %1, i64 24
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %50, align 4, !alias.scope !5, !noalias !2
  %51 = getelementptr inbounds i32, i32* %0, i64 28
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 4, !alias.scope !2
  %54 = shl <4 x i32> %53, <i32 2, i32 2, i32 2, i32 2>
  %55 = getelementptr inbounds i32, i32* %1, i64 28
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %56, align 4, !alias.scope !5, !noalias !2
  br label %57

57:                                               ; preds = %58, %10
  ret void

58:                                               ; preds = %4, %58
  %59 = phi i64 [ %79, %58 ], [ 0, %4 ]
  %60 = getelementptr inbounds i32, i32* %0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = shl i32 %61, 2
  %63 = getelementptr inbounds i32, i32* %1, i64 %59
  store i32 %62, i32* %63, align 4
  %64 = or i64 %59, 1
  %65 = getelementptr inbounds i32, i32* %0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = shl i32 %66, 2
  %68 = getelementptr inbounds i32, i32* %1, i64 %64
  store i32 %67, i32* %68, align 4
  %69 = or i64 %59, 2
  %70 = getelementptr inbounds i32, i32* %0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = shl i32 %71, 2
  %73 = getelementptr inbounds i32, i32* %1, i64 %69
  store i32 %72, i32* %73, align 4
  %74 = or i64 %59, 3
  %75 = getelementptr inbounds i32, i32* %0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = shl i32 %76, 2
  %78 = getelementptr inbounds i32, i32* %1, i64 %74
  store i32 %77, i32* %78, align 4
  %79 = add nuw nsw i64 %59, 4
  %80 = icmp eq i64 %79, 32
  br i1 %80, label %57, label %58, !llvm.loop !7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_idct64(i32*, i32*, i8 signext, i8* readonly) local_unnamed_addr #0 {
  %5 = alloca [64 x i32], align 16
  %6 = sext i8 %2 to i32
  %7 = add nsw i32 %6, -10
  %8 = sext i32 %7 to i64
  %9 = bitcast [64 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  %10 = load i32, i32* %0, align 4
  store i32 %10, i32* %1, align 4
  %11 = getelementptr inbounds i32, i32* %0, i64 32
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %1, i64 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds i32, i32* %0, i64 16
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i32, i32* %1, i64 2
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds i32, i32* %0, i64 48
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i32, i32* %1, i64 3
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds i32, i32* %0, i64 8
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i32, i32* %1, i64 4
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds i32, i32* %0, i64 40
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i32, i32* %1, i64 5
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds i32, i32* %0, i64 24
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %1, i64 6
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds i32, i32* %0, i64 56
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 7
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds i32, i32* %0, i64 4
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i32, i32* %1, i64 8
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %0, i64 36
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i32, i32* %1, i64 9
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %0, i64 20
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 10
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds i32, i32* %0, i64 52
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i32, i32* %1, i64 11
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds i32, i32* %0, i64 12
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i32, i32* %1, i64 12
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds i32, i32* %0, i64 44
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %1, i64 13
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds i32, i32* %0, i64 28
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i32, i32* %1, i64 14
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds i32, i32* %0, i64 60
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds i32, i32* %1, i64 15
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds i32, i32* %0, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds i32, i32* %1, i64 16
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i32, i32* %0, i64 34
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i32, i32* %1, i64 17
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds i32, i32* %0, i64 18
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i32, i32* %1, i64 18
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds i32, i32* %0, i64 50
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i32, i32* %1, i64 19
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds i32, i32* %0, i64 10
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i32, i32* %1, i64 20
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds i32, i32* %0, i64 42
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds i32, i32* %1, i64 21
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds i32, i32* %0, i64 26
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds i32, i32* %1, i64 22
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds i32, i32* %0, i64 58
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds i32, i32* %1, i64 23
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds i32, i32* %0, i64 6
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %1, i64 24
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds i32, i32* %0, i64 38
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32, i32* %1, i64 25
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds i32, i32* %0, i64 22
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds i32, i32* %1, i64 26
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds i32, i32* %0, i64 54
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds i32, i32* %1, i64 27
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds i32, i32* %0, i64 14
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds i32, i32* %1, i64 28
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds i32, i32* %0, i64 46
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds i32, i32* %1, i64 29
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds i32, i32* %0, i64 30
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds i32, i32* %1, i64 30
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds i32, i32* %0, i64 62
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds i32, i32* %1, i64 31
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds i32, i32* %0, i64 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds i32, i32* %1, i64 32
  store i32 %105, i32* %106, align 4
  %107 = getelementptr inbounds i32, i32* %0, i64 33
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds i32, i32* %1, i64 33
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds i32, i32* %0, i64 17
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %1, i64 34
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds i32, i32* %0, i64 49
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %1, i64 35
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds i32, i32* %0, i64 9
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %1, i64 36
  store i32 %117, i32* %118, align 4
  %119 = getelementptr inbounds i32, i32* %0, i64 41
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds i32, i32* %1, i64 37
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %0, i64 25
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %1, i64 38
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds i32, i32* %0, i64 57
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds i32, i32* %1, i64 39
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds i32, i32* %0, i64 5
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32, i32* %1, i64 40
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds i32, i32* %0, i64 37
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds i32, i32* %1, i64 41
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds i32, i32* %0, i64 21
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds i32, i32* %1, i64 42
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %0, i64 53
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds i32, i32* %1, i64 43
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds i32, i32* %0, i64 13
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds i32, i32* %1, i64 44
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds i32, i32* %0, i64 45
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds i32, i32* %1, i64 45
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds i32, i32* %0, i64 29
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds i32, i32* %1, i64 46
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds i32, i32* %0, i64 61
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %1, i64 47
  store i32 %150, i32* %151, align 4
  %152 = getelementptr inbounds i32, i32* %0, i64 3
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds i32, i32* %1, i64 48
  store i32 %153, i32* %154, align 4
  %155 = getelementptr inbounds i32, i32* %0, i64 35
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds i32, i32* %1, i64 49
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds i32, i32* %0, i64 19
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds i32, i32* %1, i64 50
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds i32, i32* %0, i64 51
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds i32, i32* %1, i64 51
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds i32, i32* %0, i64 11
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %1, i64 52
  store i32 %165, i32* %166, align 4
  %167 = getelementptr inbounds i32, i32* %0, i64 43
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds i32, i32* %1, i64 53
  store i32 %168, i32* %169, align 4
  %170 = getelementptr inbounds i32, i32* %0, i64 27
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds i32, i32* %1, i64 54
  store i32 %171, i32* %172, align 4
  %173 = getelementptr inbounds i32, i32* %0, i64 59
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds i32, i32* %1, i64 55
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds i32, i32* %0, i64 7
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds i32, i32* %1, i64 56
  store i32 %177, i32* %178, align 4
  %179 = getelementptr inbounds i32, i32* %0, i64 39
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds i32, i32* %1, i64 57
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds i32, i32* %0, i64 23
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds i32, i32* %1, i64 58
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds i32, i32* %0, i64 55
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds i32, i32* %1, i64 59
  store i32 %186, i32* %187, align 4
  %188 = getelementptr inbounds i32, i32* %0, i64 15
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds i32, i32* %1, i64 60
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds i32, i32* %0, i64 47
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds i32, i32* %1, i64 61
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds i32, i32* %0, i64 31
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds i32, i32* %1, i64 62
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds i32, i32* %0, i64 63
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds i32, i32* %1, i64 63
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds i8, i8* %3, i64 1
  %201 = load i8, i8* %200, align 1
  tail call void @av1_range_check_buf(i32 1, i32* %0, i32* %1, i32 64, i8 signext %201) #4
  %202 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 0
  %203 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 1
  %204 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 2
  %205 = bitcast i32* %1 to <4 x i32>*
  %206 = load <4 x i32>, <4 x i32>* %205, align 4
  %207 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 3
  %208 = bitcast [64 x i32]* %5 to <4 x i32>*
  store <4 x i32> %206, <4 x i32>* %208, align 16
  %209 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 4
  %210 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 5
  %211 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 6
  %212 = bitcast i32* %22 to <4 x i32>*
  %213 = load <4 x i32>, <4 x i32>* %212, align 4
  %214 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 7
  %215 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %213, <4 x i32>* %215, align 16
  %216 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 8
  %217 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 9
  %218 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 10
  %219 = bitcast i32* %34 to <4 x i32>*
  %220 = load <4 x i32>, <4 x i32>* %219, align 4
  %221 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 11
  %222 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %220, <4 x i32>* %222, align 16
  %223 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 12
  %224 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 13
  %225 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 14
  %226 = bitcast i32* %46 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4
  %228 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 15
  %229 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %229, align 16
  %230 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 16
  %231 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 17
  %232 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 18
  %233 = bitcast i32* %58 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4
  %235 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 19
  %236 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> %234, <4 x i32>* %236, align 16
  %237 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 20
  %238 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 21
  %239 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 22
  %240 = bitcast i32* %70 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4
  %242 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 23
  %243 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %243, align 16
  %244 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 24
  %245 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 25
  %246 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 26
  %247 = bitcast i32* %82 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 27
  %250 = bitcast i32* %244 to <4 x i32>*
  store <4 x i32> %248, <4 x i32>* %250, align 16
  %251 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 28
  %252 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 29
  %253 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 30
  %254 = bitcast i32* %94 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4
  %256 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 31
  %257 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %257, align 16
  %258 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 63
  %259 = load i32, i32* %258, align 4
  %260 = load i32, i32* %106, align 4
  %261 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 1
  %262 = load i32, i32* %261, align 4
  %263 = load i32, i32* %199, align 4
  %264 = mul nsw i32 %260, %259
  %265 = sext i32 %264 to i64
  %266 = mul i32 %262, %263
  %267 = sub i32 0, %266
  %268 = sext i32 %267 to i64
  %269 = add nsw i32 %6, -1
  %270 = zext i32 %269 to i64
  %271 = shl i64 1, %270
  %272 = add i64 %271, %265
  %273 = add i64 %272, %268
  %274 = zext i32 %6 to i64
  %275 = ashr i64 %273, %274
  %276 = trunc i64 %275 to i32
  %277 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 32
  store i32 %276, i32* %277, align 16
  %278 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 31
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %109, align 4
  %281 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 33
  %282 = load i32, i32* %281, align 4
  %283 = load i32, i32* %196, align 4
  %284 = mul nsw i32 %280, %279
  %285 = sext i32 %284 to i64
  %286 = mul i32 %282, %283
  %287 = sub i32 0, %286
  %288 = sext i32 %287 to i64
  %289 = add i64 %271, %285
  %290 = add i64 %289, %288
  %291 = ashr i64 %290, %274
  %292 = trunc i64 %291 to i32
  %293 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 33
  store i32 %292, i32* %293, align 4
  %294 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 47
  %295 = load i32, i32* %294, align 4
  %296 = load i32, i32* %112, align 4
  %297 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 17
  %298 = load i32, i32* %297, align 4
  %299 = load i32, i32* %193, align 4
  %300 = mul nsw i32 %296, %295
  %301 = sext i32 %300 to i64
  %302 = mul i32 %298, %299
  %303 = sub i32 0, %302
  %304 = sext i32 %303 to i64
  %305 = add i64 %271, %301
  %306 = add i64 %305, %304
  %307 = ashr i64 %306, %274
  %308 = trunc i64 %307 to i32
  %309 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 34
  store i32 %308, i32* %309, align 8
  %310 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 15
  %311 = load i32, i32* %310, align 4
  %312 = load i32, i32* %115, align 4
  %313 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 49
  %314 = load i32, i32* %313, align 4
  %315 = load i32, i32* %190, align 4
  %316 = mul nsw i32 %312, %311
  %317 = sext i32 %316 to i64
  %318 = mul i32 %314, %315
  %319 = sub i32 0, %318
  %320 = sext i32 %319 to i64
  %321 = add i64 %271, %317
  %322 = add i64 %321, %320
  %323 = ashr i64 %322, %274
  %324 = trunc i64 %323 to i32
  %325 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 35
  store i32 %324, i32* %325, align 4
  %326 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 55
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %118, align 4
  %329 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 9
  %330 = load i32, i32* %329, align 4
  %331 = load i32, i32* %187, align 4
  %332 = mul nsw i32 %328, %327
  %333 = sext i32 %332 to i64
  %334 = mul i32 %330, %331
  %335 = sub i32 0, %334
  %336 = sext i32 %335 to i64
  %337 = add i64 %271, %333
  %338 = add i64 %337, %336
  %339 = ashr i64 %338, %274
  %340 = trunc i64 %339 to i32
  %341 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 36
  store i32 %340, i32* %341, align 16
  %342 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 23
  %343 = load i32, i32* %342, align 4
  %344 = load i32, i32* %121, align 4
  %345 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 41
  %346 = load i32, i32* %345, align 4
  %347 = load i32, i32* %184, align 4
  %348 = mul nsw i32 %344, %343
  %349 = sext i32 %348 to i64
  %350 = mul i32 %346, %347
  %351 = sub i32 0, %350
  %352 = sext i32 %351 to i64
  %353 = add i64 %271, %349
  %354 = add i64 %353, %352
  %355 = ashr i64 %354, %274
  %356 = trunc i64 %355 to i32
  %357 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 37
  store i32 %356, i32* %357, align 4
  %358 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 39
  %359 = load i32, i32* %358, align 4
  %360 = load i32, i32* %124, align 4
  %361 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 25
  %362 = load i32, i32* %361, align 4
  %363 = load i32, i32* %181, align 4
  %364 = mul nsw i32 %360, %359
  %365 = sext i32 %364 to i64
  %366 = mul i32 %362, %363
  %367 = sub i32 0, %366
  %368 = sext i32 %367 to i64
  %369 = add i64 %271, %365
  %370 = add i64 %369, %368
  %371 = ashr i64 %370, %274
  %372 = trunc i64 %371 to i32
  %373 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 38
  store i32 %372, i32* %373, align 8
  %374 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 7
  %375 = load i32, i32* %374, align 4
  %376 = load i32, i32* %127, align 4
  %377 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 57
  %378 = load i32, i32* %377, align 4
  %379 = load i32, i32* %178, align 4
  %380 = mul nsw i32 %376, %375
  %381 = sext i32 %380 to i64
  %382 = mul i32 %378, %379
  %383 = sub i32 0, %382
  %384 = sext i32 %383 to i64
  %385 = add i64 %271, %381
  %386 = add i64 %385, %384
  %387 = ashr i64 %386, %274
  %388 = trunc i64 %387 to i32
  %389 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 39
  store i32 %388, i32* %389, align 4
  %390 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 59
  %391 = load i32, i32* %390, align 4
  %392 = load i32, i32* %130, align 4
  %393 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 5
  %394 = load i32, i32* %393, align 4
  %395 = load i32, i32* %175, align 4
  %396 = mul nsw i32 %392, %391
  %397 = sext i32 %396 to i64
  %398 = mul i32 %394, %395
  %399 = sub i32 0, %398
  %400 = sext i32 %399 to i64
  %401 = add i64 %271, %397
  %402 = add i64 %401, %400
  %403 = ashr i64 %402, %274
  %404 = trunc i64 %403 to i32
  %405 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 40
  store i32 %404, i32* %405, align 16
  %406 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 27
  %407 = load i32, i32* %406, align 4
  %408 = load i32, i32* %133, align 4
  %409 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 37
  %410 = load i32, i32* %409, align 4
  %411 = load i32, i32* %172, align 4
  %412 = mul nsw i32 %408, %407
  %413 = sext i32 %412 to i64
  %414 = mul i32 %410, %411
  %415 = sub i32 0, %414
  %416 = sext i32 %415 to i64
  %417 = add i64 %271, %413
  %418 = add i64 %417, %416
  %419 = ashr i64 %418, %274
  %420 = trunc i64 %419 to i32
  %421 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 41
  store i32 %420, i32* %421, align 4
  %422 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 43
  %423 = load i32, i32* %422, align 4
  %424 = load i32, i32* %136, align 4
  %425 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 21
  %426 = load i32, i32* %425, align 4
  %427 = load i32, i32* %169, align 4
  %428 = mul nsw i32 %424, %423
  %429 = sext i32 %428 to i64
  %430 = mul i32 %426, %427
  %431 = sub i32 0, %430
  %432 = sext i32 %431 to i64
  %433 = add i64 %271, %429
  %434 = add i64 %433, %432
  %435 = ashr i64 %434, %274
  %436 = trunc i64 %435 to i32
  %437 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 42
  store i32 %436, i32* %437, align 8
  %438 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 11
  %439 = load i32, i32* %438, align 4
  %440 = load i32, i32* %139, align 4
  %441 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 53
  %442 = load i32, i32* %441, align 4
  %443 = load i32, i32* %166, align 4
  %444 = mul nsw i32 %440, %439
  %445 = sext i32 %444 to i64
  %446 = mul i32 %442, %443
  %447 = sub i32 0, %446
  %448 = sext i32 %447 to i64
  %449 = add i64 %271, %445
  %450 = add i64 %449, %448
  %451 = ashr i64 %450, %274
  %452 = trunc i64 %451 to i32
  %453 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 43
  store i32 %452, i32* %453, align 4
  %454 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 51
  %455 = load i32, i32* %454, align 4
  %456 = load i32, i32* %142, align 4
  %457 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 13
  %458 = load i32, i32* %457, align 4
  %459 = load i32, i32* %163, align 4
  %460 = mul nsw i32 %456, %455
  %461 = sext i32 %460 to i64
  %462 = mul i32 %458, %459
  %463 = sub i32 0, %462
  %464 = sext i32 %463 to i64
  %465 = add i64 %271, %461
  %466 = add i64 %465, %464
  %467 = ashr i64 %466, %274
  %468 = trunc i64 %467 to i32
  %469 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 44
  store i32 %468, i32* %469, align 16
  %470 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 19
  %471 = load i32, i32* %470, align 4
  %472 = load i32, i32* %145, align 4
  %473 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 45
  %474 = load i32, i32* %473, align 4
  %475 = load i32, i32* %160, align 4
  %476 = mul nsw i32 %472, %471
  %477 = sext i32 %476 to i64
  %478 = mul i32 %474, %475
  %479 = sub i32 0, %478
  %480 = sext i32 %479 to i64
  %481 = add i64 %271, %477
  %482 = add i64 %481, %480
  %483 = ashr i64 %482, %274
  %484 = trunc i64 %483 to i32
  %485 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 45
  store i32 %484, i32* %485, align 4
  %486 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 35
  %487 = load i32, i32* %486, align 4
  %488 = load i32, i32* %148, align 4
  %489 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 29
  %490 = load i32, i32* %489, align 4
  %491 = load i32, i32* %157, align 4
  %492 = mul nsw i32 %488, %487
  %493 = sext i32 %492 to i64
  %494 = mul i32 %490, %491
  %495 = sub i32 0, %494
  %496 = sext i32 %495 to i64
  %497 = add i64 %271, %493
  %498 = add i64 %497, %496
  %499 = ashr i64 %498, %274
  %500 = trunc i64 %499 to i32
  %501 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 46
  store i32 %500, i32* %501, align 8
  %502 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 3
  %503 = load i32, i32* %502, align 4
  %504 = load i32, i32* %151, align 4
  %505 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 61
  %506 = load i32, i32* %505, align 4
  %507 = load i32, i32* %154, align 4
  %508 = mul nsw i32 %504, %503
  %509 = sext i32 %508 to i64
  %510 = mul i32 %506, %507
  %511 = sub i32 0, %510
  %512 = sext i32 %511 to i64
  %513 = add i64 %271, %509
  %514 = add i64 %513, %512
  %515 = ashr i64 %514, %274
  %516 = trunc i64 %515 to i32
  %517 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 47
  store i32 %516, i32* %517, align 4
  %518 = mul nsw i32 %506, %504
  %519 = sext i32 %518 to i64
  %520 = mul nsw i32 %507, %503
  %521 = sext i32 %520 to i64
  %522 = add i64 %271, %519
  %523 = add i64 %522, %521
  %524 = ashr i64 %523, %274
  %525 = trunc i64 %524 to i32
  %526 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 48
  store i32 %525, i32* %526, align 16
  %527 = mul nsw i32 %490, %488
  %528 = sext i32 %527 to i64
  %529 = mul nsw i32 %491, %487
  %530 = sext i32 %529 to i64
  %531 = add i64 %271, %528
  %532 = add i64 %531, %530
  %533 = ashr i64 %532, %274
  %534 = trunc i64 %533 to i32
  %535 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 49
  store i32 %534, i32* %535, align 4
  %536 = mul nsw i32 %474, %472
  %537 = sext i32 %536 to i64
  %538 = mul nsw i32 %475, %471
  %539 = sext i32 %538 to i64
  %540 = add i64 %271, %537
  %541 = add i64 %540, %539
  %542 = ashr i64 %541, %274
  %543 = trunc i64 %542 to i32
  %544 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 50
  store i32 %543, i32* %544, align 8
  %545 = mul nsw i32 %458, %456
  %546 = sext i32 %545 to i64
  %547 = mul nsw i32 %459, %455
  %548 = sext i32 %547 to i64
  %549 = add i64 %271, %546
  %550 = add i64 %549, %548
  %551 = ashr i64 %550, %274
  %552 = trunc i64 %551 to i32
  %553 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 51
  store i32 %552, i32* %553, align 4
  %554 = mul nsw i32 %442, %440
  %555 = sext i32 %554 to i64
  %556 = mul nsw i32 %443, %439
  %557 = sext i32 %556 to i64
  %558 = add i64 %271, %555
  %559 = add i64 %558, %557
  %560 = ashr i64 %559, %274
  %561 = trunc i64 %560 to i32
  %562 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 52
  store i32 %561, i32* %562, align 16
  %563 = mul nsw i32 %426, %424
  %564 = sext i32 %563 to i64
  %565 = mul nsw i32 %427, %423
  %566 = sext i32 %565 to i64
  %567 = add i64 %271, %564
  %568 = add i64 %567, %566
  %569 = ashr i64 %568, %274
  %570 = trunc i64 %569 to i32
  %571 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 53
  store i32 %570, i32* %571, align 4
  %572 = mul nsw i32 %410, %408
  %573 = sext i32 %572 to i64
  %574 = mul nsw i32 %411, %407
  %575 = sext i32 %574 to i64
  %576 = add i64 %271, %573
  %577 = add i64 %576, %575
  %578 = ashr i64 %577, %274
  %579 = trunc i64 %578 to i32
  %580 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 54
  store i32 %579, i32* %580, align 8
  %581 = mul nsw i32 %394, %392
  %582 = sext i32 %581 to i64
  %583 = mul nsw i32 %395, %391
  %584 = sext i32 %583 to i64
  %585 = add i64 %271, %582
  %586 = add i64 %585, %584
  %587 = ashr i64 %586, %274
  %588 = trunc i64 %587 to i32
  %589 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 55
  store i32 %588, i32* %589, align 4
  %590 = mul nsw i32 %378, %376
  %591 = sext i32 %590 to i64
  %592 = mul nsw i32 %379, %375
  %593 = sext i32 %592 to i64
  %594 = add i64 %271, %591
  %595 = add i64 %594, %593
  %596 = ashr i64 %595, %274
  %597 = trunc i64 %596 to i32
  %598 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 56
  store i32 %597, i32* %598, align 16
  %599 = mul nsw i32 %362, %360
  %600 = sext i32 %599 to i64
  %601 = mul nsw i32 %363, %359
  %602 = sext i32 %601 to i64
  %603 = add i64 %271, %600
  %604 = add i64 %603, %602
  %605 = ashr i64 %604, %274
  %606 = trunc i64 %605 to i32
  %607 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 57
  store i32 %606, i32* %607, align 4
  %608 = mul nsw i32 %346, %344
  %609 = sext i32 %608 to i64
  %610 = mul nsw i32 %347, %343
  %611 = sext i32 %610 to i64
  %612 = add i64 %271, %609
  %613 = add i64 %612, %611
  %614 = ashr i64 %613, %274
  %615 = trunc i64 %614 to i32
  %616 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 58
  store i32 %615, i32* %616, align 8
  %617 = mul nsw i32 %330, %328
  %618 = sext i32 %617 to i64
  %619 = mul nsw i32 %331, %327
  %620 = sext i32 %619 to i64
  %621 = add i64 %271, %618
  %622 = add i64 %621, %620
  %623 = ashr i64 %622, %274
  %624 = trunc i64 %623 to i32
  %625 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 59
  store i32 %624, i32* %625, align 4
  %626 = mul nsw i32 %314, %312
  %627 = sext i32 %626 to i64
  %628 = mul nsw i32 %315, %311
  %629 = sext i32 %628 to i64
  %630 = add i64 %271, %627
  %631 = add i64 %630, %629
  %632 = ashr i64 %631, %274
  %633 = trunc i64 %632 to i32
  %634 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 60
  store i32 %633, i32* %634, align 16
  %635 = mul nsw i32 %298, %296
  %636 = sext i32 %635 to i64
  %637 = mul nsw i32 %299, %295
  %638 = sext i32 %637 to i64
  %639 = add i64 %271, %636
  %640 = add i64 %639, %638
  %641 = ashr i64 %640, %274
  %642 = trunc i64 %641 to i32
  %643 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 61
  store i32 %642, i32* %643, align 4
  %644 = mul nsw i32 %282, %280
  %645 = sext i32 %644 to i64
  %646 = mul nsw i32 %283, %279
  %647 = sext i32 %646 to i64
  %648 = add i64 %271, %645
  %649 = add i64 %648, %647
  %650 = ashr i64 %649, %274
  %651 = trunc i64 %650 to i32
  %652 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 62
  store i32 %651, i32* %652, align 8
  %653 = mul nsw i32 %262, %260
  %654 = sext i32 %653 to i64
  %655 = mul nsw i32 %263, %259
  %656 = sext i32 %655 to i64
  %657 = add i64 %271, %654
  %658 = add i64 %657, %656
  %659 = ashr i64 %658, %274
  %660 = trunc i64 %659 to i32
  %661 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 63
  store i32 %660, i32* %661, align 4
  %662 = getelementptr inbounds i8, i8* %3, i64 2
  %663 = load i8, i8* %662, align 1
  call void @av1_range_check_buf(i32 2, i32* %0, i32* nonnull %202, i32 64, i8 signext %663) #4
  %664 = bitcast [64 x i32]* %5 to <4 x i32>*
  %665 = load <4 x i32>, <4 x i32>* %664, align 16
  %666 = bitcast i32* %1 to <4 x i32>*
  store <4 x i32> %665, <4 x i32>* %666, align 4
  %667 = bitcast i32* %209 to <4 x i32>*
  %668 = load <4 x i32>, <4 x i32>* %667, align 16
  %669 = bitcast i32* %22 to <4 x i32>*
  store <4 x i32> %668, <4 x i32>* %669, align 4
  %670 = bitcast i32* %216 to <4 x i32>*
  %671 = load <4 x i32>, <4 x i32>* %670, align 16
  %672 = bitcast i32* %34 to <4 x i32>*
  store <4 x i32> %671, <4 x i32>* %672, align 4
  %673 = bitcast i32* %223 to <4 x i32>*
  %674 = load <4 x i32>, <4 x i32>* %673, align 16
  %675 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> %674, <4 x i32>* %675, align 4
  %676 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 62
  %677 = load i32, i32* %676, align 8
  %678 = load i32, i32* %230, align 16
  %679 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 2
  %680 = load i32, i32* %679, align 8
  %681 = load i32, i32* %256, align 4
  %682 = mul nsw i32 %678, %677
  %683 = sext i32 %682 to i64
  %684 = mul i32 %680, %681
  %685 = sub i32 0, %684
  %686 = sext i32 %685 to i64
  %687 = add i64 %271, %683
  %688 = add i64 %687, %686
  %689 = ashr i64 %688, %274
  %690 = trunc i64 %689 to i32
  store i32 %690, i32* %58, align 4
  %691 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 30
  %692 = load i32, i32* %691, align 8
  %693 = load i32, i32* %231, align 4
  %694 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 34
  %695 = load i32, i32* %694, align 8
  %696 = load i32, i32* %253, align 8
  %697 = mul nsw i32 %693, %692
  %698 = sext i32 %697 to i64
  %699 = mul i32 %695, %696
  %700 = sub i32 0, %699
  %701 = sext i32 %700 to i64
  %702 = add i64 %271, %698
  %703 = add i64 %702, %701
  %704 = ashr i64 %703, %274
  %705 = trunc i64 %704 to i32
  store i32 %705, i32* %61, align 4
  %706 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 46
  %707 = load i32, i32* %706, align 8
  %708 = load i32, i32* %232, align 8
  %709 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 18
  %710 = load i32, i32* %709, align 8
  %711 = load i32, i32* %252, align 4
  %712 = mul nsw i32 %708, %707
  %713 = sext i32 %712 to i64
  %714 = mul i32 %710, %711
  %715 = sub i32 0, %714
  %716 = sext i32 %715 to i64
  %717 = add i64 %271, %713
  %718 = add i64 %717, %716
  %719 = ashr i64 %718, %274
  %720 = trunc i64 %719 to i32
  store i32 %720, i32* %64, align 4
  %721 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 14
  %722 = load i32, i32* %721, align 8
  %723 = load i32, i32* %235, align 4
  %724 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 50
  %725 = load i32, i32* %724, align 8
  %726 = load i32, i32* %251, align 16
  %727 = mul nsw i32 %723, %722
  %728 = sext i32 %727 to i64
  %729 = mul i32 %725, %726
  %730 = sub i32 0, %729
  %731 = sext i32 %730 to i64
  %732 = add i64 %271, %728
  %733 = add i64 %732, %731
  %734 = ashr i64 %733, %274
  %735 = trunc i64 %734 to i32
  store i32 %735, i32* %67, align 4
  %736 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 54
  %737 = load i32, i32* %736, align 8
  %738 = load i32, i32* %237, align 16
  %739 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 10
  %740 = load i32, i32* %739, align 8
  %741 = load i32, i32* %249, align 4
  %742 = mul nsw i32 %738, %737
  %743 = sext i32 %742 to i64
  %744 = mul i32 %740, %741
  %745 = sub i32 0, %744
  %746 = sext i32 %745 to i64
  %747 = add i64 %271, %743
  %748 = add i64 %747, %746
  %749 = ashr i64 %748, %274
  %750 = trunc i64 %749 to i32
  store i32 %750, i32* %70, align 4
  %751 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 22
  %752 = load i32, i32* %751, align 8
  %753 = load i32, i32* %238, align 4
  %754 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 42
  %755 = load i32, i32* %754, align 8
  %756 = load i32, i32* %246, align 8
  %757 = mul nsw i32 %753, %752
  %758 = sext i32 %757 to i64
  %759 = mul i32 %755, %756
  %760 = sub i32 0, %759
  %761 = sext i32 %760 to i64
  %762 = add i64 %271, %758
  %763 = add i64 %762, %761
  %764 = ashr i64 %763, %274
  %765 = trunc i64 %764 to i32
  store i32 %765, i32* %73, align 4
  %766 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 38
  %767 = load i32, i32* %766, align 8
  %768 = load i32, i32* %239, align 8
  %769 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 26
  %770 = load i32, i32* %769, align 8
  %771 = load i32, i32* %245, align 4
  %772 = mul nsw i32 %768, %767
  %773 = sext i32 %772 to i64
  %774 = mul i32 %770, %771
  %775 = sub i32 0, %774
  %776 = sext i32 %775 to i64
  %777 = add i64 %271, %773
  %778 = add i64 %777, %776
  %779 = ashr i64 %778, %274
  %780 = trunc i64 %779 to i32
  store i32 %780, i32* %76, align 4
  %781 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 6
  %782 = load i32, i32* %781, align 8
  %783 = load i32, i32* %242, align 4
  %784 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 58
  %785 = load i32, i32* %784, align 8
  %786 = load i32, i32* %244, align 16
  %787 = mul nsw i32 %783, %782
  %788 = sext i32 %787 to i64
  %789 = mul i32 %785, %786
  %790 = sub i32 0, %789
  %791 = sext i32 %790 to i64
  %792 = add i64 %271, %788
  %793 = add i64 %792, %791
  %794 = ashr i64 %793, %274
  %795 = trunc i64 %794 to i32
  store i32 %795, i32* %79, align 4
  %796 = mul nsw i32 %785, %783
  %797 = sext i32 %796 to i64
  %798 = mul nsw i32 %786, %782
  %799 = sext i32 %798 to i64
  %800 = add i64 %271, %797
  %801 = add i64 %800, %799
  %802 = ashr i64 %801, %274
  %803 = trunc i64 %802 to i32
  store i32 %803, i32* %82, align 4
  %804 = mul nsw i32 %770, %768
  %805 = sext i32 %804 to i64
  %806 = mul nsw i32 %771, %767
  %807 = sext i32 %806 to i64
  %808 = add i64 %271, %805
  %809 = add i64 %808, %807
  %810 = ashr i64 %809, %274
  %811 = trunc i64 %810 to i32
  store i32 %811, i32* %85, align 4
  %812 = mul nsw i32 %755, %753
  %813 = sext i32 %812 to i64
  %814 = mul nsw i32 %756, %752
  %815 = sext i32 %814 to i64
  %816 = add i64 %271, %813
  %817 = add i64 %816, %815
  %818 = ashr i64 %817, %274
  %819 = trunc i64 %818 to i32
  store i32 %819, i32* %88, align 4
  %820 = mul nsw i32 %740, %738
  %821 = sext i32 %820 to i64
  %822 = mul nsw i32 %741, %737
  %823 = sext i32 %822 to i64
  %824 = add i64 %271, %821
  %825 = add i64 %824, %823
  %826 = ashr i64 %825, %274
  %827 = trunc i64 %826 to i32
  store i32 %827, i32* %91, align 4
  %828 = mul nsw i32 %725, %723
  %829 = sext i32 %828 to i64
  %830 = mul nsw i32 %726, %722
  %831 = sext i32 %830 to i64
  %832 = add i64 %271, %829
  %833 = add i64 %832, %831
  %834 = ashr i64 %833, %274
  %835 = trunc i64 %834 to i32
  store i32 %835, i32* %94, align 4
  %836 = mul nsw i32 %710, %708
  %837 = sext i32 %836 to i64
  %838 = mul nsw i32 %711, %707
  %839 = sext i32 %838 to i64
  %840 = add i64 %271, %837
  %841 = add i64 %840, %839
  %842 = ashr i64 %841, %274
  %843 = trunc i64 %842 to i32
  store i32 %843, i32* %97, align 4
  %844 = mul nsw i32 %695, %693
  %845 = sext i32 %844 to i64
  %846 = mul nsw i32 %696, %692
  %847 = sext i32 %846 to i64
  %848 = add i64 %271, %845
  %849 = add i64 %848, %847
  %850 = ashr i64 %849, %274
  %851 = trunc i64 %850 to i32
  store i32 %851, i32* %100, align 4
  %852 = mul nsw i32 %680, %678
  %853 = sext i32 %852 to i64
  %854 = mul nsw i32 %681, %677
  %855 = sext i32 %854 to i64
  %856 = add i64 %271, %853
  %857 = add i64 %856, %855
  %858 = ashr i64 %857, %274
  %859 = trunc i64 %858 to i32
  store i32 %859, i32* %103, align 4
  %860 = load i32, i32* %277, align 16
  %861 = load i32, i32* %293, align 4
  %862 = add nsw i32 %861, %860
  %863 = getelementptr inbounds i8, i8* %3, i64 3
  %864 = load i8, i8* %863, align 1
  %865 = icmp slt i8 %864, 1
  br i1 %865, label %879, label %866

866:                                              ; preds = %4
  %867 = sext i8 %864 to i64
  %868 = add nuw nsw i64 %867, 4294967295
  %869 = and i64 %868, 4294967295
  %870 = shl i64 1, %869
  %871 = add nsw i64 %870, -1
  %872 = sub nsw i64 0, %870
  %873 = sext i32 %862 to i64
  %874 = icmp slt i64 %873, %872
  %875 = icmp slt i64 %871, %873
  %876 = select i1 %875, i64 %871, i64 %873
  %877 = select i1 %874, i64 %872, i64 %876
  %878 = trunc i64 %877 to i32
  br label %879

879:                                              ; preds = %4, %866
  %880 = phi i32 [ %878, %866 ], [ %862, %4 ]
  store i32 %880, i32* %106, align 4
  %881 = sub nsw i32 %860, %861
  %882 = load i8, i8* %863, align 1
  %883 = icmp slt i8 %882, 1
  br i1 %883, label %897, label %884

884:                                              ; preds = %879
  %885 = sext i8 %882 to i64
  %886 = add nuw nsw i64 %885, 4294967295
  %887 = and i64 %886, 4294967295
  %888 = shl i64 1, %887
  %889 = add nsw i64 %888, -1
  %890 = sub nsw i64 0, %888
  %891 = sext i32 %881 to i64
  %892 = icmp slt i64 %891, %890
  %893 = icmp slt i64 %889, %891
  %894 = select i1 %893, i64 %889, i64 %891
  %895 = select i1 %892, i64 %890, i64 %894
  %896 = trunc i64 %895 to i32
  br label %897

897:                                              ; preds = %879, %884
  %898 = phi i32 [ %896, %884 ], [ %881, %879 ]
  store i32 %898, i32* %109, align 4
  %899 = load i32, i32* %309, align 8
  %900 = load i32, i32* %325, align 4
  %901 = sub i32 %900, %899
  %902 = load i8, i8* %863, align 1
  %903 = icmp slt i8 %902, 1
  br i1 %903, label %917, label %904

904:                                              ; preds = %897
  %905 = sext i8 %902 to i64
  %906 = add nuw nsw i64 %905, 4294967295
  %907 = and i64 %906, 4294967295
  %908 = shl i64 1, %907
  %909 = add nsw i64 %908, -1
  %910 = sub nsw i64 0, %908
  %911 = sext i32 %901 to i64
  %912 = icmp slt i64 %911, %910
  %913 = icmp slt i64 %909, %911
  %914 = select i1 %913, i64 %909, i64 %911
  %915 = select i1 %912, i64 %910, i64 %914
  %916 = trunc i64 %915 to i32
  br label %917

917:                                              ; preds = %897, %904
  %918 = phi i32 [ %916, %904 ], [ %901, %897 ]
  store i32 %918, i32* %112, align 4
  %919 = add nsw i32 %900, %899
  %920 = load i8, i8* %863, align 1
  %921 = icmp slt i8 %920, 1
  br i1 %921, label %935, label %922

922:                                              ; preds = %917
  %923 = sext i8 %920 to i64
  %924 = add nuw nsw i64 %923, 4294967295
  %925 = and i64 %924, 4294967295
  %926 = shl i64 1, %925
  %927 = add nsw i64 %926, -1
  %928 = sub nsw i64 0, %926
  %929 = sext i32 %919 to i64
  %930 = icmp slt i64 %929, %928
  %931 = icmp slt i64 %927, %929
  %932 = select i1 %931, i64 %927, i64 %929
  %933 = select i1 %930, i64 %928, i64 %932
  %934 = trunc i64 %933 to i32
  br label %935

935:                                              ; preds = %917, %922
  %936 = phi i32 [ %934, %922 ], [ %919, %917 ]
  store i32 %936, i32* %115, align 4
  %937 = load i32, i32* %341, align 16
  %938 = load i32, i32* %357, align 4
  %939 = add nsw i32 %938, %937
  %940 = load i8, i8* %863, align 1
  %941 = icmp slt i8 %940, 1
  br i1 %941, label %955, label %942

942:                                              ; preds = %935
  %943 = sext i8 %940 to i64
  %944 = add nuw nsw i64 %943, 4294967295
  %945 = and i64 %944, 4294967295
  %946 = shl i64 1, %945
  %947 = add nsw i64 %946, -1
  %948 = sub nsw i64 0, %946
  %949 = sext i32 %939 to i64
  %950 = icmp slt i64 %949, %948
  %951 = icmp slt i64 %947, %949
  %952 = select i1 %951, i64 %947, i64 %949
  %953 = select i1 %950, i64 %948, i64 %952
  %954 = trunc i64 %953 to i32
  br label %955

955:                                              ; preds = %935, %942
  %956 = phi i32 [ %954, %942 ], [ %939, %935 ]
  store i32 %956, i32* %118, align 4
  %957 = sub nsw i32 %937, %938
  %958 = load i8, i8* %863, align 1
  %959 = icmp slt i8 %958, 1
  br i1 %959, label %973, label %960

960:                                              ; preds = %955
  %961 = sext i8 %958 to i64
  %962 = add nuw nsw i64 %961, 4294967295
  %963 = and i64 %962, 4294967295
  %964 = shl i64 1, %963
  %965 = add nsw i64 %964, -1
  %966 = sub nsw i64 0, %964
  %967 = sext i32 %957 to i64
  %968 = icmp slt i64 %967, %966
  %969 = icmp slt i64 %965, %967
  %970 = select i1 %969, i64 %965, i64 %967
  %971 = select i1 %968, i64 %966, i64 %970
  %972 = trunc i64 %971 to i32
  br label %973

973:                                              ; preds = %955, %960
  %974 = phi i32 [ %972, %960 ], [ %957, %955 ]
  store i32 %974, i32* %121, align 4
  %975 = load i32, i32* %373, align 8
  %976 = load i32, i32* %389, align 4
  %977 = sub i32 %976, %975
  %978 = load i8, i8* %863, align 1
  %979 = icmp slt i8 %978, 1
  br i1 %979, label %993, label %980

980:                                              ; preds = %973
  %981 = sext i8 %978 to i64
  %982 = add nuw nsw i64 %981, 4294967295
  %983 = and i64 %982, 4294967295
  %984 = shl i64 1, %983
  %985 = add nsw i64 %984, -1
  %986 = sub nsw i64 0, %984
  %987 = sext i32 %977 to i64
  %988 = icmp slt i64 %987, %986
  %989 = icmp slt i64 %985, %987
  %990 = select i1 %989, i64 %985, i64 %987
  %991 = select i1 %988, i64 %986, i64 %990
  %992 = trunc i64 %991 to i32
  br label %993

993:                                              ; preds = %973, %980
  %994 = phi i32 [ %992, %980 ], [ %977, %973 ]
  store i32 %994, i32* %124, align 4
  %995 = add nsw i32 %976, %975
  %996 = load i8, i8* %863, align 1
  %997 = icmp slt i8 %996, 1
  br i1 %997, label %1011, label %998

998:                                              ; preds = %993
  %999 = sext i8 %996 to i64
  %1000 = add nuw nsw i64 %999, 4294967295
  %1001 = and i64 %1000, 4294967295
  %1002 = shl i64 1, %1001
  %1003 = add nsw i64 %1002, -1
  %1004 = sub nsw i64 0, %1002
  %1005 = sext i32 %995 to i64
  %1006 = icmp slt i64 %1005, %1004
  %1007 = icmp slt i64 %1003, %1005
  %1008 = select i1 %1007, i64 %1003, i64 %1005
  %1009 = select i1 %1006, i64 %1004, i64 %1008
  %1010 = trunc i64 %1009 to i32
  br label %1011

1011:                                             ; preds = %993, %998
  %1012 = phi i32 [ %1010, %998 ], [ %995, %993 ]
  store i32 %1012, i32* %127, align 4
  %1013 = load i32, i32* %405, align 16
  %1014 = load i32, i32* %421, align 4
  %1015 = add nsw i32 %1014, %1013
  %1016 = load i8, i8* %863, align 1
  %1017 = icmp slt i8 %1016, 1
  br i1 %1017, label %1031, label %1018

1018:                                             ; preds = %1011
  %1019 = sext i8 %1016 to i64
  %1020 = add nuw nsw i64 %1019, 4294967295
  %1021 = and i64 %1020, 4294967295
  %1022 = shl i64 1, %1021
  %1023 = add nsw i64 %1022, -1
  %1024 = sub nsw i64 0, %1022
  %1025 = sext i32 %1015 to i64
  %1026 = icmp slt i64 %1025, %1024
  %1027 = icmp slt i64 %1023, %1025
  %1028 = select i1 %1027, i64 %1023, i64 %1025
  %1029 = select i1 %1026, i64 %1024, i64 %1028
  %1030 = trunc i64 %1029 to i32
  br label %1031

1031:                                             ; preds = %1011, %1018
  %1032 = phi i32 [ %1030, %1018 ], [ %1015, %1011 ]
  store i32 %1032, i32* %130, align 4
  %1033 = sub nsw i32 %1013, %1014
  %1034 = load i8, i8* %863, align 1
  %1035 = icmp slt i8 %1034, 1
  br i1 %1035, label %1049, label %1036

1036:                                             ; preds = %1031
  %1037 = sext i8 %1034 to i64
  %1038 = add nuw nsw i64 %1037, 4294967295
  %1039 = and i64 %1038, 4294967295
  %1040 = shl i64 1, %1039
  %1041 = add nsw i64 %1040, -1
  %1042 = sub nsw i64 0, %1040
  %1043 = sext i32 %1033 to i64
  %1044 = icmp slt i64 %1043, %1042
  %1045 = icmp slt i64 %1041, %1043
  %1046 = select i1 %1045, i64 %1041, i64 %1043
  %1047 = select i1 %1044, i64 %1042, i64 %1046
  %1048 = trunc i64 %1047 to i32
  br label %1049

1049:                                             ; preds = %1031, %1036
  %1050 = phi i32 [ %1048, %1036 ], [ %1033, %1031 ]
  store i32 %1050, i32* %133, align 4
  %1051 = load i32, i32* %437, align 8
  %1052 = load i32, i32* %453, align 4
  %1053 = sub i32 %1052, %1051
  %1054 = load i8, i8* %863, align 1
  %1055 = icmp slt i8 %1054, 1
  br i1 %1055, label %1069, label %1056

1056:                                             ; preds = %1049
  %1057 = sext i8 %1054 to i64
  %1058 = add nuw nsw i64 %1057, 4294967295
  %1059 = and i64 %1058, 4294967295
  %1060 = shl i64 1, %1059
  %1061 = add nsw i64 %1060, -1
  %1062 = sub nsw i64 0, %1060
  %1063 = sext i32 %1053 to i64
  %1064 = icmp slt i64 %1063, %1062
  %1065 = icmp slt i64 %1061, %1063
  %1066 = select i1 %1065, i64 %1061, i64 %1063
  %1067 = select i1 %1064, i64 %1062, i64 %1066
  %1068 = trunc i64 %1067 to i32
  br label %1069

1069:                                             ; preds = %1049, %1056
  %1070 = phi i32 [ %1068, %1056 ], [ %1053, %1049 ]
  store i32 %1070, i32* %136, align 4
  %1071 = add nsw i32 %1052, %1051
  %1072 = load i8, i8* %863, align 1
  %1073 = icmp slt i8 %1072, 1
  br i1 %1073, label %1087, label %1074

1074:                                             ; preds = %1069
  %1075 = sext i8 %1072 to i64
  %1076 = add nuw nsw i64 %1075, 4294967295
  %1077 = and i64 %1076, 4294967295
  %1078 = shl i64 1, %1077
  %1079 = add nsw i64 %1078, -1
  %1080 = sub nsw i64 0, %1078
  %1081 = sext i32 %1071 to i64
  %1082 = icmp slt i64 %1081, %1080
  %1083 = icmp slt i64 %1079, %1081
  %1084 = select i1 %1083, i64 %1079, i64 %1081
  %1085 = select i1 %1082, i64 %1080, i64 %1084
  %1086 = trunc i64 %1085 to i32
  br label %1087

1087:                                             ; preds = %1069, %1074
  %1088 = phi i32 [ %1086, %1074 ], [ %1071, %1069 ]
  store i32 %1088, i32* %139, align 4
  %1089 = load i32, i32* %469, align 16
  %1090 = load i32, i32* %485, align 4
  %1091 = add nsw i32 %1090, %1089
  %1092 = load i8, i8* %863, align 1
  %1093 = icmp slt i8 %1092, 1
  br i1 %1093, label %1107, label %1094

1094:                                             ; preds = %1087
  %1095 = sext i8 %1092 to i64
  %1096 = add nuw nsw i64 %1095, 4294967295
  %1097 = and i64 %1096, 4294967295
  %1098 = shl i64 1, %1097
  %1099 = add nsw i64 %1098, -1
  %1100 = sub nsw i64 0, %1098
  %1101 = sext i32 %1091 to i64
  %1102 = icmp slt i64 %1101, %1100
  %1103 = icmp slt i64 %1099, %1101
  %1104 = select i1 %1103, i64 %1099, i64 %1101
  %1105 = select i1 %1102, i64 %1100, i64 %1104
  %1106 = trunc i64 %1105 to i32
  br label %1107

1107:                                             ; preds = %1087, %1094
  %1108 = phi i32 [ %1106, %1094 ], [ %1091, %1087 ]
  store i32 %1108, i32* %142, align 4
  %1109 = sub nsw i32 %1089, %1090
  %1110 = load i8, i8* %863, align 1
  %1111 = icmp slt i8 %1110, 1
  br i1 %1111, label %1125, label %1112

1112:                                             ; preds = %1107
  %1113 = sext i8 %1110 to i64
  %1114 = add nuw nsw i64 %1113, 4294967295
  %1115 = and i64 %1114, 4294967295
  %1116 = shl i64 1, %1115
  %1117 = add nsw i64 %1116, -1
  %1118 = sub nsw i64 0, %1116
  %1119 = sext i32 %1109 to i64
  %1120 = icmp slt i64 %1119, %1118
  %1121 = icmp slt i64 %1117, %1119
  %1122 = select i1 %1121, i64 %1117, i64 %1119
  %1123 = select i1 %1120, i64 %1118, i64 %1122
  %1124 = trunc i64 %1123 to i32
  br label %1125

1125:                                             ; preds = %1107, %1112
  %1126 = phi i32 [ %1124, %1112 ], [ %1109, %1107 ]
  store i32 %1126, i32* %145, align 4
  %1127 = load i32, i32* %501, align 8
  %1128 = load i32, i32* %517, align 4
  %1129 = sub i32 %1128, %1127
  %1130 = load i8, i8* %863, align 1
  %1131 = icmp slt i8 %1130, 1
  br i1 %1131, label %1145, label %1132

1132:                                             ; preds = %1125
  %1133 = sext i8 %1130 to i64
  %1134 = add nuw nsw i64 %1133, 4294967295
  %1135 = and i64 %1134, 4294967295
  %1136 = shl i64 1, %1135
  %1137 = add nsw i64 %1136, -1
  %1138 = sub nsw i64 0, %1136
  %1139 = sext i32 %1129 to i64
  %1140 = icmp slt i64 %1139, %1138
  %1141 = icmp slt i64 %1137, %1139
  %1142 = select i1 %1141, i64 %1137, i64 %1139
  %1143 = select i1 %1140, i64 %1138, i64 %1142
  %1144 = trunc i64 %1143 to i32
  br label %1145

1145:                                             ; preds = %1125, %1132
  %1146 = phi i32 [ %1144, %1132 ], [ %1129, %1125 ]
  store i32 %1146, i32* %148, align 4
  %1147 = add nsw i32 %1128, %1127
  %1148 = load i8, i8* %863, align 1
  %1149 = icmp slt i8 %1148, 1
  br i1 %1149, label %1163, label %1150

1150:                                             ; preds = %1145
  %1151 = sext i8 %1148 to i64
  %1152 = add nuw nsw i64 %1151, 4294967295
  %1153 = and i64 %1152, 4294967295
  %1154 = shl i64 1, %1153
  %1155 = add nsw i64 %1154, -1
  %1156 = sub nsw i64 0, %1154
  %1157 = sext i32 %1147 to i64
  %1158 = icmp slt i64 %1157, %1156
  %1159 = icmp slt i64 %1155, %1157
  %1160 = select i1 %1159, i64 %1155, i64 %1157
  %1161 = select i1 %1158, i64 %1156, i64 %1160
  %1162 = trunc i64 %1161 to i32
  br label %1163

1163:                                             ; preds = %1145, %1150
  %1164 = phi i32 [ %1162, %1150 ], [ %1147, %1145 ]
  store i32 %1164, i32* %151, align 4
  %1165 = load i32, i32* %526, align 16
  %1166 = load i32, i32* %535, align 4
  %1167 = add nsw i32 %1166, %1165
  %1168 = load i8, i8* %863, align 1
  %1169 = icmp slt i8 %1168, 1
  br i1 %1169, label %1183, label %1170

1170:                                             ; preds = %1163
  %1171 = sext i8 %1168 to i64
  %1172 = add nuw nsw i64 %1171, 4294967295
  %1173 = and i64 %1172, 4294967295
  %1174 = shl i64 1, %1173
  %1175 = add nsw i64 %1174, -1
  %1176 = sub nsw i64 0, %1174
  %1177 = sext i32 %1167 to i64
  %1178 = icmp slt i64 %1177, %1176
  %1179 = icmp slt i64 %1175, %1177
  %1180 = select i1 %1179, i64 %1175, i64 %1177
  %1181 = select i1 %1178, i64 %1176, i64 %1180
  %1182 = trunc i64 %1181 to i32
  br label %1183

1183:                                             ; preds = %1163, %1170
  %1184 = phi i32 [ %1182, %1170 ], [ %1167, %1163 ]
  store i32 %1184, i32* %154, align 4
  %1185 = sub nsw i32 %1165, %1166
  %1186 = load i8, i8* %863, align 1
  %1187 = icmp slt i8 %1186, 1
  br i1 %1187, label %1201, label %1188

1188:                                             ; preds = %1183
  %1189 = sext i8 %1186 to i64
  %1190 = add nuw nsw i64 %1189, 4294967295
  %1191 = and i64 %1190, 4294967295
  %1192 = shl i64 1, %1191
  %1193 = add nsw i64 %1192, -1
  %1194 = sub nsw i64 0, %1192
  %1195 = sext i32 %1185 to i64
  %1196 = icmp slt i64 %1195, %1194
  %1197 = icmp slt i64 %1193, %1195
  %1198 = select i1 %1197, i64 %1193, i64 %1195
  %1199 = select i1 %1196, i64 %1194, i64 %1198
  %1200 = trunc i64 %1199 to i32
  br label %1201

1201:                                             ; preds = %1183, %1188
  %1202 = phi i32 [ %1200, %1188 ], [ %1185, %1183 ]
  store i32 %1202, i32* %157, align 4
  %1203 = load i32, i32* %544, align 8
  %1204 = load i32, i32* %553, align 4
  %1205 = sub i32 %1204, %1203
  %1206 = load i8, i8* %863, align 1
  %1207 = icmp slt i8 %1206, 1
  br i1 %1207, label %1221, label %1208

1208:                                             ; preds = %1201
  %1209 = sext i8 %1206 to i64
  %1210 = add nuw nsw i64 %1209, 4294967295
  %1211 = and i64 %1210, 4294967295
  %1212 = shl i64 1, %1211
  %1213 = add nsw i64 %1212, -1
  %1214 = sub nsw i64 0, %1212
  %1215 = sext i32 %1205 to i64
  %1216 = icmp slt i64 %1215, %1214
  %1217 = icmp slt i64 %1213, %1215
  %1218 = select i1 %1217, i64 %1213, i64 %1215
  %1219 = select i1 %1216, i64 %1214, i64 %1218
  %1220 = trunc i64 %1219 to i32
  br label %1221

1221:                                             ; preds = %1201, %1208
  %1222 = phi i32 [ %1220, %1208 ], [ %1205, %1201 ]
  store i32 %1222, i32* %160, align 4
  %1223 = add nsw i32 %1204, %1203
  %1224 = load i8, i8* %863, align 1
  %1225 = icmp slt i8 %1224, 1
  br i1 %1225, label %1239, label %1226

1226:                                             ; preds = %1221
  %1227 = sext i8 %1224 to i64
  %1228 = add nuw nsw i64 %1227, 4294967295
  %1229 = and i64 %1228, 4294967295
  %1230 = shl i64 1, %1229
  %1231 = add nsw i64 %1230, -1
  %1232 = sub nsw i64 0, %1230
  %1233 = sext i32 %1223 to i64
  %1234 = icmp slt i64 %1233, %1232
  %1235 = icmp slt i64 %1231, %1233
  %1236 = select i1 %1235, i64 %1231, i64 %1233
  %1237 = select i1 %1234, i64 %1232, i64 %1236
  %1238 = trunc i64 %1237 to i32
  br label %1239

1239:                                             ; preds = %1221, %1226
  %1240 = phi i32 [ %1238, %1226 ], [ %1223, %1221 ]
  store i32 %1240, i32* %163, align 4
  %1241 = load i32, i32* %562, align 16
  %1242 = load i32, i32* %571, align 4
  %1243 = add nsw i32 %1242, %1241
  %1244 = load i8, i8* %863, align 1
  %1245 = icmp slt i8 %1244, 1
  br i1 %1245, label %1259, label %1246

1246:                                             ; preds = %1239
  %1247 = sext i8 %1244 to i64
  %1248 = add nuw nsw i64 %1247, 4294967295
  %1249 = and i64 %1248, 4294967295
  %1250 = shl i64 1, %1249
  %1251 = add nsw i64 %1250, -1
  %1252 = sub nsw i64 0, %1250
  %1253 = sext i32 %1243 to i64
  %1254 = icmp slt i64 %1253, %1252
  %1255 = icmp slt i64 %1251, %1253
  %1256 = select i1 %1255, i64 %1251, i64 %1253
  %1257 = select i1 %1254, i64 %1252, i64 %1256
  %1258 = trunc i64 %1257 to i32
  br label %1259

1259:                                             ; preds = %1239, %1246
  %1260 = phi i32 [ %1258, %1246 ], [ %1243, %1239 ]
  store i32 %1260, i32* %166, align 4
  %1261 = sub nsw i32 %1241, %1242
  %1262 = load i8, i8* %863, align 1
  %1263 = icmp slt i8 %1262, 1
  br i1 %1263, label %1277, label %1264

1264:                                             ; preds = %1259
  %1265 = sext i8 %1262 to i64
  %1266 = add nuw nsw i64 %1265, 4294967295
  %1267 = and i64 %1266, 4294967295
  %1268 = shl i64 1, %1267
  %1269 = add nsw i64 %1268, -1
  %1270 = sub nsw i64 0, %1268
  %1271 = sext i32 %1261 to i64
  %1272 = icmp slt i64 %1271, %1270
  %1273 = icmp slt i64 %1269, %1271
  %1274 = select i1 %1273, i64 %1269, i64 %1271
  %1275 = select i1 %1272, i64 %1270, i64 %1274
  %1276 = trunc i64 %1275 to i32
  br label %1277

1277:                                             ; preds = %1259, %1264
  %1278 = phi i32 [ %1276, %1264 ], [ %1261, %1259 ]
  store i32 %1278, i32* %169, align 4
  %1279 = load i32, i32* %580, align 8
  %1280 = load i32, i32* %589, align 4
  %1281 = sub i32 %1280, %1279
  %1282 = load i8, i8* %863, align 1
  %1283 = icmp slt i8 %1282, 1
  br i1 %1283, label %1297, label %1284

1284:                                             ; preds = %1277
  %1285 = sext i8 %1282 to i64
  %1286 = add nuw nsw i64 %1285, 4294967295
  %1287 = and i64 %1286, 4294967295
  %1288 = shl i64 1, %1287
  %1289 = add nsw i64 %1288, -1
  %1290 = sub nsw i64 0, %1288
  %1291 = sext i32 %1281 to i64
  %1292 = icmp slt i64 %1291, %1290
  %1293 = icmp slt i64 %1289, %1291
  %1294 = select i1 %1293, i64 %1289, i64 %1291
  %1295 = select i1 %1292, i64 %1290, i64 %1294
  %1296 = trunc i64 %1295 to i32
  br label %1297

1297:                                             ; preds = %1277, %1284
  %1298 = phi i32 [ %1296, %1284 ], [ %1281, %1277 ]
  store i32 %1298, i32* %172, align 4
  %1299 = add nsw i32 %1280, %1279
  %1300 = load i8, i8* %863, align 1
  %1301 = icmp slt i8 %1300, 1
  br i1 %1301, label %1315, label %1302

1302:                                             ; preds = %1297
  %1303 = sext i8 %1300 to i64
  %1304 = add nuw nsw i64 %1303, 4294967295
  %1305 = and i64 %1304, 4294967295
  %1306 = shl i64 1, %1305
  %1307 = add nsw i64 %1306, -1
  %1308 = sub nsw i64 0, %1306
  %1309 = sext i32 %1299 to i64
  %1310 = icmp slt i64 %1309, %1308
  %1311 = icmp slt i64 %1307, %1309
  %1312 = select i1 %1311, i64 %1307, i64 %1309
  %1313 = select i1 %1310, i64 %1308, i64 %1312
  %1314 = trunc i64 %1313 to i32
  br label %1315

1315:                                             ; preds = %1297, %1302
  %1316 = phi i32 [ %1314, %1302 ], [ %1299, %1297 ]
  store i32 %1316, i32* %175, align 4
  %1317 = load i32, i32* %598, align 16
  %1318 = load i32, i32* %607, align 4
  %1319 = add nsw i32 %1318, %1317
  %1320 = load i8, i8* %863, align 1
  %1321 = icmp slt i8 %1320, 1
  br i1 %1321, label %1335, label %1322

1322:                                             ; preds = %1315
  %1323 = sext i8 %1320 to i64
  %1324 = add nuw nsw i64 %1323, 4294967295
  %1325 = and i64 %1324, 4294967295
  %1326 = shl i64 1, %1325
  %1327 = add nsw i64 %1326, -1
  %1328 = sub nsw i64 0, %1326
  %1329 = sext i32 %1319 to i64
  %1330 = icmp slt i64 %1329, %1328
  %1331 = icmp slt i64 %1327, %1329
  %1332 = select i1 %1331, i64 %1327, i64 %1329
  %1333 = select i1 %1330, i64 %1328, i64 %1332
  %1334 = trunc i64 %1333 to i32
  br label %1335

1335:                                             ; preds = %1315, %1322
  %1336 = phi i32 [ %1334, %1322 ], [ %1319, %1315 ]
  store i32 %1336, i32* %178, align 4
  %1337 = sub nsw i32 %1317, %1318
  %1338 = load i8, i8* %863, align 1
  %1339 = icmp slt i8 %1338, 1
  br i1 %1339, label %1353, label %1340

1340:                                             ; preds = %1335
  %1341 = sext i8 %1338 to i64
  %1342 = add nuw nsw i64 %1341, 4294967295
  %1343 = and i64 %1342, 4294967295
  %1344 = shl i64 1, %1343
  %1345 = add nsw i64 %1344, -1
  %1346 = sub nsw i64 0, %1344
  %1347 = sext i32 %1337 to i64
  %1348 = icmp slt i64 %1347, %1346
  %1349 = icmp slt i64 %1345, %1347
  %1350 = select i1 %1349, i64 %1345, i64 %1347
  %1351 = select i1 %1348, i64 %1346, i64 %1350
  %1352 = trunc i64 %1351 to i32
  br label %1353

1353:                                             ; preds = %1335, %1340
  %1354 = phi i32 [ %1352, %1340 ], [ %1337, %1335 ]
  store i32 %1354, i32* %181, align 4
  %1355 = load i32, i32* %616, align 8
  %1356 = load i32, i32* %625, align 4
  %1357 = sub i32 %1356, %1355
  %1358 = load i8, i8* %863, align 1
  %1359 = icmp slt i8 %1358, 1
  br i1 %1359, label %1373, label %1360

1360:                                             ; preds = %1353
  %1361 = sext i8 %1358 to i64
  %1362 = add nuw nsw i64 %1361, 4294967295
  %1363 = and i64 %1362, 4294967295
  %1364 = shl i64 1, %1363
  %1365 = add nsw i64 %1364, -1
  %1366 = sub nsw i64 0, %1364
  %1367 = sext i32 %1357 to i64
  %1368 = icmp slt i64 %1367, %1366
  %1369 = icmp slt i64 %1365, %1367
  %1370 = select i1 %1369, i64 %1365, i64 %1367
  %1371 = select i1 %1368, i64 %1366, i64 %1370
  %1372 = trunc i64 %1371 to i32
  br label %1373

1373:                                             ; preds = %1353, %1360
  %1374 = phi i32 [ %1372, %1360 ], [ %1357, %1353 ]
  store i32 %1374, i32* %184, align 4
  %1375 = add nsw i32 %1356, %1355
  %1376 = load i8, i8* %863, align 1
  %1377 = icmp slt i8 %1376, 1
  br i1 %1377, label %1391, label %1378

1378:                                             ; preds = %1373
  %1379 = sext i8 %1376 to i64
  %1380 = add nuw nsw i64 %1379, 4294967295
  %1381 = and i64 %1380, 4294967295
  %1382 = shl i64 1, %1381
  %1383 = add nsw i64 %1382, -1
  %1384 = sub nsw i64 0, %1382
  %1385 = sext i32 %1375 to i64
  %1386 = icmp slt i64 %1385, %1384
  %1387 = icmp slt i64 %1383, %1385
  %1388 = select i1 %1387, i64 %1383, i64 %1385
  %1389 = select i1 %1386, i64 %1384, i64 %1388
  %1390 = trunc i64 %1389 to i32
  br label %1391

1391:                                             ; preds = %1373, %1378
  %1392 = phi i32 [ %1390, %1378 ], [ %1375, %1373 ]
  store i32 %1392, i32* %187, align 4
  %1393 = load i32, i32* %634, align 16
  %1394 = load i32, i32* %643, align 4
  %1395 = add nsw i32 %1394, %1393
  %1396 = load i8, i8* %863, align 1
  %1397 = icmp slt i8 %1396, 1
  br i1 %1397, label %1411, label %1398

1398:                                             ; preds = %1391
  %1399 = sext i8 %1396 to i64
  %1400 = add nuw nsw i64 %1399, 4294967295
  %1401 = and i64 %1400, 4294967295
  %1402 = shl i64 1, %1401
  %1403 = add nsw i64 %1402, -1
  %1404 = sub nsw i64 0, %1402
  %1405 = sext i32 %1395 to i64
  %1406 = icmp slt i64 %1405, %1404
  %1407 = icmp slt i64 %1403, %1405
  %1408 = select i1 %1407, i64 %1403, i64 %1405
  %1409 = select i1 %1406, i64 %1404, i64 %1408
  %1410 = trunc i64 %1409 to i32
  br label %1411

1411:                                             ; preds = %1391, %1398
  %1412 = phi i32 [ %1410, %1398 ], [ %1395, %1391 ]
  store i32 %1412, i32* %190, align 4
  %1413 = sub nsw i32 %1393, %1394
  %1414 = load i8, i8* %863, align 1
  %1415 = icmp slt i8 %1414, 1
  br i1 %1415, label %1429, label %1416

1416:                                             ; preds = %1411
  %1417 = sext i8 %1414 to i64
  %1418 = add nuw nsw i64 %1417, 4294967295
  %1419 = and i64 %1418, 4294967295
  %1420 = shl i64 1, %1419
  %1421 = add nsw i64 %1420, -1
  %1422 = sub nsw i64 0, %1420
  %1423 = sext i32 %1413 to i64
  %1424 = icmp slt i64 %1423, %1422
  %1425 = icmp slt i64 %1421, %1423
  %1426 = select i1 %1425, i64 %1421, i64 %1423
  %1427 = select i1 %1424, i64 %1422, i64 %1426
  %1428 = trunc i64 %1427 to i32
  br label %1429

1429:                                             ; preds = %1411, %1416
  %1430 = phi i32 [ %1428, %1416 ], [ %1413, %1411 ]
  store i32 %1430, i32* %193, align 4
  %1431 = load i32, i32* %652, align 8
  %1432 = load i32, i32* %661, align 4
  %1433 = sub i32 %1432, %1431
  %1434 = load i8, i8* %863, align 1
  %1435 = icmp slt i8 %1434, 1
  br i1 %1435, label %1449, label %1436

1436:                                             ; preds = %1429
  %1437 = sext i8 %1434 to i64
  %1438 = add nuw nsw i64 %1437, 4294967295
  %1439 = and i64 %1438, 4294967295
  %1440 = shl i64 1, %1439
  %1441 = add nsw i64 %1440, -1
  %1442 = sub nsw i64 0, %1440
  %1443 = sext i32 %1433 to i64
  %1444 = icmp slt i64 %1443, %1442
  %1445 = icmp slt i64 %1441, %1443
  %1446 = select i1 %1445, i64 %1441, i64 %1443
  %1447 = select i1 %1444, i64 %1442, i64 %1446
  %1448 = trunc i64 %1447 to i32
  br label %1449

1449:                                             ; preds = %1429, %1436
  %1450 = phi i32 [ %1448, %1436 ], [ %1433, %1429 ]
  store i32 %1450, i32* %196, align 4
  %1451 = add nsw i32 %1432, %1431
  %1452 = load i8, i8* %863, align 1
  %1453 = icmp slt i8 %1452, 1
  br i1 %1453, label %1467, label %1454

1454:                                             ; preds = %1449
  %1455 = sext i8 %1452 to i64
  %1456 = add nuw nsw i64 %1455, 4294967295
  %1457 = and i64 %1456, 4294967295
  %1458 = shl i64 1, %1457
  %1459 = add nsw i64 %1458, -1
  %1460 = sub nsw i64 0, %1458
  %1461 = sext i32 %1451 to i64
  %1462 = icmp slt i64 %1461, %1460
  %1463 = icmp slt i64 %1459, %1461
  %1464 = select i1 %1463, i64 %1459, i64 %1461
  %1465 = select i1 %1462, i64 %1460, i64 %1464
  %1466 = trunc i64 %1465 to i32
  br label %1467

1467:                                             ; preds = %1449, %1454
  %1468 = phi i32 [ %1466, %1454 ], [ %1451, %1449 ]
  store i32 %1468, i32* %199, align 4
  %1469 = load i8, i8* %863, align 1
  call void @av1_range_check_buf(i32 3, i32* %0, i32* %1, i32 64, i8 signext %1469) #4
  %1470 = bitcast i32* %1 to <4 x i32>*
  %1471 = load <4 x i32>, <4 x i32>* %1470, align 4
  %1472 = bitcast [64 x i32]* %5 to <4 x i32>*
  store <4 x i32> %1471, <4 x i32>* %1472, align 16
  %1473 = bitcast i32* %22 to <4 x i32>*
  %1474 = load <4 x i32>, <4 x i32>* %1473, align 4
  %1475 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %1474, <4 x i32>* %1475, align 16
  %1476 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 60
  %1477 = load i32, i32* %1476, align 16
  %1478 = load i32, i32* %34, align 4
  %1479 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 4
  %1480 = load i32, i32* %1479, align 16
  %1481 = sub nsw i32 0, %1480
  %1482 = load i32, i32* %55, align 4
  %1483 = mul nsw i32 %1478, %1477
  %1484 = sext i32 %1483 to i64
  %1485 = mul nsw i32 %1482, %1481
  %1486 = sext i32 %1485 to i64
  %1487 = add i64 %271, %1484
  %1488 = add i64 %1487, %1486
  %1489 = ashr i64 %1488, %274
  %1490 = trunc i64 %1489 to i32
  store i32 %1490, i32* %216, align 16
  %1491 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 28
  %1492 = load i32, i32* %1491, align 16
  %1493 = load i32, i32* %37, align 4
  %1494 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 36
  %1495 = load i32, i32* %1494, align 16
  %1496 = sub nsw i32 0, %1495
  %1497 = load i32, i32* %52, align 4
  %1498 = mul nsw i32 %1493, %1492
  %1499 = sext i32 %1498 to i64
  %1500 = mul nsw i32 %1497, %1496
  %1501 = sext i32 %1500 to i64
  %1502 = add i64 %271, %1499
  %1503 = add i64 %1502, %1501
  %1504 = ashr i64 %1503, %274
  %1505 = trunc i64 %1504 to i32
  store i32 %1505, i32* %217, align 4
  %1506 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 44
  %1507 = load i32, i32* %1506, align 16
  %1508 = load i32, i32* %40, align 4
  %1509 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 20
  %1510 = load i32, i32* %1509, align 16
  %1511 = sub nsw i32 0, %1510
  %1512 = load i32, i32* %49, align 4
  %1513 = mul nsw i32 %1508, %1507
  %1514 = sext i32 %1513 to i64
  %1515 = mul nsw i32 %1512, %1511
  %1516 = sext i32 %1515 to i64
  %1517 = add i64 %271, %1514
  %1518 = add i64 %1517, %1516
  %1519 = ashr i64 %1518, %274
  %1520 = trunc i64 %1519 to i32
  store i32 %1520, i32* %218, align 8
  %1521 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 12
  %1522 = load i32, i32* %1521, align 16
  %1523 = load i32, i32* %43, align 4
  %1524 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 52
  %1525 = load i32, i32* %1524, align 16
  %1526 = sub nsw i32 0, %1525
  %1527 = load i32, i32* %46, align 4
  %1528 = mul nsw i32 %1523, %1522
  %1529 = sext i32 %1528 to i64
  %1530 = mul nsw i32 %1527, %1526
  %1531 = sext i32 %1530 to i64
  %1532 = add i64 %271, %1529
  %1533 = add i64 %1532, %1531
  %1534 = ashr i64 %1533, %274
  %1535 = trunc i64 %1534 to i32
  store i32 %1535, i32* %221, align 4
  %1536 = mul nsw i32 %1525, %1523
  %1537 = sext i32 %1536 to i64
  %1538 = mul nsw i32 %1527, %1522
  %1539 = sext i32 %1538 to i64
  %1540 = add i64 %271, %1537
  %1541 = add i64 %1540, %1539
  %1542 = ashr i64 %1541, %274
  %1543 = trunc i64 %1542 to i32
  store i32 %1543, i32* %223, align 16
  %1544 = mul nsw i32 %1510, %1508
  %1545 = sext i32 %1544 to i64
  %1546 = mul nsw i32 %1512, %1507
  %1547 = sext i32 %1546 to i64
  %1548 = add i64 %271, %1545
  %1549 = add i64 %1548, %1547
  %1550 = ashr i64 %1549, %274
  %1551 = trunc i64 %1550 to i32
  store i32 %1551, i32* %224, align 4
  %1552 = mul nsw i32 %1495, %1493
  %1553 = sext i32 %1552 to i64
  %1554 = mul nsw i32 %1497, %1492
  %1555 = sext i32 %1554 to i64
  %1556 = add i64 %271, %1553
  %1557 = add i64 %1556, %1555
  %1558 = ashr i64 %1557, %274
  %1559 = trunc i64 %1558 to i32
  store i32 %1559, i32* %225, align 8
  %1560 = mul nsw i32 %1480, %1478
  %1561 = sext i32 %1560 to i64
  %1562 = mul nsw i32 %1482, %1477
  %1563 = sext i32 %1562 to i64
  %1564 = add i64 %271, %1561
  %1565 = add i64 %1564, %1563
  %1566 = ashr i64 %1565, %274
  %1567 = trunc i64 %1566 to i32
  store i32 %1567, i32* %228, align 4
  %1568 = load i32, i32* %58, align 4
  %1569 = load i32, i32* %61, align 4
  %1570 = add nsw i32 %1569, %1568
  %1571 = getelementptr inbounds i8, i8* %3, i64 4
  %1572 = load i8, i8* %1571, align 1
  %1573 = icmp slt i8 %1572, 1
  br i1 %1573, label %1574, label %1601

1574:                                             ; preds = %1467
  store i32 %1570, i32* %230, align 16
  %1575 = sub nsw i32 %1568, %1569
  store i32 %1575, i32* %231, align 4
  %1576 = bitcast i32* %64 to <4 x i32>*
  %1577 = load <4 x i32>, <4 x i32>* %1576, align 4
  %1578 = shufflevector <4 x i32> %1577, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %1579 = sub <4 x i32> %1578, %1577
  %1580 = add nsw <4 x i32> %1578, %1577
  %1581 = shufflevector <4 x i32> %1579, <4 x i32> %1580, <4 x i32> <i32 0, i32 5, i32 6, i32 3>
  %1582 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %1581, <4 x i32>* %1582, align 8
  %1583 = bitcast i32* %76 to <4 x i32>*
  %1584 = load <4 x i32>, <4 x i32>* %1583, align 4
  %1585 = shufflevector <4 x i32> %1584, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %1586 = sub <4 x i32> %1585, %1584
  %1587 = add nsw <4 x i32> %1585, %1584
  %1588 = shufflevector <4 x i32> %1586, <4 x i32> %1587, <4 x i32> <i32 0, i32 5, i32 6, i32 3>
  %1589 = bitcast i32* %239 to <4 x i32>*
  store <4 x i32> %1588, <4 x i32>* %1589, align 8
  %1590 = bitcast i32* %88 to <4 x i32>*
  %1591 = load <4 x i32>, <4 x i32>* %1590, align 4
  %1592 = shufflevector <4 x i32> %1591, <4 x i32> undef, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %1593 = sub <4 x i32> %1592, %1591
  %1594 = add nsw <4 x i32> %1592, %1591
  %1595 = shufflevector <4 x i32> %1593, <4 x i32> %1594, <4 x i32> <i32 0, i32 5, i32 6, i32 3>
  %1596 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %1595, <4 x i32>* %1596, align 8
  %1597 = load i32, i32* %100, align 4
  %1598 = load i32, i32* %103, align 4
  %1599 = sub i32 %1598, %1597
  store i32 %1599, i32* %253, align 8
  %1600 = add nsw i32 %1598, %1597
  br label %1733

1601:                                             ; preds = %1467
  %1602 = sext i8 %1572 to i64
  %1603 = add nuw nsw i64 %1602, 4294967295
  %1604 = and i64 %1603, 4294967295
  %1605 = shl i64 1, %1604
  %1606 = add nsw i64 %1605, -1
  %1607 = sub nsw i64 0, %1605
  %1608 = sext i32 %1570 to i64
  %1609 = icmp slt i64 %1608, %1607
  %1610 = icmp slt i64 %1606, %1608
  %1611 = select i1 %1610, i64 %1606, i64 %1608
  %1612 = select i1 %1609, i64 %1607, i64 %1611
  %1613 = trunc i64 %1612 to i32
  store i32 %1613, i32* %230, align 16
  %1614 = sub nsw i32 %1568, %1569
  %1615 = sext i32 %1614 to i64
  %1616 = icmp slt i64 %1615, %1607
  %1617 = icmp slt i64 %1606, %1615
  %1618 = select i1 %1617, i64 %1606, i64 %1615
  %1619 = select i1 %1616, i64 %1607, i64 %1618
  %1620 = trunc i64 %1619 to i32
  store i32 %1620, i32* %231, align 4
  %1621 = load i32, i32* %64, align 4
  %1622 = load i32, i32* %67, align 4
  %1623 = sub i32 %1622, %1621
  %1624 = sext i32 %1623 to i64
  %1625 = icmp slt i64 %1624, %1607
  %1626 = icmp slt i64 %1606, %1624
  %1627 = select i1 %1626, i64 %1606, i64 %1624
  %1628 = select i1 %1625, i64 %1607, i64 %1627
  %1629 = trunc i64 %1628 to i32
  store i32 %1629, i32* %232, align 8
  %1630 = add nsw i32 %1622, %1621
  %1631 = sext i32 %1630 to i64
  %1632 = icmp slt i64 %1631, %1607
  %1633 = icmp slt i64 %1606, %1631
  %1634 = select i1 %1633, i64 %1606, i64 %1631
  %1635 = select i1 %1632, i64 %1607, i64 %1634
  %1636 = trunc i64 %1635 to i32
  store i32 %1636, i32* %235, align 4
  %1637 = load i32, i32* %70, align 4
  %1638 = load i32, i32* %73, align 4
  %1639 = add nsw i32 %1638, %1637
  %1640 = sext i32 %1639 to i64
  %1641 = icmp slt i64 %1640, %1607
  %1642 = icmp slt i64 %1606, %1640
  %1643 = select i1 %1642, i64 %1606, i64 %1640
  %1644 = select i1 %1641, i64 %1607, i64 %1643
  %1645 = trunc i64 %1644 to i32
  store i32 %1645, i32* %237, align 16
  %1646 = sub nsw i32 %1637, %1638
  %1647 = sext i32 %1646 to i64
  %1648 = icmp slt i64 %1647, %1607
  %1649 = icmp slt i64 %1606, %1647
  %1650 = select i1 %1649, i64 %1606, i64 %1647
  %1651 = select i1 %1648, i64 %1607, i64 %1650
  %1652 = trunc i64 %1651 to i32
  store i32 %1652, i32* %238, align 4
  %1653 = load i32, i32* %76, align 4
  %1654 = load i32, i32* %79, align 4
  %1655 = sub i32 %1654, %1653
  %1656 = sext i32 %1655 to i64
  %1657 = icmp slt i64 %1656, %1607
  %1658 = icmp slt i64 %1606, %1656
  %1659 = select i1 %1658, i64 %1606, i64 %1656
  %1660 = select i1 %1657, i64 %1607, i64 %1659
  %1661 = trunc i64 %1660 to i32
  store i32 %1661, i32* %239, align 8
  %1662 = add nsw i32 %1654, %1653
  %1663 = sext i32 %1662 to i64
  %1664 = icmp slt i64 %1663, %1607
  %1665 = icmp slt i64 %1606, %1663
  %1666 = select i1 %1665, i64 %1606, i64 %1663
  %1667 = select i1 %1664, i64 %1607, i64 %1666
  %1668 = trunc i64 %1667 to i32
  store i32 %1668, i32* %242, align 4
  %1669 = load i32, i32* %82, align 4
  %1670 = load i32, i32* %85, align 4
  %1671 = add nsw i32 %1670, %1669
  %1672 = sext i32 %1671 to i64
  %1673 = icmp slt i64 %1672, %1607
  %1674 = icmp slt i64 %1606, %1672
  %1675 = select i1 %1674, i64 %1606, i64 %1672
  %1676 = select i1 %1673, i64 %1607, i64 %1675
  %1677 = trunc i64 %1676 to i32
  store i32 %1677, i32* %244, align 16
  %1678 = sub nsw i32 %1669, %1670
  %1679 = sext i32 %1678 to i64
  %1680 = icmp slt i64 %1679, %1607
  %1681 = icmp slt i64 %1606, %1679
  %1682 = select i1 %1681, i64 %1606, i64 %1679
  %1683 = select i1 %1680, i64 %1607, i64 %1682
  %1684 = trunc i64 %1683 to i32
  store i32 %1684, i32* %245, align 4
  %1685 = load i32, i32* %88, align 4
  %1686 = load i32, i32* %91, align 4
  %1687 = sub i32 %1686, %1685
  %1688 = sext i32 %1687 to i64
  %1689 = icmp slt i64 %1688, %1607
  %1690 = icmp slt i64 %1606, %1688
  %1691 = select i1 %1690, i64 %1606, i64 %1688
  %1692 = select i1 %1689, i64 %1607, i64 %1691
  %1693 = trunc i64 %1692 to i32
  store i32 %1693, i32* %246, align 8
  %1694 = add nsw i32 %1686, %1685
  %1695 = sext i32 %1694 to i64
  %1696 = icmp slt i64 %1695, %1607
  %1697 = icmp slt i64 %1606, %1695
  %1698 = select i1 %1697, i64 %1606, i64 %1695
  %1699 = select i1 %1696, i64 %1607, i64 %1698
  %1700 = trunc i64 %1699 to i32
  store i32 %1700, i32* %249, align 4
  %1701 = load i32, i32* %94, align 4
  %1702 = load i32, i32* %97, align 4
  %1703 = add nsw i32 %1702, %1701
  %1704 = sext i32 %1703 to i64
  %1705 = icmp slt i64 %1704, %1607
  %1706 = icmp slt i64 %1606, %1704
  %1707 = select i1 %1706, i64 %1606, i64 %1704
  %1708 = select i1 %1705, i64 %1607, i64 %1707
  %1709 = trunc i64 %1708 to i32
  store i32 %1709, i32* %251, align 16
  %1710 = sub nsw i32 %1701, %1702
  %1711 = sext i32 %1710 to i64
  %1712 = icmp slt i64 %1711, %1607
  %1713 = icmp slt i64 %1606, %1711
  %1714 = select i1 %1713, i64 %1606, i64 %1711
  %1715 = select i1 %1712, i64 %1607, i64 %1714
  %1716 = trunc i64 %1715 to i32
  store i32 %1716, i32* %252, align 4
  %1717 = load i32, i32* %100, align 4
  %1718 = load i32, i32* %103, align 4
  %1719 = sub i32 %1718, %1717
  %1720 = sext i32 %1719 to i64
  %1721 = icmp slt i64 %1720, %1607
  %1722 = icmp slt i64 %1606, %1720
  %1723 = select i1 %1722, i64 %1606, i64 %1720
  %1724 = select i1 %1721, i64 %1607, i64 %1723
  %1725 = trunc i64 %1724 to i32
  store i32 %1725, i32* %253, align 8
  %1726 = add nsw i32 %1718, %1717
  %1727 = sext i32 %1726 to i64
  %1728 = icmp slt i64 %1727, %1607
  %1729 = icmp slt i64 %1606, %1727
  %1730 = select i1 %1729, i64 %1606, i64 %1727
  %1731 = select i1 %1728, i64 %1607, i64 %1730
  %1732 = trunc i64 %1731 to i32
  br label %1733

1733:                                             ; preds = %1574, %1601
  %1734 = phi i32 [ %1732, %1601 ], [ %1600, %1574 ]
  store i32 %1734, i32* %256, align 4
  %1735 = load i32, i32* %106, align 4
  store i32 %1735, i32* %277, align 16
  %1736 = load i32, i32* %109, align 4
  %1737 = load i32, i32* %196, align 4
  %1738 = mul nsw i32 %1736, %1481
  %1739 = sext i32 %1738 to i64
  %1740 = mul nsw i32 %1737, %1477
  %1741 = sext i32 %1740 to i64
  %1742 = add i64 %271, %1739
  %1743 = add i64 %1742, %1741
  %1744 = ashr i64 %1743, %274
  %1745 = trunc i64 %1744 to i32
  store i32 %1745, i32* %293, align 4
  %1746 = load i32, i32* %112, align 4
  %1747 = load i32, i32* %193, align 4
  %1748 = mul i32 %1477, %1746
  %1749 = sub i32 0, %1748
  %1750 = sext i32 %1749 to i64
  %1751 = mul nsw i32 %1747, %1481
  %1752 = sext i32 %1751 to i64
  %1753 = add i64 %271, %1750
  %1754 = add i64 %1753, %1752
  %1755 = ashr i64 %1754, %274
  %1756 = trunc i64 %1755 to i32
  store i32 %1756, i32* %309, align 8
  %1757 = load i32, i32* %115, align 4
  store i32 %1757, i32* %325, align 4
  %1758 = load i32, i32* %118, align 4
  store i32 %1758, i32* %341, align 16
  %1759 = load i32, i32* %121, align 4
  %1760 = load i32, i32* %184, align 4
  %1761 = mul nsw i32 %1759, %1496
  %1762 = sext i32 %1761 to i64
  %1763 = mul nsw i32 %1760, %1492
  %1764 = sext i32 %1763 to i64
  %1765 = add i64 %271, %1762
  %1766 = add i64 %1765, %1764
  %1767 = ashr i64 %1766, %274
  %1768 = trunc i64 %1767 to i32
  store i32 %1768, i32* %357, align 4
  %1769 = load i32, i32* %124, align 4
  %1770 = load i32, i32* %181, align 4
  %1771 = mul i32 %1492, %1769
  %1772 = sub i32 0, %1771
  %1773 = sext i32 %1772 to i64
  %1774 = mul nsw i32 %1770, %1496
  %1775 = sext i32 %1774 to i64
  %1776 = add i64 %271, %1773
  %1777 = add i64 %1776, %1775
  %1778 = ashr i64 %1777, %274
  %1779 = trunc i64 %1778 to i32
  store i32 %1779, i32* %373, align 8
  %1780 = load i32, i32* %127, align 4
  store i32 %1780, i32* %389, align 4
  %1781 = load i32, i32* %130, align 4
  store i32 %1781, i32* %405, align 16
  %1782 = load i32, i32* %133, align 4
  %1783 = load i32, i32* %172, align 4
  %1784 = mul nsw i32 %1782, %1511
  %1785 = sext i32 %1784 to i64
  %1786 = mul nsw i32 %1783, %1507
  %1787 = sext i32 %1786 to i64
  %1788 = add i64 %271, %1785
  %1789 = add i64 %1788, %1787
  %1790 = ashr i64 %1789, %274
  %1791 = trunc i64 %1790 to i32
  store i32 %1791, i32* %421, align 4
  %1792 = load i32, i32* %136, align 4
  %1793 = load i32, i32* %169, align 4
  %1794 = mul i32 %1507, %1792
  %1795 = sub i32 0, %1794
  %1796 = sext i32 %1795 to i64
  %1797 = mul nsw i32 %1793, %1511
  %1798 = sext i32 %1797 to i64
  %1799 = add i64 %271, %1796
  %1800 = add i64 %1799, %1798
  %1801 = ashr i64 %1800, %274
  %1802 = trunc i64 %1801 to i32
  store i32 %1802, i32* %437, align 8
  %1803 = load i32, i32* %139, align 4
  store i32 %1803, i32* %453, align 4
  %1804 = load i32, i32* %142, align 4
  store i32 %1804, i32* %469, align 16
  %1805 = load i32, i32* %145, align 4
  %1806 = load i32, i32* %160, align 4
  %1807 = mul nsw i32 %1805, %1526
  %1808 = sext i32 %1807 to i64
  %1809 = mul nsw i32 %1806, %1522
  %1810 = sext i32 %1809 to i64
  %1811 = add i64 %271, %1808
  %1812 = add i64 %1811, %1810
  %1813 = ashr i64 %1812, %274
  %1814 = trunc i64 %1813 to i32
  store i32 %1814, i32* %485, align 4
  %1815 = load i32, i32* %148, align 4
  %1816 = load i32, i32* %157, align 4
  %1817 = mul i32 %1522, %1815
  %1818 = sub i32 0, %1817
  %1819 = sext i32 %1818 to i64
  %1820 = mul nsw i32 %1816, %1526
  %1821 = sext i32 %1820 to i64
  %1822 = add i64 %271, %1819
  %1823 = add i64 %1822, %1821
  %1824 = ashr i64 %1823, %274
  %1825 = trunc i64 %1824 to i32
  store i32 %1825, i32* %501, align 8
  %1826 = load i32, i32* %151, align 4
  store i32 %1826, i32* %517, align 4
  %1827 = load i32, i32* %154, align 4
  store i32 %1827, i32* %526, align 16
  %1828 = mul nsw i32 %1815, %1526
  %1829 = sext i32 %1828 to i64
  %1830 = mul nsw i32 %1816, %1522
  %1831 = sext i32 %1830 to i64
  %1832 = add i64 %271, %1829
  %1833 = add i64 %1832, %1831
  %1834 = ashr i64 %1833, %274
  %1835 = trunc i64 %1834 to i32
  store i32 %1835, i32* %535, align 4
  %1836 = mul nsw i32 %1805, %1522
  %1837 = sext i32 %1836 to i64
  %1838 = mul nsw i32 %1806, %1525
  %1839 = sext i32 %1838 to i64
  %1840 = add i64 %271, %1837
  %1841 = add i64 %1840, %1839
  %1842 = ashr i64 %1841, %274
  %1843 = trunc i64 %1842 to i32
  store i32 %1843, i32* %544, align 8
  %1844 = load i32, i32* %163, align 4
  store i32 %1844, i32* %553, align 4
  %1845 = load i32, i32* %166, align 4
  store i32 %1845, i32* %562, align 16
  %1846 = mul nsw i32 %1792, %1511
  %1847 = sext i32 %1846 to i64
  %1848 = mul nsw i32 %1793, %1507
  %1849 = sext i32 %1848 to i64
  %1850 = add i64 %271, %1847
  %1851 = add i64 %1850, %1849
  %1852 = ashr i64 %1851, %274
  %1853 = trunc i64 %1852 to i32
  store i32 %1853, i32* %571, align 4
  %1854 = mul nsw i32 %1782, %1507
  %1855 = sext i32 %1854 to i64
  %1856 = mul nsw i32 %1783, %1510
  %1857 = sext i32 %1856 to i64
  %1858 = add i64 %271, %1855
  %1859 = add i64 %1858, %1857
  %1860 = ashr i64 %1859, %274
  %1861 = trunc i64 %1860 to i32
  store i32 %1861, i32* %580, align 8
  %1862 = load i32, i32* %175, align 4
  store i32 %1862, i32* %589, align 4
  %1863 = load i32, i32* %178, align 4
  store i32 %1863, i32* %598, align 16
  %1864 = mul nsw i32 %1769, %1496
  %1865 = sext i32 %1864 to i64
  %1866 = mul nsw i32 %1770, %1492
  %1867 = sext i32 %1866 to i64
  %1868 = add i64 %271, %1865
  %1869 = add i64 %1868, %1867
  %1870 = ashr i64 %1869, %274
  %1871 = trunc i64 %1870 to i32
  store i32 %1871, i32* %607, align 4
  %1872 = mul nsw i32 %1759, %1492
  %1873 = sext i32 %1872 to i64
  %1874 = mul nsw i32 %1760, %1495
  %1875 = sext i32 %1874 to i64
  %1876 = add i64 %271, %1873
  %1877 = add i64 %1876, %1875
  %1878 = ashr i64 %1877, %274
  %1879 = trunc i64 %1878 to i32
  store i32 %1879, i32* %616, align 8
  %1880 = load i32, i32* %187, align 4
  store i32 %1880, i32* %625, align 4
  %1881 = load i32, i32* %190, align 4
  store i32 %1881, i32* %634, align 16
  %1882 = mul nsw i32 %1746, %1481
  %1883 = sext i32 %1882 to i64
  %1884 = mul nsw i32 %1747, %1477
  %1885 = sext i32 %1884 to i64
  %1886 = add i64 %271, %1883
  %1887 = add i64 %1886, %1885
  %1888 = ashr i64 %1887, %274
  %1889 = trunc i64 %1888 to i32
  store i32 %1889, i32* %643, align 4
  %1890 = mul nsw i32 %1736, %1477
  %1891 = sext i32 %1890 to i64
  %1892 = mul nsw i32 %1737, %1480
  %1893 = sext i32 %1892 to i64
  %1894 = add i64 %271, %1891
  %1895 = add i64 %1894, %1893
  %1896 = ashr i64 %1895, %274
  %1897 = trunc i64 %1896 to i32
  store i32 %1897, i32* %652, align 8
  %1898 = load i32, i32* %199, align 4
  store i32 %1898, i32* %661, align 4
  call void @av1_range_check_buf(i32 4, i32* %0, i32* nonnull %202, i32 64, i8 signext %1572) #4
  %1899 = bitcast [64 x i32]* %5 to <4 x i32>*
  %1900 = load <4 x i32>, <4 x i32>* %1899, align 16
  %1901 = bitcast i32* %1 to <4 x i32>*
  store <4 x i32> %1900, <4 x i32>* %1901, align 4
  %1902 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 56
  %1903 = load i32, i32* %1902, align 16
  %1904 = load i32, i32* %209, align 16
  %1905 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 8
  %1906 = load i32, i32* %1905, align 16
  %1907 = sub nsw i32 0, %1906
  %1908 = load i32, i32* %214, align 4
  %1909 = mul nsw i32 %1904, %1903
  %1910 = sext i32 %1909 to i64
  %1911 = mul nsw i32 %1908, %1907
  %1912 = sext i32 %1911 to i64
  %1913 = add i64 %271, %1910
  %1914 = add i64 %1913, %1912
  %1915 = ashr i64 %1914, %274
  %1916 = trunc i64 %1915 to i32
  store i32 %1916, i32* %22, align 4
  %1917 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 24
  %1918 = load i32, i32* %1917, align 16
  %1919 = load i32, i32* %210, align 4
  %1920 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 40
  %1921 = load i32, i32* %1920, align 16
  %1922 = sub nsw i32 0, %1921
  %1923 = load i32, i32* %211, align 8
  %1924 = mul nsw i32 %1919, %1918
  %1925 = sext i32 %1924 to i64
  %1926 = mul nsw i32 %1923, %1922
  %1927 = sext i32 %1926 to i64
  %1928 = add i64 %271, %1925
  %1929 = add i64 %1928, %1927
  %1930 = ashr i64 %1929, %274
  %1931 = trunc i64 %1930 to i32
  store i32 %1931, i32* %25, align 4
  %1932 = mul nsw i32 %1921, %1919
  %1933 = sext i32 %1932 to i64
  %1934 = mul nsw i32 %1923, %1918
  %1935 = sext i32 %1934 to i64
  %1936 = add i64 %271, %1933
  %1937 = add i64 %1936, %1935
  %1938 = ashr i64 %1937, %274
  %1939 = trunc i64 %1938 to i32
  store i32 %1939, i32* %28, align 4
  %1940 = mul nsw i32 %1906, %1904
  %1941 = sext i32 %1940 to i64
  %1942 = mul nsw i32 %1908, %1903
  %1943 = sext i32 %1942 to i64
  %1944 = add i64 %271, %1941
  %1945 = add i64 %1944, %1943
  %1946 = ashr i64 %1945, %274
  %1947 = trunc i64 %1946 to i32
  store i32 %1947, i32* %31, align 4
  %1948 = load i32, i32* %216, align 16
  %1949 = load i32, i32* %217, align 4
  %1950 = add nsw i32 %1949, %1948
  %1951 = getelementptr inbounds i8, i8* %3, i64 5
  %1952 = load i8, i8* %1951, align 1
  %1953 = icmp slt i8 %1952, 1
  br i1 %1953, label %1967, label %1954

1954:                                             ; preds = %1733
  %1955 = sext i8 %1952 to i64
  %1956 = add nuw nsw i64 %1955, 4294967295
  %1957 = and i64 %1956, 4294967295
  %1958 = shl i64 1, %1957
  %1959 = add nsw i64 %1958, -1
  %1960 = sub nsw i64 0, %1958
  %1961 = sext i32 %1950 to i64
  %1962 = icmp slt i64 %1961, %1960
  %1963 = icmp slt i64 %1959, %1961
  %1964 = select i1 %1963, i64 %1959, i64 %1961
  %1965 = select i1 %1962, i64 %1960, i64 %1964
  %1966 = trunc i64 %1965 to i32
  br label %1967

1967:                                             ; preds = %1733, %1954
  %1968 = phi i32 [ %1966, %1954 ], [ %1950, %1733 ]
  store i32 %1968, i32* %34, align 4
  %1969 = sub nsw i32 %1948, %1949
  %1970 = load i8, i8* %1951, align 1
  %1971 = icmp slt i8 %1970, 1
  br i1 %1971, label %1985, label %1972

1972:                                             ; preds = %1967
  %1973 = sext i8 %1970 to i64
  %1974 = add nuw nsw i64 %1973, 4294967295
  %1975 = and i64 %1974, 4294967295
  %1976 = shl i64 1, %1975
  %1977 = add nsw i64 %1976, -1
  %1978 = sub nsw i64 0, %1976
  %1979 = sext i32 %1969 to i64
  %1980 = icmp slt i64 %1979, %1978
  %1981 = icmp slt i64 %1977, %1979
  %1982 = select i1 %1981, i64 %1977, i64 %1979
  %1983 = select i1 %1980, i64 %1978, i64 %1982
  %1984 = trunc i64 %1983 to i32
  br label %1985

1985:                                             ; preds = %1967, %1972
  %1986 = phi i32 [ %1984, %1972 ], [ %1969, %1967 ]
  store i32 %1986, i32* %37, align 4
  %1987 = load i32, i32* %218, align 8
  %1988 = load i32, i32* %221, align 4
  %1989 = sub i32 %1988, %1987
  %1990 = load i8, i8* %1951, align 1
  %1991 = icmp slt i8 %1990, 1
  br i1 %1991, label %2005, label %1992

1992:                                             ; preds = %1985
  %1993 = sext i8 %1990 to i64
  %1994 = add nuw nsw i64 %1993, 4294967295
  %1995 = and i64 %1994, 4294967295
  %1996 = shl i64 1, %1995
  %1997 = add nsw i64 %1996, -1
  %1998 = sub nsw i64 0, %1996
  %1999 = sext i32 %1989 to i64
  %2000 = icmp slt i64 %1999, %1998
  %2001 = icmp slt i64 %1997, %1999
  %2002 = select i1 %2001, i64 %1997, i64 %1999
  %2003 = select i1 %2000, i64 %1998, i64 %2002
  %2004 = trunc i64 %2003 to i32
  br label %2005

2005:                                             ; preds = %1985, %1992
  %2006 = phi i32 [ %2004, %1992 ], [ %1989, %1985 ]
  store i32 %2006, i32* %40, align 4
  %2007 = add nsw i32 %1988, %1987
  %2008 = load i8, i8* %1951, align 1
  %2009 = icmp slt i8 %2008, 1
  br i1 %2009, label %2023, label %2010

2010:                                             ; preds = %2005
  %2011 = sext i8 %2008 to i64
  %2012 = add nuw nsw i64 %2011, 4294967295
  %2013 = and i64 %2012, 4294967295
  %2014 = shl i64 1, %2013
  %2015 = add nsw i64 %2014, -1
  %2016 = sub nsw i64 0, %2014
  %2017 = sext i32 %2007 to i64
  %2018 = icmp slt i64 %2017, %2016
  %2019 = icmp slt i64 %2015, %2017
  %2020 = select i1 %2019, i64 %2015, i64 %2017
  %2021 = select i1 %2018, i64 %2016, i64 %2020
  %2022 = trunc i64 %2021 to i32
  br label %2023

2023:                                             ; preds = %2005, %2010
  %2024 = phi i32 [ %2022, %2010 ], [ %2007, %2005 ]
  store i32 %2024, i32* %43, align 4
  %2025 = load i32, i32* %223, align 16
  %2026 = load i32, i32* %224, align 4
  %2027 = add nsw i32 %2026, %2025
  %2028 = load i8, i8* %1951, align 1
  %2029 = icmp slt i8 %2028, 1
  br i1 %2029, label %2043, label %2030

2030:                                             ; preds = %2023
  %2031 = sext i8 %2028 to i64
  %2032 = add nuw nsw i64 %2031, 4294967295
  %2033 = and i64 %2032, 4294967295
  %2034 = shl i64 1, %2033
  %2035 = add nsw i64 %2034, -1
  %2036 = sub nsw i64 0, %2034
  %2037 = sext i32 %2027 to i64
  %2038 = icmp slt i64 %2037, %2036
  %2039 = icmp slt i64 %2035, %2037
  %2040 = select i1 %2039, i64 %2035, i64 %2037
  %2041 = select i1 %2038, i64 %2036, i64 %2040
  %2042 = trunc i64 %2041 to i32
  br label %2043

2043:                                             ; preds = %2023, %2030
  %2044 = phi i32 [ %2042, %2030 ], [ %2027, %2023 ]
  store i32 %2044, i32* %46, align 4
  %2045 = sub nsw i32 %2025, %2026
  %2046 = load i8, i8* %1951, align 1
  %2047 = icmp slt i8 %2046, 1
  br i1 %2047, label %2061, label %2048

2048:                                             ; preds = %2043
  %2049 = sext i8 %2046 to i64
  %2050 = add nuw nsw i64 %2049, 4294967295
  %2051 = and i64 %2050, 4294967295
  %2052 = shl i64 1, %2051
  %2053 = add nsw i64 %2052, -1
  %2054 = sub nsw i64 0, %2052
  %2055 = sext i32 %2045 to i64
  %2056 = icmp slt i64 %2055, %2054
  %2057 = icmp slt i64 %2053, %2055
  %2058 = select i1 %2057, i64 %2053, i64 %2055
  %2059 = select i1 %2056, i64 %2054, i64 %2058
  %2060 = trunc i64 %2059 to i32
  br label %2061

2061:                                             ; preds = %2043, %2048
  %2062 = phi i32 [ %2060, %2048 ], [ %2045, %2043 ]
  store i32 %2062, i32* %49, align 4
  %2063 = load i32, i32* %225, align 8
  %2064 = load i32, i32* %228, align 4
  %2065 = sub i32 %2064, %2063
  %2066 = load i8, i8* %1951, align 1
  %2067 = icmp slt i8 %2066, 1
  br i1 %2067, label %2081, label %2068

2068:                                             ; preds = %2061
  %2069 = sext i8 %2066 to i64
  %2070 = add nuw nsw i64 %2069, 4294967295
  %2071 = and i64 %2070, 4294967295
  %2072 = shl i64 1, %2071
  %2073 = add nsw i64 %2072, -1
  %2074 = sub nsw i64 0, %2072
  %2075 = sext i32 %2065 to i64
  %2076 = icmp slt i64 %2075, %2074
  %2077 = icmp slt i64 %2073, %2075
  %2078 = select i1 %2077, i64 %2073, i64 %2075
  %2079 = select i1 %2076, i64 %2074, i64 %2078
  %2080 = trunc i64 %2079 to i32
  br label %2081

2081:                                             ; preds = %2061, %2068
  %2082 = phi i32 [ %2080, %2068 ], [ %2065, %2061 ]
  store i32 %2082, i32* %52, align 4
  %2083 = add nsw i32 %2064, %2063
  %2084 = load i8, i8* %1951, align 1
  %2085 = icmp slt i8 %2084, 1
  br i1 %2085, label %2099, label %2086

2086:                                             ; preds = %2081
  %2087 = sext i8 %2084 to i64
  %2088 = add nuw nsw i64 %2087, 4294967295
  %2089 = and i64 %2088, 4294967295
  %2090 = shl i64 1, %2089
  %2091 = add nsw i64 %2090, -1
  %2092 = sub nsw i64 0, %2090
  %2093 = sext i32 %2083 to i64
  %2094 = icmp slt i64 %2093, %2092
  %2095 = icmp slt i64 %2091, %2093
  %2096 = select i1 %2095, i64 %2091, i64 %2093
  %2097 = select i1 %2094, i64 %2092, i64 %2096
  %2098 = trunc i64 %2097 to i32
  br label %2099

2099:                                             ; preds = %2081, %2086
  %2100 = phi i32 [ %2098, %2086 ], [ %2083, %2081 ]
  store i32 %2100, i32* %55, align 4
  %2101 = load i32, i32* %230, align 16
  store i32 %2101, i32* %58, align 4
  %2102 = load i32, i32* %231, align 4
  %2103 = load i32, i32* %253, align 8
  %2104 = mul nsw i32 %2102, %1907
  %2105 = sext i32 %2104 to i64
  %2106 = mul nsw i32 %2103, %1903
  %2107 = sext i32 %2106 to i64
  %2108 = add i64 %271, %2105
  %2109 = add i64 %2108, %2107
  %2110 = ashr i64 %2109, %274
  %2111 = trunc i64 %2110 to i32
  store i32 %2111, i32* %61, align 4
  %2112 = sub nsw i32 0, %1903
  %2113 = load i32, i32* %232, align 8
  %2114 = load i32, i32* %252, align 4
  %2115 = mul nsw i32 %2113, %2112
  %2116 = sext i32 %2115 to i64
  %2117 = mul nsw i32 %2114, %1907
  %2118 = sext i32 %2117 to i64
  %2119 = add i64 %271, %2116
  %2120 = add i64 %2119, %2118
  %2121 = ashr i64 %2120, %274
  %2122 = trunc i64 %2121 to i32
  store i32 %2122, i32* %64, align 4
  %2123 = load i32, i32* %235, align 4
  store i32 %2123, i32* %67, align 4
  %2124 = load i32, i32* %237, align 16
  store i32 %2124, i32* %70, align 4
  %2125 = load i32, i32* %238, align 4
  %2126 = load i32, i32* %246, align 8
  %2127 = mul nsw i32 %2125, %1922
  %2128 = sext i32 %2127 to i64
  %2129 = mul nsw i32 %2126, %1918
  %2130 = sext i32 %2129 to i64
  %2131 = add i64 %271, %2128
  %2132 = add i64 %2131, %2130
  %2133 = ashr i64 %2132, %274
  %2134 = trunc i64 %2133 to i32
  store i32 %2134, i32* %73, align 4
  %2135 = sub nsw i32 0, %1918
  %2136 = load i32, i32* %239, align 8
  %2137 = load i32, i32* %245, align 4
  %2138 = mul nsw i32 %2136, %2135
  %2139 = sext i32 %2138 to i64
  %2140 = mul nsw i32 %2137, %1922
  %2141 = sext i32 %2140 to i64
  %2142 = add i64 %271, %2139
  %2143 = add i64 %2142, %2141
  %2144 = ashr i64 %2143, %274
  %2145 = trunc i64 %2144 to i32
  store i32 %2145, i32* %76, align 4
  %2146 = load i32, i32* %242, align 4
  store i32 %2146, i32* %79, align 4
  %2147 = load i32, i32* %244, align 16
  store i32 %2147, i32* %82, align 4
  %2148 = mul nsw i32 %2136, %1922
  %2149 = sext i32 %2148 to i64
  %2150 = mul nsw i32 %2137, %1918
  %2151 = sext i32 %2150 to i64
  %2152 = add i64 %271, %2149
  %2153 = add i64 %2152, %2151
  %2154 = ashr i64 %2153, %274
  %2155 = trunc i64 %2154 to i32
  store i32 %2155, i32* %85, align 4
  %2156 = mul nsw i32 %2125, %1918
  %2157 = sext i32 %2156 to i64
  %2158 = mul nsw i32 %2126, %1921
  %2159 = sext i32 %2158 to i64
  %2160 = add i64 %271, %2157
  %2161 = add i64 %2160, %2159
  %2162 = ashr i64 %2161, %274
  %2163 = trunc i64 %2162 to i32
  store i32 %2163, i32* %88, align 4
  %2164 = load i32, i32* %249, align 4
  store i32 %2164, i32* %91, align 4
  %2165 = load i32, i32* %251, align 16
  store i32 %2165, i32* %94, align 4
  %2166 = mul nsw i32 %2113, %1907
  %2167 = sext i32 %2166 to i64
  %2168 = mul nsw i32 %2114, %1903
  %2169 = sext i32 %2168 to i64
  %2170 = add i64 %271, %2167
  %2171 = add i64 %2170, %2169
  %2172 = ashr i64 %2171, %274
  %2173 = trunc i64 %2172 to i32
  store i32 %2173, i32* %97, align 4
  %2174 = mul nsw i32 %2102, %1903
  %2175 = sext i32 %2174 to i64
  %2176 = mul nsw i32 %2103, %1906
  %2177 = sext i32 %2176 to i64
  %2178 = add i64 %271, %2175
  %2179 = add i64 %2178, %2177
  %2180 = ashr i64 %2179, %274
  %2181 = trunc i64 %2180 to i32
  store i32 %2181, i32* %100, align 4
  %2182 = load i32, i32* %256, align 4
  store i32 %2182, i32* %103, align 4
  %2183 = load i32, i32* %277, align 16
  %2184 = load i32, i32* %325, align 4
  %2185 = add nsw i32 %2184, %2183
  %2186 = load i8, i8* %1951, align 1
  %2187 = icmp slt i8 %2186, 1
  br i1 %2187, label %2201, label %2188

2188:                                             ; preds = %2099
  %2189 = sext i8 %2186 to i64
  %2190 = add nuw nsw i64 %2189, 4294967295
  %2191 = and i64 %2190, 4294967295
  %2192 = shl i64 1, %2191
  %2193 = add nsw i64 %2192, -1
  %2194 = sub nsw i64 0, %2192
  %2195 = sext i32 %2185 to i64
  %2196 = icmp slt i64 %2195, %2194
  %2197 = icmp slt i64 %2193, %2195
  %2198 = select i1 %2197, i64 %2193, i64 %2195
  %2199 = select i1 %2196, i64 %2194, i64 %2198
  %2200 = trunc i64 %2199 to i32
  br label %2201

2201:                                             ; preds = %2099, %2188
  %2202 = phi i32 [ %2200, %2188 ], [ %2185, %2099 ]
  store i32 %2202, i32* %106, align 4
  %2203 = load i32, i32* %293, align 4
  %2204 = load i32, i32* %309, align 8
  %2205 = add nsw i32 %2204, %2203
  %2206 = load i8, i8* %1951, align 1
  %2207 = icmp slt i8 %2206, 1
  br i1 %2207, label %2221, label %2208

2208:                                             ; preds = %2201
  %2209 = sext i8 %2206 to i64
  %2210 = add nuw nsw i64 %2209, 4294967295
  %2211 = and i64 %2210, 4294967295
  %2212 = shl i64 1, %2211
  %2213 = add nsw i64 %2212, -1
  %2214 = sub nsw i64 0, %2212
  %2215 = sext i32 %2205 to i64
  %2216 = icmp slt i64 %2215, %2214
  %2217 = icmp slt i64 %2213, %2215
  %2218 = select i1 %2217, i64 %2213, i64 %2215
  %2219 = select i1 %2216, i64 %2214, i64 %2218
  %2220 = trunc i64 %2219 to i32
  br label %2221

2221:                                             ; preds = %2201, %2208
  %2222 = phi i32 [ %2220, %2208 ], [ %2205, %2201 ]
  store i32 %2222, i32* %109, align 4
  %2223 = sub nsw i32 %2203, %2204
  %2224 = load i8, i8* %1951, align 1
  %2225 = icmp slt i8 %2224, 1
  br i1 %2225, label %2239, label %2226

2226:                                             ; preds = %2221
  %2227 = sext i8 %2224 to i64
  %2228 = add nuw nsw i64 %2227, 4294967295
  %2229 = and i64 %2228, 4294967295
  %2230 = shl i64 1, %2229
  %2231 = add nsw i64 %2230, -1
  %2232 = sub nsw i64 0, %2230
  %2233 = sext i32 %2223 to i64
  %2234 = icmp slt i64 %2233, %2232
  %2235 = icmp slt i64 %2231, %2233
  %2236 = select i1 %2235, i64 %2231, i64 %2233
  %2237 = select i1 %2234, i64 %2232, i64 %2236
  %2238 = trunc i64 %2237 to i32
  br label %2239

2239:                                             ; preds = %2221, %2226
  %2240 = phi i32 [ %2238, %2226 ], [ %2223, %2221 ]
  store i32 %2240, i32* %112, align 4
  %2241 = sub nsw i32 %2183, %2184
  %2242 = load i8, i8* %1951, align 1
  %2243 = icmp slt i8 %2242, 1
  br i1 %2243, label %2257, label %2244

2244:                                             ; preds = %2239
  %2245 = sext i8 %2242 to i64
  %2246 = add nuw nsw i64 %2245, 4294967295
  %2247 = and i64 %2246, 4294967295
  %2248 = shl i64 1, %2247
  %2249 = add nsw i64 %2248, -1
  %2250 = sub nsw i64 0, %2248
  %2251 = sext i32 %2241 to i64
  %2252 = icmp slt i64 %2251, %2250
  %2253 = icmp slt i64 %2249, %2251
  %2254 = select i1 %2253, i64 %2249, i64 %2251
  %2255 = select i1 %2252, i64 %2250, i64 %2254
  %2256 = trunc i64 %2255 to i32
  br label %2257

2257:                                             ; preds = %2239, %2244
  %2258 = phi i32 [ %2256, %2244 ], [ %2241, %2239 ]
  store i32 %2258, i32* %115, align 4
  %2259 = load i32, i32* %341, align 16
  %2260 = load i32, i32* %389, align 4
  %2261 = sub i32 %2260, %2259
  %2262 = load i8, i8* %1951, align 1
  %2263 = icmp slt i8 %2262, 1
  br i1 %2263, label %2277, label %2264

2264:                                             ; preds = %2257
  %2265 = sext i8 %2262 to i64
  %2266 = add nuw nsw i64 %2265, 4294967295
  %2267 = and i64 %2266, 4294967295
  %2268 = shl i64 1, %2267
  %2269 = add nsw i64 %2268, -1
  %2270 = sub nsw i64 0, %2268
  %2271 = sext i32 %2261 to i64
  %2272 = icmp slt i64 %2271, %2270
  %2273 = icmp slt i64 %2269, %2271
  %2274 = select i1 %2273, i64 %2269, i64 %2271
  %2275 = select i1 %2272, i64 %2270, i64 %2274
  %2276 = trunc i64 %2275 to i32
  br label %2277

2277:                                             ; preds = %2257, %2264
  %2278 = phi i32 [ %2276, %2264 ], [ %2261, %2257 ]
  store i32 %2278, i32* %118, align 4
  %2279 = load i32, i32* %357, align 4
  %2280 = load i32, i32* %373, align 8
  %2281 = sub i32 %2280, %2279
  %2282 = load i8, i8* %1951, align 1
  %2283 = icmp slt i8 %2282, 1
  br i1 %2283, label %2297, label %2284

2284:                                             ; preds = %2277
  %2285 = sext i8 %2282 to i64
  %2286 = add nuw nsw i64 %2285, 4294967295
  %2287 = and i64 %2286, 4294967295
  %2288 = shl i64 1, %2287
  %2289 = add nsw i64 %2288, -1
  %2290 = sub nsw i64 0, %2288
  %2291 = sext i32 %2281 to i64
  %2292 = icmp slt i64 %2291, %2290
  %2293 = icmp slt i64 %2289, %2291
  %2294 = select i1 %2293, i64 %2289, i64 %2291
  %2295 = select i1 %2292, i64 %2290, i64 %2294
  %2296 = trunc i64 %2295 to i32
  br label %2297

2297:                                             ; preds = %2277, %2284
  %2298 = phi i32 [ %2296, %2284 ], [ %2281, %2277 ]
  store i32 %2298, i32* %121, align 4
  %2299 = add nsw i32 %2280, %2279
  %2300 = load i8, i8* %1951, align 1
  %2301 = icmp slt i8 %2300, 1
  br i1 %2301, label %2315, label %2302

2302:                                             ; preds = %2297
  %2303 = sext i8 %2300 to i64
  %2304 = add nuw nsw i64 %2303, 4294967295
  %2305 = and i64 %2304, 4294967295
  %2306 = shl i64 1, %2305
  %2307 = add nsw i64 %2306, -1
  %2308 = sub nsw i64 0, %2306
  %2309 = sext i32 %2299 to i64
  %2310 = icmp slt i64 %2309, %2308
  %2311 = icmp slt i64 %2307, %2309
  %2312 = select i1 %2311, i64 %2307, i64 %2309
  %2313 = select i1 %2310, i64 %2308, i64 %2312
  %2314 = trunc i64 %2313 to i32
  br label %2315

2315:                                             ; preds = %2297, %2302
  %2316 = phi i32 [ %2314, %2302 ], [ %2299, %2297 ]
  store i32 %2316, i32* %124, align 4
  %2317 = add nsw i32 %2260, %2259
  %2318 = load i8, i8* %1951, align 1
  %2319 = icmp slt i8 %2318, 1
  br i1 %2319, label %2333, label %2320

2320:                                             ; preds = %2315
  %2321 = sext i8 %2318 to i64
  %2322 = add nuw nsw i64 %2321, 4294967295
  %2323 = and i64 %2322, 4294967295
  %2324 = shl i64 1, %2323
  %2325 = add nsw i64 %2324, -1
  %2326 = sub nsw i64 0, %2324
  %2327 = sext i32 %2317 to i64
  %2328 = icmp slt i64 %2327, %2326
  %2329 = icmp slt i64 %2325, %2327
  %2330 = select i1 %2329, i64 %2325, i64 %2327
  %2331 = select i1 %2328, i64 %2326, i64 %2330
  %2332 = trunc i64 %2331 to i32
  br label %2333

2333:                                             ; preds = %2315, %2320
  %2334 = phi i32 [ %2332, %2320 ], [ %2317, %2315 ]
  store i32 %2334, i32* %127, align 4
  %2335 = load i32, i32* %405, align 16
  %2336 = load i32, i32* %453, align 4
  %2337 = add nsw i32 %2336, %2335
  %2338 = load i8, i8* %1951, align 1
  %2339 = icmp slt i8 %2338, 1
  br i1 %2339, label %2353, label %2340

2340:                                             ; preds = %2333
  %2341 = sext i8 %2338 to i64
  %2342 = add nuw nsw i64 %2341, 4294967295
  %2343 = and i64 %2342, 4294967295
  %2344 = shl i64 1, %2343
  %2345 = add nsw i64 %2344, -1
  %2346 = sub nsw i64 0, %2344
  %2347 = sext i32 %2337 to i64
  %2348 = icmp slt i64 %2347, %2346
  %2349 = icmp slt i64 %2345, %2347
  %2350 = select i1 %2349, i64 %2345, i64 %2347
  %2351 = select i1 %2348, i64 %2346, i64 %2350
  %2352 = trunc i64 %2351 to i32
  br label %2353

2353:                                             ; preds = %2333, %2340
  %2354 = phi i32 [ %2352, %2340 ], [ %2337, %2333 ]
  store i32 %2354, i32* %130, align 4
  %2355 = load i32, i32* %421, align 4
  %2356 = load i32, i32* %437, align 8
  %2357 = add nsw i32 %2356, %2355
  %2358 = load i8, i8* %1951, align 1
  %2359 = icmp slt i8 %2358, 1
  br i1 %2359, label %2373, label %2360

2360:                                             ; preds = %2353
  %2361 = sext i8 %2358 to i64
  %2362 = add nuw nsw i64 %2361, 4294967295
  %2363 = and i64 %2362, 4294967295
  %2364 = shl i64 1, %2363
  %2365 = add nsw i64 %2364, -1
  %2366 = sub nsw i64 0, %2364
  %2367 = sext i32 %2357 to i64
  %2368 = icmp slt i64 %2367, %2366
  %2369 = icmp slt i64 %2365, %2367
  %2370 = select i1 %2369, i64 %2365, i64 %2367
  %2371 = select i1 %2368, i64 %2366, i64 %2370
  %2372 = trunc i64 %2371 to i32
  br label %2373

2373:                                             ; preds = %2353, %2360
  %2374 = phi i32 [ %2372, %2360 ], [ %2357, %2353 ]
  store i32 %2374, i32* %133, align 4
  %2375 = sub nsw i32 %2355, %2356
  %2376 = load i8, i8* %1951, align 1
  %2377 = icmp slt i8 %2376, 1
  br i1 %2377, label %2391, label %2378

2378:                                             ; preds = %2373
  %2379 = sext i8 %2376 to i64
  %2380 = add nuw nsw i64 %2379, 4294967295
  %2381 = and i64 %2380, 4294967295
  %2382 = shl i64 1, %2381
  %2383 = add nsw i64 %2382, -1
  %2384 = sub nsw i64 0, %2382
  %2385 = sext i32 %2375 to i64
  %2386 = icmp slt i64 %2385, %2384
  %2387 = icmp slt i64 %2383, %2385
  %2388 = select i1 %2387, i64 %2383, i64 %2385
  %2389 = select i1 %2386, i64 %2384, i64 %2388
  %2390 = trunc i64 %2389 to i32
  br label %2391

2391:                                             ; preds = %2373, %2378
  %2392 = phi i32 [ %2390, %2378 ], [ %2375, %2373 ]
  store i32 %2392, i32* %136, align 4
  %2393 = sub nsw i32 %2335, %2336
  %2394 = load i8, i8* %1951, align 1
  %2395 = icmp slt i8 %2394, 1
  br i1 %2395, label %2409, label %2396

2396:                                             ; preds = %2391
  %2397 = sext i8 %2394 to i64
  %2398 = add nuw nsw i64 %2397, 4294967295
  %2399 = and i64 %2398, 4294967295
  %2400 = shl i64 1, %2399
  %2401 = add nsw i64 %2400, -1
  %2402 = sub nsw i64 0, %2400
  %2403 = sext i32 %2393 to i64
  %2404 = icmp slt i64 %2403, %2402
  %2405 = icmp slt i64 %2401, %2403
  %2406 = select i1 %2405, i64 %2401, i64 %2403
  %2407 = select i1 %2404, i64 %2402, i64 %2406
  %2408 = trunc i64 %2407 to i32
  br label %2409

2409:                                             ; preds = %2391, %2396
  %2410 = phi i32 [ %2408, %2396 ], [ %2393, %2391 ]
  store i32 %2410, i32* %139, align 4
  %2411 = load i32, i32* %469, align 16
  %2412 = load i32, i32* %517, align 4
  %2413 = sub i32 %2412, %2411
  %2414 = load i8, i8* %1951, align 1
  %2415 = icmp slt i8 %2414, 1
  br i1 %2415, label %2429, label %2416

2416:                                             ; preds = %2409
  %2417 = sext i8 %2414 to i64
  %2418 = add nuw nsw i64 %2417, 4294967295
  %2419 = and i64 %2418, 4294967295
  %2420 = shl i64 1, %2419
  %2421 = add nsw i64 %2420, -1
  %2422 = sub nsw i64 0, %2420
  %2423 = sext i32 %2413 to i64
  %2424 = icmp slt i64 %2423, %2422
  %2425 = icmp slt i64 %2421, %2423
  %2426 = select i1 %2425, i64 %2421, i64 %2423
  %2427 = select i1 %2424, i64 %2422, i64 %2426
  %2428 = trunc i64 %2427 to i32
  br label %2429

2429:                                             ; preds = %2409, %2416
  %2430 = phi i32 [ %2428, %2416 ], [ %2413, %2409 ]
  store i32 %2430, i32* %142, align 4
  %2431 = load i32, i32* %485, align 4
  %2432 = load i32, i32* %501, align 8
  %2433 = sub i32 %2432, %2431
  %2434 = load i8, i8* %1951, align 1
  %2435 = icmp slt i8 %2434, 1
  br i1 %2435, label %2449, label %2436

2436:                                             ; preds = %2429
  %2437 = sext i8 %2434 to i64
  %2438 = add nuw nsw i64 %2437, 4294967295
  %2439 = and i64 %2438, 4294967295
  %2440 = shl i64 1, %2439
  %2441 = add nsw i64 %2440, -1
  %2442 = sub nsw i64 0, %2440
  %2443 = sext i32 %2433 to i64
  %2444 = icmp slt i64 %2443, %2442
  %2445 = icmp slt i64 %2441, %2443
  %2446 = select i1 %2445, i64 %2441, i64 %2443
  %2447 = select i1 %2444, i64 %2442, i64 %2446
  %2448 = trunc i64 %2447 to i32
  br label %2449

2449:                                             ; preds = %2429, %2436
  %2450 = phi i32 [ %2448, %2436 ], [ %2433, %2429 ]
  store i32 %2450, i32* %145, align 4
  %2451 = add nsw i32 %2432, %2431
  %2452 = load i8, i8* %1951, align 1
  %2453 = icmp slt i8 %2452, 1
  br i1 %2453, label %2467, label %2454

2454:                                             ; preds = %2449
  %2455 = sext i8 %2452 to i64
  %2456 = add nuw nsw i64 %2455, 4294967295
  %2457 = and i64 %2456, 4294967295
  %2458 = shl i64 1, %2457
  %2459 = add nsw i64 %2458, -1
  %2460 = sub nsw i64 0, %2458
  %2461 = sext i32 %2451 to i64
  %2462 = icmp slt i64 %2461, %2460
  %2463 = icmp slt i64 %2459, %2461
  %2464 = select i1 %2463, i64 %2459, i64 %2461
  %2465 = select i1 %2462, i64 %2460, i64 %2464
  %2466 = trunc i64 %2465 to i32
  br label %2467

2467:                                             ; preds = %2449, %2454
  %2468 = phi i32 [ %2466, %2454 ], [ %2451, %2449 ]
  store i32 %2468, i32* %148, align 4
  %2469 = add nsw i32 %2412, %2411
  %2470 = load i8, i8* %1951, align 1
  %2471 = icmp slt i8 %2470, 1
  br i1 %2471, label %2485, label %2472

2472:                                             ; preds = %2467
  %2473 = sext i8 %2470 to i64
  %2474 = add nuw nsw i64 %2473, 4294967295
  %2475 = and i64 %2474, 4294967295
  %2476 = shl i64 1, %2475
  %2477 = add nsw i64 %2476, -1
  %2478 = sub nsw i64 0, %2476
  %2479 = sext i32 %2469 to i64
  %2480 = icmp slt i64 %2479, %2478
  %2481 = icmp slt i64 %2477, %2479
  %2482 = select i1 %2481, i64 %2477, i64 %2479
  %2483 = select i1 %2480, i64 %2478, i64 %2482
  %2484 = trunc i64 %2483 to i32
  br label %2485

2485:                                             ; preds = %2467, %2472
  %2486 = phi i32 [ %2484, %2472 ], [ %2469, %2467 ]
  store i32 %2486, i32* %151, align 4
  %2487 = load i32, i32* %526, align 16
  %2488 = load i32, i32* %553, align 4
  %2489 = add nsw i32 %2488, %2487
  %2490 = load i8, i8* %1951, align 1
  %2491 = icmp slt i8 %2490, 1
  br i1 %2491, label %2505, label %2492

2492:                                             ; preds = %2485
  %2493 = sext i8 %2490 to i64
  %2494 = add nuw nsw i64 %2493, 4294967295
  %2495 = and i64 %2494, 4294967295
  %2496 = shl i64 1, %2495
  %2497 = add nsw i64 %2496, -1
  %2498 = sub nsw i64 0, %2496
  %2499 = sext i32 %2489 to i64
  %2500 = icmp slt i64 %2499, %2498
  %2501 = icmp slt i64 %2497, %2499
  %2502 = select i1 %2501, i64 %2497, i64 %2499
  %2503 = select i1 %2500, i64 %2498, i64 %2502
  %2504 = trunc i64 %2503 to i32
  br label %2505

2505:                                             ; preds = %2485, %2492
  %2506 = phi i32 [ %2504, %2492 ], [ %2489, %2485 ]
  store i32 %2506, i32* %154, align 4
  %2507 = load i32, i32* %535, align 4
  %2508 = load i32, i32* %544, align 8
  %2509 = add nsw i32 %2508, %2507
  %2510 = load i8, i8* %1951, align 1
  %2511 = icmp slt i8 %2510, 1
  br i1 %2511, label %2525, label %2512

2512:                                             ; preds = %2505
  %2513 = sext i8 %2510 to i64
  %2514 = add nuw nsw i64 %2513, 4294967295
  %2515 = and i64 %2514, 4294967295
  %2516 = shl i64 1, %2515
  %2517 = add nsw i64 %2516, -1
  %2518 = sub nsw i64 0, %2516
  %2519 = sext i32 %2509 to i64
  %2520 = icmp slt i64 %2519, %2518
  %2521 = icmp slt i64 %2517, %2519
  %2522 = select i1 %2521, i64 %2517, i64 %2519
  %2523 = select i1 %2520, i64 %2518, i64 %2522
  %2524 = trunc i64 %2523 to i32
  br label %2525

2525:                                             ; preds = %2505, %2512
  %2526 = phi i32 [ %2524, %2512 ], [ %2509, %2505 ]
  store i32 %2526, i32* %157, align 4
  %2527 = sub nsw i32 %2507, %2508
  %2528 = load i8, i8* %1951, align 1
  %2529 = icmp slt i8 %2528, 1
  br i1 %2529, label %2543, label %2530

2530:                                             ; preds = %2525
  %2531 = sext i8 %2528 to i64
  %2532 = add nuw nsw i64 %2531, 4294967295
  %2533 = and i64 %2532, 4294967295
  %2534 = shl i64 1, %2533
  %2535 = add nsw i64 %2534, -1
  %2536 = sub nsw i64 0, %2534
  %2537 = sext i32 %2527 to i64
  %2538 = icmp slt i64 %2537, %2536
  %2539 = icmp slt i64 %2535, %2537
  %2540 = select i1 %2539, i64 %2535, i64 %2537
  %2541 = select i1 %2538, i64 %2536, i64 %2540
  %2542 = trunc i64 %2541 to i32
  br label %2543

2543:                                             ; preds = %2525, %2530
  %2544 = phi i32 [ %2542, %2530 ], [ %2527, %2525 ]
  store i32 %2544, i32* %160, align 4
  %2545 = sub nsw i32 %2487, %2488
  %2546 = load i8, i8* %1951, align 1
  %2547 = icmp slt i8 %2546, 1
  br i1 %2547, label %2561, label %2548

2548:                                             ; preds = %2543
  %2549 = sext i8 %2546 to i64
  %2550 = add nuw nsw i64 %2549, 4294967295
  %2551 = and i64 %2550, 4294967295
  %2552 = shl i64 1, %2551
  %2553 = add nsw i64 %2552, -1
  %2554 = sub nsw i64 0, %2552
  %2555 = sext i32 %2545 to i64
  %2556 = icmp slt i64 %2555, %2554
  %2557 = icmp slt i64 %2553, %2555
  %2558 = select i1 %2557, i64 %2553, i64 %2555
  %2559 = select i1 %2556, i64 %2554, i64 %2558
  %2560 = trunc i64 %2559 to i32
  br label %2561

2561:                                             ; preds = %2543, %2548
  %2562 = phi i32 [ %2560, %2548 ], [ %2545, %2543 ]
  store i32 %2562, i32* %163, align 4
  %2563 = load i32, i32* %562, align 16
  %2564 = load i32, i32* %589, align 4
  %2565 = sub i32 %2564, %2563
  %2566 = load i8, i8* %1951, align 1
  %2567 = icmp slt i8 %2566, 1
  br i1 %2567, label %2581, label %2568

2568:                                             ; preds = %2561
  %2569 = sext i8 %2566 to i64
  %2570 = add nuw nsw i64 %2569, 4294967295
  %2571 = and i64 %2570, 4294967295
  %2572 = shl i64 1, %2571
  %2573 = add nsw i64 %2572, -1
  %2574 = sub nsw i64 0, %2572
  %2575 = sext i32 %2565 to i64
  %2576 = icmp slt i64 %2575, %2574
  %2577 = icmp slt i64 %2573, %2575
  %2578 = select i1 %2577, i64 %2573, i64 %2575
  %2579 = select i1 %2576, i64 %2574, i64 %2578
  %2580 = trunc i64 %2579 to i32
  br label %2581

2581:                                             ; preds = %2561, %2568
  %2582 = phi i32 [ %2580, %2568 ], [ %2565, %2561 ]
  store i32 %2582, i32* %166, align 4
  %2583 = load i32, i32* %571, align 4
  %2584 = load i32, i32* %580, align 8
  %2585 = sub i32 %2584, %2583
  %2586 = load i8, i8* %1951, align 1
  %2587 = icmp slt i8 %2586, 1
  br i1 %2587, label %2601, label %2588

2588:                                             ; preds = %2581
  %2589 = sext i8 %2586 to i64
  %2590 = add nuw nsw i64 %2589, 4294967295
  %2591 = and i64 %2590, 4294967295
  %2592 = shl i64 1, %2591
  %2593 = add nsw i64 %2592, -1
  %2594 = sub nsw i64 0, %2592
  %2595 = sext i32 %2585 to i64
  %2596 = icmp slt i64 %2595, %2594
  %2597 = icmp slt i64 %2593, %2595
  %2598 = select i1 %2597, i64 %2593, i64 %2595
  %2599 = select i1 %2596, i64 %2594, i64 %2598
  %2600 = trunc i64 %2599 to i32
  br label %2601

2601:                                             ; preds = %2581, %2588
  %2602 = phi i32 [ %2600, %2588 ], [ %2585, %2581 ]
  store i32 %2602, i32* %169, align 4
  %2603 = add nsw i32 %2584, %2583
  %2604 = load i8, i8* %1951, align 1
  %2605 = icmp slt i8 %2604, 1
  br i1 %2605, label %2619, label %2606

2606:                                             ; preds = %2601
  %2607 = sext i8 %2604 to i64
  %2608 = add nuw nsw i64 %2607, 4294967295
  %2609 = and i64 %2608, 4294967295
  %2610 = shl i64 1, %2609
  %2611 = add nsw i64 %2610, -1
  %2612 = sub nsw i64 0, %2610
  %2613 = sext i32 %2603 to i64
  %2614 = icmp slt i64 %2613, %2612
  %2615 = icmp slt i64 %2611, %2613
  %2616 = select i1 %2615, i64 %2611, i64 %2613
  %2617 = select i1 %2614, i64 %2612, i64 %2616
  %2618 = trunc i64 %2617 to i32
  br label %2619

2619:                                             ; preds = %2601, %2606
  %2620 = phi i32 [ %2618, %2606 ], [ %2603, %2601 ]
  store i32 %2620, i32* %172, align 4
  %2621 = add nsw i32 %2564, %2563
  %2622 = load i8, i8* %1951, align 1
  %2623 = icmp slt i8 %2622, 1
  br i1 %2623, label %2637, label %2624

2624:                                             ; preds = %2619
  %2625 = sext i8 %2622 to i64
  %2626 = add nuw nsw i64 %2625, 4294967295
  %2627 = and i64 %2626, 4294967295
  %2628 = shl i64 1, %2627
  %2629 = add nsw i64 %2628, -1
  %2630 = sub nsw i64 0, %2628
  %2631 = sext i32 %2621 to i64
  %2632 = icmp slt i64 %2631, %2630
  %2633 = icmp slt i64 %2629, %2631
  %2634 = select i1 %2633, i64 %2629, i64 %2631
  %2635 = select i1 %2632, i64 %2630, i64 %2634
  %2636 = trunc i64 %2635 to i32
  br label %2637

2637:                                             ; preds = %2619, %2624
  %2638 = phi i32 [ %2636, %2624 ], [ %2621, %2619 ]
  store i32 %2638, i32* %175, align 4
  %2639 = load i32, i32* %598, align 16
  %2640 = load i32, i32* %625, align 4
  %2641 = add nsw i32 %2640, %2639
  %2642 = load i8, i8* %1951, align 1
  %2643 = icmp slt i8 %2642, 1
  br i1 %2643, label %2657, label %2644

2644:                                             ; preds = %2637
  %2645 = sext i8 %2642 to i64
  %2646 = add nuw nsw i64 %2645, 4294967295
  %2647 = and i64 %2646, 4294967295
  %2648 = shl i64 1, %2647
  %2649 = add nsw i64 %2648, -1
  %2650 = sub nsw i64 0, %2648
  %2651 = sext i32 %2641 to i64
  %2652 = icmp slt i64 %2651, %2650
  %2653 = icmp slt i64 %2649, %2651
  %2654 = select i1 %2653, i64 %2649, i64 %2651
  %2655 = select i1 %2652, i64 %2650, i64 %2654
  %2656 = trunc i64 %2655 to i32
  br label %2657

2657:                                             ; preds = %2637, %2644
  %2658 = phi i32 [ %2656, %2644 ], [ %2641, %2637 ]
  store i32 %2658, i32* %178, align 4
  %2659 = load i32, i32* %607, align 4
  %2660 = load i32, i32* %616, align 8
  %2661 = add nsw i32 %2660, %2659
  %2662 = load i8, i8* %1951, align 1
  %2663 = icmp slt i8 %2662, 1
  br i1 %2663, label %2677, label %2664

2664:                                             ; preds = %2657
  %2665 = sext i8 %2662 to i64
  %2666 = add nuw nsw i64 %2665, 4294967295
  %2667 = and i64 %2666, 4294967295
  %2668 = shl i64 1, %2667
  %2669 = add nsw i64 %2668, -1
  %2670 = sub nsw i64 0, %2668
  %2671 = sext i32 %2661 to i64
  %2672 = icmp slt i64 %2671, %2670
  %2673 = icmp slt i64 %2669, %2671
  %2674 = select i1 %2673, i64 %2669, i64 %2671
  %2675 = select i1 %2672, i64 %2670, i64 %2674
  %2676 = trunc i64 %2675 to i32
  br label %2677

2677:                                             ; preds = %2657, %2664
  %2678 = phi i32 [ %2676, %2664 ], [ %2661, %2657 ]
  store i32 %2678, i32* %181, align 4
  %2679 = sub nsw i32 %2659, %2660
  %2680 = load i8, i8* %1951, align 1
  %2681 = icmp slt i8 %2680, 1
  br i1 %2681, label %2695, label %2682

2682:                                             ; preds = %2677
  %2683 = sext i8 %2680 to i64
  %2684 = add nuw nsw i64 %2683, 4294967295
  %2685 = and i64 %2684, 4294967295
  %2686 = shl i64 1, %2685
  %2687 = add nsw i64 %2686, -1
  %2688 = sub nsw i64 0, %2686
  %2689 = sext i32 %2679 to i64
  %2690 = icmp slt i64 %2689, %2688
  %2691 = icmp slt i64 %2687, %2689
  %2692 = select i1 %2691, i64 %2687, i64 %2689
  %2693 = select i1 %2690, i64 %2688, i64 %2692
  %2694 = trunc i64 %2693 to i32
  br label %2695

2695:                                             ; preds = %2677, %2682
  %2696 = phi i32 [ %2694, %2682 ], [ %2679, %2677 ]
  store i32 %2696, i32* %184, align 4
  %2697 = sub nsw i32 %2639, %2640
  %2698 = load i8, i8* %1951, align 1
  %2699 = icmp slt i8 %2698, 1
  br i1 %2699, label %2713, label %2700

2700:                                             ; preds = %2695
  %2701 = sext i8 %2698 to i64
  %2702 = add nuw nsw i64 %2701, 4294967295
  %2703 = and i64 %2702, 4294967295
  %2704 = shl i64 1, %2703
  %2705 = add nsw i64 %2704, -1
  %2706 = sub nsw i64 0, %2704
  %2707 = sext i32 %2697 to i64
  %2708 = icmp slt i64 %2707, %2706
  %2709 = icmp slt i64 %2705, %2707
  %2710 = select i1 %2709, i64 %2705, i64 %2707
  %2711 = select i1 %2708, i64 %2706, i64 %2710
  %2712 = trunc i64 %2711 to i32
  br label %2713

2713:                                             ; preds = %2695, %2700
  %2714 = phi i32 [ %2712, %2700 ], [ %2697, %2695 ]
  store i32 %2714, i32* %187, align 4
  %2715 = load i32, i32* %634, align 16
  %2716 = load i32, i32* %661, align 4
  %2717 = sub i32 %2716, %2715
  %2718 = load i8, i8* %1951, align 1
  %2719 = icmp slt i8 %2718, 1
  br i1 %2719, label %2733, label %2720

2720:                                             ; preds = %2713
  %2721 = sext i8 %2718 to i64
  %2722 = add nuw nsw i64 %2721, 4294967295
  %2723 = and i64 %2722, 4294967295
  %2724 = shl i64 1, %2723
  %2725 = add nsw i64 %2724, -1
  %2726 = sub nsw i64 0, %2724
  %2727 = sext i32 %2717 to i64
  %2728 = icmp slt i64 %2727, %2726
  %2729 = icmp slt i64 %2725, %2727
  %2730 = select i1 %2729, i64 %2725, i64 %2727
  %2731 = select i1 %2728, i64 %2726, i64 %2730
  %2732 = trunc i64 %2731 to i32
  br label %2733

2733:                                             ; preds = %2713, %2720
  %2734 = phi i32 [ %2732, %2720 ], [ %2717, %2713 ]
  store i32 %2734, i32* %190, align 4
  %2735 = load i32, i32* %643, align 4
  %2736 = load i32, i32* %652, align 8
  %2737 = sub i32 %2736, %2735
  %2738 = load i8, i8* %1951, align 1
  %2739 = icmp slt i8 %2738, 1
  br i1 %2739, label %2753, label %2740

2740:                                             ; preds = %2733
  %2741 = sext i8 %2738 to i64
  %2742 = add nuw nsw i64 %2741, 4294967295
  %2743 = and i64 %2742, 4294967295
  %2744 = shl i64 1, %2743
  %2745 = add nsw i64 %2744, -1
  %2746 = sub nsw i64 0, %2744
  %2747 = sext i32 %2737 to i64
  %2748 = icmp slt i64 %2747, %2746
  %2749 = icmp slt i64 %2745, %2747
  %2750 = select i1 %2749, i64 %2745, i64 %2747
  %2751 = select i1 %2748, i64 %2746, i64 %2750
  %2752 = trunc i64 %2751 to i32
  br label %2753

2753:                                             ; preds = %2733, %2740
  %2754 = phi i32 [ %2752, %2740 ], [ %2737, %2733 ]
  store i32 %2754, i32* %193, align 4
  %2755 = add nsw i32 %2736, %2735
  %2756 = load i8, i8* %1951, align 1
  %2757 = icmp slt i8 %2756, 1
  br i1 %2757, label %2771, label %2758

2758:                                             ; preds = %2753
  %2759 = sext i8 %2756 to i64
  %2760 = add nuw nsw i64 %2759, 4294967295
  %2761 = and i64 %2760, 4294967295
  %2762 = shl i64 1, %2761
  %2763 = add nsw i64 %2762, -1
  %2764 = sub nsw i64 0, %2762
  %2765 = sext i32 %2755 to i64
  %2766 = icmp slt i64 %2765, %2764
  %2767 = icmp slt i64 %2763, %2765
  %2768 = select i1 %2767, i64 %2763, i64 %2765
  %2769 = select i1 %2766, i64 %2764, i64 %2768
  %2770 = trunc i64 %2769 to i32
  br label %2771

2771:                                             ; preds = %2753, %2758
  %2772 = phi i32 [ %2770, %2758 ], [ %2755, %2753 ]
  store i32 %2772, i32* %196, align 4
  %2773 = add nsw i32 %2716, %2715
  %2774 = load i8, i8* %1951, align 1
  %2775 = icmp slt i8 %2774, 1
  br i1 %2775, label %2789, label %2776

2776:                                             ; preds = %2771
  %2777 = sext i8 %2774 to i64
  %2778 = add nuw nsw i64 %2777, 4294967295
  %2779 = and i64 %2778, 4294967295
  %2780 = shl i64 1, %2779
  %2781 = add nsw i64 %2780, -1
  %2782 = sub nsw i64 0, %2780
  %2783 = sext i32 %2773 to i64
  %2784 = icmp slt i64 %2783, %2782
  %2785 = icmp slt i64 %2781, %2783
  %2786 = select i1 %2785, i64 %2781, i64 %2783
  %2787 = select i1 %2784, i64 %2782, i64 %2786
  %2788 = trunc i64 %2787 to i32
  br label %2789

2789:                                             ; preds = %2771, %2776
  %2790 = phi i32 [ %2788, %2776 ], [ %2773, %2771 ]
  store i32 %2790, i32* %199, align 4
  %2791 = load i8, i8* %1951, align 1
  call void @av1_range_check_buf(i32 5, i32* %0, i32* %1, i32 64, i8 signext %2791) #4
  %2792 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 32
  %2793 = load i32, i32* %2792, align 16
  %2794 = load i32, i32* %1, align 4
  %2795 = load i32, i32* %13, align 4
  %2796 = mul nsw i32 %2794, %2793
  %2797 = sext i32 %2796 to i64
  %2798 = mul nsw i32 %2795, %2793
  %2799 = sext i32 %2798 to i64
  %2800 = add i64 %271, %2797
  %2801 = add i64 %2800, %2799
  %2802 = ashr i64 %2801, %274
  %2803 = trunc i64 %2802 to i32
  store i32 %2803, i32* %202, align 16
  %2804 = sub nsw i32 0, %2793
  %2805 = mul nsw i32 %2795, %2804
  %2806 = sext i32 %2805 to i64
  %2807 = add i64 %2800, %2806
  %2808 = ashr i64 %2807, %274
  %2809 = trunc i64 %2808 to i32
  store i32 %2809, i32* %203, align 4
  %2810 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 48
  %2811 = load i32, i32* %2810, align 16
  %2812 = load i32, i32* %16, align 4
  %2813 = getelementptr inbounds [7 x [64 x i32]], [7 x [64 x i32]]* @av1_cospi_arr_data, i64 0, i64 %8, i64 16
  %2814 = load i32, i32* %2813, align 16
  %2815 = sub nsw i32 0, %2814
  %2816 = load i32, i32* %19, align 4
  %2817 = mul nsw i32 %2812, %2811
  %2818 = sext i32 %2817 to i64
  %2819 = mul nsw i32 %2816, %2815
  %2820 = sext i32 %2819 to i64
  %2821 = add i64 %271, %2818
  %2822 = add i64 %2821, %2820
  %2823 = ashr i64 %2822, %274
  %2824 = trunc i64 %2823 to i32
  store i32 %2824, i32* %204, align 8
  %2825 = mul nsw i32 %2812, %2814
  %2826 = sext i32 %2825 to i64
  %2827 = mul nsw i32 %2816, %2811
  %2828 = sext i32 %2827 to i64
  %2829 = add i64 %271, %2826
  %2830 = add i64 %2829, %2828
  %2831 = ashr i64 %2830, %274
  %2832 = trunc i64 %2831 to i32
  store i32 %2832, i32* %207, align 4
  %2833 = load i32, i32* %22, align 4
  %2834 = load i32, i32* %25, align 4
  %2835 = add nsw i32 %2834, %2833
  %2836 = getelementptr inbounds i8, i8* %3, i64 6
  %2837 = load i8, i8* %2836, align 1
  %2838 = icmp slt i8 %2837, 1
  br i1 %2838, label %2839, label %2845

2839:                                             ; preds = %2789
  store i32 %2835, i32* %209, align 16
  %2840 = sub nsw i32 %2833, %2834
  store i32 %2840, i32* %210, align 4
  %2841 = load i32, i32* %28, align 4
  %2842 = load i32, i32* %31, align 4
  %2843 = sub i32 %2842, %2841
  store i32 %2843, i32* %211, align 8
  %2844 = add nsw i32 %2842, %2841
  br label %2887

2845:                                             ; preds = %2789
  %2846 = sext i8 %2837 to i64
  %2847 = add nuw nsw i64 %2846, 4294967295
  %2848 = and i64 %2847, 4294967295
  %2849 = shl i64 1, %2848
  %2850 = add nsw i64 %2849, -1
  %2851 = sub nsw i64 0, %2849
  %2852 = sext i32 %2835 to i64
  %2853 = icmp slt i64 %2852, %2851
  %2854 = icmp slt i64 %2850, %2852
  %2855 = select i1 %2854, i64 %2850, i64 %2852
  %2856 = select i1 %2853, i64 %2851, i64 %2855
  %2857 = trunc i64 %2856 to i32
  store i32 %2857, i32* %209, align 16
  %2858 = sub nsw i32 %2833, %2834
  %2859 = sext i32 %2858 to i64
  %2860 = icmp slt i64 %2859, %2851
  %2861 = icmp slt i64 %2850, %2859
  %2862 = select i1 %2861, i64 %2850, i64 %2859
  %2863 = select i1 %2860, i64 %2851, i64 %2862
  %2864 = trunc i64 %2863 to i32
  store i32 %2864, i32* %210, align 4
  %2865 = load i32, i32* %28, align 4
  %2866 = load i32, i32* %31, align 4
  %2867 = sub i32 %2866, %2865
  %2868 = sext i8 %2837 to i64
  %2869 = add nuw nsw i64 %2868, 4294967295
  %2870 = and i64 %2869, 4294967295
  %2871 = shl i64 1, %2870
  %2872 = add nsw i64 %2871, -1
  %2873 = sub nsw i64 0, %2871
  %2874 = sext i32 %2867 to i64
  %2875 = icmp slt i64 %2874, %2873
  %2876 = icmp slt i64 %2872, %2874
  %2877 = select i1 %2876, i64 %2872, i64 %2874
  %2878 = select i1 %2875, i64 %2873, i64 %2877
  %2879 = trunc i64 %2878 to i32
  store i32 %2879, i32* %211, align 8
  %2880 = add nsw i32 %2866, %2865
  %2881 = sext i32 %2880 to i64
  %2882 = icmp slt i64 %2881, %2873
  %2883 = icmp slt i64 %2872, %2881
  %2884 = select i1 %2883, i64 %2872, i64 %2881
  %2885 = select i1 %2882, i64 %2873, i64 %2884
  %2886 = trunc i64 %2885 to i32
  br label %2887

2887:                                             ; preds = %2839, %2845
  %2888 = phi i32 [ %2886, %2845 ], [ %2844, %2839 ]
  store i32 %2888, i32* %214, align 4
  %2889 = load i32, i32* %34, align 4
  store i32 %2889, i32* %216, align 16
  %2890 = load i32, i32* %37, align 4
  %2891 = load i32, i32* %52, align 4
  %2892 = mul nsw i32 %2890, %2815
  %2893 = sext i32 %2892 to i64
  %2894 = mul nsw i32 %2891, %2811
  %2895 = sext i32 %2894 to i64
  %2896 = add i64 %271, %2893
  %2897 = add i64 %2896, %2895
  %2898 = ashr i64 %2897, %274
  %2899 = trunc i64 %2898 to i32
  store i32 %2899, i32* %217, align 4
  %2900 = sub nsw i32 0, %2811
  %2901 = load i32, i32* %40, align 4
  %2902 = load i32, i32* %49, align 4
  %2903 = mul nsw i32 %2901, %2900
  %2904 = sext i32 %2903 to i64
  %2905 = mul nsw i32 %2902, %2815
  %2906 = sext i32 %2905 to i64
  %2907 = add i64 %271, %2904
  %2908 = add i64 %2907, %2906
  %2909 = ashr i64 %2908, %274
  %2910 = trunc i64 %2909 to i32
  store i32 %2910, i32* %218, align 8
  %2911 = load i32, i32* %43, align 4
  store i32 %2911, i32* %221, align 4
  %2912 = load i32, i32* %46, align 4
  store i32 %2912, i32* %223, align 16
  %2913 = mul nsw i32 %2901, %2815
  %2914 = sext i32 %2913 to i64
  %2915 = mul nsw i32 %2902, %2811
  %2916 = sext i32 %2915 to i64
  %2917 = add i64 %271, %2914
  %2918 = add i64 %2917, %2916
  %2919 = ashr i64 %2918, %274
  %2920 = trunc i64 %2919 to i32
  store i32 %2920, i32* %224, align 4
  %2921 = mul nsw i32 %2890, %2811
  %2922 = sext i32 %2921 to i64
  %2923 = mul nsw i32 %2891, %2814
  %2924 = sext i32 %2923 to i64
  %2925 = add i64 %271, %2922
  %2926 = add i64 %2925, %2924
  %2927 = ashr i64 %2926, %274
  %2928 = trunc i64 %2927 to i32
  store i32 %2928, i32* %225, align 8
  %2929 = load i32, i32* %55, align 4
  store i32 %2929, i32* %228, align 4
  %2930 = load i32, i32* %58, align 4
  %2931 = load i32, i32* %67, align 4
  %2932 = add nsw i32 %2931, %2930
  br i1 %2838, label %2933, label %2961

2933:                                             ; preds = %2887
  store i32 %2932, i32* %230, align 16
  %2934 = load i32, i32* %61, align 4
  %2935 = load i32, i32* %64, align 4
  %2936 = add nsw i32 %2935, %2934
  store i32 %2936, i32* %231, align 4
  %2937 = sub nsw i32 %2934, %2935
  store i32 %2937, i32* %232, align 8
  %2938 = sub nsw i32 %2930, %2931
  store i32 %2938, i32* %235, align 4
  %2939 = bitcast i32* %70 to <4 x i32>*
  %2940 = load <4 x i32>, <4 x i32>* %2939, align 4
  %2941 = shufflevector <4 x i32> %2940, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %2942 = sub <4 x i32> %2941, %2940
  %2943 = add nsw <4 x i32> %2941, %2940
  %2944 = shufflevector <4 x i32> %2942, <4 x i32> %2943, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %2945 = bitcast i32* %237 to <4 x i32>*
  store <4 x i32> %2944, <4 x i32>* %2945, align 16
  %2946 = bitcast i32* %82 to <4 x i32>*
  %2947 = load <4 x i32>, <4 x i32>* %2946, align 4
  %2948 = shufflevector <4 x i32> %2947, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %2949 = add nsw <4 x i32> %2948, %2947
  %2950 = sub nsw <4 x i32> %2948, %2947
  %2951 = shufflevector <4 x i32> %2949, <4 x i32> %2950, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %2952 = bitcast i32* %244 to <4 x i32>*
  store <4 x i32> %2951, <4 x i32>* %2952, align 16
  %2953 = load i32, i32* %94, align 4
  %2954 = load i32, i32* %103, align 4
  %2955 = sub i32 %2954, %2953
  store i32 %2955, i32* %251, align 16
  %2956 = load i32, i32* %97, align 4
  %2957 = load i32, i32* %100, align 4
  %2958 = sub i32 %2957, %2956
  store i32 %2958, i32* %252, align 4
  %2959 = add nsw i32 %2957, %2956
  store i32 %2959, i32* %253, align 8
  %2960 = add nsw i32 %2954, %2953
  br label %3135

2961:                                             ; preds = %2887
  %2962 = sext i8 %2837 to i64
  %2963 = add nuw nsw i64 %2962, 4294967295
  %2964 = and i64 %2963, 4294967295
  %2965 = shl i64 1, %2964
  %2966 = add nsw i64 %2965, -1
  %2967 = sub nsw i64 0, %2965
  %2968 = sext i32 %2932 to i64
  %2969 = icmp slt i64 %2968, %2967
  %2970 = icmp slt i64 %2966, %2968
  %2971 = select i1 %2970, i64 %2966, i64 %2968
  %2972 = select i1 %2969, i64 %2967, i64 %2971
  %2973 = trunc i64 %2972 to i32
  store i32 %2973, i32* %230, align 16
  %2974 = load i32, i32* %61, align 4
  %2975 = load i32, i32* %64, align 4
  %2976 = add nsw i32 %2975, %2974
  %2977 = sext i32 %2976 to i64
  %2978 = icmp slt i64 %2977, %2967
  %2979 = icmp slt i64 %2966, %2977
  %2980 = select i1 %2979, i64 %2966, i64 %2977
  %2981 = select i1 %2978, i64 %2967, i64 %2980
  %2982 = trunc i64 %2981 to i32
  store i32 %2982, i32* %231, align 4
  %2983 = sub nsw i32 %2974, %2975
  %2984 = sext i8 %2837 to i64
  %2985 = add nuw nsw i64 %2984, 4294967295
  %2986 = and i64 %2985, 4294967295
  %2987 = shl i64 1, %2986
  %2988 = add nsw i64 %2987, -1
  %2989 = sub nsw i64 0, %2987
  %2990 = sext i32 %2983 to i64
  %2991 = icmp slt i64 %2990, %2989
  %2992 = icmp slt i64 %2988, %2990
  %2993 = select i1 %2992, i64 %2988, i64 %2990
  %2994 = select i1 %2991, i64 %2989, i64 %2993
  %2995 = trunc i64 %2994 to i32
  store i32 %2995, i32* %232, align 8
  %2996 = sub nsw i32 %2930, %2931
  %2997 = sext i32 %2996 to i64
  %2998 = icmp slt i64 %2997, %2989
  %2999 = icmp slt i64 %2988, %2997
  %3000 = select i1 %2999, i64 %2988, i64 %2997
  %3001 = select i1 %2998, i64 %2989, i64 %3000
  %3002 = trunc i64 %3001 to i32
  store i32 %3002, i32* %235, align 4
  %3003 = load i32, i32* %70, align 4
  %3004 = load i32, i32* %79, align 4
  %3005 = sub i32 %3004, %3003
  %3006 = sext i8 %2837 to i64
  %3007 = add nuw nsw i64 %3006, 4294967295
  %3008 = and i64 %3007, 4294967295
  %3009 = shl i64 1, %3008
  %3010 = add nsw i64 %3009, -1
  %3011 = sub nsw i64 0, %3009
  %3012 = sext i32 %3005 to i64
  %3013 = icmp slt i64 %3012, %3011
  %3014 = icmp slt i64 %3010, %3012
  %3015 = select i1 %3014, i64 %3010, i64 %3012
  %3016 = select i1 %3013, i64 %3011, i64 %3015
  %3017 = trunc i64 %3016 to i32
  store i32 %3017, i32* %237, align 16
  %3018 = load i32, i32* %73, align 4
  %3019 = load i32, i32* %76, align 4
  %3020 = sub i32 %3019, %3018
  %3021 = sext i32 %3020 to i64
  %3022 = icmp slt i64 %3021, %3011
  %3023 = icmp slt i64 %3010, %3021
  %3024 = select i1 %3023, i64 %3010, i64 %3021
  %3025 = select i1 %3022, i64 %3011, i64 %3024
  %3026 = trunc i64 %3025 to i32
  store i32 %3026, i32* %238, align 4
  %3027 = add nsw i32 %3019, %3018
  %3028 = sext i8 %2837 to i64
  %3029 = add nuw nsw i64 %3028, 4294967295
  %3030 = and i64 %3029, 4294967295
  %3031 = shl i64 1, %3030
  %3032 = add nsw i64 %3031, -1
  %3033 = sub nsw i64 0, %3031
  %3034 = sext i32 %3027 to i64
  %3035 = icmp slt i64 %3034, %3033
  %3036 = icmp slt i64 %3032, %3034
  %3037 = select i1 %3036, i64 %3032, i64 %3034
  %3038 = select i1 %3035, i64 %3033, i64 %3037
  %3039 = trunc i64 %3038 to i32
  store i32 %3039, i32* %239, align 8
  %3040 = add nsw i32 %3004, %3003
  %3041 = sext i32 %3040 to i64
  %3042 = icmp slt i64 %3041, %3033
  %3043 = icmp slt i64 %3032, %3041
  %3044 = select i1 %3043, i64 %3032, i64 %3041
  %3045 = select i1 %3042, i64 %3033, i64 %3044
  %3046 = trunc i64 %3045 to i32
  store i32 %3046, i32* %242, align 4
  %3047 = load i32, i32* %82, align 4
  %3048 = load i32, i32* %91, align 4
  %3049 = add nsw i32 %3048, %3047
  %3050 = sext i8 %2837 to i64
  %3051 = add nuw nsw i64 %3050, 4294967295
  %3052 = and i64 %3051, 4294967295
  %3053 = shl i64 1, %3052
  %3054 = add nsw i64 %3053, -1
  %3055 = sub nsw i64 0, %3053
  %3056 = sext i32 %3049 to i64
  %3057 = icmp slt i64 %3056, %3055
  %3058 = icmp slt i64 %3054, %3056
  %3059 = select i1 %3058, i64 %3054, i64 %3056
  %3060 = select i1 %3057, i64 %3055, i64 %3059
  %3061 = trunc i64 %3060 to i32
  store i32 %3061, i32* %244, align 16
  %3062 = load i32, i32* %85, align 4
  %3063 = load i32, i32* %88, align 4
  %3064 = add nsw i32 %3063, %3062
  %3065 = sext i32 %3064 to i64
  %3066 = icmp slt i64 %3065, %3055
  %3067 = icmp slt i64 %3054, %3065
  %3068 = select i1 %3067, i64 %3054, i64 %3065
  %3069 = select i1 %3066, i64 %3055, i64 %3068
  %3070 = trunc i64 %3069 to i32
  store i32 %3070, i32* %245, align 4
  %3071 = sub nsw i32 %3062, %3063
  %3072 = sext i8 %2837 to i64
  %3073 = add nuw nsw i64 %3072, 4294967295
  %3074 = and i64 %3073, 4294967295
  %3075 = shl i64 1, %3074
  %3076 = add nsw i64 %3075, -1
  %3077 = sub nsw i64 0, %3075
  %3078 = sext i32 %3071 to i64
  %3079 = icmp slt i64 %3078, %3077
  %3080 = icmp slt i64 %3076, %3078
  %3081 = select i1 %3080, i64 %3076, i64 %3078
  %3082 = select i1 %3079, i64 %3077, i64 %3081
  %3083 = trunc i64 %3082 to i32
  store i32 %3083, i32* %246, align 8
  %3084 = sub nsw i32 %3047, %3048
  %3085 = sext i32 %3084 to i64
  %3086 = icmp slt i64 %3085, %3077
  %3087 = icmp slt i64 %3076, %3085
  %3088 = select i1 %3087, i64 %3076, i64 %3085
  %3089 = select i1 %3086, i64 %3077, i64 %3088
  %3090 = trunc i64 %3089 to i32
  store i32 %3090, i32* %249, align 4
  %3091 = load i32, i32* %94, align 4
  %3092 = load i32, i32* %103, align 4
  %3093 = sub i32 %3092, %3091
  %3094 = sext i8 %2837 to i64
  %3095 = add nuw nsw i64 %3094, 4294967295
  %3096 = and i64 %3095, 4294967295
  %3097 = shl i64 1, %3096
  %3098 = add nsw i64 %3097, -1
  %3099 = sub nsw i64 0, %3097
  %3100 = sext i32 %3093 to i64
  %3101 = icmp slt i64 %3100, %3099
  %3102 = icmp slt i64 %3098, %3100
  %3103 = select i1 %3102, i64 %3098, i64 %3100
  %3104 = select i1 %3101, i64 %3099, i64 %3103
  %3105 = trunc i64 %3104 to i32
  store i32 %3105, i32* %251, align 16
  %3106 = load i32, i32* %97, align 4
  %3107 = load i32, i32* %100, align 4
  %3108 = sub i32 %3107, %3106
  %3109 = sext i32 %3108 to i64
  %3110 = icmp slt i64 %3109, %3099
  %3111 = icmp slt i64 %3098, %3109
  %3112 = select i1 %3111, i64 %3098, i64 %3109
  %3113 = select i1 %3110, i64 %3099, i64 %3112
  %3114 = trunc i64 %3113 to i32
  store i32 %3114, i32* %252, align 4
  %3115 = add nsw i32 %3107, %3106
  %3116 = sext i8 %2837 to i64
  %3117 = add nuw nsw i64 %3116, 4294967295
  %3118 = and i64 %3117, 4294967295
  %3119 = shl i64 1, %3118
  %3120 = add nsw i64 %3119, -1
  %3121 = sub nsw i64 0, %3119
  %3122 = sext i32 %3115 to i64
  %3123 = icmp slt i64 %3122, %3121
  %3124 = icmp slt i64 %3120, %3122
  %3125 = select i1 %3124, i64 %3120, i64 %3122
  %3126 = select i1 %3123, i64 %3121, i64 %3125
  %3127 = trunc i64 %3126 to i32
  store i32 %3127, i32* %253, align 8
  %3128 = add nsw i32 %3092, %3091
  %3129 = sext i32 %3128 to i64
  %3130 = icmp slt i64 %3129, %3121
  %3131 = icmp slt i64 %3120, %3129
  %3132 = select i1 %3131, i64 %3120, i64 %3129
  %3133 = select i1 %3130, i64 %3121, i64 %3132
  %3134 = trunc i64 %3133 to i32
  br label %3135

3135:                                             ; preds = %2933, %2961
  %3136 = phi i32 [ %3134, %2961 ], [ %2960, %2933 ]
  store i32 %3136, i32* %256, align 4
  %3137 = load i32, i32* %106, align 4
  store i32 %3137, i32* %277, align 16
  %3138 = load i32, i32* %109, align 4
  store i32 %3138, i32* %293, align 4
  %3139 = load i32, i32* %112, align 4
  %3140 = load i32, i32* %193, align 4
  %3141 = mul nsw i32 %3139, %1907
  %3142 = sext i32 %3141 to i64
  %3143 = mul nsw i32 %3140, %1903
  %3144 = sext i32 %3143 to i64
  %3145 = add i64 %271, %3142
  %3146 = add i64 %3145, %3144
  %3147 = ashr i64 %3146, %274
  %3148 = trunc i64 %3147 to i32
  store i32 %3148, i32* %309, align 8
  %3149 = load i32, i32* %115, align 4
  %3150 = load i32, i32* %190, align 4
  %3151 = mul nsw i32 %3149, %1907
  %3152 = sext i32 %3151 to i64
  %3153 = mul nsw i32 %3150, %1903
  %3154 = sext i32 %3153 to i64
  %3155 = add i64 %271, %3152
  %3156 = add i64 %3155, %3154
  %3157 = ashr i64 %3156, %274
  %3158 = trunc i64 %3157 to i32
  store i32 %3158, i32* %325, align 4
  %3159 = load i32, i32* %118, align 4
  %3160 = load i32, i32* %187, align 4
  %3161 = mul nsw i32 %3159, %2112
  %3162 = sext i32 %3161 to i64
  %3163 = mul nsw i32 %3160, %1907
  %3164 = sext i32 %3163 to i64
  %3165 = add i64 %271, %3162
  %3166 = add i64 %3165, %3164
  %3167 = ashr i64 %3166, %274
  %3168 = trunc i64 %3167 to i32
  store i32 %3168, i32* %341, align 16
  %3169 = load i32, i32* %121, align 4
  %3170 = load i32, i32* %184, align 4
  %3171 = mul nsw i32 %3169, %2112
  %3172 = sext i32 %3171 to i64
  %3173 = mul nsw i32 %3170, %1907
  %3174 = sext i32 %3173 to i64
  %3175 = add i64 %271, %3172
  %3176 = add i64 %3175, %3174
  %3177 = ashr i64 %3176, %274
  %3178 = trunc i64 %3177 to i32
  store i32 %3178, i32* %357, align 4
  %3179 = bitcast i32* %124 to <4 x i32>*
  %3180 = load <4 x i32>, <4 x i32>* %3179, align 4
  %3181 = bitcast i32* %373 to <4 x i32>*
  store <4 x i32> %3180, <4 x i32>* %3181, align 8
  %3182 = load i32, i32* %136, align 4
  %3183 = load i32, i32* %169, align 4
  %3184 = mul nsw i32 %3182, %1922
  %3185 = sext i32 %3184 to i64
  %3186 = mul nsw i32 %3183, %1918
  %3187 = sext i32 %3186 to i64
  %3188 = add i64 %271, %3185
  %3189 = add i64 %3188, %3187
  %3190 = ashr i64 %3189, %274
  %3191 = trunc i64 %3190 to i32
  store i32 %3191, i32* %437, align 8
  %3192 = load i32, i32* %139, align 4
  %3193 = load i32, i32* %166, align 4
  %3194 = mul nsw i32 %3192, %1922
  %3195 = sext i32 %3194 to i64
  %3196 = mul nsw i32 %3193, %1918
  %3197 = sext i32 %3196 to i64
  %3198 = add i64 %271, %3195
  %3199 = add i64 %3198, %3197
  %3200 = ashr i64 %3199, %274
  %3201 = trunc i64 %3200 to i32
  store i32 %3201, i32* %453, align 4
  %3202 = load i32, i32* %142, align 4
  %3203 = load i32, i32* %163, align 4
  %3204 = mul nsw i32 %3202, %2135
  %3205 = sext i32 %3204 to i64
  %3206 = mul nsw i32 %3203, %1922
  %3207 = sext i32 %3206 to i64
  %3208 = add i64 %271, %3205
  %3209 = add i64 %3208, %3207
  %3210 = ashr i64 %3209, %274
  %3211 = trunc i64 %3210 to i32
  store i32 %3211, i32* %469, align 16
  %3212 = load i32, i32* %145, align 4
  %3213 = load i32, i32* %160, align 4
  %3214 = mul nsw i32 %3212, %2135
  %3215 = sext i32 %3214 to i64
  %3216 = mul nsw i32 %3213, %1922
  %3217 = sext i32 %3216 to i64
  %3218 = add i64 %271, %3215
  %3219 = add i64 %3218, %3217
  %3220 = ashr i64 %3219, %274
  %3221 = trunc i64 %3220 to i32
  store i32 %3221, i32* %485, align 4
  %3222 = load i32, i32* %148, align 4
  store i32 %3222, i32* %501, align 8
  %3223 = load i32, i32* %151, align 4
  store i32 %3223, i32* %517, align 4
  %3224 = load i32, i32* %154, align 4
  store i32 %3224, i32* %526, align 16
  %3225 = load i32, i32* %157, align 4
  store i32 %3225, i32* %535, align 4
  %3226 = mul nsw i32 %3212, %1922
  %3227 = sext i32 %3226 to i64
  %3228 = mul nsw i32 %3213, %1918
  %3229 = sext i32 %3228 to i64
  %3230 = add i64 %271, %3227
  %3231 = add i64 %3230, %3229
  %3232 = ashr i64 %3231, %274
  %3233 = trunc i64 %3232 to i32
  store i32 %3233, i32* %544, align 8
  %3234 = mul nsw i32 %3202, %1922
  %3235 = sext i32 %3234 to i64
  %3236 = mul nsw i32 %3203, %1918
  %3237 = sext i32 %3236 to i64
  %3238 = add i64 %271, %3235
  %3239 = add i64 %3238, %3237
  %3240 = ashr i64 %3239, %274
  %3241 = trunc i64 %3240 to i32
  store i32 %3241, i32* %553, align 4
  %3242 = mul nsw i32 %3192, %1918
  %3243 = sext i32 %3242 to i64
  %3244 = mul nsw i32 %3193, %1921
  %3245 = sext i32 %3244 to i64
  %3246 = add i64 %271, %3243
  %3247 = add i64 %3246, %3245
  %3248 = ashr i64 %3247, %274
  %3249 = trunc i64 %3248 to i32
  store i32 %3249, i32* %562, align 16
  %3250 = mul nsw i32 %3182, %1918
  %3251 = sext i32 %3250 to i64
  %3252 = mul nsw i32 %3183, %1921
  %3253 = sext i32 %3252 to i64
  %3254 = add i64 %271, %3251
  %3255 = add i64 %3254, %3253
  %3256 = ashr i64 %3255, %274
  %3257 = trunc i64 %3256 to i32
  store i32 %3257, i32* %571, align 4
  %3258 = bitcast i32* %172 to <4 x i32>*
  %3259 = load <4 x i32>, <4 x i32>* %3258, align 4
  %3260 = bitcast i32* %580 to <4 x i32>*
  store <4 x i32> %3259, <4 x i32>* %3260, align 8
  %3261 = load i32, i32* %121, align 4
  %3262 = load i32, i32* %184, align 4
  %3263 = mul nsw i32 %3261, %1907
  %3264 = sext i32 %3263 to i64
  %3265 = mul nsw i32 %3262, %1903
  %3266 = sext i32 %3265 to i64
  %3267 = add i64 %271, %3264
  %3268 = add i64 %3267, %3266
  %3269 = ashr i64 %3268, %274
  %3270 = trunc i64 %3269 to i32
  store i32 %3270, i32* %616, align 8
  %3271 = load i32, i32* %118, align 4
  %3272 = load i32, i32* %187, align 4
  %3273 = mul nsw i32 %3271, %1907
  %3274 = sext i32 %3273 to i64
  %3275 = mul nsw i32 %3272, %1903
  %3276 = sext i32 %3275 to i64
  %3277 = add i64 %271, %3274
  %3278 = add i64 %3277, %3276
  %3279 = ashr i64 %3278, %274
  %3280 = trunc i64 %3279 to i32
  store i32 %3280, i32* %625, align 4
  %3281 = load i32, i32* %115, align 4
  %3282 = load i32, i32* %190, align 4
  %3283 = mul nsw i32 %3281, %1903
  %3284 = sext i32 %3283 to i64
  %3285 = mul nsw i32 %3282, %1906
  %3286 = sext i32 %3285 to i64
  %3287 = add i64 %271, %3284
  %3288 = add i64 %3287, %3286
  %3289 = ashr i64 %3288, %274
  %3290 = trunc i64 %3289 to i32
  store i32 %3290, i32* %634, align 16
  %3291 = load i32, i32* %112, align 4
  %3292 = load i32, i32* %193, align 4
  %3293 = mul nsw i32 %3291, %1903
  %3294 = sext i32 %3293 to i64
  %3295 = mul nsw i32 %3292, %1906
  %3296 = sext i32 %3295 to i64
  %3297 = add i64 %271, %3294
  %3298 = add i64 %3297, %3296
  %3299 = ashr i64 %3298, %274
  %3300 = trunc i64 %3299 to i32
  store i32 %3300, i32* %643, align 4
  %3301 = load i32, i32* %196, align 4
  store i32 %3301, i32* %652, align 8
  %3302 = load i32, i32* %199, align 4
  store i32 %3302, i32* %661, align 4
  %3303 = load i8, i8* %2836, align 1
  call void @av1_range_check_buf(i32 6, i32* %0, i32* nonnull %202, i32 64, i8 signext %3303) #4
  %3304 = load i32, i32* %202, align 16
  %3305 = load i32, i32* %207, align 4
  %3306 = add nsw i32 %3305, %3304
  %3307 = getelementptr inbounds i8, i8* %3, i64 7
  %3308 = load i8, i8* %3307, align 1
  %3309 = icmp slt i8 %3308, 1
  br i1 %3309, label %3323, label %3310

3310:                                             ; preds = %3135
  %3311 = sext i8 %3308 to i64
  %3312 = add nuw nsw i64 %3311, 4294967295
  %3313 = and i64 %3312, 4294967295
  %3314 = shl i64 1, %3313
  %3315 = add nsw i64 %3314, -1
  %3316 = sub nsw i64 0, %3314
  %3317 = sext i32 %3306 to i64
  %3318 = icmp slt i64 %3317, %3316
  %3319 = icmp slt i64 %3315, %3317
  %3320 = select i1 %3319, i64 %3315, i64 %3317
  %3321 = select i1 %3318, i64 %3316, i64 %3320
  %3322 = trunc i64 %3321 to i32
  br label %3323

3323:                                             ; preds = %3135, %3310
  %3324 = phi i32 [ %3322, %3310 ], [ %3306, %3135 ]
  store i32 %3324, i32* %1, align 4
  %3325 = load i32, i32* %203, align 4
  %3326 = load i32, i32* %204, align 8
  %3327 = add nsw i32 %3326, %3325
  %3328 = load i8, i8* %3307, align 1
  %3329 = icmp slt i8 %3328, 1
  br i1 %3329, label %3343, label %3330

3330:                                             ; preds = %3323
  %3331 = sext i8 %3328 to i64
  %3332 = add nuw nsw i64 %3331, 4294967295
  %3333 = and i64 %3332, 4294967295
  %3334 = shl i64 1, %3333
  %3335 = add nsw i64 %3334, -1
  %3336 = sub nsw i64 0, %3334
  %3337 = sext i32 %3327 to i64
  %3338 = icmp slt i64 %3337, %3336
  %3339 = icmp slt i64 %3335, %3337
  %3340 = select i1 %3339, i64 %3335, i64 %3337
  %3341 = select i1 %3338, i64 %3336, i64 %3340
  %3342 = trunc i64 %3341 to i32
  br label %3343

3343:                                             ; preds = %3323, %3330
  %3344 = phi i32 [ %3342, %3330 ], [ %3327, %3323 ]
  store i32 %3344, i32* %13, align 4
  %3345 = sub nsw i32 %3325, %3326
  %3346 = load i8, i8* %3307, align 1
  %3347 = icmp slt i8 %3346, 1
  br i1 %3347, label %3361, label %3348

3348:                                             ; preds = %3343
  %3349 = sext i8 %3346 to i64
  %3350 = add nuw nsw i64 %3349, 4294967295
  %3351 = and i64 %3350, 4294967295
  %3352 = shl i64 1, %3351
  %3353 = add nsw i64 %3352, -1
  %3354 = sub nsw i64 0, %3352
  %3355 = sext i32 %3345 to i64
  %3356 = icmp slt i64 %3355, %3354
  %3357 = icmp slt i64 %3353, %3355
  %3358 = select i1 %3357, i64 %3353, i64 %3355
  %3359 = select i1 %3356, i64 %3354, i64 %3358
  %3360 = trunc i64 %3359 to i32
  br label %3361

3361:                                             ; preds = %3343, %3348
  %3362 = phi i32 [ %3360, %3348 ], [ %3345, %3343 ]
  store i32 %3362, i32* %16, align 4
  %3363 = sub nsw i32 %3304, %3305
  %3364 = load i8, i8* %3307, align 1
  %3365 = icmp slt i8 %3364, 1
  br i1 %3365, label %3379, label %3366

3366:                                             ; preds = %3361
  %3367 = sext i8 %3364 to i64
  %3368 = add nuw nsw i64 %3367, 4294967295
  %3369 = and i64 %3368, 4294967295
  %3370 = shl i64 1, %3369
  %3371 = add nsw i64 %3370, -1
  %3372 = sub nsw i64 0, %3370
  %3373 = sext i32 %3363 to i64
  %3374 = icmp slt i64 %3373, %3372
  %3375 = icmp slt i64 %3371, %3373
  %3376 = select i1 %3375, i64 %3371, i64 %3373
  %3377 = select i1 %3374, i64 %3372, i64 %3376
  %3378 = trunc i64 %3377 to i32
  br label %3379

3379:                                             ; preds = %3361, %3366
  %3380 = phi i32 [ %3378, %3366 ], [ %3363, %3361 ]
  store i32 %3380, i32* %19, align 4
  %3381 = load i32, i32* %209, align 16
  store i32 %3381, i32* %22, align 4
  %3382 = load i32, i32* %210, align 4
  %3383 = load i32, i32* %211, align 8
  %3384 = mul nsw i32 %3382, %2804
  %3385 = sext i32 %3384 to i64
  %3386 = mul nsw i32 %3383, %2793
  %3387 = sext i32 %3386 to i64
  %3388 = add i64 %271, %3385
  %3389 = add i64 %3388, %3387
  %3390 = ashr i64 %3389, %274
  %3391 = trunc i64 %3390 to i32
  store i32 %3391, i32* %25, align 4
  %3392 = mul nsw i32 %3382, %2793
  %3393 = sext i32 %3392 to i64
  %3394 = add i64 %271, %3393
  %3395 = add i64 %3394, %3387
  %3396 = ashr i64 %3395, %274
  %3397 = trunc i64 %3396 to i32
  store i32 %3397, i32* %28, align 4
  %3398 = load i32, i32* %214, align 4
  store i32 %3398, i32* %31, align 4
  %3399 = load i32, i32* %216, align 16
  %3400 = load i32, i32* %221, align 4
  %3401 = add nsw i32 %3400, %3399
  %3402 = load i8, i8* %3307, align 1
  %3403 = icmp slt i8 %3402, 1
  br i1 %3403, label %3417, label %3404

3404:                                             ; preds = %3379
  %3405 = sext i8 %3402 to i64
  %3406 = add nuw nsw i64 %3405, 4294967295
  %3407 = and i64 %3406, 4294967295
  %3408 = shl i64 1, %3407
  %3409 = add nsw i64 %3408, -1
  %3410 = sub nsw i64 0, %3408
  %3411 = sext i32 %3401 to i64
  %3412 = icmp slt i64 %3411, %3410
  %3413 = icmp slt i64 %3409, %3411
  %3414 = select i1 %3413, i64 %3409, i64 %3411
  %3415 = select i1 %3412, i64 %3410, i64 %3414
  %3416 = trunc i64 %3415 to i32
  br label %3417

3417:                                             ; preds = %3379, %3404
  %3418 = phi i32 [ %3416, %3404 ], [ %3401, %3379 ]
  store i32 %3418, i32* %34, align 4
  %3419 = load i32, i32* %217, align 4
  %3420 = load i32, i32* %218, align 8
  %3421 = add nsw i32 %3420, %3419
  %3422 = load i8, i8* %3307, align 1
  %3423 = icmp slt i8 %3422, 1
  br i1 %3423, label %3437, label %3424

3424:                                             ; preds = %3417
  %3425 = sext i8 %3422 to i64
  %3426 = add nuw nsw i64 %3425, 4294967295
  %3427 = and i64 %3426, 4294967295
  %3428 = shl i64 1, %3427
  %3429 = add nsw i64 %3428, -1
  %3430 = sub nsw i64 0, %3428
  %3431 = sext i32 %3421 to i64
  %3432 = icmp slt i64 %3431, %3430
  %3433 = icmp slt i64 %3429, %3431
  %3434 = select i1 %3433, i64 %3429, i64 %3431
  %3435 = select i1 %3432, i64 %3430, i64 %3434
  %3436 = trunc i64 %3435 to i32
  br label %3437

3437:                                             ; preds = %3417, %3424
  %3438 = phi i32 [ %3436, %3424 ], [ %3421, %3417 ]
  store i32 %3438, i32* %37, align 4
  %3439 = sub nsw i32 %3419, %3420
  %3440 = load i8, i8* %3307, align 1
  %3441 = icmp slt i8 %3440, 1
  br i1 %3441, label %3455, label %3442

3442:                                             ; preds = %3437
  %3443 = sext i8 %3440 to i64
  %3444 = add nuw nsw i64 %3443, 4294967295
  %3445 = and i64 %3444, 4294967295
  %3446 = shl i64 1, %3445
  %3447 = add nsw i64 %3446, -1
  %3448 = sub nsw i64 0, %3446
  %3449 = sext i32 %3439 to i64
  %3450 = icmp slt i64 %3449, %3448
  %3451 = icmp slt i64 %3447, %3449
  %3452 = select i1 %3451, i64 %3447, i64 %3449
  %3453 = select i1 %3450, i64 %3448, i64 %3452
  %3454 = trunc i64 %3453 to i32
  br label %3455

3455:                                             ; preds = %3437, %3442
  %3456 = phi i32 [ %3454, %3442 ], [ %3439, %3437 ]
  store i32 %3456, i32* %40, align 4
  %3457 = sub nsw i32 %3399, %3400
  %3458 = load i8, i8* %3307, align 1
  %3459 = icmp slt i8 %3458, 1
  br i1 %3459, label %3473, label %3460

3460:                                             ; preds = %3455
  %3461 = sext i8 %3458 to i64
  %3462 = add nuw nsw i64 %3461, 4294967295
  %3463 = and i64 %3462, 4294967295
  %3464 = shl i64 1, %3463
  %3465 = add nsw i64 %3464, -1
  %3466 = sub nsw i64 0, %3464
  %3467 = sext i32 %3457 to i64
  %3468 = icmp slt i64 %3467, %3466
  %3469 = icmp slt i64 %3465, %3467
  %3470 = select i1 %3469, i64 %3465, i64 %3467
  %3471 = select i1 %3468, i64 %3466, i64 %3470
  %3472 = trunc i64 %3471 to i32
  br label %3473

3473:                                             ; preds = %3455, %3460
  %3474 = phi i32 [ %3472, %3460 ], [ %3457, %3455 ]
  store i32 %3474, i32* %43, align 4
  %3475 = load i32, i32* %223, align 16
  %3476 = load i32, i32* %228, align 4
  %3477 = sub i32 %3476, %3475
  %3478 = load i8, i8* %3307, align 1
  %3479 = icmp slt i8 %3478, 1
  br i1 %3479, label %3493, label %3480

3480:                                             ; preds = %3473
  %3481 = sext i8 %3478 to i64
  %3482 = add nuw nsw i64 %3481, 4294967295
  %3483 = and i64 %3482, 4294967295
  %3484 = shl i64 1, %3483
  %3485 = add nsw i64 %3484, -1
  %3486 = sub nsw i64 0, %3484
  %3487 = sext i32 %3477 to i64
  %3488 = icmp slt i64 %3487, %3486
  %3489 = icmp slt i64 %3485, %3487
  %3490 = select i1 %3489, i64 %3485, i64 %3487
  %3491 = select i1 %3488, i64 %3486, i64 %3490
  %3492 = trunc i64 %3491 to i32
  br label %3493

3493:                                             ; preds = %3473, %3480
  %3494 = phi i32 [ %3492, %3480 ], [ %3477, %3473 ]
  store i32 %3494, i32* %46, align 4
  %3495 = load i32, i32* %224, align 4
  %3496 = load i32, i32* %225, align 8
  %3497 = sub i32 %3496, %3495
  %3498 = load i8, i8* %3307, align 1
  %3499 = icmp slt i8 %3498, 1
  br i1 %3499, label %3513, label %3500

3500:                                             ; preds = %3493
  %3501 = sext i8 %3498 to i64
  %3502 = add nuw nsw i64 %3501, 4294967295
  %3503 = and i64 %3502, 4294967295
  %3504 = shl i64 1, %3503
  %3505 = add nsw i64 %3504, -1
  %3506 = sub nsw i64 0, %3504
  %3507 = sext i32 %3497 to i64
  %3508 = icmp slt i64 %3507, %3506
  %3509 = icmp slt i64 %3505, %3507
  %3510 = select i1 %3509, i64 %3505, i64 %3507
  %3511 = select i1 %3508, i64 %3506, i64 %3510
  %3512 = trunc i64 %3511 to i32
  br label %3513

3513:                                             ; preds = %3493, %3500
  %3514 = phi i32 [ %3512, %3500 ], [ %3497, %3493 ]
  store i32 %3514, i32* %49, align 4
  %3515 = add nsw i32 %3496, %3495
  %3516 = load i8, i8* %3307, align 1
  %3517 = icmp slt i8 %3516, 1
  br i1 %3517, label %3531, label %3518

3518:                                             ; preds = %3513
  %3519 = sext i8 %3516 to i64
  %3520 = add nuw nsw i64 %3519, 4294967295
  %3521 = and i64 %3520, 4294967295
  %3522 = shl i64 1, %3521
  %3523 = add nsw i64 %3522, -1
  %3524 = sub nsw i64 0, %3522
  %3525 = sext i32 %3515 to i64
  %3526 = icmp slt i64 %3525, %3524
  %3527 = icmp slt i64 %3523, %3525
  %3528 = select i1 %3527, i64 %3523, i64 %3525
  %3529 = select i1 %3526, i64 %3524, i64 %3528
  %3530 = trunc i64 %3529 to i32
  br label %3531

3531:                                             ; preds = %3513, %3518
  %3532 = phi i32 [ %3530, %3518 ], [ %3515, %3513 ]
  store i32 %3532, i32* %52, align 4
  %3533 = add nsw i32 %3476, %3475
  %3534 = load i8, i8* %3307, align 1
  %3535 = icmp slt i8 %3534, 1
  br i1 %3535, label %3549, label %3536

3536:                                             ; preds = %3531
  %3537 = sext i8 %3534 to i64
  %3538 = add nuw nsw i64 %3537, 4294967295
  %3539 = and i64 %3538, 4294967295
  %3540 = shl i64 1, %3539
  %3541 = add nsw i64 %3540, -1
  %3542 = sub nsw i64 0, %3540
  %3543 = sext i32 %3533 to i64
  %3544 = icmp slt i64 %3543, %3542
  %3545 = icmp slt i64 %3541, %3543
  %3546 = select i1 %3545, i64 %3541, i64 %3543
  %3547 = select i1 %3544, i64 %3542, i64 %3546
  %3548 = trunc i64 %3547 to i32
  br label %3549

3549:                                             ; preds = %3531, %3536
  %3550 = phi i32 [ %3548, %3536 ], [ %3533, %3531 ]
  store i32 %3550, i32* %55, align 4
  %3551 = load i32, i32* %230, align 16
  store i32 %3551, i32* %58, align 4
  %3552 = load i32, i32* %231, align 4
  store i32 %3552, i32* %61, align 4
  %3553 = load i32, i32* %232, align 8
  %3554 = load i32, i32* %252, align 4
  %3555 = mul nsw i32 %3553, %2815
  %3556 = sext i32 %3555 to i64
  %3557 = mul nsw i32 %3554, %2811
  %3558 = sext i32 %3557 to i64
  %3559 = add i64 %271, %3556
  %3560 = add i64 %3559, %3558
  %3561 = ashr i64 %3560, %274
  %3562 = trunc i64 %3561 to i32
  store i32 %3562, i32* %64, align 4
  %3563 = load i32, i32* %235, align 4
  %3564 = load i32, i32* %251, align 16
  %3565 = mul nsw i32 %3563, %2815
  %3566 = sext i32 %3565 to i64
  %3567 = mul nsw i32 %3564, %2811
  %3568 = sext i32 %3567 to i64
  %3569 = add i64 %271, %3566
  %3570 = add i64 %3569, %3568
  %3571 = ashr i64 %3570, %274
  %3572 = trunc i64 %3571 to i32
  store i32 %3572, i32* %67, align 4
  %3573 = load i32, i32* %237, align 16
  %3574 = load i32, i32* %249, align 4
  %3575 = mul nsw i32 %3573, %2900
  %3576 = sext i32 %3575 to i64
  %3577 = mul nsw i32 %3574, %2815
  %3578 = sext i32 %3577 to i64
  %3579 = add i64 %271, %3576
  %3580 = add i64 %3579, %3578
  %3581 = ashr i64 %3580, %274
  %3582 = trunc i64 %3581 to i32
  store i32 %3582, i32* %70, align 4
  %3583 = load i32, i32* %238, align 4
  %3584 = load i32, i32* %246, align 8
  %3585 = mul nsw i32 %3583, %2900
  %3586 = sext i32 %3585 to i64
  %3587 = mul nsw i32 %3584, %2815
  %3588 = sext i32 %3587 to i64
  %3589 = add i64 %271, %3586
  %3590 = add i64 %3589, %3588
  %3591 = ashr i64 %3590, %274
  %3592 = trunc i64 %3591 to i32
  store i32 %3592, i32* %73, align 4
  %3593 = bitcast i32* %239 to <4 x i32>*
  %3594 = load <4 x i32>, <4 x i32>* %3593, align 8
  %3595 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %3594, <4 x i32>* %3595, align 4
  %3596 = mul nsw i32 %3583, %2815
  %3597 = sext i32 %3596 to i64
  %3598 = mul nsw i32 %3584, %2811
  %3599 = sext i32 %3598 to i64
  %3600 = add i64 %271, %3597
  %3601 = add i64 %3600, %3599
  %3602 = ashr i64 %3601, %274
  %3603 = trunc i64 %3602 to i32
  store i32 %3603, i32* %88, align 4
  %3604 = mul nsw i32 %3573, %2815
  %3605 = sext i32 %3604 to i64
  %3606 = mul nsw i32 %3574, %2811
  %3607 = sext i32 %3606 to i64
  %3608 = add i64 %271, %3605
  %3609 = add i64 %3608, %3607
  %3610 = ashr i64 %3609, %274
  %3611 = trunc i64 %3610 to i32
  store i32 %3611, i32* %91, align 4
  %3612 = mul nsw i32 %3563, %2811
  %3613 = sext i32 %3612 to i64
  %3614 = mul nsw i32 %3564, %2814
  %3615 = sext i32 %3614 to i64
  %3616 = add i64 %271, %3613
  %3617 = add i64 %3616, %3615
  %3618 = ashr i64 %3617, %274
  %3619 = trunc i64 %3618 to i32
  store i32 %3619, i32* %94, align 4
  %3620 = mul nsw i32 %3553, %2811
  %3621 = sext i32 %3620 to i64
  %3622 = mul nsw i32 %3554, %2814
  %3623 = sext i32 %3622 to i64
  %3624 = add i64 %271, %3621
  %3625 = add i64 %3624, %3623
  %3626 = ashr i64 %3625, %274
  %3627 = trunc i64 %3626 to i32
  store i32 %3627, i32* %97, align 4
  %3628 = load i32, i32* %253, align 8
  store i32 %3628, i32* %100, align 4
  %3629 = load i32, i32* %256, align 4
  store i32 %3629, i32* %103, align 4
  %3630 = load i32, i32* %277, align 16
  %3631 = load i32, i32* %389, align 4
  %3632 = add nsw i32 %3631, %3630
  %3633 = load i8, i8* %3307, align 1
  %3634 = icmp slt i8 %3633, 1
  br i1 %3634, label %3648, label %3635

3635:                                             ; preds = %3549
  %3636 = sext i8 %3633 to i64
  %3637 = add nuw nsw i64 %3636, 4294967295
  %3638 = and i64 %3637, 4294967295
  %3639 = shl i64 1, %3638
  %3640 = add nsw i64 %3639, -1
  %3641 = sub nsw i64 0, %3639
  %3642 = sext i32 %3632 to i64
  %3643 = icmp slt i64 %3642, %3641
  %3644 = icmp slt i64 %3640, %3642
  %3645 = select i1 %3644, i64 %3640, i64 %3642
  %3646 = select i1 %3643, i64 %3641, i64 %3645
  %3647 = trunc i64 %3646 to i32
  br label %3648

3648:                                             ; preds = %3549, %3635
  %3649 = phi i32 [ %3647, %3635 ], [ %3632, %3549 ]
  store i32 %3649, i32* %106, align 4
  %3650 = load i32, i32* %293, align 4
  %3651 = load i32, i32* %373, align 8
  %3652 = add nsw i32 %3651, %3650
  %3653 = load i8, i8* %3307, align 1
  %3654 = icmp slt i8 %3653, 1
  br i1 %3654, label %3668, label %3655

3655:                                             ; preds = %3648
  %3656 = sext i8 %3653 to i64
  %3657 = add nuw nsw i64 %3656, 4294967295
  %3658 = and i64 %3657, 4294967295
  %3659 = shl i64 1, %3658
  %3660 = add nsw i64 %3659, -1
  %3661 = sub nsw i64 0, %3659
  %3662 = sext i32 %3652 to i64
  %3663 = icmp slt i64 %3662, %3661
  %3664 = icmp slt i64 %3660, %3662
  %3665 = select i1 %3664, i64 %3660, i64 %3662
  %3666 = select i1 %3663, i64 %3661, i64 %3665
  %3667 = trunc i64 %3666 to i32
  br label %3668

3668:                                             ; preds = %3648, %3655
  %3669 = phi i32 [ %3667, %3655 ], [ %3652, %3648 ]
  store i32 %3669, i32* %109, align 4
  %3670 = load i32, i32* %309, align 8
  %3671 = load i32, i32* %357, align 4
  %3672 = add nsw i32 %3671, %3670
  %3673 = load i8, i8* %3307, align 1
  %3674 = icmp slt i8 %3673, 1
  br i1 %3674, label %3688, label %3675

3675:                                             ; preds = %3668
  %3676 = sext i8 %3673 to i64
  %3677 = add nuw nsw i64 %3676, 4294967295
  %3678 = and i64 %3677, 4294967295
  %3679 = shl i64 1, %3678
  %3680 = add nsw i64 %3679, -1
  %3681 = sub nsw i64 0, %3679
  %3682 = sext i32 %3672 to i64
  %3683 = icmp slt i64 %3682, %3681
  %3684 = icmp slt i64 %3680, %3682
  %3685 = select i1 %3684, i64 %3680, i64 %3682
  %3686 = select i1 %3683, i64 %3681, i64 %3685
  %3687 = trunc i64 %3686 to i32
  br label %3688

3688:                                             ; preds = %3668, %3675
  %3689 = phi i32 [ %3687, %3675 ], [ %3672, %3668 ]
  store i32 %3689, i32* %112, align 4
  %3690 = load i32, i32* %325, align 4
  %3691 = load i32, i32* %341, align 16
  %3692 = add nsw i32 %3691, %3690
  %3693 = load i8, i8* %3307, align 1
  %3694 = icmp slt i8 %3693, 1
  br i1 %3694, label %3708, label %3695

3695:                                             ; preds = %3688
  %3696 = sext i8 %3693 to i64
  %3697 = add nuw nsw i64 %3696, 4294967295
  %3698 = and i64 %3697, 4294967295
  %3699 = shl i64 1, %3698
  %3700 = add nsw i64 %3699, -1
  %3701 = sub nsw i64 0, %3699
  %3702 = sext i32 %3692 to i64
  %3703 = icmp slt i64 %3702, %3701
  %3704 = icmp slt i64 %3700, %3702
  %3705 = select i1 %3704, i64 %3700, i64 %3702
  %3706 = select i1 %3703, i64 %3701, i64 %3705
  %3707 = trunc i64 %3706 to i32
  br label %3708

3708:                                             ; preds = %3688, %3695
  %3709 = phi i32 [ %3707, %3695 ], [ %3692, %3688 ]
  store i32 %3709, i32* %115, align 4
  %3710 = sub nsw i32 %3690, %3691
  %3711 = load i8, i8* %3307, align 1
  %3712 = icmp slt i8 %3711, 1
  br i1 %3712, label %3726, label %3713

3713:                                             ; preds = %3708
  %3714 = sext i8 %3711 to i64
  %3715 = add nuw nsw i64 %3714, 4294967295
  %3716 = and i64 %3715, 4294967295
  %3717 = shl i64 1, %3716
  %3718 = add nsw i64 %3717, -1
  %3719 = sub nsw i64 0, %3717
  %3720 = sext i32 %3710 to i64
  %3721 = icmp slt i64 %3720, %3719
  %3722 = icmp slt i64 %3718, %3720
  %3723 = select i1 %3722, i64 %3718, i64 %3720
  %3724 = select i1 %3721, i64 %3719, i64 %3723
  %3725 = trunc i64 %3724 to i32
  br label %3726

3726:                                             ; preds = %3708, %3713
  %3727 = phi i32 [ %3725, %3713 ], [ %3710, %3708 ]
  store i32 %3727, i32* %118, align 4
  %3728 = sub nsw i32 %3670, %3671
  %3729 = load i8, i8* %3307, align 1
  %3730 = icmp slt i8 %3729, 1
  br i1 %3730, label %3744, label %3731

3731:                                             ; preds = %3726
  %3732 = sext i8 %3729 to i64
  %3733 = add nuw nsw i64 %3732, 4294967295
  %3734 = and i64 %3733, 4294967295
  %3735 = shl i64 1, %3734
  %3736 = add nsw i64 %3735, -1
  %3737 = sub nsw i64 0, %3735
  %3738 = sext i32 %3728 to i64
  %3739 = icmp slt i64 %3738, %3737
  %3740 = icmp slt i64 %3736, %3738
  %3741 = select i1 %3740, i64 %3736, i64 %3738
  %3742 = select i1 %3739, i64 %3737, i64 %3741
  %3743 = trunc i64 %3742 to i32
  br label %3744

3744:                                             ; preds = %3726, %3731
  %3745 = phi i32 [ %3743, %3731 ], [ %3728, %3726 ]
  store i32 %3745, i32* %121, align 4
  %3746 = sub nsw i32 %3650, %3651
  %3747 = load i8, i8* %3307, align 1
  %3748 = icmp slt i8 %3747, 1
  br i1 %3748, label %3762, label %3749

3749:                                             ; preds = %3744
  %3750 = sext i8 %3747 to i64
  %3751 = add nuw nsw i64 %3750, 4294967295
  %3752 = and i64 %3751, 4294967295
  %3753 = shl i64 1, %3752
  %3754 = add nsw i64 %3753, -1
  %3755 = sub nsw i64 0, %3753
  %3756 = sext i32 %3746 to i64
  %3757 = icmp slt i64 %3756, %3755
  %3758 = icmp slt i64 %3754, %3756
  %3759 = select i1 %3758, i64 %3754, i64 %3756
  %3760 = select i1 %3757, i64 %3755, i64 %3759
  %3761 = trunc i64 %3760 to i32
  br label %3762

3762:                                             ; preds = %3744, %3749
  %3763 = phi i32 [ %3761, %3749 ], [ %3746, %3744 ]
  store i32 %3763, i32* %124, align 4
  %3764 = sub nsw i32 %3630, %3631
  %3765 = load i8, i8* %3307, align 1
  %3766 = icmp slt i8 %3765, 1
  br i1 %3766, label %3780, label %3767

3767:                                             ; preds = %3762
  %3768 = sext i8 %3765 to i64
  %3769 = add nuw nsw i64 %3768, 4294967295
  %3770 = and i64 %3769, 4294967295
  %3771 = shl i64 1, %3770
  %3772 = add nsw i64 %3771, -1
  %3773 = sub nsw i64 0, %3771
  %3774 = sext i32 %3764 to i64
  %3775 = icmp slt i64 %3774, %3773
  %3776 = icmp slt i64 %3772, %3774
  %3777 = select i1 %3776, i64 %3772, i64 %3774
  %3778 = select i1 %3775, i64 %3773, i64 %3777
  %3779 = trunc i64 %3778 to i32
  br label %3780

3780:                                             ; preds = %3762, %3767
  %3781 = phi i32 [ %3779, %3767 ], [ %3764, %3762 ]
  store i32 %3781, i32* %127, align 4
  %3782 = load i32, i32* %405, align 16
  %3783 = load i32, i32* %517, align 4
  %3784 = sub i32 %3783, %3782
  %3785 = load i8, i8* %3307, align 1
  %3786 = icmp slt i8 %3785, 1
  br i1 %3786, label %3800, label %3787

3787:                                             ; preds = %3780
  %3788 = sext i8 %3785 to i64
  %3789 = add nuw nsw i64 %3788, 4294967295
  %3790 = and i64 %3789, 4294967295
  %3791 = shl i64 1, %3790
  %3792 = add nsw i64 %3791, -1
  %3793 = sub nsw i64 0, %3791
  %3794 = sext i32 %3784 to i64
  %3795 = icmp slt i64 %3794, %3793
  %3796 = icmp slt i64 %3792, %3794
  %3797 = select i1 %3796, i64 %3792, i64 %3794
  %3798 = select i1 %3795, i64 %3793, i64 %3797
  %3799 = trunc i64 %3798 to i32
  br label %3800

3800:                                             ; preds = %3780, %3787
  %3801 = phi i32 [ %3799, %3787 ], [ %3784, %3780 ]
  store i32 %3801, i32* %130, align 4
  %3802 = load i32, i32* %421, align 4
  %3803 = load i32, i32* %501, align 8
  %3804 = sub i32 %3803, %3802
  %3805 = load i8, i8* %3307, align 1
  %3806 = icmp slt i8 %3805, 1
  br i1 %3806, label %3820, label %3807

3807:                                             ; preds = %3800
  %3808 = sext i8 %3805 to i64
  %3809 = add nuw nsw i64 %3808, 4294967295
  %3810 = and i64 %3809, 4294967295
  %3811 = shl i64 1, %3810
  %3812 = add nsw i64 %3811, -1
  %3813 = sub nsw i64 0, %3811
  %3814 = sext i32 %3804 to i64
  %3815 = icmp slt i64 %3814, %3813
  %3816 = icmp slt i64 %3812, %3814
  %3817 = select i1 %3816, i64 %3812, i64 %3814
  %3818 = select i1 %3815, i64 %3813, i64 %3817
  %3819 = trunc i64 %3818 to i32
  br label %3820

3820:                                             ; preds = %3800, %3807
  %3821 = phi i32 [ %3819, %3807 ], [ %3804, %3800 ]
  store i32 %3821, i32* %133, align 4
  %3822 = load i32, i32* %437, align 8
  %3823 = load i32, i32* %485, align 4
  %3824 = sub i32 %3823, %3822
  %3825 = load i8, i8* %3307, align 1
  %3826 = icmp slt i8 %3825, 1
  br i1 %3826, label %3840, label %3827

3827:                                             ; preds = %3820
  %3828 = sext i8 %3825 to i64
  %3829 = add nuw nsw i64 %3828, 4294967295
  %3830 = and i64 %3829, 4294967295
  %3831 = shl i64 1, %3830
  %3832 = add nsw i64 %3831, -1
  %3833 = sub nsw i64 0, %3831
  %3834 = sext i32 %3824 to i64
  %3835 = icmp slt i64 %3834, %3833
  %3836 = icmp slt i64 %3832, %3834
  %3837 = select i1 %3836, i64 %3832, i64 %3834
  %3838 = select i1 %3835, i64 %3833, i64 %3837
  %3839 = trunc i64 %3838 to i32
  br label %3840

3840:                                             ; preds = %3820, %3827
  %3841 = phi i32 [ %3839, %3827 ], [ %3824, %3820 ]
  store i32 %3841, i32* %136, align 4
  %3842 = load i32, i32* %453, align 4
  %3843 = load i32, i32* %469, align 16
  %3844 = sub i32 %3843, %3842
  %3845 = load i8, i8* %3307, align 1
  %3846 = icmp slt i8 %3845, 1
  br i1 %3846, label %3860, label %3847

3847:                                             ; preds = %3840
  %3848 = sext i8 %3845 to i64
  %3849 = add nuw nsw i64 %3848, 4294967295
  %3850 = and i64 %3849, 4294967295
  %3851 = shl i64 1, %3850
  %3852 = add nsw i64 %3851, -1
  %3853 = sub nsw i64 0, %3851
  %3854 = sext i32 %3844 to i64
  %3855 = icmp slt i64 %3854, %3853
  %3856 = icmp slt i64 %3852, %3854
  %3857 = select i1 %3856, i64 %3852, i64 %3854
  %3858 = select i1 %3855, i64 %3853, i64 %3857
  %3859 = trunc i64 %3858 to i32
  br label %3860

3860:                                             ; preds = %3840, %3847
  %3861 = phi i32 [ %3859, %3847 ], [ %3844, %3840 ]
  store i32 %3861, i32* %139, align 4
  %3862 = add nsw i32 %3843, %3842
  %3863 = load i8, i8* %3307, align 1
  %3864 = icmp slt i8 %3863, 1
  br i1 %3864, label %3878, label %3865

3865:                                             ; preds = %3860
  %3866 = sext i8 %3863 to i64
  %3867 = add nuw nsw i64 %3866, 4294967295
  %3868 = and i64 %3867, 4294967295
  %3869 = shl i64 1, %3868
  %3870 = add nsw i64 %3869, -1
  %3871 = sub nsw i64 0, %3869
  %3872 = sext i32 %3862 to i64
  %3873 = icmp slt i64 %3872, %3871
  %3874 = icmp slt i64 %3870, %3872
  %3875 = select i1 %3874, i64 %3870, i64 %3872
  %3876 = select i1 %3873, i64 %3871, i64 %3875
  %3877 = trunc i64 %3876 to i32
  br label %3878

3878:                                             ; preds = %3860, %3865
  %3879 = phi i32 [ %3877, %3865 ], [ %3862, %3860 ]
  store i32 %3879, i32* %142, align 4
  %3880 = add nsw i32 %3823, %3822
  %3881 = load i8, i8* %3307, align 1
  %3882 = icmp slt i8 %3881, 1
  br i1 %3882, label %3896, label %3883

3883:                                             ; preds = %3878
  %3884 = sext i8 %3881 to i64
  %3885 = add nuw nsw i64 %3884, 4294967295
  %3886 = and i64 %3885, 4294967295
  %3887 = shl i64 1, %3886
  %3888 = add nsw i64 %3887, -1
  %3889 = sub nsw i64 0, %3887
  %3890 = sext i32 %3880 to i64
  %3891 = icmp slt i64 %3890, %3889
  %3892 = icmp slt i64 %3888, %3890
  %3893 = select i1 %3892, i64 %3888, i64 %3890
  %3894 = select i1 %3891, i64 %3889, i64 %3893
  %3895 = trunc i64 %3894 to i32
  br label %3896

3896:                                             ; preds = %3878, %3883
  %3897 = phi i32 [ %3895, %3883 ], [ %3880, %3878 ]
  store i32 %3897, i32* %145, align 4
  %3898 = add nsw i32 %3803, %3802
  %3899 = load i8, i8* %3307, align 1
  %3900 = icmp slt i8 %3899, 1
  br i1 %3900, label %3914, label %3901

3901:                                             ; preds = %3896
  %3902 = sext i8 %3899 to i64
  %3903 = add nuw nsw i64 %3902, 4294967295
  %3904 = and i64 %3903, 4294967295
  %3905 = shl i64 1, %3904
  %3906 = add nsw i64 %3905, -1
  %3907 = sub nsw i64 0, %3905
  %3908 = sext i32 %3898 to i64
  %3909 = icmp slt i64 %3908, %3907
  %3910 = icmp slt i64 %3906, %3908
  %3911 = select i1 %3910, i64 %3906, i64 %3908
  %3912 = select i1 %3909, i64 %3907, i64 %3911
  %3913 = trunc i64 %3912 to i32
  br label %3914

3914:                                             ; preds = %3896, %3901
  %3915 = phi i32 [ %3913, %3901 ], [ %3898, %3896 ]
  store i32 %3915, i32* %148, align 4
  %3916 = add nsw i32 %3783, %3782
  %3917 = load i8, i8* %3307, align 1
  %3918 = icmp slt i8 %3917, 1
  br i1 %3918, label %3932, label %3919

3919:                                             ; preds = %3914
  %3920 = sext i8 %3917 to i64
  %3921 = add nuw nsw i64 %3920, 4294967295
  %3922 = and i64 %3921, 4294967295
  %3923 = shl i64 1, %3922
  %3924 = add nsw i64 %3923, -1
  %3925 = sub nsw i64 0, %3923
  %3926 = sext i32 %3916 to i64
  %3927 = icmp slt i64 %3926, %3925
  %3928 = icmp slt i64 %3924, %3926
  %3929 = select i1 %3928, i64 %3924, i64 %3926
  %3930 = select i1 %3927, i64 %3925, i64 %3929
  %3931 = trunc i64 %3930 to i32
  br label %3932

3932:                                             ; preds = %3914, %3919
  %3933 = phi i32 [ %3931, %3919 ], [ %3916, %3914 ]
  store i32 %3933, i32* %151, align 4
  %3934 = load i32, i32* %526, align 16
  %3935 = load i32, i32* %589, align 4
  %3936 = add nsw i32 %3935, %3934
  %3937 = load i8, i8* %3307, align 1
  %3938 = icmp slt i8 %3937, 1
  br i1 %3938, label %3952, label %3939

3939:                                             ; preds = %3932
  %3940 = sext i8 %3937 to i64
  %3941 = add nuw nsw i64 %3940, 4294967295
  %3942 = and i64 %3941, 4294967295
  %3943 = shl i64 1, %3942
  %3944 = add nsw i64 %3943, -1
  %3945 = sub nsw i64 0, %3943
  %3946 = sext i32 %3936 to i64
  %3947 = icmp slt i64 %3946, %3945
  %3948 = icmp slt i64 %3944, %3946
  %3949 = select i1 %3948, i64 %3944, i64 %3946
  %3950 = select i1 %3947, i64 %3945, i64 %3949
  %3951 = trunc i64 %3950 to i32
  br label %3952

3952:                                             ; preds = %3932, %3939
  %3953 = phi i32 [ %3951, %3939 ], [ %3936, %3932 ]
  store i32 %3953, i32* %154, align 4
  %3954 = load i32, i32* %535, align 4
  %3955 = load i32, i32* %580, align 8
  %3956 = add nsw i32 %3955, %3954
  %3957 = load i8, i8* %3307, align 1
  %3958 = icmp slt i8 %3957, 1
  br i1 %3958, label %3972, label %3959

3959:                                             ; preds = %3952
  %3960 = sext i8 %3957 to i64
  %3961 = add nuw nsw i64 %3960, 4294967295
  %3962 = and i64 %3961, 4294967295
  %3963 = shl i64 1, %3962
  %3964 = add nsw i64 %3963, -1
  %3965 = sub nsw i64 0, %3963
  %3966 = sext i32 %3956 to i64
  %3967 = icmp slt i64 %3966, %3965
  %3968 = icmp slt i64 %3964, %3966
  %3969 = select i1 %3968, i64 %3964, i64 %3966
  %3970 = select i1 %3967, i64 %3965, i64 %3969
  %3971 = trunc i64 %3970 to i32
  br label %3972

3972:                                             ; preds = %3952, %3959
  %3973 = phi i32 [ %3971, %3959 ], [ %3956, %3952 ]
  store i32 %3973, i32* %157, align 4
  %3974 = load i32, i32* %544, align 8
  %3975 = load i32, i32* %571, align 4
  %3976 = add nsw i32 %3975, %3974
  %3977 = load i8, i8* %3307, align 1
  %3978 = icmp slt i8 %3977, 1
  br i1 %3978, label %3992, label %3979

3979:                                             ; preds = %3972
  %3980 = sext i8 %3977 to i64
  %3981 = add nuw nsw i64 %3980, 4294967295
  %3982 = and i64 %3981, 4294967295
  %3983 = shl i64 1, %3982
  %3984 = add nsw i64 %3983, -1
  %3985 = sub nsw i64 0, %3983
  %3986 = sext i32 %3976 to i64
  %3987 = icmp slt i64 %3986, %3985
  %3988 = icmp slt i64 %3984, %3986
  %3989 = select i1 %3988, i64 %3984, i64 %3986
  %3990 = select i1 %3987, i64 %3985, i64 %3989
  %3991 = trunc i64 %3990 to i32
  br label %3992

3992:                                             ; preds = %3972, %3979
  %3993 = phi i32 [ %3991, %3979 ], [ %3976, %3972 ]
  store i32 %3993, i32* %160, align 4
  %3994 = load i32, i32* %553, align 4
  %3995 = load i32, i32* %562, align 16
  %3996 = add nsw i32 %3995, %3994
  %3997 = load i8, i8* %3307, align 1
  %3998 = icmp slt i8 %3997, 1
  br i1 %3998, label %4012, label %3999

3999:                                             ; preds = %3992
  %4000 = sext i8 %3997 to i64
  %4001 = add nuw nsw i64 %4000, 4294967295
  %4002 = and i64 %4001, 4294967295
  %4003 = shl i64 1, %4002
  %4004 = add nsw i64 %4003, -1
  %4005 = sub nsw i64 0, %4003
  %4006 = sext i32 %3996 to i64
  %4007 = icmp slt i64 %4006, %4005
  %4008 = icmp slt i64 %4004, %4006
  %4009 = select i1 %4008, i64 %4004, i64 %4006
  %4010 = select i1 %4007, i64 %4005, i64 %4009
  %4011 = trunc i64 %4010 to i32
  br label %4012

4012:                                             ; preds = %3992, %3999
  %4013 = phi i32 [ %4011, %3999 ], [ %3996, %3992 ]
  store i32 %4013, i32* %163, align 4
  %4014 = sub nsw i32 %3994, %3995
  %4015 = load i8, i8* %3307, align 1
  %4016 = icmp slt i8 %4015, 1
  br i1 %4016, label %4030, label %4017

4017:                                             ; preds = %4012
  %4018 = sext i8 %4015 to i64
  %4019 = add nuw nsw i64 %4018, 4294967295
  %4020 = and i64 %4019, 4294967295
  %4021 = shl i64 1, %4020
  %4022 = add nsw i64 %4021, -1
  %4023 = sub nsw i64 0, %4021
  %4024 = sext i32 %4014 to i64
  %4025 = icmp slt i64 %4024, %4023
  %4026 = icmp slt i64 %4022, %4024
  %4027 = select i1 %4026, i64 %4022, i64 %4024
  %4028 = select i1 %4025, i64 %4023, i64 %4027
  %4029 = trunc i64 %4028 to i32
  br label %4030

4030:                                             ; preds = %4012, %4017
  %4031 = phi i32 [ %4029, %4017 ], [ %4014, %4012 ]
  store i32 %4031, i32* %166, align 4
  %4032 = sub nsw i32 %3974, %3975
  %4033 = load i8, i8* %3307, align 1
  %4034 = icmp slt i8 %4033, 1
  br i1 %4034, label %4048, label %4035

4035:                                             ; preds = %4030
  %4036 = sext i8 %4033 to i64
  %4037 = add nuw nsw i64 %4036, 4294967295
  %4038 = and i64 %4037, 4294967295
  %4039 = shl i64 1, %4038
  %4040 = add nsw i64 %4039, -1
  %4041 = sub nsw i64 0, %4039
  %4042 = sext i32 %4032 to i64
  %4043 = icmp slt i64 %4042, %4041
  %4044 = icmp slt i64 %4040, %4042
  %4045 = select i1 %4044, i64 %4040, i64 %4042
  %4046 = select i1 %4043, i64 %4041, i64 %4045
  %4047 = trunc i64 %4046 to i32
  br label %4048

4048:                                             ; preds = %4030, %4035
  %4049 = phi i32 [ %4047, %4035 ], [ %4032, %4030 ]
  store i32 %4049, i32* %169, align 4
  %4050 = sub nsw i32 %3954, %3955
  %4051 = load i8, i8* %3307, align 1
  %4052 = icmp slt i8 %4051, 1
  br i1 %4052, label %4066, label %4053

4053:                                             ; preds = %4048
  %4054 = sext i8 %4051 to i64
  %4055 = add nuw nsw i64 %4054, 4294967295
  %4056 = and i64 %4055, 4294967295
  %4057 = shl i64 1, %4056
  %4058 = add nsw i64 %4057, -1
  %4059 = sub nsw i64 0, %4057
  %4060 = sext i32 %4050 to i64
  %4061 = icmp slt i64 %4060, %4059
  %4062 = icmp slt i64 %4058, %4060
  %4063 = select i1 %4062, i64 %4058, i64 %4060
  %4064 = select i1 %4061, i64 %4059, i64 %4063
  %4065 = trunc i64 %4064 to i32
  br label %4066

4066:                                             ; preds = %4048, %4053
  %4067 = phi i32 [ %4065, %4053 ], [ %4050, %4048 ]
  store i32 %4067, i32* %172, align 4
  %4068 = sub nsw i32 %3934, %3935
  %4069 = load i8, i8* %3307, align 1
  %4070 = icmp slt i8 %4069, 1
  br i1 %4070, label %4084, label %4071

4071:                                             ; preds = %4066
  %4072 = sext i8 %4069 to i64
  %4073 = add nuw nsw i64 %4072, 4294967295
  %4074 = and i64 %4073, 4294967295
  %4075 = shl i64 1, %4074
  %4076 = add nsw i64 %4075, -1
  %4077 = sub nsw i64 0, %4075
  %4078 = sext i32 %4068 to i64
  %4079 = icmp slt i64 %4078, %4077
  %4080 = icmp slt i64 %4076, %4078
  %4081 = select i1 %4080, i64 %4076, i64 %4078
  %4082 = select i1 %4079, i64 %4077, i64 %4081
  %4083 = trunc i64 %4082 to i32
  br label %4084

4084:                                             ; preds = %4066, %4071
  %4085 = phi i32 [ %4083, %4071 ], [ %4068, %4066 ]
  store i32 %4085, i32* %175, align 4
  %4086 = load i32, i32* %598, align 16
  %4087 = load i32, i32* %661, align 4
  %4088 = sub i32 %4087, %4086
  %4089 = load i8, i8* %3307, align 1
  %4090 = icmp slt i8 %4089, 1
  br i1 %4090, label %4104, label %4091

4091:                                             ; preds = %4084
  %4092 = sext i8 %4089 to i64
  %4093 = add nuw nsw i64 %4092, 4294967295
  %4094 = and i64 %4093, 4294967295
  %4095 = shl i64 1, %4094
  %4096 = add nsw i64 %4095, -1
  %4097 = sub nsw i64 0, %4095
  %4098 = sext i32 %4088 to i64
  %4099 = icmp slt i64 %4098, %4097
  %4100 = icmp slt i64 %4096, %4098
  %4101 = select i1 %4100, i64 %4096, i64 %4098
  %4102 = select i1 %4099, i64 %4097, i64 %4101
  %4103 = trunc i64 %4102 to i32
  br label %4104

4104:                                             ; preds = %4084, %4091
  %4105 = phi i32 [ %4103, %4091 ], [ %4088, %4084 ]
  store i32 %4105, i32* %178, align 4
  %4106 = load i32, i32* %607, align 4
  %4107 = load i32, i32* %652, align 8
  %4108 = sub i32 %4107, %4106
  %4109 = load i8, i8* %3307, align 1
  %4110 = icmp slt i8 %4109, 1
  br i1 %4110, label %4124, label %4111

4111:                                             ; preds = %4104
  %4112 = sext i8 %4109 to i64
  %4113 = add nuw nsw i64 %4112, 4294967295
  %4114 = and i64 %4113, 4294967295
  %4115 = shl i64 1, %4114
  %4116 = add nsw i64 %4115, -1
  %4117 = sub nsw i64 0, %4115
  %4118 = sext i32 %4108 to i64
  %4119 = icmp slt i64 %4118, %4117
  %4120 = icmp slt i64 %4116, %4118
  %4121 = select i1 %4120, i64 %4116, i64 %4118
  %4122 = select i1 %4119, i64 %4117, i64 %4121
  %4123 = trunc i64 %4122 to i32
  br label %4124

4124:                                             ; preds = %4104, %4111
  %4125 = phi i32 [ %4123, %4111 ], [ %4108, %4104 ]
  store i32 %4125, i32* %181, align 4
  %4126 = load i32, i32* %616, align 8
  %4127 = load i32, i32* %643, align 4
  %4128 = sub i32 %4127, %4126
  %4129 = load i8, i8* %3307, align 1
  %4130 = icmp slt i8 %4129, 1
  br i1 %4130, label %4144, label %4131

4131:                                             ; preds = %4124
  %4132 = sext i8 %4129 to i64
  %4133 = add nuw nsw i64 %4132, 4294967295
  %4134 = and i64 %4133, 4294967295
  %4135 = shl i64 1, %4134
  %4136 = add nsw i64 %4135, -1
  %4137 = sub nsw i64 0, %4135
  %4138 = sext i32 %4128 to i64
  %4139 = icmp slt i64 %4138, %4137
  %4140 = icmp slt i64 %4136, %4138
  %4141 = select i1 %4140, i64 %4136, i64 %4138
  %4142 = select i1 %4139, i64 %4137, i64 %4141
  %4143 = trunc i64 %4142 to i32
  br label %4144

4144:                                             ; preds = %4124, %4131
  %4145 = phi i32 [ %4143, %4131 ], [ %4128, %4124 ]
  store i32 %4145, i32* %184, align 4
  %4146 = load i32, i32* %625, align 4
  %4147 = load i32, i32* %634, align 16
  %4148 = sub i32 %4147, %4146
  %4149 = load i8, i8* %3307, align 1
  %4150 = icmp slt i8 %4149, 1
  br i1 %4150, label %4164, label %4151

4151:                                             ; preds = %4144
  %4152 = sext i8 %4149 to i64
  %4153 = add nuw nsw i64 %4152, 4294967295
  %4154 = and i64 %4153, 4294967295
  %4155 = shl i64 1, %4154
  %4156 = add nsw i64 %4155, -1
  %4157 = sub nsw i64 0, %4155
  %4158 = sext i32 %4148 to i64
  %4159 = icmp slt i64 %4158, %4157
  %4160 = icmp slt i64 %4156, %4158
  %4161 = select i1 %4160, i64 %4156, i64 %4158
  %4162 = select i1 %4159, i64 %4157, i64 %4161
  %4163 = trunc i64 %4162 to i32
  br label %4164

4164:                                             ; preds = %4144, %4151
  %4165 = phi i32 [ %4163, %4151 ], [ %4148, %4144 ]
  store i32 %4165, i32* %187, align 4
  %4166 = add nsw i32 %4147, %4146
  %4167 = load i8, i8* %3307, align 1
  %4168 = icmp slt i8 %4167, 1
  br i1 %4168, label %4182, label %4169

4169:                                             ; preds = %4164
  %4170 = sext i8 %4167 to i64
  %4171 = add nuw nsw i64 %4170, 4294967295
  %4172 = and i64 %4171, 4294967295
  %4173 = shl i64 1, %4172
  %4174 = add nsw i64 %4173, -1
  %4175 = sub nsw i64 0, %4173
  %4176 = sext i32 %4166 to i64
  %4177 = icmp slt i64 %4176, %4175
  %4178 = icmp slt i64 %4174, %4176
  %4179 = select i1 %4178, i64 %4174, i64 %4176
  %4180 = select i1 %4177, i64 %4175, i64 %4179
  %4181 = trunc i64 %4180 to i32
  br label %4182

4182:                                             ; preds = %4164, %4169
  %4183 = phi i32 [ %4181, %4169 ], [ %4166, %4164 ]
  store i32 %4183, i32* %190, align 4
  %4184 = add nsw i32 %4127, %4126
  %4185 = load i8, i8* %3307, align 1
  %4186 = icmp slt i8 %4185, 1
  br i1 %4186, label %4200, label %4187

4187:                                             ; preds = %4182
  %4188 = sext i8 %4185 to i64
  %4189 = add nuw nsw i64 %4188, 4294967295
  %4190 = and i64 %4189, 4294967295
  %4191 = shl i64 1, %4190
  %4192 = add nsw i64 %4191, -1
  %4193 = sub nsw i64 0, %4191
  %4194 = sext i32 %4184 to i64
  %4195 = icmp slt i64 %4194, %4193
  %4196 = icmp slt i64 %4192, %4194
  %4197 = select i1 %4196, i64 %4192, i64 %4194
  %4198 = select i1 %4195, i64 %4193, i64 %4197
  %4199 = trunc i64 %4198 to i32
  br label %4200

4200:                                             ; preds = %4182, %4187
  %4201 = phi i32 [ %4199, %4187 ], [ %4184, %4182 ]
  store i32 %4201, i32* %193, align 4
  %4202 = add nsw i32 %4107, %4106
  %4203 = load i8, i8* %3307, align 1
  %4204 = icmp slt i8 %4203, 1
  br i1 %4204, label %4218, label %4205

4205:                                             ; preds = %4200
  %4206 = sext i8 %4203 to i64
  %4207 = add nuw nsw i64 %4206, 4294967295
  %4208 = and i64 %4207, 4294967295
  %4209 = shl i64 1, %4208
  %4210 = add nsw i64 %4209, -1
  %4211 = sub nsw i64 0, %4209
  %4212 = sext i32 %4202 to i64
  %4213 = icmp slt i64 %4212, %4211
  %4214 = icmp slt i64 %4210, %4212
  %4215 = select i1 %4214, i64 %4210, i64 %4212
  %4216 = select i1 %4213, i64 %4211, i64 %4215
  %4217 = trunc i64 %4216 to i32
  br label %4218

4218:                                             ; preds = %4200, %4205
  %4219 = phi i32 [ %4217, %4205 ], [ %4202, %4200 ]
  store i32 %4219, i32* %196, align 4
  %4220 = add nsw i32 %4087, %4086
  %4221 = load i8, i8* %3307, align 1
  %4222 = icmp slt i8 %4221, 1
  br i1 %4222, label %4236, label %4223

4223:                                             ; preds = %4218
  %4224 = sext i8 %4221 to i64
  %4225 = add nuw nsw i64 %4224, 4294967295
  %4226 = and i64 %4225, 4294967295
  %4227 = shl i64 1, %4226
  %4228 = add nsw i64 %4227, -1
  %4229 = sub nsw i64 0, %4227
  %4230 = sext i32 %4220 to i64
  %4231 = icmp slt i64 %4230, %4229
  %4232 = icmp slt i64 %4228, %4230
  %4233 = select i1 %4232, i64 %4228, i64 %4230
  %4234 = select i1 %4231, i64 %4229, i64 %4233
  %4235 = trunc i64 %4234 to i32
  br label %4236

4236:                                             ; preds = %4218, %4223
  %4237 = phi i32 [ %4235, %4223 ], [ %4220, %4218 ]
  store i32 %4237, i32* %199, align 4
  %4238 = load i8, i8* %3307, align 1
  call void @av1_range_check_buf(i32 7, i32* %0, i32* %1, i32 64, i8 signext %4238) #4
  %4239 = load i32, i32* %1, align 4
  %4240 = load i32, i32* %31, align 4
  %4241 = add nsw i32 %4240, %4239
  %4242 = getelementptr inbounds i8, i8* %3, i64 8
  %4243 = load i8, i8* %4242, align 1
  %4244 = icmp slt i8 %4243, 1
  br i1 %4244, label %4245, label %4258

4245:                                             ; preds = %4236
  store i32 %4241, i32* %202, align 16
  %4246 = load i32, i32* %13, align 4
  %4247 = load i32, i32* %28, align 4
  %4248 = add nsw i32 %4247, %4246
  store i32 %4248, i32* %203, align 4
  %4249 = bitcast i32* %16 to <4 x i32>*
  %4250 = load <4 x i32>, <4 x i32>* %4249, align 4
  %4251 = shufflevector <4 x i32> %4250, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %4252 = add nsw <4 x i32> %4251, %4250
  %4253 = sub nsw <4 x i32> %4251, %4250
  %4254 = shufflevector <4 x i32> %4252, <4 x i32> %4253, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %4255 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %4254, <4 x i32>* %4255, align 8
  %4256 = sub nsw i32 %4246, %4247
  store i32 %4256, i32* %211, align 8
  %4257 = sub nsw i32 %4239, %4240
  br label %4344

4258:                                             ; preds = %4236
  %4259 = sext i8 %4243 to i64
  %4260 = add nuw nsw i64 %4259, 4294967295
  %4261 = and i64 %4260, 4294967295
  %4262 = shl i64 1, %4261
  %4263 = add nsw i64 %4262, -1
  %4264 = sub nsw i64 0, %4262
  %4265 = sext i32 %4241 to i64
  %4266 = icmp slt i64 %4265, %4264
  %4267 = icmp slt i64 %4263, %4265
  %4268 = select i1 %4267, i64 %4263, i64 %4265
  %4269 = select i1 %4266, i64 %4264, i64 %4268
  %4270 = trunc i64 %4269 to i32
  store i32 %4270, i32* %202, align 16
  %4271 = load i32, i32* %13, align 4
  %4272 = load i32, i32* %28, align 4
  %4273 = add nsw i32 %4272, %4271
  %4274 = sext i32 %4273 to i64
  %4275 = icmp slt i64 %4274, %4264
  %4276 = icmp slt i64 %4263, %4274
  %4277 = select i1 %4276, i64 %4263, i64 %4274
  %4278 = select i1 %4275, i64 %4264, i64 %4277
  %4279 = trunc i64 %4278 to i32
  store i32 %4279, i32* %203, align 4
  %4280 = load i32, i32* %16, align 4
  %4281 = load i32, i32* %25, align 4
  %4282 = add nsw i32 %4281, %4280
  %4283 = sext i8 %4243 to i64
  %4284 = add nuw nsw i64 %4283, 4294967295
  %4285 = and i64 %4284, 4294967295
  %4286 = shl i64 1, %4285
  %4287 = add nsw i64 %4286, -1
  %4288 = sub nsw i64 0, %4286
  %4289 = sext i32 %4282 to i64
  %4290 = icmp slt i64 %4289, %4288
  %4291 = icmp slt i64 %4287, %4289
  %4292 = select i1 %4291, i64 %4287, i64 %4289
  %4293 = select i1 %4290, i64 %4288, i64 %4292
  %4294 = trunc i64 %4293 to i32
  store i32 %4294, i32* %204, align 8
  %4295 = load i32, i32* %19, align 4
  %4296 = load i32, i32* %22, align 4
  %4297 = add nsw i32 %4296, %4295
  %4298 = sext i32 %4297 to i64
  %4299 = icmp slt i64 %4298, %4288
  %4300 = icmp slt i64 %4287, %4298
  %4301 = select i1 %4300, i64 %4287, i64 %4298
  %4302 = select i1 %4299, i64 %4288, i64 %4301
  %4303 = trunc i64 %4302 to i32
  store i32 %4303, i32* %207, align 4
  %4304 = sub nsw i32 %4295, %4296
  %4305 = sext i8 %4243 to i64
  %4306 = add nuw nsw i64 %4305, 4294967295
  %4307 = and i64 %4306, 4294967295
  %4308 = shl i64 1, %4307
  %4309 = add nsw i64 %4308, -1
  %4310 = sub nsw i64 0, %4308
  %4311 = sext i32 %4304 to i64
  %4312 = icmp slt i64 %4311, %4310
  %4313 = icmp slt i64 %4309, %4311
  %4314 = select i1 %4313, i64 %4309, i64 %4311
  %4315 = select i1 %4312, i64 %4310, i64 %4314
  %4316 = trunc i64 %4315 to i32
  store i32 %4316, i32* %209, align 16
  %4317 = sub nsw i32 %4280, %4281
  %4318 = sext i32 %4317 to i64
  %4319 = icmp slt i64 %4318, %4310
  %4320 = icmp slt i64 %4309, %4318
  %4321 = select i1 %4320, i64 %4309, i64 %4318
  %4322 = select i1 %4319, i64 %4310, i64 %4321
  %4323 = trunc i64 %4322 to i32
  store i32 %4323, i32* %210, align 4
  %4324 = sub nsw i32 %4271, %4272
  %4325 = sext i8 %4243 to i64
  %4326 = add nuw nsw i64 %4325, 4294967295
  %4327 = and i64 %4326, 4294967295
  %4328 = shl i64 1, %4327
  %4329 = add nsw i64 %4328, -1
  %4330 = sub nsw i64 0, %4328
  %4331 = sext i32 %4324 to i64
  %4332 = icmp slt i64 %4331, %4330
  %4333 = icmp slt i64 %4329, %4331
  %4334 = select i1 %4333, i64 %4329, i64 %4331
  %4335 = select i1 %4332, i64 %4330, i64 %4334
  %4336 = trunc i64 %4335 to i32
  store i32 %4336, i32* %211, align 8
  %4337 = sub nsw i32 %4239, %4240
  %4338 = sext i32 %4337 to i64
  %4339 = icmp slt i64 %4338, %4330
  %4340 = icmp slt i64 %4329, %4338
  %4341 = select i1 %4340, i64 %4329, i64 %4338
  %4342 = select i1 %4339, i64 %4330, i64 %4341
  %4343 = trunc i64 %4342 to i32
  br label %4344

4344:                                             ; preds = %4245, %4258
  %4345 = phi i32 [ %4343, %4258 ], [ %4257, %4245 ]
  store i32 %4345, i32* %214, align 4
  %4346 = load i32, i32* %34, align 4
  store i32 %4346, i32* %216, align 16
  %4347 = load i32, i32* %37, align 4
  store i32 %4347, i32* %217, align 4
  %4348 = load i32, i32* %40, align 4
  %4349 = load i32, i32* %49, align 4
  %4350 = mul nsw i32 %4348, %2804
  %4351 = sext i32 %4350 to i64
  %4352 = mul nsw i32 %4349, %2793
  %4353 = sext i32 %4352 to i64
  %4354 = add i64 %271, %4351
  %4355 = add i64 %4354, %4353
  %4356 = ashr i64 %4355, %274
  %4357 = trunc i64 %4356 to i32
  store i32 %4357, i32* %218, align 8
  %4358 = load i32, i32* %43, align 4
  %4359 = load i32, i32* %46, align 4
  %4360 = mul nsw i32 %4358, %2804
  %4361 = sext i32 %4360 to i64
  %4362 = mul nsw i32 %4359, %2793
  %4363 = sext i32 %4362 to i64
  %4364 = add i64 %271, %4361
  %4365 = add i64 %4364, %4363
  %4366 = ashr i64 %4365, %274
  %4367 = trunc i64 %4366 to i32
  store i32 %4367, i32* %221, align 4
  %4368 = mul nsw i32 %4358, %2793
  %4369 = sext i32 %4368 to i64
  %4370 = add i64 %271, %4369
  %4371 = add i64 %4370, %4363
  %4372 = ashr i64 %4371, %274
  %4373 = trunc i64 %4372 to i32
  store i32 %4373, i32* %223, align 16
  %4374 = mul nsw i32 %4348, %2793
  %4375 = sext i32 %4374 to i64
  %4376 = add i64 %271, %4375
  %4377 = add i64 %4376, %4353
  %4378 = ashr i64 %4377, %274
  %4379 = trunc i64 %4378 to i32
  store i32 %4379, i32* %224, align 4
  %4380 = load i32, i32* %52, align 4
  store i32 %4380, i32* %225, align 8
  %4381 = load i32, i32* %55, align 4
  store i32 %4381, i32* %228, align 4
  %4382 = load i32, i32* %58, align 4
  %4383 = load i32, i32* %79, align 4
  %4384 = add nsw i32 %4383, %4382
  br i1 %4244, label %4385, label %4417

4385:                                             ; preds = %4344
  store i32 %4384, i32* %230, align 16
  %4386 = load i32, i32* %61, align 4
  %4387 = load i32, i32* %76, align 4
  %4388 = add nsw i32 %4387, %4386
  store i32 %4388, i32* %231, align 4
  %4389 = bitcast i32* %64 to <4 x i32>*
  %4390 = load <4 x i32>, <4 x i32>* %4389, align 4
  %4391 = shufflevector <4 x i32> %4390, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %4392 = add nsw <4 x i32> %4391, %4390
  %4393 = sub nsw <4 x i32> %4391, %4390
  %4394 = shufflevector <4 x i32> %4392, <4 x i32> %4393, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %4395 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %4394, <4 x i32>* %4395, align 8
  %4396 = sub nsw i32 %4386, %4387
  store i32 %4396, i32* %239, align 8
  %4397 = sub nsw i32 %4382, %4383
  store i32 %4397, i32* %242, align 4
  %4398 = bitcast i32* %82 to <4 x i32>*
  %4399 = load <4 x i32>, <4 x i32>* %4398, align 4
  %4400 = bitcast i32* %94 to <4 x i32>*
  %4401 = load <4 x i32>, <4 x i32>* %4400, align 4
  %4402 = shufflevector <4 x i32> %4401, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %4403 = sub <4 x i32> %4402, %4399
  %4404 = bitcast i32* %244 to <4 x i32>*
  store <4 x i32> %4403, <4 x i32>* %4404, align 16
  %4405 = extractelement <4 x i32> %4401, i32 0
  %4406 = extractelement <4 x i32> %4399, i32 3
  %4407 = add nsw i32 %4405, %4406
  store i32 %4407, i32* %251, align 16
  %4408 = extractelement <4 x i32> %4401, i32 1
  %4409 = extractelement <4 x i32> %4399, i32 2
  %4410 = add nsw i32 %4408, %4409
  store i32 %4410, i32* %252, align 4
  %4411 = extractelement <4 x i32> %4401, i32 2
  %4412 = extractelement <4 x i32> %4399, i32 1
  %4413 = add nsw i32 %4411, %4412
  store i32 %4413, i32* %253, align 8
  %4414 = extractelement <4 x i32> %4401, i32 3
  %4415 = extractelement <4 x i32> %4399, i32 0
  %4416 = add nsw i32 %4414, %4415
  br label %4591

4417:                                             ; preds = %4344
  %4418 = sext i8 %4243 to i64
  %4419 = add nuw nsw i64 %4418, 4294967295
  %4420 = and i64 %4419, 4294967295
  %4421 = shl i64 1, %4420
  %4422 = add nsw i64 %4421, -1
  %4423 = sub nsw i64 0, %4421
  %4424 = sext i32 %4384 to i64
  %4425 = icmp slt i64 %4424, %4423
  %4426 = icmp slt i64 %4422, %4424
  %4427 = select i1 %4426, i64 %4422, i64 %4424
  %4428 = select i1 %4425, i64 %4423, i64 %4427
  %4429 = trunc i64 %4428 to i32
  store i32 %4429, i32* %230, align 16
  %4430 = load i32, i32* %61, align 4
  %4431 = load i32, i32* %76, align 4
  %4432 = add nsw i32 %4431, %4430
  %4433 = sext i32 %4432 to i64
  %4434 = icmp slt i64 %4433, %4423
  %4435 = icmp slt i64 %4422, %4433
  %4436 = select i1 %4435, i64 %4422, i64 %4433
  %4437 = select i1 %4434, i64 %4423, i64 %4436
  %4438 = trunc i64 %4437 to i32
  store i32 %4438, i32* %231, align 4
  %4439 = load i32, i32* %64, align 4
  %4440 = load i32, i32* %73, align 4
  %4441 = add nsw i32 %4440, %4439
  %4442 = sext i8 %4243 to i64
  %4443 = add nuw nsw i64 %4442, 4294967295
  %4444 = and i64 %4443, 4294967295
  %4445 = shl i64 1, %4444
  %4446 = add nsw i64 %4445, -1
  %4447 = sub nsw i64 0, %4445
  %4448 = sext i32 %4441 to i64
  %4449 = icmp slt i64 %4448, %4447
  %4450 = icmp slt i64 %4446, %4448
  %4451 = select i1 %4450, i64 %4446, i64 %4448
  %4452 = select i1 %4449, i64 %4447, i64 %4451
  %4453 = trunc i64 %4452 to i32
  store i32 %4453, i32* %232, align 8
  %4454 = load i32, i32* %67, align 4
  %4455 = load i32, i32* %70, align 4
  %4456 = add nsw i32 %4455, %4454
  %4457 = sext i32 %4456 to i64
  %4458 = icmp slt i64 %4457, %4447
  %4459 = icmp slt i64 %4446, %4457
  %4460 = select i1 %4459, i64 %4446, i64 %4457
  %4461 = select i1 %4458, i64 %4447, i64 %4460
  %4462 = trunc i64 %4461 to i32
  store i32 %4462, i32* %235, align 4
  %4463 = sub nsw i32 %4454, %4455
  %4464 = sext i8 %4243 to i64
  %4465 = add nuw nsw i64 %4464, 4294967295
  %4466 = and i64 %4465, 4294967295
  %4467 = shl i64 1, %4466
  %4468 = add nsw i64 %4467, -1
  %4469 = sub nsw i64 0, %4467
  %4470 = sext i32 %4463 to i64
  %4471 = icmp slt i64 %4470, %4469
  %4472 = icmp slt i64 %4468, %4470
  %4473 = select i1 %4472, i64 %4468, i64 %4470
  %4474 = select i1 %4471, i64 %4469, i64 %4473
  %4475 = trunc i64 %4474 to i32
  store i32 %4475, i32* %237, align 16
  %4476 = sub nsw i32 %4439, %4440
  %4477 = sext i32 %4476 to i64
  %4478 = icmp slt i64 %4477, %4469
  %4479 = icmp slt i64 %4468, %4477
  %4480 = select i1 %4479, i64 %4468, i64 %4477
  %4481 = select i1 %4478, i64 %4469, i64 %4480
  %4482 = trunc i64 %4481 to i32
  store i32 %4482, i32* %238, align 4
  %4483 = sub nsw i32 %4430, %4431
  %4484 = sext i8 %4243 to i64
  %4485 = add nuw nsw i64 %4484, 4294967295
  %4486 = and i64 %4485, 4294967295
  %4487 = shl i64 1, %4486
  %4488 = add nsw i64 %4487, -1
  %4489 = sub nsw i64 0, %4487
  %4490 = sext i32 %4483 to i64
  %4491 = icmp slt i64 %4490, %4489
  %4492 = icmp slt i64 %4488, %4490
  %4493 = select i1 %4492, i64 %4488, i64 %4490
  %4494 = select i1 %4491, i64 %4489, i64 %4493
  %4495 = trunc i64 %4494 to i32
  store i32 %4495, i32* %239, align 8
  %4496 = sub nsw i32 %4382, %4383
  %4497 = sext i32 %4496 to i64
  %4498 = icmp slt i64 %4497, %4489
  %4499 = icmp slt i64 %4488, %4497
  %4500 = select i1 %4499, i64 %4488, i64 %4497
  %4501 = select i1 %4498, i64 %4489, i64 %4500
  %4502 = trunc i64 %4501 to i32
  store i32 %4502, i32* %242, align 4
  %4503 = load i32, i32* %82, align 4
  %4504 = load i32, i32* %103, align 4
  %4505 = sub i32 %4504, %4503
  %4506 = sext i8 %4243 to i64
  %4507 = add nuw nsw i64 %4506, 4294967295
  %4508 = and i64 %4507, 4294967295
  %4509 = shl i64 1, %4508
  %4510 = add nsw i64 %4509, -1
  %4511 = sub nsw i64 0, %4509
  %4512 = sext i32 %4505 to i64
  %4513 = icmp slt i64 %4512, %4511
  %4514 = icmp slt i64 %4510, %4512
  %4515 = select i1 %4514, i64 %4510, i64 %4512
  %4516 = select i1 %4513, i64 %4511, i64 %4515
  %4517 = trunc i64 %4516 to i32
  store i32 %4517, i32* %244, align 16
  %4518 = load i32, i32* %85, align 4
  %4519 = load i32, i32* %100, align 4
  %4520 = sub i32 %4519, %4518
  %4521 = sext i32 %4520 to i64
  %4522 = icmp slt i64 %4521, %4511
  %4523 = icmp slt i64 %4510, %4521
  %4524 = select i1 %4523, i64 %4510, i64 %4521
  %4525 = select i1 %4522, i64 %4511, i64 %4524
  %4526 = trunc i64 %4525 to i32
  store i32 %4526, i32* %245, align 4
  %4527 = load i32, i32* %88, align 4
  %4528 = load i32, i32* %97, align 4
  %4529 = sub i32 %4528, %4527
  %4530 = sext i8 %4243 to i64
  %4531 = add nuw nsw i64 %4530, 4294967295
  %4532 = and i64 %4531, 4294967295
  %4533 = shl i64 1, %4532
  %4534 = add nsw i64 %4533, -1
  %4535 = sub nsw i64 0, %4533
  %4536 = sext i32 %4529 to i64
  %4537 = icmp slt i64 %4536, %4535
  %4538 = icmp slt i64 %4534, %4536
  %4539 = select i1 %4538, i64 %4534, i64 %4536
  %4540 = select i1 %4537, i64 %4535, i64 %4539
  %4541 = trunc i64 %4540 to i32
  store i32 %4541, i32* %246, align 8
  %4542 = load i32, i32* %91, align 4
  %4543 = load i32, i32* %94, align 4
  %4544 = sub i32 %4543, %4542
  %4545 = sext i32 %4544 to i64
  %4546 = icmp slt i64 %4545, %4535
  %4547 = icmp slt i64 %4534, %4545
  %4548 = select i1 %4547, i64 %4534, i64 %4545
  %4549 = select i1 %4546, i64 %4535, i64 %4548
  %4550 = trunc i64 %4549 to i32
  store i32 %4550, i32* %249, align 4
  %4551 = add nsw i32 %4543, %4542
  %4552 = sext i8 %4243 to i64
  %4553 = add nuw nsw i64 %4552, 4294967295
  %4554 = and i64 %4553, 4294967295
  %4555 = shl i64 1, %4554
  %4556 = add nsw i64 %4555, -1
  %4557 = sub nsw i64 0, %4555
  %4558 = sext i32 %4551 to i64
  %4559 = icmp slt i64 %4558, %4557
  %4560 = icmp slt i64 %4556, %4558
  %4561 = select i1 %4560, i64 %4556, i64 %4558
  %4562 = select i1 %4559, i64 %4557, i64 %4561
  %4563 = trunc i64 %4562 to i32
  store i32 %4563, i32* %251, align 16
  %4564 = add nsw i32 %4528, %4527
  %4565 = sext i32 %4564 to i64
  %4566 = icmp slt i64 %4565, %4557
  %4567 = icmp slt i64 %4556, %4565
  %4568 = select i1 %4567, i64 %4556, i64 %4565
  %4569 = select i1 %4566, i64 %4557, i64 %4568
  %4570 = trunc i64 %4569 to i32
  store i32 %4570, i32* %252, align 4
  %4571 = add nsw i32 %4519, %4518
  %4572 = sext i8 %4243 to i64
  %4573 = add nuw nsw i64 %4572, 4294967295
  %4574 = and i64 %4573, 4294967295
  %4575 = shl i64 1, %4574
  %4576 = add nsw i64 %4575, -1
  %4577 = sub nsw i64 0, %4575
  %4578 = sext i32 %4571 to i64
  %4579 = icmp slt i64 %4578, %4577
  %4580 = icmp slt i64 %4576, %4578
  %4581 = select i1 %4580, i64 %4576, i64 %4578
  %4582 = select i1 %4579, i64 %4577, i64 %4581
  %4583 = trunc i64 %4582 to i32
  store i32 %4583, i32* %253, align 8
  %4584 = add nsw i32 %4504, %4503
  %4585 = sext i32 %4584 to i64
  %4586 = icmp slt i64 %4585, %4577
  %4587 = icmp slt i64 %4576, %4585
  %4588 = select i1 %4587, i64 %4576, i64 %4585
  %4589 = select i1 %4586, i64 %4577, i64 %4588
  %4590 = trunc i64 %4589 to i32
  br label %4591

4591:                                             ; preds = %4385, %4417
  %4592 = phi i32 [ %4590, %4417 ], [ %4416, %4385 ]
  store i32 %4592, i32* %256, align 4
  %4593 = bitcast i32* %106 to <4 x i32>*
  %4594 = load <4 x i32>, <4 x i32>* %4593, align 4
  %4595 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %4594, <4 x i32>* %4595, align 16
  %4596 = load i32, i32* %118, align 4
  %4597 = load i32, i32* %187, align 4
  %4598 = mul nsw i32 %4596, %2815
  %4599 = sext i32 %4598 to i64
  %4600 = mul nsw i32 %4597, %2811
  %4601 = sext i32 %4600 to i64
  %4602 = add i64 %271, %4599
  %4603 = add i64 %4602, %4601
  %4604 = ashr i64 %4603, %274
  %4605 = trunc i64 %4604 to i32
  store i32 %4605, i32* %341, align 16
  %4606 = load i32, i32* %121, align 4
  %4607 = load i32, i32* %184, align 4
  %4608 = mul nsw i32 %4606, %2815
  %4609 = sext i32 %4608 to i64
  %4610 = mul nsw i32 %4607, %2811
  %4611 = sext i32 %4610 to i64
  %4612 = add i64 %271, %4609
  %4613 = add i64 %4612, %4611
  %4614 = ashr i64 %4613, %274
  %4615 = trunc i64 %4614 to i32
  store i32 %4615, i32* %357, align 4
  %4616 = load i32, i32* %124, align 4
  %4617 = load i32, i32* %181, align 4
  %4618 = mul nsw i32 %4616, %2815
  %4619 = sext i32 %4618 to i64
  %4620 = mul nsw i32 %4617, %2811
  %4621 = sext i32 %4620 to i64
  %4622 = add i64 %271, %4619
  %4623 = add i64 %4622, %4621
  %4624 = ashr i64 %4623, %274
  %4625 = trunc i64 %4624 to i32
  store i32 %4625, i32* %373, align 8
  %4626 = load i32, i32* %127, align 4
  %4627 = load i32, i32* %178, align 4
  %4628 = mul nsw i32 %4626, %2815
  %4629 = sext i32 %4628 to i64
  %4630 = mul nsw i32 %4627, %2811
  %4631 = sext i32 %4630 to i64
  %4632 = add i64 %271, %4629
  %4633 = add i64 %4632, %4631
  %4634 = ashr i64 %4633, %274
  %4635 = trunc i64 %4634 to i32
  store i32 %4635, i32* %389, align 4
  %4636 = load i32, i32* %130, align 4
  %4637 = load i32, i32* %175, align 4
  %4638 = mul nsw i32 %4636, %2900
  %4639 = sext i32 %4638 to i64
  %4640 = mul nsw i32 %4637, %2815
  %4641 = sext i32 %4640 to i64
  %4642 = add i64 %271, %4639
  %4643 = add i64 %4642, %4641
  %4644 = ashr i64 %4643, %274
  %4645 = trunc i64 %4644 to i32
  store i32 %4645, i32* %405, align 16
  %4646 = load i32, i32* %133, align 4
  %4647 = load i32, i32* %172, align 4
  %4648 = mul nsw i32 %4646, %2900
  %4649 = sext i32 %4648 to i64
  %4650 = mul nsw i32 %4647, %2815
  %4651 = sext i32 %4650 to i64
  %4652 = add i64 %271, %4649
  %4653 = add i64 %4652, %4651
  %4654 = ashr i64 %4653, %274
  %4655 = trunc i64 %4654 to i32
  store i32 %4655, i32* %421, align 4
  %4656 = load i32, i32* %136, align 4
  %4657 = load i32, i32* %169, align 4
  %4658 = mul nsw i32 %4656, %2900
  %4659 = sext i32 %4658 to i64
  %4660 = mul nsw i32 %4657, %2815
  %4661 = sext i32 %4660 to i64
  %4662 = add i64 %271, %4659
  %4663 = add i64 %4662, %4661
  %4664 = ashr i64 %4663, %274
  %4665 = trunc i64 %4664 to i32
  store i32 %4665, i32* %437, align 8
  %4666 = load i32, i32* %139, align 4
  %4667 = load i32, i32* %166, align 4
  %4668 = mul nsw i32 %4666, %2900
  %4669 = sext i32 %4668 to i64
  %4670 = mul nsw i32 %4667, %2815
  %4671 = sext i32 %4670 to i64
  %4672 = add i64 %271, %4669
  %4673 = add i64 %4672, %4671
  %4674 = ashr i64 %4673, %274
  %4675 = trunc i64 %4674 to i32
  store i32 %4675, i32* %453, align 4
  %4676 = load i32, i32* %142, align 4
  store i32 %4676, i32* %469, align 16
  %4677 = load i32, i32* %145, align 4
  store i32 %4677, i32* %485, align 4
  %4678 = load i32, i32* %148, align 4
  store i32 %4678, i32* %501, align 8
  %4679 = bitcast i32* %151 to <4 x i32>*
  %4680 = load <4 x i32>, <4 x i32>* %4679, align 4
  %4681 = bitcast i32* %517 to <4 x i32>*
  store <4 x i32> %4680, <4 x i32>* %4681, align 4
  %4682 = load i32, i32* %163, align 4
  store i32 %4682, i32* %553, align 4
  %4683 = mul nsw i32 %4666, %2815
  %4684 = sext i32 %4683 to i64
  %4685 = mul nsw i32 %4667, %2811
  %4686 = sext i32 %4685 to i64
  %4687 = add i64 %271, %4684
  %4688 = add i64 %4687, %4686
  %4689 = ashr i64 %4688, %274
  %4690 = trunc i64 %4689 to i32
  store i32 %4690, i32* %562, align 16
  %4691 = mul nsw i32 %4656, %2815
  %4692 = sext i32 %4691 to i64
  %4693 = mul nsw i32 %4657, %2811
  %4694 = sext i32 %4693 to i64
  %4695 = add i64 %271, %4692
  %4696 = add i64 %4695, %4694
  %4697 = ashr i64 %4696, %274
  %4698 = trunc i64 %4697 to i32
  store i32 %4698, i32* %571, align 4
  %4699 = mul nsw i32 %4646, %2815
  %4700 = sext i32 %4699 to i64
  %4701 = mul nsw i32 %4647, %2811
  %4702 = sext i32 %4701 to i64
  %4703 = add i64 %271, %4700
  %4704 = add i64 %4703, %4702
  %4705 = ashr i64 %4704, %274
  %4706 = trunc i64 %4705 to i32
  store i32 %4706, i32* %580, align 8
  %4707 = mul nsw i32 %4636, %2815
  %4708 = sext i32 %4707 to i64
  %4709 = mul nsw i32 %4637, %2811
  %4710 = sext i32 %4709 to i64
  %4711 = add i64 %271, %4708
  %4712 = add i64 %4711, %4710
  %4713 = ashr i64 %4712, %274
  %4714 = trunc i64 %4713 to i32
  store i32 %4714, i32* %589, align 4
  %4715 = load i32, i32* %127, align 4
  %4716 = load i32, i32* %178, align 4
  %4717 = mul nsw i32 %4715, %2811
  %4718 = sext i32 %4717 to i64
  %4719 = mul nsw i32 %4716, %2814
  %4720 = sext i32 %4719 to i64
  %4721 = add i64 %271, %4718
  %4722 = add i64 %4721, %4720
  %4723 = ashr i64 %4722, %274
  %4724 = trunc i64 %4723 to i32
  store i32 %4724, i32* %598, align 16
  %4725 = load i32, i32* %124, align 4
  %4726 = load i32, i32* %181, align 4
  %4727 = mul nsw i32 %4725, %2811
  %4728 = sext i32 %4727 to i64
  %4729 = mul nsw i32 %4726, %2814
  %4730 = sext i32 %4729 to i64
  %4731 = add i64 %271, %4728
  %4732 = add i64 %4731, %4730
  %4733 = ashr i64 %4732, %274
  %4734 = trunc i64 %4733 to i32
  store i32 %4734, i32* %607, align 4
  %4735 = load i32, i32* %121, align 4
  %4736 = load i32, i32* %184, align 4
  %4737 = mul nsw i32 %4735, %2811
  %4738 = sext i32 %4737 to i64
  %4739 = mul nsw i32 %4736, %2814
  %4740 = sext i32 %4739 to i64
  %4741 = add i64 %271, %4738
  %4742 = add i64 %4741, %4740
  %4743 = ashr i64 %4742, %274
  %4744 = trunc i64 %4743 to i32
  store i32 %4744, i32* %616, align 8
  %4745 = load i32, i32* %118, align 4
  %4746 = load i32, i32* %187, align 4
  %4747 = mul nsw i32 %4745, %2811
  %4748 = sext i32 %4747 to i64
  %4749 = mul nsw i32 %4746, %2814
  %4750 = sext i32 %4749 to i64
  %4751 = add i64 %271, %4748
  %4752 = add i64 %4751, %4750
  %4753 = ashr i64 %4752, %274
  %4754 = trunc i64 %4753 to i32
  store i32 %4754, i32* %625, align 4
  %4755 = load i32, i32* %190, align 4
  store i32 %4755, i32* %634, align 16
  %4756 = load i32, i32* %193, align 4
  store i32 %4756, i32* %643, align 4
  %4757 = load i32, i32* %196, align 4
  store i32 %4757, i32* %652, align 8
  %4758 = load i32, i32* %199, align 4
  store i32 %4758, i32* %661, align 4
  %4759 = load i8, i8* %4242, align 1
  call void @av1_range_check_buf(i32 8, i32* %0, i32* nonnull %202, i32 64, i8 signext %4759) #4
  %4760 = load i32, i32* %202, align 16
  %4761 = load i32, i32* %228, align 4
  %4762 = add nsw i32 %4761, %4760
  %4763 = getelementptr inbounds i8, i8* %3, i64 9
  %4764 = load i8, i8* %4763, align 1
  %4765 = icmp slt i8 %4764, 1
  br i1 %4765, label %4779, label %4766

4766:                                             ; preds = %4591
  %4767 = sext i8 %4764 to i64
  %4768 = add nuw nsw i64 %4767, 4294967295
  %4769 = and i64 %4768, 4294967295
  %4770 = shl i64 1, %4769
  %4771 = add nsw i64 %4770, -1
  %4772 = sub nsw i64 0, %4770
  %4773 = sext i32 %4762 to i64
  %4774 = icmp slt i64 %4773, %4772
  %4775 = icmp slt i64 %4771, %4773
  %4776 = select i1 %4775, i64 %4771, i64 %4773
  %4777 = select i1 %4774, i64 %4772, i64 %4776
  %4778 = trunc i64 %4777 to i32
  br label %4779

4779:                                             ; preds = %4591, %4766
  %4780 = phi i32 [ %4778, %4766 ], [ %4762, %4591 ]
  store i32 %4780, i32* %1, align 4
  %4781 = load i32, i32* %203, align 4
  %4782 = load i32, i32* %225, align 8
  %4783 = add nsw i32 %4782, %4781
  %4784 = load i8, i8* %4763, align 1
  %4785 = icmp slt i8 %4784, 1
  br i1 %4785, label %4799, label %4786

4786:                                             ; preds = %4779
  %4787 = sext i8 %4784 to i64
  %4788 = add nuw nsw i64 %4787, 4294967295
  %4789 = and i64 %4788, 4294967295
  %4790 = shl i64 1, %4789
  %4791 = add nsw i64 %4790, -1
  %4792 = sub nsw i64 0, %4790
  %4793 = sext i32 %4783 to i64
  %4794 = icmp slt i64 %4793, %4792
  %4795 = icmp slt i64 %4791, %4793
  %4796 = select i1 %4795, i64 %4791, i64 %4793
  %4797 = select i1 %4794, i64 %4792, i64 %4796
  %4798 = trunc i64 %4797 to i32
  br label %4799

4799:                                             ; preds = %4779, %4786
  %4800 = phi i32 [ %4798, %4786 ], [ %4783, %4779 ]
  store i32 %4800, i32* %13, align 4
  %4801 = load i32, i32* %204, align 8
  %4802 = load i32, i32* %224, align 4
  %4803 = add nsw i32 %4802, %4801
  %4804 = load i8, i8* %4763, align 1
  %4805 = icmp slt i8 %4804, 1
  br i1 %4805, label %4819, label %4806

4806:                                             ; preds = %4799
  %4807 = sext i8 %4804 to i64
  %4808 = add nuw nsw i64 %4807, 4294967295
  %4809 = and i64 %4808, 4294967295
  %4810 = shl i64 1, %4809
  %4811 = add nsw i64 %4810, -1
  %4812 = sub nsw i64 0, %4810
  %4813 = sext i32 %4803 to i64
  %4814 = icmp slt i64 %4813, %4812
  %4815 = icmp slt i64 %4811, %4813
  %4816 = select i1 %4815, i64 %4811, i64 %4813
  %4817 = select i1 %4814, i64 %4812, i64 %4816
  %4818 = trunc i64 %4817 to i32
  br label %4819

4819:                                             ; preds = %4799, %4806
  %4820 = phi i32 [ %4818, %4806 ], [ %4803, %4799 ]
  store i32 %4820, i32* %16, align 4
  %4821 = load i32, i32* %207, align 4
  %4822 = load i32, i32* %223, align 16
  %4823 = add nsw i32 %4822, %4821
  %4824 = load i8, i8* %4763, align 1
  %4825 = icmp slt i8 %4824, 1
  br i1 %4825, label %4839, label %4826

4826:                                             ; preds = %4819
  %4827 = sext i8 %4824 to i64
  %4828 = add nuw nsw i64 %4827, 4294967295
  %4829 = and i64 %4828, 4294967295
  %4830 = shl i64 1, %4829
  %4831 = add nsw i64 %4830, -1
  %4832 = sub nsw i64 0, %4830
  %4833 = sext i32 %4823 to i64
  %4834 = icmp slt i64 %4833, %4832
  %4835 = icmp slt i64 %4831, %4833
  %4836 = select i1 %4835, i64 %4831, i64 %4833
  %4837 = select i1 %4834, i64 %4832, i64 %4836
  %4838 = trunc i64 %4837 to i32
  br label %4839

4839:                                             ; preds = %4819, %4826
  %4840 = phi i32 [ %4838, %4826 ], [ %4823, %4819 ]
  store i32 %4840, i32* %19, align 4
  %4841 = load i32, i32* %209, align 16
  %4842 = load i32, i32* %221, align 4
  %4843 = add nsw i32 %4842, %4841
  %4844 = load i8, i8* %4763, align 1
  %4845 = icmp slt i8 %4844, 1
  br i1 %4845, label %4859, label %4846

4846:                                             ; preds = %4839
  %4847 = sext i8 %4844 to i64
  %4848 = add nuw nsw i64 %4847, 4294967295
  %4849 = and i64 %4848, 4294967295
  %4850 = shl i64 1, %4849
  %4851 = add nsw i64 %4850, -1
  %4852 = sub nsw i64 0, %4850
  %4853 = sext i32 %4843 to i64
  %4854 = icmp slt i64 %4853, %4852
  %4855 = icmp slt i64 %4851, %4853
  %4856 = select i1 %4855, i64 %4851, i64 %4853
  %4857 = select i1 %4854, i64 %4852, i64 %4856
  %4858 = trunc i64 %4857 to i32
  br label %4859

4859:                                             ; preds = %4839, %4846
  %4860 = phi i32 [ %4858, %4846 ], [ %4843, %4839 ]
  store i32 %4860, i32* %22, align 4
  %4861 = load i32, i32* %210, align 4
  %4862 = load i32, i32* %218, align 8
  %4863 = add nsw i32 %4862, %4861
  %4864 = load i8, i8* %4763, align 1
  %4865 = icmp slt i8 %4864, 1
  br i1 %4865, label %4879, label %4866

4866:                                             ; preds = %4859
  %4867 = sext i8 %4864 to i64
  %4868 = add nuw nsw i64 %4867, 4294967295
  %4869 = and i64 %4868, 4294967295
  %4870 = shl i64 1, %4869
  %4871 = add nsw i64 %4870, -1
  %4872 = sub nsw i64 0, %4870
  %4873 = sext i32 %4863 to i64
  %4874 = icmp slt i64 %4873, %4872
  %4875 = icmp slt i64 %4871, %4873
  %4876 = select i1 %4875, i64 %4871, i64 %4873
  %4877 = select i1 %4874, i64 %4872, i64 %4876
  %4878 = trunc i64 %4877 to i32
  br label %4879

4879:                                             ; preds = %4859, %4866
  %4880 = phi i32 [ %4878, %4866 ], [ %4863, %4859 ]
  store i32 %4880, i32* %25, align 4
  %4881 = load i32, i32* %211, align 8
  %4882 = load i32, i32* %217, align 4
  %4883 = add nsw i32 %4882, %4881
  %4884 = load i8, i8* %4763, align 1
  %4885 = icmp slt i8 %4884, 1
  br i1 %4885, label %4899, label %4886

4886:                                             ; preds = %4879
  %4887 = sext i8 %4884 to i64
  %4888 = add nuw nsw i64 %4887, 4294967295
  %4889 = and i64 %4888, 4294967295
  %4890 = shl i64 1, %4889
  %4891 = add nsw i64 %4890, -1
  %4892 = sub nsw i64 0, %4890
  %4893 = sext i32 %4883 to i64
  %4894 = icmp slt i64 %4893, %4892
  %4895 = icmp slt i64 %4891, %4893
  %4896 = select i1 %4895, i64 %4891, i64 %4893
  %4897 = select i1 %4894, i64 %4892, i64 %4896
  %4898 = trunc i64 %4897 to i32
  br label %4899

4899:                                             ; preds = %4879, %4886
  %4900 = phi i32 [ %4898, %4886 ], [ %4883, %4879 ]
  store i32 %4900, i32* %28, align 4
  %4901 = load i32, i32* %214, align 4
  %4902 = load i32, i32* %216, align 16
  %4903 = add nsw i32 %4902, %4901
  %4904 = load i8, i8* %4763, align 1
  %4905 = icmp slt i8 %4904, 1
  br i1 %4905, label %4919, label %4906

4906:                                             ; preds = %4899
  %4907 = sext i8 %4904 to i64
  %4908 = add nuw nsw i64 %4907, 4294967295
  %4909 = and i64 %4908, 4294967295
  %4910 = shl i64 1, %4909
  %4911 = add nsw i64 %4910, -1
  %4912 = sub nsw i64 0, %4910
  %4913 = sext i32 %4903 to i64
  %4914 = icmp slt i64 %4913, %4912
  %4915 = icmp slt i64 %4911, %4913
  %4916 = select i1 %4915, i64 %4911, i64 %4913
  %4917 = select i1 %4914, i64 %4912, i64 %4916
  %4918 = trunc i64 %4917 to i32
  br label %4919

4919:                                             ; preds = %4899, %4906
  %4920 = phi i32 [ %4918, %4906 ], [ %4903, %4899 ]
  store i32 %4920, i32* %31, align 4
  %4921 = sub nsw i32 %4901, %4902
  %4922 = load i8, i8* %4763, align 1
  %4923 = icmp slt i8 %4922, 1
  br i1 %4923, label %4937, label %4924

4924:                                             ; preds = %4919
  %4925 = sext i8 %4922 to i64
  %4926 = add nuw nsw i64 %4925, 4294967295
  %4927 = and i64 %4926, 4294967295
  %4928 = shl i64 1, %4927
  %4929 = add nsw i64 %4928, -1
  %4930 = sub nsw i64 0, %4928
  %4931 = sext i32 %4921 to i64
  %4932 = icmp slt i64 %4931, %4930
  %4933 = icmp slt i64 %4929, %4931
  %4934 = select i1 %4933, i64 %4929, i64 %4931
  %4935 = select i1 %4932, i64 %4930, i64 %4934
  %4936 = trunc i64 %4935 to i32
  br label %4937

4937:                                             ; preds = %4919, %4924
  %4938 = phi i32 [ %4936, %4924 ], [ %4921, %4919 ]
  store i32 %4938, i32* %34, align 4
  %4939 = sub nsw i32 %4881, %4882
  %4940 = load i8, i8* %4763, align 1
  %4941 = icmp slt i8 %4940, 1
  br i1 %4941, label %4955, label %4942

4942:                                             ; preds = %4937
  %4943 = sext i8 %4940 to i64
  %4944 = add nuw nsw i64 %4943, 4294967295
  %4945 = and i64 %4944, 4294967295
  %4946 = shl i64 1, %4945
  %4947 = add nsw i64 %4946, -1
  %4948 = sub nsw i64 0, %4946
  %4949 = sext i32 %4939 to i64
  %4950 = icmp slt i64 %4949, %4948
  %4951 = icmp slt i64 %4947, %4949
  %4952 = select i1 %4951, i64 %4947, i64 %4949
  %4953 = select i1 %4950, i64 %4948, i64 %4952
  %4954 = trunc i64 %4953 to i32
  br label %4955

4955:                                             ; preds = %4937, %4942
  %4956 = phi i32 [ %4954, %4942 ], [ %4939, %4937 ]
  store i32 %4956, i32* %37, align 4
  %4957 = sub nsw i32 %4861, %4862
  %4958 = load i8, i8* %4763, align 1
  %4959 = icmp slt i8 %4958, 1
  br i1 %4959, label %4973, label %4960

4960:                                             ; preds = %4955
  %4961 = sext i8 %4958 to i64
  %4962 = add nuw nsw i64 %4961, 4294967295
  %4963 = and i64 %4962, 4294967295
  %4964 = shl i64 1, %4963
  %4965 = add nsw i64 %4964, -1
  %4966 = sub nsw i64 0, %4964
  %4967 = sext i32 %4957 to i64
  %4968 = icmp slt i64 %4967, %4966
  %4969 = icmp slt i64 %4965, %4967
  %4970 = select i1 %4969, i64 %4965, i64 %4967
  %4971 = select i1 %4968, i64 %4966, i64 %4970
  %4972 = trunc i64 %4971 to i32
  br label %4973

4973:                                             ; preds = %4955, %4960
  %4974 = phi i32 [ %4972, %4960 ], [ %4957, %4955 ]
  store i32 %4974, i32* %40, align 4
  %4975 = sub nsw i32 %4841, %4842
  %4976 = load i8, i8* %4763, align 1
  %4977 = icmp slt i8 %4976, 1
  br i1 %4977, label %4991, label %4978

4978:                                             ; preds = %4973
  %4979 = sext i8 %4976 to i64
  %4980 = add nuw nsw i64 %4979, 4294967295
  %4981 = and i64 %4980, 4294967295
  %4982 = shl i64 1, %4981
  %4983 = add nsw i64 %4982, -1
  %4984 = sub nsw i64 0, %4982
  %4985 = sext i32 %4975 to i64
  %4986 = icmp slt i64 %4985, %4984
  %4987 = icmp slt i64 %4983, %4985
  %4988 = select i1 %4987, i64 %4983, i64 %4985
  %4989 = select i1 %4986, i64 %4984, i64 %4988
  %4990 = trunc i64 %4989 to i32
  br label %4991

4991:                                             ; preds = %4973, %4978
  %4992 = phi i32 [ %4990, %4978 ], [ %4975, %4973 ]
  store i32 %4992, i32* %43, align 4
  %4993 = sub nsw i32 %4821, %4822
  %4994 = load i8, i8* %4763, align 1
  %4995 = icmp slt i8 %4994, 1
  br i1 %4995, label %5009, label %4996

4996:                                             ; preds = %4991
  %4997 = sext i8 %4994 to i64
  %4998 = add nuw nsw i64 %4997, 4294967295
  %4999 = and i64 %4998, 4294967295
  %5000 = shl i64 1, %4999
  %5001 = add nsw i64 %5000, -1
  %5002 = sub nsw i64 0, %5000
  %5003 = sext i32 %4993 to i64
  %5004 = icmp slt i64 %5003, %5002
  %5005 = icmp slt i64 %5001, %5003
  %5006 = select i1 %5005, i64 %5001, i64 %5003
  %5007 = select i1 %5004, i64 %5002, i64 %5006
  %5008 = trunc i64 %5007 to i32
  br label %5009

5009:                                             ; preds = %4991, %4996
  %5010 = phi i32 [ %5008, %4996 ], [ %4993, %4991 ]
  store i32 %5010, i32* %46, align 4
  %5011 = sub nsw i32 %4801, %4802
  %5012 = load i8, i8* %4763, align 1
  %5013 = icmp slt i8 %5012, 1
  br i1 %5013, label %5027, label %5014

5014:                                             ; preds = %5009
  %5015 = sext i8 %5012 to i64
  %5016 = add nuw nsw i64 %5015, 4294967295
  %5017 = and i64 %5016, 4294967295
  %5018 = shl i64 1, %5017
  %5019 = add nsw i64 %5018, -1
  %5020 = sub nsw i64 0, %5018
  %5021 = sext i32 %5011 to i64
  %5022 = icmp slt i64 %5021, %5020
  %5023 = icmp slt i64 %5019, %5021
  %5024 = select i1 %5023, i64 %5019, i64 %5021
  %5025 = select i1 %5022, i64 %5020, i64 %5024
  %5026 = trunc i64 %5025 to i32
  br label %5027

5027:                                             ; preds = %5009, %5014
  %5028 = phi i32 [ %5026, %5014 ], [ %5011, %5009 ]
  store i32 %5028, i32* %49, align 4
  %5029 = sub nsw i32 %4781, %4782
  %5030 = load i8, i8* %4763, align 1
  %5031 = icmp slt i8 %5030, 1
  br i1 %5031, label %5045, label %5032

5032:                                             ; preds = %5027
  %5033 = sext i8 %5030 to i64
  %5034 = add nuw nsw i64 %5033, 4294967295
  %5035 = and i64 %5034, 4294967295
  %5036 = shl i64 1, %5035
  %5037 = add nsw i64 %5036, -1
  %5038 = sub nsw i64 0, %5036
  %5039 = sext i32 %5029 to i64
  %5040 = icmp slt i64 %5039, %5038
  %5041 = icmp slt i64 %5037, %5039
  %5042 = select i1 %5041, i64 %5037, i64 %5039
  %5043 = select i1 %5040, i64 %5038, i64 %5042
  %5044 = trunc i64 %5043 to i32
  br label %5045

5045:                                             ; preds = %5027, %5032
  %5046 = phi i32 [ %5044, %5032 ], [ %5029, %5027 ]
  store i32 %5046, i32* %52, align 4
  %5047 = sub nsw i32 %4760, %4761
  %5048 = load i8, i8* %4763, align 1
  %5049 = icmp slt i8 %5048, 1
  br i1 %5049, label %5063, label %5050

5050:                                             ; preds = %5045
  %5051 = sext i8 %5048 to i64
  %5052 = add nuw nsw i64 %5051, 4294967295
  %5053 = and i64 %5052, 4294967295
  %5054 = shl i64 1, %5053
  %5055 = add nsw i64 %5054, -1
  %5056 = sub nsw i64 0, %5054
  %5057 = sext i32 %5047 to i64
  %5058 = icmp slt i64 %5057, %5056
  %5059 = icmp slt i64 %5055, %5057
  %5060 = select i1 %5059, i64 %5055, i64 %5057
  %5061 = select i1 %5058, i64 %5056, i64 %5060
  %5062 = trunc i64 %5061 to i32
  br label %5063

5063:                                             ; preds = %5045, %5050
  %5064 = phi i32 [ %5062, %5050 ], [ %5047, %5045 ]
  store i32 %5064, i32* %55, align 4
  %5065 = bitcast i32* %230 to <4 x i32>*
  %5066 = load <4 x i32>, <4 x i32>* %5065, align 16
  %5067 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %5066, <4 x i32>* %5067, align 4
  %5068 = load i32, i32* %237, align 16
  %5069 = load i32, i32* %249, align 4
  %5070 = mul nsw i32 %5068, %2804
  %5071 = sext i32 %5070 to i64
  %5072 = mul nsw i32 %5069, %2793
  %5073 = sext i32 %5072 to i64
  %5074 = add i64 %271, %5071
  %5075 = add i64 %5074, %5073
  %5076 = ashr i64 %5075, %274
  %5077 = trunc i64 %5076 to i32
  store i32 %5077, i32* %70, align 4
  %5078 = load i32, i32* %238, align 4
  %5079 = load i32, i32* %246, align 8
  %5080 = mul nsw i32 %5078, %2804
  %5081 = sext i32 %5080 to i64
  %5082 = mul nsw i32 %5079, %2793
  %5083 = sext i32 %5082 to i64
  %5084 = add i64 %271, %5081
  %5085 = add i64 %5084, %5083
  %5086 = ashr i64 %5085, %274
  %5087 = trunc i64 %5086 to i32
  store i32 %5087, i32* %73, align 4
  %5088 = load i32, i32* %239, align 8
  %5089 = load i32, i32* %245, align 4
  %5090 = mul nsw i32 %5088, %2804
  %5091 = sext i32 %5090 to i64
  %5092 = mul nsw i32 %5089, %2793
  %5093 = sext i32 %5092 to i64
  %5094 = add i64 %271, %5091
  %5095 = add i64 %5094, %5093
  %5096 = ashr i64 %5095, %274
  %5097 = trunc i64 %5096 to i32
  store i32 %5097, i32* %76, align 4
  %5098 = load i32, i32* %242, align 4
  %5099 = load i32, i32* %244, align 16
  %5100 = mul nsw i32 %5098, %2804
  %5101 = sext i32 %5100 to i64
  %5102 = mul nsw i32 %5099, %2793
  %5103 = sext i32 %5102 to i64
  %5104 = add i64 %271, %5101
  %5105 = add i64 %5104, %5103
  %5106 = ashr i64 %5105, %274
  %5107 = trunc i64 %5106 to i32
  store i32 %5107, i32* %79, align 4
  %5108 = mul nsw i32 %5098, %2793
  %5109 = sext i32 %5108 to i64
  %5110 = add i64 %271, %5109
  %5111 = add i64 %5110, %5103
  %5112 = ashr i64 %5111, %274
  %5113 = trunc i64 %5112 to i32
  store i32 %5113, i32* %82, align 4
  %5114 = mul nsw i32 %5088, %2793
  %5115 = sext i32 %5114 to i64
  %5116 = add i64 %271, %5115
  %5117 = add i64 %5116, %5093
  %5118 = ashr i64 %5117, %274
  %5119 = trunc i64 %5118 to i32
  store i32 %5119, i32* %85, align 4
  %5120 = mul nsw i32 %5078, %2793
  %5121 = sext i32 %5120 to i64
  %5122 = add i64 %271, %5121
  %5123 = add i64 %5122, %5083
  %5124 = ashr i64 %5123, %274
  %5125 = trunc i64 %5124 to i32
  store i32 %5125, i32* %88, align 4
  %5126 = mul nsw i32 %5068, %2793
  %5127 = sext i32 %5126 to i64
  %5128 = add i64 %271, %5127
  %5129 = add i64 %5128, %5073
  %5130 = ashr i64 %5129, %274
  %5131 = trunc i64 %5130 to i32
  store i32 %5131, i32* %91, align 4
  %5132 = load i32, i32* %251, align 16
  store i32 %5132, i32* %94, align 4
  %5133 = load i32, i32* %252, align 4
  store i32 %5133, i32* %97, align 4
  %5134 = load i32, i32* %253, align 8
  store i32 %5134, i32* %100, align 4
  %5135 = load i32, i32* %256, align 4
  store i32 %5135, i32* %103, align 4
  %5136 = load i32, i32* %277, align 16
  %5137 = load i32, i32* %517, align 4
  %5138 = add nsw i32 %5137, %5136
  %5139 = load i8, i8* %4763, align 1
  %5140 = icmp slt i8 %5139, 1
  br i1 %5140, label %5154, label %5141

5141:                                             ; preds = %5063
  %5142 = sext i8 %5139 to i64
  %5143 = add nuw nsw i64 %5142, 4294967295
  %5144 = and i64 %5143, 4294967295
  %5145 = shl i64 1, %5144
  %5146 = add nsw i64 %5145, -1
  %5147 = sub nsw i64 0, %5145
  %5148 = sext i32 %5138 to i64
  %5149 = icmp slt i64 %5148, %5147
  %5150 = icmp slt i64 %5146, %5148
  %5151 = select i1 %5150, i64 %5146, i64 %5148
  %5152 = select i1 %5149, i64 %5147, i64 %5151
  %5153 = trunc i64 %5152 to i32
  br label %5154

5154:                                             ; preds = %5063, %5141
  %5155 = phi i32 [ %5153, %5141 ], [ %5138, %5063 ]
  store i32 %5155, i32* %106, align 4
  %5156 = load i32, i32* %293, align 4
  %5157 = load i32, i32* %501, align 8
  %5158 = add nsw i32 %5157, %5156
  %5159 = load i8, i8* %4763, align 1
  %5160 = icmp slt i8 %5159, 1
  br i1 %5160, label %5174, label %5161

5161:                                             ; preds = %5154
  %5162 = sext i8 %5159 to i64
  %5163 = add nuw nsw i64 %5162, 4294967295
  %5164 = and i64 %5163, 4294967295
  %5165 = shl i64 1, %5164
  %5166 = add nsw i64 %5165, -1
  %5167 = sub nsw i64 0, %5165
  %5168 = sext i32 %5158 to i64
  %5169 = icmp slt i64 %5168, %5167
  %5170 = icmp slt i64 %5166, %5168
  %5171 = select i1 %5170, i64 %5166, i64 %5168
  %5172 = select i1 %5169, i64 %5167, i64 %5171
  %5173 = trunc i64 %5172 to i32
  br label %5174

5174:                                             ; preds = %5154, %5161
  %5175 = phi i32 [ %5173, %5161 ], [ %5158, %5154 ]
  store i32 %5175, i32* %109, align 4
  %5176 = load i32, i32* %309, align 8
  %5177 = load i32, i32* %485, align 4
  %5178 = add nsw i32 %5177, %5176
  %5179 = load i8, i8* %4763, align 1
  %5180 = icmp slt i8 %5179, 1
  br i1 %5180, label %5194, label %5181

5181:                                             ; preds = %5174
  %5182 = sext i8 %5179 to i64
  %5183 = add nuw nsw i64 %5182, 4294967295
  %5184 = and i64 %5183, 4294967295
  %5185 = shl i64 1, %5184
  %5186 = add nsw i64 %5185, -1
  %5187 = sub nsw i64 0, %5185
  %5188 = sext i32 %5178 to i64
  %5189 = icmp slt i64 %5188, %5187
  %5190 = icmp slt i64 %5186, %5188
  %5191 = select i1 %5190, i64 %5186, i64 %5188
  %5192 = select i1 %5189, i64 %5187, i64 %5191
  %5193 = trunc i64 %5192 to i32
  br label %5194

5194:                                             ; preds = %5174, %5181
  %5195 = phi i32 [ %5193, %5181 ], [ %5178, %5174 ]
  store i32 %5195, i32* %112, align 4
  %5196 = load i32, i32* %325, align 4
  %5197 = load i32, i32* %469, align 16
  %5198 = add nsw i32 %5197, %5196
  %5199 = load i8, i8* %4763, align 1
  %5200 = icmp slt i8 %5199, 1
  br i1 %5200, label %5214, label %5201

5201:                                             ; preds = %5194
  %5202 = sext i8 %5199 to i64
  %5203 = add nuw nsw i64 %5202, 4294967295
  %5204 = and i64 %5203, 4294967295
  %5205 = shl i64 1, %5204
  %5206 = add nsw i64 %5205, -1
  %5207 = sub nsw i64 0, %5205
  %5208 = sext i32 %5198 to i64
  %5209 = icmp slt i64 %5208, %5207
  %5210 = icmp slt i64 %5206, %5208
  %5211 = select i1 %5210, i64 %5206, i64 %5208
  %5212 = select i1 %5209, i64 %5207, i64 %5211
  %5213 = trunc i64 %5212 to i32
  br label %5214

5214:                                             ; preds = %5194, %5201
  %5215 = phi i32 [ %5213, %5201 ], [ %5198, %5194 ]
  store i32 %5215, i32* %115, align 4
  %5216 = load i32, i32* %341, align 16
  %5217 = load i32, i32* %453, align 4
  %5218 = add nsw i32 %5217, %5216
  %5219 = load i8, i8* %4763, align 1
  %5220 = icmp slt i8 %5219, 1
  br i1 %5220, label %5234, label %5221

5221:                                             ; preds = %5214
  %5222 = sext i8 %5219 to i64
  %5223 = add nuw nsw i64 %5222, 4294967295
  %5224 = and i64 %5223, 4294967295
  %5225 = shl i64 1, %5224
  %5226 = add nsw i64 %5225, -1
  %5227 = sub nsw i64 0, %5225
  %5228 = sext i32 %5218 to i64
  %5229 = icmp slt i64 %5228, %5227
  %5230 = icmp slt i64 %5226, %5228
  %5231 = select i1 %5230, i64 %5226, i64 %5228
  %5232 = select i1 %5229, i64 %5227, i64 %5231
  %5233 = trunc i64 %5232 to i32
  br label %5234

5234:                                             ; preds = %5214, %5221
  %5235 = phi i32 [ %5233, %5221 ], [ %5218, %5214 ]
  store i32 %5235, i32* %118, align 4
  %5236 = load i32, i32* %357, align 4
  %5237 = load i32, i32* %437, align 8
  %5238 = add nsw i32 %5237, %5236
  %5239 = load i8, i8* %4763, align 1
  %5240 = icmp slt i8 %5239, 1
  br i1 %5240, label %5254, label %5241

5241:                                             ; preds = %5234
  %5242 = sext i8 %5239 to i64
  %5243 = add nuw nsw i64 %5242, 4294967295
  %5244 = and i64 %5243, 4294967295
  %5245 = shl i64 1, %5244
  %5246 = add nsw i64 %5245, -1
  %5247 = sub nsw i64 0, %5245
  %5248 = sext i32 %5238 to i64
  %5249 = icmp slt i64 %5248, %5247
  %5250 = icmp slt i64 %5246, %5248
  %5251 = select i1 %5250, i64 %5246, i64 %5248
  %5252 = select i1 %5249, i64 %5247, i64 %5251
  %5253 = trunc i64 %5252 to i32
  br label %5254

5254:                                             ; preds = %5234, %5241
  %5255 = phi i32 [ %5253, %5241 ], [ %5238, %5234 ]
  store i32 %5255, i32* %121, align 4
  %5256 = load i32, i32* %373, align 8
  %5257 = load i32, i32* %421, align 4
  %5258 = add nsw i32 %5257, %5256
  %5259 = load i8, i8* %4763, align 1
  %5260 = icmp slt i8 %5259, 1
  br i1 %5260, label %5274, label %5261

5261:                                             ; preds = %5254
  %5262 = sext i8 %5259 to i64
  %5263 = add nuw nsw i64 %5262, 4294967295
  %5264 = and i64 %5263, 4294967295
  %5265 = shl i64 1, %5264
  %5266 = add nsw i64 %5265, -1
  %5267 = sub nsw i64 0, %5265
  %5268 = sext i32 %5258 to i64
  %5269 = icmp slt i64 %5268, %5267
  %5270 = icmp slt i64 %5266, %5268
  %5271 = select i1 %5270, i64 %5266, i64 %5268
  %5272 = select i1 %5269, i64 %5267, i64 %5271
  %5273 = trunc i64 %5272 to i32
  br label %5274

5274:                                             ; preds = %5254, %5261
  %5275 = phi i32 [ %5273, %5261 ], [ %5258, %5254 ]
  store i32 %5275, i32* %124, align 4
  %5276 = load i32, i32* %389, align 4
  %5277 = load i32, i32* %405, align 16
  %5278 = add nsw i32 %5277, %5276
  %5279 = load i8, i8* %4763, align 1
  %5280 = icmp slt i8 %5279, 1
  br i1 %5280, label %5294, label %5281

5281:                                             ; preds = %5274
  %5282 = sext i8 %5279 to i64
  %5283 = add nuw nsw i64 %5282, 4294967295
  %5284 = and i64 %5283, 4294967295
  %5285 = shl i64 1, %5284
  %5286 = add nsw i64 %5285, -1
  %5287 = sub nsw i64 0, %5285
  %5288 = sext i32 %5278 to i64
  %5289 = icmp slt i64 %5288, %5287
  %5290 = icmp slt i64 %5286, %5288
  %5291 = select i1 %5290, i64 %5286, i64 %5288
  %5292 = select i1 %5289, i64 %5287, i64 %5291
  %5293 = trunc i64 %5292 to i32
  br label %5294

5294:                                             ; preds = %5274, %5281
  %5295 = phi i32 [ %5293, %5281 ], [ %5278, %5274 ]
  store i32 %5295, i32* %127, align 4
  %5296 = sub nsw i32 %5276, %5277
  %5297 = load i8, i8* %4763, align 1
  %5298 = icmp slt i8 %5297, 1
  br i1 %5298, label %5312, label %5299

5299:                                             ; preds = %5294
  %5300 = sext i8 %5297 to i64
  %5301 = add nuw nsw i64 %5300, 4294967295
  %5302 = and i64 %5301, 4294967295
  %5303 = shl i64 1, %5302
  %5304 = add nsw i64 %5303, -1
  %5305 = sub nsw i64 0, %5303
  %5306 = sext i32 %5296 to i64
  %5307 = icmp slt i64 %5306, %5305
  %5308 = icmp slt i64 %5304, %5306
  %5309 = select i1 %5308, i64 %5304, i64 %5306
  %5310 = select i1 %5307, i64 %5305, i64 %5309
  %5311 = trunc i64 %5310 to i32
  br label %5312

5312:                                             ; preds = %5294, %5299
  %5313 = phi i32 [ %5311, %5299 ], [ %5296, %5294 ]
  store i32 %5313, i32* %130, align 4
  %5314 = sub nsw i32 %5256, %5257
  %5315 = load i8, i8* %4763, align 1
  %5316 = icmp slt i8 %5315, 1
  br i1 %5316, label %5330, label %5317

5317:                                             ; preds = %5312
  %5318 = sext i8 %5315 to i64
  %5319 = add nuw nsw i64 %5318, 4294967295
  %5320 = and i64 %5319, 4294967295
  %5321 = shl i64 1, %5320
  %5322 = add nsw i64 %5321, -1
  %5323 = sub nsw i64 0, %5321
  %5324 = sext i32 %5314 to i64
  %5325 = icmp slt i64 %5324, %5323
  %5326 = icmp slt i64 %5322, %5324
  %5327 = select i1 %5326, i64 %5322, i64 %5324
  %5328 = select i1 %5325, i64 %5323, i64 %5327
  %5329 = trunc i64 %5328 to i32
  br label %5330

5330:                                             ; preds = %5312, %5317
  %5331 = phi i32 [ %5329, %5317 ], [ %5314, %5312 ]
  store i32 %5331, i32* %133, align 4
  %5332 = sub nsw i32 %5236, %5237
  %5333 = load i8, i8* %4763, align 1
  %5334 = icmp slt i8 %5333, 1
  br i1 %5334, label %5348, label %5335

5335:                                             ; preds = %5330
  %5336 = sext i8 %5333 to i64
  %5337 = add nuw nsw i64 %5336, 4294967295
  %5338 = and i64 %5337, 4294967295
  %5339 = shl i64 1, %5338
  %5340 = add nsw i64 %5339, -1
  %5341 = sub nsw i64 0, %5339
  %5342 = sext i32 %5332 to i64
  %5343 = icmp slt i64 %5342, %5341
  %5344 = icmp slt i64 %5340, %5342
  %5345 = select i1 %5344, i64 %5340, i64 %5342
  %5346 = select i1 %5343, i64 %5341, i64 %5345
  %5347 = trunc i64 %5346 to i32
  br label %5348

5348:                                             ; preds = %5330, %5335
  %5349 = phi i32 [ %5347, %5335 ], [ %5332, %5330 ]
  store i32 %5349, i32* %136, align 4
  %5350 = sub nsw i32 %5216, %5217
  %5351 = load i8, i8* %4763, align 1
  %5352 = icmp slt i8 %5351, 1
  br i1 %5352, label %5366, label %5353

5353:                                             ; preds = %5348
  %5354 = sext i8 %5351 to i64
  %5355 = add nuw nsw i64 %5354, 4294967295
  %5356 = and i64 %5355, 4294967295
  %5357 = shl i64 1, %5356
  %5358 = add nsw i64 %5357, -1
  %5359 = sub nsw i64 0, %5357
  %5360 = sext i32 %5350 to i64
  %5361 = icmp slt i64 %5360, %5359
  %5362 = icmp slt i64 %5358, %5360
  %5363 = select i1 %5362, i64 %5358, i64 %5360
  %5364 = select i1 %5361, i64 %5359, i64 %5363
  %5365 = trunc i64 %5364 to i32
  br label %5366

5366:                                             ; preds = %5348, %5353
  %5367 = phi i32 [ %5365, %5353 ], [ %5350, %5348 ]
  store i32 %5367, i32* %139, align 4
  %5368 = sub nsw i32 %5196, %5197
  %5369 = load i8, i8* %4763, align 1
  %5370 = icmp slt i8 %5369, 1
  br i1 %5370, label %5384, label %5371

5371:                                             ; preds = %5366
  %5372 = sext i8 %5369 to i64
  %5373 = add nuw nsw i64 %5372, 4294967295
  %5374 = and i64 %5373, 4294967295
  %5375 = shl i64 1, %5374
  %5376 = add nsw i64 %5375, -1
  %5377 = sub nsw i64 0, %5375
  %5378 = sext i32 %5368 to i64
  %5379 = icmp slt i64 %5378, %5377
  %5380 = icmp slt i64 %5376, %5378
  %5381 = select i1 %5380, i64 %5376, i64 %5378
  %5382 = select i1 %5379, i64 %5377, i64 %5381
  %5383 = trunc i64 %5382 to i32
  br label %5384

5384:                                             ; preds = %5366, %5371
  %5385 = phi i32 [ %5383, %5371 ], [ %5368, %5366 ]
  store i32 %5385, i32* %142, align 4
  %5386 = sub nsw i32 %5176, %5177
  %5387 = load i8, i8* %4763, align 1
  %5388 = icmp slt i8 %5387, 1
  br i1 %5388, label %5402, label %5389

5389:                                             ; preds = %5384
  %5390 = sext i8 %5387 to i64
  %5391 = add nuw nsw i64 %5390, 4294967295
  %5392 = and i64 %5391, 4294967295
  %5393 = shl i64 1, %5392
  %5394 = add nsw i64 %5393, -1
  %5395 = sub nsw i64 0, %5393
  %5396 = sext i32 %5386 to i64
  %5397 = icmp slt i64 %5396, %5395
  %5398 = icmp slt i64 %5394, %5396
  %5399 = select i1 %5398, i64 %5394, i64 %5396
  %5400 = select i1 %5397, i64 %5395, i64 %5399
  %5401 = trunc i64 %5400 to i32
  br label %5402

5402:                                             ; preds = %5384, %5389
  %5403 = phi i32 [ %5401, %5389 ], [ %5386, %5384 ]
  store i32 %5403, i32* %145, align 4
  %5404 = sub nsw i32 %5156, %5157
  %5405 = load i8, i8* %4763, align 1
  %5406 = icmp slt i8 %5405, 1
  br i1 %5406, label %5420, label %5407

5407:                                             ; preds = %5402
  %5408 = sext i8 %5405 to i64
  %5409 = add nuw nsw i64 %5408, 4294967295
  %5410 = and i64 %5409, 4294967295
  %5411 = shl i64 1, %5410
  %5412 = add nsw i64 %5411, -1
  %5413 = sub nsw i64 0, %5411
  %5414 = sext i32 %5404 to i64
  %5415 = icmp slt i64 %5414, %5413
  %5416 = icmp slt i64 %5412, %5414
  %5417 = select i1 %5416, i64 %5412, i64 %5414
  %5418 = select i1 %5415, i64 %5413, i64 %5417
  %5419 = trunc i64 %5418 to i32
  br label %5420

5420:                                             ; preds = %5402, %5407
  %5421 = phi i32 [ %5419, %5407 ], [ %5404, %5402 ]
  store i32 %5421, i32* %148, align 4
  %5422 = sub nsw i32 %5136, %5137
  %5423 = load i8, i8* %4763, align 1
  %5424 = icmp slt i8 %5423, 1
  br i1 %5424, label %5438, label %5425

5425:                                             ; preds = %5420
  %5426 = sext i8 %5423 to i64
  %5427 = add nuw nsw i64 %5426, 4294967295
  %5428 = and i64 %5427, 4294967295
  %5429 = shl i64 1, %5428
  %5430 = add nsw i64 %5429, -1
  %5431 = sub nsw i64 0, %5429
  %5432 = sext i32 %5422 to i64
  %5433 = icmp slt i64 %5432, %5431
  %5434 = icmp slt i64 %5430, %5432
  %5435 = select i1 %5434, i64 %5430, i64 %5432
  %5436 = select i1 %5433, i64 %5431, i64 %5435
  %5437 = trunc i64 %5436 to i32
  br label %5438

5438:                                             ; preds = %5420, %5425
  %5439 = phi i32 [ %5437, %5425 ], [ %5422, %5420 ]
  store i32 %5439, i32* %151, align 4
  %5440 = load i32, i32* %526, align 16
  %5441 = load i32, i32* %661, align 4
  %5442 = sub i32 %5441, %5440
  %5443 = load i8, i8* %4763, align 1
  %5444 = icmp slt i8 %5443, 1
  br i1 %5444, label %5458, label %5445

5445:                                             ; preds = %5438
  %5446 = sext i8 %5443 to i64
  %5447 = add nuw nsw i64 %5446, 4294967295
  %5448 = and i64 %5447, 4294967295
  %5449 = shl i64 1, %5448
  %5450 = add nsw i64 %5449, -1
  %5451 = sub nsw i64 0, %5449
  %5452 = sext i32 %5442 to i64
  %5453 = icmp slt i64 %5452, %5451
  %5454 = icmp slt i64 %5450, %5452
  %5455 = select i1 %5454, i64 %5450, i64 %5452
  %5456 = select i1 %5453, i64 %5451, i64 %5455
  %5457 = trunc i64 %5456 to i32
  br label %5458

5458:                                             ; preds = %5438, %5445
  %5459 = phi i32 [ %5457, %5445 ], [ %5442, %5438 ]
  store i32 %5459, i32* %154, align 4
  %5460 = load i32, i32* %535, align 4
  %5461 = load i32, i32* %652, align 8
  %5462 = sub i32 %5461, %5460
  %5463 = load i8, i8* %4763, align 1
  %5464 = icmp slt i8 %5463, 1
  br i1 %5464, label %5478, label %5465

5465:                                             ; preds = %5458
  %5466 = sext i8 %5463 to i64
  %5467 = add nuw nsw i64 %5466, 4294967295
  %5468 = and i64 %5467, 4294967295
  %5469 = shl i64 1, %5468
  %5470 = add nsw i64 %5469, -1
  %5471 = sub nsw i64 0, %5469
  %5472 = sext i32 %5462 to i64
  %5473 = icmp slt i64 %5472, %5471
  %5474 = icmp slt i64 %5470, %5472
  %5475 = select i1 %5474, i64 %5470, i64 %5472
  %5476 = select i1 %5473, i64 %5471, i64 %5475
  %5477 = trunc i64 %5476 to i32
  br label %5478

5478:                                             ; preds = %5458, %5465
  %5479 = phi i32 [ %5477, %5465 ], [ %5462, %5458 ]
  store i32 %5479, i32* %157, align 4
  %5480 = load i32, i32* %544, align 8
  %5481 = load i32, i32* %643, align 4
  %5482 = sub i32 %5481, %5480
  %5483 = load i8, i8* %4763, align 1
  %5484 = icmp slt i8 %5483, 1
  br i1 %5484, label %5498, label %5485

5485:                                             ; preds = %5478
  %5486 = sext i8 %5483 to i64
  %5487 = add nuw nsw i64 %5486, 4294967295
  %5488 = and i64 %5487, 4294967295
  %5489 = shl i64 1, %5488
  %5490 = add nsw i64 %5489, -1
  %5491 = sub nsw i64 0, %5489
  %5492 = sext i32 %5482 to i64
  %5493 = icmp slt i64 %5492, %5491
  %5494 = icmp slt i64 %5490, %5492
  %5495 = select i1 %5494, i64 %5490, i64 %5492
  %5496 = select i1 %5493, i64 %5491, i64 %5495
  %5497 = trunc i64 %5496 to i32
  br label %5498

5498:                                             ; preds = %5478, %5485
  %5499 = phi i32 [ %5497, %5485 ], [ %5482, %5478 ]
  store i32 %5499, i32* %160, align 4
  %5500 = load i32, i32* %553, align 4
  %5501 = load i32, i32* %634, align 16
  %5502 = sub i32 %5501, %5500
  %5503 = load i8, i8* %4763, align 1
  %5504 = icmp slt i8 %5503, 1
  br i1 %5504, label %5518, label %5505

5505:                                             ; preds = %5498
  %5506 = sext i8 %5503 to i64
  %5507 = add nuw nsw i64 %5506, 4294967295
  %5508 = and i64 %5507, 4294967295
  %5509 = shl i64 1, %5508
  %5510 = add nsw i64 %5509, -1
  %5511 = sub nsw i64 0, %5509
  %5512 = sext i32 %5502 to i64
  %5513 = icmp slt i64 %5512, %5511
  %5514 = icmp slt i64 %5510, %5512
  %5515 = select i1 %5514, i64 %5510, i64 %5512
  %5516 = select i1 %5513, i64 %5511, i64 %5515
  %5517 = trunc i64 %5516 to i32
  br label %5518

5518:                                             ; preds = %5498, %5505
  %5519 = phi i32 [ %5517, %5505 ], [ %5502, %5498 ]
  store i32 %5519, i32* %163, align 4
  %5520 = load i32, i32* %562, align 16
  %5521 = load i32, i32* %625, align 4
  %5522 = sub i32 %5521, %5520
  %5523 = load i8, i8* %4763, align 1
  %5524 = icmp slt i8 %5523, 1
  br i1 %5524, label %5538, label %5525

5525:                                             ; preds = %5518
  %5526 = sext i8 %5523 to i64
  %5527 = add nuw nsw i64 %5526, 4294967295
  %5528 = and i64 %5527, 4294967295
  %5529 = shl i64 1, %5528
  %5530 = add nsw i64 %5529, -1
  %5531 = sub nsw i64 0, %5529
  %5532 = sext i32 %5522 to i64
  %5533 = icmp slt i64 %5532, %5531
  %5534 = icmp slt i64 %5530, %5532
  %5535 = select i1 %5534, i64 %5530, i64 %5532
  %5536 = select i1 %5533, i64 %5531, i64 %5535
  %5537 = trunc i64 %5536 to i32
  br label %5538

5538:                                             ; preds = %5518, %5525
  %5539 = phi i32 [ %5537, %5525 ], [ %5522, %5518 ]
  store i32 %5539, i32* %166, align 4
  %5540 = load i32, i32* %571, align 4
  %5541 = load i32, i32* %616, align 8
  %5542 = sub i32 %5541, %5540
  %5543 = load i8, i8* %4763, align 1
  %5544 = icmp slt i8 %5543, 1
  br i1 %5544, label %5558, label %5545

5545:                                             ; preds = %5538
  %5546 = sext i8 %5543 to i64
  %5547 = add nuw nsw i64 %5546, 4294967295
  %5548 = and i64 %5547, 4294967295
  %5549 = shl i64 1, %5548
  %5550 = add nsw i64 %5549, -1
  %5551 = sub nsw i64 0, %5549
  %5552 = sext i32 %5542 to i64
  %5553 = icmp slt i64 %5552, %5551
  %5554 = icmp slt i64 %5550, %5552
  %5555 = select i1 %5554, i64 %5550, i64 %5552
  %5556 = select i1 %5553, i64 %5551, i64 %5555
  %5557 = trunc i64 %5556 to i32
  br label %5558

5558:                                             ; preds = %5538, %5545
  %5559 = phi i32 [ %5557, %5545 ], [ %5542, %5538 ]
  store i32 %5559, i32* %169, align 4
  %5560 = load i32, i32* %580, align 8
  %5561 = load i32, i32* %607, align 4
  %5562 = sub i32 %5561, %5560
  %5563 = load i8, i8* %4763, align 1
  %5564 = icmp slt i8 %5563, 1
  br i1 %5564, label %5578, label %5565

5565:                                             ; preds = %5558
  %5566 = sext i8 %5563 to i64
  %5567 = add nuw nsw i64 %5566, 4294967295
  %5568 = and i64 %5567, 4294967295
  %5569 = shl i64 1, %5568
  %5570 = add nsw i64 %5569, -1
  %5571 = sub nsw i64 0, %5569
  %5572 = sext i32 %5562 to i64
  %5573 = icmp slt i64 %5572, %5571
  %5574 = icmp slt i64 %5570, %5572
  %5575 = select i1 %5574, i64 %5570, i64 %5572
  %5576 = select i1 %5573, i64 %5571, i64 %5575
  %5577 = trunc i64 %5576 to i32
  br label %5578

5578:                                             ; preds = %5558, %5565
  %5579 = phi i32 [ %5577, %5565 ], [ %5562, %5558 ]
  store i32 %5579, i32* %172, align 4
  %5580 = load i32, i32* %589, align 4
  %5581 = load i32, i32* %598, align 16
  %5582 = sub i32 %5581, %5580
  %5583 = load i8, i8* %4763, align 1
  %5584 = icmp slt i8 %5583, 1
  br i1 %5584, label %5598, label %5585

5585:                                             ; preds = %5578
  %5586 = sext i8 %5583 to i64
  %5587 = add nuw nsw i64 %5586, 4294967295
  %5588 = and i64 %5587, 4294967295
  %5589 = shl i64 1, %5588
  %5590 = add nsw i64 %5589, -1
  %5591 = sub nsw i64 0, %5589
  %5592 = sext i32 %5582 to i64
  %5593 = icmp slt i64 %5592, %5591
  %5594 = icmp slt i64 %5590, %5592
  %5595 = select i1 %5594, i64 %5590, i64 %5592
  %5596 = select i1 %5593, i64 %5591, i64 %5595
  %5597 = trunc i64 %5596 to i32
  br label %5598

5598:                                             ; preds = %5578, %5585
  %5599 = phi i32 [ %5597, %5585 ], [ %5582, %5578 ]
  store i32 %5599, i32* %175, align 4
  %5600 = add nsw i32 %5581, %5580
  %5601 = load i8, i8* %4763, align 1
  %5602 = icmp slt i8 %5601, 1
  br i1 %5602, label %5616, label %5603

5603:                                             ; preds = %5598
  %5604 = sext i8 %5601 to i64
  %5605 = add nuw nsw i64 %5604, 4294967295
  %5606 = and i64 %5605, 4294967295
  %5607 = shl i64 1, %5606
  %5608 = add nsw i64 %5607, -1
  %5609 = sub nsw i64 0, %5607
  %5610 = sext i32 %5600 to i64
  %5611 = icmp slt i64 %5610, %5609
  %5612 = icmp slt i64 %5608, %5610
  %5613 = select i1 %5612, i64 %5608, i64 %5610
  %5614 = select i1 %5611, i64 %5609, i64 %5613
  %5615 = trunc i64 %5614 to i32
  br label %5616

5616:                                             ; preds = %5598, %5603
  %5617 = phi i32 [ %5615, %5603 ], [ %5600, %5598 ]
  store i32 %5617, i32* %178, align 4
  %5618 = add nsw i32 %5561, %5560
  %5619 = load i8, i8* %4763, align 1
  %5620 = icmp slt i8 %5619, 1
  br i1 %5620, label %5634, label %5621

5621:                                             ; preds = %5616
  %5622 = sext i8 %5619 to i64
  %5623 = add nuw nsw i64 %5622, 4294967295
  %5624 = and i64 %5623, 4294967295
  %5625 = shl i64 1, %5624
  %5626 = add nsw i64 %5625, -1
  %5627 = sub nsw i64 0, %5625
  %5628 = sext i32 %5618 to i64
  %5629 = icmp slt i64 %5628, %5627
  %5630 = icmp slt i64 %5626, %5628
  %5631 = select i1 %5630, i64 %5626, i64 %5628
  %5632 = select i1 %5629, i64 %5627, i64 %5631
  %5633 = trunc i64 %5632 to i32
  br label %5634

5634:                                             ; preds = %5616, %5621
  %5635 = phi i32 [ %5633, %5621 ], [ %5618, %5616 ]
  store i32 %5635, i32* %181, align 4
  %5636 = add nsw i32 %5541, %5540
  %5637 = load i8, i8* %4763, align 1
  %5638 = icmp slt i8 %5637, 1
  br i1 %5638, label %5652, label %5639

5639:                                             ; preds = %5634
  %5640 = sext i8 %5637 to i64
  %5641 = add nuw nsw i64 %5640, 4294967295
  %5642 = and i64 %5641, 4294967295
  %5643 = shl i64 1, %5642
  %5644 = add nsw i64 %5643, -1
  %5645 = sub nsw i64 0, %5643
  %5646 = sext i32 %5636 to i64
  %5647 = icmp slt i64 %5646, %5645
  %5648 = icmp slt i64 %5644, %5646
  %5649 = select i1 %5648, i64 %5644, i64 %5646
  %5650 = select i1 %5647, i64 %5645, i64 %5649
  %5651 = trunc i64 %5650 to i32
  br label %5652

5652:                                             ; preds = %5634, %5639
  %5653 = phi i32 [ %5651, %5639 ], [ %5636, %5634 ]
  store i32 %5653, i32* %184, align 4
  %5654 = add nsw i32 %5521, %5520
  %5655 = load i8, i8* %4763, align 1
  %5656 = icmp slt i8 %5655, 1
  br i1 %5656, label %5670, label %5657

5657:                                             ; preds = %5652
  %5658 = sext i8 %5655 to i64
  %5659 = add nuw nsw i64 %5658, 4294967295
  %5660 = and i64 %5659, 4294967295
  %5661 = shl i64 1, %5660
  %5662 = add nsw i64 %5661, -1
  %5663 = sub nsw i64 0, %5661
  %5664 = sext i32 %5654 to i64
  %5665 = icmp slt i64 %5664, %5663
  %5666 = icmp slt i64 %5662, %5664
  %5667 = select i1 %5666, i64 %5662, i64 %5664
  %5668 = select i1 %5665, i64 %5663, i64 %5667
  %5669 = trunc i64 %5668 to i32
  br label %5670

5670:                                             ; preds = %5652, %5657
  %5671 = phi i32 [ %5669, %5657 ], [ %5654, %5652 ]
  store i32 %5671, i32* %187, align 4
  %5672 = add nsw i32 %5501, %5500
  %5673 = load i8, i8* %4763, align 1
  %5674 = icmp slt i8 %5673, 1
  br i1 %5674, label %5688, label %5675

5675:                                             ; preds = %5670
  %5676 = sext i8 %5673 to i64
  %5677 = add nuw nsw i64 %5676, 4294967295
  %5678 = and i64 %5677, 4294967295
  %5679 = shl i64 1, %5678
  %5680 = add nsw i64 %5679, -1
  %5681 = sub nsw i64 0, %5679
  %5682 = sext i32 %5672 to i64
  %5683 = icmp slt i64 %5682, %5681
  %5684 = icmp slt i64 %5680, %5682
  %5685 = select i1 %5684, i64 %5680, i64 %5682
  %5686 = select i1 %5683, i64 %5681, i64 %5685
  %5687 = trunc i64 %5686 to i32
  br label %5688

5688:                                             ; preds = %5670, %5675
  %5689 = phi i32 [ %5687, %5675 ], [ %5672, %5670 ]
  store i32 %5689, i32* %190, align 4
  %5690 = add nsw i32 %5481, %5480
  %5691 = load i8, i8* %4763, align 1
  %5692 = icmp slt i8 %5691, 1
  br i1 %5692, label %5706, label %5693

5693:                                             ; preds = %5688
  %5694 = sext i8 %5691 to i64
  %5695 = add nuw nsw i64 %5694, 4294967295
  %5696 = and i64 %5695, 4294967295
  %5697 = shl i64 1, %5696
  %5698 = add nsw i64 %5697, -1
  %5699 = sub nsw i64 0, %5697
  %5700 = sext i32 %5690 to i64
  %5701 = icmp slt i64 %5700, %5699
  %5702 = icmp slt i64 %5698, %5700
  %5703 = select i1 %5702, i64 %5698, i64 %5700
  %5704 = select i1 %5701, i64 %5699, i64 %5703
  %5705 = trunc i64 %5704 to i32
  br label %5706

5706:                                             ; preds = %5688, %5693
  %5707 = phi i32 [ %5705, %5693 ], [ %5690, %5688 ]
  store i32 %5707, i32* %193, align 4
  %5708 = add nsw i32 %5461, %5460
  %5709 = load i8, i8* %4763, align 1
  %5710 = icmp slt i8 %5709, 1
  br i1 %5710, label %5724, label %5711

5711:                                             ; preds = %5706
  %5712 = sext i8 %5709 to i64
  %5713 = add nuw nsw i64 %5712, 4294967295
  %5714 = and i64 %5713, 4294967295
  %5715 = shl i64 1, %5714
  %5716 = add nsw i64 %5715, -1
  %5717 = sub nsw i64 0, %5715
  %5718 = sext i32 %5708 to i64
  %5719 = icmp slt i64 %5718, %5717
  %5720 = icmp slt i64 %5716, %5718
  %5721 = select i1 %5720, i64 %5716, i64 %5718
  %5722 = select i1 %5719, i64 %5717, i64 %5721
  %5723 = trunc i64 %5722 to i32
  br label %5724

5724:                                             ; preds = %5706, %5711
  %5725 = phi i32 [ %5723, %5711 ], [ %5708, %5706 ]
  store i32 %5725, i32* %196, align 4
  %5726 = add nsw i32 %5441, %5440
  %5727 = load i8, i8* %4763, align 1
  %5728 = icmp slt i8 %5727, 1
  br i1 %5728, label %5742, label %5729

5729:                                             ; preds = %5724
  %5730 = sext i8 %5727 to i64
  %5731 = add nuw nsw i64 %5730, 4294967295
  %5732 = and i64 %5731, 4294967295
  %5733 = shl i64 1, %5732
  %5734 = add nsw i64 %5733, -1
  %5735 = sub nsw i64 0, %5733
  %5736 = sext i32 %5726 to i64
  %5737 = icmp slt i64 %5736, %5735
  %5738 = icmp slt i64 %5734, %5736
  %5739 = select i1 %5738, i64 %5734, i64 %5736
  %5740 = select i1 %5737, i64 %5735, i64 %5739
  %5741 = trunc i64 %5740 to i32
  br label %5742

5742:                                             ; preds = %5724, %5729
  %5743 = phi i32 [ %5741, %5729 ], [ %5726, %5724 ]
  store i32 %5743, i32* %199, align 4
  %5744 = load i8, i8* %4763, align 1
  call void @av1_range_check_buf(i32 9, i32* %0, i32* %1, i32 64, i8 signext %5744) #4
  %5745 = load i32, i32* %1, align 4
  %5746 = load i32, i32* %103, align 4
  %5747 = add nsw i32 %5746, %5745
  %5748 = getelementptr inbounds i8, i8* %3, i64 10
  %5749 = load i8, i8* %5748, align 1
  %5750 = icmp slt i8 %5749, 1
  br i1 %5750, label %5751, label %5795

5751:                                             ; preds = %5742
  store i32 %5747, i32* %202, align 16
  %5752 = bitcast i32* %13 to <4 x i32>*
  %5753 = load <4 x i32>, <4 x i32>* %5752, align 4
  %5754 = bitcast i32* %91 to <4 x i32>*
  %5755 = load <4 x i32>, <4 x i32>* %5754, align 4
  %5756 = shufflevector <4 x i32> %5755, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5757 = add nsw <4 x i32> %5756, %5753
  %5758 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %5757, <4 x i32>* %5758, align 4
  %5759 = bitcast i32* %25 to <4 x i32>*
  %5760 = load <4 x i32>, <4 x i32>* %5759, align 4
  %5761 = bitcast i32* %79 to <4 x i32>*
  %5762 = load <4 x i32>, <4 x i32>* %5761, align 4
  %5763 = shufflevector <4 x i32> %5762, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5764 = add nsw <4 x i32> %5763, %5760
  %5765 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %5764, <4 x i32>* %5765, align 4
  %5766 = bitcast i32* %37 to <4 x i32>*
  %5767 = load <4 x i32>, <4 x i32>* %5766, align 4
  %5768 = bitcast i32* %67 to <4 x i32>*
  %5769 = load <4 x i32>, <4 x i32>* %5768, align 4
  %5770 = shufflevector <4 x i32> %5769, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5771 = add nsw <4 x i32> %5770, %5767
  %5772 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %5771, <4 x i32>* %5772, align 4
  %5773 = load i32, i32* %49, align 4
  %5774 = load i32, i32* %64, align 4
  %5775 = add nsw i32 %5774, %5773
  store i32 %5775, i32* %224, align 4
  %5776 = load i32, i32* %52, align 4
  %5777 = load i32, i32* %61, align 4
  %5778 = add nsw i32 %5777, %5776
  store i32 %5778, i32* %225, align 8
  %5779 = load i32, i32* %55, align 4
  %5780 = load i32, i32* %58, align 4
  %5781 = add nsw i32 %5780, %5779
  store i32 %5781, i32* %228, align 4
  %5782 = sub nsw i32 %5779, %5780
  store i32 %5782, i32* %230, align 16
  %5783 = sub nsw i32 %5776, %5777
  store i32 %5783, i32* %231, align 4
  %5784 = sub nsw i32 %5773, %5774
  store i32 %5784, i32* %232, align 8
  %5785 = shufflevector <4 x i32> %5767, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5786 = sub nsw <4 x i32> %5785, %5769
  %5787 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %5786, <4 x i32>* %5787, align 4
  %5788 = shufflevector <4 x i32> %5760, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5789 = sub nsw <4 x i32> %5788, %5762
  %5790 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> %5789, <4 x i32>* %5790, align 4
  %5791 = shufflevector <4 x i32> %5753, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %5792 = sub nsw <4 x i32> %5791, %5755
  %5793 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %5792, <4 x i32>* %5793, align 4
  %5794 = sub nsw i32 %5745, %5746
  br label %6145

5795:                                             ; preds = %5742
  %5796 = sext i8 %5749 to i64
  %5797 = add nuw nsw i64 %5796, 4294967295
  %5798 = and i64 %5797, 4294967295
  %5799 = shl i64 1, %5798
  %5800 = add nsw i64 %5799, -1
  %5801 = sub nsw i64 0, %5799
  %5802 = sext i32 %5747 to i64
  %5803 = icmp slt i64 %5802, %5801
  %5804 = icmp slt i64 %5800, %5802
  %5805 = select i1 %5804, i64 %5800, i64 %5802
  %5806 = select i1 %5803, i64 %5801, i64 %5805
  %5807 = trunc i64 %5806 to i32
  store i32 %5807, i32* %202, align 16
  %5808 = load i32, i32* %13, align 4
  %5809 = load i32, i32* %100, align 4
  %5810 = add nsw i32 %5809, %5808
  %5811 = sext i32 %5810 to i64
  %5812 = icmp slt i64 %5811, %5801
  %5813 = icmp slt i64 %5800, %5811
  %5814 = select i1 %5813, i64 %5800, i64 %5811
  %5815 = select i1 %5812, i64 %5801, i64 %5814
  %5816 = trunc i64 %5815 to i32
  store i32 %5816, i32* %203, align 4
  %5817 = load i32, i32* %16, align 4
  %5818 = load i32, i32* %97, align 4
  %5819 = add nsw i32 %5818, %5817
  %5820 = sext i8 %5749 to i64
  %5821 = add nuw nsw i64 %5820, 4294967295
  %5822 = and i64 %5821, 4294967295
  %5823 = shl i64 1, %5822
  %5824 = add nsw i64 %5823, -1
  %5825 = sub nsw i64 0, %5823
  %5826 = sext i32 %5819 to i64
  %5827 = icmp slt i64 %5826, %5825
  %5828 = icmp slt i64 %5824, %5826
  %5829 = select i1 %5828, i64 %5824, i64 %5826
  %5830 = select i1 %5827, i64 %5825, i64 %5829
  %5831 = trunc i64 %5830 to i32
  store i32 %5831, i32* %204, align 8
  %5832 = load i32, i32* %19, align 4
  %5833 = load i32, i32* %94, align 4
  %5834 = add nsw i32 %5833, %5832
  %5835 = sext i32 %5834 to i64
  %5836 = icmp slt i64 %5835, %5825
  %5837 = icmp slt i64 %5824, %5835
  %5838 = select i1 %5837, i64 %5824, i64 %5835
  %5839 = select i1 %5836, i64 %5825, i64 %5838
  %5840 = trunc i64 %5839 to i32
  store i32 %5840, i32* %207, align 4
  %5841 = load i32, i32* %22, align 4
  %5842 = load i32, i32* %91, align 4
  %5843 = add nsw i32 %5842, %5841
  %5844 = sext i8 %5749 to i64
  %5845 = add nuw nsw i64 %5844, 4294967295
  %5846 = and i64 %5845, 4294967295
  %5847 = shl i64 1, %5846
  %5848 = add nsw i64 %5847, -1
  %5849 = sub nsw i64 0, %5847
  %5850 = sext i32 %5843 to i64
  %5851 = icmp slt i64 %5850, %5849
  %5852 = icmp slt i64 %5848, %5850
  %5853 = select i1 %5852, i64 %5848, i64 %5850
  %5854 = select i1 %5851, i64 %5849, i64 %5853
  %5855 = trunc i64 %5854 to i32
  store i32 %5855, i32* %209, align 16
  %5856 = load i32, i32* %25, align 4
  %5857 = load i32, i32* %88, align 4
  %5858 = add nsw i32 %5857, %5856
  %5859 = sext i32 %5858 to i64
  %5860 = icmp slt i64 %5859, %5849
  %5861 = icmp slt i64 %5848, %5859
  %5862 = select i1 %5861, i64 %5848, i64 %5859
  %5863 = select i1 %5860, i64 %5849, i64 %5862
  %5864 = trunc i64 %5863 to i32
  store i32 %5864, i32* %210, align 4
  %5865 = load i32, i32* %28, align 4
  %5866 = load i32, i32* %85, align 4
  %5867 = add nsw i32 %5866, %5865
  %5868 = sext i8 %5749 to i64
  %5869 = add nuw nsw i64 %5868, 4294967295
  %5870 = and i64 %5869, 4294967295
  %5871 = shl i64 1, %5870
  %5872 = add nsw i64 %5871, -1
  %5873 = sub nsw i64 0, %5871
  %5874 = sext i32 %5867 to i64
  %5875 = icmp slt i64 %5874, %5873
  %5876 = icmp slt i64 %5872, %5874
  %5877 = select i1 %5876, i64 %5872, i64 %5874
  %5878 = select i1 %5875, i64 %5873, i64 %5877
  %5879 = trunc i64 %5878 to i32
  store i32 %5879, i32* %211, align 8
  %5880 = load i32, i32* %31, align 4
  %5881 = load i32, i32* %82, align 4
  %5882 = add nsw i32 %5881, %5880
  %5883 = sext i32 %5882 to i64
  %5884 = icmp slt i64 %5883, %5873
  %5885 = icmp slt i64 %5872, %5883
  %5886 = select i1 %5885, i64 %5872, i64 %5883
  %5887 = select i1 %5884, i64 %5873, i64 %5886
  %5888 = trunc i64 %5887 to i32
  store i32 %5888, i32* %214, align 4
  %5889 = load i32, i32* %34, align 4
  %5890 = load i32, i32* %79, align 4
  %5891 = add nsw i32 %5890, %5889
  %5892 = sext i8 %5749 to i64
  %5893 = add nuw nsw i64 %5892, 4294967295
  %5894 = and i64 %5893, 4294967295
  %5895 = shl i64 1, %5894
  %5896 = add nsw i64 %5895, -1
  %5897 = sub nsw i64 0, %5895
  %5898 = sext i32 %5891 to i64
  %5899 = icmp slt i64 %5898, %5897
  %5900 = icmp slt i64 %5896, %5898
  %5901 = select i1 %5900, i64 %5896, i64 %5898
  %5902 = select i1 %5899, i64 %5897, i64 %5901
  %5903 = trunc i64 %5902 to i32
  store i32 %5903, i32* %216, align 16
  %5904 = load i32, i32* %37, align 4
  %5905 = load i32, i32* %76, align 4
  %5906 = add nsw i32 %5905, %5904
  %5907 = sext i32 %5906 to i64
  %5908 = icmp slt i64 %5907, %5897
  %5909 = icmp slt i64 %5896, %5907
  %5910 = select i1 %5909, i64 %5896, i64 %5907
  %5911 = select i1 %5908, i64 %5897, i64 %5910
  %5912 = trunc i64 %5911 to i32
  store i32 %5912, i32* %217, align 4
  %5913 = load i32, i32* %40, align 4
  %5914 = load i32, i32* %73, align 4
  %5915 = add nsw i32 %5914, %5913
  %5916 = sext i8 %5749 to i64
  %5917 = add nuw nsw i64 %5916, 4294967295
  %5918 = and i64 %5917, 4294967295
  %5919 = shl i64 1, %5918
  %5920 = add nsw i64 %5919, -1
  %5921 = sub nsw i64 0, %5919
  %5922 = sext i32 %5915 to i64
  %5923 = icmp slt i64 %5922, %5921
  %5924 = icmp slt i64 %5920, %5922
  %5925 = select i1 %5924, i64 %5920, i64 %5922
  %5926 = select i1 %5923, i64 %5921, i64 %5925
  %5927 = trunc i64 %5926 to i32
  store i32 %5927, i32* %218, align 8
  %5928 = load i32, i32* %43, align 4
  %5929 = load i32, i32* %70, align 4
  %5930 = add nsw i32 %5929, %5928
  %5931 = sext i32 %5930 to i64
  %5932 = icmp slt i64 %5931, %5921
  %5933 = icmp slt i64 %5920, %5931
  %5934 = select i1 %5933, i64 %5920, i64 %5931
  %5935 = select i1 %5932, i64 %5921, i64 %5934
  %5936 = trunc i64 %5935 to i32
  store i32 %5936, i32* %221, align 4
  %5937 = load i32, i32* %46, align 4
  %5938 = load i32, i32* %67, align 4
  %5939 = add nsw i32 %5938, %5937
  %5940 = sext i8 %5749 to i64
  %5941 = add nuw nsw i64 %5940, 4294967295
  %5942 = and i64 %5941, 4294967295
  %5943 = shl i64 1, %5942
  %5944 = add nsw i64 %5943, -1
  %5945 = sub nsw i64 0, %5943
  %5946 = sext i32 %5939 to i64
  %5947 = icmp slt i64 %5946, %5945
  %5948 = icmp slt i64 %5944, %5946
  %5949 = select i1 %5948, i64 %5944, i64 %5946
  %5950 = select i1 %5947, i64 %5945, i64 %5949
  %5951 = trunc i64 %5950 to i32
  store i32 %5951, i32* %223, align 16
  %5952 = load i32, i32* %49, align 4
  %5953 = load i32, i32* %64, align 4
  %5954 = add nsw i32 %5953, %5952
  %5955 = sext i32 %5954 to i64
  %5956 = icmp slt i64 %5955, %5945
  %5957 = icmp slt i64 %5944, %5955
  %5958 = select i1 %5957, i64 %5944, i64 %5955
  %5959 = select i1 %5956, i64 %5945, i64 %5958
  %5960 = trunc i64 %5959 to i32
  store i32 %5960, i32* %224, align 4
  %5961 = load i32, i32* %52, align 4
  %5962 = load i32, i32* %61, align 4
  %5963 = add nsw i32 %5962, %5961
  %5964 = sext i8 %5749 to i64
  %5965 = add nuw nsw i64 %5964, 4294967295
  %5966 = and i64 %5965, 4294967295
  %5967 = shl i64 1, %5966
  %5968 = add nsw i64 %5967, -1
  %5969 = sub nsw i64 0, %5967
  %5970 = sext i32 %5963 to i64
  %5971 = icmp slt i64 %5970, %5969
  %5972 = icmp slt i64 %5968, %5970
  %5973 = select i1 %5972, i64 %5968, i64 %5970
  %5974 = select i1 %5971, i64 %5969, i64 %5973
  %5975 = trunc i64 %5974 to i32
  store i32 %5975, i32* %225, align 8
  %5976 = load i32, i32* %55, align 4
  %5977 = load i32, i32* %58, align 4
  %5978 = add nsw i32 %5977, %5976
  %5979 = sext i32 %5978 to i64
  %5980 = icmp slt i64 %5979, %5969
  %5981 = icmp slt i64 %5968, %5979
  %5982 = select i1 %5981, i64 %5968, i64 %5979
  %5983 = select i1 %5980, i64 %5969, i64 %5982
  %5984 = trunc i64 %5983 to i32
  store i32 %5984, i32* %228, align 4
  %5985 = sub nsw i32 %5976, %5977
  %5986 = sext i8 %5749 to i64
  %5987 = add nuw nsw i64 %5986, 4294967295
  %5988 = and i64 %5987, 4294967295
  %5989 = shl i64 1, %5988
  %5990 = add nsw i64 %5989, -1
  %5991 = sub nsw i64 0, %5989
  %5992 = sext i32 %5985 to i64
  %5993 = icmp slt i64 %5992, %5991
  %5994 = icmp slt i64 %5990, %5992
  %5995 = select i1 %5994, i64 %5990, i64 %5992
  %5996 = select i1 %5993, i64 %5991, i64 %5995
  %5997 = trunc i64 %5996 to i32
  store i32 %5997, i32* %230, align 16
  %5998 = sub nsw i32 %5961, %5962
  %5999 = sext i32 %5998 to i64
  %6000 = icmp slt i64 %5999, %5991
  %6001 = icmp slt i64 %5990, %5999
  %6002 = select i1 %6001, i64 %5990, i64 %5999
  %6003 = select i1 %6000, i64 %5991, i64 %6002
  %6004 = trunc i64 %6003 to i32
  store i32 %6004, i32* %231, align 4
  %6005 = sub nsw i32 %5952, %5953
  %6006 = sext i8 %5749 to i64
  %6007 = add nuw nsw i64 %6006, 4294967295
  %6008 = and i64 %6007, 4294967295
  %6009 = shl i64 1, %6008
  %6010 = add nsw i64 %6009, -1
  %6011 = sub nsw i64 0, %6009
  %6012 = sext i32 %6005 to i64
  %6013 = icmp slt i64 %6012, %6011
  %6014 = icmp slt i64 %6010, %6012
  %6015 = select i1 %6014, i64 %6010, i64 %6012
  %6016 = select i1 %6013, i64 %6011, i64 %6015
  %6017 = trunc i64 %6016 to i32
  store i32 %6017, i32* %232, align 8
  %6018 = sub nsw i32 %5937, %5938
  %6019 = sext i32 %6018 to i64
  %6020 = icmp slt i64 %6019, %6011
  %6021 = icmp slt i64 %6010, %6019
  %6022 = select i1 %6021, i64 %6010, i64 %6019
  %6023 = select i1 %6020, i64 %6011, i64 %6022
  %6024 = trunc i64 %6023 to i32
  store i32 %6024, i32* %235, align 4
  %6025 = sub nsw i32 %5928, %5929
  %6026 = sext i8 %5749 to i64
  %6027 = add nuw nsw i64 %6026, 4294967295
  %6028 = and i64 %6027, 4294967295
  %6029 = shl i64 1, %6028
  %6030 = add nsw i64 %6029, -1
  %6031 = sub nsw i64 0, %6029
  %6032 = sext i32 %6025 to i64
  %6033 = icmp slt i64 %6032, %6031
  %6034 = icmp slt i64 %6030, %6032
  %6035 = select i1 %6034, i64 %6030, i64 %6032
  %6036 = select i1 %6033, i64 %6031, i64 %6035
  %6037 = trunc i64 %6036 to i32
  store i32 %6037, i32* %237, align 16
  %6038 = sub nsw i32 %5913, %5914
  %6039 = sext i32 %6038 to i64
  %6040 = icmp slt i64 %6039, %6031
  %6041 = icmp slt i64 %6030, %6039
  %6042 = select i1 %6041, i64 %6030, i64 %6039
  %6043 = select i1 %6040, i64 %6031, i64 %6042
  %6044 = trunc i64 %6043 to i32
  store i32 %6044, i32* %238, align 4
  %6045 = sub nsw i32 %5904, %5905
  %6046 = sext i8 %5749 to i64
  %6047 = add nuw nsw i64 %6046, 4294967295
  %6048 = and i64 %6047, 4294967295
  %6049 = shl i64 1, %6048
  %6050 = add nsw i64 %6049, -1
  %6051 = sub nsw i64 0, %6049
  %6052 = sext i32 %6045 to i64
  %6053 = icmp slt i64 %6052, %6051
  %6054 = icmp slt i64 %6050, %6052
  %6055 = select i1 %6054, i64 %6050, i64 %6052
  %6056 = select i1 %6053, i64 %6051, i64 %6055
  %6057 = trunc i64 %6056 to i32
  store i32 %6057, i32* %239, align 8
  %6058 = sub nsw i32 %5889, %5890
  %6059 = sext i32 %6058 to i64
  %6060 = icmp slt i64 %6059, %6051
  %6061 = icmp slt i64 %6050, %6059
  %6062 = select i1 %6061, i64 %6050, i64 %6059
  %6063 = select i1 %6060, i64 %6051, i64 %6062
  %6064 = trunc i64 %6063 to i32
  store i32 %6064, i32* %242, align 4
  %6065 = sub nsw i32 %5880, %5881
  %6066 = sext i8 %5749 to i64
  %6067 = add nuw nsw i64 %6066, 4294967295
  %6068 = and i64 %6067, 4294967295
  %6069 = shl i64 1, %6068
  %6070 = add nsw i64 %6069, -1
  %6071 = sub nsw i64 0, %6069
  %6072 = sext i32 %6065 to i64
  %6073 = icmp slt i64 %6072, %6071
  %6074 = icmp slt i64 %6070, %6072
  %6075 = select i1 %6074, i64 %6070, i64 %6072
  %6076 = select i1 %6073, i64 %6071, i64 %6075
  %6077 = trunc i64 %6076 to i32
  store i32 %6077, i32* %244, align 16
  %6078 = sub nsw i32 %5865, %5866
  %6079 = sext i32 %6078 to i64
  %6080 = icmp slt i64 %6079, %6071
  %6081 = icmp slt i64 %6070, %6079
  %6082 = select i1 %6081, i64 %6070, i64 %6079
  %6083 = select i1 %6080, i64 %6071, i64 %6082
  %6084 = trunc i64 %6083 to i32
  store i32 %6084, i32* %245, align 4
  %6085 = sub nsw i32 %5856, %5857
  %6086 = sext i8 %5749 to i64
  %6087 = add nuw nsw i64 %6086, 4294967295
  %6088 = and i64 %6087, 4294967295
  %6089 = shl i64 1, %6088
  %6090 = add nsw i64 %6089, -1
  %6091 = sub nsw i64 0, %6089
  %6092 = sext i32 %6085 to i64
  %6093 = icmp slt i64 %6092, %6091
  %6094 = icmp slt i64 %6090, %6092
  %6095 = select i1 %6094, i64 %6090, i64 %6092
  %6096 = select i1 %6093, i64 %6091, i64 %6095
  %6097 = trunc i64 %6096 to i32
  store i32 %6097, i32* %246, align 8
  %6098 = sub nsw i32 %5841, %5842
  %6099 = sext i32 %6098 to i64
  %6100 = icmp slt i64 %6099, %6091
  %6101 = icmp slt i64 %6090, %6099
  %6102 = select i1 %6101, i64 %6090, i64 %6099
  %6103 = select i1 %6100, i64 %6091, i64 %6102
  %6104 = trunc i64 %6103 to i32
  store i32 %6104, i32* %249, align 4
  %6105 = sub nsw i32 %5832, %5833
  %6106 = sext i8 %5749 to i64
  %6107 = add nuw nsw i64 %6106, 4294967295
  %6108 = and i64 %6107, 4294967295
  %6109 = shl i64 1, %6108
  %6110 = add nsw i64 %6109, -1
  %6111 = sub nsw i64 0, %6109
  %6112 = sext i32 %6105 to i64
  %6113 = icmp slt i64 %6112, %6111
  %6114 = icmp slt i64 %6110, %6112
  %6115 = select i1 %6114, i64 %6110, i64 %6112
  %6116 = select i1 %6113, i64 %6111, i64 %6115
  %6117 = trunc i64 %6116 to i32
  store i32 %6117, i32* %251, align 16
  %6118 = sub nsw i32 %5817, %5818
  %6119 = sext i32 %6118 to i64
  %6120 = icmp slt i64 %6119, %6111
  %6121 = icmp slt i64 %6110, %6119
  %6122 = select i1 %6121, i64 %6110, i64 %6119
  %6123 = select i1 %6120, i64 %6111, i64 %6122
  %6124 = trunc i64 %6123 to i32
  store i32 %6124, i32* %252, align 4
  %6125 = sub nsw i32 %5808, %5809
  %6126 = sext i8 %5749 to i64
  %6127 = add nuw nsw i64 %6126, 4294967295
  %6128 = and i64 %6127, 4294967295
  %6129 = shl i64 1, %6128
  %6130 = add nsw i64 %6129, -1
  %6131 = sub nsw i64 0, %6129
  %6132 = sext i32 %6125 to i64
  %6133 = icmp slt i64 %6132, %6131
  %6134 = icmp slt i64 %6130, %6132
  %6135 = select i1 %6134, i64 %6130, i64 %6132
  %6136 = select i1 %6133, i64 %6131, i64 %6135
  %6137 = trunc i64 %6136 to i32
  store i32 %6137, i32* %253, align 8
  %6138 = sub nsw i32 %5745, %5746
  %6139 = sext i32 %6138 to i64
  %6140 = icmp slt i64 %6139, %6131
  %6141 = icmp slt i64 %6130, %6139
  %6142 = select i1 %6141, i64 %6130, i64 %6139
  %6143 = select i1 %6140, i64 %6131, i64 %6142
  %6144 = trunc i64 %6143 to i32
  br label %6145

6145:                                             ; preds = %5751, %5795
  %6146 = phi i32 [ %6144, %5795 ], [ %5794, %5751 ]
  store i32 %6146, i32* %256, align 4
  %6147 = bitcast i32* %106 to <4 x i32>*
  %6148 = load <4 x i32>, <4 x i32>* %6147, align 4
  %6149 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %6148, <4 x i32>* %6149, align 16
  %6150 = bitcast i32* %118 to <4 x i32>*
  %6151 = load <4 x i32>, <4 x i32>* %6150, align 4
  %6152 = bitcast i32* %341 to <4 x i32>*
  store <4 x i32> %6151, <4 x i32>* %6152, align 16
  %6153 = load i32, i32* %130, align 4
  %6154 = load i32, i32* %175, align 4
  %6155 = mul nsw i32 %6153, %2804
  %6156 = sext i32 %6155 to i64
  %6157 = mul nsw i32 %6154, %2793
  %6158 = sext i32 %6157 to i64
  %6159 = add i64 %271, %6156
  %6160 = add i64 %6159, %6158
  %6161 = ashr i64 %6160, %274
  %6162 = trunc i64 %6161 to i32
  store i32 %6162, i32* %405, align 16
  %6163 = load i32, i32* %133, align 4
  %6164 = load i32, i32* %172, align 4
  %6165 = mul nsw i32 %6163, %2804
  %6166 = sext i32 %6165 to i64
  %6167 = mul nsw i32 %6164, %2793
  %6168 = sext i32 %6167 to i64
  %6169 = add i64 %271, %6166
  %6170 = add i64 %6169, %6168
  %6171 = ashr i64 %6170, %274
  %6172 = trunc i64 %6171 to i32
  store i32 %6172, i32* %421, align 4
  %6173 = load i32, i32* %136, align 4
  %6174 = load i32, i32* %169, align 4
  %6175 = mul nsw i32 %6173, %2804
  %6176 = sext i32 %6175 to i64
  %6177 = mul nsw i32 %6174, %2793
  %6178 = sext i32 %6177 to i64
  %6179 = add i64 %271, %6176
  %6180 = add i64 %6179, %6178
  %6181 = ashr i64 %6180, %274
  %6182 = trunc i64 %6181 to i32
  store i32 %6182, i32* %437, align 8
  %6183 = load i32, i32* %139, align 4
  %6184 = load i32, i32* %166, align 4
  %6185 = mul nsw i32 %6183, %2804
  %6186 = sext i32 %6185 to i64
  %6187 = mul nsw i32 %6184, %2793
  %6188 = sext i32 %6187 to i64
  %6189 = add i64 %271, %6186
  %6190 = add i64 %6189, %6188
  %6191 = ashr i64 %6190, %274
  %6192 = trunc i64 %6191 to i32
  store i32 %6192, i32* %453, align 4
  %6193 = load i32, i32* %142, align 4
  %6194 = load i32, i32* %163, align 4
  %6195 = mul nsw i32 %6193, %2804
  %6196 = sext i32 %6195 to i64
  %6197 = mul nsw i32 %6194, %2793
  %6198 = sext i32 %6197 to i64
  %6199 = add i64 %271, %6196
  %6200 = add i64 %6199, %6198
  %6201 = ashr i64 %6200, %274
  %6202 = trunc i64 %6201 to i32
  store i32 %6202, i32* %469, align 16
  %6203 = load i32, i32* %145, align 4
  %6204 = load i32, i32* %160, align 4
  %6205 = mul nsw i32 %6203, %2804
  %6206 = sext i32 %6205 to i64
  %6207 = mul nsw i32 %6204, %2793
  %6208 = sext i32 %6207 to i64
  %6209 = add i64 %271, %6206
  %6210 = add i64 %6209, %6208
  %6211 = ashr i64 %6210, %274
  %6212 = trunc i64 %6211 to i32
  store i32 %6212, i32* %485, align 4
  %6213 = load i32, i32* %148, align 4
  %6214 = load i32, i32* %157, align 4
  %6215 = mul nsw i32 %6213, %2804
  %6216 = sext i32 %6215 to i64
  %6217 = mul nsw i32 %6214, %2793
  %6218 = sext i32 %6217 to i64
  %6219 = add i64 %271, %6216
  %6220 = add i64 %6219, %6218
  %6221 = ashr i64 %6220, %274
  %6222 = trunc i64 %6221 to i32
  store i32 %6222, i32* %501, align 8
  %6223 = load i32, i32* %151, align 4
  %6224 = load i32, i32* %154, align 4
  %6225 = mul nsw i32 %6223, %2804
  %6226 = sext i32 %6225 to i64
  %6227 = mul nsw i32 %6224, %2793
  %6228 = sext i32 %6227 to i64
  %6229 = add i64 %271, %6226
  %6230 = add i64 %6229, %6228
  %6231 = ashr i64 %6230, %274
  %6232 = trunc i64 %6231 to i32
  store i32 %6232, i32* %517, align 4
  %6233 = mul nsw i32 %6223, %2793
  %6234 = sext i32 %6233 to i64
  %6235 = add i64 %271, %6234
  %6236 = add i64 %6235, %6228
  %6237 = ashr i64 %6236, %274
  %6238 = trunc i64 %6237 to i32
  store i32 %6238, i32* %526, align 16
  %6239 = mul nsw i32 %6213, %2793
  %6240 = sext i32 %6239 to i64
  %6241 = add i64 %271, %6240
  %6242 = add i64 %6241, %6218
  %6243 = ashr i64 %6242, %274
  %6244 = trunc i64 %6243 to i32
  store i32 %6244, i32* %535, align 4
  %6245 = mul nsw i32 %6203, %2793
  %6246 = sext i32 %6245 to i64
  %6247 = add i64 %271, %6246
  %6248 = add i64 %6247, %6208
  %6249 = ashr i64 %6248, %274
  %6250 = trunc i64 %6249 to i32
  store i32 %6250, i32* %544, align 8
  %6251 = mul nsw i32 %6193, %2793
  %6252 = sext i32 %6251 to i64
  %6253 = add i64 %271, %6252
  %6254 = add i64 %6253, %6198
  %6255 = ashr i64 %6254, %274
  %6256 = trunc i64 %6255 to i32
  store i32 %6256, i32* %553, align 4
  %6257 = mul nsw i32 %6183, %2793
  %6258 = sext i32 %6257 to i64
  %6259 = add i64 %271, %6258
  %6260 = add i64 %6259, %6188
  %6261 = ashr i64 %6260, %274
  %6262 = trunc i64 %6261 to i32
  store i32 %6262, i32* %562, align 16
  %6263 = load i32, i32* %136, align 4
  %6264 = load i32, i32* %169, align 4
  %6265 = mul nsw i32 %6263, %2793
  %6266 = sext i32 %6265 to i64
  %6267 = mul nsw i32 %6264, %2793
  %6268 = sext i32 %6267 to i64
  %6269 = add i64 %271, %6266
  %6270 = add i64 %6269, %6268
  %6271 = ashr i64 %6270, %274
  %6272 = trunc i64 %6271 to i32
  store i32 %6272, i32* %571, align 4
  %6273 = load i32, i32* %133, align 4
  %6274 = load i32, i32* %172, align 4
  %6275 = mul nsw i32 %6273, %2793
  %6276 = sext i32 %6275 to i64
  %6277 = mul nsw i32 %6274, %2793
  %6278 = sext i32 %6277 to i64
  %6279 = add i64 %271, %6276
  %6280 = add i64 %6279, %6278
  %6281 = ashr i64 %6280, %274
  %6282 = trunc i64 %6281 to i32
  store i32 %6282, i32* %580, align 8
  %6283 = load i32, i32* %130, align 4
  %6284 = load i32, i32* %175, align 4
  %6285 = mul nsw i32 %6283, %2793
  %6286 = sext i32 %6285 to i64
  %6287 = mul nsw i32 %6284, %2793
  %6288 = sext i32 %6287 to i64
  %6289 = add i64 %271, %6286
  %6290 = add i64 %6289, %6288
  %6291 = ashr i64 %6290, %274
  %6292 = trunc i64 %6291 to i32
  store i32 %6292, i32* %589, align 4
  %6293 = bitcast i32* %178 to <4 x i32>*
  %6294 = load <4 x i32>, <4 x i32>* %6293, align 4
  %6295 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %6294, <4 x i32>* %6295, align 16
  %6296 = load i32, i32* %190, align 4
  store i32 %6296, i32* %634, align 16
  %6297 = load i32, i32* %193, align 4
  store i32 %6297, i32* %643, align 4
  %6298 = load i32, i32* %196, align 4
  store i32 %6298, i32* %652, align 8
  %6299 = load i32, i32* %199, align 4
  store i32 %6299, i32* %661, align 4
  %6300 = load i8, i8* %5748, align 1
  call void @av1_range_check_buf(i32 10, i32* %0, i32* nonnull %202, i32 64, i8 signext %6300) #4
  %6301 = load i32, i32* %202, align 16
  %6302 = load i32, i32* %661, align 4
  %6303 = add nsw i32 %6302, %6301
  %6304 = getelementptr inbounds i8, i8* %3, i64 11
  %6305 = load i8, i8* %6304, align 1
  %6306 = icmp slt i8 %6305, 1
  br i1 %6306, label %6320, label %6307

6307:                                             ; preds = %6145
  %6308 = sext i8 %6305 to i64
  %6309 = add nuw nsw i64 %6308, 4294967295
  %6310 = and i64 %6309, 4294967295
  %6311 = shl i64 1, %6310
  %6312 = add nsw i64 %6311, -1
  %6313 = sub nsw i64 0, %6311
  %6314 = sext i32 %6303 to i64
  %6315 = icmp slt i64 %6314, %6313
  %6316 = icmp slt i64 %6312, %6314
  %6317 = select i1 %6316, i64 %6312, i64 %6314
  %6318 = select i1 %6315, i64 %6313, i64 %6317
  %6319 = trunc i64 %6318 to i32
  br label %6320

6320:                                             ; preds = %6145, %6307
  %6321 = phi i32 [ %6319, %6307 ], [ %6303, %6145 ]
  store i32 %6321, i32* %1, align 4
  %6322 = load i32, i32* %203, align 4
  %6323 = load i32, i32* %652, align 8
  %6324 = add nsw i32 %6323, %6322
  %6325 = load i8, i8* %6304, align 1
  %6326 = icmp slt i8 %6325, 1
  br i1 %6326, label %6340, label %6327

6327:                                             ; preds = %6320
  %6328 = sext i8 %6325 to i64
  %6329 = add nuw nsw i64 %6328, 4294967295
  %6330 = and i64 %6329, 4294967295
  %6331 = shl i64 1, %6330
  %6332 = add nsw i64 %6331, -1
  %6333 = sub nsw i64 0, %6331
  %6334 = sext i32 %6324 to i64
  %6335 = icmp slt i64 %6334, %6333
  %6336 = icmp slt i64 %6332, %6334
  %6337 = select i1 %6336, i64 %6332, i64 %6334
  %6338 = select i1 %6335, i64 %6333, i64 %6337
  %6339 = trunc i64 %6338 to i32
  br label %6340

6340:                                             ; preds = %6320, %6327
  %6341 = phi i32 [ %6339, %6327 ], [ %6324, %6320 ]
  store i32 %6341, i32* %13, align 4
  %6342 = load i32, i32* %204, align 8
  %6343 = load i32, i32* %643, align 4
  %6344 = add nsw i32 %6343, %6342
  %6345 = load i8, i8* %6304, align 1
  %6346 = icmp slt i8 %6345, 1
  br i1 %6346, label %6360, label %6347

6347:                                             ; preds = %6340
  %6348 = sext i8 %6345 to i64
  %6349 = add nuw nsw i64 %6348, 4294967295
  %6350 = and i64 %6349, 4294967295
  %6351 = shl i64 1, %6350
  %6352 = add nsw i64 %6351, -1
  %6353 = sub nsw i64 0, %6351
  %6354 = sext i32 %6344 to i64
  %6355 = icmp slt i64 %6354, %6353
  %6356 = icmp slt i64 %6352, %6354
  %6357 = select i1 %6356, i64 %6352, i64 %6354
  %6358 = select i1 %6355, i64 %6353, i64 %6357
  %6359 = trunc i64 %6358 to i32
  br label %6360

6360:                                             ; preds = %6340, %6347
  %6361 = phi i32 [ %6359, %6347 ], [ %6344, %6340 ]
  store i32 %6361, i32* %16, align 4
  %6362 = load i32, i32* %207, align 4
  %6363 = load i32, i32* %634, align 16
  %6364 = add nsw i32 %6363, %6362
  %6365 = load i8, i8* %6304, align 1
  %6366 = icmp slt i8 %6365, 1
  br i1 %6366, label %6380, label %6367

6367:                                             ; preds = %6360
  %6368 = sext i8 %6365 to i64
  %6369 = add nuw nsw i64 %6368, 4294967295
  %6370 = and i64 %6369, 4294967295
  %6371 = shl i64 1, %6370
  %6372 = add nsw i64 %6371, -1
  %6373 = sub nsw i64 0, %6371
  %6374 = sext i32 %6364 to i64
  %6375 = icmp slt i64 %6374, %6373
  %6376 = icmp slt i64 %6372, %6374
  %6377 = select i1 %6376, i64 %6372, i64 %6374
  %6378 = select i1 %6375, i64 %6373, i64 %6377
  %6379 = trunc i64 %6378 to i32
  br label %6380

6380:                                             ; preds = %6360, %6367
  %6381 = phi i32 [ %6379, %6367 ], [ %6364, %6360 ]
  store i32 %6381, i32* %19, align 4
  %6382 = load i32, i32* %209, align 16
  %6383 = load i32, i32* %625, align 4
  %6384 = add nsw i32 %6383, %6382
  %6385 = load i8, i8* %6304, align 1
  %6386 = icmp slt i8 %6385, 1
  br i1 %6386, label %6400, label %6387

6387:                                             ; preds = %6380
  %6388 = sext i8 %6385 to i64
  %6389 = add nuw nsw i64 %6388, 4294967295
  %6390 = and i64 %6389, 4294967295
  %6391 = shl i64 1, %6390
  %6392 = add nsw i64 %6391, -1
  %6393 = sub nsw i64 0, %6391
  %6394 = sext i32 %6384 to i64
  %6395 = icmp slt i64 %6394, %6393
  %6396 = icmp slt i64 %6392, %6394
  %6397 = select i1 %6396, i64 %6392, i64 %6394
  %6398 = select i1 %6395, i64 %6393, i64 %6397
  %6399 = trunc i64 %6398 to i32
  br label %6400

6400:                                             ; preds = %6380, %6387
  %6401 = phi i32 [ %6399, %6387 ], [ %6384, %6380 ]
  store i32 %6401, i32* %22, align 4
  %6402 = load i32, i32* %210, align 4
  %6403 = load i32, i32* %616, align 8
  %6404 = add nsw i32 %6403, %6402
  %6405 = load i8, i8* %6304, align 1
  %6406 = icmp slt i8 %6405, 1
  br i1 %6406, label %6420, label %6407

6407:                                             ; preds = %6400
  %6408 = sext i8 %6405 to i64
  %6409 = add nuw nsw i64 %6408, 4294967295
  %6410 = and i64 %6409, 4294967295
  %6411 = shl i64 1, %6410
  %6412 = add nsw i64 %6411, -1
  %6413 = sub nsw i64 0, %6411
  %6414 = sext i32 %6404 to i64
  %6415 = icmp slt i64 %6414, %6413
  %6416 = icmp slt i64 %6412, %6414
  %6417 = select i1 %6416, i64 %6412, i64 %6414
  %6418 = select i1 %6415, i64 %6413, i64 %6417
  %6419 = trunc i64 %6418 to i32
  br label %6420

6420:                                             ; preds = %6400, %6407
  %6421 = phi i32 [ %6419, %6407 ], [ %6404, %6400 ]
  store i32 %6421, i32* %25, align 4
  %6422 = load i32, i32* %211, align 8
  %6423 = load i32, i32* %607, align 4
  %6424 = add nsw i32 %6423, %6422
  %6425 = load i8, i8* %6304, align 1
  %6426 = icmp slt i8 %6425, 1
  br i1 %6426, label %6440, label %6427

6427:                                             ; preds = %6420
  %6428 = sext i8 %6425 to i64
  %6429 = add nuw nsw i64 %6428, 4294967295
  %6430 = and i64 %6429, 4294967295
  %6431 = shl i64 1, %6430
  %6432 = add nsw i64 %6431, -1
  %6433 = sub nsw i64 0, %6431
  %6434 = sext i32 %6424 to i64
  %6435 = icmp slt i64 %6434, %6433
  %6436 = icmp slt i64 %6432, %6434
  %6437 = select i1 %6436, i64 %6432, i64 %6434
  %6438 = select i1 %6435, i64 %6433, i64 %6437
  %6439 = trunc i64 %6438 to i32
  br label %6440

6440:                                             ; preds = %6420, %6427
  %6441 = phi i32 [ %6439, %6427 ], [ %6424, %6420 ]
  store i32 %6441, i32* %28, align 4
  %6442 = load i32, i32* %214, align 4
  %6443 = load i32, i32* %598, align 16
  %6444 = add nsw i32 %6443, %6442
  %6445 = load i8, i8* %6304, align 1
  %6446 = icmp slt i8 %6445, 1
  br i1 %6446, label %6460, label %6447

6447:                                             ; preds = %6440
  %6448 = sext i8 %6445 to i64
  %6449 = add nuw nsw i64 %6448, 4294967295
  %6450 = and i64 %6449, 4294967295
  %6451 = shl i64 1, %6450
  %6452 = add nsw i64 %6451, -1
  %6453 = sub nsw i64 0, %6451
  %6454 = sext i32 %6444 to i64
  %6455 = icmp slt i64 %6454, %6453
  %6456 = icmp slt i64 %6452, %6454
  %6457 = select i1 %6456, i64 %6452, i64 %6454
  %6458 = select i1 %6455, i64 %6453, i64 %6457
  %6459 = trunc i64 %6458 to i32
  br label %6460

6460:                                             ; preds = %6440, %6447
  %6461 = phi i32 [ %6459, %6447 ], [ %6444, %6440 ]
  store i32 %6461, i32* %31, align 4
  %6462 = load i32, i32* %216, align 16
  %6463 = load i32, i32* %589, align 4
  %6464 = add nsw i32 %6463, %6462
  %6465 = load i8, i8* %6304, align 1
  %6466 = icmp slt i8 %6465, 1
  br i1 %6466, label %6480, label %6467

6467:                                             ; preds = %6460
  %6468 = sext i8 %6465 to i64
  %6469 = add nuw nsw i64 %6468, 4294967295
  %6470 = and i64 %6469, 4294967295
  %6471 = shl i64 1, %6470
  %6472 = add nsw i64 %6471, -1
  %6473 = sub nsw i64 0, %6471
  %6474 = sext i32 %6464 to i64
  %6475 = icmp slt i64 %6474, %6473
  %6476 = icmp slt i64 %6472, %6474
  %6477 = select i1 %6476, i64 %6472, i64 %6474
  %6478 = select i1 %6475, i64 %6473, i64 %6477
  %6479 = trunc i64 %6478 to i32
  br label %6480

6480:                                             ; preds = %6460, %6467
  %6481 = phi i32 [ %6479, %6467 ], [ %6464, %6460 ]
  store i32 %6481, i32* %34, align 4
  %6482 = load i32, i32* %217, align 4
  %6483 = load i32, i32* %580, align 8
  %6484 = add nsw i32 %6483, %6482
  %6485 = load i8, i8* %6304, align 1
  %6486 = icmp slt i8 %6485, 1
  br i1 %6486, label %6500, label %6487

6487:                                             ; preds = %6480
  %6488 = sext i8 %6485 to i64
  %6489 = add nuw nsw i64 %6488, 4294967295
  %6490 = and i64 %6489, 4294967295
  %6491 = shl i64 1, %6490
  %6492 = add nsw i64 %6491, -1
  %6493 = sub nsw i64 0, %6491
  %6494 = sext i32 %6484 to i64
  %6495 = icmp slt i64 %6494, %6493
  %6496 = icmp slt i64 %6492, %6494
  %6497 = select i1 %6496, i64 %6492, i64 %6494
  %6498 = select i1 %6495, i64 %6493, i64 %6497
  %6499 = trunc i64 %6498 to i32
  br label %6500

6500:                                             ; preds = %6480, %6487
  %6501 = phi i32 [ %6499, %6487 ], [ %6484, %6480 ]
  store i32 %6501, i32* %37, align 4
  %6502 = load i32, i32* %218, align 8
  %6503 = load i32, i32* %571, align 4
  %6504 = add nsw i32 %6503, %6502
  %6505 = load i8, i8* %6304, align 1
  %6506 = icmp slt i8 %6505, 1
  br i1 %6506, label %6520, label %6507

6507:                                             ; preds = %6500
  %6508 = sext i8 %6505 to i64
  %6509 = add nuw nsw i64 %6508, 4294967295
  %6510 = and i64 %6509, 4294967295
  %6511 = shl i64 1, %6510
  %6512 = add nsw i64 %6511, -1
  %6513 = sub nsw i64 0, %6511
  %6514 = sext i32 %6504 to i64
  %6515 = icmp slt i64 %6514, %6513
  %6516 = icmp slt i64 %6512, %6514
  %6517 = select i1 %6516, i64 %6512, i64 %6514
  %6518 = select i1 %6515, i64 %6513, i64 %6517
  %6519 = trunc i64 %6518 to i32
  br label %6520

6520:                                             ; preds = %6500, %6507
  %6521 = phi i32 [ %6519, %6507 ], [ %6504, %6500 ]
  store i32 %6521, i32* %40, align 4
  %6522 = load i32, i32* %221, align 4
  %6523 = load i32, i32* %562, align 16
  %6524 = add nsw i32 %6523, %6522
  %6525 = load i8, i8* %6304, align 1
  %6526 = icmp slt i8 %6525, 1
  br i1 %6526, label %6540, label %6527

6527:                                             ; preds = %6520
  %6528 = sext i8 %6525 to i64
  %6529 = add nuw nsw i64 %6528, 4294967295
  %6530 = and i64 %6529, 4294967295
  %6531 = shl i64 1, %6530
  %6532 = add nsw i64 %6531, -1
  %6533 = sub nsw i64 0, %6531
  %6534 = sext i32 %6524 to i64
  %6535 = icmp slt i64 %6534, %6533
  %6536 = icmp slt i64 %6532, %6534
  %6537 = select i1 %6536, i64 %6532, i64 %6534
  %6538 = select i1 %6535, i64 %6533, i64 %6537
  %6539 = trunc i64 %6538 to i32
  br label %6540

6540:                                             ; preds = %6520, %6527
  %6541 = phi i32 [ %6539, %6527 ], [ %6524, %6520 ]
  store i32 %6541, i32* %43, align 4
  %6542 = load i32, i32* %223, align 16
  %6543 = load i32, i32* %553, align 4
  %6544 = add nsw i32 %6543, %6542
  %6545 = load i8, i8* %6304, align 1
  %6546 = icmp slt i8 %6545, 1
  br i1 %6546, label %6560, label %6547

6547:                                             ; preds = %6540
  %6548 = sext i8 %6545 to i64
  %6549 = add nuw nsw i64 %6548, 4294967295
  %6550 = and i64 %6549, 4294967295
  %6551 = shl i64 1, %6550
  %6552 = add nsw i64 %6551, -1
  %6553 = sub nsw i64 0, %6551
  %6554 = sext i32 %6544 to i64
  %6555 = icmp slt i64 %6554, %6553
  %6556 = icmp slt i64 %6552, %6554
  %6557 = select i1 %6556, i64 %6552, i64 %6554
  %6558 = select i1 %6555, i64 %6553, i64 %6557
  %6559 = trunc i64 %6558 to i32
  br label %6560

6560:                                             ; preds = %6540, %6547
  %6561 = phi i32 [ %6559, %6547 ], [ %6544, %6540 ]
  store i32 %6561, i32* %46, align 4
  %6562 = load i32, i32* %224, align 4
  %6563 = load i32, i32* %544, align 8
  %6564 = add nsw i32 %6563, %6562
  %6565 = load i8, i8* %6304, align 1
  %6566 = icmp slt i8 %6565, 1
  br i1 %6566, label %6580, label %6567

6567:                                             ; preds = %6560
  %6568 = sext i8 %6565 to i64
  %6569 = add nuw nsw i64 %6568, 4294967295
  %6570 = and i64 %6569, 4294967295
  %6571 = shl i64 1, %6570
  %6572 = add nsw i64 %6571, -1
  %6573 = sub nsw i64 0, %6571
  %6574 = sext i32 %6564 to i64
  %6575 = icmp slt i64 %6574, %6573
  %6576 = icmp slt i64 %6572, %6574
  %6577 = select i1 %6576, i64 %6572, i64 %6574
  %6578 = select i1 %6575, i64 %6573, i64 %6577
  %6579 = trunc i64 %6578 to i32
  br label %6580

6580:                                             ; preds = %6560, %6567
  %6581 = phi i32 [ %6579, %6567 ], [ %6564, %6560 ]
  store i32 %6581, i32* %49, align 4
  %6582 = load i32, i32* %225, align 8
  %6583 = load i32, i32* %535, align 4
  %6584 = add nsw i32 %6583, %6582
  %6585 = load i8, i8* %6304, align 1
  %6586 = icmp slt i8 %6585, 1
  br i1 %6586, label %6600, label %6587

6587:                                             ; preds = %6580
  %6588 = sext i8 %6585 to i64
  %6589 = add nuw nsw i64 %6588, 4294967295
  %6590 = and i64 %6589, 4294967295
  %6591 = shl i64 1, %6590
  %6592 = add nsw i64 %6591, -1
  %6593 = sub nsw i64 0, %6591
  %6594 = sext i32 %6584 to i64
  %6595 = icmp slt i64 %6594, %6593
  %6596 = icmp slt i64 %6592, %6594
  %6597 = select i1 %6596, i64 %6592, i64 %6594
  %6598 = select i1 %6595, i64 %6593, i64 %6597
  %6599 = trunc i64 %6598 to i32
  br label %6600

6600:                                             ; preds = %6580, %6587
  %6601 = phi i32 [ %6599, %6587 ], [ %6584, %6580 ]
  store i32 %6601, i32* %52, align 4
  %6602 = load i32, i32* %228, align 4
  %6603 = load i32, i32* %526, align 16
  %6604 = add nsw i32 %6603, %6602
  %6605 = load i8, i8* %6304, align 1
  %6606 = icmp slt i8 %6605, 1
  br i1 %6606, label %6620, label %6607

6607:                                             ; preds = %6600
  %6608 = sext i8 %6605 to i64
  %6609 = add nuw nsw i64 %6608, 4294967295
  %6610 = and i64 %6609, 4294967295
  %6611 = shl i64 1, %6610
  %6612 = add nsw i64 %6611, -1
  %6613 = sub nsw i64 0, %6611
  %6614 = sext i32 %6604 to i64
  %6615 = icmp slt i64 %6614, %6613
  %6616 = icmp slt i64 %6612, %6614
  %6617 = select i1 %6616, i64 %6612, i64 %6614
  %6618 = select i1 %6615, i64 %6613, i64 %6617
  %6619 = trunc i64 %6618 to i32
  br label %6620

6620:                                             ; preds = %6600, %6607
  %6621 = phi i32 [ %6619, %6607 ], [ %6604, %6600 ]
  store i32 %6621, i32* %55, align 4
  %6622 = load i32, i32* %230, align 16
  %6623 = load i32, i32* %517, align 4
  %6624 = add nsw i32 %6623, %6622
  %6625 = load i8, i8* %6304, align 1
  %6626 = icmp slt i8 %6625, 1
  br i1 %6626, label %6640, label %6627

6627:                                             ; preds = %6620
  %6628 = sext i8 %6625 to i64
  %6629 = add nuw nsw i64 %6628, 4294967295
  %6630 = and i64 %6629, 4294967295
  %6631 = shl i64 1, %6630
  %6632 = add nsw i64 %6631, -1
  %6633 = sub nsw i64 0, %6631
  %6634 = sext i32 %6624 to i64
  %6635 = icmp slt i64 %6634, %6633
  %6636 = icmp slt i64 %6632, %6634
  %6637 = select i1 %6636, i64 %6632, i64 %6634
  %6638 = select i1 %6635, i64 %6633, i64 %6637
  %6639 = trunc i64 %6638 to i32
  br label %6640

6640:                                             ; preds = %6620, %6627
  %6641 = phi i32 [ %6639, %6627 ], [ %6624, %6620 ]
  store i32 %6641, i32* %58, align 4
  %6642 = load i32, i32* %231, align 4
  %6643 = load i32, i32* %501, align 8
  %6644 = add nsw i32 %6643, %6642
  %6645 = load i8, i8* %6304, align 1
  %6646 = icmp slt i8 %6645, 1
  br i1 %6646, label %6660, label %6647

6647:                                             ; preds = %6640
  %6648 = sext i8 %6645 to i64
  %6649 = add nuw nsw i64 %6648, 4294967295
  %6650 = and i64 %6649, 4294967295
  %6651 = shl i64 1, %6650
  %6652 = add nsw i64 %6651, -1
  %6653 = sub nsw i64 0, %6651
  %6654 = sext i32 %6644 to i64
  %6655 = icmp slt i64 %6654, %6653
  %6656 = icmp slt i64 %6652, %6654
  %6657 = select i1 %6656, i64 %6652, i64 %6654
  %6658 = select i1 %6655, i64 %6653, i64 %6657
  %6659 = trunc i64 %6658 to i32
  br label %6660

6660:                                             ; preds = %6640, %6647
  %6661 = phi i32 [ %6659, %6647 ], [ %6644, %6640 ]
  store i32 %6661, i32* %61, align 4
  %6662 = load i32, i32* %232, align 8
  %6663 = load i32, i32* %485, align 4
  %6664 = add nsw i32 %6663, %6662
  %6665 = load i8, i8* %6304, align 1
  %6666 = icmp slt i8 %6665, 1
  br i1 %6666, label %6680, label %6667

6667:                                             ; preds = %6660
  %6668 = sext i8 %6665 to i64
  %6669 = add nuw nsw i64 %6668, 4294967295
  %6670 = and i64 %6669, 4294967295
  %6671 = shl i64 1, %6670
  %6672 = add nsw i64 %6671, -1
  %6673 = sub nsw i64 0, %6671
  %6674 = sext i32 %6664 to i64
  %6675 = icmp slt i64 %6674, %6673
  %6676 = icmp slt i64 %6672, %6674
  %6677 = select i1 %6676, i64 %6672, i64 %6674
  %6678 = select i1 %6675, i64 %6673, i64 %6677
  %6679 = trunc i64 %6678 to i32
  br label %6680

6680:                                             ; preds = %6660, %6667
  %6681 = phi i32 [ %6679, %6667 ], [ %6664, %6660 ]
  store i32 %6681, i32* %64, align 4
  %6682 = load i32, i32* %235, align 4
  %6683 = load i32, i32* %469, align 16
  %6684 = add nsw i32 %6683, %6682
  %6685 = load i8, i8* %6304, align 1
  %6686 = icmp slt i8 %6685, 1
  br i1 %6686, label %6700, label %6687

6687:                                             ; preds = %6680
  %6688 = sext i8 %6685 to i64
  %6689 = add nuw nsw i64 %6688, 4294967295
  %6690 = and i64 %6689, 4294967295
  %6691 = shl i64 1, %6690
  %6692 = add nsw i64 %6691, -1
  %6693 = sub nsw i64 0, %6691
  %6694 = sext i32 %6684 to i64
  %6695 = icmp slt i64 %6694, %6693
  %6696 = icmp slt i64 %6692, %6694
  %6697 = select i1 %6696, i64 %6692, i64 %6694
  %6698 = select i1 %6695, i64 %6693, i64 %6697
  %6699 = trunc i64 %6698 to i32
  br label %6700

6700:                                             ; preds = %6680, %6687
  %6701 = phi i32 [ %6699, %6687 ], [ %6684, %6680 ]
  store i32 %6701, i32* %67, align 4
  %6702 = load i32, i32* %237, align 16
  %6703 = load i32, i32* %453, align 4
  %6704 = add nsw i32 %6703, %6702
  %6705 = load i8, i8* %6304, align 1
  %6706 = icmp slt i8 %6705, 1
  br i1 %6706, label %6720, label %6707

6707:                                             ; preds = %6700
  %6708 = sext i8 %6705 to i64
  %6709 = add nuw nsw i64 %6708, 4294967295
  %6710 = and i64 %6709, 4294967295
  %6711 = shl i64 1, %6710
  %6712 = add nsw i64 %6711, -1
  %6713 = sub nsw i64 0, %6711
  %6714 = sext i32 %6704 to i64
  %6715 = icmp slt i64 %6714, %6713
  %6716 = icmp slt i64 %6712, %6714
  %6717 = select i1 %6716, i64 %6712, i64 %6714
  %6718 = select i1 %6715, i64 %6713, i64 %6717
  %6719 = trunc i64 %6718 to i32
  br label %6720

6720:                                             ; preds = %6700, %6707
  %6721 = phi i32 [ %6719, %6707 ], [ %6704, %6700 ]
  store i32 %6721, i32* %70, align 4
  %6722 = load i32, i32* %238, align 4
  %6723 = load i32, i32* %437, align 8
  %6724 = add nsw i32 %6723, %6722
  %6725 = load i8, i8* %6304, align 1
  %6726 = icmp slt i8 %6725, 1
  br i1 %6726, label %6740, label %6727

6727:                                             ; preds = %6720
  %6728 = sext i8 %6725 to i64
  %6729 = add nuw nsw i64 %6728, 4294967295
  %6730 = and i64 %6729, 4294967295
  %6731 = shl i64 1, %6730
  %6732 = add nsw i64 %6731, -1
  %6733 = sub nsw i64 0, %6731
  %6734 = sext i32 %6724 to i64
  %6735 = icmp slt i64 %6734, %6733
  %6736 = icmp slt i64 %6732, %6734
  %6737 = select i1 %6736, i64 %6732, i64 %6734
  %6738 = select i1 %6735, i64 %6733, i64 %6737
  %6739 = trunc i64 %6738 to i32
  br label %6740

6740:                                             ; preds = %6720, %6727
  %6741 = phi i32 [ %6739, %6727 ], [ %6724, %6720 ]
  store i32 %6741, i32* %73, align 4
  %6742 = load i32, i32* %239, align 8
  %6743 = load i32, i32* %421, align 4
  %6744 = add nsw i32 %6743, %6742
  %6745 = load i8, i8* %6304, align 1
  %6746 = icmp slt i8 %6745, 1
  br i1 %6746, label %6760, label %6747

6747:                                             ; preds = %6740
  %6748 = sext i8 %6745 to i64
  %6749 = add nuw nsw i64 %6748, 4294967295
  %6750 = and i64 %6749, 4294967295
  %6751 = shl i64 1, %6750
  %6752 = add nsw i64 %6751, -1
  %6753 = sub nsw i64 0, %6751
  %6754 = sext i32 %6744 to i64
  %6755 = icmp slt i64 %6754, %6753
  %6756 = icmp slt i64 %6752, %6754
  %6757 = select i1 %6756, i64 %6752, i64 %6754
  %6758 = select i1 %6755, i64 %6753, i64 %6757
  %6759 = trunc i64 %6758 to i32
  br label %6760

6760:                                             ; preds = %6740, %6747
  %6761 = phi i32 [ %6759, %6747 ], [ %6744, %6740 ]
  store i32 %6761, i32* %76, align 4
  %6762 = load i32, i32* %242, align 4
  %6763 = load i32, i32* %405, align 16
  %6764 = add nsw i32 %6763, %6762
  %6765 = load i8, i8* %6304, align 1
  %6766 = icmp slt i8 %6765, 1
  br i1 %6766, label %6780, label %6767

6767:                                             ; preds = %6760
  %6768 = sext i8 %6765 to i64
  %6769 = add nuw nsw i64 %6768, 4294967295
  %6770 = and i64 %6769, 4294967295
  %6771 = shl i64 1, %6770
  %6772 = add nsw i64 %6771, -1
  %6773 = sub nsw i64 0, %6771
  %6774 = sext i32 %6764 to i64
  %6775 = icmp slt i64 %6774, %6773
  %6776 = icmp slt i64 %6772, %6774
  %6777 = select i1 %6776, i64 %6772, i64 %6774
  %6778 = select i1 %6775, i64 %6773, i64 %6777
  %6779 = trunc i64 %6778 to i32
  br label %6780

6780:                                             ; preds = %6760, %6767
  %6781 = phi i32 [ %6779, %6767 ], [ %6764, %6760 ]
  store i32 %6781, i32* %79, align 4
  %6782 = load i32, i32* %244, align 16
  %6783 = load i32, i32* %389, align 4
  %6784 = add nsw i32 %6783, %6782
  %6785 = load i8, i8* %6304, align 1
  %6786 = icmp slt i8 %6785, 1
  br i1 %6786, label %6800, label %6787

6787:                                             ; preds = %6780
  %6788 = sext i8 %6785 to i64
  %6789 = add nuw nsw i64 %6788, 4294967295
  %6790 = and i64 %6789, 4294967295
  %6791 = shl i64 1, %6790
  %6792 = add nsw i64 %6791, -1
  %6793 = sub nsw i64 0, %6791
  %6794 = sext i32 %6784 to i64
  %6795 = icmp slt i64 %6794, %6793
  %6796 = icmp slt i64 %6792, %6794
  %6797 = select i1 %6796, i64 %6792, i64 %6794
  %6798 = select i1 %6795, i64 %6793, i64 %6797
  %6799 = trunc i64 %6798 to i32
  br label %6800

6800:                                             ; preds = %6780, %6787
  %6801 = phi i32 [ %6799, %6787 ], [ %6784, %6780 ]
  store i32 %6801, i32* %82, align 4
  %6802 = load i32, i32* %245, align 4
  %6803 = load i32, i32* %373, align 8
  %6804 = add nsw i32 %6803, %6802
  %6805 = load i8, i8* %6304, align 1
  %6806 = icmp slt i8 %6805, 1
  br i1 %6806, label %6820, label %6807

6807:                                             ; preds = %6800
  %6808 = sext i8 %6805 to i64
  %6809 = add nuw nsw i64 %6808, 4294967295
  %6810 = and i64 %6809, 4294967295
  %6811 = shl i64 1, %6810
  %6812 = add nsw i64 %6811, -1
  %6813 = sub nsw i64 0, %6811
  %6814 = sext i32 %6804 to i64
  %6815 = icmp slt i64 %6814, %6813
  %6816 = icmp slt i64 %6812, %6814
  %6817 = select i1 %6816, i64 %6812, i64 %6814
  %6818 = select i1 %6815, i64 %6813, i64 %6817
  %6819 = trunc i64 %6818 to i32
  br label %6820

6820:                                             ; preds = %6800, %6807
  %6821 = phi i32 [ %6819, %6807 ], [ %6804, %6800 ]
  store i32 %6821, i32* %85, align 4
  %6822 = load i32, i32* %246, align 8
  %6823 = load i32, i32* %357, align 4
  %6824 = add nsw i32 %6823, %6822
  %6825 = load i8, i8* %6304, align 1
  %6826 = icmp slt i8 %6825, 1
  br i1 %6826, label %6840, label %6827

6827:                                             ; preds = %6820
  %6828 = sext i8 %6825 to i64
  %6829 = add nuw nsw i64 %6828, 4294967295
  %6830 = and i64 %6829, 4294967295
  %6831 = shl i64 1, %6830
  %6832 = add nsw i64 %6831, -1
  %6833 = sub nsw i64 0, %6831
  %6834 = sext i32 %6824 to i64
  %6835 = icmp slt i64 %6834, %6833
  %6836 = icmp slt i64 %6832, %6834
  %6837 = select i1 %6836, i64 %6832, i64 %6834
  %6838 = select i1 %6835, i64 %6833, i64 %6837
  %6839 = trunc i64 %6838 to i32
  br label %6840

6840:                                             ; preds = %6820, %6827
  %6841 = phi i32 [ %6839, %6827 ], [ %6824, %6820 ]
  store i32 %6841, i32* %88, align 4
  %6842 = load i32, i32* %249, align 4
  %6843 = load i32, i32* %341, align 16
  %6844 = add nsw i32 %6843, %6842
  %6845 = load i8, i8* %6304, align 1
  %6846 = icmp slt i8 %6845, 1
  br i1 %6846, label %6860, label %6847

6847:                                             ; preds = %6840
  %6848 = sext i8 %6845 to i64
  %6849 = add nuw nsw i64 %6848, 4294967295
  %6850 = and i64 %6849, 4294967295
  %6851 = shl i64 1, %6850
  %6852 = add nsw i64 %6851, -1
  %6853 = sub nsw i64 0, %6851
  %6854 = sext i32 %6844 to i64
  %6855 = icmp slt i64 %6854, %6853
  %6856 = icmp slt i64 %6852, %6854
  %6857 = select i1 %6856, i64 %6852, i64 %6854
  %6858 = select i1 %6855, i64 %6853, i64 %6857
  %6859 = trunc i64 %6858 to i32
  br label %6860

6860:                                             ; preds = %6840, %6847
  %6861 = phi i32 [ %6859, %6847 ], [ %6844, %6840 ]
  store i32 %6861, i32* %91, align 4
  %6862 = load i32, i32* %251, align 16
  %6863 = load i32, i32* %325, align 4
  %6864 = add nsw i32 %6863, %6862
  %6865 = load i8, i8* %6304, align 1
  %6866 = icmp slt i8 %6865, 1
  br i1 %6866, label %6880, label %6867

6867:                                             ; preds = %6860
  %6868 = sext i8 %6865 to i64
  %6869 = add nuw nsw i64 %6868, 4294967295
  %6870 = and i64 %6869, 4294967295
  %6871 = shl i64 1, %6870
  %6872 = add nsw i64 %6871, -1
  %6873 = sub nsw i64 0, %6871
  %6874 = sext i32 %6864 to i64
  %6875 = icmp slt i64 %6874, %6873
  %6876 = icmp slt i64 %6872, %6874
  %6877 = select i1 %6876, i64 %6872, i64 %6874
  %6878 = select i1 %6875, i64 %6873, i64 %6877
  %6879 = trunc i64 %6878 to i32
  br label %6880

6880:                                             ; preds = %6860, %6867
  %6881 = phi i32 [ %6879, %6867 ], [ %6864, %6860 ]
  store i32 %6881, i32* %94, align 4
  %6882 = load i32, i32* %252, align 4
  %6883 = load i32, i32* %309, align 8
  %6884 = add nsw i32 %6883, %6882
  %6885 = load i8, i8* %6304, align 1
  %6886 = icmp slt i8 %6885, 1
  br i1 %6886, label %6900, label %6887

6887:                                             ; preds = %6880
  %6888 = sext i8 %6885 to i64
  %6889 = add nuw nsw i64 %6888, 4294967295
  %6890 = and i64 %6889, 4294967295
  %6891 = shl i64 1, %6890
  %6892 = add nsw i64 %6891, -1
  %6893 = sub nsw i64 0, %6891
  %6894 = sext i32 %6884 to i64
  %6895 = icmp slt i64 %6894, %6893
  %6896 = icmp slt i64 %6892, %6894
  %6897 = select i1 %6896, i64 %6892, i64 %6894
  %6898 = select i1 %6895, i64 %6893, i64 %6897
  %6899 = trunc i64 %6898 to i32
  br label %6900

6900:                                             ; preds = %6880, %6887
  %6901 = phi i32 [ %6899, %6887 ], [ %6884, %6880 ]
  store i32 %6901, i32* %97, align 4
  %6902 = load i32, i32* %253, align 8
  %6903 = load i32, i32* %293, align 4
  %6904 = add nsw i32 %6903, %6902
  %6905 = load i8, i8* %6304, align 1
  %6906 = icmp slt i8 %6905, 1
  br i1 %6906, label %6920, label %6907

6907:                                             ; preds = %6900
  %6908 = sext i8 %6905 to i64
  %6909 = add nuw nsw i64 %6908, 4294967295
  %6910 = and i64 %6909, 4294967295
  %6911 = shl i64 1, %6910
  %6912 = add nsw i64 %6911, -1
  %6913 = sub nsw i64 0, %6911
  %6914 = sext i32 %6904 to i64
  %6915 = icmp slt i64 %6914, %6913
  %6916 = icmp slt i64 %6912, %6914
  %6917 = select i1 %6916, i64 %6912, i64 %6914
  %6918 = select i1 %6915, i64 %6913, i64 %6917
  %6919 = trunc i64 %6918 to i32
  br label %6920

6920:                                             ; preds = %6900, %6907
  %6921 = phi i32 [ %6919, %6907 ], [ %6904, %6900 ]
  store i32 %6921, i32* %100, align 4
  %6922 = load i32, i32* %256, align 4
  %6923 = load i32, i32* %277, align 16
  %6924 = add nsw i32 %6923, %6922
  %6925 = load i8, i8* %6304, align 1
  %6926 = icmp slt i8 %6925, 1
  br i1 %6926, label %6940, label %6927

6927:                                             ; preds = %6920
  %6928 = sext i8 %6925 to i64
  %6929 = add nuw nsw i64 %6928, 4294967295
  %6930 = and i64 %6929, 4294967295
  %6931 = shl i64 1, %6930
  %6932 = add nsw i64 %6931, -1
  %6933 = sub nsw i64 0, %6931
  %6934 = sext i32 %6924 to i64
  %6935 = icmp slt i64 %6934, %6933
  %6936 = icmp slt i64 %6932, %6934
  %6937 = select i1 %6936, i64 %6932, i64 %6934
  %6938 = select i1 %6935, i64 %6933, i64 %6937
  %6939 = trunc i64 %6938 to i32
  br label %6940

6940:                                             ; preds = %6920, %6927
  %6941 = phi i32 [ %6939, %6927 ], [ %6924, %6920 ]
  store i32 %6941, i32* %103, align 4
  %6942 = sub nsw i32 %6922, %6923
  %6943 = load i8, i8* %6304, align 1
  %6944 = icmp slt i8 %6943, 1
  br i1 %6944, label %6958, label %6945

6945:                                             ; preds = %6940
  %6946 = sext i8 %6943 to i64
  %6947 = add nuw nsw i64 %6946, 4294967295
  %6948 = and i64 %6947, 4294967295
  %6949 = shl i64 1, %6948
  %6950 = add nsw i64 %6949, -1
  %6951 = sub nsw i64 0, %6949
  %6952 = sext i32 %6942 to i64
  %6953 = icmp slt i64 %6952, %6951
  %6954 = icmp slt i64 %6950, %6952
  %6955 = select i1 %6954, i64 %6950, i64 %6952
  %6956 = select i1 %6953, i64 %6951, i64 %6955
  %6957 = trunc i64 %6956 to i32
  br label %6958

6958:                                             ; preds = %6940, %6945
  %6959 = phi i32 [ %6957, %6945 ], [ %6942, %6940 ]
  store i32 %6959, i32* %106, align 4
  %6960 = sub nsw i32 %6902, %6903
  %6961 = load i8, i8* %6304, align 1
  %6962 = icmp slt i8 %6961, 1
  br i1 %6962, label %6976, label %6963

6963:                                             ; preds = %6958
  %6964 = sext i8 %6961 to i64
  %6965 = add nuw nsw i64 %6964, 4294967295
  %6966 = and i64 %6965, 4294967295
  %6967 = shl i64 1, %6966
  %6968 = add nsw i64 %6967, -1
  %6969 = sub nsw i64 0, %6967
  %6970 = sext i32 %6960 to i64
  %6971 = icmp slt i64 %6970, %6969
  %6972 = icmp slt i64 %6968, %6970
  %6973 = select i1 %6972, i64 %6968, i64 %6970
  %6974 = select i1 %6971, i64 %6969, i64 %6973
  %6975 = trunc i64 %6974 to i32
  br label %6976

6976:                                             ; preds = %6958, %6963
  %6977 = phi i32 [ %6975, %6963 ], [ %6960, %6958 ]
  store i32 %6977, i32* %109, align 4
  %6978 = sub nsw i32 %6882, %6883
  %6979 = load i8, i8* %6304, align 1
  %6980 = icmp slt i8 %6979, 1
  br i1 %6980, label %6994, label %6981

6981:                                             ; preds = %6976
  %6982 = sext i8 %6979 to i64
  %6983 = add nuw nsw i64 %6982, 4294967295
  %6984 = and i64 %6983, 4294967295
  %6985 = shl i64 1, %6984
  %6986 = add nsw i64 %6985, -1
  %6987 = sub nsw i64 0, %6985
  %6988 = sext i32 %6978 to i64
  %6989 = icmp slt i64 %6988, %6987
  %6990 = icmp slt i64 %6986, %6988
  %6991 = select i1 %6990, i64 %6986, i64 %6988
  %6992 = select i1 %6989, i64 %6987, i64 %6991
  %6993 = trunc i64 %6992 to i32
  br label %6994

6994:                                             ; preds = %6976, %6981
  %6995 = phi i32 [ %6993, %6981 ], [ %6978, %6976 ]
  store i32 %6995, i32* %112, align 4
  %6996 = sub nsw i32 %6862, %6863
  %6997 = load i8, i8* %6304, align 1
  %6998 = icmp slt i8 %6997, 1
  br i1 %6998, label %7012, label %6999

6999:                                             ; preds = %6994
  %7000 = sext i8 %6997 to i64
  %7001 = add nuw nsw i64 %7000, 4294967295
  %7002 = and i64 %7001, 4294967295
  %7003 = shl i64 1, %7002
  %7004 = add nsw i64 %7003, -1
  %7005 = sub nsw i64 0, %7003
  %7006 = sext i32 %6996 to i64
  %7007 = icmp slt i64 %7006, %7005
  %7008 = icmp slt i64 %7004, %7006
  %7009 = select i1 %7008, i64 %7004, i64 %7006
  %7010 = select i1 %7007, i64 %7005, i64 %7009
  %7011 = trunc i64 %7010 to i32
  br label %7012

7012:                                             ; preds = %6994, %6999
  %7013 = phi i32 [ %7011, %6999 ], [ %6996, %6994 ]
  store i32 %7013, i32* %115, align 4
  %7014 = sub nsw i32 %6842, %6843
  %7015 = load i8, i8* %6304, align 1
  %7016 = icmp slt i8 %7015, 1
  br i1 %7016, label %7030, label %7017

7017:                                             ; preds = %7012
  %7018 = sext i8 %7015 to i64
  %7019 = add nuw nsw i64 %7018, 4294967295
  %7020 = and i64 %7019, 4294967295
  %7021 = shl i64 1, %7020
  %7022 = add nsw i64 %7021, -1
  %7023 = sub nsw i64 0, %7021
  %7024 = sext i32 %7014 to i64
  %7025 = icmp slt i64 %7024, %7023
  %7026 = icmp slt i64 %7022, %7024
  %7027 = select i1 %7026, i64 %7022, i64 %7024
  %7028 = select i1 %7025, i64 %7023, i64 %7027
  %7029 = trunc i64 %7028 to i32
  br label %7030

7030:                                             ; preds = %7012, %7017
  %7031 = phi i32 [ %7029, %7017 ], [ %7014, %7012 ]
  store i32 %7031, i32* %118, align 4
  %7032 = sub nsw i32 %6822, %6823
  %7033 = load i8, i8* %6304, align 1
  %7034 = icmp slt i8 %7033, 1
  br i1 %7034, label %7048, label %7035

7035:                                             ; preds = %7030
  %7036 = sext i8 %7033 to i64
  %7037 = add nuw nsw i64 %7036, 4294967295
  %7038 = and i64 %7037, 4294967295
  %7039 = shl i64 1, %7038
  %7040 = add nsw i64 %7039, -1
  %7041 = sub nsw i64 0, %7039
  %7042 = sext i32 %7032 to i64
  %7043 = icmp slt i64 %7042, %7041
  %7044 = icmp slt i64 %7040, %7042
  %7045 = select i1 %7044, i64 %7040, i64 %7042
  %7046 = select i1 %7043, i64 %7041, i64 %7045
  %7047 = trunc i64 %7046 to i32
  br label %7048

7048:                                             ; preds = %7030, %7035
  %7049 = phi i32 [ %7047, %7035 ], [ %7032, %7030 ]
  store i32 %7049, i32* %121, align 4
  %7050 = sub nsw i32 %6802, %6803
  %7051 = load i8, i8* %6304, align 1
  %7052 = icmp slt i8 %7051, 1
  br i1 %7052, label %7066, label %7053

7053:                                             ; preds = %7048
  %7054 = sext i8 %7051 to i64
  %7055 = add nuw nsw i64 %7054, 4294967295
  %7056 = and i64 %7055, 4294967295
  %7057 = shl i64 1, %7056
  %7058 = add nsw i64 %7057, -1
  %7059 = sub nsw i64 0, %7057
  %7060 = sext i32 %7050 to i64
  %7061 = icmp slt i64 %7060, %7059
  %7062 = icmp slt i64 %7058, %7060
  %7063 = select i1 %7062, i64 %7058, i64 %7060
  %7064 = select i1 %7061, i64 %7059, i64 %7063
  %7065 = trunc i64 %7064 to i32
  br label %7066

7066:                                             ; preds = %7048, %7053
  %7067 = phi i32 [ %7065, %7053 ], [ %7050, %7048 ]
  store i32 %7067, i32* %124, align 4
  %7068 = sub nsw i32 %6782, %6783
  %7069 = load i8, i8* %6304, align 1
  %7070 = icmp slt i8 %7069, 1
  br i1 %7070, label %7084, label %7071

7071:                                             ; preds = %7066
  %7072 = sext i8 %7069 to i64
  %7073 = add nuw nsw i64 %7072, 4294967295
  %7074 = and i64 %7073, 4294967295
  %7075 = shl i64 1, %7074
  %7076 = add nsw i64 %7075, -1
  %7077 = sub nsw i64 0, %7075
  %7078 = sext i32 %7068 to i64
  %7079 = icmp slt i64 %7078, %7077
  %7080 = icmp slt i64 %7076, %7078
  %7081 = select i1 %7080, i64 %7076, i64 %7078
  %7082 = select i1 %7079, i64 %7077, i64 %7081
  %7083 = trunc i64 %7082 to i32
  br label %7084

7084:                                             ; preds = %7066, %7071
  %7085 = phi i32 [ %7083, %7071 ], [ %7068, %7066 ]
  store i32 %7085, i32* %127, align 4
  %7086 = sub nsw i32 %6762, %6763
  %7087 = load i8, i8* %6304, align 1
  %7088 = icmp slt i8 %7087, 1
  br i1 %7088, label %7102, label %7089

7089:                                             ; preds = %7084
  %7090 = sext i8 %7087 to i64
  %7091 = add nuw nsw i64 %7090, 4294967295
  %7092 = and i64 %7091, 4294967295
  %7093 = shl i64 1, %7092
  %7094 = add nsw i64 %7093, -1
  %7095 = sub nsw i64 0, %7093
  %7096 = sext i32 %7086 to i64
  %7097 = icmp slt i64 %7096, %7095
  %7098 = icmp slt i64 %7094, %7096
  %7099 = select i1 %7098, i64 %7094, i64 %7096
  %7100 = select i1 %7097, i64 %7095, i64 %7099
  %7101 = trunc i64 %7100 to i32
  br label %7102

7102:                                             ; preds = %7084, %7089
  %7103 = phi i32 [ %7101, %7089 ], [ %7086, %7084 ]
  store i32 %7103, i32* %130, align 4
  %7104 = sub nsw i32 %6742, %6743
  %7105 = load i8, i8* %6304, align 1
  %7106 = icmp slt i8 %7105, 1
  br i1 %7106, label %7120, label %7107

7107:                                             ; preds = %7102
  %7108 = sext i8 %7105 to i64
  %7109 = add nuw nsw i64 %7108, 4294967295
  %7110 = and i64 %7109, 4294967295
  %7111 = shl i64 1, %7110
  %7112 = add nsw i64 %7111, -1
  %7113 = sub nsw i64 0, %7111
  %7114 = sext i32 %7104 to i64
  %7115 = icmp slt i64 %7114, %7113
  %7116 = icmp slt i64 %7112, %7114
  %7117 = select i1 %7116, i64 %7112, i64 %7114
  %7118 = select i1 %7115, i64 %7113, i64 %7117
  %7119 = trunc i64 %7118 to i32
  br label %7120

7120:                                             ; preds = %7102, %7107
  %7121 = phi i32 [ %7119, %7107 ], [ %7104, %7102 ]
  store i32 %7121, i32* %133, align 4
  %7122 = sub nsw i32 %6722, %6723
  %7123 = load i8, i8* %6304, align 1
  %7124 = icmp slt i8 %7123, 1
  br i1 %7124, label %7138, label %7125

7125:                                             ; preds = %7120
  %7126 = sext i8 %7123 to i64
  %7127 = add nuw nsw i64 %7126, 4294967295
  %7128 = and i64 %7127, 4294967295
  %7129 = shl i64 1, %7128
  %7130 = add nsw i64 %7129, -1
  %7131 = sub nsw i64 0, %7129
  %7132 = sext i32 %7122 to i64
  %7133 = icmp slt i64 %7132, %7131
  %7134 = icmp slt i64 %7130, %7132
  %7135 = select i1 %7134, i64 %7130, i64 %7132
  %7136 = select i1 %7133, i64 %7131, i64 %7135
  %7137 = trunc i64 %7136 to i32
  br label %7138

7138:                                             ; preds = %7120, %7125
  %7139 = phi i32 [ %7137, %7125 ], [ %7122, %7120 ]
  store i32 %7139, i32* %136, align 4
  %7140 = sub nsw i32 %6702, %6703
  %7141 = load i8, i8* %6304, align 1
  %7142 = icmp slt i8 %7141, 1
  br i1 %7142, label %7156, label %7143

7143:                                             ; preds = %7138
  %7144 = sext i8 %7141 to i64
  %7145 = add nuw nsw i64 %7144, 4294967295
  %7146 = and i64 %7145, 4294967295
  %7147 = shl i64 1, %7146
  %7148 = add nsw i64 %7147, -1
  %7149 = sub nsw i64 0, %7147
  %7150 = sext i32 %7140 to i64
  %7151 = icmp slt i64 %7150, %7149
  %7152 = icmp slt i64 %7148, %7150
  %7153 = select i1 %7152, i64 %7148, i64 %7150
  %7154 = select i1 %7151, i64 %7149, i64 %7153
  %7155 = trunc i64 %7154 to i32
  br label %7156

7156:                                             ; preds = %7138, %7143
  %7157 = phi i32 [ %7155, %7143 ], [ %7140, %7138 ]
  store i32 %7157, i32* %139, align 4
  %7158 = sub nsw i32 %6682, %6683
  %7159 = load i8, i8* %6304, align 1
  %7160 = icmp slt i8 %7159, 1
  br i1 %7160, label %7174, label %7161

7161:                                             ; preds = %7156
  %7162 = sext i8 %7159 to i64
  %7163 = add nuw nsw i64 %7162, 4294967295
  %7164 = and i64 %7163, 4294967295
  %7165 = shl i64 1, %7164
  %7166 = add nsw i64 %7165, -1
  %7167 = sub nsw i64 0, %7165
  %7168 = sext i32 %7158 to i64
  %7169 = icmp slt i64 %7168, %7167
  %7170 = icmp slt i64 %7166, %7168
  %7171 = select i1 %7170, i64 %7166, i64 %7168
  %7172 = select i1 %7169, i64 %7167, i64 %7171
  %7173 = trunc i64 %7172 to i32
  br label %7174

7174:                                             ; preds = %7156, %7161
  %7175 = phi i32 [ %7173, %7161 ], [ %7158, %7156 ]
  store i32 %7175, i32* %142, align 4
  %7176 = sub nsw i32 %6662, %6663
  %7177 = load i8, i8* %6304, align 1
  %7178 = icmp slt i8 %7177, 1
  br i1 %7178, label %7192, label %7179

7179:                                             ; preds = %7174
  %7180 = sext i8 %7177 to i64
  %7181 = add nuw nsw i64 %7180, 4294967295
  %7182 = and i64 %7181, 4294967295
  %7183 = shl i64 1, %7182
  %7184 = add nsw i64 %7183, -1
  %7185 = sub nsw i64 0, %7183
  %7186 = sext i32 %7176 to i64
  %7187 = icmp slt i64 %7186, %7185
  %7188 = icmp slt i64 %7184, %7186
  %7189 = select i1 %7188, i64 %7184, i64 %7186
  %7190 = select i1 %7187, i64 %7185, i64 %7189
  %7191 = trunc i64 %7190 to i32
  br label %7192

7192:                                             ; preds = %7174, %7179
  %7193 = phi i32 [ %7191, %7179 ], [ %7176, %7174 ]
  store i32 %7193, i32* %145, align 4
  %7194 = sub nsw i32 %6642, %6643
  %7195 = load i8, i8* %6304, align 1
  %7196 = icmp slt i8 %7195, 1
  br i1 %7196, label %7210, label %7197

7197:                                             ; preds = %7192
  %7198 = sext i8 %7195 to i64
  %7199 = add nuw nsw i64 %7198, 4294967295
  %7200 = and i64 %7199, 4294967295
  %7201 = shl i64 1, %7200
  %7202 = add nsw i64 %7201, -1
  %7203 = sub nsw i64 0, %7201
  %7204 = sext i32 %7194 to i64
  %7205 = icmp slt i64 %7204, %7203
  %7206 = icmp slt i64 %7202, %7204
  %7207 = select i1 %7206, i64 %7202, i64 %7204
  %7208 = select i1 %7205, i64 %7203, i64 %7207
  %7209 = trunc i64 %7208 to i32
  br label %7210

7210:                                             ; preds = %7192, %7197
  %7211 = phi i32 [ %7209, %7197 ], [ %7194, %7192 ]
  store i32 %7211, i32* %148, align 4
  %7212 = sub nsw i32 %6622, %6623
  %7213 = load i8, i8* %6304, align 1
  %7214 = icmp slt i8 %7213, 1
  br i1 %7214, label %7228, label %7215

7215:                                             ; preds = %7210
  %7216 = sext i8 %7213 to i64
  %7217 = add nuw nsw i64 %7216, 4294967295
  %7218 = and i64 %7217, 4294967295
  %7219 = shl i64 1, %7218
  %7220 = add nsw i64 %7219, -1
  %7221 = sub nsw i64 0, %7219
  %7222 = sext i32 %7212 to i64
  %7223 = icmp slt i64 %7222, %7221
  %7224 = icmp slt i64 %7220, %7222
  %7225 = select i1 %7224, i64 %7220, i64 %7222
  %7226 = select i1 %7223, i64 %7221, i64 %7225
  %7227 = trunc i64 %7226 to i32
  br label %7228

7228:                                             ; preds = %7210, %7215
  %7229 = phi i32 [ %7227, %7215 ], [ %7212, %7210 ]
  store i32 %7229, i32* %151, align 4
  %7230 = sub nsw i32 %6602, %6603
  %7231 = load i8, i8* %6304, align 1
  %7232 = icmp slt i8 %7231, 1
  br i1 %7232, label %7246, label %7233

7233:                                             ; preds = %7228
  %7234 = sext i8 %7231 to i64
  %7235 = add nuw nsw i64 %7234, 4294967295
  %7236 = and i64 %7235, 4294967295
  %7237 = shl i64 1, %7236
  %7238 = add nsw i64 %7237, -1
  %7239 = sub nsw i64 0, %7237
  %7240 = sext i32 %7230 to i64
  %7241 = icmp slt i64 %7240, %7239
  %7242 = icmp slt i64 %7238, %7240
  %7243 = select i1 %7242, i64 %7238, i64 %7240
  %7244 = select i1 %7241, i64 %7239, i64 %7243
  %7245 = trunc i64 %7244 to i32
  br label %7246

7246:                                             ; preds = %7228, %7233
  %7247 = phi i32 [ %7245, %7233 ], [ %7230, %7228 ]
  store i32 %7247, i32* %154, align 4
  %7248 = sub nsw i32 %6582, %6583
  %7249 = load i8, i8* %6304, align 1
  %7250 = icmp slt i8 %7249, 1
  br i1 %7250, label %7264, label %7251

7251:                                             ; preds = %7246
  %7252 = sext i8 %7249 to i64
  %7253 = add nuw nsw i64 %7252, 4294967295
  %7254 = and i64 %7253, 4294967295
  %7255 = shl i64 1, %7254
  %7256 = add nsw i64 %7255, -1
  %7257 = sub nsw i64 0, %7255
  %7258 = sext i32 %7248 to i64
  %7259 = icmp slt i64 %7258, %7257
  %7260 = icmp slt i64 %7256, %7258
  %7261 = select i1 %7260, i64 %7256, i64 %7258
  %7262 = select i1 %7259, i64 %7257, i64 %7261
  %7263 = trunc i64 %7262 to i32
  br label %7264

7264:                                             ; preds = %7246, %7251
  %7265 = phi i32 [ %7263, %7251 ], [ %7248, %7246 ]
  store i32 %7265, i32* %157, align 4
  %7266 = sub nsw i32 %6562, %6563
  %7267 = load i8, i8* %6304, align 1
  %7268 = icmp slt i8 %7267, 1
  br i1 %7268, label %7282, label %7269

7269:                                             ; preds = %7264
  %7270 = sext i8 %7267 to i64
  %7271 = add nuw nsw i64 %7270, 4294967295
  %7272 = and i64 %7271, 4294967295
  %7273 = shl i64 1, %7272
  %7274 = add nsw i64 %7273, -1
  %7275 = sub nsw i64 0, %7273
  %7276 = sext i32 %7266 to i64
  %7277 = icmp slt i64 %7276, %7275
  %7278 = icmp slt i64 %7274, %7276
  %7279 = select i1 %7278, i64 %7274, i64 %7276
  %7280 = select i1 %7277, i64 %7275, i64 %7279
  %7281 = trunc i64 %7280 to i32
  br label %7282

7282:                                             ; preds = %7264, %7269
  %7283 = phi i32 [ %7281, %7269 ], [ %7266, %7264 ]
  store i32 %7283, i32* %160, align 4
  %7284 = sub nsw i32 %6542, %6543
  %7285 = load i8, i8* %6304, align 1
  %7286 = icmp slt i8 %7285, 1
  br i1 %7286, label %7300, label %7287

7287:                                             ; preds = %7282
  %7288 = sext i8 %7285 to i64
  %7289 = add nuw nsw i64 %7288, 4294967295
  %7290 = and i64 %7289, 4294967295
  %7291 = shl i64 1, %7290
  %7292 = add nsw i64 %7291, -1
  %7293 = sub nsw i64 0, %7291
  %7294 = sext i32 %7284 to i64
  %7295 = icmp slt i64 %7294, %7293
  %7296 = icmp slt i64 %7292, %7294
  %7297 = select i1 %7296, i64 %7292, i64 %7294
  %7298 = select i1 %7295, i64 %7293, i64 %7297
  %7299 = trunc i64 %7298 to i32
  br label %7300

7300:                                             ; preds = %7282, %7287
  %7301 = phi i32 [ %7299, %7287 ], [ %7284, %7282 ]
  store i32 %7301, i32* %163, align 4
  %7302 = sub nsw i32 %6522, %6523
  %7303 = load i8, i8* %6304, align 1
  %7304 = icmp slt i8 %7303, 1
  br i1 %7304, label %7318, label %7305

7305:                                             ; preds = %7300
  %7306 = sext i8 %7303 to i64
  %7307 = add nuw nsw i64 %7306, 4294967295
  %7308 = and i64 %7307, 4294967295
  %7309 = shl i64 1, %7308
  %7310 = add nsw i64 %7309, -1
  %7311 = sub nsw i64 0, %7309
  %7312 = sext i32 %7302 to i64
  %7313 = icmp slt i64 %7312, %7311
  %7314 = icmp slt i64 %7310, %7312
  %7315 = select i1 %7314, i64 %7310, i64 %7312
  %7316 = select i1 %7313, i64 %7311, i64 %7315
  %7317 = trunc i64 %7316 to i32
  br label %7318

7318:                                             ; preds = %7300, %7305
  %7319 = phi i32 [ %7317, %7305 ], [ %7302, %7300 ]
  store i32 %7319, i32* %166, align 4
  %7320 = sub nsw i32 %6502, %6503
  %7321 = load i8, i8* %6304, align 1
  %7322 = icmp slt i8 %7321, 1
  br i1 %7322, label %7336, label %7323

7323:                                             ; preds = %7318
  %7324 = sext i8 %7321 to i64
  %7325 = add nuw nsw i64 %7324, 4294967295
  %7326 = and i64 %7325, 4294967295
  %7327 = shl i64 1, %7326
  %7328 = add nsw i64 %7327, -1
  %7329 = sub nsw i64 0, %7327
  %7330 = sext i32 %7320 to i64
  %7331 = icmp slt i64 %7330, %7329
  %7332 = icmp slt i64 %7328, %7330
  %7333 = select i1 %7332, i64 %7328, i64 %7330
  %7334 = select i1 %7331, i64 %7329, i64 %7333
  %7335 = trunc i64 %7334 to i32
  br label %7336

7336:                                             ; preds = %7318, %7323
  %7337 = phi i32 [ %7335, %7323 ], [ %7320, %7318 ]
  store i32 %7337, i32* %169, align 4
  %7338 = sub nsw i32 %6482, %6483
  %7339 = load i8, i8* %6304, align 1
  %7340 = icmp slt i8 %7339, 1
  br i1 %7340, label %7354, label %7341

7341:                                             ; preds = %7336
  %7342 = sext i8 %7339 to i64
  %7343 = add nuw nsw i64 %7342, 4294967295
  %7344 = and i64 %7343, 4294967295
  %7345 = shl i64 1, %7344
  %7346 = add nsw i64 %7345, -1
  %7347 = sub nsw i64 0, %7345
  %7348 = sext i32 %7338 to i64
  %7349 = icmp slt i64 %7348, %7347
  %7350 = icmp slt i64 %7346, %7348
  %7351 = select i1 %7350, i64 %7346, i64 %7348
  %7352 = select i1 %7349, i64 %7347, i64 %7351
  %7353 = trunc i64 %7352 to i32
  br label %7354

7354:                                             ; preds = %7336, %7341
  %7355 = phi i32 [ %7353, %7341 ], [ %7338, %7336 ]
  store i32 %7355, i32* %172, align 4
  %7356 = sub nsw i32 %6462, %6463
  %7357 = load i8, i8* %6304, align 1
  %7358 = icmp slt i8 %7357, 1
  br i1 %7358, label %7372, label %7359

7359:                                             ; preds = %7354
  %7360 = sext i8 %7357 to i64
  %7361 = add nuw nsw i64 %7360, 4294967295
  %7362 = and i64 %7361, 4294967295
  %7363 = shl i64 1, %7362
  %7364 = add nsw i64 %7363, -1
  %7365 = sub nsw i64 0, %7363
  %7366 = sext i32 %7356 to i64
  %7367 = icmp slt i64 %7366, %7365
  %7368 = icmp slt i64 %7364, %7366
  %7369 = select i1 %7368, i64 %7364, i64 %7366
  %7370 = select i1 %7367, i64 %7365, i64 %7369
  %7371 = trunc i64 %7370 to i32
  br label %7372

7372:                                             ; preds = %7354, %7359
  %7373 = phi i32 [ %7371, %7359 ], [ %7356, %7354 ]
  store i32 %7373, i32* %175, align 4
  %7374 = sub nsw i32 %6442, %6443
  %7375 = load i8, i8* %6304, align 1
  %7376 = icmp slt i8 %7375, 1
  br i1 %7376, label %7390, label %7377

7377:                                             ; preds = %7372
  %7378 = sext i8 %7375 to i64
  %7379 = add nuw nsw i64 %7378, 4294967295
  %7380 = and i64 %7379, 4294967295
  %7381 = shl i64 1, %7380
  %7382 = add nsw i64 %7381, -1
  %7383 = sub nsw i64 0, %7381
  %7384 = sext i32 %7374 to i64
  %7385 = icmp slt i64 %7384, %7383
  %7386 = icmp slt i64 %7382, %7384
  %7387 = select i1 %7386, i64 %7382, i64 %7384
  %7388 = select i1 %7385, i64 %7383, i64 %7387
  %7389 = trunc i64 %7388 to i32
  br label %7390

7390:                                             ; preds = %7372, %7377
  %7391 = phi i32 [ %7389, %7377 ], [ %7374, %7372 ]
  store i32 %7391, i32* %178, align 4
  %7392 = sub nsw i32 %6422, %6423
  %7393 = load i8, i8* %6304, align 1
  %7394 = icmp slt i8 %7393, 1
  br i1 %7394, label %7408, label %7395

7395:                                             ; preds = %7390
  %7396 = sext i8 %7393 to i64
  %7397 = add nuw nsw i64 %7396, 4294967295
  %7398 = and i64 %7397, 4294967295
  %7399 = shl i64 1, %7398
  %7400 = add nsw i64 %7399, -1
  %7401 = sub nsw i64 0, %7399
  %7402 = sext i32 %7392 to i64
  %7403 = icmp slt i64 %7402, %7401
  %7404 = icmp slt i64 %7400, %7402
  %7405 = select i1 %7404, i64 %7400, i64 %7402
  %7406 = select i1 %7403, i64 %7401, i64 %7405
  %7407 = trunc i64 %7406 to i32
  br label %7408

7408:                                             ; preds = %7390, %7395
  %7409 = phi i32 [ %7407, %7395 ], [ %7392, %7390 ]
  store i32 %7409, i32* %181, align 4
  %7410 = sub nsw i32 %6402, %6403
  %7411 = load i8, i8* %6304, align 1
  %7412 = icmp slt i8 %7411, 1
  br i1 %7412, label %7426, label %7413

7413:                                             ; preds = %7408
  %7414 = sext i8 %7411 to i64
  %7415 = add nuw nsw i64 %7414, 4294967295
  %7416 = and i64 %7415, 4294967295
  %7417 = shl i64 1, %7416
  %7418 = add nsw i64 %7417, -1
  %7419 = sub nsw i64 0, %7417
  %7420 = sext i32 %7410 to i64
  %7421 = icmp slt i64 %7420, %7419
  %7422 = icmp slt i64 %7418, %7420
  %7423 = select i1 %7422, i64 %7418, i64 %7420
  %7424 = select i1 %7421, i64 %7419, i64 %7423
  %7425 = trunc i64 %7424 to i32
  br label %7426

7426:                                             ; preds = %7408, %7413
  %7427 = phi i32 [ %7425, %7413 ], [ %7410, %7408 ]
  store i32 %7427, i32* %184, align 4
  %7428 = sub nsw i32 %6382, %6383
  %7429 = load i8, i8* %6304, align 1
  %7430 = icmp slt i8 %7429, 1
  br i1 %7430, label %7444, label %7431

7431:                                             ; preds = %7426
  %7432 = sext i8 %7429 to i64
  %7433 = add nuw nsw i64 %7432, 4294967295
  %7434 = and i64 %7433, 4294967295
  %7435 = shl i64 1, %7434
  %7436 = add nsw i64 %7435, -1
  %7437 = sub nsw i64 0, %7435
  %7438 = sext i32 %7428 to i64
  %7439 = icmp slt i64 %7438, %7437
  %7440 = icmp slt i64 %7436, %7438
  %7441 = select i1 %7440, i64 %7436, i64 %7438
  %7442 = select i1 %7439, i64 %7437, i64 %7441
  %7443 = trunc i64 %7442 to i32
  br label %7444

7444:                                             ; preds = %7426, %7431
  %7445 = phi i32 [ %7443, %7431 ], [ %7428, %7426 ]
  store i32 %7445, i32* %187, align 4
  %7446 = sub nsw i32 %6362, %6363
  %7447 = load i8, i8* %6304, align 1
  %7448 = icmp slt i8 %7447, 1
  br i1 %7448, label %7462, label %7449

7449:                                             ; preds = %7444
  %7450 = sext i8 %7447 to i64
  %7451 = add nuw nsw i64 %7450, 4294967295
  %7452 = and i64 %7451, 4294967295
  %7453 = shl i64 1, %7452
  %7454 = add nsw i64 %7453, -1
  %7455 = sub nsw i64 0, %7453
  %7456 = sext i32 %7446 to i64
  %7457 = icmp slt i64 %7456, %7455
  %7458 = icmp slt i64 %7454, %7456
  %7459 = select i1 %7458, i64 %7454, i64 %7456
  %7460 = select i1 %7457, i64 %7455, i64 %7459
  %7461 = trunc i64 %7460 to i32
  br label %7462

7462:                                             ; preds = %7444, %7449
  %7463 = phi i32 [ %7461, %7449 ], [ %7446, %7444 ]
  store i32 %7463, i32* %190, align 4
  %7464 = sub nsw i32 %6342, %6343
  %7465 = load i8, i8* %6304, align 1
  %7466 = icmp slt i8 %7465, 1
  br i1 %7466, label %7480, label %7467

7467:                                             ; preds = %7462
  %7468 = sext i8 %7465 to i64
  %7469 = add nuw nsw i64 %7468, 4294967295
  %7470 = and i64 %7469, 4294967295
  %7471 = shl i64 1, %7470
  %7472 = add nsw i64 %7471, -1
  %7473 = sub nsw i64 0, %7471
  %7474 = sext i32 %7464 to i64
  %7475 = icmp slt i64 %7474, %7473
  %7476 = icmp slt i64 %7472, %7474
  %7477 = select i1 %7476, i64 %7472, i64 %7474
  %7478 = select i1 %7475, i64 %7473, i64 %7477
  %7479 = trunc i64 %7478 to i32
  br label %7480

7480:                                             ; preds = %7462, %7467
  %7481 = phi i32 [ %7479, %7467 ], [ %7464, %7462 ]
  store i32 %7481, i32* %193, align 4
  %7482 = sub nsw i32 %6322, %6323
  %7483 = load i8, i8* %6304, align 1
  %7484 = icmp slt i8 %7483, 1
  br i1 %7484, label %7498, label %7485

7485:                                             ; preds = %7480
  %7486 = sext i8 %7483 to i64
  %7487 = add nuw nsw i64 %7486, 4294967295
  %7488 = and i64 %7487, 4294967295
  %7489 = shl i64 1, %7488
  %7490 = add nsw i64 %7489, -1
  %7491 = sub nsw i64 0, %7489
  %7492 = sext i32 %7482 to i64
  %7493 = icmp slt i64 %7492, %7491
  %7494 = icmp slt i64 %7490, %7492
  %7495 = select i1 %7494, i64 %7490, i64 %7492
  %7496 = select i1 %7493, i64 %7491, i64 %7495
  %7497 = trunc i64 %7496 to i32
  br label %7498

7498:                                             ; preds = %7480, %7485
  %7499 = phi i32 [ %7497, %7485 ], [ %7482, %7480 ]
  store i32 %7499, i32* %196, align 4
  %7500 = sub nsw i32 %6301, %6302
  %7501 = load i8, i8* %6304, align 1
  %7502 = icmp slt i8 %7501, 1
  br i1 %7502, label %7516, label %7503

7503:                                             ; preds = %7498
  %7504 = sext i8 %7501 to i64
  %7505 = add nuw nsw i64 %7504, 4294967295
  %7506 = and i64 %7505, 4294967295
  %7507 = shl i64 1, %7506
  %7508 = add nsw i64 %7507, -1
  %7509 = sub nsw i64 0, %7507
  %7510 = sext i32 %7500 to i64
  %7511 = icmp slt i64 %7510, %7509
  %7512 = icmp slt i64 %7508, %7510
  %7513 = select i1 %7512, i64 %7508, i64 %7510
  %7514 = select i1 %7511, i64 %7509, i64 %7513
  %7515 = trunc i64 %7514 to i32
  br label %7516

7516:                                             ; preds = %7498, %7503
  %7517 = phi i32 [ %7515, %7503 ], [ %7500, %7498 ]
  store i32 %7517, i32* %199, align 4
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
